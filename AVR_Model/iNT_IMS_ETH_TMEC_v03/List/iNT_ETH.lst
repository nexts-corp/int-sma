
AVRASM ver. 2.1.30  C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm Mon Dec 14 10:44:33 2015

C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 3468 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 40b6 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 40c7 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 40c3 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 40bf 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 3e62 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 40e0 	JMP  _timer3_ovf_isr
000048 940c 3f84 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 40fc 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 3f90 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 3fae 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 2e30
000077 3432
000078 0062      	.DB  0x30,0x2E,0x32,0x34,0x62,0x0
                 _tempTable:
000079 0000
00007a c2a0
00007b 0000
00007c c28c      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0x8C,0xC2
00007d 0000
00007e c270
00007f 0000
000080 c248      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0x48,0xC2
000081 0000
000082 c220
000083 0000
000084 c1f0      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0xF0,0xC1
000085 0000
000086 c1a0
000087 0000
000088 c120      	.DB  0x0,0x0,0xA0,0xC1,0x0,0x0,0x20,0xC1
000089 0000
00008a 0000
00008b 0000
00008c 4120      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x41
00008d 0000
00008e 41a0
00008f 0000
000090 41f0      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0xF0,0x41
000091 0000
000092 4220
000093 0000
000094 4248      	.DB  0x0,0x0,0x20,0x42,0x0,0x0,0x48,0x42
000095 0000
000096 4270      	.DB  0x0,0x0,0x70,0x42
                 _adcTable:
000097 6333
000098 4391
000099 85fa
00009a 439a      	.DB  0x33,0x63,0x91,0x43,0xFA,0x85,0x9A,0x43
00009b 5c05
00009c 43a3
00009d e979
00009e 43ab      	.DB  0x5,0x5C,0xA3,0x43,0x79,0xE9,0xAB,0x43
00009f 3237
0000a0 43b4
0000a1 39a0
0000a2 43bc      	.DB  0x37,0x32,0xB4,0x43,0xA0,0x39,0xBC,0x43
0000a3 030f
0000a4 43c4
0000a5 917f
0000a6 43cb      	.DB  0xF,0x3,0xC4,0x43,0x7F,0x91,0xCB,0x43
0000a7 e7ab
0000a8 43d2
0000a9 0810
0000aa 43da      	.DB  0xAB,0xE7,0xD2,0x43,0x10,0x8,0xDA,0x43
0000ab f4fb
0000ac 43e0
0000ad b08d
0000ae 43e7      	.DB  0xFB,0xF4,0xE0,0x43,0x8D,0xB0,0xE7,0x43
0000af 3cc6
0000b0 43ee
0000b1 9b99
0000b2 43f4      	.DB  0xC6,0x3C,0xEE,0x43,0x99,0x9B,0xF4,0x43
0000b3 ceb5
0000b4 43fa      	.DB  0xB5,0xCE,0xFA,0x43
                 _error_msg:
0000b5 4ce6
0000b6 0000
0000b7 4ce7
0000b8 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
0000b9 4cf3
0000ba 0000
0000bb 4cfe
0000bc 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
0000bd 4d0b
0000be 0000
0000bf 4d16
0000c0 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
0000c1 4d21
0000c2 0000
0000c3 4d31
0000c4 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
0000c5 4d3b
0000c6 0000
0000c7 4d44
0000c8 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
0000c9 4d56
0000ca 0000
0000cb 4d69
0000cc 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
0000cd 4d7a
0000ce 0000
0000cf 4d89
0000d0 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
0000d1 4d9a
0000d2 0000
0000d3 4daa
0000d4 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
0000d5 4324
0000d6 444d
0000d7 4453
0000d8 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
0000d9 4324
0000da 444d
0000db 4152
0000dc 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000dd 4324
0000de 444d
0000df 4c43
0000e0 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000e1 4324
0000e2 444d
0000e3 5653
0000e4 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000e5 4324
0000e6 444d
0000e7 4e53
0000e8 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000e9 4324
0000ea 444d
0000eb 4544
0000ec 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000ed 4324
0000ee 444d
0000ef 4444
0000f0 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000f1 4324
0000f2 444d
0000f3 5353
0000f4 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000f5 4324
0000f6 444d
0000f7 5352
0000f8 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _k1:
0000f9 2220
0000fa 2b2a
0000fb 5b2c
0000fc 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
0000fd 7f7c
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1236): warning: .cseg .db misalignment - padding zero byte
0000fe 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
0000ff 0000
000100 0000      	.DW  0,0
                 
                 _0x3:
000101 0000
000102 0000
000103 0000
000104 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000105 0000
000106 0000
000107 0000
000108 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000109 0000
00010a 0000
00010b 0000
00010c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1246): warning: .cseg .db misalignment - padding zero byte
00010d 0000      	.DB  0x0
                 _0xA5:
00010e ffff
00010f ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
000110 0a0d
000111 2d2d
000112 2d2d
000113 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000114 4920
000115 696e
000116 6974
000117 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
000118 4320
000119 6d6f
00011a 6c70
00011b 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
00011c 2065
00011d 2d2d
00011e 2d2d
00011f 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000120 0a0d
000121 4300
000122 6e6f
000123 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
000124 7463
000125 3a20
000126 6320
000127 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
000128 6174
000129 7463
00012a 742e
00012b 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
00012c 6e61
00012d 6740
00012e 616d
00012f 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
000130 632e
000131 6d6f
000132 0a0d
000133 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
000134 616d
000135 6e69
000136 203e
000137 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
000138 5374
000139 6e65
00013a 6f73
00013b 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
00013c 6e6f
00013d 6966
00013e 2867
00013f 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000140 2029
000141 7265
000142 6f72
000143 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
000144 000a
000145 6d3c
000146 6961
000147 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
000148 6120
000149 6464
00014a 6553
00014b 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
00014c 726f
00014d 6144
00014e 6174
00014f 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000150 7565
000151 2865
000152 6425
000153 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
000154 312e
000155 2966
000156 6620
000157 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
000158 656c
000159 0d64
00015a 000a
00015b 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
00015c 6961
00015d 3e6e
00015e 7520
00015f 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000160 7461
000161 5365
000162 6174
000163 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
000164 2873
000165 2029
000166 6166
000167 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000168 6465
000169 0a0d
00016a 3c00
00016b 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
00016c 6e69
00016d 203e
00016e 706f
00016f 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000170 7461
000171 6e69
000172 2067
000173 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
000174 6564
000175 6520
000176 7272
000177 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
000178 2121
000179 5b20
00017a 7830
00017b 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
00017c 5832
00017d 0d5d
00017e 000a
00017f 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000180 6961
000181 3e6e
000182 5320
000183 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
000184 6572
000185 6461
000186 654d
000187 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
000188 7972
000189 6552
00018a 616d
00018b 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
00018c 2928
00018d 6620
00018e 6961
00018f 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000190 0d64
000191 000a
000192 6d3c
000193 6961      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6D,0x61,0x69
000194 3e6e
000195 5b20
000196 6544
000197 6976      	.DB  0x6E,0x3E,0x20,0x5B,0x44,0x65,0x76,0x69
000198 6563
000199 6420
00019a 7369
00019b 6261      	.DB  0x63,0x65,0x20,0x64,0x69,0x73,0x61,0x62
00019c 656c
00019d 205d
00019e 545b
00019f 5059      	.DB  0x6C,0x65,0x5D,0x20,0x5B,0x54,0x59,0x50
0001a0 2d45
0001a1 5d4b
0001a2 2420
0001a3 4d43      	.DB  0x45,0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D
0001a4 5344
0001a5 534e
0001a6 4e20
0001a7 3a20      	.DB  0x44,0x53,0x4E,0x53,0x20,0x4E,0x20,0x3A
0001a8 5820
0001a9 582e
0001aa 2058
0001ab 2020      	.DB  0x20,0x58,0x2E,0x58,0x58,0x20,0x20,0x20
0001ac 2020
0001ad 2020
0001ae 2020
0001af 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001b0 2020
0001b1 2020
0001b2 2020
0001b3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001b4 0d20
0001b5 3c00
0001b6 616d
0001b7 6e69      	.DB  0x20,0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E
0001b8 203e
0001b9 445b
0001ba 7665
0001bb 6369      	.DB  0x3E,0x20,0x5B,0x44,0x65,0x76,0x69,0x63
0001bc 2065
0001bd 6964
0001be 6173
0001bf 6c62      	.DB  0x65,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
0001c0 5d65
0001c1 5b20
0001c2 5954
0001c3 4550      	.DB  0x65,0x5D,0x20,0x5B,0x54,0x59,0x50,0x45
0001c4 4b2d
0001c5 205d
0001c6 4324
0001c7 444d      	.DB  0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44
0001c8 4e53
0001c9 2053
0001ca 6425
0001cb 3a20      	.DB  0x53,0x4E,0x53,0x20,0x25,0x64,0x20,0x3A
0001cc 2520
0001cd 2066
0001ce 2020
0001cf 2020      	.DB  0x20,0x25,0x66,0x20,0x20,0x20,0x20,0x20
0001d0 2020
0001d1 2020
0001d2 2020
0001d3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001d4 2020
0001d5 2020
0001d6 2020
0001d7 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001d8 000d
0001d9 6d3c
0001da 6961
0001db 3e6e      	.DB  0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
0001dc 5b20
0001dd 6544
0001de 6976
0001df 6563      	.DB  0x20,0x5B,0x44,0x65,0x76,0x69,0x63,0x65
0001e0 6420
0001e1 7369
0001e2 6261
0001e3 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
0001e4 205d
0001e5 545b
0001e6 5059
0001e7 2d45      	.DB  0x5D,0x20,0x5B,0x54,0x59,0x50,0x45,0x2D
0001e8 5d4b
0001e9 2420
0001ea 4d43
0001eb 5344      	.DB  0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44,0x53
0001ec 534e
0001ed 2520
0001ee 2064
0001ef 203a      	.DB  0x4E,0x53,0x20,0x25,0x64,0x20,0x3A,0x20
0001f0 6964
0001f1 6373
0001f2 6e6f
0001f3 656e      	.DB  0x64,0x69,0x73,0x63,0x6F,0x6E,0x6E,0x65
0001f4 7463
0001f5 6465
0001f6 2020
0001f7 2020      	.DB  0x63,0x74,0x65,0x64,0x20,0x20,0x20,0x20
0001f8 2020
0001f9 2020
0001fa 2020
0001fb 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
0001fc 3c00
0001fd 616d
0001fe 6e69
0001ff 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000200 445b
000201 7665
000202 6369
000203 2065      	.DB  0x5B,0x44,0x65,0x76,0x69,0x63,0x65,0x20
000204 6964
000205 6173
000206 6c62
000207 5d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x5D
000208 5b20
000209 4d54
00020a 4345
00020b 205d      	.DB  0x20,0x5B,0x54,0x4D,0x45,0x43,0x5D,0x20
00020c 2020
00020d 2020
00020e 2020
00020f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000210 2020
000211 2020
000212 2020
000213 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000214 2020
000215 2020
000216 2020
000217 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000218 2020
000219 2020
00021a 2020
00021b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00021c 2020
00021d 2020
00021e 2020
00021f 000d      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0xD,0x0
000220 6d3c
000221 6961
000222 3e6e
000223 5b20      	.DB  0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B
000224 6544
000225 6976
000226 6563
000227 6420      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x20,0x64
000228 7369
000229 6261
00022a 656c
00022b 205d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0x5D,0x20
00022c 505b
00022d 3154
00022e 3030
00022f 205d      	.DB  0x5B,0x50,0x54,0x31,0x30,0x30,0x5D,0x20
000230 2020
000231 2020
000232 2020
000233 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000234 2020
000235 2020
000236 2020
000237 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000238 2020
000239 2020
00023a 2020
00023b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00023c 2020
00023d 2020
00023e 2020
00023f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000240 2020
000241 2020
000242 0d20
000243 3c00      	.DB  0x20,0x20,0x20,0x20,0x20,0xD,0x0,0x3C
000244 616d
000245 6e69
000246 203e
000247 445b      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B,0x44
000248 7665
000249 6369
00024a 2065
00024b 6964      	.DB  0x65,0x76,0x69,0x63,0x65,0x20,0x64,0x69
00024c 6173
00024d 6c62
00024e 5d65
00024f 5b20      	.DB  0x73,0x61,0x62,0x6C,0x65,0x5D,0x20,0x5B
000250 4552
000251 4553
000252 5652
000253 4445      	.DB  0x52,0x45,0x53,0x45,0x52,0x56,0x45,0x44
000254 205d
000255 2020
000256 2020
000257 2020      	.DB  0x5D,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000258 2020
000259 2020
00025a 2020
00025b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00025c 2020
00025d 2020
00025e 2020
00025f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000260 2020
000261 2020
000262 2020
000263 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000264 2020
000265 2020
000266 000d
000267 753c      	.DB  0x20,0x20,0x20,0x20,0xD,0x0,0x3C,0x75
000268 6470
000269 7461
00026a 5365
00026b 6174      	.DB  0x70,0x64,0x61,0x74,0x65,0x53,0x74,0x61
00026c 7574
00026d 3e73
00026e 4520
00026f 4854      	.DB  0x74,0x75,0x73,0x3E,0x20,0x45,0x54,0x48
000270 725f
000271 7473
000272 745f
000273 6d69      	.DB  0x5F,0x72,0x73,0x74,0x5F,0x74,0x69,0x6D
000274 7265
000275 7420
000276 6d69
000277 2065      	.DB  0x65,0x72,0x20,0x74,0x69,0x6D,0x65,0x20
000278 656c
000279 7466
00027a 3d20
00027b 2520      	.DB  0x6C,0x65,0x66,0x74,0x20,0x3D,0x20,0x25
00027c 646c
00027d 2528
00027e 586c
00027f 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
000280 000a
000281 0a0d
000282 653c
000283 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000284 746e
000285 6143
000286 7470
000287 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000288 3e65
000289 2120
00028a 2121
00028b 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00028c 2121
00028d 2121
00028e 2121
00028f 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000290 6e6f
000291 7469
000292 726f
000293 4d20      	.DB  0x6F,0x6E,0x69,0x74,0x6F,0x72,0x20,0x4D
000294 646f
000295 2065
000296 2121
000297 2121      	.DB  0x6F,0x64,0x65,0x20,0x21,0x21,0x21,0x21
000298 0d21
000299 000a
00029a 0a0d
00029b 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
00029c 6576
00029d 746e
00029e 6143
00029f 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
0002a0 7275
0002a1 3e65
0002a2 2120
0002a3 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
0002a4 2121
0002a5 2121
0002a6 2121
0002a7 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002a8 4d20
0002a9 6961
0002aa 746e
0002ab 6e65      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
0002ac 6e61
0002ad 6563
0002ae 4920
0002af 206e      	.DB  0x61,0x6E,0x63,0x65,0x20,0x49,0x6E,0x20
0002b0 7250
0002b1 676f
0002b2 6572
0002b3 7373      	.DB  0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73
0002b4 2120
0002b5 2121
0002b6 2121
0002b7 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002b8 3c00
0002b9 7665
0002ba 6e65
0002bb 4374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0002bc 7061
0002bd 7574
0002be 6572
0002bf 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0002c0 6461
0002c1 4564
0002c2 6576
0002c3 746e      	.DB  0x61,0x64,0x64,0x45,0x76,0x65,0x6E,0x74
0002c4 7551
0002c5 7565
0002c6 2865
0002c7 2029      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x29,0x20
0002c8 6166
0002c9 6c69
0002ca 6465
0002cb 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0002cc 0d00
0002cd 3c0a
0002ce 7665
0002cf 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002d0 4374
0002d1 7061
0002d2 7574
0002d3 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002d4 203e
0002d5 2121
0002d6 2121
0002d7 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002d8 2121
0002d9 2121
0002da 2021
0002db 614d      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x4D,0x61
0002dc 6e69
0002dd 5020
0002de 776f
0002df 7265      	.DB  0x69,0x6E,0x20,0x50,0x6F,0x77,0x65,0x72
0002e0 4420
0002e1 776f
0002e2 206e
0002e3 2121      	.DB  0x20,0x44,0x6F,0x77,0x6E,0x20,0x21,0x21
0002e4 2121
0002e5 0d21
0002e6 000a
0002e7 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0002e8 653c
0002e9 6576
0002ea 746e
0002eb 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
0002ec 7470
0002ed 7275
0002ee 3e65
0002ef 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
0002f0 2121
0002f1 2121
0002f2 2121
0002f3 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002f4 2121
0002f5 4d20
0002f6 6961
0002f7 206e      	.DB  0x21,0x21,0x20,0x4D,0x61,0x69,0x6E,0x20
0002f8 6f50
0002f9 6577
0002fa 2072
0002fb 7055      	.DB  0x50,0x6F,0x77,0x65,0x72,0x20,0x55,0x70
0002fc 2120
0002fd 2121
0002fe 2121
0002ff 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000300 0d00
000301 3c0a
000302 7665
000303 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000304 4374
000305 7061
000306 7574
000307 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
000308 203e
000309 2121
00030a 2121
00030b 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00030c 2121
00030d 2121
00030e 2021
00030f 6142      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x42,0x61
000310 7474
000311 7265
000312 2079
000313 6f4c      	.DB  0x74,0x74,0x65,0x72,0x79,0x20,0x4C,0x6F
000314 2077
000315 2121
000316 2121
000317 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000318 000a
000319 0a0d
00031a 653c
00031b 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00031c 746e
00031d 6143
00031e 7470
00031f 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000320 3e65
000321 2120
000322 2121
000323 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000324 2121
000325 2121
000326 2121
000327 4220      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x42
000328 7461
000329 6574
00032a 7972
00032b 4f20      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x20,0x4F
00032c 204b
00032d 2121
00032e 2121
00032f 0d21      	.DB  0x4B,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000330 000a
000331 0a0d
000332 653c
000333 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000334 746e
000335 6143
000336 7470
000337 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000338 3e65
000339 2120
00033a 2121
00033b 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00033c 2121
00033d 2121
00033e 2121
00033f 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000340 6d65
000341 726f
000342 2079
000343 6f4c      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4C,0x6F
000344 2077
000345 2121
000346 2121
000347 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000348 000a
000349 0a0d
00034a 653c
00034b 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00034c 746e
00034d 6143
00034e 7470
00034f 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000350 3e65
000351 2120
000352 2121
000353 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000354 2121
000355 2121
000356 2121
000357 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000358 6d65
000359 726f
00035a 2079
00035b 7245      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x45,0x72
00035c 6f72
00035d 2072
00035e 2121
00035f 2121      	.DB  0x72,0x6F,0x72,0x20,0x21,0x21,0x21,0x21
000360 0d21
000361 000a
000362 0a0d
000363 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
000364 6576
000365 746e
000366 6143
000367 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
000368 7275
000369 3e65
00036a 2120
00036b 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
00036c 2121
00036d 2121
00036e 2121
00036f 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000370 4d20
000371 6d65
000372 726f
000373 2079      	.DB  0x20,0x4D,0x65,0x6D,0x6F,0x72,0x79,0x20
000374 4b4f
000375 2120
000376 2121
000377 2121      	.DB  0x4F,0x4B,0x20,0x21,0x21,0x21,0x21,0x21
000378 0a0d
000379 0d00
00037a 3c0a
00037b 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
00037c 6e65
00037d 4374
00037e 7061
00037f 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
000380 6572
000381 203e
000382 2121
000383 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
000384 2121
000385 2121
000386 2121
000387 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
000388 6944
000389 206e
00038a 6425
00038b 5220      	.DB  0x44,0x69,0x6E,0x20,0x25,0x64,0x20,0x52
00038c 7369
00038d 6e69
00038e 2067
00038f 2121      	.DB  0x69,0x73,0x69,0x6E,0x67,0x20,0x21,0x21
000390 2121
000391 0d21
000392 000a
000393 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
000394 653c
000395 6576
000396 746e
000397 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
000398 7470
000399 7275
00039a 3e65
00039b 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
00039c 2121
00039d 2121
00039e 2121
00039f 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0003a0 2121
0003a1 4420
0003a2 6e69
0003a3 2520      	.DB  0x21,0x21,0x20,0x44,0x69,0x6E,0x20,0x25
0003a4 2064
0003a5 6146
0003a6 6c6c
0003a7 6e69      	.DB  0x64,0x20,0x46,0x61,0x6C,0x6C,0x69,0x6E
0003a8 2067
0003a9 2121
0003aa 2121
0003ab 0d21      	.DB  0x67,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0003ac 000a
0003ad 0a0d
0003ae 653c
0003af 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0003b0 746e
0003b1 6143
0003b2 7470
0003b3 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0003b4 3e65
0003b5 2120
0003b6 2121
0003b7 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0003b8 2121
0003b9 2121
0003ba 2121
0003bb 5020      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x50
0003bc 4f52
0003bd 4542
0003be 2520
0003bf 2064      	.DB  0x52,0x4F,0x42,0x45,0x20,0x25,0x64,0x20
0003c0 4944
0003c1 4353
0003c2 4e4f
0003c3 454e      	.DB  0x44,0x49,0x53,0x43,0x4F,0x4E,0x4E,0x45
0003c4 5443
0003c5 2120
0003c6 2121
0003c7 2121      	.DB  0x43,0x54,0x20,0x21,0x21,0x21,0x21,0x21
0003c8 0a0d
0003c9 4100
0003ca 314c
0003cb 2532      	.DB  0xD,0xA,0x0,0x41,0x4C,0x31,0x32,0x25
0003cc 6431
0003cd 0d00
0003ce 3c0a
0003cf 7665      	.DB  0x31,0x64,0x0,0xD,0xA,0x3C,0x65,0x76
0003d0 6e65
0003d1 4374
0003d2 7061
0003d3 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
0003d4 6572
0003d5 203e
0003d6 2121
0003d7 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
0003d8 2121
0003d9 2121
0003da 2121
0003db 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
0003dc 5250
0003dd 424f
0003de 2045
0003df 6425      	.DB  0x50,0x52,0x4F,0x42,0x45,0x20,0x25,0x64
0003e0 4320
0003e1 4e4f
0003e2 454e
0003e3 5443      	.DB  0x20,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0003e4 2120
0003e5 2121
0003e6 2121
0003e7 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003e8 4100
0003e9 304c
0003ea 2532
0003eb 6431      	.DB  0x0,0x41,0x4C,0x30,0x32,0x25,0x31,0x64
0003ec 0d00
0003ed 3c0a
0003ee 7665
0003ef 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0003f0 4374
0003f1 7061
0003f2 7574
0003f3 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0003f4 203e
0003f5 2121
0003f6 2121
0003f7 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0003f8 2121
0003f9 2121
0003fa 2021
0003fb 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
0003fc 424f
0003fd 2045
0003fe 6425
0003ff 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000400 6d65
000401 6570
000402 6172
000403 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
000404 6572
000405 4520
000406 5252
000407 524f      	.DB  0x72,0x65,0x20,0x45,0x52,0x52,0x4F,0x52
000408 2120
000409 2121
00040a 2121
00040b 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
00040c 0d00
00040d 3c0a
00040e 7665
00040f 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000410 4374
000411 7061
000412 7574
000413 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
000414 203e
000415 2121
000416 2121
000417 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
000418 2121
000419 2121
00041a 2021
00041b 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
00041c 424f
00041d 2045
00041e 6425
00041f 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000420 6d65
000421 6570
000422 6172
000423 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
000424 6572
000425 4f20
000426 204b
000427 2121      	.DB  0x72,0x65,0x20,0x4F,0x4B,0x20,0x21,0x21
000428 2121
000429 0d21
00042a 000a
00042b 733c      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0x3C,0x73
00042c 6174
00042d 7574
00042e 5273
00042f 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000430 726f
000431 3e74
000432 5220
000433 5045      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x52,0x45,0x50
000434 524f
000435 5f54
000436 4953
000437 474e      	.DB  0x4F,0x52,0x54,0x5F,0x53,0x49,0x4E,0x47
000438 454c
000439 6d20
00043a 646f
00043b 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
00043c 6f6e
00043d 2074
00043e 7573
00043f 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000440 726f
000441 6574
000442 2064
000443 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000444 0d74
000445 000a
000446 733c
000447 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
000448 7574
000449 5273
00044a 7065
00044b 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00044c 3e74
00044d 5220
00044e 5045
00044f 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
000450 5f54
000451 554d
000452 544c
000453 5049      	.DB  0x54,0x5F,0x4D,0x55,0x4C,0x54,0x49,0x50
000454 454c
000455 6d20
000456 646f
000457 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
000458 6f6e
000459 2074
00045a 7573
00045b 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
00045c 726f
00045d 6574
00045e 2064
00045f 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000460 0d74
000461 000a
000462 733c
000463 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
000464 7574
000465 5273
000466 7065
000467 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000468 3e74
000469 6d20
00046a 6c61
00046b 6f6c      	.DB  0x74,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
00046c 2063
00046d 6166
00046e 6c69
00046f 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000470 2820
000471 6425
000472 6220
000473 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
000474 7365
000475 0d29
000476 000a
000477 733c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x73
000478 6174
000479 7574
00047a 5273
00047b 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
00047c 726f
00047d 3e74
00047e 6720
00047f 7465      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x67,0x65,0x74
000480 6544
000481 6976
000482 6563
000483 7453      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x53,0x74
000484 7461
000485 2865
000486 2029
000487 6166      	.DB  0x61,0x74,0x65,0x28,0x29,0x20,0x66,0x61
000488 6c69
000489 6465
00048a 0a0d
00048b 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00048c 7473
00048d 7461
00048e 7375
00048f 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
000490 6f70
000491 7472
000492 203e
000493 7473      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x73,0x74
000494 7461
000495 7375
000496 7220
000497 7065      	.DB  0x61,0x74,0x75,0x73,0x20,0x72,0x65,0x70
000498 726f
000499 2074
00049a 6361
00049b 6d63      	.DB  0x6F,0x72,0x74,0x20,0x61,0x63,0x63,0x6D
00049c 7520
00049d 6b6e
00049e 6f6e
00049f 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0004a0 5b20
0004a1 7830
0004a2 3025
0004a3 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0004a4 0d5d
0004a5 000a
0004a6 733c
0004a7 6174      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
0004a8 7574
0004a9 5273
0004aa 7065
0004ab 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
0004ac 3e74
0004ad 4520
0004ae 4854
0004af 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0004b0 6e65
0004b1 5364
0004b2 6174
0004b3 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
0004b4 5273
0004b5 7065
0004b6 726f
0004b7 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0004b8 646d
0004b9 2928
0004ba 6620
0004bb 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
0004bc 656c
0004bd 0d64
0004be 000a
0004bf 733c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x73
0004c0 6e65
0004c1 6f73
0004c2 4472
0004c3 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0004c4 5261
0004c5 7065
0004c6 726f
0004c7 3e74      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0004c8 5b20
0004c9 6c25
0004ca 5d64
0004cb 255b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x25
0004cc 5d64
0004cd 255b
0004ce 322e
0004cf 5d66      	.DB  0x64,0x5D,0x5B,0x25,0x2E,0x32,0x66,0x5D
0004d0 0a0d
0004d1 0d00
0004d2 3c0a
0004d3 6573      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x73,0x65
0004d4 736e
0004d5 726f
0004d6 6144
0004d7 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
0004d8 6552
0004d9 6f70
0004da 7472
0004db 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0004dc 3d3d
0004dd 203d
0004de 5245
0004df 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0004e0 2052
0004e1 4e49
0004e2 4f46
0004e3 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0004e4 4954
0004e5 4e4f
0004e6 4920
0004e7 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0004e8 4554
0004e9 504d
0004ea 5120
0004eb 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
0004ec 4555
0004ed 3d20
0004ee 3d3d
0004ef 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
0004f0 3c00
0004f1 6573
0004f2 736e
0004f3 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0004f4 6144
0004f5 6174
0004f6 6552
0004f7 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0004f8 7472
0004f9 203e
0004fa 5445
0004fb 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
0004fc 6573
0004fd 646e
0004fe 6144
0004ff 6174      	.DB  0x73,0x65,0x6E,0x64,0x44,0x61,0x74,0x61
000500 6552
000501 6f70
000502 7472
000503 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
000504 2864
000505 2029
000506 6166
000507 6c69      	.DB  0x64,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000508 6465
000509 0a0d
00050a 3c00
00050b 7665      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x65,0x76
00050c 6e65
00050d 5274
00050e 7065
00050f 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000510 3e74
000511 5b20
000512 6c25
000513 5d64      	.DB  0x74,0x3E,0x20,0x5B,0x25,0x6C,0x64,0x5D
000514 305b
000515 2578
000516 3230
000517 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000518 305b
000519 2578
00051a 3230
00051b 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00051c 0a0d
00051d 0d00
00051e 3c0a
00051f 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000520 6e65
000521 5274
000522 7065
000523 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000524 3e74
000525 3d20
000526 3d3d
000527 4520      	.DB  0x74,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
000528 5252
000529 524f
00052a 4920
00052b 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
00052c 4d4f
00052d 5441
00052e 4f49
00052f 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
000530 4e49
000531 5420
000532 4d45
000533 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
000534 5551
000535 5545
000536 2045
000537 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
000538 0d3d
000539 000a
00053a 653c
00053b 6576      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
00053c 746e
00053d 6552
00053e 6f70
00053f 7472      	.DB  0x6E,0x74,0x52,0x65,0x70,0x6F,0x72,0x74
000540 203e
000541 5445
000542 5f48
000543 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
000544 646e
000545 7645
000546 6e65
000547 5274      	.DB  0x6E,0x64,0x45,0x76,0x65,0x6E,0x74,0x52
000548 7065
000549 726f
00054a 4374
00054b 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
00054c 2928
00054d 6620
00054e 6961
00054f 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000550 0d64
000551 000a
000552 733c
000553 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
000554 6f73
000555 4472
000556 7461
000557 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000558 7661
000559 3e65
00055a 7420
00055b 6d69      	.DB  0x61,0x76,0x65,0x3E,0x20,0x74,0x69,0x6D
00055c 5b65
00055d 6c25
00055e 5d64
00055f 632c      	.DB  0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x63
000560 5b68
000561 6425
000562 2c5d
000563 6176      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76,0x61
000564 5b6c
000565 2e25
000566 6632
000567 0d5d      	.DB  0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD
000568 000a
000569 0a0d
00056a 733c
00056b 6e65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x73,0x65,0x6E
00056c 6f73
00056d 4472
00056e 7461
00056f 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000570 7661
000571 3e65
000572 3d20
000573 3d3d      	.DB  0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D,0x3D
000574 4520
000575 5252
000576 524f
000577 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
000578 464e
000579 4d4f
00057a 5441
00057b 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
00057c 204e
00057d 4e49
00057e 5420
00057f 4d45      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x54,0x45,0x4D
000580 2050
000581 5551
000582 5545
000583 2045      	.DB  0x50,0x20,0x51,0x55,0x45,0x55,0x45,0x20
000584 3d3d
000585 0d3d
000586 000a
000587 733c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x73
000588 6e65
000589 6f73
00058a 4472
00058b 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
00058c 5361
00058d 7661
00058e 3e65
00058f 4c20      	.DB  0x61,0x53,0x61,0x76,0x65,0x3E,0x20,0x4C
000590 474f
000591 6f5f
000592 6570
000593 466e      	.DB  0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46
000594 6c69
000595 2865
000596 7325
000597 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
000598 6166
000599 6c69
00059a 6465
00059b 202c      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x2C,0x20
00059c 6f63
00059d 6c75
00059e 6e64
00059f 7427      	.DB  0x63,0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74
0005a0 7320
0005a1 7661
0005a2 2065
0005a3 6f6c      	.DB  0x20,0x73,0x61,0x76,0x65,0x20,0x6C,0x6F
0005a4 0d67
0005a5 000a
0005a6 733c
0005a7 6e65      	.DB  0x67,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0005a8 6f73
0005a9 4472
0005aa 7461
0005ab 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
0005ac 7661
0005ad 3e65
0005ae 4c20
0005af 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
0005b0 695f
0005b1 736e
0005b2 7265
0005b3 4474      	.DB  0x5F,0x69,0x6E,0x73,0x65,0x72,0x74,0x44
0005b4 7461
0005b5 2861
0005b6 2029
0005b7 6166      	.DB  0x61,0x74,0x61,0x28,0x29,0x20,0x66,0x61
0005b8 6c69
0005b9 6465
0005ba 0a0d
0005bb 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0005bc 6573
0005bd 736e
0005be 726f
0005bf 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0005c0 6174
0005c1 6153
0005c2 6576
0005c3 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
0005c4 4f4c
0005c5 5f47
0005c6 6c63
0005c7 736f      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73
0005c8 4665
0005c9 6c69
0005ca 2865
0005cb 2029      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x29,0x20
0005cc 6166
0005cd 6c69
0005ce 6465
0005cf 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0005d0 3c00
0005d1 6573
0005d2 736e
0005d3 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0005d4 6144
0005d5 6174
0005d6 6153
0005d7 6576      	.DB  0x44,0x61,0x74,0x61,0x53,0x61,0x76,0x65
0005d8 203e
0005d9 6144
0005da 6174
0005db 4c20      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x20,0x4C
0005dc 676f
0005dd 6920
0005de 2073
0005df 6f6e      	.DB  0x6F,0x67,0x20,0x69,0x73,0x20,0x6E,0x6F
0005e0 2074
0005e1 6d65
0005e2 7470
0005e3 0d79      	.DB  0x74,0x20,0x65,0x6D,0x70,0x74,0x79,0xD
0005e4 000a
0005e5 653c
0005e6 6576
0005e7 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005e8 6153
0005e9 6576
0005ea 203e
0005eb 6974      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x74,0x69
0005ec 656d
0005ed 255b
0005ee 646c
0005ef 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
0005f0 6469
0005f1 305b
0005f2 2578
0005f3 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
0005f4 5d58
0005f5 732c
0005f6 6174
0005f7 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
0005f8 7830
0005f9 3025
0005fa 5832
0005fb 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0005fc 000a
0005fd 0a0d
0005fe 653c
0005ff 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000600 746e
000601 6153
000602 6576
000603 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
000604 3d3d
000605 203d
000606 5245
000607 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
000608 2052
000609 4e49
00060a 4f46
00060b 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
00060c 4954
00060d 4e4f
00060e 4920
00060f 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
000610 4554
000611 504d
000612 5120
000613 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
000614 4555
000615 3d20
000616 3d3d
000617 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
000618 3c00
000619 7665
00061a 6e65
00061b 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
00061c 7661
00061d 3e65
00061e 4c20
00061f 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000620 6f5f
000621 6570
000622 466e
000623 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
000624 2865
000625 7325
000626 2029
000627 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
000628 6c69
000629 6465
00062a 202c
00062b 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
00062c 6c75
00062d 6e64
00062e 7427
00062f 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
000630 7661
000631 2065
000632 6f6c
000633 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
000634 000a
000635 653c
000636 6576
000637 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
000638 6153
000639 6576
00063a 203e
00063b 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
00063c 5f47
00063d 6e69
00063e 6573
00063f 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
000640 7645
000641 6e65
000642 2874
000643 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
000644 6166
000645 6c69
000646 6465
000647 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000648 3c00
000649 7665
00064a 6e65
00064b 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
00064c 7661
00064d 3e65
00064e 4c20
00064f 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000650 635f
000651 6f6c
000652 6573
000653 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
000654 656c
000655 2928
000656 6620
000657 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
000658 656c
000659 0d64
00065a 000a
00065b 653c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x65
00065c 6576
00065d 746e
00065e 6153
00065f 6576      	.DB  0x76,0x65,0x6E,0x74,0x53,0x61,0x76,0x65
000660 203e
000661 7645
000662 6e65
000663 2074      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
000664 6f4c
000665 2067
000666 7369
000667 6e20      	.DB  0x4C,0x6F,0x67,0x20,0x69,0x73,0x20,0x6E
000668 746f
000669 6520
00066a 706d
00066b 7974      	.DB  0x6F,0x74,0x20,0x65,0x6D,0x70,0x74,0x79
00066c 0a0d
00066d 3c00
00066e 6f6c
00066f 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000670 7065
000671 726f
000672 3e74
000673 4320      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x43
000674 6568
000675 6b63
000676 4420
000677 7461      	.DB  0x68,0x65,0x63,0x6B,0x20,0x44,0x61,0x74
000678 2061
000679 6f4c
00067a 2067
00067b 7845      	.DB  0x61,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
00067c 7369
00067d 0d74
00067e 000a
00067f 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000680 676f
000681 6552
000682 6f70
000683 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
000684 203e
000685 4f4c
000686 5f47
000687 706f      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F,0x70
000688 6e65
000689 6946
00068a 656c
00068b 2528      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x28,0x25
00068c 2973
00068d 6620
00068e 6961
00068f 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000690 0d64
000691 000a
000692 6c3c
000693 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
000694 6552
000695 6f70
000696 7472
000697 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
000698 4f4c
000699 5f47
00069a 6572
00069b 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
00069c 6144
00069d 6174
00069e 2528
00069f 2973      	.DB  0x44,0x61,0x74,0x61,0x28,0x25,0x73,0x29
0006a0 6620
0006a1 6961
0006a2 656c
0006a3 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0006a4 000a
0006a5 6c3c
0006a6 676f
0006a7 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0006a8 6f70
0006a9 7472
0006aa 203e
0006ab 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0006ac 5f47
0006ad 6572
0006ae 6461
0006af 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0006b0 6174
0006b1 2928
0006b2 4c20
0006b3 676f      	.DB  0x74,0x61,0x28,0x29,0x20,0x4C,0x6F,0x67
0006b4 6520
0006b5 706d
0006b6 7974
0006b7 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
0006b8 0d00
0006b9 3c0a
0006ba 6f6c
0006bb 5267      	.DB  0x0,0xD,0xA,0x3C,0x6C,0x6F,0x67,0x52
0006bc 7065
0006bd 726f
0006be 3e74
0006bf 3d20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D
0006c0 3d3d
0006c1 4520
0006c2 5252
0006c3 524f      	.DB  0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F,0x52
0006c4 4920
0006c5 464e
0006c6 4d4f
0006c7 5441      	.DB  0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54
0006c8 4f49
0006c9 204e
0006ca 4e49
0006cb 2520      	.DB  0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20,0x25
0006cc 2073
0006cd 3d3d
0006ce 0d3d
0006cf 000a      	.DB  0x73,0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0
0006d0 6c3c
0006d1 676f
0006d2 6552
0006d3 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0006d4 7472
0006d5 203e
0006d6 6144
0006d7 6174      	.DB  0x72,0x74,0x3E,0x20,0x44,0x61,0x74,0x61
0006d8 6f4c
0006d9 2067
0006da 6f66
0006db 6e75      	.DB  0x4C,0x6F,0x67,0x20,0x66,0x6F,0x75,0x6E
0006dc 2064
0006dd 6974
0006de 656d
0006df 255b      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0006e0 646c
0006e1 2c5d
0006e2 6863
0006e3 255b      	.DB  0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B,0x25
0006e4 5d64
0006e5 762c
0006e6 6c61
0006e7 255b      	.DB  0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B,0x25
0006e8 322e
0006e9 5d66
0006ea 0a0d
0006eb 3c00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x3C
0006ec 6f6c
0006ed 5267
0006ee 7065
0006ef 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
0006f0 3e74
0006f1 4520
0006f2 4854
0006f3 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0006f4 6e65
0006f5 4464
0006f6 7461
0006f7 5261      	.DB  0x65,0x6E,0x64,0x44,0x61,0x74,0x61,0x52
0006f8 7065
0006f9 726f
0006fa 4374
0006fb 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
0006fc 2928
0006fd 6620
0006fe 6961
0006ff 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000700 0d64
000701 000a
000702 6c3c
000703 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
000704 6552
000705 6f70
000706 7472
000707 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
000708 6144
000709 6174
00070a 6f4c
00070b 2067      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x20
00070c 6573
00070d 746e
00070e 6620
00070f 6172      	.DB  0x73,0x65,0x6E,0x74,0x20,0x66,0x72,0x61
000710 656d
000711 4449
000712 305b
000713 2578      	.DB  0x6D,0x65,0x49,0x44,0x5B,0x30,0x78,0x25
000714 3230
000715 5d58
000716 6c20
000717 676f      	.DB  0x30,0x32,0x58,0x5D,0x20,0x6C,0x6F,0x67
000718 4449
000719 305b
00071a 2578
00071b 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
00071c 5d58
00071d 0a0d
00071e 3c00
00071f 6f6c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
000720 5267
000721 7065
000722 726f
000723 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
000724 4c20
000725 474f
000726 635f
000727 6f6c      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F
000728 6573
000729 6946
00072a 656c
00072b 2928      	.DB  0x73,0x65,0x46,0x69,0x6C,0x65,0x28,0x29
00072c 6620
00072d 6961
00072e 656c
00072f 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
000730 000a
000731 6c3c
000732 676f
000733 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
000734 6f70
000735 7472
000736 203e
000737 6843      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x43,0x68
000738 6365
000739 206b
00073a 7645
00073b 6e65      	.DB  0x65,0x63,0x6B,0x20,0x45,0x76,0x65,0x6E
00073c 2074
00073d 6f4c
00073e 2067
00073f 7845      	.DB  0x74,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000740 7369
000741 0d74
000742 000a
000743 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000744 676f
000745 6552
000746 6f70
000747 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
000748 203e
000749 4f4c
00074a 5f47
00074b 6572      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x72,0x65
00074c 6461
00074d 7645
00074e 6e65
00074f 2874      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x28
000750 2029
000751 6166
000752 6c69
000753 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000754 0a0d
000755 3c00
000756 6f6c
000757 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000758 7065
000759 726f
00075a 3e74
00075b 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
00075c 474f
00075d 725f
00075e 6165
00075f 4564      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x45
000760 6576
000761 746e
000762 2928
000763 4c20      	.DB  0x76,0x65,0x6E,0x74,0x28,0x29,0x20,0x4C
000764 676f
000765 6520
000766 706d
000767 7974      	.DB  0x6F,0x67,0x20,0x65,0x6D,0x70,0x74,0x79
000768 0a0d
000769 3c00
00076a 6f6c
00076b 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00076c 7065
00076d 726f
00076e 3e74
00076f 4520      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x45
000770 6576
000771 746e
000772 6f4c
000773 2067      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x20
000774 6f66
000775 6e75
000776 2064
000777 6974      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x20,0x74,0x69
000778 656d
000779 255b
00077a 646c
00077b 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
00077c 6469
00077d 305b
00077e 2578
00077f 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
000780 5d58
000781 732c
000782 6174
000783 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
000784 7830
000785 3025
000786 5832
000787 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000788 000a
000789 6c3c
00078a 676f
00078b 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00078c 6f70
00078d 7472
00078e 203e
00078f 5445      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x45,0x54
000790 5f48
000791 6573
000792 646e
000793 7645      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x45,0x76
000794 6e65
000795 5274
000796 7065
000797 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000798 4374
000799 646d
00079a 2928
00079b 6620      	.DB  0x74,0x43,0x6D,0x64,0x28,0x29,0x20,0x66
00079c 6961
00079d 656c
00079e 0d64
00079f 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0007a0 6c3c
0007a1 676f
0007a2 6552
0007a3 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0007a4 7472
0007a5 203e
0007a6 7645
0007a7 6e65      	.DB  0x72,0x74,0x3E,0x20,0x45,0x76,0x65,0x6E
0007a8 4c74
0007a9 676f
0007aa 7320
0007ab 6e65      	.DB  0x74,0x4C,0x6F,0x67,0x20,0x73,0x65,0x6E
0007ac 2074
0007ad 7266
0007ae 6d61
0007af 4965      	.DB  0x74,0x20,0x66,0x72,0x61,0x6D,0x65,0x49
0007b0 5b44
0007b1 7830
0007b2 3025
0007b3 5832      	.DB  0x44,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0007b4 205d
0007b5 6f6c
0007b6 4967
0007b7 5b44      	.DB  0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44,0x5B
0007b8 7830
0007b9 3025
0007ba 5832
0007bb 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0007bc 000a
0007bd 6c3c
0007be 676f
0007bf 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007c0 6f70
0007c1 7472
0007c2 203e
0007c3 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0007c4 5f47
0007c5 6c63
0007c6 736f
0007c7 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
0007c8 6c69
0007c9 2865
0007ca 7325
0007cb 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0007cc 6166
0007cd 6c69
0007ce 6465
0007cf 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1682): warning: .cseg .db misalignment - padding zero byte
0007d0 0000      	.DB  0x0
                 _0x20000:
0007d1 0a0d
0007d2 6f50
0007d3 6577
0007d4 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
0007d5 6e6f
0007d6 5220
0007d7 7365
0007d8 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0007d9 0a0d
0007da 0d00
0007db 450a
0007dc 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0007dd 7265
0007de 616e
0007df 206c
0007e0 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0007e1 6573
0007e2 0d74
0007e3 000a
0007e4 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0007e5 7242
0007e6 776f
0007e7 2d6e
0007e8 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0007e9 2074
0007ea 6552
0007eb 6573
0007ec 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
0007ed 000a
0007ee 0a0d
0007ef 6157
0007f0 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
0007f1 6468
0007f2 676f
0007f3 5220
0007f4 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
0007f5 7465
0007f6 0a0d
0007f7 0d00
0007f8 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
0007f9 4154
0007fa 2047
0007fb 6552
0007fc 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
0007fd 0d74
0007fe 000a
0007ff 693c
000800 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
000801 6974
000802 6c61
000803 735f
000804 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
000805 6574
000806 3e6d
000807 4c20
000808 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
000809 695f
00080a 696e
00080b 2874
00080c 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
00080d 6166
00080e 6c69
00080f 6465
000810 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000811 3c00
000812 6e69
000813 7469
000814 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
000815 5f6c
000816 7973
000817 7473
000818 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
000819 203e
00081a 4453
00081b 695f
00081c 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
00081d 2874
00081e 2029
00081f 6166
000820 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000821 6465
000822 0a0d
000823 4900
000824 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
000825 6974
000826 6c61
000827 4420
000828 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
000829 6369
00082a 2065
00082b 6f43
00082c 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
00082d 656c
00082e 6574
00082f 2064
000830 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
000831 2d20
000832 0020
000833 3025
000834 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
000835 252d
000836 3230
000837 2d64
000838 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000839 6432
00083a 2520
00083b 3230
00083c 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
00083d 3025
00083e 6432
00083f 253a
000840 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000841 0d64
000842 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
000843 0a0d
000844 2121
000845 2121
000846 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
000847 2121
000848 2121
000849 2121
00084a 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00084b 2121
00084c 2121
00084d 2121
00084e 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00084f 2121
000850 2121
000851 2121
000852 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000853 2121
000854 2121
000855 2121
000856 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000857 0a0d
000858 2100
000859 2121
00085a 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
00085b 2121
00085c 4520
00085d 6874
00085e 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
00085f 6675
000860 6566
000861 2072
000862 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
000863 7265
000864 6c66
000865 776f
000866 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
000867 2121
000868 2121
000869 2121
00086a 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1724): warning: .cseg .db misalignment - padding zero byte
00086b 0000      	.DB  0x0
                 _0x60000:
00086c 543c
00086d 4d49
00086e 5245
00086f 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
000870 7465
000871 6954
000872 656d
000873 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
000874 4520
000875 5252
000876 203a
000877 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
000878 6972
000879 646f
00087a 3d20
00087b 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
00087c 0a0d
00087d 3c00
00087e 4954
00087f 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
000880 5f52
000881 6573
000882 5474
000883 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
000884 7265
000885 203e
000886 6162
000887 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
000888 6f43
000889 6e75
00088a 6574
00088b 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
00088c 6c25
00088d 5d64
00088e 2b20
00088f 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
000890 7265
000891 6f69
000892 5b64
000893 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
000894 5d64
000895 3d20
000896 2520
000897 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
000898 4f20
000899 4556
00089a 4652
00089b 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
00089c 2157
00089d 0d21
00089e 000a
00089f 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
0008a0 5444
0008a1 203e
0008a2 6157
0008a3 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
0008a4 4468
0008a5 676f
0008a6 5420
0008a7 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
0008a8 7265
0008a9 5220
0008aa 7365
0008ab 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
0008ac 2121
0008ad 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1742): warning: .cseg .db misalignment - padding zero byte
0008ae 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
0008af ffff      	.DB  0xFF,0xFF
                 _0x80000:
0008b0 493c
0008b1 5f4f
0008b2 656b
0008b3 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008b4 6568
0008b5 6b63
0008b6 203e
0008b7 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008b8 2079
0008b9 4f4d
0008ba 4544
0008bb 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
0008bc 3c00
0008bd 4f49
0008be 6b5f
0008bf 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008c0 6843
0008c1 6365
0008c2 3e6b
0008c3 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008c4 7965
0008c5 5520
0008c6 0d50
0008c7 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
0008c8 493c
0008c9 5f4f
0008ca 656b
0008cb 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008cc 6568
0008cd 6b63
0008ce 203e
0008cf 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008d0 2079
0008d1 4f44
0008d2 4e57
0008d3 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
0008d4 3c00
0008d5 4f49
0008d6 6b5f
0008d7 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008d8 6843
0008d9 6365
0008da 3e6b
0008db 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008dc 7965
0008dd 4f20
0008de 0d4b
0008df 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0008e0 6e49
0008e1 7469
0008e2 6169
0008e3 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0008e4 697a
0008e5 676e
0008e6 4120
0008e7 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0008e8 2e2e
0008e9 0020
0008ea 4b4f
0008eb 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1762): warning: .cseg .db misalignment - padding zero byte
0008ec 0000      	.DB  0x0
                 _0xC0003:
0008ed 0063
0008ee 0000
0008ef 0063
0008f0 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
0008f1 0063
0008f2 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
0008f3 5f63
0008f4 6974
0008f5 656d
0008f6 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
0008f7 646c
0008f8 205d
0008f9 2026
0008fa 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
0008fb 6974
0008fc 656d
0008fd 255b
0008fe 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
0008ff 205d
000900 3e3d
000901 6420
000902 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
000903 5b66
000904 6c25
000905 5d64
000906 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
000907 3e00
000908 203e
000909 5452
00090a 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
00090b 6573
00090c 4274
00090d 6e69
00090e 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
00090f 2079
000910 5452
000911 2043
000912 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
000913 636e
000914 0d2e
000915 000a
000916 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
000917 4354
000918 735f
000919 7465
00091a 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
00091b 6574
00091c 6954
00091d 656d
00091e 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
00091f 6954
000920 656d
000921 6f7a
000922 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
000923 6f20
000924 7475
000925 6f20
000926 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000927 6172
000928 676e
000929 2065
00092a 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
00092b 642b
00092c 0d29
00092d 000a
00092e 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
00092f 2e6e
000930 0020
000931 7554
000932 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
000933 0020
000934 6557
000935 2e64
000936 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
000937 6854
000938 2e75
000939 0020
00093a 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
00093b 2e69
00093c 0020
00093d 6153
00093e 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
00093f 0020
000940 7553
000941 2e6e
000942 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
000943 255b
000944 5d64
000945 3025
000946 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
000947 252d
000948 3230
000949 2d64
00094a 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
00094b 6432
00094c 2520
00094d 3230
00094e 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
00094f 3025
000950 6432
000951 253a
000952 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000953 0d64
000954 000a
000955 7552
000956 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
000957 6e69
000958 2067
000959 6977
00095a 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
00095b 5320
00095c 7379
00095d 6574
00095e 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
00095f 6c43
000960 636f
000961 206b
000962 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1795): warning: .cseg .db misalignment - padding zero byte
000963 0000      	.DB  0x0
                 _0xE0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1797): warning: .cseg .db misalignment - padding zero byte
000964 0001      	.DB  0x1
                 _0xE0004:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1799): warning: .cseg .db misalignment - padding zero byte
000965 0001      	.DB  0x1
                 _0xE0005:
000966 0101
000967 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1801): warning: .cseg .db misalignment - padding zero byte
000968 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
000969 0101
00096a 0101
00096b 0101
00096c 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
00096d 0101
00096e 0101
00096f 0101
000970 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
000971 0101
000972 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1806): warning: .cseg .db misalignment - padding zero byte
000973 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1808): warning: .cseg .db misalignment - padding zero byte
000974 0001      	.DB  0x1
                 _0xE0009:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1810): warning: .cseg .db misalignment - padding zero byte
000975 0001      	.DB  0x1
                 _0xE000A:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(1812): warning: .cseg .db misalignment - padding zero byte
000976 0001      	.DB  0x1
                 _0xE0000:
000977 673c
000978 7465
000979 7250
00097a 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
00097b 7265
00097c 6974
00097d 7365
00097e 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
00097f 666e
000980 6769
000981 203e
000982 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000983 6320
000984 6e6f
000985 6966
000986 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000987 6172
000988 6974
000989 6e6f
00098a 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
00098b 7375
00098c 2065
00098d 6564
00098e 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
00098f 6c75
000990 0d74
000991 000a
000992 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000993 7465
000994 704f
000995 7265
000996 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
000997 6e69
000998 4367
000999 6e6f
00099a 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
00099b 3e67
00099c 6e20
00099d 206f
00099e 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
00099f 666e
0009a0 6769
0009a1 7275
0009a2 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
0009a3 6f69
0009a4 2c6e
0009a5 7520
0009a6 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
0009a7 6420
0009a8 6665
0009a9 7561
0009aa 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
0009ab 0a0d
0009ac 3c00
0009ad 6567
0009ae 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
0009af 6570
0009b0 6172
0009b1 6974
0009b2 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
0009b3 6f43
0009b4 666e
0009b5 6769
0009b6 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0009b7 6f6d
0009b8 6564
0009b9 2020
0009ba 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
0009bb 2020
0009bc 2020
0009bd 2020
0009be 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0009bf 3e3e
0009c0 3020
0009c1 2578
0009c2 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
0009c3 0d58
0009c4 000a
0009c5 673c
0009c6 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
0009c7 704f
0009c8 7265
0009c9 7461
0009ca 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
0009cb 4367
0009cc 6e6f
0009cd 6966
0009ce 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0009cf 6420
0009d0 7665
0009d1 6369
0009d2 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
0009d3 616e
0009d4 6c62
0009d5 2065
0009d6 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009d7 3e20
0009d8 203e
0009d9 7830
0009da 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0009db 5832
0009dc 0a0d
0009dd 3c00
0009de 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0009df 4f74
0009e0 6570
0009e1 6172
0009e2 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0009e3 676e
0009e4 6f43
0009e5 666e
0009e6 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0009e7 203e
0009e8 6c61
0009e9 7261
0009ea 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
0009eb 616e
0009ec 6c62
0009ed 2065
0009ee 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009ef 2020
0009f0 3e3e
0009f1 3020
0009f2 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
0009f3 3230
0009f4 0d58
0009f5 000a
0009f6 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
0009f7 7465
0009f8 704f
0009f9 7265
0009fa 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0009fb 6e69
0009fc 4367
0009fd 6e6f
0009fe 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0009ff 3e67
000a00 7320
000a01 6e65
000a02 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
000a03 4572
000a04 616e
000a05 6c62
000a06 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000a07 2020
000a08 3e20
000a09 203e
000a0a 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
000a0b 7830
000a0c 3025
000a0d 5832
000a0e 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
000a0f 673c
000a10 7465
000a11 6553
000a12 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
000a13 726f
000a14 6f43
000a15 666e
000a16 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000a17 203e
000a18 6573
000a19 736e
000a1a 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
000a1b 6320
000a1c 6168
000a1d 6e6e
000a1e 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000a1f 6f20
000a20 7475
000a21 6f20
000a22 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000a23 6172
000a24 676e
000a25 2065
000a26 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000a27 2964
000a28 0a0d
000a29 3c00
000a2a 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000a2b 5374
000a2c 6e65
000a2d 6f73
000a2e 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000a2f 6e6f
000a30 6966
000a31 3e67
000a32 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
000a33 206f
000a34 6f63
000a35 666e
000a36 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
000a37 7275
000a38 7461
000a39 6f69
000a3a 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000a3b 7520
000a3c 6573
000a3d 6420
000a3e 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000a3f 7561
000a40 746c
000a41 0a0d
000a42 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
000a43 6567
000a44 4174
000a45 7875
000a46 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000a47 436e
000a48 6e6f
000a49 6966
000a4a 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a4b 6420
000a4c 6769
000a4d 7469
000a4e 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000a4f 6920
000a50 706e
000a51 7475
000a52 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
000a53 6168
000a54 6e6e
000a55 6c65
000a56 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a57 7475
000a58 6f20
000a59 2066
000a5a 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a5b 676e
000a5c 2065
000a5d 2528
000a5e 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a5f 0a0d
000a60 3c00
000a61 6567
000a62 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a63 7875
000a64 6944
000a65 436e
000a66 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000a67 6966
000a68 3e67
000a69 6e20
000a6a 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000a6b 6f63
000a6c 666e
000a6d 6769
000a6e 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000a6f 7461
000a70 6f69
000a71 2c6e
000a72 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
000a73 6573
000a74 6420
000a75 6665
000a76 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000a77 746c
000a78 0a0d
000a79 3c00
000a7a 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000a7b 4174
000a7c 7875
000a7d 6f44
000a7e 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000a7f 6f43
000a80 666e
000a81 6769
000a82 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a83 6964
000a84 6967
000a85 6174
000a86 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000a87 756f
000a88 7074
000a89 7475
000a8a 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000a8b 6168
000a8c 6e6e
000a8d 6c65
000a8e 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a8f 7475
000a90 6f20
000a91 2066
000a92 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a93 676e
000a94 2065
000a95 2528
000a96 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a97 0a0d
000a98 3c00
000a99 6567
000a9a 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a9b 7875
000a9c 6f44
000a9d 7475
000a9e 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000a9f 666e
000aa0 6769
000aa1 203e
000aa2 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000aa3 6320
000aa4 6e6f
000aa5 6966
000aa6 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000aa7 6172
000aa8 6974
000aa9 6e6f
000aaa 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000aab 7375
000aac 2065
000aad 6564
000aae 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000aaf 6c75
000ab0 0d74
000ab1 000a
000ab2 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000ab3 7465
000ab4 7541
000ab5 4478
000ab6 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000ab7 4374
000ab8 6e6f
000ab9 6966
000aba 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000abb 2d20
000abc 202d
000abd 4843
000abe 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
000abf 2064
000ac0 2d2d
000ac1 0d20
000ac2 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
000ac3 673c
000ac4 7465
000ac5 7541
000ac6 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
000ac7 756f
000ac8 4374
000ac9 6e6f
000aca 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000acb 3e67
000acc 6520
000acd 616e
000ace 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
000acf 2065
000ad0 2020
000ad1 2020
000ad2 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000ad3 2020
000ad4 305b
000ad5 2578
000ad6 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
000ad7 5d58
000ad8 0a0d
000ad9 3c00
000ada 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
000adb 4174
000adc 7875
000add 6f44
000ade 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000adf 6f43
000ae0 666e
000ae1 6769
000ae2 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000ae3 7473
000ae4 7461
000ae5 4f65
000ae6 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
000ae7 6576
000ae8 746e
000ae9 2020
000aea 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
000aeb 7830
000aec 3025
000aed 5832
000aee 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000aef 000a
000af0 673c
000af1 7465
000af2 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
000af3 4478
000af4 756f
000af5 4374
000af6 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
000af7 6966
000af8 3e67
000af9 6e20
000afa 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
000afb 6562
000afc 4572
000afd 5376
000afe 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
000aff 2020
000b00 2020
000b01 255b
000b02 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b03 3e2d
000b04 3c00
000b05 6567
000b06 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000b07 7875
000b08 6941
000b09 436e
000b0a 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000b0b 6966
000b0c 3e67
000b0d 6120
000b0e 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000b0f 6f6c
000b10 2067
000b11 6e69
000b12 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000b13 2074
000b14 6863
000b15 6e61
000b16 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000b17 206c
000b18 756f
000b19 2074
000b1a 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000b1b 7220
000b1c 6e61
000b1d 6567
000b1e 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000b1f 6425
000b20 0d29
000b21 000a
000b22 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000b23 7465
000b24 7541
000b25 4178
000b26 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000b27 6f43
000b28 666e
000b29 6769
000b2a 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b2b 6f6e
000b2c 6320
000b2d 6e6f
000b2e 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b2f 7567
000b30 6172
000b31 6974
000b32 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b33 202c
000b34 7375
000b35 2065
000b36 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b37 6166
000b38 6c75
000b39 0d74
000b3a 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b3b 673c
000b3c 7465
000b3d 7541
000b3e 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000b3f 756f
000b40 4374
000b41 6e6f
000b42 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000b43 3e67
000b44 6120
000b45 616e
000b46 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000b47 2067
000b48 756f
000b49 7074
000b4a 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000b4b 6320
000b4c 6168
000b4d 6e6e
000b4e 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000b4f 6f20
000b50 7475
000b51 6f20
000b52 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000b53 6172
000b54 676e
000b55 2065
000b56 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000b57 2964
000b58 0a0d
000b59 3c00
000b5a 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000b5b 4174
000b5c 7875
000b5d 6f41
000b5e 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000b5f 6f43
000b60 666e
000b61 6769
000b62 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b63 6f6e
000b64 6320
000b65 6e6f
000b66 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b67 7567
000b68 6172
000b69 6974
000b6a 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b6b 202c
000b6c 7375
000b6d 2065
000b6e 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b6f 6166
000b70 6c75
000b71 0d74
000b72 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b73 673c
000b74 7465
000b75 7542
000b76 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b77 7265
000b78 6f43
000b79 666e
000b7a 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b7b 203e
000b7c 6f6e
000b7d 6320
000b7e 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000b7f 6966
000b80 7567
000b81 6172
000b82 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000b83 6e6f
000b84 202c
000b85 7375
000b86 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000b87 6564
000b88 6166
000b89 6c75
000b8a 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000b8b 000a
000b8c 673c
000b8d 7465
000b8e 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000b8f 7a7a
000b90 7265
000b91 6f43
000b92 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000b93 6769
000b94 203e
000b95 6e65
000b96 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000b97 656c
000b98 2020
000b99 2020
000b9a 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000b9b 2020
000b9c 2020
000b9d 2020
000b9e 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000b9f 305b
000ba0 2578
000ba1 3230
000ba2 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000ba3 0a0d
000ba4 3c00
000ba5 6567
000ba6 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000ba7 7a75
000ba8 657a
000ba9 4372
000baa 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000bab 6966
000bac 3e67
000bad 6520
000bae 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000baf 746e
000bb0 6f53
000bb1 7275
000bb2 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000bb3 754e
000bb4 626d
000bb5 7265
000bb6 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000bb7 5b3e
000bb8 6425
000bb9 0d5d
000bba 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000bbb 673c
000bbc 7465
000bbd 7542
000bbe 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000bbf 7265
000bc0 6f43
000bc1 666e
000bc2 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000bc3 203e
000bc4 7665
000bc5 6e65
000bc6 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000bc7 756f
000bc8 6372
000bc9 2065
000bca 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000bcb 2020
000bcc 2020
000bcd 3e3e
000bce 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000bcf 6567
000bd0 4574
000bd1 766e
000bd2 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000bd3 7261
000bd4 436d
000bd5 6e6f
000bd6 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000bd7 3e67
000bd8 6e20
000bd9 206f
000bda 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000bdb 666e
000bdc 6769
000bdd 7275
000bde 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000bdf 6f69
000be0 2c6e
000be1 7520
000be2 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000be3 6420
000be4 6665
000be5 7561
000be6 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000be7 0a0d
000be8 3c00
000be9 6567
000bea 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000beb 766e
000bec 6c41
000bed 7261
000bee 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000bef 6e6f
000bf0 6966
000bf1 3e67
000bf2 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000bf3 6d73
000bf4 5352
000bf5 4953
000bf6 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000bf7 6576
000bf8 206c
000bf9 2020
000bfa 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000bfb 2020
000bfc 2020
000bfd 255b
000bfe 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000bff 0a0d
000c00 3c00
000c01 6567
000c02 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c03 766e
000c04 6c41
000c05 7261
000c06 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c07 6e6f
000c08 6966
000c09 3e67
000c0a 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c0b 6d73
000c0c 7243
000c0d 6465
000c0e 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000c0f 6142
000c10 616c
000c11 636e
000c12 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000c13 2020
000c14 2020
000c15 255b
000c16 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c17 0a0d
000c18 3c00
000c19 6567
000c1a 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c1b 766e
000c1c 6c41
000c1d 7261
000c1e 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c1f 6e6f
000c20 6966
000c21 3e67
000c22 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000c23 7461
000c24 6574
000c25 7972
000c26 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000c27 6576
000c28 206c
000c29 2020
000c2a 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c2b 2020
000c2c 2020
000c2d 255b
000c2e 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c2f 0a0d
000c30 3c00
000c31 6567
000c32 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c33 766e
000c34 6c41
000c35 7261
000c36 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c37 6e6f
000c38 6966
000c39 3e67
000c3a 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c3b 6d6f
000c3c 536d
000c3d 6769
000c3e 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000c3f 4c6c
000c40 7665
000c41 6c65
000c42 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000c43 2020
000c44 2020
000c45 255b
000c46 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c47 0a0d
000c48 3c00
000c49 6567
000c4a 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c4b 766e
000c4c 6c41
000c4d 7261
000c4e 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c4f 6e6f
000c50 6966
000c51 3e67
000c52 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c53 6d6f
000c54 4c6d
000c55 736f
000c56 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000c57 6c65
000c58 7961
000c59 2020
000c5a 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000c5b 2020
000c5c 2020
000c5d 255b
000c5e 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c5f 0a0d
000c60 3c00
000c61 6567
000c62 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c63 766e
000c64 6c41
000c65 7261
000c66 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c67 6e6f
000c68 6966
000c69 3e67
000c6a 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000c6b 6d65
000c6c 726f
000c6d 4d79
000c6e 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000c6f 2020
000c70 2020
000c71 2020
000c72 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000c73 2020
000c74 2020
000c75 255b
000c76 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000c77 0a0d
000c78 3c00
000c79 6567
000c7a 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c7b 6174
000c7c 7574
000c7d 5273
000c7e 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c7f 726f
000c80 4374
000c81 6e6f
000c82 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c83 3e67
000c84 6e20
000c85 206f
000c86 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000c87 666e
000c88 6769
000c89 7275
000c8a 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000c8b 6f69
000c8c 2c6e
000c8d 7520
000c8e 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000c8f 6420
000c90 6665
000c91 7561
000c92 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000c93 0a0d
000c94 3c00
000c95 6567
000c96 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c97 6174
000c98 7574
000c99 5273
000c9a 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c9b 726f
000c9c 4374
000c9d 6e6f
000c9e 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c9f 3e67
000ca0 6120
000ca1 6363
000ca2 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000ca3 2020
000ca4 2020
000ca5 2020
000ca6 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000ca7 7830
000ca8 3025
000ca9 5832
000caa 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000cab 000a
000cac 673c
000cad 7465
000cae 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000caf 7461
000cb0 7375
000cb1 6552
000cb2 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000cb3 7472
000cb4 6f43
000cb5 666e
000cb6 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000cb7 203e
000cb8 6e69
000cb9 7674
000cba 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000cbb 2020
000cbc 2020
000cbd 2020
000cbe 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000cbf 5d64
000cc0 0a0d
000cc1 3c00
000cc2 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000cc3 4f74
000cc4 6570
000cc5 6172
000cc6 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000cc7 676e
000cc8 6f43
000cc9 666e
000cca 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000ccb 203e
000ccc 7245
000ccd 6f72
000cce 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000ccf 6f20
000cd0 6570
000cd1 6172
000cd2 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000cd3 676e
000cd4 6d20
000cd5 646f
000cd6 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000cd7 6e69
000cd8 6176
000cd9 696c
000cda 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000cdb 305b
000cdc 2578
000cdd 3230
000cde 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000cdf 0a0d
000ce0 0d00
000ce1 200a
000ce2 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000ce3 6564
000ce4 2020
000ce5 2020
000ce6 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000ce7 2020
000ce8 2020
000ce9 2020
000cea 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000ceb 3020
000cec 2578
000ced 3230
000cee 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000cef 0a0d
000cf0 6420
000cf1 7665
000cf2 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000cf3 4565
000cf4 616e
000cf5 6c62
000cf6 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000cf7 2020
000cf8 3e20
000cf9 203e
000cfa 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000cfb 3025
000cfc 5832
000cfd 0d00
000cfe 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000cff 6c61
000d00 7261
000d01 456d
000d02 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000d03 6c62
000d04 2065
000d05 2020
000d06 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000d07 3e3e
000d08 3020
000d09 2578
000d0a 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000d0b 0058
000d0c 0a0d
000d0d 7320
000d0e 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000d0f 6f73
000d10 4572
000d11 616e
000d12 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000d13 2065
000d14 2020
000d15 3e20
000d16 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d17 3c00
000d18 6573
000d19 5374
000d1a 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000d1b 6f73
000d1c 4372
000d1d 6e6f
000d1e 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000d1f 3e67
000d20 4520
000d21 5252
000d22 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000d23 6863
000d24 6e61
000d25 656e
000d26 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000d27 756f
000d28 2074
000d29 666f
000d2a 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000d2b 6e61
000d2c 6567
000d2d 0a0d
000d2e 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000d2f 6573
000d30 5374
000d31 6e65
000d32 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000d33 4372
000d34 6e6f
000d35 6966
000d36 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000d37 4520
000d38 5252
000d39 203a
000d3a 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000d3b 706d
000d3c 696c
000d3d 676e
000d3e 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000d3f 6574
000d40 6320
000d41 756f
000d42 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000d43 276e
000d44 2074
000d45 6562
000d46 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000d47 7465
000d48 7420
000d49 206f
000d4a 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000d4b 000a
000d4c 0a0d
000d4d 7320
000d4e 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000d4f 6c70
000d50 6e69
000d51 5267
000d52 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000d53 2065
000d54 2020
000d55 3e20
000d56 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d57 7830
000d58 3025
000d59 5834
000d5a 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000d5b 200a
000d5c 6572
000d5d 634f
000d5e 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000d5f 7272
000d60 6e65
000d61 6563
000d62 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000d63 2020
000d64 3e3e
000d65 3020
000d66 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d67 3430
000d68 0058
000d69 0a0d
000d6a 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000d6b 6d69
000d6c 5365
000d6d 6174
000d6e 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000d6f 6f48
000d70 7275
000d71 2020
000d72 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000d73 203e
000d74 7830
000d75 3025
000d76 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000d77 0d00
000d78 200a
000d79 6974
000d7a 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000d7b 7453
000d7c 7261
000d7d 4d74
000d7e 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000d7f 2020
000d80 2020
000d81 3e3e
000d82 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000d83 2578
000d84 3230
000d85 0058
000d86 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000d87 7420
000d88 6d69
000d89 5365
000d8a 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000d8b 4870
000d8c 756f
000d8d 2072
000d8e 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000d8f 3e20
000d90 203e
000d91 7830
000d92 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000d93 5832
000d94 0d00
000d95 200a
000d96 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000d97 656d
000d98 7453
000d99 706f
000d9a 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000d9b 206e
000d9c 2020
000d9d 2020
000d9e 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000d9f 3020
000da0 2578
000da1 3230
000da2 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000da3 0a0d
000da4 6c20
000da5 776f
000da6 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000da7 694c
000da8 696d
000da9 2074
000daa 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000dab 2020
000dac 3e20
000dad 203e
000dae 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000daf 5b20
000db0 3025
000db1 6c34
000db2 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000db3 0d00
000db4 200a
000db5 6f6c
000db6 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000db7 4472
000db8 6c65
000db9 7961
000dba 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000dbb 2020
000dbc 2020
000dbd 3e3e
000dbe 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dbf 2064
000dc0 255b
000dc1 3230
000dc2 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000dc3 0d00
000dc4 200a
000dc5 6f6c
000dc6 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000dc7 4572
000dc8 7478
000dc9 6572
000dca 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000dcb 2020
000dcc 2020
000dcd 3e3e
000dce 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dcf 2066
000dd0 255b
000dd1 3430
000dd2 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000dd3 005d
000dd4 0a0d
000dd5 7520
000dd6 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000dd7 7265
000dd8 694c
000dd9 696d
000dda 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000ddb 2020
000ddc 2020
000ddd 3e20
000dde 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000ddf 6625
000de0 5b20
000de1 3025
000de2 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000de3 5d58
000de4 0d00
000de5 200a
000de6 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000de7 6570
000de8 4472
000de9 6c65
000dea 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000deb 2020
000dec 2020
000ded 2020
000dee 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000def 2520
000df0 2064
000df1 255b
000df2 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000df3 5d58
000df4 0d00
000df5 200a
000df6 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000df7 6570
000df8 4572
000df9 7478
000dfa 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000dfb 656d
000dfc 2020
000dfd 2020
000dfe 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000dff 2520
000e00 2066
000e01 255b
000e02 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000e03 586c
000e04 005d
000e05 0a0d
000e06 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000e07 6168
000e08 6e6e
000e09 6c65
000e0a 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000e0b 2020
000e0c 2020
000e0d 2020
000e0e 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e0f 203e
000e10 255b
000e11 5d64
000e12 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000e13 200a
000e14 6863
000e15 6e61
000e16 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000e17 456c
000e18 616e
000e19 6c62
000e1a 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000e1b 2020
000e1c 3e3e
000e1d 3020
000e1e 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e1f 3230
000e20 0058
000e21 0a0d
000e22 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000e23 616c
000e24 6d72
000e25 6544
000e26 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000e27 2079
000e28 2020
000e29 2020
000e2a 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e2b 203e
000e2c 6425
000e2d 0d00
000e2e 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000e2f 6573
000e30 4174
000e31 7875
000e32 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000e33 7475
000e34 6f43
000e35 666e
000e36 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000e37 203e
000e38 6843
000e39 6e61
000e3a 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000e3b 206c
000e3c 7245
000e3d 6f72
000e3e 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000e3f 0d21
000e40 000a
000e41 0a0d
000e42 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000e43 7465
000e44 7541
000e45 4478
000e46 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000e47 4374
000e48 6e6f
000e49 6966
000e4a 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000e4b 6520
000e4c 6576
000e4d 746e
000e4e 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e4f 7275
000e50 6563
000e51 754e
000e52 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000e53 7265
000e54 6920
000e55 2073
000e56 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000e57 206f
000e58 6f6c
000e59 676e
000e5a 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000e5b 6425
000e5c 2129
000e5d 0d21
000e5e 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000e5f 0a0d
000e60 6320
000e61 6168
000e62 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000e63 6c65
000e64 2020
000e65 2020
000e66 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000e67 2020
000e68 2020
000e69 3e20
000e6a 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e6b 255b
000e6c 5d64
000e6d 0d00
000e6e 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000e6f 6863
000e70 6e61
000e71 656e
000e72 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000e73 616e
000e74 6c62
000e75 2065
000e76 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000e77 2020
000e78 3e3e
000e79 3020
000e7a 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e7b 3230
000e7c 0058
000e7d 0a0d
000e7e 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000e7f 6174
000e80 6574
000e81 6e4f
000e82 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000e83 6e65
000e84 2074
000e85 2020
000e86 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000e87 3e20
000e88 203e
000e89 7830
000e8a 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000e8b 5832
000e8c 0d00
000e8d 200a
000e8e 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000e8f 6e65
000e90 5374
000e91 756f
000e92 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000e93 4e65
000e94 6d75
000e95 6562
000e96 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000e97 3e3e
000e98 2520
000e99 0064
000e9a 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000e9b 6520
000e9c 6576
000e9d 746e
000e9e 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e9f 7275
000ea0 6563
000ea1 2020
000ea2 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000ea3 2020
000ea4 3e20
000ea5 203e
000ea6 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000ea7 200a
000ea8 6c61
000ea9 7261
000eaa 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000eab 7665
000eac 6c65
000ead 2020
000eae 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000eaf 2020
000eb0 3e3e
000eb1 2520
000eb2 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000eb3 0a0d
000eb4 733c
000eb5 7465
000eb6 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000eb7 4178
000eb8 756f
000eb9 4374
000eba 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000ebb 6966
000ebc 3e67
000ebd 4320
000ebe 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000ebf 6e6e
000ec0 6c65
000ec1 4520
000ec2 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000ec3 726f
000ec4 2121
000ec5 0a0d
000ec6 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000ec7 3c0a
000ec8 6573
000ec9 4174
000eca 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000ecb 6f41
000ecc 7475
000ecd 6f43
000ece 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000ecf 6769
000ed0 203e
000ed1 7665
000ed2 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000ed3 5374
000ed4 756f
000ed5 6372
000ed6 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000ed7 6d75
000ed8 6562
000ed9 2072
000eda 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000edb 7420
000edc 6f6f
000edd 6c20
000ede 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000edf 2067
000ee0 2528
000ee1 2964
000ee2 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000ee3 0a0d
000ee4 0d00
000ee5 200a
000ee6 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000ee7 6576
000ee8 4f6c
000ee9 456e
000eea 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000eeb 746e
000eec 2020
000eed 2020
000eee 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000eef 3e3e
000ef0 2520
000ef1 0066
000ef2 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000ef3 733c
000ef4 7465
000ef5 7542
000ef6 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000ef7 7265
000ef8 6f43
000ef9 666e
000efa 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000efb 203e
000efc 7665
000efd 6e65
000efe 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000eff 756f
000f00 6372
000f01 4e65
000f02 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000f03 6562
000f04 2072
000f05 7369
000f06 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000f07 6f6f
000f08 6c20
000f09 6e6f
000f0a 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000f0b 2528
000f0c 2964
000f0d 2121
000f0e 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000f0f 0d00
000f10 200a
000f11 6e65
000f12 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000f13 656c
000f14 2020
000f15 2020
000f16 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000f17 2020
000f18 2020
000f19 2020
000f1a 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f1b 3020
000f1c 2578
000f1d 3230
000f1e 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000f1f 0a0d
000f20 6520
000f21 6576
000f22 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000f23 6f53
000f24 7275
000f25 6563
000f26 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000f27 2020
000f28 2020
000f29 3e20
000f2a 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000f2b 0a0d
000f2c 6720
000f2d 6d73
000f2e 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000f2f 4953
000f30 654c
000f31 6576
000f32 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000f33 2020
000f34 2020
000f35 3e3e
000f36 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000f37 2066
000f38 4264
000f39 0d00
000f3a 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000f3b 7367
000f3c 436d
000f3d 6572
000f3e 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000f3f 4274
000f40 6c61
000f41 6e61
000f42 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000f43 3e20
000f44 203e
000f45 6425
000f46 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000f47 6861
000f48 0074
000f49 0a0d
000f4a 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000f4b 7461
000f4c 6574
000f4d 7972
000f4e 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000f4f 6576
000f50 206c
000f51 2020
000f52 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000f53 3e3e
000f54 2520
000f55 2066
000f56 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000f57 746c
000f58 0073
000f59 0a0d
000f5a 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000f5b 6d6f
000f5c 536d
000f5d 6769
000f5e 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000f5f 4c6c
000f60 7665
000f61 6c65
000f62 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000f63 3e3e
000f64 2520
000f65 2066
000f66 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000f67 0d00
000f68 200a
000f69 6f63
000f6a 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000f6b 6f4c
000f6c 7473
000f6d 6544
000f6e 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000f6f 2079
000f70 2020
000f71 3e20
000f72 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000f73 6425
000f74 7320
000f75 6365
000f76 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000f77 200a
000f78 656d
000f79 6f6d
000f7a 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000f7b 694d
000f7c 206e
000f7d 2020
000f7e 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000f7f 2020
000f80 3e20
000f81 203e
000f82 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000f83 4d20
000f84 2e42
000f85 0d00
000f86 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000f87 6361
000f88 6d63
000f89 2020
000f8a 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000f8b 3e20
000f8c 203e
000f8d 6625
000f8e 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000f8f 0042
000f90 0a0d
000f91 6920
000f92 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000f93 2076
000f94 2020
000f95 2020
000f96 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f97 2520
000f98 2064
000f99 6142
000f9a 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000f9b 3c00
000f9c 616d
000f9d 6e69
000f9e 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000f9f 6567
000fa0 5374
000fa1 6e65
000fa2 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000fa3 4372
000fa4 6e6f
000fa5 6966
000fa6 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000fa7 6425
000fa8 2029
000fa9 7265
000faa 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000fab 0d72
000fac 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000fad 453c
000fae 4854
000faf 735f
000fb0 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fb1 4e64
000fb2 6361
000fb3 3e6b
000fb4 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000fb5 6e65
000fb6 6964
000fb7 676e
000fb8 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000fb9 0a0d
000fba 3c00
000fbb 5445
000fbc 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fbd 6573
000fbe 646e
000fbf 7453
000fc0 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000fc1 7375
000fc2 6552
000fc3 7571
000fc4 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000fc5 4174
000fc6 6b63
000fc7 203e
000fc8 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000fc9 646e
000fca 6e69
000fcb 2e67
000fcc 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000fcd 000a
000fce 453c
000fcf 4854
000fd0 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000fd1 6e65
000fd2 5364
000fd3 6174
000fd4 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000fd5 5273
000fd6 7065
000fd7 726f
000fd8 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000fd9 646d
000fda 203e
000fdb 7266
000fdc 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000fdd 4c65
000fde 6e65
000fdf 7420
000fe0 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000fe1 6c20
000fe2 6e6f
000fe3 2067
000fe4 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000fe5 2064
000fe6 7962
000fe7 6574
000fe8 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000fe9 0a0d
000fea 3c00
000feb 5445
000fec 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fed 6573
000fee 646e
000fef 7453
000ff0 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000ff1 7375
000ff2 6552
000ff3 6f70
000ff4 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
000ff5 6d43
000ff6 3e64
000ff7 6d20
000ff8 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
000ff9 6f6c
000ffa 2063
000ffb 6166
000ffc 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
000ffd 6465
000ffe 2820
000fff 6425
001000 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001001 7479
001002 7365
001003 0d29
001004 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001005 453c
001006 4854
001007 735f
001008 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001009 4564
00100a 6576
00100b 746e
00100c 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
00100d 6f70
00100e 7472
00100f 6d43
001010 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
001011 5720
001012 6f72
001013 676e
001014 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
001015 6576
001016 746e
001017 7954
001018 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
001019 3020
00101a 2578
00101b 3230
00101c 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
00101d 000a
00101e 453c
00101f 4854
001020 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001021 6e65
001022 4564
001023 6576
001024 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
001025 6552
001026 6f70
001027 7472
001028 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
001029 3e64
00102a 6120
00102b 6464
00102c 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
00102d 6e65
00102e 4c74
00102f 676f
001030 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
001031 7565
001032 2865
001033 7830
001034 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
001035 5832
001036 252c
001037 646c
001038 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
001039 2578
00103a 3230
00103b 2c58
00103c 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
00103d 3025
00103e 5832
00103f 2029
001040 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
001041 6c69
001042 6465
001043 0a0d
001044 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001045 5445
001046 5f48
001047 6573
001048 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
001049 7645
00104a 6e65
00104b 5274
00104c 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
00104d 726f
00104e 4374
00104f 646d
001050 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
001051 6573
001052 646e
001053 6e69
001054 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
001055 0d2e
001056 000a
001057 453c
001058 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001059 735f
00105a 6e65
00105b 4364
00105c 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00105d 6966
00105e 4d67
00105f 6e61
001060 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001061 4e65
001062 6361
001063 3e6b
001064 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
001065 6e65
001066 6964
001067 676e
001068 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
001069 0a0d
00106a 3c00
00106b 5445
00106c 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00106d 6573
00106e 646e
00106f 6f43
001070 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
001071 6769
001072 614d
001073 616e
001074 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001075 6341
001076 3e6b
001077 6620
001078 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
001079 656d
00107a 654c
00107b 206e
00107c 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
00107d 206f
00107e 6f6c
00107f 676e
001080 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
001081 6425
001082 6220
001083 7479
001084 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001085 0d29
001086 000a
001087 453c
001088 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001089 735f
00108a 6e65
00108b 4364
00108c 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00108d 6966
00108e 4d67
00108f 6e61
001090 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001091 4165
001092 6b63
001093 203e
001094 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
001095 6c6c
001096 636f
001097 6620
001098 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001099 656c
00109a 2064
00109b 2528
00109c 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
00109d 7962
00109e 6574
00109f 2973
0010a0 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
0010a1 3c00
0010a2 5445
0010a3 5f48
0010a4 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
0010a5 646e
0010a6 6f43
0010a7 666e
0010a8 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
0010a9 614d
0010aa 616e
0010ab 6567
0010ac 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
0010ad 3e6b
0010ae 7320
0010af 6e65
0010b0 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
0010b1 676e
0010b2 2e2e
0010b3 0a0d
0010b4 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
0010b5 5445
0010b6 5f48
0010b7 6573
0010b8 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010b9 6144
0010ba 6174
0010bb 6552
0010bc 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010bd 7472
0010be 6d43
0010bf 3e64
0010c0 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
0010c1 6f72
0010c2 676e
0010c3 6420
0010c4 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
0010c5 5461
0010c6 7079
0010c7 2065
0010c8 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
0010c9 3025
0010ca 5832
0010cb 0a0d
0010cc 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
0010cd 5445
0010ce 5f48
0010cf 6573
0010d0 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010d1 6144
0010d2 6174
0010d3 6552
0010d4 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010d5 7472
0010d6 6d43
0010d7 3e64
0010d8 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
0010d9 6464
0010da 6144
0010db 6174
0010dc 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
0010dd 5167
0010de 6575
0010df 6575
0010e0 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
0010e1 2578
0010e2 3230
0010e3 2c58
0010e4 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
0010e5 2c64
0010e6 7525
0010e7 252c
0010e8 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
0010e9 2966
0010ea 6620
0010eb 6961
0010ec 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0010ed 0d64
0010ee 000a
0010ef 453c
0010f0 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0010f1 735f
0010f2 6e65
0010f3 4464
0010f4 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
0010f5 5261
0010f6 7065
0010f7 726f
0010f8 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0010f9 646d
0010fa 203e
0010fb 6573
0010fc 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
0010fd 6e69
0010fe 2e67
0010ff 0d2e
001100 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
001101 453c
001102 4854
001103 735f
001104 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001105 4c64
001106 676f
001107 614d
001108 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
001109 7570
00110a 616c
00110b 6974
00110c 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
00110d 6341
00110e 3e6b
00110f 7320
001110 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
001111 6964
001112 676e
001113 2e2e
001114 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
001115 3c00
001116 5445
001117 5f48
001118 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
001119 646e
00111a 654e
00111b 7774
00111c 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00111d 4d6b
00111e 6961
00111f 746e
001120 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001121 6e61
001122 6563
001123 6341
001124 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
001125 7320
001126 6e65
001127 6964
001128 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
001129 2e2e
00112a 0a0d
00112b 3c00
00112c 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
00112d 5f48
00112e 6572
00112f 6f6d
001130 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
001131 6544
001132 6976
001133 6563
001134 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
001135 746e
001136 6f72
001137 416c
001138 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
001139 203e
00113a 6573
00113b 646e
00113c 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
00113d 2e67
00113e 0d2e
00113f 000a
001140 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
001141 4854
001142 635f
001143 656c
001144 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
001145 7544
001146 6c70
001147 6369
001148 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
001149 5265
00114a 7165
00114b 6575
00114c 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
00114d 6d43
00114e 3e64
00114f 7320
001150 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
001151 6964
001152 676e
001153 2e2e
001154 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
001155 0d00
001156 3c0a
001157 5445
001158 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
001159 6863
00115a 6365
00115b 506b
00115c 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
00115d 4c68
00115e 676f
00115f 203e
001160 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
001161 203d
001162 5245
001163 4f52
001164 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
001165 4e49
001166 4f46
001167 414d
001168 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
001169 4e4f
00116a 4920
00116b 204e
00116c 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
00116d 4154
00116e 4c20
00116f 474f
001170 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
001171 4555
001172 4555
001173 3d20
001174 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
001175 0a0d
001176 3c00
001177 5445
001178 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001179 6863
00117a 6365
00117b 506b
00117c 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
00117d 4c68
00117e 676f
00117f 203e
001180 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
001181 6174
001182 6f4c
001183 2067
001184 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
001185 656d
001186 255b
001187 646c
001188 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
001189 6863
00118a 255b
00118b 5d64
00118c 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
00118d 6c61
00118e 255b
00118f 322e
001190 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
001191 0a0d
001192 3c00
001193 5445
001194 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001195 6863
001196 6365
001197 506b
001198 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001199 4c68
00119a 676f
00119b 203e
00119c 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
00119d 5f47
00119e 706f
00119f 6e65
0011a0 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
0011a1 656c
0011a2 2528
0011a3 2973
0011a4 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0011a5 6961
0011a6 656c
0011a7 2c64
0011a8 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
0011a9 756f
0011aa 646c
0011ab 276e
0011ac 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
0011ad 6173
0011ae 6576
0011af 6c20
0011b0 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
0011b1 0a0d
0011b2 3c00
0011b3 5445
0011b4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011b5 6863
0011b6 6365
0011b7 506b
0011b8 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011b9 4c68
0011ba 676f
0011bb 203e
0011bc 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011bd 5f47
0011be 6e69
0011bf 6573
0011c0 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0011c1 6144
0011c2 6174
0011c3 2928
0011c4 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
0011c5 6961
0011c6 656c
0011c7 0d64
0011c8 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0011c9 453c
0011ca 4854
0011cb 635f
0011cc 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
0011cd 6b63
0011ce 7550
0011cf 6873
0011d0 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
0011d1 3e67
0011d2 4c20
0011d3 474f
0011d4 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
0011d5 6f6c
0011d6 6573
0011d7 6946
0011d8 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0011d9 2928
0011da 6620
0011db 6961
0011dc 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011dd 0d64
0011de 000a
0011df 453c
0011e0 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011e1 635f
0011e2 6568
0011e3 6b63
0011e4 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0011e5 6873
0011e6 6f4c
0011e7 3e67
0011e8 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0011e9 736e
0011ea 7265
0011eb 6574
0011ec 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
0011ed 6144
0011ee 6174
0011ef 4c20
0011f0 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
0011f1 0a0d
0011f2 0d00
0011f3 3c0a
0011f4 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0011f5 5f48
0011f6 6863
0011f7 6365
0011f8 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
0011f9 7375
0011fa 4c68
0011fb 676f
0011fc 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
0011fd 3d3d
0011fe 203d
0011ff 5245
001200 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
001201 2052
001202 4e49
001203 4f46
001204 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
001205 4954
001206 4e4f
001207 4920
001208 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
001209 5645
00120a 4e45
00120b 2054
00120c 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
00120d 2047
00120e 5551
00120f 5545
001210 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
001211 3d3d
001212 0d3d
001213 000a
001214 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
001215 4854
001216 635f
001217 6568
001218 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
001219 7550
00121a 6873
00121b 6f4c
00121c 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
00121d 4520
00121e 6576
00121f 746e
001220 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
001221 2067
001222 6974
001223 656d
001224 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
001225 646c
001226 2c5d
001227 6469
001228 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
001229 2578
00122a 3230
00122b 5d58
00122c 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
00122d 6174
00122e 5b74
00122f 7830
001230 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
001231 5832
001232 0d5d
001233 000a
001234 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
001235 4854
001236 635f
001237 6568
001238 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
001239 7550
00123a 6873
00123b 6f4c
00123c 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
00123d 4920
00123e 736e
00123f 7265
001240 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
001241 2064
001242 7645
001243 6e65
001244 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
001245 6f4c
001246 0d67
001247 000a
001248 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
001249 4854
00124a 725f
00124b 7465
00124c 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
00124d 736e
00124e 696d
00124f 3e74
001250 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
001251 6361
001252 656b
001253 2074
001254 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
001255 2578
001256 3230
001257 5d58
001258 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
001259 7078
00125a 7269
00125b 6465
00125c 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
00125d 3c00
00125e 5445
00125f 5f48
001260 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001261 7274
001262 6e61
001263 6d73
001264 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
001265 203e
001266 7075
001267 6164
001268 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
001269 6c20
00126a 676f
00126b 6144
00126c 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
00126d 7420
00126e 6d69
00126f 6f65
001270 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
001271 0a0d
001272 3c00
001273 5445
001274 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001275 6572
001276 7274
001277 6e61
001278 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
001279 7469
00127a 203e
00127b 7075
00127c 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
00127d 6574
00127e 6c20
00127f 676f
001280 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
001281 6e65
001282 2074
001283 6974
001284 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
001285 756f
001286 0d74
001287 000a
001288 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
001289 4854
00128a 725f
00128b 7465
00128c 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
00128d 736e
00128e 696d
00128f 3e74
001290 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
001291 6d6f
001292 4c6d
001293 736f
001294 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
001295 6d69
001296 7265
001297 3d20
001298 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
001299 646c
00129a 2528
00129b 586c
00129c 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
00129d 000a
00129e 453c
00129f 4854
0012a0 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
0012a1 7465
0012a2 6172
0012a3 736e
0012a4 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
0012a5 3e74
0012a6 4c20
0012a7 736f
0012a8 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0012a9 6d69
0012aa 7265
0012ab 7420
0012ac 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0012ad 2065
0012ae 656c
0012af 7466
0012b0 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0012b1 2520
0012b2 646c
0012b3 2528
0012b4 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0012b5 0d29
0012b6 000a
0012b7 0a0d
0012b8 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
0012b9 4854
0012ba 725f
0012bb 7465
0012bc 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012bd 736e
0012be 696d
0012bf 3e74
0012c0 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
0012c1 522d
0012c2 7465
0012c3 6172
0012c4 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
0012c5 696d
0012c6 7474
0012c7 6e69
0012c8 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
0012c9 202d
0012ca 305b
0012cb 2578
0012cc 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0012cd 5d58
0012ce 0a0d
0012cf 3c00
0012d0 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
0012d1 5f48
0012d2 7270
0012d3 636f
0012d4 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0012d5 5073
0012d6 6361
0012d7 656b
0012d8 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0012d9 7320
0012da 6174
0012db 7574
0012dc 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0012dd 6572
0012de 7571
0012df 7365
0012e0 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0012e1 6e69
0012e2 6176
0012e3 696c
0012e4 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0012e5 656c
0012e6 676e
0012e7 6874
0012e8 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0012e9 6425
0012ea 0d29
0012eb 000a
0012ec 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
0012ed 4854
0012ee 705f
0012ef 6f72
0012f0 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0012f1 7373
0012f2 6150
0012f3 6b63
0012f4 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0012f5 203e
0012f6 6170
0012f7 6c79
0012f8 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
0012f9 2064
0012fa 616d
0012fb 6c6c
0012fc 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
0012fd 2928
0012fe 6620
0012ff 6961
001300 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001301 0d64
001302 000a
001303 453c
001304 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001305 705f
001306 6f72
001307 6563
001308 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001309 6150
00130a 6b63
00130b 7465
00130c 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
00130d 7473
00130e 7461
00130f 7375
001310 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
001311 7571
001312 7365
001313 5074
001314 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
001315 6573
001316 2872
001317 2029
001318 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
001319 6c69
00131a 6465
00131b 0a0d
00131c 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
00131d 2d0a
00131e 732d
00131f 6174
001320 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
001321 5273
001322 7165
001323 6575
001324 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001325 6150
001326 7372
001327 7265
001328 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
001329 4320
00132a 444d
00132b 5b20
00132c 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
00132d 3025
00132e 5832
00132f 0d5d
001330 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001331 6361
001332 6563
001333 7373
001334 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
001335 6874
001336 646f
001337 2020
001338 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
001339 305b
00133a 2578
00133b 3230
00133c 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00133d 0a0d
00133e 6900
00133f 746e
001340 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
001341 6176
001342 206c
001343 2020
001344 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
001345 2020
001346 5b20
001347 7830
001348 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
001349 5834
00134a 205d
00134b 203d
00134c 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
00134d 0a0d
00134e 7300
00134f 6174
001350 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
001351 4c73
001352 7369
001353 2074
001354 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
001355 2020
001356 7c20
001357 2500
001358 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
001359 7c58
00135a 0d00
00135b 2d0a
00135c 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
00135d 2e2e
00135e 6f44
00135f 656e
001360 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
001361 2d20
001362 0d2d
001363 000a
001364 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
001365 4854
001366 705f
001367 6f72
001368 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001369 7373
00136a 6150
00136b 6b63
00136c 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00136d 203e
00136e 7473
00136f 7461
001370 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
001371 7220
001372 7065
001373 726f
001374 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
001375 6e69
001376 6176
001377 696c
001378 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001379 656c
00137a 676e
00137b 6874
00137c 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00137d 6425
00137e 0d29
00137f 000a
001380 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
001381 2d2d
001382 7473
001383 7461
001384 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
001385 6552
001386 6f70
001387 7472
001388 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
001389 7372
00138a 7265
00138b 2d2d
00138c 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
00138d 4b43
00138e 5b20
00138f 7830
001390 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
001391 5832
001392 0d5d
001393 000a
001394 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
001395 7869
001396 6954
001397 656d
001398 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
001399 2020
00139a 2020
00139b 2020
00139c 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
00139d 2578
00139e 3230
00139f 5d58
0013a0 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013a1 2578
0013a2 3230
0013a3 5d58
0013a4 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013a5 2578
0013a6 3230
0013a7 5d58
0013a8 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013a9 2578
0013aa 3230
0013ab 5d58
0013ac 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0013ad 3c00
0013ae 5445
0013af 5f48
0013b0 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0013b1 636f
0013b2 7365
0013b3 5073
0013b4 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0013b5 656b
0013b6 3e74
0013b7 6520
0013b8 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
0013b9 746e
0013ba 7220
0013bb 7065
0013bc 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
0013bd 2074
0013be 6e69
0013bf 6176
0013c0 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0013c1 2064
0013c2 656c
0013c3 676e
0013c4 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0013c5 2820
0013c6 6425
0013c7 0d29
0013c8 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0013c9 0a0d
0013ca 2d2d
0013cb 7665
0013cc 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
0013cd 5274
0013ce 7065
0013cf 726f
0013d0 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
0013d1 7261
0013d2 6573
0013d3 2d72
0013d4 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
0013d5 4341
0013d6 204b
0013d7 305b
0013d8 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0013d9 3230
0013da 5d58
0013db 0a0d
0013dc 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0013dd 5445
0013de 5f48
0013df 7270
0013e0 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013e1 7365
0013e2 5073
0013e3 6361
0013e4 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0013e5 3e74
0013e6 6720
0013e7 746f
0013e8 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0013e9 6576
0013ea 746e
0013eb 6c20
0013ec 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
0013ed 6120
0013ee 6b63
0013ef 0a0d
0013f0 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
0013f1 6f6c
0013f2 5267
0013f3 7065
0013f4 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
0013f5 3e74
0013f6 4c20
0013f7 474f
0013f8 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
0013f9 6570
0013fa 466e
0013fb 6c69
0013fc 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
0013fd 7325
0013fe 2029
0013ff 6166
001400 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
001401 6465
001402 0a0d
001403 3c00
001404 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
001405 5f47
001406 6572
001407 6461
001408 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
001409 6174
00140a 203e
00140b 4f4c
00140c 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
00140d 6573
00140e 4c74
00140f 7361
001410 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
001411 6e65
001412 2864
001413 2029
001414 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
001415 6c69
001416 6465
001417 0a0d
001418 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001419 4f4c
00141a 5f47
00141b 6572
00141c 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
00141d 6144
00141e 6174
00141f 203e
001420 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
001421 5f47
001422 6573
001423 4c74
001424 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
001425 5374
001426 6e65
001427 2864
001428 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
001429 252c
00142a 646c
00142b 0d29
00142c 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
00142d 6c3c
00142e 676f
00142f 6552
001430 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
001431 7472
001432 203e
001433 4f4c
001434 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
001435 6c63
001436 736f
001437 4665
001438 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
001439 2865
00143a 7325
00143b 2029
00143c 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
00143d 6c69
00143e 6465
00143f 0a0d
001440 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001441 5445
001442 5f48
001443 7270
001444 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
001445 7365
001446 5073
001447 6361
001448 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001449 3e74
00144a 4320
00144b 6e6f
00144c 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
00144d 2067
00144e 614d
00144f 616e
001450 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
001451 0a0d
001452 3c00
001453 5445
001454 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001455 7270
001456 636f
001457 7365
001458 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001459 6361
00145a 656b
00145b 3e74
00145c 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
00145d 6e6f
00145e 6966
00145f 7567
001460 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001461 6974
001462 6e6f
001463 6d20
001464 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
001465 6761
001466 6d65
001467 6e65
001468 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
001469 6e69
00146a 6176
00146b 696c
00146c 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00146d 656c
00146e 676e
00146f 6874
001470 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001471 6425
001472 0d29
001473 000a
001474 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001475 4854
001476 705f
001477 6f72
001478 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001479 7373
00147a 6150
00147b 6b63
00147c 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00147d 203e
00147e 6170
00147f 6c79
001480 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
001481 2064
001482 616d
001483 6c6c
001484 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001485 2528
001486 2964
001487 6620
001488 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
001489 656c
00148a 0d64
00148b 000a
00148c 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
00148d 4854
00148e 705f
00148f 6f72
001490 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001491 7373
001492 6150
001493 6b63
001494 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001495 203e
001496 6f63
001497 666e
001498 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001499 614d
00149a 616e
00149b 6567
00149c 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
00149d 7372
00149e 7265
00149f 2928
0014a0 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
0014a1 6961
0014a2 656c
0014a3 0d64
0014a4 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0014a5 0a0d
0014a6 2d2d
0014a7 6f63
0014a8 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
0014a9 6769
0014aa 614d
0014ab 616e
0014ac 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0014ad 6150
0014ae 7372
0014af 7265
0014b0 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0014b1 4320
0014b2 444d
0014b3 5b20
0014b4 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0014b5 3025
0014b6 5832
0014b7 0d5d
0014b8 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0014b9 6361
0014ba 6463
0014bb 2020
0014bc 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
0014bd 2020
0014be 2020
0014bf 2020
0014c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014c1 305b
0014c2 2578
0014c3 3230
0014c4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0014c5 0a0d
0014c6 6300
0014c7 666e
0014c8 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
0014c9 2020
0014ca 2020
0014cb 2020
0014cc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014cd 2020
0014ce 5b20
0014cf 7830
0014d0 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
0014d1 5832
0014d2 0d5d
0014d3 000a
0014d4 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0014d5 4854
0014d6 705f
0014d7 6f72
0014d8 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014d9 7373
0014da 6150
0014db 6b63
0014dc 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014dd 203e
0014de 6567
0014df 4374
0014e0 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0014e1 6966
0014e2 4c67
0014e3 6e65
0014e4 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0014e5 6620
0014e6 6961
0014e7 656c
0014e8 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0014e9 000a
0014ea 453c
0014eb 4854
0014ec 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0014ed 6f72
0014ee 6563
0014ef 7373
0014f0 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0014f1 6b63
0014f2 7465
0014f3 203e
0014f4 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
0014f5 6766
0014f6 6452
0014f7 6d20
0014f8 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
0014f9 6f6c
0014fa 2863
0014fb 2029
0014fc 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
0014fd 6c69
0014fe 6465
0014ff 0a0d
001500 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001501 5445
001502 5f48
001503 7270
001504 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
001505 7365
001506 5073
001507 6361
001508 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001509 3e74
00150a 6320
00150b 6e6f
00150c 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
00150d 5267
00150e 6165
00150f 2864
001510 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
001511 6166
001512 6c69
001513 6465
001514 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001515 3c00
001516 5445
001517 5f48
001518 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001519 636f
00151a 7365
00151b 5073
00151c 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
00151d 656b
00151e 3e74
00151f 5220
001520 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
001521 4d43
001522 2044
001523 203a
001524 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
001525 5f48
001526 6573
001527 646e
001528 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
001529 666e
00152a 6769
00152b 614d
00152c 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
00152d 6567
00152e 6341
00152f 286b
001530 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
001531 6166
001532 6c69
001533 6465
001534 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001535 3c00
001536 5445
001537 5f48
001538 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001539 636f
00153a 7365
00153b 5073
00153c 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
00153d 656b
00153e 3e74
00153f 6320
001540 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
001541 5767
001542 2072
001543 616d
001544 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
001545 636f
001546 2928
001547 6620
001548 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
001549 656c
00154a 0d64
00154b 000a
00154c 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
00154d 4854
00154e 705f
00154f 6f72
001550 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001551 7373
001552 6150
001553 6b63
001554 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001555 203e
001556 6f63
001557 666e
001558 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001559 7257
00155a 7469
00155b 2865
00155c 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
00155d 6166
00155e 6c69
00155f 6465
001560 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001561 5700
001562 5241
001563 204e
001564 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
001565 453c
001566 4854
001567 705f
001568 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001569 6563
00156a 7373
00156b 6150
00156c 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
00156d 7465
00156e 203e
00156f 5257
001570 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
001571 444d
001572 3a20
001573 4520
001574 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
001575 735f
001576 6e65
001577 4364
001578 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001579 6966
00157a 4d67
00157b 6e61
00157c 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
00157d 4165
00157e 6b63
00157f 2928
001580 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
001581 6961
001582 656c
001583 0d64
001584 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001585 453c
001586 4854
001587 705f
001588 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001589 6563
00158a 7373
00158b 6150
00158c 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
00158d 7465
00158e 203e
00158f 6f63
001590 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
001591 6769
001592 6f43
001593 666e
001594 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
001595 286d
001596 2029
001597 6166
001598 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001599 6465
00159a 0a0d
00159b 3c00
00159c 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
00159d 5f48
00159e 7270
00159f 636f
0015a0 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0015a1 5073
0015a2 6361
0015a3 656b
0015a4 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0015a5 7520
0015a6 6b6e
0015a7 6f6e
0015a8 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0015a9 7420
0015aa 7079
0015ab 2065
0015ac 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
0015ad 2072
0015ae 6f63
0015af 666e
0015b0 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0015b1 3e2d
0015b2 6361
0015b3 6463
0015b4 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
0015b5 7830
0015b6 3025
0015b7 5832
0015b8 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0015b9 000a
0015ba 453c
0015bb 4854
0015bc 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0015bd 6f72
0015be 6563
0015bf 7373
0015c0 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0015c1 6b63
0015c2 7465
0015c3 203e
0015c4 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
0015c5 6174
0015c6 7220
0015c7 7065
0015c8 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
0015c9 2074
0015ca 6e69
0015cb 6176
0015cc 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0015cd 2064
0015ce 656c
0015cf 676e
0015d0 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0015d1 2820
0015d2 6425
0015d3 0d29
0015d4 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0015d5 0a0d
0015d6 2d2d
0015d7 6164
0015d8 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0015d9 6552
0015da 6f70
0015db 7472
0015dc 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0015dd 7372
0015de 7265
0015df 2d2d
0015e0 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0015e1 4b43
0015e2 5b20
0015e3 7830
0015e4 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0015e5 5832
0015e6 0d5d
0015e7 000a
0015e8 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0015e9 4854
0015ea 705f
0015eb 6f72
0015ec 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0015ed 7373
0015ee 6150
0015ef 6b63
0015f0 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0015f1 203e
0015f2 6f67
0015f3 2074
0015f4 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
0015f5 6174
0015f6 6c20
0015f7 676f
0015f8 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
0015f9 6b63
0015fa 0a0d
0015fb 3c00
0015fc 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
0015fd 5f48
0015fe 7270
0015ff 636f
001600 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001601 5073
001602 6361
001603 656b
001604 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001605 6c20
001606 676f
001607 6d20
001608 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
001609 7069
00160a 6c75
00160b 7461
00160c 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
00160d 206e
00160e 4328
00160f 444d
001610 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
001611 6e69
001612 6176
001613 696c
001614 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001615 656c
001616 676e
001617 6874
001618 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001619 6425
00161a 0d29
00161b 000a
00161c 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00161d 4854
00161e 705f
00161f 6f72
001620 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001621 7373
001622 6150
001623 6b63
001624 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001625 203e
001626 6f6c
001627 4d67
001628 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001629 7069
00162a 6c75
00162b 7461
00162c 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
00162d 436e
00162e 646d
00162f 6150
001630 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001631 7265
001632 2928
001633 6620
001634 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
001635 656c
001636 0d64
001637 000a
001638 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001639 2d2d
00163a 6f6c
00163b 4d67
00163c 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
00163d 7069
00163e 6c75
00163f 7461
001640 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001641 436e
001642 646d
001643 6150
001644 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001645 7265
001646 2d2d
001647 4320
001648 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
001649 5b20
00164a 7830
00164b 3025
00164c 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
00164d 0d5d
00164e 000a
00164f 5374
001650 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
001651 7472
001652 2020
001653 2020
001654 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001655 2020
001656 2020
001657 255b
001658 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
001659 0d5d
00165a 000a
00165b 5374
00165c 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
00165d 2070
00165e 2020
00165f 2020
001660 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001661 2020
001662 2020
001663 255b
001664 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
001665 0d5d
001666 000a
001667 453c
001668 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001669 705f
00166a 6f72
00166b 6563
00166c 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
00166d 6150
00166e 6b63
00166f 7465
001670 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001671 6573
001672 4c74
001673 676f
001674 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
001675 696e
001676 7570
001677 616c
001678 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
001679 6353
00167a 6568
00167b 616d
00167c 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
00167d 6620
00167e 6961
00167f 656c
001680 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001681 000a
001682 453c
001683 4854
001684 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
001685 6f72
001686 6563
001687 7373
001688 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001689 6b63
00168a 7465
00168b 203e
00168c 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
00168d 2067
00168e 616d
00168f 696e
001690 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
001691 616c
001692 6974
001693 6e6f
001694 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
001695 4341
001696 294b
001697 6920
001698 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
001699 6c61
00169a 6469
00169b 6c20
00169c 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
00169d 7467
00169e 2068
00169f 2528
0016a0 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0016a1 0a0d
0016a2 0d00
0016a3 2d0a
0016a4 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
0016a5 676f
0016a6 614d
0016a7 696e
0016a8 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
0016a9 616c
0016aa 6974
0016ab 6e6f
0016ac 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
0016ad 506b
0016ae 7261
0016af 6573
0016b0 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
0016b1 202d
0016b2 4341
0016b3 204b
0016b4 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
0016b5 2578
0016b6 3230
0016b7 5d58
0016b8 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0016b9 7300
0016ba 6174
0016bb 7574
0016bc 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0016bd 2020
0016be 2020
0016bf 2020
0016c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016c1 5b20
0016c2 6c25
0016c3 5d64
0016c4 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0016c5 3c00
0016c6 5445
0016c7 5f48
0016c8 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0016c9 636f
0016ca 7365
0016cb 5073
0016cc 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0016cd 656b
0016ce 3e74
0016cf 6e20
0016d0 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
0016d1 6f77
0016d2 6b72
0016d3 6d20
0016d4 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
0016d5 746e
0016d6 6e65
0016d7 6e61
0016d8 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0016d9 6920
0016da 766e
0016db 6c61
0016dc 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0016dd 6c20
0016de 6e65
0016df 7467
0016e0 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0016e1 2528
0016e2 2964
0016e3 0a0d
0016e4 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0016e5 5445
0016e6 5f48
0016e7 7270
0016e8 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0016e9 7365
0016ea 5073
0016eb 6361
0016ec 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0016ed 3e74
0016ee 6e20
0016ef 7465
0016f0 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
0016f1 6b72
0016f2 614d
0016f3 6e69
0016f4 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
0016f5 616e
0016f6 636e
0016f7 5065
0016f8 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
0016f9 6573
0016fa 2872
0016fb 2029
0016fc 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
0016fd 6c69
0016fe 6465
0016ff 0a0d
001700 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001701 2d0a
001702 6e2d
001703 7465
001704 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
001705 6b72
001706 614d
001707 6e69
001708 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
001709 616e
00170a 636e
00170b 5065
00170c 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
00170d 6573
00170e 2d72
00170f 202d
001710 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
001711 2044
001712 305b
001713 2578
001714 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001715 5d58
001716 0a0d
001717 6300
001718 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
001719 2020
00171a 2020
00171b 2020
00171c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00171d 2020
00171e 2020
00171f 5b20
001720 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001721 3025
001722 5832
001723 0d5d
001724 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001725 6164
001726 6174
001727 654c
001728 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
001729 2020
00172a 2020
00172b 2020
00172c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00172d 255b
00172e 5d64
00172f 0a0d
001730 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
001731 7461
001732 2061
001733 2d2d
001734 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
001735 2020
001736 2020
001737 2020
001738 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
001739 000a
00173a 2d2d
00173b 2d2d
00173c 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
00173d 2d2d
00173e 0a0d
00173f 3c00
001740 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
001741 5f48
001742 7270
001743 636f
001744 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001745 5073
001746 6361
001747 656b
001748 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001749 7320
00174a 7465
00174b 6954
00174c 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
00174d 7953
00174e 636e
00174f 6353
001750 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
001751 616d
001752 2928
001753 6620
001754 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
001755 656c
001756 0d64
001757 000a
001758 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
001759 4e52
00175a 3a20
00175b 3c20
00175c 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
00175d 5f48
00175e 7270
00175f 636f
001760 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001761 5073
001762 6361
001763 656b
001764 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001765 4e20
001766 5445
001767 5f57
001768 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
001769 454d
00176a 535f
00176b 4e59
00176c 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
00176d 203a
00176e 5445
00176f 5f48
001770 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001771 646e
001772 654e
001773 7774
001774 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
001775 4d6b
001776 6961
001777 746e
001778 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001779 6e61
00177a 6563
00177b 6341
00177c 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
00177d 2029
00177e 6166
00177f 6c69
001780 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001781 0a0d
001782 3c00
001783 5445
001784 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001785 7270
001786 636f
001787 7365
001788 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001789 6361
00178a 656b
00178b 3e74
00178c 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
00178d 6d65
00178e 746f
00178f 2065
001790 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
001791 6976
001792 6563
001793 6320
001794 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
001795 7274
001796 6c6f
001797 6920
001798 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
001799 6c61
00179a 6469
00179b 6c20
00179c 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
00179d 7467
00179e 2068
00179f 2528
0017a0 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0017a1 0a0d
0017a2 3c00
0017a3 5445
0017a4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017a5 7270
0017a6 636f
0017a7 7365
0017a8 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017a9 6361
0017aa 656b
0017ab 3e74
0017ac 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017ad 6d65
0017ae 746f
0017af 4465
0017b0 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
0017b1 6369
0017b2 4365
0017b3 6e6f
0017b4 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
0017b5 6c6f
0017b6 6150
0017b7 7372
0017b8 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
0017b9 2928
0017ba 6620
0017bb 6961
0017bc 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0017bd 0d64
0017be 000a
0017bf 0a0d
0017c0 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
0017c1 6572
0017c2 6f6d
0017c3 6574
0017c4 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
0017c5 6976
0017c6 6563
0017c7 6f43
0017c8 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
0017c9 6f72
0017ca 506c
0017cb 7261
0017cc 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
0017cd 2d72
0017ce 202d
0017cf 4d43
0017d0 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
0017d1 305b
0017d2 2578
0017d3 3230
0017d4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0017d5 0a0d
0017d6 7600
0017d7 6c61
0017d8 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0017d9 2020
0017da 2020
0017db 2020
0017dc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0017dd 2020
0017de 5b20
0017df 6c25
0017e0 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0017e1 0a0d
0017e2 3c00
0017e3 5445
0017e4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017e5 7270
0017e6 636f
0017e7 7365
0017e8 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017e9 6361
0017ea 656b
0017eb 3e74
0017ec 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
0017ed 7465
0017ee 6954
0017ef 656d
0017f0 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
0017f1 636e
0017f2 6353
0017f3 6568
0017f4 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
0017f5 2528
0017f6 646c
0017f7 2029
0017f8 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
0017f9 6c69
0017fa 6465
0017fb 0a0d
0017fc 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
0017fd 5241
0017fe 204e
0017ff 203a
001800 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
001801 4854
001802 705f
001803 6f72
001804 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001805 7373
001806 6150
001807 6b63
001808 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001809 203e
00180a 4544
00180b 4356
00180c 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
00180d 5f4c
00180e 554d
00180f 4554
001810 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
001811 414c
001812 4d52
001813 3a20
001814 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
001815 4854
001816 725f
001817 6d65
001818 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
001819 4465
00181a 7665
00181b 6369
00181c 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
00181d 6e6f
00181e 7274
00181f 6c6f
001820 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
001821 286b
001822 2029
001823 6166
001824 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001825 6465
001826 0a0d
001827 3c00
001828 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
001829 5f48
00182a 7270
00182b 636f
00182c 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00182d 5073
00182e 6361
00182f 656b
001830 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001831 6320
001832 656c
001833 7261
001834 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
001835 7369
001836 2074
001837 4341
001838 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
001839 6e69
00183a 6176
00183b 696c
00183c 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00183d 656c
00183e 676e
00183f 6874
001840 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001841 6425
001842 0d29
001843 000a
001844 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001845 4854
001846 705f
001847 6f72
001848 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001849 7373
00184a 6150
00184b 6b63
00184c 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00184d 203e
00184e 6c63
00184f 6165
001850 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
001851 7369
001852 5074
001853 7261
001854 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
001855 2872
001856 2029
001857 6166
001858 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001859 6465
00185a 0a0d
00185b 0d00
00185c 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00185d 632d
00185e 656c
00185f 7261
001860 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
001861 7473
001862 6150
001863 7372
001864 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
001865 2d2d
001866 4120
001867 4b43
001868 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
001869 7830
00186a 3025
00186b 5832
00186c 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00186d 000a
00186e 7473
00186f 7461
001870 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
001871 2020
001872 2020
001873 2020
001874 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001875 2020
001876 305b
001877 2578
001878 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001879 5d58
00187a 0a0d
00187b 3c00
00187c 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
00187d 5f48
00187e 7270
00187f 636f
001880 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001881 5073
001882 6361
001883 656b
001884 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001885 6320
001886 656c
001887 7261
001888 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
001889 7075
00188a 696c
00188b 6163
00188c 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
00188d 7220
00188e 7165
00188f 6575
001890 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
001891 2820
001892 4341
001893 294b
001894 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
001895 4355
001896 4543
001897 5353
001898 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
001899 0a0d
00189a 3c00
00189b 5445
00189c 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00189d 7270
00189e 636f
00189f 7365
0018a0 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0018a1 6361
0018a2 656b
0018a3 3e74
0018a4 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
0018a5 656c
0018a6 7261
0018a7 6420
0018a8 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
0018a9 696c
0018aa 6163
0018ab 6574
0018ac 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
0018ad 7165
0018ae 6575
0018af 7473
0018b0 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
0018b1 4341
0018b2 294b
0018b3 4620
0018b4 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
0018b5 454c
0018b6 5b44
0018b7 7830
0018b8 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
0018b9 5832
0018ba 215d
0018bb 0d21
0018bc 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
0018bd 453c
0018be 4854
0018bf 705f
0018c0 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018c1 6563
0018c2 7373
0018c3 6150
0018c4 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018c5 7465
0018c6 203e
0018c7 6e75
0018c8 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
0018c9 776f
0018ca 206e
0018cb 7974
0018cc 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
0018cd 6620
0018ce 726f
0018cf 6320
0018d0 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
0018d1 6c5f
0018d2 7473
0018d3 735f
0018d4 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
0018d5 633e
0018d6 646d
0018d7 5b20
0018d8 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0018d9 3025
0018da 5832
0018db 0d5d
0018dc 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0018dd 453c
0018de 4854
0018df 705f
0018e0 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018e1 6563
0018e2 7373
0018e3 6150
0018e4 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018e5 7465
0018e6 203e
0018e7 6966
0018e8 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0018e9 6177
0018ea 6572
0018eb 7520
0018ec 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
0018ed 616f
0018ee 2064
0018ef 6168
0018f0 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
0018f1 7427
0018f2 7320
0018f3 7075
0018f4 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
0018f5 7472
0018f6 6465
0018f7 7920
0018f8 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
0018f9 0a0d
0018fa 0d00
0018fb 3c0a
0018fc 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0018fd 5f48
0018fe 7270
0018ff 636f
001900 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001901 5073
001902 6361
001903 656b
001904 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001905 6920
001906 766e
001907 6c61
001908 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
001909 6620
00190a 6172
00190b 656d
00190c 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
00190d 7079
00190e 2065
00190f 2028
001910 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
001911 5832
001912 2920
001913 2121
001914 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
001915 3c00
001916 5445
001917 5f48
001918 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001919 6563
00191a 7669
00191b 3e65
00191c 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
00191d 6c61
00191e 6f6c
00191f 2e63
001920 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
001921 4941
001922 454c
001923 2e44
001924 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
001925 000a
001926 007e
001927 0a0d
001928 6e69      	.DB  0xA,0x0,0x7E,0x0,0xD,0xA,0x69,0x6E
001929 6176
00192a 696c
00192b 2064
00192c 656c      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6C,0x65
00192d 676e
00192e 6874
00192f 2121
001930 0a0d      	.DB  0x6E,0x67,0x74,0x68,0x21,0x21,0xD,0xA
001931 3c00
001932 5445
001933 5f48
001934 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001935 6563
001936 7669
001937 3e65
001938 6320      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x63
001939 6568
00193a 6b63
00193b 7573
00193c 206d      	.DB  0x68,0x65,0x63,0x6B,0x73,0x75,0x6D,0x20
00193d 7265
00193e 6f72
00193f 0d72
001940 000a      	.DB  0x65,0x72,0x72,0x6F,0x72,0xD,0xA,0x0
001941 453c
001942 4854
001943 735f
001944 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001945 3e64
001946 5720
001947 5241
001948 494e      	.DB  0x64,0x3E,0x20,0x57,0x41,0x52,0x4E,0x49
001949 474e
00194a 3a20
00194b 5020
00194c 6361      	.DB  0x4E,0x47,0x20,0x3A,0x20,0x50,0x61,0x63
00194d 656b
00194e 2074
00194f 7369
001950 7420      	.DB  0x6B,0x65,0x74,0x20,0x69,0x73,0x20,0x74
001951 6f6f
001952 6c20
001953 6e6f
001954 2867      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x28
001955 6425
001956 6220
001957 7479
001958 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001959 0d29
00195a 000a
00195b 453c
00195c 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00195d 735f
00195e 6e65
00195f 3e64
001960 5720      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20,0x57
001961 5241
001962 494e
001963 474e
001964 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
001965 4520
001966 4854
001967 735f
001968 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001969 2064
00196a 616d
00196b 6c6c
00196c 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00196d 6620
00196e 6961
00196f 656c
001970 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
001971 2528
001972 2964
001973 0a0d
001974 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
001975 5445
001976 5f48
001977 6573
001978 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
001979 203e
00197a 5445
00197b 5f48
00197c 6461      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x61,0x64
00197d 5764
00197e 6961
00197f 5174
001980 6575      	.DB  0x64,0x57,0x61,0x69,0x74,0x51,0x75,0x65
001981 6575
001982 2928
001983 6620
001984 6961      	.DB  0x75,0x65,0x28,0x29,0x20,0x66,0x61,0x69
001985 656c
001986 2064
001987 695b
001988 3a64      	.DB  0x6C,0x65,0x64,0x20,0x5B,0x69,0x64,0x3A
001989 7830
00198a 3025
00198b 5832
00198c 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00198d 000a
00198e 453c
00198f 4854
001990 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001991 6977
001992 6374
001993 4d68
001994 646f      	.DB  0x77,0x69,0x74,0x63,0x68,0x4D,0x6F,0x64
001995 3e65
001996 7320
001997 6977
001998 6374      	.DB  0x65,0x3E,0x20,0x73,0x77,0x69,0x74,0x63
001999 2068
00199a 6f74
00199b 4320
00199c 6e6f      	.DB  0x68,0x20,0x74,0x6F,0x20,0x43,0x6F,0x6E
00199d 6966
00199e 2067
00199f 6f6d
0019a0 6564      	.DB  0x66,0x69,0x67,0x20,0x6D,0x6F,0x64,0x65
0019a1 0a0d
0019a2 3c00
0019a3 5445
0019a4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0019a5 7773
0019a6 7469
0019a7 6863
0019a8 6f4d      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x4D,0x6F
0019a9 6564
0019aa 203e
0019ab 7773
0019ac 7469      	.DB  0x64,0x65,0x3E,0x20,0x73,0x77,0x69,0x74
0019ad 6863
0019ae 7420
0019af 206f
0019b0 6f4e      	.DB  0x63,0x68,0x20,0x74,0x6F,0x20,0x4E,0x6F
0019b1 6d72
0019b2 6c61
0019b3 6d20
0019b4 646f      	.DB  0x72,0x6D,0x61,0x6C,0x20,0x6D,0x6F,0x64
0019b5 0d65
0019b6 000a
0019b7 453c
0019b8 4854      	.DB  0x65,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0019b9 675f
0019ba 7465
0019bb 6f43
0019bc 666e      	.DB  0x5F,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
0019bd 6769
0019be 203e
0019bf 7257
0019c0 7469      	.DB  0x69,0x67,0x3E,0x20,0x57,0x72,0x69,0x74
0019c1 2065
0019c2 6f74
0019c3 7520
0019c4 7261      	.DB  0x65,0x20,0x74,0x6F,0x20,0x75,0x61,0x72
0019c5 2074
0019c6 2030
0019c7 003a
0019c8 453c      	.DB  0x74,0x20,0x30,0x20,0x3A,0x0,0x3C,0x45
0019c9 4854
0019ca 735f
0019cb 7465
0019cc 6f43      	.DB  0x54,0x48,0x5F,0x73,0x65,0x74,0x43,0x6F
0019cd 666e
0019ce 6769
0019cf 203e
0019d0 616d      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D,0x61
0019d1 6c6c
0019d2 636f
0019d3 4328
0019d4 4e4f      	.DB  0x6C,0x6C,0x6F,0x63,0x28,0x43,0x4F,0x4E
0019d5 5f46
0019d6 4552
0019d7 4441
0019d8 425f      	.DB  0x46,0x5F,0x52,0x45,0x41,0x44,0x5F,0x42
0019d9 4655
0019da 4546
0019db 2952
0019dc 6620      	.DB  0x55,0x46,0x46,0x45,0x52,0x29,0x20,0x66
0019dd 6961
0019de 656c
0019df 0d64
0019e0 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0019e1 453c
0019e2 4854
0019e3 735f
0019e4 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
0019e5 6f43
0019e6 666e
0019e7 6769
0019e8 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0019e9 7257
0019ea 7469
0019eb 2065
0019ec 6f74      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x74,0x6F
0019ed 7520
0019ee 7261
0019ef 2074
0019f0 2030      	.DB  0x20,0x75,0x61,0x72,0x74,0x20,0x30,0x20
0019f1 003a
0019f2 453c
0019f3 4854
0019f4 735f      	.DB  0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
0019f5 7465
0019f6 6f43
0019f7 666e
0019f8 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
0019f9 203e
0019fa 6572
0019fb 6461
0019fc 6320      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x63
0019fd 6e6f
0019fe 6966
0019ff 2067
001a00 7266      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x20,0x66,0x72
001a01 6d6f
001a02 4520
001a03 4854
001a04 6d20      	.DB  0x6F,0x6D,0x20,0x45,0x54,0x48,0x20,0x6D
001a05 646f
001a06 6c75
001a07 2065
001a08 6166      	.DB  0x6F,0x64,0x75,0x6C,0x65,0x20,0x66,0x61
001a09 6c69
001a0a 6465
001a0b 0a0d
001a0c 2500      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x25
001a0d 3230
001a0e 2558
001a0f 3230
001a10 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a11 3230
001a12 2558
001a13 3230
001a14 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a15 3230
001a16 2558
001a17 3230
001a18 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a19 3230
001a1a 2558
001a1b 3230
001a1c 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a1d 3230
001a1e 2558
001a1f 3230
001a20 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a21 3230
001a22 2558
001a23 3230
001a24 0058      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x0
001a25 453c
001a26 4854
001a27 735f
001a28 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
001a29 6f43
001a2a 666e
001a2b 6769
001a2c 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
001a2d 6553
001a2e 2074
001a2f 7453
001a30 6972      	.DB  0x53,0x65,0x74,0x20,0x53,0x74,0x72,0x69
001a31 676e
001a32 5b20
001a33 7325
001a34 0d5d      	.DB  0x6E,0x67,0x20,0x5B,0x25,0x73,0x5D,0xD
001a35 000a
001a36 453c
001a37 4854
001a38 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a39 7465
001a3a 6f43
001a3b 666e
001a3c 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a3d 203e
001a3e 6553
001a3f 7474
001a40 6e69      	.DB  0x3E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E
001a41 2067
001a42 736d
001a43 2067
001a44 2d2d      	.DB  0x67,0x20,0x6D,0x73,0x67,0x20,0x2D,0x2D
001a45 0d2d
001a46 000a
001a47 0a0d
001a48 2d2d      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001a49 0d2d
001a4a 000a
001a4b 453c
001a4c 4854      	.DB  0x2D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001a4d 725f
001a4e 7365
001a4f 7465
001a50 203e      	.DB  0x5F,0x72,0x65,0x73,0x65,0x74,0x3E,0x20
001a51 6552
001a52 6573
001a53 7474
001a54 6e69      	.DB  0x52,0x65,0x73,0x65,0x74,0x74,0x69,0x6E
001a55 2067
001a56 7445
001a57 6568
001a58 6e72      	.DB  0x67,0x20,0x45,0x74,0x68,0x65,0x72,0x6E
001a59 7465
001a5a 4d20
001a5b 646f
001a5c 6c75      	.DB  0x65,0x74,0x20,0x4D,0x6F,0x64,0x75,0x6C
001a5d 2c65
001a5e 7020
001a5f 656c
001a60 7361      	.DB  0x65,0x2C,0x20,0x70,0x6C,0x65,0x61,0x73
001a61 2065
001a62 6177
001a63 7469
001a64 002e      	.DB  0x65,0x20,0x77,0x61,0x69,0x74,0x2E,0x0
001a65 2e2e
001a66 442e
001a67 6e6f
001a68 0d65      	.DB  0x2E,0x2E,0x2E,0x44,0x6F,0x6E,0x65,0xD
001a69 000a      	.DB  0xA,0x0
                 _0x140000:
001a6a 733c
001a6b 6174
001a6c 7574
001a6d 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001a6e 7165
001a6f 6575
001a70 7473
001a71 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
001a72 7372
001a73 7265
001a74 203e
001a75 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
001a76 6c6c
001a77 636f
001a78 6620
001a79 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001a7a 656c
001a7b 0d64
001a7c 000a
001a7d 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001a7e 6e6f
001a7f 6966
001a80 4d67
001a81 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
001a82 6761
001a83 5065
001a84 7261
001a85 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
001a86 3e72
001a87 0a0d
001a88 3c00
001a89 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
001a8a 666e
001a8b 6769
001a8c 614d
001a8d 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001a8e 6567
001a8f 6150
001a90 7372
001a91 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
001a92 203e
001a93 4552
001a94 4441
001a95 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
001a96 0d47
001a97 000a
001a98 633c
001a99 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001a9a 6966
001a9b 4d67
001a9c 6e61
001a9d 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001a9e 5065
001a9f 7261
001aa0 6573
001aa1 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
001aa2 5720
001aa3 4952
001aa4 4954
001aa5 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
001aa6 0a0d
001aa7 3c00
001aa8 6f63
001aa9 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001aaa 6769
001aab 614d
001aac 616e
001aad 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001aae 6150
001aaf 7372
001ab0 7265
001ab1 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
001ab2 6f63
001ab3 666e
001ab4 654c
001ab5 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
001ab6 203d
001ab7 6425
001ab8 0a0d
001ab9 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
001aba 6f63
001abb 666e
001abc 6769
001abd 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
001abe 616e
001abf 6567
001ac0 6150
001ac1 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
001ac2 7265
001ac3 203e
001ac4 616d
001ac5 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
001ac6 636f
001ac7 6620
001ac8 6961
001ac9 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
001aca 0d64
001acb 000a
001acc 6e3c
001acd 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
001ace 6f77
001acf 6b72
001ad0 614d
001ad1 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
001ad2 6574
001ad3 616e
001ad4 636e
001ad5 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
001ad6 7261
001ad7 6573
001ad8 3e72
001ad9 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
001ada 6c61
001adb 6f6c
001adc 2063
001add 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
001ade 6c69
001adf 6465
001ae0 2820
001ae1 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
001ae2 0d29
001ae3 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
001ae4 673c
001ae5 7465
001ae6 6f43
001ae7 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001ae8 6769
001ae9 654c
001aea 3e6e
001aeb 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001aec 6b6e
001aed 6f6e
001aee 6e77
001aef 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001af0 6e6f
001af1 6966
001af2 7567
001af3 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001af4 6974
001af5 6e6f
001af6 7420
001af7 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001af8 2065
001af9 305b
001afa 2578
001afb 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001afc 5d58
001afd 0a0d
001afe 3c00
001aff 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001b00 666e
001b01 6769
001b02 6552
001b03 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b04 203e
001b05 4f43
001b06 464e
001b07 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001b08 4f52
001b09 4550
001b0a 5452
001b0b 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001b0c 2053
001b0d 616d
001b0e 6c6c
001b0f 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001b10 2031
001b11 6166
001b12 6c69
001b13 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001b14 2820
001b15 6425
001b16 6220
001b17 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001b18 7365
001b19 0d29
001b1a 000a
001b1b 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001b1c 6e6f
001b1d 6966
001b1e 5267
001b1f 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001b20 3e64
001b21 6720
001b22 7465
001b23 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001b24 706f
001b25 7265
001b26 6974
001b27 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001b28 6f43
001b29 666e
001b2a 6769
001b2b 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001b2c 6620
001b2d 6961
001b2e 656c
001b2f 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001b30 000a
001b31 0a0d
001b32 2d2d
001b33 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001b34 4552
001b35 4441
001b36 4320
001b37 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001b38 5f46
001b39 5250
001b3a 504f
001b3b 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001b3c 4954
001b3d 5345
001b3e 2d20
001b3f 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001b40 0a0d
001b41 2500
001b42 0d73
001b43 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001b44 6425
001b45 0a0d
001b46 3c00
001b47 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001b48 666e
001b49 6769
001b4a 6552
001b4b 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b4c 203e
001b4d 4f43
001b4e 464e
001b4f 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001b50 4550
001b51 4152
001b52 4554
001b53 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001b54 6c61
001b55 6f6c
001b56 3163
001b57 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001b58 6961
001b59 656c
001b5a 2064
001b5b 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001b5c 2064
001b5d 7962
001b5e 6574
001b5f 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001b60 0a0d
001b61 3c00
001b62 6f63
001b63 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001b64 6769
001b65 6552
001b66 6461
001b67 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001b68 6567
001b69 4f74
001b6a 6570
001b6b 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001b6c 6974
001b6d 676e
001b6e 6f43
001b6f 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001b70 6769
001b71 2928
001b72 6620
001b73 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001b74 656c
001b75 0d64
001b76 000a
001b77 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001b78 2d2d
001b79 202d
001b7a 4552
001b7b 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001b7c 4320
001b7d 4e4f
001b7e 5f46
001b7f 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001b80 5245
001b81 5441
001b82 2045
001b83 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001b84 0d2d
001b85 000a
001b86 6f6d
001b87 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001b88 2020
001b89 2020
001b8a 2020
001b8b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001b8c 2020
001b8d 2020
001b8e 305b
001b8f 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001b90 3230
001b91 5d58
001b92 0a0d
001b93 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001b94 7665
001b95 6369
001b96 4565
001b97 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001b98 6c62
001b99 2065
001b9a 2020
001b9b 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001b9c 7830
001b9d 3025
001b9e 5832
001b9f 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001ba0 000a
001ba1 6c61
001ba2 7261
001ba3 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001ba4 616e
001ba5 6c62
001ba6 2065
001ba7 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001ba8 2020
001ba9 305b
001baa 2578
001bab 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001bac 5d58
001bad 0a0d
001bae 7300
001baf 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001bb0 6f73
001bb1 4572
001bb2 616e
001bb3 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001bb4 2065
001bb5 2020
001bb6 0020
001bb7 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001bb8 2578
001bb9 3230
001bba 5d58
001bbb 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001bbc 6f63
001bbd 666e
001bbe 6769
001bbf 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001bc0 6461
001bc1 203e
001bc2 4f43
001bc3 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001bc4 535f
001bc5 4e45
001bc6 4f53
001bc7 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001bc8 616d
001bc9 6c6c
001bca 636f
001bcb 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001bcc 6166
001bcd 6c69
001bce 6465
001bcf 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001bd0 6425
001bd1 6220
001bd2 7479
001bd3 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001bd4 0d29
001bd5 000a
001bd6 633c
001bd7 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001bd8 6966
001bd9 5267
001bda 6165
001bdb 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001bdc 6720
001bdd 7465
001bde 6553
001bdf 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001be0 726f
001be1 6f43
001be2 666e
001be3 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001be4 2928
001be5 6620
001be6 6961
001be7 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001be8 0d64
001be9 000a
001bea 0a0d
001beb 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001bec 202d
001bed 4552
001bee 4441
001bef 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001bf0 4e4f
001bf1 5f46
001bf2 4553
001bf3 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001bf4 524f
001bf5 5b20
001bf6 6425
001bf7 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001bf8 2d2d
001bf9 0a0d
001bfa 7300
001bfb 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001bfc 6c70
001bfd 6e69
001bfe 5267
001bff 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001c00 2065
001c01 2020
001c02 5b20
001c03 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c04 0d5d
001c05 000a
001c06 6572
001c07 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001c08 7563
001c09 7272
001c0a 6e65
001c0b 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001c0c 2020
001c0d 2020
001c0e 305b
001c0f 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001c10 3430
001c11 5d58
001c12 0a0d
001c13 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001c14 6d69
001c15 5365
001c16 6174
001c17 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001c18 6f48
001c19 7275
001c1a 2020
001c1b 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001c1c 6425
001c1d 0d5d
001c1e 000a
001c1f 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001c20 656d
001c21 7453
001c22 7261
001c23 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001c24 6e69
001c25 2020
001c26 2020
001c27 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001c28 5d64
001c29 0a0d
001c2a 7400
001c2b 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001c2c 5365
001c2d 6f74
001c2e 4870
001c2f 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001c30 2072
001c31 2020
001c32 5b20
001c33 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c34 0d5d
001c35 000a
001c36 6974
001c37 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001c38 7453
001c39 706f
001c3a 694d
001c3b 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001c3c 2020
001c3d 2020
001c3e 255b
001c3f 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001c40 0a0d
001c41 6c00
001c42 776f
001c43 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001c44 694c
001c45 696d
001c46 2074
001c47 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001c48 2020
001c49 5b20
001c4a 6625
001c4b 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001c4c 000a
001c4d 6f6c
001c4e 6577
001c4f 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001c50 6c65
001c51 7961
001c52 2020
001c53 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001c54 2020
001c55 255b
001c56 5d64
001c57 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c58 6c00
001c59 776f
001c5a 7265
001c5b 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001c5c 7274
001c5d 6d65
001c5e 2065
001c5f 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001c60 5b20
001c61 6625
001c62 0d5d
001c63 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001c64 7075
001c65 6570
001c66 4c72
001c67 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001c68 7469
001c69 2020
001c6a 2020
001c6b 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001c6c 255b
001c6d 5d66
001c6e 0a0d
001c6f 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001c70 7070
001c71 7265
001c72 6544
001c73 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001c74 2079
001c75 2020
001c76 2020
001c77 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001c78 6425
001c79 0d5d
001c7a 000a
001c7b 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001c7c 6570
001c7d 4572
001c7e 7478
001c7f 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001c80 656d
001c81 2020
001c82 2020
001c83 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001c84 5d66
001c85 0a0d
001c86 3c00
001c87 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001c88 666e
001c89 6769
001c8a 6552
001c8b 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001c8c 203e
001c8d 4f43
001c8e 464e
001c8f 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001c90 5855
001c91 4944
001c92 6d20
001c93 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001c94 6f6c
001c95 3163
001c96 6620
001c97 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001c98 656c
001c99 2064
001c9a 2528
001c9b 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001c9c 7962
001c9d 6574
001c9e 2973
001c9f 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001ca0 3c00
001ca1 6f63
001ca2 666e
001ca3 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001ca4 6552
001ca5 6461
001ca6 203e
001ca7 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001ca8 4174
001ca9 7875
001caa 6944
001cab 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001cac 6e6f
001cad 6966
001cae 2867
001caf 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001cb0 6166
001cb1 6c69
001cb2 6465
001cb3 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001cb4 0d00
001cb5 2d0a
001cb6 2d2d
001cb7 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001cb8 4145
001cb9 2044
001cba 4f43
001cbb 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001cbc 415f
001cbd 5855
001cbe 4944
001cbf 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001cc0 6425
001cc1 2d5d
001cc2 2d2d
001cc3 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001cc4 6300
001cc5 6168
001cc6 6e6e
001cc7 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001cc8 6e45
001cc9 6261
001cca 656c
001ccb 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001ccc 2020
001ccd 305b
001cce 2578
001ccf 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001cd0 5d58
001cd1 0a0d
001cd2 6100
001cd3 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001cd4 6d72
001cd5 6544
001cd6 616c
001cd7 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001cd8 2020
001cd9 2020
001cda 2020
001cdb 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001cdc 5d64
001cdd 0a0d
001cde 3c00
001cdf 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001ce0 666e
001ce1 6769
001ce2 6552
001ce3 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001ce4 203e
001ce5 4f43
001ce6 464e
001ce7 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001ce8 5855
001ce9 4f44
001cea 6d20
001ceb 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001cec 6f6c
001ced 3163
001cee 6620
001cef 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001cf0 656c
001cf1 2064
001cf2 2528
001cf3 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001cf4 7962
001cf5 6574
001cf6 2973
001cf7 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001cf8 3c00
001cf9 6f63
001cfa 666e
001cfb 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001cfc 6552
001cfd 6461
001cfe 203e
001cff 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001d00 4174
001d01 7875
001d02 6f44
001d03 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001d04 6f43
001d05 666e
001d06 6769
001d07 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001d08 6620
001d09 6961
001d0a 656c
001d0b 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001d0c 000a
001d0d 0a0d
001d0e 2d2d
001d0f 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001d10 4552
001d11 4441
001d12 4320
001d13 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001d14 5f46
001d15 5541
001d16 4458
001d17 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001d18 255b
001d19 5d64
001d1a 2d2d
001d1b 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001d1c 000a
001d1d 6863
001d1e 6e61
001d1f 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001d20 456c
001d21 616e
001d22 6c62
001d23 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001d24 2020
001d25 2020
001d26 305b
001d27 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001d28 3230
001d29 5d58
001d2a 0a0d
001d2b 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001d2c 6174
001d2d 6574
001d2e 6e4f
001d2f 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001d30 6e65
001d31 2074
001d32 2020
001d33 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001d34 5b20
001d35 6425
001d36 0d5d
001d37 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001d38 7665
001d39 6e65
001d3a 5374
001d3b 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001d3c 6372
001d3d 4e65
001d3e 6d75
001d3f 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001d40 2072
001d41 255b
001d42 5d64
001d43 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001d44 6500
001d45 6576
001d46 746e
001d47 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001d48 7275
001d49 6563
001d4a 2020
001d4b 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001d4c 2020
001d4d 0020
001d4e 633c
001d4f 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001d50 6966
001d51 5267
001d52 6165
001d53 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d54 4320
001d55 4e4f
001d56 5f46
001d57 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001d58 4158
001d59 2049
001d5a 616d
001d5b 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001d5c 636f
001d5d 2031
001d5e 6166
001d5f 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001d60 6465
001d61 2820
001d62 6425
001d63 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001d64 7479
001d65 7365
001d66 0d29
001d67 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001d68 633c
001d69 6e6f
001d6a 6966
001d6b 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d6c 6165
001d6d 3e64
001d6e 6720
001d6f 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001d70 7541
001d71 4178
001d72 6e69
001d73 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001d74 666e
001d75 6769
001d76 2928
001d77 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001d78 6961
001d79 656c
001d7a 0d64
001d7b 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001d7c 0a0d
001d7d 2d2d
001d7e 202d
001d7f 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001d80 4441
001d81 4320
001d82 4e4f
001d83 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d84 5541
001d85 4158
001d86 2049
001d87 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001d88 5d64
001d89 2d2d
001d8a 0d2d
001d8b 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001d8c 6c61
001d8d 7261
001d8e 446d
001d8f 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001d90 7961
001d91 2020
001d92 2020
001d93 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001d94 5b20
001d95 6625
001d96 0d5d
001d97 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001d98 633c
001d99 6e6f
001d9a 6966
001d9b 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d9c 6165
001d9d 3e64
001d9e 4320
001d9f 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001da0 5f46
001da1 5541
001da2 4158
001da3 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001da4 616d
001da5 6c6c
001da6 636f
001da7 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001da8 6166
001da9 6c69
001daa 6465
001dab 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001dac 6425
001dad 6220
001dae 7479
001daf 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001db0 0d29
001db1 000a
001db2 633c
001db3 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001db4 6966
001db5 5267
001db6 6165
001db7 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001db8 6720
001db9 7465
001dba 7541
001dbb 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001dbc 756f
001dbd 4374
001dbe 6e6f
001dbf 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001dc0 2867
001dc1 2029
001dc2 6166
001dc3 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001dc4 6465
001dc5 0a0d
001dc6 0d00
001dc7 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001dc8 2d2d
001dc9 5220
001dca 4145
001dcb 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001dcc 4f43
001dcd 464e
001dce 415f
001dcf 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001dd0 4f41
001dd1 5b20
001dd2 6425
001dd3 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001dd4 2d2d
001dd5 0a0d
001dd6 6c00
001dd7 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001dd8 6c65
001dd9 6e4f
001dda 7645
001ddb 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001ddc 2074
001ddd 2020
001dde 2020
001ddf 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001de0 6625
001de1 0d5d
001de2 000a
001de3 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001de4 6e6f
001de5 6966
001de6 5267
001de7 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001de8 3e64
001de9 4320
001dea 4e4f
001deb 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001dec 5542
001ded 5a5a
001dee 5245
001def 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001df0 6c61
001df1 6f6c
001df2 3163
001df3 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001df4 6961
001df5 656c
001df6 2064
001df7 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001df8 2064
001df9 7962
001dfa 6574
001dfb 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001dfc 0a0d
001dfd 3c00
001dfe 6f63
001dff 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001e00 6769
001e01 6552
001e02 6461
001e03 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001e04 6567
001e05 4274
001e06 7a75
001e07 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001e08 4372
001e09 6e6f
001e0a 6966
001e0b 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001e0c 2029
001e0d 6166
001e0e 6c69
001e0f 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001e10 0a0d
001e11 0d00
001e12 2d0a
001e13 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001e14 5220
001e15 4145
001e16 2044
001e17 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001e18 464e
001e19 425f
001e1a 5a55
001e1b 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001e1c 2052
001e1d 2d2d
001e1e 0d2d
001e1f 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001e20 6e65
001e21 6261
001e22 656c
001e23 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001e24 2020
001e25 2020
001e26 2020
001e27 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001e28 2020
001e29 305b
001e2a 2578
001e2b 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001e2c 5d58
001e2d 0a0d
001e2e 3c00
001e2f 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001e30 666e
001e31 6769
001e32 6552
001e33 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001e34 203e
001e35 4f43
001e36 464e
001e37 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001e38 564e
001e39 4c41
001e3a 5241
001e3b 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001e3c 616d
001e3d 6c6c
001e3e 636f
001e3f 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001e40 6166
001e41 6c69
001e42 6465
001e43 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001e44 6425
001e45 6220
001e46 7479
001e47 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001e48 0d29
001e49 000a
001e4a 633c
001e4b 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001e4c 6966
001e4d 5267
001e4e 6165
001e4f 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001e50 6720
001e51 7465
001e52 6e45
001e53 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001e54 616c
001e55 6d72
001e56 6f43
001e57 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001e58 6769
001e59 2928
001e5a 6620
001e5b 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001e5c 656c
001e5d 0d64
001e5e 000a
001e5f 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001e60 2d2d
001e61 202d
001e62 4552
001e63 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001e64 4320
001e65 4e4f
001e66 5f46
001e67 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001e68 4156
001e69 414c
001e6a 4d52
001e6b 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001e6c 2d2d
001e6d 0a0d
001e6e 6700
001e6f 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001e70 5352
001e71 4953
001e72 654c
001e73 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001e74 206c
001e75 2020
001e76 2020
001e77 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001e78 6625
001e79 0d5d
001e7a 000a
001e7b 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001e7c 436d
001e7d 6572
001e7e 6964
001e7f 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001e80 6c61
001e81 6e61
001e82 6563
001e83 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001e84 255b
001e85 5d64
001e86 0a0d
001e87 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001e88 7461
001e89 6574
001e8a 7972
001e8b 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001e8c 6576
001e8d 206c
001e8e 2020
001e8f 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001e90 5b20
001e91 6625
001e92 0d5d
001e93 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001e94 6f63
001e95 6d6d
001e96 6953
001e97 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001e98 6c61
001e99 654c
001e9a 6576
001e9b 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001e9c 2020
001e9d 255b
001e9e 5d66
001e9f 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001ea0 6300
001ea1 6d6f
001ea2 4c6d
001ea3 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001ea4 4474
001ea5 6c65
001ea6 7961
001ea7 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001ea8 2020
001ea9 5b20
001eaa 6425
001eab 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001eac 000a
001ead 656d
001eae 6f6d
001eaf 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001eb0 694d
001eb1 206e
001eb2 2020
001eb3 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001eb4 2020
001eb5 2020
001eb6 255b
001eb7 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001eb8 0a0d
001eb9 3c00
001eba 6f63
001ebb 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ebc 6769
001ebd 6552
001ebe 6461
001ebf 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001ec0 4f43
001ec1 464e
001ec2 535f
001ec3 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001ec4 5254
001ec5 5045
001ec6 524f
001ec7 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001ec8 616d
001ec9 6c6c
001eca 636f
001ecb 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001ecc 6166
001ecd 6c69
001ece 6465
001ecf 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001ed0 6425
001ed1 6220
001ed2 7479
001ed3 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001ed4 0d29
001ed5 000a
001ed6 633c
001ed7 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ed8 6966
001ed9 5267
001eda 6165
001edb 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001edc 6720
001edd 7465
001ede 7453
001edf 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001ee0 7375
001ee1 6552
001ee2 6f70
001ee3 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001ee4 6f43
001ee5 666e
001ee6 6769
001ee7 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001ee8 6620
001ee9 6961
001eea 656c
001eeb 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001eec 000a
001eed 0a0d
001eee 2d2d
001eef 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001ef0 4552
001ef1 4441
001ef2 4320
001ef3 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001ef4 5f46
001ef5 5453
001ef6 5441
001ef7 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001ef8 4f50
001ef9 5452
001efa 2d20
001efb 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001efc 0a0d
001efd 6100
001efe 6363
001eff 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001f00 2020
001f01 2020
001f02 5b20
001f03 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001f04 3025
001f05 5832
001f06 0d5d
001f07 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001f08 6e69
001f09 7674
001f0a 2020
001f0b 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001f0c 2020
001f0d 255b
001f0e 5d64
001f0f 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001f10 3c00
001f11 6f63
001f12 666e
001f13 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f14 6552
001f15 6461
001f16 203e
001f17 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001f18 6e6b
001f19 776f
001f1a 206e
001f1b 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001f1c 666e
001f1d 6769
001f1e 7275
001f1f 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001f20 6f69
001f21 206e
001f22 7974
001f23 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001f24 5b20
001f25 7830
001f26 3025
001f27 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001f28 0d5d
001f29 000a
001f2a 0a0d
001f2b 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001f2c 2d2d
001f2d 5720
001f2e 4952
001f2f 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001f30 4320
001f31 4e4f
001f32 4946
001f33 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001f34 6170
001f35 6b63
001f36 7465
001f37 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001f38 6425
001f39 2d29
001f3a 2d2d
001f3b 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001f3c 000a
001f3d 0a0d
001f3e 2d2d
001f3f 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f40 7257
001f41 7469
001f42 2065
001f43 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f44 464e
001f45 505f
001f46 4f52
001f47 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001f48 5452
001f49 4549
001f4a 2053
001f4b 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001f4c 002d
001f4d 633c
001f4e 6e6f
001f4f 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001f50 5767
001f51 6972
001f52 6574
001f53 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001f54 6573
001f55 5074
001f56 6f72
001f57 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001f58 7472
001f59 6569
001f5a 4373
001f5b 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001f5c 6966
001f5d 2867
001f5e 2029
001f5f 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001f60 6c69
001f61 6465
001f62 0a0d
001f63 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001f64 2d0a
001f65 2d2d
001f66 5720
001f67 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001f68 6574
001f69 4320
001f6a 4e4f
001f6b 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001f6c 504f
001f6d 5245
001f6e 5441
001f6f 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001f70 2d2d
001f71 002d
001f72 633c
001f73 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f74 6966
001f75 5767
001f76 6972
001f77 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f78 203e
001f79 6573
001f7a 4f74
001f7b 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001f7c 6172
001f7d 6974
001f7e 676e
001f7f 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001f80 666e
001f81 6769
001f82 2928
001f83 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f84 6961
001f85 656c
001f86 0d64
001f87 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f88 0a0d
001f89 2d2d
001f8a 202d
001f8b 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001f8c 7469
001f8d 2065
001f8e 4f43
001f8f 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001f90 535f
001f91 4e45
001f92 4f53
001f93 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001f94 2528
001f95 2964
001f96 2d20
001f97 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001f98 3c00
001f99 6f63
001f9a 666e
001f9b 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f9c 7257
001f9d 7469
001f9e 3e65
001f9f 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001fa0 7465
001fa1 6553
001fa2 736e
001fa3 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001fa4 6f43
001fa5 666e
001fa6 6769
001fa7 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001fa8 6620
001fa9 6961
001faa 656c
001fab 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001fac 000a
001fad 0a0d
001fae 2d2d
001faf 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001fb0 7257
001fb1 7469
001fb2 2065
001fb3 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001fb4 464e
001fb5 415f
001fb6 5855
001fb7 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001fb8 2820
001fb9 6425
001fba 2029
001fbb 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001fbc 002d
001fbd 633c
001fbe 6e6f
001fbf 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001fc0 5767
001fc1 6972
001fc2 6574
001fc3 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001fc4 6573
001fc5 4174
001fc6 7875
001fc7 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001fc8 436e
001fc9 6e6f
001fca 6966
001fcb 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001fcc 2029
001fcd 6166
001fce 6c69
001fcf 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001fd0 0a0d
001fd1 0d00
001fd2 2d0a
001fd3 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001fd4 5720
001fd5 6972
001fd6 6574
001fd7 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001fd8 4e4f
001fd9 5f46
001fda 5541
001fdb 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001fdc 204f
001fdd 2528
001fde 2964
001fdf 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001fe0 2d2d
001fe1 3c00
001fe2 6f63
001fe3 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001fe4 6769
001fe5 7257
001fe6 7469
001fe7 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001fe8 7320
001fe9 7465
001fea 7541
001feb 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
001fec 756f
001fed 4374
001fee 6e6f
001fef 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001ff0 2867
001ff1 2029
001ff2 6166
001ff3 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001ff4 6465
001ff5 0a0d
001ff6 0d00
001ff7 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001ff8 2d2d
001ff9 5720
001ffa 6972
001ffb 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
001ffc 4320
001ffd 4e4f
001ffe 5f46
001fff 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
002000 4158
002001 2049
002002 2528
002003 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
002004 2d20
002005 2d2d
002006 3c00
002007 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
002008 666e
002009 6769
00200a 7257
00200b 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
00200c 3e65
00200d 7320
00200e 7465
00200f 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
002010 4178
002011 6e69
002012 6f43
002013 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
002014 6769
002015 2928
002016 6620
002017 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
002018 656c
002019 0d64
00201a 000a
00201b 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00201c 2d2d
00201d 202d
00201e 7257
00201f 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002020 2065
002021 4f43
002022 464e
002023 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
002024 5855
002025 4f41
002026 2820
002027 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
002028 2029
002029 2d2d
00202a 002d
00202b 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
00202c 6e6f
00202d 6966
00202e 5767
00202f 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002030 6574
002031 203e
002032 6573
002033 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
002034 7875
002035 6f41
002036 7475
002037 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
002038 666e
002039 6769
00203a 2928
00203b 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
00203c 6961
00203d 656c
00203e 0d64
00203f 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002040 0a0d
002041 2d2d
002042 202d
002043 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
002044 7469
002045 2065
002046 4f43
002047 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
002048 425f
002049 5a55
00204a 455a
00204b 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
00204c 2d2d
00204d 002d
00204e 633c
00204f 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
002050 6966
002051 5767
002052 6972
002053 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
002054 203e
002055 6573
002056 4274
002057 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
002058 657a
002059 4372
00205a 6e6f
00205b 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
00205c 2867
00205d 2029
00205e 6166
00205f 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002060 6465
002061 0a0d
002062 0d00
002063 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
002064 2d2d
002065 5720
002066 6972
002067 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
002068 4320
002069 4e4f
00206a 5f46
00206b 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
00206c 4156
00206d 414c
00206e 4d52
00206f 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
002070 2d2d
002071 3c00
002072 6f63
002073 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
002074 6769
002075 7257
002076 7469
002077 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
002078 7320
002079 7465
00207a 6e45
00207b 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
00207c 616c
00207d 6d72
00207e 6f43
00207f 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
002080 6769
002081 2928
002082 6620
002083 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
002084 656c
002085 0d64
002086 000a
002087 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
002088 2d2d
002089 202d
00208a 7257
00208b 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
00208c 2065
00208d 4f43
00208e 464e
00208f 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
002090 4154
002091 5254
002092 5045
002093 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
002094 2054
002095 2d2d
002096 002d
002097 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
002098 6e6f
002099 6966
00209a 5767
00209b 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
00209c 6574
00209d 203e
00209e 6573
00209f 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
0020a0 6174
0020a1 7574
0020a2 5273
0020a3 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
0020a4 726f
0020a5 4374
0020a6 6e6f
0020a7 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
0020a8 2867
0020a9 2029
0020aa 6166
0020ab 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0020ac 6465
0020ad 0a0d
0020ae 3c00
0020af 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0020b0 4c74
0020b1 676f
0020b2 614d
0020b3 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
0020b4 7570
0020b5 616c
0020b6 6574
0020b7 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
0020b8 6568
0020b9 616d
0020ba 203e
0020bb 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
0020bc 656d
0020bd 7020
0020be 7265
0020bf 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
0020c0 2064
0020c1 7265
0020c2 6f72
0020c3 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
0020c4 7473
0020c5 7261
0020c6 5b74
0020c7 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
0020c8 5d64
0020c9 2d20
0020ca 7320
0020cb 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
0020cc 5b70
0020cd 6c25
0020ce 5d64
0020cf 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0020d0 3c00
0020d1 6573
0020d2 5474
0020d3 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
0020d4 5365
0020d5 6e79
0020d6 5363
0020d7 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
0020d8 6d65
0020d9 3e61
0020da 4720
0020db 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
0020dc 3020
0020dd 5520
0020de 696e
0020df 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
0020e0 6974
0020e1 656d
0020e2 7320
0020e3 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
0020e4 706d
0020e5 0a0d
0020e6 3c00
0020e7 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
0020e8 5474
0020e9 6d69
0020ea 5365
0020eb 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
0020ec 5363
0020ed 6863
0020ee 6d65
0020ef 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
0020f0 5220
0020f1 6365
0020f2 6965
0020f3 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
0020f4 2064
0020f5 6974
0020f6 656d
0020f7 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
0020f8 6e79
0020f9 2e63
0020fa 7020
0020fb 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
0020fc 656b
0020fd 2074
0020fe 6c25
0020ff 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
002100 000a
002101 733c
002102 7465
002103 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
002104 656d
002105 7953
002106 636e
002107 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
002108 6568
002109 616d
00210a 203e
00210b 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
00210c 5f43
00210d 6573
00210e 4274
00210f 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
002110 7261
002111 2879
002112 6c25
002113 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
002114 6620
002115 6961
002116 656c
002117 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002118 000a
002119 733c
00211a 7465
00211b 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
00211c 6574
00211d 6c41
00211e 7261
00211f 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002120 7020
002121 7265
002122 616d
002123 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
002124 746e
002125 6d20
002126 7475
002127 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
002128 6c61
002129 7261
00212a 0d6d
00212b 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
00212c 733c
00212d 7465
00212e 754d
00212f 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002130 6c41
002131 7261
002132 3e6d
002133 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
002134 766e
002135 6c61
002136 6469
002137 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
002138 7265
002139 6f69
00213a 2064
00213b 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
00213c 646c
00213d 0d29
00213e 000a
00213f 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002140 7465
002141 754d
002142 6574
002143 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
002144 7261
002145 3e6d
002146 6d20
002147 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
002148 2065
002149 6c61
00214a 7261
00214b 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
00214c 6f66
00214d 2072
00214e 6c25
00214f 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002150 6573
002151 6f63
002152 646e
002153 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
002154 3c00
002155 6573
002156 4d74
002157 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
002158 4165
002159 616c
00215a 6d72
00215b 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
00215c 4c41
00215d 5241
00215e 5f4d
00215f 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002160 6574
002161 2528
002162 646c
002163 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
002164 6166
002165 6c69
002166 6465
002167 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3351): warning: .cseg .db misalignment - padding zero byte
002168 0000      	.DB  0x0
                 _0x18001D:
002169 0000
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3353): warning: .cseg .db misalignment - padding zero byte
00216a 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
00216b 0a0d
00216c 0a0d
00216d 453c
00216e 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
00216f 615f
002170 6464
002171 6157
002172 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
002173 7551
002174 7565
002175 3e65
002176 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
002177 5241
002178 494e
002179 474e
00217a 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
00217b 5720
00217c 6961
00217d 2074
00217e 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
00217f 7565
002180 2065
002181 5546
002182 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
002183 0a0d
002184 0a0d
002185 3c00
002186 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
002187 5f48
002188 6461
002189 5764
00218a 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
00218b 5174
00218c 6575
00218d 6575
00218e 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
00218f 616d
002190 6c6c
002191 636f
002192 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
002193 2964
002194 6620
002195 6961
002196 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002197 0d64
002198 000a
002199 0a0d
00219a 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
00219b 2020
00219c 2020
00219d 2020
00219e 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00219f 2020
0021a0 2020
0021a1 2020
0021a2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021a3 2020
0021a4 2020
0021a5 2020
0021a6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021a7 2020
0021a8 2020
0021a9 2020
0021aa 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021ab 2020
0021ac 4120
0021ad 6464
0021ae 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
0021af 2820
0021b0 3025
0021b1 5832
0021b2 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
0021b3 6f74
0021b4 6520
0021b5 6874
0021b6 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
0021b7 6961
0021b8 5174
0021b9 6575
0021ba 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0021bb 255b
0021bc 5d64
0021bd 0a0d
0021be 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0021bf 200a
0021c0 2020
0021c1 2020
0021c2 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c3 2020
0021c4 2020
0021c5 2020
0021c6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c7 2020
0021c8 2020
0021c9 2020
0021ca 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021cb 2020
0021cc 2020
0021cd 2020
0021ce 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021cf 2020
0021d0 2020
0021d1 2020
0021d2 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0021d3 6f6d
0021d4 6576
0021d5 2064
0021d6 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0021d7 3230
0021d8 2958
0021d9 7420
0021da 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0021db 7465
0021dc 5f68
0021dd 6177
0021de 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0021df 7551
0021e0 7565
0021e1 5b65
0021e2 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0021e3 0d5d
0021e4 000a
0021e5 0a0d
0021e6 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
0021e7 4157
0021e8 4e52
0021e9 4e49
0021ea 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
0021eb 203a
0021ec 5445
0021ed 5f48
0021ee 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
0021ef 6f6d
0021f0 6576
0021f1 6157
0021f2 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
0021f3 7551
0021f4 7565
0021f5 2865
0021f6 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
0021f7 5832
0021f8 2029
0021f9 6f6e
0021fa 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
0021fb 6f66
0021fc 6e75
0021fd 2164
0021fe 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
0021ff 0d0a
002200 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A0015:
002201 ffff
002202 ffff
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3394): warning: .cseg .db misalignment - padding zero byte
002203 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x1A0016:
002204 0000
002205 0000
002206 0000
002207 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002208 0000
002209 0000
00220a 0000
00220b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x1A0000:
00220c 733c
00220d 6e65
00220e 6f73
00220f 5272      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x52
002210 6165
002211 3e64
002212 4520
002213 5252      	.DB  0x65,0x61,0x64,0x3E,0x20,0x45,0x52,0x52
002214 203a
002215 6863
002216 7620
002217 6c61      	.DB  0x3A,0x20,0x63,0x68,0x20,0x76,0x61,0x6C
002218 6575
002219 6f20
00221a 7475
00221b 6f20      	.DB  0x75,0x65,0x20,0x6F,0x75,0x74,0x20,0x6F
00221c 2066
00221d 6172
00221e 676e
00221f 0d65      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0xD
002220 000a
002221 733c
002222 6e65
002223 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
002224 4372
002225 6c61
002226 6269
002227 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
002228 6574
002229 3e31
00222a 4120
00222b 4f42      	.DB  0x74,0x65,0x31,0x3E,0x20,0x41,0x42,0x4F
00222c 5452
00222d 203a
00222e 6573
00222f 736e      	.DB  0x52,0x54,0x3A,0x20,0x73,0x65,0x6E,0x73
002230 726f
002231 6320
002232 2068
002233 6425      	.DB  0x6F,0x72,0x20,0x63,0x68,0x20,0x25,0x64
002234 6920
002235 2073
002236 6964
002237 6173      	.DB  0x20,0x69,0x73,0x20,0x64,0x69,0x73,0x61
002238 6c62
002239 0d65
00223a 000a
00223b 733c      	.DB  0x62,0x6C,0x65,0xD,0xA,0x0,0x3C,0x73
00223c 6e65
00223d 6f73
00223e 4372
00223f 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
002240 6269
002241 6172
002242 6574
002243 3e31      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x31,0x3E
002244 4120
002245 4f42
002246 5452
002247 203a      	.DB  0x20,0x41,0x42,0x4F,0x52,0x54,0x3A,0x20
002248 6573
002249 736e
00224a 726f
00224b 6320      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x20,0x63
00224c 2068
00224d 6425
00224e 6520
00224f 7272      	.DB  0x68,0x20,0x25,0x64,0x20,0x65,0x72,0x72
002250 726f
002251 3028
002252 2578
002253 3230      	.DB  0x6F,0x72,0x28,0x30,0x78,0x25,0x30,0x32
002254 2958
002255 0a0d
002256 3c00
002257 6573      	.DB  0x58,0x29,0xD,0xA,0x0,0x3C,0x73,0x65
002258 736e
002259 726f
00225a 6143
00225b 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
00225c 7262
00225d 7461
00225e 3265
00225f 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
002260 4241
002261 524f
002262 3a54
002263 7320      	.DB  0x41,0x42,0x4F,0x52,0x54,0x3A,0x20,0x73
002264 6e65
002265 6f73
002266 2072
002267 6863      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x20,0x63,0x68
002268 2520
002269 2064
00226a 6f4e
00226b 7320      	.DB  0x20,0x25,0x64,0x20,0x4E,0x6F,0x20,0x73
00226c 7465
00226d 7020
00226e 696f
00226f 746e      	.DB  0x65,0x74,0x20,0x70,0x6F,0x69,0x6E,0x74
002270 6620
002271 756f
002272 646e
002273 0a0d      	.DB  0x20,0x66,0x6F,0x75,0x6E,0x64,0xD,0xA
002274 3c00
002275 6573
002276 736e
002277 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
002278 6143
002279 696c
00227a 7262
00227b 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
00227c 3265
00227d 203e
00227e 2d2d
00227f 4320      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x20,0x43
002280 4c41
002281 455f
002282 5458
002283 464f      	.DB  0x41,0x4C,0x5F,0x45,0x58,0x54,0x4F,0x46
002284 5346
002285 5445
002286 2d20
002287 0d2d      	.DB  0x46,0x53,0x45,0x54,0x20,0x2D,0x2D,0xD
002288 000a
002289 733c
00228a 6e65
00228b 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
00228c 4372
00228d 6c61
00228e 6269
00228f 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
002290 6574
002291 3e32
002292 2d20
002293 432d      	.DB  0x74,0x65,0x32,0x3E,0x20,0x2D,0x2D,0x43
002294 2d2d
002295 203e
002296 6625
002297 0a0d      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x66,0xD,0xA
002298 3c00
002299 6573
00229a 736e
00229b 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00229c 6143
00229d 696c
00229e 7262
00229f 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
0022a0 3265
0022a1 203e
0022a2 2d2d
0022a3 4320      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x20,0x43
0022a4 4c41
0022a5 455f
0022a6 5458
0022a7 494c      	.DB  0x41,0x4C,0x5F,0x45,0x58,0x54,0x4C,0x49
0022a8 454e
0022a9 5241
0022aa 2d20
0022ab 0d2d      	.DB  0x4E,0x45,0x41,0x52,0x20,0x2D,0x2D,0xD
0022ac 000a
0022ad 733c
0022ae 6e65
0022af 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0022b0 4372
0022b1 6c61
0022b2 6269
0022b3 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
0022b4 6574
0022b5 3e32
0022b6 2d20
0022b7 422d      	.DB  0x74,0x65,0x32,0x3E,0x20,0x2D,0x2D,0x42
0022b8 2d2d
0022b9 203e
0022ba 6625
0022bb 0a0d      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x66,0xD,0xA
0022bc 3c00
0022bd 6573
0022be 736e
0022bf 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0022c0 6143
0022c1 696c
0022c2 7262
0022c3 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
0022c4 3265
0022c5 203e
0022c6 2d2d
0022c7 4320      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x20,0x43
0022c8 4c41
0022c9 455f
0022ca 5458
0022cb 4f50      	.DB  0x41,0x4C,0x5F,0x45,0x58,0x54,0x50,0x4F
0022cc 594c
0022cd 4f4e
0022ce 494d
0022cf 4c41      	.DB  0x4C,0x59,0x4E,0x4F,0x4D,0x49,0x41,0x4C
0022d0 2d20
0022d1 0d2d
0022d2 000a
0022d3 733c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73
0022d4 6e65
0022d5 6f73
0022d6 4372
0022d7 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
0022d8 6269
0022d9 6172
0022da 6574
0022db 3e32      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x32,0x3E
0022dc 2d20
0022dd 412d
0022de 2d2d
0022df 203e      	.DB  0x20,0x2D,0x2D,0x41,0x2D,0x2D,0x3E,0x20
0022e0 6625
0022e1 0a0d
0022e2 3c00
0022e3 6573      	.DB  0x25,0x66,0xD,0xA,0x0,0x3C,0x73,0x65
0022e4 736e
0022e5 726f
0022e6 6547
0022e7 4374      	.DB  0x6E,0x73,0x6F,0x72,0x47,0x65,0x74,0x43
0022e8 7275
0022e9 6572
0022ea 746e
0022eb 6553      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x53,0x65
0022ec 5074
0022ed 696f
0022ee 746e
0022ef 203e      	.DB  0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20
0022f0 6574
0022f1 706d
0022f2 6552
0022f3 3166      	.DB  0x74,0x65,0x6D,0x70,0x52,0x65,0x66,0x31
0022f4 3d20
0022f5 5b20
0022f6 6625
0022f7 5b5d      	.DB  0x20,0x3D,0x20,0x5B,0x25,0x66,0x5D,0x5B
0022f8 6625
0022f9 0d5d
0022fa 000a
0022fb 733c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x73
0022fc 6e65
0022fd 6f73
0022fe 4772
0022ff 7465      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x47,0x65,0x74
002300 7543
002301 7272
002302 6e65
002303 5374      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x53
002304 7465
002305 6f50
002306 6e69
002307 3e74      	.DB  0x65,0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E
002308 7420
002309 6d65
00230a 5270
00230b 6665      	.DB  0x20,0x74,0x65,0x6D,0x70,0x52,0x65,0x66
00230c 2031
00230d 6f6e
00230e 2074
00230f 6573      	.DB  0x31,0x20,0x6E,0x6F,0x74,0x20,0x73,0x65
002310 2074
002311 305b
002312 302e
002313 5d30      	.DB  0x74,0x20,0x5B,0x30,0x2E,0x30,0x30,0x5D
002314 0a0d
002315 3000
002316 302e
002317 0030      	.DB  0xD,0xA,0x0,0x30,0x2E,0x30,0x30,0x0
002318 733c
002319 6e65
00231a 6f73
00231b 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
00231c 7465
00231d 7543
00231e 7272
00231f 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
002320 5374
002321 7465
002322 6f50
002323 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
002324 3e74
002325 7420
002326 6d65
002327 5270      	.DB  0x74,0x3E,0x20,0x74,0x65,0x6D,0x70,0x52
002328 6665
002329 2032
00232a 203d
00232b 255b      	.DB  0x65,0x66,0x32,0x20,0x3D,0x20,0x5B,0x25
00232c 5d66
00232d 255b
00232e 5d66
00232f 0a0d      	.DB  0x66,0x5D,0x5B,0x25,0x66,0x5D,0xD,0xA
002330 3c00
002331 6573
002332 736e
002333 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
002334 6547
002335 4374
002336 7275
002337 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
002338 746e
002339 6553
00233a 5074
00233b 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
00233c 746e
00233d 203e
00233e 6574
00233f 706d      	.DB  0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D,0x70
002340 6552
002341 3266
002342 6e20
002343 746f      	.DB  0x52,0x65,0x66,0x32,0x20,0x6E,0x6F,0x74
002344 7320
002345 7465
002346 5b20
002347 2e30      	.DB  0x20,0x73,0x65,0x74,0x20,0x5B,0x30,0x2E
002348 3030
002349 0d5d
00234a 000a
00234b 733c      	.DB  0x30,0x30,0x5D,0xD,0xA,0x0,0x3C,0x73
00234c 6e65
00234d 6f73
00234e 4772
00234f 7465      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x47,0x65,0x74
002350 7543
002351 7272
002352 6e65
002353 5374      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x53
002354 7465
002355 6f50
002356 6e69
002357 3e74      	.DB  0x65,0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E
002358 7420
002359 6d65
00235a 5270
00235b 6665      	.DB  0x20,0x74,0x65,0x6D,0x70,0x52,0x65,0x66
00235c 2033
00235d 203d
00235e 255b
00235f 5d66      	.DB  0x33,0x20,0x3D,0x20,0x5B,0x25,0x66,0x5D
002360 255b
002361 5d66
002362 0a0d
002363 3c00      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x3C
002364 6573
002365 736e
002366 726f
002367 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
002368 4374
002369 7275
00236a 6572
00236b 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
00236c 6553
00236d 5074
00236e 696f
00236f 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
002370 203e
002371 6574
002372 706d
002373 6552      	.DB  0x3E,0x20,0x74,0x65,0x6D,0x70,0x52,0x65
002374 3366
002375 6e20
002376 746f
002377 7320      	.DB  0x66,0x33,0x20,0x6E,0x6F,0x74,0x20,0x73
002378 7465
002379 5b20
00237a 2e30
00237b 3030      	.DB  0x65,0x74,0x20,0x5B,0x30,0x2E,0x30,0x30
00237c 0d5d
00237d 000a
00237e 733c
00237f 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002380 6f73
002381 4772
002382 7465
002383 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
002384 7272
002385 6e65
002386 5374
002387 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
002388 6f50
002389 6e69
00238a 3e74
00238b 6920      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x69
00238c 766e
00238d 6c61
00238e 6469
00238f 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
002390 7261
002391 6d61
002392 6574
002393 2072      	.DB  0x61,0x72,0x61,0x6D,0x74,0x65,0x72,0x20
002394 6e70
002395 2d74
002396 5b3e
002397 6425      	.DB  0x70,0x6E,0x74,0x2D,0x3E,0x5B,0x25,0x64
002398 0d5d
002399 000a
00239a 733c
00239b 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00239c 6f73
00239d 4772
00239e 7465
00239f 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
0023a0 7272
0023a1 6e65
0023a2 5374
0023a3 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
0023a4 6f50
0023a5 6e69
0023a6 3e74
0023a7 7220      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x72
0023a8 6165
0023a9 2064
0023aa 6176
0023ab 286c      	.DB  0x65,0x61,0x64,0x20,0x76,0x61,0x6C,0x28
0023ac 6425
0023ad 2029
0023ae 203d
0023af 255b      	.DB  0x25,0x64,0x29,0x20,0x3D,0x20,0x5B,0x25
0023b0 5d73
0023b1 0a0d
0023b2 3c00
0023b3 6573      	.DB  0x73,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
0023b4 736e
0023b5 726f
0023b6 6547
0023b7 4374      	.DB  0x6E,0x73,0x6F,0x72,0x47,0x65,0x74,0x43
0023b8 7275
0023b9 6572
0023ba 746e
0023bb 6553      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x53,0x65
0023bc 5074
0023bd 696f
0023be 746e
0023bf 203e      	.DB  0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20
0023c0 756f
0023c1 2074
0023c2 666f
0023c3 6320      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x63
0023c4 6e6f
0023c5 6964
0023c6 6974
0023c7 6e6f      	.DB  0x6F,0x6E,0x64,0x69,0x74,0x69,0x6F,0x6E
0023c8 7620
0023c9 6c61
0023ca 7453
0023cb 2072      	.DB  0x20,0x76,0x61,0x6C,0x53,0x74,0x72,0x20
0023cc 203d
0023cd 2527
0023ce 2773
0023cf 3c00      	.DB  0x3D,0x20,0x27,0x25,0x73,0x27,0x0,0x3C
0023d0 6573
0023d1 736e
0023d2 726f
0023d3 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
0023d4 4374
0023d5 7275
0023d6 6572
0023d7 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
0023d8 6553
0023d9 5074
0023da 696f
0023db 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
0023dc 203e
0023dd 7562
0023de 2066
0023df 6572      	.DB  0x3E,0x20,0x62,0x75,0x66,0x20,0x72,0x65
0023e0 6461
0023e1 5b00
0023e2 6425
0023e3 005d      	.DB  0x61,0x64,0x0,0x5B,0x25,0x64,0x5D,0x0
0023e4 733c
0023e5 6e65
0023e6 6f73
0023e7 5372      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
0023e8 7465
0023e9 7543
0023ea 7272
0023eb 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
0023ec 5374
0023ed 7465
0023ee 6f50
0023ef 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
0023f0 3e74
0023f1 4120
0023f2 4f42
0023f3 5452      	.DB  0x74,0x3E,0x20,0x41,0x42,0x4F,0x52,0x54
0023f4 203a
0023f5 6573
0023f6 736e
0023f7 726f      	.DB  0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
0023f8 6320
0023f9 2068
0023fa 6425
0023fb 6920      	.DB  0x20,0x63,0x68,0x20,0x25,0x64,0x20,0x69
0023fc 2073
0023fd 6964
0023fe 6173
0023ff 6c62      	.DB  0x73,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
002400 0d65
002401 000a
002402 733c
002403 6e65      	.DB  0x65,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002404 6f73
002405 5372
002406 7465
002407 7543      	.DB  0x73,0x6F,0x72,0x53,0x65,0x74,0x43,0x75
002408 7272
002409 6e65
00240a 5374
00240b 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
00240c 6f50
00240d 6e69
00240e 3e74
00240f 4120      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x41
002410 4f42
002411 5452
002412 203a
002413 6573      	.DB  0x42,0x4F,0x52,0x54,0x3A,0x20,0x73,0x65
002414 736e
002415 726f
002416 6320
002417 2068      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x63,0x68,0x20
002418 6425
002419 6520
00241a 7272
00241b 726f      	.DB  0x25,0x64,0x20,0x65,0x72,0x72,0x6F,0x72
00241c 3028
00241d 2578
00241e 3230
00241f 2958      	.DB  0x28,0x30,0x78,0x25,0x30,0x32,0x58,0x29
002420 0a0d
002421 3c00
002422 6573
002423 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
002424 726f
002425 6553
002426 4374
002427 7275      	.DB  0x6F,0x72,0x53,0x65,0x74,0x43,0x75,0x72
002428 6572
002429 746e
00242a 6553
00242b 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
00242c 696f
00242d 746e
00242e 203e
00242f 7562      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x62,0x75
002430 3a66
002431 5b20
002432 6425
002433 2f5d      	.DB  0x66,0x3A,0x20,0x5B,0x25,0x64,0x5D,0x2F
002434 255b
002435 5d64
002436 255b
002437 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
002438 255b
002439 5d64
00243a 255b
00243b 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
00243c 255b
00243d 5d64
00243e 0a0d
00243f 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002440 6573
002441 736e
002442 726f
002443 6553      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x53,0x65
002444 4374
002445 7275
002446 6572
002447 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
002448 6553
002449 5074
00244a 696f
00244b 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
00244c 203e
00244d 6573
00244e 736e
00244f 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
002450 2520
002451 6431
002452 202c
002453 6f70      	.DB  0x20,0x25,0x31,0x64,0x2C,0x20,0x70,0x6F
002454 6e69
002455 2074
002456 3125
002457 2c64      	.DB  0x69,0x6E,0x74,0x20,0x25,0x31,0x64,0x2C
002458 7320
002459 7465
00245a 7420
00245b 206f      	.DB  0x20,0x73,0x65,0x74,0x20,0x74,0x6F,0x20
00245c 255b
00245d 5d66
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3547): warning: .cseg .db misalignment - padding zero byte
00245e 0000      	.DB  0x5B,0x25,0x66,0x5D,0x0
                 _0x1C0005:
00245f 0000
002460 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
002461 ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
002462 ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3555): warning: .cseg .db misalignment - padding zero byte
002463 00ff      	.DB  0xFF
                 _0x1E003A:
002464 ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
002465 753c
002466 6470
002467 7461
002468 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002469 6d6f
00246a 536d
00246b 6174
00246c 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
00246d 3e73
00246e 4c20
00246f 736f
002470 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
002471 6d69
002472 7265
002473 7420
002474 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
002475 2065
002476 656c
002477 7466
002478 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
002479 2520
00247a 646c
00247b 2528
00247c 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
00247d 0d29
00247e 000a
00247f 753c
002480 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
002481 7461
002482 4365
002483 6d6f
002484 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
002485 6174
002486 7574
002487 3e73
002488 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
002489 7265
00248a 6576
00248b 2072
00248c 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
00248d 6e77
00248e 2121
00248f 0d21
002490 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
002491 753c
002492 6470
002493 7461
002494 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002495 6d6f
002496 536d
002497 6174
002498 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
002499 3e73
00249a 5320
00249b 7265
00249c 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
00249d 2072
00249e 7055
00249f 2121
0024a0 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
0024a1 000a
0024a2 633c
0024a3 6568
0024a4 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
0024a5 7250
0024a6 626f
0024a7 4165
0024a8 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
0024a9 6d72
0024aa 203e
0024ab 6573
0024ac 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
0024ad 726f
0024ae 6320
0024af 6168
0024b0 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
0024b1 6c65
0024b2 6f20
0024b3 7475
0024b4 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
0024b5 2066
0024b6 6172
0024b7 676e
0024b8 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
0024b9 2528
0024ba 2964
0024bb 0a0d
0024bc 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0024bd 7075
0024be 6164
0024bf 6574
0024c0 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
0024c1 6174
0024c2 7453
0024c3 7461
0024c4 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
0024c5 203e
0024c6 4241
0024c7 524f
0024c8 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
0024c9 7320
0024ca 6e65
0024cb 6f73
0024cc 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
0024cd 6863
0024ce 6e61
0024cf 656e
0024d0 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
0024d1 756f
0024d2 2074
0024d3 666f
0024d4 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
0024d5 6e61
0024d6 6567
0024d7 2820
0024d8 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
0024d9 0d29
0024da 000a
0024db 753c
0024dc 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
0024dd 7461
0024de 4465
0024df 6e69
0024e0 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
0024e1 7461
0024e2 7375
0024e3 203e
0024e4 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
0024e5 6e61
0024e6 656e
0024e7 5b6c
0024e8 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
0024e9 205d
0024ea 756f
0024eb 2074
0024ec 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
0024ed 7220
0024ee 6e61
0024ef 6567
0024f0 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
0024f1 3c00
0024f2 6567
0024f3 4474
0024f4 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
0024f5 6369
0024f6 5365
0024f7 6174
0024f8 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
0024f9 203e
0024fa 7473
0024fb 7461
0024fc 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
0024fd 203d
0024fe 305b
0024ff 2578
002500 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
002501 5d58
002502 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3598): warning: .cseg .db misalignment - padding zero byte
002503 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
002504 ffff
002505 ffff
002506 ffff
002507 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002508 ffff
002509 ffff
00250a ffff
00250b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
00250c ffff
00250d ffff
00250e ffff
00250f ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002510 ffff
002511 ffff
002512 ffff
002513 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3606): warning: .cseg .db misalignment - padding zero byte
002514 0069      	.DB  0x69
                 _0x2200B1:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3608): warning: .cseg .db misalignment - padding zero byte
002515 0069      	.DB  0x69
                 _0x2200C5:
002516 6969      	.DB  0x69,0x69
                 _0x2200CF:
002517 6969
002518 6969
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3612): warning: .cseg .db misalignment - padding zero byte
002519 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
00251a ffff
00251b ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3616): warning: .cseg .db misalignment - padding zero byte
00251c 00ff      	.DB  0xFF
                 _0x220000:
00251d 633c
00251e 6568
00251f 6b63
002520 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
002521 7261
002522 466d
002523 6f72
002524 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
002525 6372
002526 203e
002527 5347
002528 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
002529 6f4e
00252a 2074
00252b 7573
00252c 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
00252d 726f
00252e 2074
00252f 6579
002530 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
002531 305b
002532 2578
002533 3230
002534 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
002535 0a0d
002536 3c00
002537 6863
002538 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002539 416b
00253a 616c
00253b 6d72
00253c 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
00253d 6d6f
00253e 7253
00253f 3e63
002540 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
002541 616c
002542 6d72
002543 7253
002544 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
002545 6e75
002546 6e6b
002547 776f
002548 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
002549 305b
00254a 2578
00254b 3230
00254c 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00254d 0a0d
00254e 3c00
00254f 6863
002550 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002551 536b
002552 6e65
002553 4464
002554 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
002555 6c41
002556 7261
002557 3e6d
002558 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
002559 6168
00255a 6e6e
00255b 6c65
00255c 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
00255d 7475
00255e 6f20
00255f 2066
002560 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
002561 676e
002562 2065
002563 255b
002564 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
002565 0a0d
002566 3c00
002567 6863
002568 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002569 536b
00256a 6e65
00256b 4464
00256c 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
00256d 4161
00256e 616c
00256f 6d72
002570 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002571 7250
002572 626f
002573 2065
002574 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
002575 6420
002576 7461
002577 4161
002578 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
002579 6d72
00257a 305b
00257b 2578
00257c 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
00257d 5d58
00257e 0a0d
00257f 3c00
002580 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
002581 5241
002582 5f4d
002583 6863
002584 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
002585 4d6b
002586 7475
002587 4565
002588 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
002589 7269
00258a 6465
00258b 203e
00258c 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
00258d 6176
00258e 696c
00258f 2064
002590 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
002591 6574
002592 6f4d
002593 6564
002594 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
002595 6425
002596 0d29
002597 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
002598 5444
002599 3025
00259a 6432
00259b 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
00259c 3230
00259d 2d64
00259e 3025
00259f 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
0025a0 5400
0025a1 254d
0025a2 3230
0025a3 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
0025a4 3025
0025a5 6432
0025a6 4400
0025a7 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
0025a8 6431
0025a9 2e25
0025aa 6631
0025ab 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
0025ac 2556
0025ad 6431
0025ae 5245
0025af 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
0025b0 0042
0025b1 5644
0025b2 3125
0025b3 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
0025b4 5252
0025b5 4255
0025b6 4400
0025b7 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
0025b8 6431
0025b9 5245
0025ba 4e52
0025bb 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
0025bc 5644
0025bd 3125
0025be 4564
0025bf 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
0025c0 4853
0025c1 4400
0025c2 2556
0025c3 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
0025c4 4544
0025c5 4554
0025c6 5443
0025c7 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
0025c8 0047
0025c9 4f3c
0025ca 454c
0025cb 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
0025cc 6873
0025cd 776f
0025ce 6553
0025cf 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
0025d0 726f
0025d1 6156
0025d2 756c
0025d3 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
0025d4 7320
0025d5 6e65
0025d6 6f73
0025d7 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
0025d8 6425
0025d9 2e5d
0025da 7473
0025db 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
0025dc 7375
0025dd 7520
0025de 6b6e
0025df 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
0025e0 6e77
0025e1 5b20
0025e2 7830
0025e3 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
0025e4 5832
0025e5 0d5d
0025e6 000a
0025e7 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
0025e8 3125
0025e9 4e64
0025ea 412f
0025eb 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
0025ec 3147
0025ed 4200
0025ee 304c
0025ef 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
0025f0 314c
0025f1 4200
0025f2 324c
0025f3 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
0025f4 334c
0025f5 4200
0025f6 344c
0025f7 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
0025f8 4c4f
0025f9 4445
0025fa 735f
0025fb 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
0025fc 4977
0025fd 706e
0025fe 7475
0025ff 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
002600 7461
002601 7375
002602 203e
002603 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
002604 3a52
002605 6320
002606 2068
002607 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
002608 756c
002609 2065
00260a 756f
00260b 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
00260c 666f
00260d 7220
00260e 6e61
00260f 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
002610 212e
002611 0d21
002612 000a
002613 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
002614 3125
002615 2564
002616 6431
002617 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
002618 4c4f
002619 4445
00261a 735f
00261b 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
00261c 4f77
00261d 7475
00261e 7570
00261f 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
002620 6174
002621 7574
002622 3e73
002623 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
002624 5252
002625 203a
002626 6863
002627 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
002628 6c61
002629 6575
00262a 6f20
00262b 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
00262c 6f20
00262d 2066
00262e 6172
00262f 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
002630 2e65
002631 2121
002632 0a0d
002633 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
002634 2550
002635 6431
002636 3125
002637 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002638 4353
002639 3125
00263a 0064
00263b 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
00263c 3125
00263d 0064
00263e 5a42
00263f 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
002640 0064
002641 534d
002642 3125
002643 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
002644 4c41
002645 3125
002646 2564
002647 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
002648 3125
002649 2564
00264a 6431
00264b 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
00264c 2564
00264d 6431
00264e 3125
00264f 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
002650 6431
002651 3125
002652 2564
002653 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
002654 3125
002655 2564
002656 6431
002657 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
002658 210a
002659 2121
00265a 2021
00265b 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
00265c 4445
00265d 4520
00265e 7272
00265f 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
002660 2120
002661 2121
002662 0d21
002663 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
002664 6e49
002665 7469
002666 6169
002667 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
002668 697a
002669 676e
00266a 4f20
00266b 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
00266c 2e44
00266d 202e
00266e 4f00
00266f 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
002670 000a      	.DB  0xA,0x0
                 _0x260003:
002671 3a30
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3706): warning: .cseg .db misalignment - padding zero byte
002672 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
002673 4600
002674 5f52
002675 4944
002676 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
002677 455f
002678 5252
002679 4600
00267a 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
00267b 4e49
00267c 5f54
00267d 5245
00267e 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
00267f 5246
002680 4e5f
002681 544f
002682 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
002683 4145
002684 5944
002685 4600
002686 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
002687 4f4e
002688 465f
002689 4c49
00268a 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
00268b 5246
00268c 4e5f
00268d 5f4f
00268e 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
00268f 4854
002690 4600
002691 5f52
002692 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
002693 4156
002694 494c
002695 5f44
002696 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
002697 454d
002698 4600
002699 5f52
00269a 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
00269b 494e
00269c 4445
00269d 4600
00269e 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
00269f 5845
0026a0 5349
0026a1 0054
0026a2 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
0026a3 495f
0026a4 564e
0026a5 4c41
0026a6 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
0026a7 4f5f
0026a8 4a42
0026a9 4345
0026aa 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
0026ab 5246
0026ac 575f
0026ad 4952
0026ae 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
0026af 505f
0026b0 4f52
0026b1 4554
0026b2 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
0026b3 4445
0026b4 4600
0026b5 5f52
0026b6 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
0026b7 4156
0026b8 494c
0026b9 5f44
0026ba 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
0026bb 5649
0026bc 0045
0026bd 5246
0026be 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
0026bf 544f
0026c0 455f
0026c1 414e
0026c2 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
0026c3 4445
0026c4 4600
0026c5 5f52
0026c6 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
0026c7 465f
0026c8 4c49
0026c9 5345
0026ca 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
0026cb 4554
0026cc 004d
0026cd 5246
0026ce 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
0026cf 464b
0026d0 5f53
0026d1 4241
0026d2 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
0026d3 4554
0026d4 0044
0026d5 5246
0026d6 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
0026d7 4d49
0026d8 4f45
0026d9 5455
0026da 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
0026db 5245
0026dc 3e52
0026dd 2520
0026de 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
0026df 0a0d
0026e0 3c00
0026e1 4453
0026e2 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
0026e3 6972
0026e4 6574
0026e5 6144
0026e6 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
0026e7 203e
0026e8 4453
0026e9 4320
0026ea 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0026eb 2064
0026ec 6f6e
0026ed 2074
0026ee 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0026ef 6461
0026f0 0d79
0026f1 000a
0026f2 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
0026f3 5f44
0026f4 7277
0026f5 7469
0026f6 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0026f7 7461
0026f8 3e61
0026f9 6620
0026fa 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
0026fb 6573
0026fc 6b65
0026fd 2528
0026fe 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
0026ff 6620
002700 6961
002701 656c
002702 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
002703 0d21
002704 000a
002705 533c
002706 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
002707 7277
002708 7469
002709 4465
00270a 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
00270b 3e61
00270c 6620
00270d 775f
00270e 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
00270f 6574
002710 2928
002711 6620
002712 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002713 656c
002714 0d64
002715 000a
002716 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
002717 5f44
002718 7277
002719 7469
00271a 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00271b 7461
00271c 3e61
00271d 6120
00271e 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
00271f 6175
002720 5f6c
002721 7277
002722 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
002723 5b65
002724 7525
002725 205d
002726 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
002727 6c20
002728 6e65
002729 255b
00272a 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
00272b 0a0d
00272c 3c00
00272d 4453
00272e 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
00272f 6165
002730 4464
002731 7461
002732 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
002733 5320
002734 2044
002735 6143
002736 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
002737 6e20
002738 746f
002739 7220
00273a 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
00273b 7964
00273c 0a0d
00273d 3c00
00273e 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
00273f 725f
002740 6165
002741 4464
002742 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002743 3e61
002744 6620
002745 6c5f
002746 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
002747 6b65
002748 2528
002749 2975
00274a 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
00274b 6961
00274c 656c
00274d 2164
00274e 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
00274f 000a
002750 533c
002751 5f44
002752 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
002753 6461
002754 6144
002755 6174
002756 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
002757 5f66
002758 6572
002759 6461
00275a 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
00275b 6620
00275c 6961
00275d 656c
00275e 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00275f 000a
002760 533c
002761 5f44
002762 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
002763 7469
002764 4465
002765 7461
002766 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
002767 6120
002768 7463
002769 6175
00276a 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
00276b 6572
00276c 6461
00276d 255b
00276e 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
00276f 2120
002770 203d
002771 656c
002772 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
002773 7525
002774 0d5d
002775 000a
002776 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
002777 5f44
002778 6572
002779 6461
00277a 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
00277b 6f6d
00277c 7972
00277d 6552
00277e 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
00277f 6e69
002780 203e
002781 5f66
002782 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
002783 6674
002784 6572
002785 2865
002786 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
002787 2029
002788 7265
002789 6f72
00278a 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
00278b 0d21
00278c 000a
00278d 6f4c
00278e 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
00278f 6163
002790 206c
002791 7264
002792 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
002793 2065
002794 3a30
002795 6d20
002796 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
002797 746e
002798 6465
002799 4520
00279a 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
00279b 524f
00279c 0a0d
00279d 4c00
00279e 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
00279f 6369
0027a0 6c61
0027a1 6420
0027a2 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
0027a3 6576
0027a4 3020
0027a5 203a
0027a6 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
0027a7 6e75
0027a8 6574
0027a9 2064
0027aa 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
0027ab 0a0d
0027ac 4c00
0027ad 676f
0027ae 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
0027af 6c61
0027b0 6420
0027b1 6972
0027b2 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
0027b3 3020
0027b4 203a
0027b5 6e75
0027b6 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
0027b7 6e75
0027b8 6574
0027b9 2064
0027ba 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
0027bb 4f52
0027bc 0d52
0027bd 000a
0027be 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
0027bf 6967
0027c0 6163
0027c1 206c
0027c2 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
0027c3 7669
0027c4 2065
0027c5 3a30
0027c6 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
0027c7 6d6e
0027c8 756f
0027c9 746e
0027ca 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
0027cb 4f20
0027cc 0d4b
0027cd 000a
0027ce 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
0027cf 5f44
0027d0 6572
0027d1 6f6d
0027d2 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
0027d3 3e74
0027d4 5320
0027d5 5f44
0027d6 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
0027d7 6f6d
0027d8 6e75
0027d9 2874
0027da 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
0027db 6166
0027dc 6c69
0027dd 6465
0027de 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0027df 3c00
0027e0 4453
0027e1 725f
0027e2 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
0027e3 756f
0027e4 746e
0027e5 203e
0027e6 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
0027e7 6d5f
0027e8 756f
0027e9 746e
0027ea 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
0027eb 6620
0027ec 6961
0027ed 656c
0027ee 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0027ef 000a
0027f0 533c
0027f1 5f44
0027f2 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
0027f3 6165
0027f4 6574
0027f5 6946
0027f6 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
0027f7 203e
0027f8 4453
0027f9 4320
0027fa 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0027fb 2064
0027fc 6f6e
0027fd 2074
0027fe 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0027ff 6461
002800 0d79
002801 000a
002802 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
002803 7325
002804 3c00
002805 4453
002806 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
002807 6572
002808 7461
002809 4665
00280a 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
00280b 3e65
00280c 6620
00280d 6f5f
00280e 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
00280f 286e
002810 2029
002811 6166
002812 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002813 6465
002814 0a0d
002815 3c00
002816 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
002817 635f
002818 6572
002819 7461
00281a 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
00281b 6c69
00281c 3e65
00281d 6620
00281e 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
00281f 6f6c
002820 6573
002821 2928
002822 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
002823 6961
002824 656c
002825 0d64
002826 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002827 533c
002828 5f44
002829 706f
00282a 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
00282b 6946
00282c 656c
00282d 203e
00282e 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
00282f 4320
002830 7261
002831 2064
002832 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002833 2074
002834 6572
002835 6461
002836 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
002837 000a
002838 533c
002839 5f44
00283a 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
00283b 6e65
00283c 6946
00283d 656c
00283e 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
00283f 5f66
002840 706f
002841 6e65
002842 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
002843 5b20
002844 7325
002845 205d
002846 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
002847 6c69
002848 6465
002849 0a0d
00284a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00284b 4453
00284c 635f
00284d 6f6c
00284e 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
00284f 6946
002850 656c
002851 203e
002852 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002853 4320
002854 7261
002855 2064
002856 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002857 2074
002858 6572
002859 6461
00285a 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
00285b 000a
00285c 533c
00285d 5f44
00285e 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
00285f 736f
002860 4665
002861 6c69
002862 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
002863 6620
002864 635f
002865 6f6c
002866 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
002867 2928
002868 6620
002869 6961
00286a 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
00286b 0d64
00286c 000a
00286d 533c
00286e 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
00286f 6e69
002870 7469
002871 203e
002872 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
002873 7261
002874 2074
002875 6e69
002876 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
002877 6169
002878 206c
002879 656d
00287a 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
00287b 7972
00287c 6320
00287d 7261
00287e 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
00287f 000a
002880 0a0d
002881 533c
002882 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
002883 6e69
002884 7469
002885 203e
002886 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
002887 6e75
002888 6974
002889 676e
00288a 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
00288b 2044
00288c 6143
00288d 6472
00288e 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
00288f 002e
002890 533c
002891 5f44
002892 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
002893 7469
002894 203e
002895 4453
002896 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
002897 756f
002898 746e
002899 2928
00289a 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
00289b 6961
00289c 656c
00289d 0d64
00289e 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00289f 0a0d
0028a0 533c
0028a1 5f44
0028a2 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
0028a3 7469
0028a4 203e
0028a5 6843
0028a6 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
0028a7 206b
0028a8 6143
0028a9 6472
0028aa 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
0028ab 7a69
0028ac 2e65
0028ad 2e2e
0028ae 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
0028af 4453
0028b0 695f
0028b1 696e
0028b2 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
0028b3 5320
0028b4 5f44
0028b5 6572
0028b6 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
0028b7 654d
0028b8 6f6d
0028b9 7972
0028ba 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
0028bb 616d
0028bc 6e69
0028bd 2928
0028be 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
0028bf 6961
0028c0 656c
0028c1 0d64
0028c2 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0028c3 533c
0028c4 5f44
0028c5 6e69
0028c6 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
0028c7 203e
0028c8 7246
0028c9 6565
0028ca 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
0028cb 6170
0028cc 6563
0028cd 6f20
0028ce 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
0028cf 6f6c
0028d0 6967
0028d1 6163
0028d2 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
0028d3 7264
0028d4 7669
0028d5 2065
0028d6 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
0028d7 2520
0028d8 756c
0028d9 6b20
0028da 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
0028db 6574
0028dc 0d73
0028dd 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
0028de 6164
0028df 6174
0028e0 6c2e
0028e1 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
0028e2 7665
0028e3 6e65
0028e4 2e74
0028e5 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3867): warning: .cseg .db misalignment - padding zero byte
0028e6 0067      	.DB  0x67
                 _0x280005:
0028e7 7265
0028e8 6f72
0028e9 2e72
0028ea 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(3870): warning: .cseg .db misalignment - padding zero byte
0028eb 0067      	.DB  0x67
                 _0x280006:
0028ec 0000
0028ed 0000
0028ee 0000
0028ef 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0028f0 ffff
0028f1 ffff
0028f2 ffff
0028f3 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
0028f4 7e62
0028f5 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
0028f6 7ea1
0028f7 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
0028f8 4c3c
0028f9 474f
0028fa 695f
0028fb 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
0028fc 7265
0028fd 4474
0028fe 7461
0028ff 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
002900 4c20
002901 474f
002902 675f
002903 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002904 614c
002905 7473
002906 6e49
002907 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002908 7472
002909 2928
00290a 6620
00290b 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
00290c 656c
00290d 0d64
00290e 000a
00290f 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002910 474f
002911 695f
002912 736e
002913 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002914 4474
002915 7461
002916 3e61
002917 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
002918 5f44
002919 7277
00291a 7469
00291b 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00291c 7461
00291d 2861
00291e 6c66
00291f 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002920 2029
002921 6166
002922 6c69
002923 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002924 0a0d
002925 3c00
002926 4f4c
002927 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002928 6e69
002929 6573
00292a 7472
00292b 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
00292c 6174
00292d 203e
00292e 4453
00292f 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
002930 6972
002931 6574
002932 6144
002933 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002934 7428
002935 6d69
002936 7365
002937 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
002938 706d
002939 2029
00293a 6166
00293b 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
00293c 6465
00293d 0a0d
00293e 3c00
00293f 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002940 5f47
002941 6e69
002942 6573
002943 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002944 6144
002945 6174
002946 203e
002947 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002948 775f
002949 6972
00294a 6574
00294b 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
00294c 6174
00294d 6328
00294e 6168
00294f 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
002950 6c65
002951 2029
002952 6166
002953 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
002954 6465
002955 0a0d
002956 3c00
002957 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002958 5f47
002959 6e69
00295a 6573
00295b 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
00295c 6144
00295d 6174
00295e 203e
00295f 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002960 775f
002961 6972
002962 6574
002963 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
002964 6174
002965 7628
002966 6c61
002967 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
002968 2029
002969 6166
00296a 6c69
00296b 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00296c 0a0d
00296d 3c00
00296e 4f4c
00296f 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002970 6e69
002971 6573
002972 7472
002973 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
002974 6174
002975 203e
002976 4f4c
002977 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002978 6573
002979 4c74
00297a 7361
00297b 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
00297c 736e
00297d 7265
00297e 2874
00297f 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002980 2964
002981 6620
002982 6961
002983 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002984 0d64
002985 000a
002986 4c3c
002987 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002988 725f
002989 6165
00298a 4464
00298b 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
00298c 3e61
00298d 4c20
00298e 474f
00298f 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
002990 7465
002991 614c
002992 7473
002993 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
002994 6573
002995 7472
002996 2928
002997 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
002998 6961
002999 656c
00299a 0d64
00299b 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00299c 4c3c
00299d 474f
00299e 725f
00299f 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
0029a0 4464
0029a1 7461
0029a2 3e61
0029a3 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
0029a4 474f
0029a5 675f
0029a6 7465
0029a7 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
0029a8 7473
0029a9 6553
0029aa 646e
0029ab 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
0029ac 6620
0029ad 6961
0029ae 656c
0029af 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0029b0 000a
0029b1 4c3c
0029b2 474f
0029b3 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
0029b4 6165
0029b5 4564
0029b6 6576
0029b7 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
0029b8 203e
0029b9 616c
0029ba 7473
0029bb 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
0029bc 646e
0029bd 6c2f
0029be 7361
0029bf 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
0029c0 736e
0029c1 7265
0029c2 2074
0029c3 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
0029c4 3e2d
0029c5 2520
0029c6 646c
0029c7 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
0029c8 646c
0029c9 0a0d
0029ca 3c00
0029cb 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029cc 5f47
0029cd 6572
0029ce 6461
0029cf 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0029d0 6174
0029d1 203e
0029d2 6f4c
0029d3 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
0029d4 6d65
0029d5 7470
0029d6 2e79
0029d7 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
0029d8 0d21
0029d9 000a
0029da 443c
0029db 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
0029dc 4755
0029dd 435f
0029de 656c
0029df 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
0029e0 6f4c
0029e1 4667
0029e2 6c69
0029e3 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
0029e4 4c20
0029e5 474f
0029e6 635f
0029e7 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
0029e8 7461
0029e9 4665
0029ea 6c69
0029eb 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
0029ec 7325
0029ed 2029
0029ee 6166
0029ef 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0029f0 6465
0029f1 0a0d
0029f2 3c00
0029f3 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029f4 5f47
0029f5 6572
0029f6 6461
0029f7 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0029f8 6174
0029f9 203e
0029fa 4453
0029fb 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
0029fc 6165
0029fd 4464
0029fe 7461
0029ff 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002a00 6c66
002a01 6761
002a02 2029
002a03 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002a04 6c69
002a05 6465
002a06 0a0d
002a07 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002a08 4f4c
002a09 5f47
002a0a 6572
002a0b 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002a0c 6144
002a0d 6174
002a0e 203e
002a0f 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002a10 725f
002a11 6165
002a12 4464
002a13 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002a14 2861
002a15 6974
002a16 656d
002a17 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002a18 6d61
002a19 2970
002a1a 6620
002a1b 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002a1c 656c
002a1d 0d64
002a1e 000a
002a1f 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a20 474f
002a21 725f
002a22 6165
002a23 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
002a24 7461
002a25 3e61
002a26 5320
002a27 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
002a28 6572
002a29 6461
002a2a 6144
002a2b 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a2c 6328
002a2d 6168
002a2e 6e6e
002a2f 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
002a30 2029
002a31 6166
002a32 6c69
002a33 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a34 0a0d
002a35 3c00
002a36 4f4c
002a37 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a38 6572
002a39 6461
002a3a 6144
002a3b 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a3c 203e
002a3d 4453
002a3e 725f
002a3f 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002a40 4464
002a41 7461
002a42 2861
002a43 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
002a44 756c
002a45 2965
002a46 6620
002a47 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
002a48 656c
002a49 0d64
002a4a 000a
002a4b 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a4c 474f
002a4d 695f
002a4e 736e
002a4f 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002a50 4574
002a51 6576
002a52 746e
002a53 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002a54 4f4c
002a55 5f47
002a56 6567
002a57 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
002a58 7361
002a59 4974
002a5a 736e
002a5b 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
002a5c 2874
002a5d 2029
002a5e 6166
002a5f 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002a60 6465
002a61 0a0d
002a62 3c00
002a63 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a64 5f47
002a65 6e69
002a66 6573
002a67 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002a68 7645
002a69 6e65
002a6a 3e74
002a6b 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002a6c 5f44
002a6d 7277
002a6e 7469
002a6f 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002a70 7461
002a71 2861
002a72 6c66
002a73 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002a74 2029
002a75 6166
002a76 6c69
002a77 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a78 0a0d
002a79 3c00
002a7a 4f4c
002a7b 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a7c 6e69
002a7d 6573
002a7e 7472
002a7f 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
002a80 6e65
002a81 3e74
002a82 5320
002a83 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002a84 7277
002a85 7469
002a86 4465
002a87 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002a88 2861
002a89 6974
002a8a 656d
002a8b 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002a8c 6d61
002a8d 2970
002a8e 6620
002a8f 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002a90 656c
002a91 0d64
002a92 000a
002a93 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a94 474f
002a95 695f
002a96 736e
002a97 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002a98 4574
002a99 6576
002a9a 746e
002a9b 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002a9c 4453
002a9d 775f
002a9e 6972
002a9f 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
002aa0 6144
002aa1 6174
002aa2 6928
002aa3 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002aa4 6620
002aa5 6961
002aa6 656c
002aa7 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002aa8 000a
002aa9 4c3c
002aaa 474f
002aab 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002aac 736e
002aad 7265
002aae 4574
002aaf 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002ab0 746e
002ab1 203e
002ab2 4453
002ab3 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002ab4 6972
002ab5 6574
002ab6 6144
002ab7 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002ab8 7328
002ab9 6174
002aba 7574
002abb 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002abc 6620
002abd 6961
002abe 656c
002abf 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002ac0 000a
002ac1 4c3c
002ac2 474f
002ac3 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002ac4 736e
002ac5 7265
002ac6 4574
002ac7 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002ac8 746e
002ac9 203e
002aca 4f4c
002acb 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002acc 6573
002acd 4c74
002ace 7361
002acf 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002ad0 736e
002ad1 7265
002ad2 2874
002ad3 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002ad4 2964
002ad5 6620
002ad6 6961
002ad7 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002ad8 0d64
002ad9 000a
002ada 4c3c
002adb 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002adc 725f
002add 6165
002ade 4564
002adf 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002ae0 746e
002ae1 203e
002ae2 4f4c
002ae3 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002ae4 6567
002ae5 4c74
002ae6 7361
002ae7 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002ae8 736e
002ae9 7265
002aea 2874
002aeb 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
002aec 6166
002aed 6c69
002aee 6465
002aef 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002af0 3c00
002af1 4f4c
002af2 5f47
002af3 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
002af4 6461
002af5 7645
002af6 6e65
002af7 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
002af8 4c20
002af9 474f
002afa 675f
002afb 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002afc 614c
002afd 7473
002afe 6553
002aff 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002b00 2928
002b01 6620
002b02 6961
002b03 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b04 0d64
002b05 000a
002b06 4c3c
002b07 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b08 725f
002b09 6165
002b0a 4564
002b0b 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b0c 746e
002b0d 203e
002b0e 6f4c
002b0f 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
002b10 6d65
002b11 7470
002b12 2e79
002b13 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002b14 0d21
002b15 000a
002b16 4c3c
002b17 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b18 725f
002b19 6165
002b1a 4564
002b1b 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b1c 746e
002b1d 203e
002b1e 4453
002b1f 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002b20 6165
002b21 4464
002b22 7461
002b23 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002b24 6c66
002b25 6761
002b26 2029
002b27 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002b28 6c69
002b29 6465
002b2a 0a0d
002b2b 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002b2c 4f4c
002b2d 5f47
002b2e 6572
002b2f 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002b30 7645
002b31 6e65
002b32 3e74
002b33 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002b34 5f44
002b35 6572
002b36 6461
002b37 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002b38 6174
002b39 7428
002b3a 6d69
002b3b 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
002b3c 6174
002b3d 706d
002b3e 2029
002b3f 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
002b40 6c69
002b41 6465
002b42 0a0d
002b43 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002b44 4f4c
002b45 5f47
002b46 6572
002b47 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002b48 7645
002b49 6e65
002b4a 3e74
002b4b 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002b4c 5f44
002b4d 6572
002b4e 6461
002b4f 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002b50 6174
002b51 6928
002b52 2964
002b53 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
002b54 6961
002b55 656c
002b56 0d64
002b57 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002b58 4c3c
002b59 474f
002b5a 725f
002b5b 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002b5c 4564
002b5d 6576
002b5e 746e
002b5f 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002b60 4453
002b61 725f
002b62 6165
002b63 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
002b64 7461
002b65 2861
002b66 7473
002b67 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
002b68 7375
002b69 2029
002b6a 6166
002b6b 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002b6c 6465
002b6d 0a0d
002b6e 3c00
002b6f 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002b70 5f47
002b71 6567
002b72 4c74
002b73 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002b74 4974
002b75 736e
002b76 7265
002b77 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002b78 5320
002b79 5f44
002b7a 6572
002b7b 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002b7c 6144
002b7d 6174
002b7e 2928
002b7f 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
002b80 6961
002b81 656c
002b82 0d64
002b83 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002b84 4c3c
002b85 474f
002b86 675f
002b87 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002b88 614c
002b89 7473
002b8a 6e49
002b8b 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002b8c 7472
002b8d 203e
002b8e 6f67
002b8f 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
002b90 6c25
002b91 0d64
002b92 000a
002b93 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002b94 474f
002b95 735f
002b96 7465
002b97 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002b98 7473
002b99 6e49
002b9a 6573
002b9b 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002b9c 203e
002b9d 7277
002b9e 7469
002b9f 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002ba0 2067
002ba1 6c25
002ba2 0d64
002ba3 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002ba4 4c3c
002ba5 474f
002ba6 735f
002ba7 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002ba8 614c
002ba9 7473
002baa 6e49
002bab 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002bac 7472
002bad 203e
002bae 4453
002baf 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002bb0 6165
002bb1 4464
002bb2 7461
002bb3 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002bb4 2029
002bb5 6166
002bb6 6c69
002bb7 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002bb8 0a0d
002bb9 3c00
002bba 4f4c
002bbb 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002bbc 6567
002bbd 4c74
002bbe 7361
002bbf 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
002bc0 6e65
002bc1 3e64
002bc2 5320
002bc3 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
002bc4 6572
002bc5 6461
002bc6 6144
002bc7 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002bc8 2928
002bc9 6620
002bca 6961
002bcb 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002bcc 0d64
002bcd 000a
002bce 4c3c
002bcf 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002bd0 675f
002bd1 7465
002bd2 614c
002bd3 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
002bd4 6553
002bd5 646e
002bd6 203e
002bd7 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
002bd8 2074
002bd9 6c25
002bda 0d64
002bdb 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002bdc 4c3c
002bdd 474f
002bde 735f
002bdf 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002be0 614c
002be1 7473
002be2 6553
002be3 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002be4 203e
002be5 7277
002be6 7469
002be7 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002be8 2067
002be9 6c25
002bea 0d64
002beb 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002bec 4c3c
002bed 474f
002bee 735f
002bef 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002bf0 614c
002bf1 7473
002bf2 6553
002bf3 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002bf4 203e
002bf5 4453
002bf6 725f
002bf7 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002bf8 4464
002bf9 7461
002bfa 2861
002bfb 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
002bfc 6166
002bfd 6c69
002bfe 6465
002bff 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002c00 3c00
002c01 4f4c
002c02 5f47
002c03 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c04 6165
002c05 6574
002c06 6946
002c07 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c08 203e
002c09 4453
002c0a 635f
002c0b 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
002c0c 7461
002c0d 4665
002c0e 6c69
002c0f 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002c10 7325
002c11 2029
002c12 6166
002c13 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002c14 6465
002c15 0a0d
002c16 3c00
002c17 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c18 5f47
002c19 7263
002c1a 6165
002c1b 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002c1c 6946
002c1d 656c
002c1e 203e
002c1f 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
002c20 6120
002c21 726c
002c22 6165
002c23 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002c24 6520
002c25 6978
002c26 7473
002c27 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002c28 3c00
002c29 4f4c
002c2a 5f47
002c2b 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c2c 6165
002c2d 6574
002c2e 6946
002c2f 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c30 203e
002c31 7325
002c32 6320
002c33 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002c34 7461
002c35 6465
002c36 0a0d
002c37 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002c38 4f4c
002c39 5f47
002c3a 7263
002c3b 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002c3c 6574
002c3d 6946
002c3e 656c
002c3f 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002c40 7325
002c41 6320
002c42 6e6f
002c43 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002c44 6e69
002c45 6465
002c46 6e20
002c47 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002c48 6e69
002c49 7469
002c4a 6169
002c4b 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002c4c 6164
002c4d 6174
002c4e 0a0d
002c4f 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002c50 4f4c
002c51 5f47
002c52 7263
002c53 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002c54 6574
002c55 6946
002c56 656c
002c57 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002c58 4453
002c59 6f5f
002c5a 6570
002c5b 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002c5c 6c69
002c5d 2865
002c5e 7325
002c5f 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002c60 6166
002c61 6c69
002c62 6465
002c63 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002c64 3c00
002c65 4f4c
002c66 5f47
002c67 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c68 6165
002c69 6574
002c6a 6946
002c6b 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c6c 203e
002c6d 7277
002c6e 7469
002c6f 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c70 2067
002c71 6e69
002c72 7469
002c73 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002c74 206c
002c75 6164
002c76 6174
002c77 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002c78 3c00
002c79 4f4c
002c7a 5f47
002c7b 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c7c 6165
002c7d 6574
002c7e 6946
002c7f 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c80 203e
002c81 4453
002c82 775f
002c83 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002c84 6574
002c85 6144
002c86 6174
002c87 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002c88 6620
002c89 6961
002c8a 656c
002c8b 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002c8c 7257
002c8d 7469
002c8e 6e69
002c8f 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002c90 202e
002c91 0a0d
002c92 3c00
002c93 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c94 5f47
002c95 7263
002c96 6165
002c97 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002c98 6946
002c99 656c
002c9a 203e
002c9b 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002c9c 635f
002c9d 6f6c
002c9e 6573
002c9f 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002ca0 656c
002ca1 2928
002ca2 6620
002ca3 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002ca4 656c
002ca5 0d64
002ca6 000a
002ca7 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002ca8 474f
002ca9 695f
002caa 696e
002cab 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002cac 4920
002cad 696e
002cae 6974
002caf 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002cb0 6c20
002cb1 676f
002cb2 6620
002cb3 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002cb4 0d65
002cb5 000a
002cb6 4c3c
002cb7 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002cb8 695f
002cb9 696e
002cba 3e74
002cbb 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002cbc 474f
002cbd 635f
002cbe 6572
002cbf 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002cc0 4665
002cc1 6c69
002cc2 2865
002cc3 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002cc4 2029
002cc5 6166
002cc6 6c69
002cc7 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002cc8 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4123): warning: .cseg .db misalignment - padding zero byte
002cc9 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002cca 0a0d
002ccb 0a0d
002ccc 613c
002ccd 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002cce 6144
002ccf 6174
002cd0 6f4c
002cd1 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002cd2 6575
002cd3 6575
002cd4 203e
002cd5 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002cd6 4e52
002cd7 4e49
002cd8 2047
002cd9 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002cda 6164
002cdb 6174
002cdc 6f4c
002cdd 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002cde 6575
002cdf 6575
002ce0 4620
002ce1 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002ce2 0d4c
002ce3 0d0a
002ce4 000a
002ce5 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002ce6 613c
002ce7 6464
002ce8 6144
002ce9 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002cea 6f4c
002ceb 5167
002cec 6575
002ced 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002cee 203e
002cef 2020
002cf0 2020
002cf1 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cf2 2020
002cf3 2020
002cf4 2020
002cf5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cf6 2020
002cf7 2020
002cf8 2020
002cf9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cfa 2020
002cfb 2020
002cfc 6441
002cfd 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002cfe 2064
002cff 2528
002d00 3230
002d01 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002d02 7420
002d03 206f
002d04 6164
002d05 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002d06 6f4c
002d07 5167
002d08 6575
002d09 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d0a 255b
002d0b 5d64
002d0c 4320
002d0d 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002d0e 746e
002d0f 3d20
002d10 2520
002d11 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002d12 000a
002d13 723c
002d14 6165
002d15 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d16 7461
002d17 4c61
002d18 676f
002d19 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d1a 7565
002d1b 3e65
002d1c 5720
002d1d 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d1e 3a4e
002d1f 6420
002d20 7461
002d21 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002d22 676f
002d23 7551
002d24 7565
002d25 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002d26 6d65
002d27 7470
002d28 2179
002d29 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002d2a 000a
002d2b 723c
002d2c 6165
002d2d 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d2e 7461
002d2f 4c61
002d30 676f
002d31 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d32 7565
002d33 3e65
002d34 5720
002d35 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d36 3a4e
002d37 6e20
002d38 746f
002d39 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002d3a 756f
002d3b 646e
002d3c 6920
002d3d 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002d3e 7830
002d3f 3025
002d40 5832
002d41 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002d42 6e69
002d43 6420
002d44 7461
002d45 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002d46 676f
002d47 7551
002d48 7565
002d49 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002d4a 000a
002d4b 0a0d
002d4c 723c
002d4d 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002d4e 766f
002d4f 4465
002d50 7461
002d51 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002d52 676f
002d53 7551
002d54 7565
002d55 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002d56 2020
002d57 2020
002d58 2020
002d59 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d5a 2020
002d5b 2020
002d5c 2020
002d5d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d5e 2020
002d5f 2020
002d60 2020
002d61 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d62 6552
002d63 6f6d
002d64 6576
002d65 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002d66 2528
002d67 3230
002d68 2958
002d69 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002d6a 6f72
002d6b 206d
002d6c 6164
002d6d 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002d6e 6f4c
002d6f 5167
002d70 6575
002d71 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d72 255b
002d73 5d64
002d74 0a0d
002d75 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002d76 6572
002d77 6f6d
002d78 6576
002d79 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002d7a 6174
002d7b 6f4c
002d7c 5167
002d7d 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002d7e 6575
002d7f 203e
002d80 4157
002d81 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002d82 203a
002d83 6f6e
002d84 2074
002d85 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002d86 6e75
002d87 2064
002d88 6469
002d89 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002d8a 2578
002d8b 3230
002d8c 5d58
002d8d 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002d8e 206e
002d8f 6164
002d90 6174
002d91 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002d92 5167
002d93 6575
002d94 6575
002d95 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002d96 0d00
002d97 0d0a
002d98 3c0a
002d99 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002d9a 4564
002d9b 6576
002d9c 746e
002d9d 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002d9e 5167
002d9f 6575
002da0 6575
002da1 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002da2 4157
002da3 4e52
002da4 4e49
002da5 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002da6 203a
002da7 7665
002da8 6e65
002da9 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002daa 676f
002dab 7551
002dac 7565
002dad 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002dae 5546
002daf 4c4c
002db0 0a0d
002db1 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002db2 0d00
002db3 3c0a
002db4 6461
002db5 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002db6 6576
002db7 746e
002db8 6f4c
002db9 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002dba 6575
002dbb 6575
002dbc 203e
002dbd 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002dbe 2020
002dbf 2020
002dc0 2020
002dc1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc2 2020
002dc3 2020
002dc4 2020
002dc5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc6 2020
002dc7 2020
002dc8 2020
002dc9 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002dca 6564
002dcb 2064
002dcc 2528
002dcd 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002dce 2958
002dcf 7420
002dd0 206f
002dd1 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002dd2 6e65
002dd3 4c74
002dd4 676f
002dd5 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002dd6 7565
002dd7 5b65
002dd8 6425
002dd9 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002dda 6f43
002ddb 6e75
002ddc 2074
002ddd 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002dde 6425
002ddf 0a0d
002de0 3c00
002de1 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002de2 6461
002de3 7645
002de4 6e65
002de5 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002de6 676f
002de7 7551
002de8 7565
002de9 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002dea 5720
002deb 5241
002dec 3a4e
002ded 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002dee 6576
002def 746e
002df0 6f4c
002df1 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002df2 6575
002df3 6575
002df4 6520
002df5 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002df6 7974
002df7 2121
002df8 0a0d
002df9 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002dfa 6572
002dfb 6461
002dfc 7645
002dfd 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002dfe 4c74
002dff 676f
002e00 7551
002e01 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002e02 3e65
002e03 5720
002e04 5241
002e05 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002e06 6e20
002e07 746f
002e08 6620
002e09 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002e0a 646e
002e0b 6920
002e0c 5b64
002e0d 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002e0e 3025
002e0f 5832
002e10 205d
002e11 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002e12 6520
002e13 6576
002e14 746e
002e15 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e16 5167
002e17 6575
002e18 6575
002e19 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002e1a 0d00
002e1b 3c0a
002e1c 6572
002e1d 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002e1e 6576
002e1f 7645
002e20 6e65
002e21 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002e22 676f
002e23 7551
002e24 7565
002e25 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e26 2020
002e27 2020
002e28 2020
002e29 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e2a 2020
002e2b 2020
002e2c 2020
002e2d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e2e 2020
002e2f 2020
002e30 2020
002e31 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002e32 6f6d
002e33 6576
002e34 2064
002e35 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002e36 3230
002e37 2958
002e38 6620
002e39 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002e3a 206d
002e3b 7665
002e3c 6e65
002e3d 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e3e 676f
002e3f 7551
002e40 7565
002e41 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002e42 6425
002e43 0d5d
002e44 000a
002e45 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002e46 6d65
002e47 766f
002e48 4565
002e49 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002e4a 746e
002e4b 6f4c
002e4c 5167
002e4d 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002e4e 6575
002e4f 203e
002e50 4157
002e51 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002e52 203a
002e53 6f6e
002e54 2074
002e55 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002e56 6e75
002e57 2064
002e58 6469
002e59 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002e5a 2578
002e5b 3230
002e5c 5d58
002e5d 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002e5e 206e
002e5f 7665
002e60 6e65
002e61 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e62 676f
002e63 7551
002e64 7565
002e65 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002e66 000a      	.DB  0xA,0x0
                 _0x2C0003:
002e67 0000
002e68 0000
002e69 0000
002e6a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e6b 0000
002e6c 0000
002e6d 0000
002e6e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e6f 0000
002e70 0000
002e71 0000
002e72 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e73 0000
002e74 0000
002e75 0000
002e76 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e77 0000
002e78 0000
002e79 0000
002e7a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e7b 0000
002e7c 0000
002e7d 0000
002e7e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e7f 0000
002e80 0000
002e81 0000
002e82 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e83 0000
002e84 0000
002e85 0000
002e86 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e87 0000
002e88 0000
002e89 0000
002e8a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e8b 0591
002e8c 058d
002e8d 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C027A:
002e8e 0000
002e8f 0000
002e90 0000
002e91 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e92 0000
002e93 0000
002e94 0000
002e95 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e96 0000
002e97 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002e98 314d
002e99 3125
002e9a 0064
002e9b 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002e9c 4d00
002e9d 2541
002e9e 6431
002e9f 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002ea0 2532
002ea1 6431
002ea2 4d00
002ea3 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002ea4 6431
002ea5 4d00
002ea6 2534
002ea7 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002ea8 5000
002ea9 0031
002eaa 354d
002eab 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002eac 0064
002ead 3050
002eae 3c00
002eaf 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002eb0 554e
002eb1 705f
002eb2 6f72
002eb3 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002eb4 7373
002eb5 654b
002eb6 3e79
002eb7 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002eb8 2550
002eb9 2c73
002eba 7325
002ebb 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002ebc 2c73
002ebd 5200
002ebe 6165
002ebf 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002ec0 6d69
002ec1 2c65
002ec2 4400
002ec3 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002ec4 6c61
002ec5 676f
002ec6 6567
002ec7 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002ec8 5500
002ec9 6b6e
002eca 6f6e
002ecb 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002ecc 002c
002ecd 6e45
002ece 6261
002ecf 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002ed0 002c
002ed1 6944
002ed2 6173
002ed3 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002ed4 2c65
002ed5 3c00
002ed6 454d
002ed7 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002ed8 705f
002ed9 6f72
002eda 6563
002edb 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002edc 654b
002edd 3e79
002ede 5620
002edf 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002ee0 0073
002ee1 4d3c
002ee2 4e45
002ee3 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002ee4 7270
002ee5 636f
002ee6 7365
002ee7 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002ee8 7965
002ee9 203e
002eea 616d
002eeb 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002eec 636f
002eed 4328
002eee 4e4f
002eef 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002ef0 4552
002ef1 4441
002ef2 425f
002ef3 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002ef4 4546
002ef5 2952
002ef6 6620
002ef7 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002ef8 656c
002ef9 0d64
002efa 000a
002efb 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002efc 4e45
002efd 5f55
002efe 7270
002eff 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002f00 7365
002f01 4b73
002f02 7965
002f03 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002f04 5445
002f05 5f48
002f06 6567
002f07 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002f08 6e6f
002f09 6966
002f0a 2867
002f0b 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002f0c 6166
002f0d 6c69
002f0e 6465
002f0f 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002f10 3c00
002f11 454d
002f12 554e
002f13 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f14 6f72
002f15 6563
002f16 7373
002f17 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f18 3e79
002f19 4520
002f1a 4854
002f1b 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002f1c 7465
002f1d 6f43
002f1e 666e
002f1f 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002f20 2928
002f21 7320
002f22 6375
002f23 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002f24 7373
002f25 0a0d
002f26 0d00
002f27 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002f28 3c0a
002f29 454d
002f2a 554e
002f2b 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f2c 6f72
002f2d 6563
002f2e 7373
002f2f 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f30 3e79
002f31 7220
002f32 6165
002f33 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
002f34 6425
002f35 205d
002f36 2d2d
002f37 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
002f38 000a
002f39 4d3c
002f3a 4e45
002f3b 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002f3c 7270
002f3d 636f
002f3e 7365
002f3f 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002f40 7965
002f41 203e
002f42 6567
002f43 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
002f44 7465
002f45 6f77
002f46 6b72
002f47 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
002f48 6f66
002f49 2928
002f4a 6620
002f4b 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
002f4c 656c
002f4d 0d64
002f4e 000a
002f4f 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002f50 4e45
002f51 5f55
002f52 7270
002f53 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002f54 7365
002f55 4b73
002f56 7965
002f57 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002f58 4e56
002f59 7525
002f5a 252e
002f5b 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
002f5c 7525
002f5d 252e
002f5e 2c75
002f5f 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002f60 252e
002f61 2e75
002f62 7525
002f63 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002f64 2c75
002f65 7525
002f66 252e
002f67 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
002f68 7525
002f69 252e
002f6a 2c75
002f6b 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002f6c 252e
002f6d 2e75
002f6e 7525
002f6f 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002f70 2c75
002f71 0a0d
002f72 5600
002f73 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
002f74 2e75
002f75 7525
002f76 252e
002f77 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002f78 7525
002f79 252c
002f7a 2e75
002f7b 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002f7c 252e
002f7d 2e75
002f7e 7525
002f7f 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002f80 2e75
002f81 7525
002f82 252e
002f83 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002f84 7525
002f85 252c
002f86 2e75
002f87 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002f88 252e
002f89 2e75
002f8a 7525
002f8b 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
002f8c 4d3c
002f8d 4e45
002f8e 5f55
002f8f 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002f90 636f
002f91 7365
002f92 4b73
002f93 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002f94 203e
002f95 6564
002f96 4576
002f97 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
002f98 6425
002f99 205d
002f9a 6c61
002f9b 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
002f9c 5b6e
002f9d 6425
002f9e 005d
002f9f 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
002fa0 3125
002fa1 0064
002fa2 4445
002fa3 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
002fa4 6431
002fa5 4500
002fa6 3344
002fa7 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
002fa8 0064
002fa9 4953
002faa 4900
002fab 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
002fac 5831
002fad 3125
002fae 0064
002faf 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
002fb0 3125
002fb1 0064
002fb2 4d3c
002fb3 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002fb4 5f55
002fb5 7270
002fb6 636f
002fb7 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002fb8 4b73
002fb9 7965
002fba 203e
002fbb 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
002fbc 4576
002fbd 206e
002fbe 3e2d
002fbf 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
002fc0 2544
002fc1 6431
002fc2 3125
002fc3 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002fc4 4d3c
002fc5 4e45
002fc6 5f55
002fc7 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002fc8 636f
002fc9 7365
002fca 4b73
002fcb 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002fcc 203e
002fcd 6c61
002fce 456d
002fcf 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
002fd0 3e2d
002fd1 4520
002fd2 2544
002fd3 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
002fd4 3125
002fd5 0064
002fd6 4d3c
002fd7 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002fd8 5f55
002fd9 7270
002fda 636f
002fdb 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002fdc 4b73
002fdd 7965
002fde 203e
002fdf 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
002fe0 4f74
002fe1 6570
002fe2 6172
002fe3 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
002fe4 676e
002fe5 6f43
002fe6 666e
002fe7 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
002fe8 2928
002fe9 6620
002fea 6961
002feb 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002fec 0d64
002fed 000a
002fee 4c46
002fef 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
002ff0 0049
002ff1 4149
002ff2 3125
002ff3 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
002ff4 4d53
002ff5 5300
002ff6 0047
002ff7 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
002ff8 5300
002ff9 2546
002ffa 2e75
002ffb 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
002ffc 252e
002ffd 2e75
002ffe 7525
002fff 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
003000 2e75
003001 7525
003002 252e
003003 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003004 7525
003005 252c
003006 2e75
003007 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
003008 252e
003009 2e75
00300a 7525
00300b 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
00300c 2e75
00300d 7525
00300e 252e
00300f 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003010 7525
003011 002c
003012 4d3c
003013 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
003014 5f55
003015 7270
003016 636f
003017 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
003018 4b73
003019 7965
00301a 203e
00301b 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
00301c 5f48
00301d 6573
00301e 4374
00301f 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
003020 6966
003021 2867
003022 2029
003023 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
003024 6c69
003025 6465
003026 0d20
003027 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
003028 554d
003029 3125
00302a 0064
00302b 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
00302c 3125
00302d 2a64
00302e 5000
00302f 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
003030 6431
003031 5000
003032 0035
003033 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
003034 3125
003035 2564
003036 6431
003037 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
003038 454d
003039 554e
00303a 705f
00303b 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
00303c 6563
00303d 7373
00303e 654b
00303f 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
003040 6e20
003041 7765
003042 7750
003043 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
003044 2026
003045 6f63
003046 666e
003047 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
003048 2064
003049 6f6e
00304a 2074
00304b 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
00304c 6374
00304d 0d68
00304e 000a
00304f 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
003050 5600
003051 2544
003052 6431
003053 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
003054 0064
003055 3153
003056 3125
003057 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
003058 3253
003059 3125
00305a 0064
00305b 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
00305c 4d00
00305d 2537
00305e 6431
00305f 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
003060 2541
003061 6431
003062 5300
003063 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
003064 6431
003065 5000
003066 254e
003067 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
003068 4300
003069 2543
00306a 6431
00306b 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
00306c 2538
00306d 6431
00306e 4300
00306f 2550      	.DB  0x38,0x25,0x31,0x64,0x0,0x43,0x50,0x25
003070 6431
003071 3125
003072 0064
003073 4443      	.DB  0x31,0x64,0x25,0x31,0x64,0x0,0x43,0x44
003074 3125
003075 2564
003076 6431
003077 6300      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x63
003078 6c61
003079 6e50
00307a 5b74
00307b 3125      	.DB  0x61,0x6C,0x50,0x6E,0x74,0x5B,0x25,0x31
00307c 5d64
00307d 3d20
00307e 2520
00307f 6431      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x31,0x64
003080 0a0d
003081 4300
003082 2541
003083 6431      	.DB  0xD,0xA,0x0,0x43,0x41,0x25,0x31,0x64
003084 5700
003085 0050
003086 5350
003087 5000      	.DB  0x0,0x57,0x50,0x0,0x50,0x53,0x0,0x50
003088 0034
003089 455b
00308a 005d
00308b 445b      	.DB  0x34,0x0,0x5B,0x45,0x5D,0x0,0x5B,0x44
00308c 005d
00308d 6e45
00308e 6261
00308f 656c      	.DB  0x5D,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
003090 4400
003091 7369
003092 6261
003093 656c      	.DB  0x0,0x44,0x69,0x73,0x61,0x62,0x6C,0x65
003094 3c00
003095 6873
003096 776f
003097 7250      	.DB  0x0,0x3C,0x73,0x68,0x6F,0x77,0x50,0x72
003098 626f
003099 4365
00309a 6e6f
00309b 6966      	.DB  0x6F,0x62,0x65,0x43,0x6F,0x6E,0x66,0x69
00309c 3e67
00309d 5020
00309e 2543
00309f 6431      	.DB  0x67,0x3E,0x20,0x50,0x43,0x25,0x31,0x64
0030a0 3125
0030a1 2564
0030a2 2c64
0030a3 7325      	.DB  0x25,0x31,0x64,0x25,0x64,0x2C,0x25,0x73
0030a4 252c
0030a5 2c73
0030a6 2e25
0030a7 6631      	.DB  0x2C,0x25,0x73,0x2C,0x25,0x2E,0x31,0x66
0030a8 252c
0030a9 2c64
0030aa 2e25
0030ab 6631      	.DB  0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31,0x66
0030ac 252c
0030ad 312e
0030ae 2c66
0030af 6425      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x2C,0x25,0x64
0030b0 252c
0030b1 312e
0030b2 0066
0030b3 0a0d      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x0,0xD,0xA
0030b4 673c
0030b5 7465
0030b6 635f
0030b7 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
0030b8 6572
0030b9 746e
0030ba 735f
0030bb 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
0030bc 6c70
0030bd 6e69
0030be 3e67
0030bf 7220      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x72
0030c0 6165
0030c1 206c
0030c2 6176
0030c3 756c      	.DB  0x65,0x61,0x6C,0x20,0x76,0x61,0x6C,0x75
0030c4 2065
0030c5 2528
0030c6 206c
0030c7 6573      	.DB  0x65,0x20,0x28,0x25,0x6C,0x20,0x73,0x65
0030c8 2e63
0030c9 0d29
0030ca 000a
0030cb 673c      	.DB  0x63,0x2E,0x29,0xD,0xA,0x0,0x3C,0x67
0030cc 7465
0030cd 635f
0030ce 7275
0030cf 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
0030d0 746e
0030d1 735f
0030d2 6d61
0030d3 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
0030d4 6e69
0030d5 3e67
0030d6 2520
0030d7 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
0030d8 7268
0030d9 0d2e
0030da 000a
0030db 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
0030dc 7465
0030dd 635f
0030de 7275
0030df 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
0030e0 746e
0030e1 735f
0030e2 6d61
0030e3 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
0030e4 6e69
0030e5 3e67
0030e6 2520
0030e7 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
0030e8 696d
0030e9 2e6e
0030ea 0a0d
0030eb 3c00      	.DB  0x6D,0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C
0030ec 6567
0030ed 5f74
0030ee 7563
0030ef 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
0030f0 6e65
0030f1 5f74
0030f2 6173
0030f3 706d      	.DB  0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70
0030f4 696c
0030f5 676e
0030f6 203e
0030f7 6425      	.DB  0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25,0x64
0030f8 7320
0030f9 6365
0030fa 0d2e
0030fb 000a      	.DB  0x20,0x73,0x65,0x63,0x2E,0xD,0xA,0x0
0030fc 673c
0030fd 7465
0030fe 635f
0030ff 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
003100 6572
003101 746e
003102 735f
003103 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
003104 6c70
003105 6e69
003106 3e67
003107 2520      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25
003108 2064
003109 696d
00310a 2e6e
00310b 2520      	.DB  0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20,0x25
00310c 2064
00310d 6573
00310e 2e63
00310f 0020      	.DB  0x64,0x20,0x73,0x65,0x63,0x2E,0x20,0x0
003110 2d2d
003111 203e
003112 6425
003113 6d20      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20,0x6D
003114 6e69
003115 0d2e
003116 000a
003117 673c      	.DB  0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C,0x67
003118 7465
003119 635f
00311a 7275
00311b 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
00311c 746e
00311d 735f
00311e 6d61
00311f 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003120 6e69
003121 3e67
003122 2520
003123 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
003124 7268
003125 202e
003126 6425
003127 6d20      	.DB  0x68,0x72,0x2E,0x20,0x25,0x64,0x20,0x6D
003128 6e69
003129 202e
00312a 6425
00312b 7320      	.DB  0x69,0x6E,0x2E,0x20,0x25,0x64,0x20,0x73
00312c 6365
00312d 202e
00312e 2d00
00312f 3e2d      	.DB  0x65,0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E
003130 2520
003131 2064
003132 7268
003133 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
003134 000a
003135 673c
003136 7465
003137 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
003138 7275
003139 6572
00313a 746e
00313b 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
00313c 6d61
00313d 6c70
00313e 6e69
00313f 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
003140 4320
003141 6e61
003142 7427
003143 5320      	.DB  0x20,0x43,0x61,0x6E,0x27,0x74,0x20,0x53
003144 6f68
003145 2e77
003146 0a0d
003147 3c00      	.DB  0x68,0x6F,0x77,0x2E,0xD,0xA,0x0,0x3C
003148 6567
003149 5f74
00314a 7563
00314b 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
00314c 6e65
00314d 5f74
00314e 7276
00314f 6665      	.DB  0x65,0x6E,0x74,0x5F,0x76,0x72,0x65,0x66
003150 203e
003151 7276
003152 6665
003153 2528      	.DB  0x3E,0x20,0x76,0x72,0x65,0x66,0x28,0x25
003154 2966
003155 7620
003156 6c61
003157 6d54      	.DB  0x66,0x29,0x20,0x76,0x61,0x6C,0x54,0x6D
003158 2070
003159 203d
00315a 7325
00315b 0a0d      	.DB  0x70,0x20,0x3D,0x20,0x25,0x73,0xD,0xA
00315c 3c00
00315d 6567
00315e 5f74
00315f 7563      	.DB  0x0,0x3C,0x67,0x65,0x74,0x5F,0x63,0x75
003160 7272
003161 6e65
003162 5f74
003163 7276      	.DB  0x72,0x72,0x65,0x6E,0x74,0x5F,0x76,0x72
003164 6665
003165 203e
003166 7562
003167 2066      	.DB  0x65,0x66,0x3E,0x20,0x62,0x75,0x66,0x20
003168 3e2d
003169 0020
00316a 255b
00316b 5d63      	.DB  0x2D,0x3E,0x20,0x0,0x5B,0x25,0x63,0x5D
00316c 3c00
00316d 6567
00316e 4e74
00316f 7465      	.DB  0x0,0x3C,0x67,0x65,0x74,0x4E,0x65,0x74
003170 6f77
003171 6b72
003172 6e49
003173 6f66      	.DB  0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F
003174 203e
003175 494c
003176 2050
003177 203a      	.DB  0x3E,0x20,0x4C,0x49,0x50,0x20,0x3A,0x20
003178 7525
003179 252e
00317a 2e75
00317b 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
00317c 252e
00317d 0d75
00317e 000a
00317f 673c      	.DB  0x2E,0x25,0x75,0xD,0xA,0x0,0x3C,0x67
003180 7465
003181 654e
003182 7774
003183 726f      	.DB  0x65,0x74,0x4E,0x65,0x74,0x77,0x6F,0x72
003184 496b
003185 666e
003186 3e6f
003187 4d20      	.DB  0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4D
003188 4b53
003189 3a20
00318a 2520
00318b 2e75      	.DB  0x53,0x4B,0x20,0x3A,0x20,0x25,0x75,0x2E
00318c 7525
00318d 252e
00318e 2e75
00318f 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
003190 0a0d
003191 3c00
003192 6567
003193 4e74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4E
003194 7465
003195 6f77
003196 6b72
003197 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
003198 6f66
003199 203e
00319a 4744
00319b 2057      	.DB  0x66,0x6F,0x3E,0x20,0x44,0x47,0x57,0x20
00319c 203a
00319d 7525
00319e 252e
00319f 2e75      	.DB  0x3A,0x20,0x25,0x75,0x2E,0x25,0x75,0x2E
0031a0 7525
0031a1 252e
0031a2 0d75
0031a3 000a      	.DB  0x25,0x75,0x2E,0x25,0x75,0xD,0xA,0x0
0031a4 673c
0031a5 7465
0031a6 654e
0031a7 7774      	.DB  0x3C,0x67,0x65,0x74,0x4E,0x65,0x74,0x77
0031a8 726f
0031a9 496b
0031aa 666e
0031ab 3e6f      	.DB  0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E
0031ac 5320
0031ad 5049
0031ae 3a20
0031af 2520      	.DB  0x20,0x53,0x49,0x50,0x20,0x3A,0x20,0x25
0031b0 2e75
0031b1 7525
0031b2 252e
0031b3 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
0031b4 7525
0031b5 0a0d
0031b6 3c00
0031b7 6573      	.DB  0x25,0x75,0xD,0xA,0x0,0x3C,0x73,0x65
0031b8 5f74
0031b9 7276
0031ba 6665
0031bb 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
0031bc 255b
0031bd 5d64
0031be 255b
0031bf 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
0031c0 255b
0031c1 5d64
0031c2 2d20
0031c3 203e      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x2D,0x3E,0x20
0031c4 6425
0031c5 2d20
0031c6 203e
0031c7 6625      	.DB  0x25,0x64,0x20,0x2D,0x3E,0x20,0x25,0x66
0031c8 0a0d
0031c9 3c00
0031ca 6572
0031cb 6d63      	.DB  0xD,0xA,0x0,0x3C,0x72,0x65,0x63,0x6D
0031cc 3e70
0031cd 7320
0031ce 6372
0031cf 5b31      	.DB  0x70,0x3E,0x20,0x73,0x72,0x63,0x31,0x5B
0031d0 3025
0031d1 5832
0031d2 205d
0031d3 7273      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x73,0x72
0031d4 3263
0031d5 255b
0031d6 3230
0031d7 5d58      	.DB  0x63,0x32,0x5B,0x25,0x30,0x32,0x58,0x5D
0031d8 7520
0031d9 6573
0031da 5b72
0031db 3025      	.DB  0x20,0x75,0x73,0x65,0x72,0x5B,0x25,0x30
0031dc 5832
0031dd 205d
0031de 6573
0031df 7672      	.DB  0x32,0x58,0x5D,0x20,0x73,0x65,0x72,0x76
0031e0 6369
0031e1 5b65
0031e2 3025
0031e3 5832      	.DB  0x69,0x63,0x65,0x5B,0x25,0x30,0x32,0x58
0031e4 0d5d
0031e5 000a      	.DB  0x5D,0xD,0xA,0x0
                 _0x2E0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4458): warning: .cseg .db misalignment - padding zero byte
0031e6 0009      	.DB  0x9
                 _0x2E0000:
0031e7 6567
0031e8 2074
0031e9 6579
0031ea 7261      	.DB  0x67,0x65,0x74,0x20,0x79,0x65,0x61,0x72
0031eb 3d20
0031ec 2520
0031ed 0d64
0031ee 000a      	.DB  0x20,0x3D,0x20,0x25,0x64,0xD,0xA,0x0
0031ef 6567
0031f0 2074
0031f1 6f6d
0031f2 746e      	.DB  0x67,0x65,0x74,0x20,0x6D,0x6F,0x6E,0x74
0031f3 2068
0031f4 203d
0031f5 6425
0031f6 0a0d      	.DB  0x68,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
0031f7 6700
0031f8 7465
0031f9 6420
0031fa 7461      	.DB  0x0,0x67,0x65,0x74,0x20,0x64,0x61,0x74
0031fb 2065
0031fc 203d
0031fd 6425
0031fe 0a0d      	.DB  0x65,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
0031ff 6700
003200 7465
003201 6820
003202 756f      	.DB  0x0,0x67,0x65,0x74,0x20,0x68,0x6F,0x75
003203 2072
003204 203d
003205 6425
003206 0a0d      	.DB  0x72,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
003207 6700
003208 7465
003209 6d20
00320a 6e69      	.DB  0x0,0x67,0x65,0x74,0x20,0x6D,0x69,0x6E
00320b 3d20
00320c 2520
00320d 0d64
00320e 000a      	.DB  0x20,0x3D,0x20,0x25,0x64,0xD,0xA,0x0
00320f 6567
003210 2074
003211 6573
003212 2063      	.DB  0x67,0x65,0x74,0x20,0x73,0x65,0x63,0x20
003213 203d
003214 6425
003215 0a0d
003216 6700      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x67
003217 7465
003218 7420
003219 6d69
00321a 7a65      	.DB  0x65,0x74,0x20,0x74,0x69,0x6D,0x65,0x7A
00321b 6e6f
00321c 2065
00321d 203d
00321e 2b25      	.DB  0x6F,0x6E,0x65,0x20,0x3D,0x20,0x25,0x2B
00321f 0d64
003220 000a
003221 0a0d
003222 443c      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x3C,0x44
003223 4245
003224 4755
003225 203e
003226 6c41      	.DB  0x45,0x42,0x55,0x47,0x3E,0x20,0x41,0x6C
003227 7261
003228 206d
003229 7453
00322a 7461      	.DB  0x61,0x72,0x6D,0x20,0x53,0x74,0x61,0x74
00322b 7375
00322c 5220
00322d 7365
00322e 7465      	.DB  0x75,0x73,0x20,0x52,0x65,0x73,0x65,0x74
00322f 2e2e
003230 2121
003231 0a0d
003232 3c00      	.DB  0x2E,0x2E,0x21,0x21,0xD,0xA,0x0,0x3C
003233 4544
003234 5542
003235 5f47
003236 6c43      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x43,0x6C
003237 6165
003238 4c72
003239 676f
00323a 6946      	.DB  0x65,0x61,0x72,0x4C,0x6F,0x67,0x46,0x69
00323b 656c
00323c 203e
00323d 6552
00323e 692d      	.DB  0x6C,0x65,0x3E,0x20,0x52,0x65,0x2D,0x69
00323f 696e
003240 6974
003241 7461
003242 2065      	.DB  0x6E,0x69,0x74,0x69,0x61,0x74,0x65,0x20
003243 6f6c
003244 2067
003245 6966
003246 656c      	.DB  0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C,0x65
003247 0a0d
003248 3c00
003249 4544
00324a 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00324b 5f47
00324c 6c43
00324d 6165
00324e 4c72      	.DB  0x47,0x5F,0x43,0x6C,0x65,0x61,0x72,0x4C
00324f 676f
003250 6946
003251 656c
003252 203e      	.DB  0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E,0x20
003253 4f4c
003254 5f47
003255 7263
003256 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
003257 6574
003258 6946
003259 656c
00325a 2528      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x28,0x25
00325b 2973
00325c 6620
00325d 6961
00325e 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
00325f 0d64
003260 000a
003261 443c
003262 4245      	.DB  0x64,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
003263 4755
003264 735f
003265 7465
003266 6552      	.DB  0x55,0x47,0x5F,0x73,0x65,0x74,0x52,0x65
003267 6c61
003268 7256
003269 6665
00326a 203e      	.DB  0x61,0x6C,0x56,0x72,0x65,0x66,0x3E,0x20
00326b 6567
00326c 2074
00326d 6573
00326e 2074      	.DB  0x67,0x65,0x74,0x20,0x73,0x65,0x74,0x20
00326f 7256
003270 6665
003271 733c
003272 7274      	.DB  0x56,0x72,0x65,0x66,0x3C,0x73,0x74,0x72
003273 6e69
003274 3e67
003275 2520
003276 0d73      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x73,0xD
003277 000a
003278 443c
003279 4245
00327a 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
00327b 735f
00327c 7465
00327d 6552
00327e 6c61      	.DB  0x5F,0x73,0x65,0x74,0x52,0x65,0x61,0x6C
00327f 7256
003280 6665
003281 203e
003282 6641      	.DB  0x56,0x72,0x65,0x66,0x3E,0x20,0x41,0x66
003283 6574
003284 2072
003285 6f63
003286 766e      	.DB  0x74,0x65,0x72,0x20,0x63,0x6F,0x6E,0x76
003287 7265
003288 2074
003289 203d
00328a 6625      	.DB  0x65,0x72,0x74,0x20,0x3D,0x20,0x25,0x66
00328b 0a0d
00328c 3c00
00328d 4544
00328e 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00328f 5f47
003290 6573
003291 736e
003292 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
003293 6553
003294 656c
003295 7463
003296 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
003297 6854
003298 7369
003299 5420
00329a 4d45      	.DB  0x54,0x68,0x69,0x73,0x20,0x54,0x45,0x4D
00329b 5f50
00329c 4553
00329d 204c
00329e 6f6e      	.DB  0x50,0x5F,0x53,0x45,0x4C,0x20,0x6E,0x6F
00329f 2074
0032a0 7573
0032a1 7070
0032a2 726f      	.DB  0x74,0x20,0x73,0x75,0x70,0x70,0x6F,0x72
0032a3 0d74
0032a4 0d0a
0032a5 000a
0032a6 443c      	.DB  0x74,0xD,0xA,0xD,0xA,0x0,0x3C,0x44
0032a7 4245
0032a8 4755
0032a9 735f
0032aa 6e65      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x6E
0032ab 6f73
0032ac 5372
0032ad 6c65
0032ae 6365      	.DB  0x73,0x6F,0x72,0x53,0x65,0x6C,0x65,0x63
0032af 3e74
0032b0 4420
0032b1 7365
0032b2 6c65      	.DB  0x74,0x3E,0x20,0x44,0x65,0x73,0x65,0x6C
0032b3 6365
0032b4 2074
0032b5 6573
0032b6 736e      	.DB  0x65,0x63,0x74,0x20,0x73,0x65,0x6E,0x73
0032b7 726f
0032b8 0a0d
0032b9 0a0d
0032ba 3c00      	.DB  0x6F,0x72,0xD,0xA,0xD,0xA,0x0,0x3C
0032bb 4544
0032bc 5542
0032bd 5f47
0032be 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0032bf 736e
0032c0 726f
0032c1 6553
0032c2 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
0032c3 7463
0032c4 203e
0032c5 6553
0032c6 656c      	.DB  0x63,0x74,0x3E,0x20,0x53,0x65,0x6C,0x65
0032c7 7463
0032c8 6465
0032c9 7320
0032ca 6e65      	.DB  0x63,0x74,0x65,0x64,0x20,0x73,0x65,0x6E
0032cb 6f73
0032cc 2072
0032cd 6425
0032ce 0a0d      	.DB  0x73,0x6F,0x72,0x20,0x25,0x64,0xD,0xA
0032cf 0a0d
0032d0 3c00
0032d1 4544
0032d2 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0032d3 5f47
0032d4 6573
0032d5 736e
0032d6 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
0032d7 6553
0032d8 656c
0032d9 7463
0032da 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
0032db 5245
0032dc 4f52
0032dd 2052
0032de 203a      	.DB  0x45,0x52,0x52,0x4F,0x52,0x20,0x3A,0x20
0032df 6553
0032e0 656c
0032e1 7463
0032e2 6e69      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x69,0x6E
0032e3 2067
0032e4 6573
0032e5 736e
0032e6 726f      	.DB  0x67,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
0032e7 5b20
0032e8 6325
0032e9 5b5d
0032ea 7830      	.DB  0x20,0x5B,0x25,0x63,0x5D,0x5B,0x30,0x78
0032eb 3025
0032ec 5832
0032ed 0d5d
0032ee 0d0a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0xD
0032ef 000a
0032f0 443c
0032f1 4245
0032f2 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
0032f3 735f
0032f4 7465
0032f5 6553
0032f6 6972      	.DB  0x5F,0x73,0x65,0x74,0x53,0x65,0x72,0x69
0032f7 6c61
0032f8 754e
0032f9 626d
0032fa 7265      	.DB  0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65,0x72
0032fb 203e
0032fc 6e69
0032fd 6176
0032fe 696c      	.DB  0x3E,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0032ff 2064
003300 6573
003301 7474
003302 6e69      	.DB  0x64,0x20,0x73,0x65,0x74,0x74,0x69,0x6E
003303 2067
003304 7473
003305 6972
003306 676e      	.DB  0x67,0x20,0x73,0x74,0x72,0x69,0x6E,0x67
003307 2820
003308 6325
003309 5b29
00330a 7830      	.DB  0x20,0x28,0x25,0x63,0x29,0x5B,0x30,0x78
00330b 3025
00330c 5d32
00330d 0a0d
00330e 3c00      	.DB  0x25,0x30,0x32,0x5D,0xD,0xA,0x0,0x3C
00330f 4544
003310 5542
003311 5f47
003312 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003313 5374
003314 7265
003315 6169
003316 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
003317 6d75
003318 6562
003319 3e72
00331a 5220      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x52
00331b 7065
00331c 616c
00331d 6963
00331e 676e      	.DB  0x65,0x70,0x6C,0x61,0x63,0x69,0x6E,0x67
00331f 4420
003320 5645
003321 4349
003322 5f45      	.DB  0x20,0x44,0x45,0x56,0x49,0x43,0x45,0x5F
003323 4553
003324 4952
003325 4c41
003326 2e2e      	.DB  0x53,0x45,0x52,0x49,0x41,0x4C,0x2E,0x2E
003327 0a0d
003328 3c00
003329 4544
00332a 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00332b 5f47
00332c 6573
00332d 5374
00332e 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
00332f 6169
003330 4e6c
003331 6d75
003332 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
003333 3e72
003334 5320
003335 7465
003336 5320      	.DB  0x72,0x3E,0x20,0x53,0x65,0x74,0x20,0x53
003337 7274
003338 6e69
003339 2067
00333a 2d2d      	.DB  0x74,0x72,0x69,0x6E,0x67,0x20,0x2D,0x2D
00333b 203e
00333c 5b00
00333d 6325
00333e 2500      	.DB  0x3E,0x20,0x0,0x5B,0x25,0x63,0x0,0x25
00333f 5d63
003340 3c00
003341 4544
003342 5542      	.DB  0x63,0x5D,0x0,0x3C,0x44,0x45,0x42,0x55
003343 5f47
003344 6573
003345 5374
003346 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
003347 6169
003348 4e6c
003349 6d75
00334a 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
00334b 3e72
00334c 5320
00334d 6375
00334e 6563      	.DB  0x72,0x3E,0x20,0x53,0x75,0x63,0x63,0x65
00334f 7373
003350 2121
003351 4420
003352 5645      	.DB  0x73,0x73,0x21,0x21,0x20,0x44,0x45,0x56
003353 535f
003354 5245
003355 4149
003356 204c      	.DB  0x5F,0x53,0x45,0x52,0x49,0x41,0x4C,0x20
003357 3d3d
003358 203e
003359 5b00
00335a 3025      	.DB  0x3D,0x3D,0x3E,0x20,0x0,0x5B,0x25,0x30
00335b 5832
00335c 005d
00335d 443c
00335e 4245      	.DB  0x32,0x58,0x5D,0x0,0x3C,0x44,0x45,0x42
00335f 4755
003360 725f
003361 6165
003362 5364      	.DB  0x55,0x47,0x5F,0x72,0x65,0x61,0x64,0x53
003363 7265
003364 6169
003365 4e6c
003366 6d75      	.DB  0x65,0x72,0x69,0x61,0x6C,0x4E,0x75,0x6D
003367 6562
003368 3e72
003369 4420
00336a 5645      	.DB  0x62,0x65,0x72,0x3E,0x20,0x44,0x45,0x56
00336b 535f
00336c 5245
00336d 4149
00336e 204c      	.DB  0x5F,0x53,0x45,0x52,0x49,0x41,0x4C,0x20
00336f 3d3d
003370 203e
003371 4700
003372 7465      	.DB  0x3D,0x3D,0x3E,0x20,0x0,0x47,0x65,0x74
003373 4420
003374 6265
003375 6775
003376 5220      	.DB  0x20,0x44,0x65,0x62,0x75,0x67,0x20,0x52
003377 7165
003378 3a2e
003379 2500
00337a 3530      	.DB  0x65,0x71,0x2E,0x3A,0x0,0x25,0x30,0x35
00337b 2064
00337c 2020
00337d 2500
00337e 3230      	.DB  0x64,0x20,0x20,0x20,0x0,0x25,0x30,0x32
00337f 2078
003380 2e00
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4562): warning: .cseg .db misalignment - padding zero byte
003381 0000      	.DB  0x78,0x20,0x0,0x2E,0x0
                 _0x300003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4564): warning: .cseg .db misalignment - padding zero byte
003382 0003      	.DB  0x3
                 _0x300000:
003383 0a0d
003384 673c
003385 7561
003386 7373      	.DB  0xD,0xA,0x3C,0x67,0x61,0x75,0x73,0x73
003387 6169
003388 3e6e
003389 2d20
00338a 2d2d      	.DB  0x69,0x61,0x6E,0x3E,0x20,0x2D,0x2D,0x2D
00338b 7320
00338c 6174
00338d 7472
00338e 2d20      	.DB  0x20,0x73,0x74,0x61,0x72,0x74,0x20,0x2D
00338f 2d2d
003390 0a0d
003391 0900
003392 0009      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x9,0x9,0x0
003393 2e25
003394 6632
003395 0009
003396 0a0d      	.DB  0x25,0x2E,0x32,0x66,0x9,0x0,0xD,0xA
003397 673c
003398 7561
003399 7373
00339a 6169      	.DB  0x3C,0x67,0x61,0x75,0x73,0x73,0x69,0x61
00339b 3e6e
00339c 2d20
00339d 2d2d
00339e 6620      	.DB  0x6E,0x3E,0x20,0x2D,0x2D,0x2D,0x20,0x66
00339f 6e69
0033a0 7369
0033a1 2068
0033a2 2d2d      	.DB  0x69,0x6E,0x69,0x73,0x68,0x20,0x2D,0x2D
0033a3 0d2d
0033a4 000a
0033a5 0a0d
0033a6 673c      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x3C,0x67
0033a7 7561
0033a8 7373
0033a9 6169
0033aa 3e6e      	.DB  0x61,0x75,0x73,0x73,0x69,0x61,0x6E,0x3E
0033ab 7920
0033ac 3d20
0033ad 2520
0033ae 2866      	.DB  0x20,0x79,0x20,0x3D,0x20,0x25,0x66,0x28
0033af 5e78
0033b0 2932
0033b1 2b20
0033b2 2520      	.DB  0x78,0x5E,0x32,0x29,0x20,0x2B,0x20,0x25
0033b3 2866
0033b4 2978
0033b5 2b20
0033b6 2520      	.DB  0x66,0x28,0x78,0x29,0x20,0x2B,0x20,0x25
0033b7 0d66
0033b8 000a      	.DB  0x66,0xD,0xA,0x0
                 _0x2000060:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4581): warning: .cseg .db misalignment - padding zero byte
0033b9 0001      	.DB  0x1
                 _0x2000000:
0033ba 4e2d
0033bb 4e41
0033bc 4900
0033bd 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4584): warning: .cseg .db misalignment - padding zero byte
0033be 0000      	.DB  0x0
                 _0x2040003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4586): warning: .cseg .db misalignment - padding zero byte
0033bf 0001      	.DB  0x1
                 _0x2080000:
0033c0 4e2d
0033c1 4e41
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TMEC_v03\List\iNT_ETH.asm(4588): warning: .cseg .db misalignment - padding zero byte
0033c2 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
0033c3 0004      	.DW  0x04
0033c4 1d8a      	.DW  0x1D8A
0033c5 01fe 0000 	.DD  __HEAP_START_MARKER*2
                 
0033c7 0004      	.DW  0x04
0033c8 14e0      	.DW  _ETH_rst_timer_S0000001000
0033c9 021c 0000 	.DD  _0xA5*2
                 
0033cb 002b      	.DW  0x2B
0033cc 0cf0      	.DW  _0x40009
0033cd 1086 0000 	.DD  _0x40000*2
                 
0033cf 0026      	.DW  0x26
0033d0 0d1b      	.DW  _0x40009+43
0033d1 10b1 0000 	.DD  _0x40000*2+43
                 
0033d3 002b      	.DW  0x2B
0033d4 0d41      	.DW  _0x40009+81
0033d5 1086 0000 	.DD  _0x40000*2
                 
0033d7 0002      	.DW  0x02
0033d8 1434      	.DW  _d_out
0033d9 115e 0000 	.DD  _0x80003*2
                 
0033db 0001      	.DW  0x01
0033dc 10f6      	.DW  _is_properties_config_update
0033dd 12c8 0000 	.DD  _0xE0003*2
                 
0033df 0001      	.DW  0x01
0033e0 10f7      	.DW  _is_operating_config_update
0033e1 12ca 0000 	.DD  _0xE0004*2
                 
0033e3 0005      	.DW  0x05
0033e4 10f8      	.DW  _is_sensor_config_update
0033e5 12cc 0000 	.DD  _0xE0005*2
                 
0033e7 0010      	.DW  0x10
0033e8 10fd      	.DW  _is_din_config_update
0033e9 12d2 0000 	.DD  _0xE0006*2
                 
0033eb 0005      	.DW  0x05
0033ec 110d      	.DW  _is_dout_config_update
0033ed 12e2 0000 	.DD  _0xE0007*2
                 
0033ef 0001      	.DW  0x01
0033f0 1112      	.DW  _is_buzzer_config_update
0033f1 12e8 0000 	.DD  _0xE0008*2
                 
0033f3 0001      	.DW  0x01
0033f4 1113      	.DW  _is_status_config_update
0033f5 12ea 0000 	.DD  _0xE0009*2
                 
0033f7 0001      	.DW  0x01
0033f8 1114      	.DW  _is_env_config_update
0033f9 12ec 0000 	.DD  _0xE000A*2
                 
0033fb 0002      	.DW  0x02
0033fc 0d6c      	.DW  _0x1200D0
0033fd 324c 0000 	.DD  _0x120000*2+4850
                 
0033ff 0003      	.DW  0x03
003400 0007      	.DW  0x07
003401 42d2 0000 	.DD  _0x18001D*2
                 
003403 0005      	.DW  0x05
003404 1564      	.DW  _lastCheck_S00D0002000
003405 4402 0000 	.DD  _0x1A0015*2
                 
003407 0004      	.DW  0x04
003408 000a      	.DW  0x0A
003409 48be 0000 	.DD  _0x1C0005*2
                 
00340b 0002      	.DW  0x02
00340c 147c      	.DW  _dinStatus
00340d 48c2 0000 	.DD  _0x1E0003*2
                 
00340f 0002      	.DW  0x02
003410 147e      	.DW  _doutStatus
003411 48c4 0000 	.DD  _0x1E0004*2
                 
003413 0001      	.DW  0x01
003414 1480      	.DW  _serverCommStatus
003415 48c6 0000 	.DD  _0x1E0005*2
                 
003417 0002      	.DW  0x02
003418 1600      	.DW  _lastDinCheck_S00F0006000
003419 48c8 0000 	.DD  _0x1E003A*2
                 
00341b 0010      	.DW  0x10
00341c 1496      	.DW  _dinAlarm
00341d 4a08 0000 	.DD  _0x220003*2
                 
00341f 0010      	.DW  0x10
003420 1682      	.DW  _ainAlarm
003421 4a18 0000 	.DD  _0x220004*2
                 
003423 0001      	.DW  0x01
003424 169c      	.DW  _lastCheck_S0110003000
003425 4a28 0000 	.DD  _0x2200A8*2
                 
003427 0001      	.DW  0x01
003428 16a2      	.DW  _lastCheck_S0110004000
003429 4a2a 0000 	.DD  _0x2200B1*2
                 
00342b 0002      	.DW  0x02
00342c 16b2      	.DW  _lastCheck_S0110006000
00342d 4a2c 0000 	.DD  _0x2200C5*2
                 
00342f 0005      	.DW  0x05
003430 16cd      	.DW  _lastCheck_S0110007000
003431 4a2e 0000 	.DD  _0x2200CF*2
                 
003433 0004      	.DW  0x04
003434 1487      	.DW  _muteAlarmExpired
003435 4a34 0000 	.DD  _0x2200DD*2
                 
003437 0001      	.DW  0x01
003438 0006      	.DW  0x06
003439 4a38 0000 	.DD  _0x2200F6*2
                 
00343b 0003      	.DW  0x03
00343c 191f      	.DW  _root_path
00343d 4ce2 0000 	.DD  _0x260003*2
                 
00343f 0008      	.DW  0x08
003440 14a8      	.DW  _LOGFILE_DATA
003441 51bc 0000 	.DD  _0x280003*2
                 
003443 0009      	.DW  0x09
003444 14b1      	.DW  _LOGFILE_EVENT
003445 51c4 0000 	.DD  _0x280004*2
                 
003447 0009      	.DW  0x09
003448 14bb      	.DW  _LOGFILE_ERROR
003449 51ce 0000 	.DD  _0x280005*2
                 
00344b 0010      	.DW  0x10
00344c 14c5      	.DW  _LOG_INIT_STR
00344d 51d8 0000 	.DD  _0x280006*2
                 
00344f 0004      	.DW  0x04
003450 14d5      	.DW  _LOG_openFile
003451 51e8 0000 	.DD  _0x280007*2
                 
003453 0004      	.DW  0x04
003454 14d9      	.DW  _LOG_closeFile
003455 51ec 0000 	.DD  _0x280008*2
                 
003457 0001      	.DW  0x01
003458 10f4      	.DW  _hwCalId
003459 63cc 0000 	.DD  _0x2E0003*2
                 
00345b 0001      	.DW  0x01
00345c 1a71      	.DW  _n
00345d 6704 0000 	.DD  _0x300003*2
                 
00345f 0001      	.DW  0x01
003460 1aa3      	.DW  __seed_G100
003461 6772 0000 	.DD  _0x2000060*2
                 
003463 0001      	.DW  0x01
003464 1aa7      	.DW  _status_G102
003465 677e 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
003467 0000      	.DW  0
                 
                 __RESET:
003468 94f8      	CLI
003469 27ee      	CLR  R30
00346a bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00346b e0f1      	LDI  R31,1
00346c bff5      	OUT  MCUCR,R31
00346d bfe5      	OUT  MCUCR,R30
00346e 93e0 0074 	STS  XMCRA,R30
003470 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
003472 e1f8      	LDI  R31,0x18
003473 95a8      	WDR
003474 b7a4      	IN   R26,MCUSR
003475 7fa7      	CBR  R26,8
003476 bfa4      	OUT  MCUSR,R26
003477 93f0 0060 	STS  WDTCSR,R31
003479 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00347b e08d      	LDI  R24,(14-2)+1
00347c e0a2      	LDI  R26,2
00347d 27bb      	CLR  R27
                 __CLEAR_REG:
00347e 93ed      	ST   X+,R30
00347f 958a      	DEC  R24
003480 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
003481 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
003482 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
003483 e0a0      	LDI  R26,LOW(__SRAM_START)
003484 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
003485 93ed      	ST   X+,R30
003486 9701      	SBIW R24,1
003487 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
003488 e8e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
003489 e6f7      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
00348a e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00348b bfdb      	OUT  RAMPZ,R29
00348c 9187      	ELPM R24,Z+
00348d 9197      	ELPM R25,Z+
00348e 9700      	SBIW R24,0
00348f f081      	BREQ __GLOBAL_INI_END
003490 91a7      	ELPM R26,Z+
003491 91b7      	ELPM R27,Z+
003492 9007      	ELPM R0,Z+
003493 9017      	ELPM R1,Z+
003494 91c7      	ELPM R28,Z+
003495 91d7      	ELPM R29,Z+
003496 01bf      	MOVW R22,R30
003497 b7db      	IN   R29,RAMPZ
003498 01f0      	MOVW R30,R0
003499 bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
00349a 9007      	ELPM R0,Z+
00349b 920d      	ST   X+,R0
00349c 9701      	SBIW R24,1
00349d f7e1      	BRNE __GLOBAL_INI_LOOP
00349e 01fb      	MOVW R30,R22
00349f cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0034a0 e0e0      	LDI  R30,__GPIOR0_INIT
0034a1 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0034a2 e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0034a3 bfed      	OUT  SPL,R30
0034a4 e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0034a5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0034a6 efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0034a7 e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0034a8 940c 34aa 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "oled.h"
                 ;#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0031 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 0041 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0042     int                     err,i=0,k=0,res,last_status;
                 ; 0000 0043 
                 ; 0000 0044     TIMER                   sensor_report_timer[5];
                 ; 0000 0045     TIMER                   status_report_timer;
                 ; 0000 0046     TIMER                   check_reset_timer;
                 ; 0000 0047     TIMER                   check_memory_timer;
                 ; 0000 0048     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 0049     TIMER                   readSensorTimer = 0;
                 ; 0000 004A     unsigned long int       timestamp_rd;
                 ; 0000 004B 
                 ; 0000 004C     char                    key_press = 0;
                 ; 0000 004D 
                 ; 0000 004E     float tmpA = 0.0;
                 ; 0000 004F     float tmpB = 0.0;
                 ; 0000 0050     float tmpC = 0.0;
                 ; 0000 0051 
                 ; 0000 0052     struct rtc_structure st_rtc;
                 ; 0000 0053 
                 ; 0000 0054     // -------- System Initialize ----------- //
                 ; 0000 0055     do{ err = initial_system();  }while(err);
0034aa 97ef      	SBIW R28,63
0034ab 9768      	SBIW R28,24
0034ac e189      	LDI  R24,25
0034ad e1aa      	LDI  R26,LOW(26)
0034ae e0b0      	LDI  R27,HIGH(26)
0034af e0e2      	LDI  R30,LOW(_0x3*2)
0034b0 e0f2      	LDI  R31,HIGH(_0x3*2)
0034b1 e060      	LDI  R22,BYTE3(_0x3*2)
0034b2 940e daa7 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+85
                 ;	last_status -> Y+83
                 ;	sensor_report_timer -> Y+63
                 ;	status_report_timer -> Y+59
                 ;	check_reset_timer -> Y+55
                 ;	check_memory_timer -> Y+51
                 ;	clear_duplicate_timer -> Y+47
                 ;	readSensorTimer -> Y+43
                 ;	timestamp_rd -> Y+39
                 ;	key_press -> Y+38
                 ;	tmpA -> Y+34
                 ;	tmpB -> Y+30
                 ;	tmpC -> Y+26
                 ;	st_rtc -> Y+0
0034b4 940e bbd8 	CALL SUBOPT_0x0
                 _0x5:
0034b6 940e 3d31 	CALL _initial_system
0034b8 018f      	MOVW R16,R30
0034b9 2e00      	MOV  R0,R16
0034ba 2a01      	OR   R0,R17
0034bb f7d1      	BRNE _0x5
                 ; 0000 0056 
                 ; 0000 0057     //ETH_CONF;
                 ; 0000 0058 
                 ; 0000 0059     ETH_switchMode((unsigned char) MODE_NORM);
0034bc e8a0      	LDI  R26,LOW(128)
0034bd 940e 5d12 	CALL _ETH_switchMode
                 ; 0000 005A     //ETH_NORM;
                 ; 0000 005B    // ETH_reset();
                 ; 0000 005C    // ETH_OFF;
                 ; 0000 005D    // delay_ms(2000);
                 ; 0000 005E    // ETH_ON;
                 ; 0000 005F 
                 ; 0000 0060     // -- alarm indicator initialize -- //
                 ; 0000 0061     buzzer_on = 0;          // -- buzzer off -- //
0034bf 98f3      	CBI  0x1E,3
                 ; 0000 0062     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
0034c0 e040     +LDI R20 , LOW ( 0 )
0034c1 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
0034c2 3042     +CPI R20 , LOW ( 2 )
0034c3 e0e0     +LDI R30 , HIGH ( 2 )
0034c4 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0034c5 f44c      	BRGE _0xB
                 ; 0000 0063     {
                 ; 0000 0064         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
0034c6 940e bbdd 	CALL SUBOPT_0x1
0034c8 940e bbe7 	CALL SUBOPT_0x2
0034ca 940e 4205 	CALL _IO_dout
                 ; 0000 0065     }
                +
0034cc 5f4f     +SUBI R20 , LOW ( - 1 )
0034cd 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0034ce cff3      	RJMP _0xA
                 _0xB:
                 ; 0000 0066 
                 ; 0000 0067     initDataLogQueue();
0034cf 940e 83af 	CALL _initDataLogQueue
                 ; 0000 0068     initEventLogQueue();
0034d1 940e 8485 	CALL _initEventLogQueue
                 ; 0000 0069     ETH_initWaitQueue();
0034d3 940e 68f5 	CALL _ETH_initWaitQueue
                 ; 0000 006A 
                 ; 0000 006B     printDebug("\r\n------ Initial Complete ------\r\n");
                +
0034d5 e2e0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0034d6 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
0034d7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
0034d8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
0034d9 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 006C     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
0034db e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
0034dc e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
0034dd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
0034de e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
0034df 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 006D 
                 ; 0000 006E 
                 ; 0000 006F     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 0070 
                 ; 0000 0071     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0034e1 e020     +LDI R18 , LOW ( 0 )
0034e2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
0034e3 3025     +CPI R18 , LOW ( 5 )
0034e4 e0e0     +LDI R30 , HIGH ( 5 )
0034e5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0034e6 f444      	BRGE _0xE
                 ; 0000 0072         if(operating_config.sensorEnable[i]){
0034e7 940e bbf3 	CALL SUBOPT_0x4
0034e9 f011      	BREQ _0xF
                 ; 0000 0073             TIMER_setTimer(&sensor_report_timer[i], 5);
0034ea 940e bbfa 	CALL SUBOPT_0x5
                 ; 0000 0074         }
                 ; 0000 0075     }
                 _0xF:
                +
0034ec 5f2f     +SUBI R18 , LOW ( - 1 )
0034ed 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0034ee cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 0076 
                 ; 0000 0077 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 0078 //                 -90, -20, 50,
                 ; 0000 0079 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 007A //
                 ; 0000 007B //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 007C //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 007D //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 007E 
                 ; 0000 007F     TIMER_setTimer(&status_report_timer, 7);
0034ef 940e bc09 	CALL SUBOPT_0x6
                 ; 0000 0080     TIMER_setTimer(&check_reset_timer, 60);
0034f1 940e bc13 	CALL SUBOPT_0x7
                 ; 0000 0081     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0034f3 940e bc1d 	CALL SUBOPT_0x8
                 ; 0000 0082 
                 ; 0000 0083     while(1){
                 _0x10:
                 ; 0000 0084 
                 ; 0000 0085         #asm("wdr")
0034f5 95a8      	wdr
                 ; 0000 0086 
                 ; 0000 0087         // Reset at 05.00 in every day
                 ; 0000 0088         if(TIMER_checkTimerExceed(check_reset_timer))
                +
0034f6 a9af     +LDD R26 , Y + 55
0034f7 adb8     +LDD R27 , Y + 55 + 1
0034f8 ad89     +LDD R24 , Y + 55 + 2
0034f9 ad9a     +LDD R25 , Y + 55 + 3
                 	__GETD2S 55
0034fa 940e 405d 	CALL _TIMER_checkTimerExceed
0034fc 9730      	SBIW R30,0
0034fd f0c1      	BREQ _0x13
                 ; 0000 0089         {
                 ; 0000 008A             TIMER_setTimer(&check_reset_timer, 60);
0034fe 940e bc13 	CALL SUBOPT_0x7
                 ; 0000 008B             RTC_getDateTime(&st_rtc, 7);
003500 940e bc27 	CALL SUBOPT_0x9
003502 940e bc2b 	CALL SUBOPT_0xA
003504 940e 46fd 	CALL _RTC_getDateTime
                 ; 0000 008C //            printRTC(st_rtc);
                 ; 0000 008D             if(st_rtc.hour == 5) {
003506 940e bc2e 	CALL SUBOPT_0xB
                +
003508 30a5     +CPI R26 , LOW ( 0x5 )
003509 e0e0     +LDI R30 , HIGH ( 0x5 )
00350a 07be     +CPC R27 , R30
00350b e0e0     +LDI R30 , BYTE3 ( 0x5 )
00350c 078e     +CPC R24 , R30
00350d e0e0     +LDI R30 , BYTE4 ( 0x5 )
00350e 079e     +CPC R25 , R30
                 	__CPD2N 0x5
00350f f431      	BRNE _0x14
                 ; 0000 008E                 if(st_rtc.min == 0) {
003510 940e bc33 	CALL SUBOPT_0xC
003512 940e da7d 	CALL __CPD10
003514 f409      	BRNE _0x15
                 ; 0000 008F                     while(1);
                 _0x16:
003515 cfff      	RJMP _0x16
                 ; 0000 0090                 }
                 ; 0000 0091             }
                 _0x15:
                 ; 0000 0092         }
                 _0x14:
                 ; 0000 0093 
                 ; 0000 0094         // ----------- Received Debug Request ---------- //
                 ; 0000 0095         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
003516 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
003518 30e0      	CPI  R30,0
003519 f011      	BREQ _0x19
00351a 940e 9a8e 	CALL _debug_req
                 ; 0000 0096 
                 ; 0000 0097         // ----------- On Device Key Press ------------- //
                 ; 0000 0098         key_press = IO_keyCheck();
                 _0x19:
00351c 940e 4222 	CALL _IO_keyCheck
00351e a3ee      	STD  Y+38,R30
                 ; 0000 0099         if(key_press){
00351f 30e0      	CPI  R30,0
003520 f019      	BREQ _0x1A
                 ; 0000 009A             MENU_processKey(key_press);
003521 a1ae      	LDD  R26,Y+38
003522 940e 8497 	CALL _MENU_processKey
                 ; 0000 009B         }
                 ; 0000 009C 
                 ; 0000 009D         // ----------- Ethernet Communication ---------- //
                 ; 0000 009E         ETH_receive();
                 _0x1A:
003524 940e 5bc8 	CALL _ETH_receive
                 ; 0000 009F         ETH_retransmit();
003526 940e 560e 	CALL _ETH_retransmit
                 ; 0000 00A0 
                 ; 0000 00A1         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00A2         if(is_properties_config_update){
003528 91e0 10f6 	LDS  R30,_is_properties_config_update
00352a 30e0      	CPI  R30,0
00352b f011      	BREQ _0x1B
                 ; 0000 00A3             getPropertiesConfig(&properties_config);
00352c 940e bc38 	CALL SUBOPT_0xD
                 ; 0000 00A4             is_properties_config_update = 0;
                 ; 0000 00A5         }
                 ; 0000 00A6 
                 ; 0000 00A7         if(is_operating_config_update){
                 _0x1B:
00352e 91e0 10f7 	LDS  R30,_is_operating_config_update
003530 30e0      	CPI  R30,0
003531 f011      	BREQ _0x1C
                 ; 0000 00A8             getOperatingConfig(&operating_config);
003532 940e bc40 	CALL SUBOPT_0xE
                 ; 0000 00A9             is_operating_config_update = 0;
                 ; 0000 00AA         }
                 ; 0000 00AB 
                 ; 0000 00AC         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1C:
                +
003534 e020     +LDI R18 , LOW ( 0 )
003535 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E:
                +
003536 3025     +CPI R18 , LOW ( 5 )
003537 e0e0     +LDI R30 , HIGH ( 5 )
003538 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003539 f504      	BRGE _0x1F
                 ; 0000 00AD             if(is_sensor_config_update[i]){
00353a efa8      	LDI  R26,LOW(_is_sensor_config_update)
00353b e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
00353c 940e bc48 	CALL SUBOPT_0xF
00353e f0c1      	BREQ _0x20
                 ; 0000 00AE                 err = getSensorConfig(i,&sensor_config[i]);
00353f 933a      	ST   -Y,R19
003540 932a      	ST   -Y,R18
003541 940e bc4d 	CALL SUBOPT_0x10
003543 940e 48be 	CALL _getSensorConfig
003545 018f      	MOVW R16,R30
                 ; 0000 00AF                 if(err < 0){
003546 2311      	TST  R17
003547 f44a      	BRPL _0x21
                 ; 0000 00B0                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
003548 e6e7     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
003549 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
00354a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
00354b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
00354c 940e bc56 	CALL SUBOPT_0x11
00354e 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 00B1                     continue;
003550 c006      	RJMP _0x1D
                 ; 0000 00B2                 }
                 ; 0000 00B3                 is_sensor_config_update[i] = 0;
                 _0x21:
003551 efa8      	LDI  R26,LOW(_is_sensor_config_update)
003552 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
003553 940e bc63 	CALL SUBOPT_0x13
                 ; 0000 00B4                 TIMER_setTimer(&sensor_report_timer[i], 5);
003555 940e bbfa 	CALL SUBOPT_0x5
                 ; 0000 00B5             }
                 ; 0000 00B6         }
                 _0x20:
                 _0x1D:
                +
003557 5f2f     +SUBI R18 , LOW ( - 1 )
003558 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003559 cfdc      	RJMP _0x1E
                 _0x1F:
                 ; 0000 00B7 
                 ; 0000 00B8         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
00355a 91e0 1112 	LDS  R30,_is_buzzer_config_update
00355c 30e0      	CPI  R30,0
00355d f011      	BREQ _0x22
                 ; 0000 00B9             getBuzzerConfig(&buzz_config);
00355e 940e bc68 	CALL SUBOPT_0x14
                 ; 0000 00BA             is_buzzer_config_update = 0;
                 ; 0000 00BB         }
                 ; 0000 00BC 
                 ; 0000 00BD         for(i=0;i<USE_DIN;i++){
                 _0x22:
                +
003560 e020     +LDI R18 , LOW ( 0 )
003561 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
003562 3022     +CPI R18 , LOW ( 2 )
003563 e0e0     +LDI R30 , HIGH ( 2 )
003564 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003565 f49c      	BRGE _0x25
                 ; 0000 00BE             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
003566 efad      	LDI  R26,LOW(_is_din_config_update)
003567 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003568 940e bc48 	CALL SUBOPT_0xF
00356a f059      	BREQ _0x26
                 ; 0000 00BF                 getAuxDinConfig(i,&din_config[i]);
00356b 933a      	ST   -Y,R19
00356c 932a      	ST   -Y,R18
00356d 940e bc70 	CALL SUBOPT_0x15
00356f 01df      	MOVW R26,R30
003570 940e 49a6 	CALL _getAuxDinConfig
                 ; 0000 00C0                 is_din_config_update[i] = 0;
003572 efad      	LDI  R26,LOW(_is_din_config_update)
003573 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003574 940e bc63 	CALL SUBOPT_0x13
                 ; 0000 00C1             }
                 ; 0000 00C2         }
                 _0x26:
                +
003576 5f2f     +SUBI R18 , LOW ( - 1 )
003577 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003578 cfe9      	RJMP _0x24
                 _0x25:
                 ; 0000 00C3 
                 ; 0000 00C4         for(i=0;i<USE_DOUT;i++){
                +
003579 e020     +LDI R18 , LOW ( 0 )
00357a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x28:
                +
00357b 3022     +CPI R18 , LOW ( 2 )
00357c e0e0     +LDI R30 , HIGH ( 2 )
00357d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00357e f49c      	BRGE _0x29
                 ; 0000 00C5             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
00357f e0ad      	LDI  R26,LOW(_is_dout_config_update)
003580 e1b1      	LDI  R27,HIGH(_is_dout_config_update)
003581 940e bc48 	CALL SUBOPT_0xF
003583 f059      	BREQ _0x2A
                 ; 0000 00C6                 getAuxDoutConfig(i,&dout_config[i]);
003584 933a      	ST   -Y,R19
003585 932a      	ST   -Y,R18
                +
003586 e2a6     +LDI R26 , 38
003587 9fa2     +MUL R26 , R18
003588 01f0     +MOVW R30 , R0
003589 9fa3     +MUL R26 , R19
00358a 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
00358b 940e bc78 	CALL SUBOPT_0x16
                 ; 0000 00C7                 is_dout_config_update[i] = 0;
00358d 940e bc63 	CALL SUBOPT_0x13
                 ; 0000 00C8             }
                 ; 0000 00C9         }
                 _0x2A:
                +
00358f 5f2f     +SUBI R18 , LOW ( - 1 )
003590 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003591 cfe9      	RJMP _0x28
                 _0x29:
                 ; 0000 00CA 
                 ; 0000 00CB         if(is_status_config_update){
003592 91e0 1113 	LDS  R30,_is_status_config_update
003594 30e0      	CPI  R30,0
003595 f021      	BREQ _0x2B
                 ; 0000 00CC             getStatusReportConfig(&status_config);
003596 940e bc80 	CALL SUBOPT_0x17
                 ; 0000 00CD             is_status_config_update = 0;
                 ; 0000 00CE 
                 ; 0000 00CF             TIMER_setTimer(&status_report_timer, 7);
003598 940e bc09 	CALL SUBOPT_0x6
                 ; 0000 00D0         }
                 ; 0000 00D1 
                 ; 0000 00D2         if(is_env_config_update){
                 _0x2B:
00359a 91e0 1114 	LDS  R30,_is_env_config_update
00359c 30e0      	CPI  R30,0
00359d f011      	BREQ _0x2C
                 ; 0000 00D3             getEnvAlarmConfig(&env_config);
00359e 940e bc88 	CALL SUBOPT_0x18
                 ; 0000 00D4             is_env_config_update = 0;
                 ; 0000 00D5         }
                 ; 0000 00D6 
                 ; 0000 00D7         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2C:
                +
0035a0 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
0035a2 30e0      	CPI  R30,0
0035a3 f411      	BRNE PC+3
0035a4 940c 3798 	JMP _0x2D
                 ; 0000 00D8         {
                 ; 0000 00D9             // -------------- Sensor Association -------------- //
                 ; 0000 00DA             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0035a6 e020     +LDI R18 , LOW ( 0 )
0035a7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2F:
                +
0035a8 3025     +CPI R18 , LOW ( 5 )
0035a9 e0e0     +LDI R30 , HIGH ( 5 )
0035aa 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0035ab f014      	BRLT PC+3
0035ac 940c 35f4 	JMP _0x30
                 ; 0000 00DB             {
                 ; 0000 00DC                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
0035ae 940e bbf3 	CALL SUBOPT_0x4
0035b0 f411      	BRNE PC+3
0035b1 940c 35f1 	JMP _0x31
                 ; 0000 00DD                 {
                 ; 0000 00DE                     //** test **//
                 ; 0000 00DF //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 00E0 //                    {
                 ; 0000 00E1 //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 00E2 //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 00E3 //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 00E4 //                    }
                 ; 0000 00E5                     //-- test --//
                 ; 0000 00E6 
                 ; 0000 00E7 //                    printDebug("<main> sensorRead\r\n");
                 ; 0000 00E8                     err = sensorRead(i,&sensor[i]);
0035b3 940e bc90 	CALL SUBOPT_0x19
0035b5 940e 6a62 	CALL _sensorRead
0035b7 018f      	MOVW R16,R30
                 ; 0000 00E9                     if(err < 0)                                 // . sensor value error . //
0035b8 2311      	TST  R17
0035b9 f1ba      	BRMI _0x2E
                 ; 0000 00EA                     {
                 ; 0000 00EB                         continue;
                 ; 0000 00EC                     }
                 ; 0000 00ED                     else                                        // . sensor value valid . //
                 ; 0000 00EE                     {
                 ; 0000 00EF                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 00F0                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
0035ba 01f9      	MOVW R30,R18
0035bb 01de      	MOVW R26,R28
0035bc 96df      	ADIW R26,63
0035bd 940e bc9b 	CALL SUBOPT_0x1A
0035bf 940e bca2 	CALL SUBOPT_0x1B
0035c1 f179      	BREQ _0x34
                 ; 0000 00F1                         {
                 ; 0000 00F2                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
0035c2 01f9      	MOVW R30,R18
0035c3 01de      	MOVW R26,R28
0035c4 96df      	ADIW R26,63
0035c5 940e bca8 	CALL SUBOPT_0x1C
0035c7 93fa      	ST   -Y,R31
0035c8 93ea      	ST   -Y,R30
0035c9 940e bc4d 	CALL SUBOPT_0x10
0035cb 940e bcad 	CALL SUBOPT_0x1D
0035cd 940e bcb2 	CALL SUBOPT_0x1E
                 ; 0000 00F3 
                 ; 0000 00F4                             timestamp_rd = DS1672_read();
0035cf 940e 43d0 	CALL _DS1672_read
                +
0035d1 a3ef     +STD Y + 39 , R30
0035d2 a7f8     +STD Y + 39 + 1 , R31
0035d3 a769     +STD Y + 39 + 2 , R22
0035d4 a77a     +STD Y + 39 + 3 , R23
                 	__PUTD1S 39
                 ; 0000 00F5                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
0035d5 940e da29 	CALL __PUTPARD1
0035d7 940e bc90 	CALL SUBOPT_0x19
0035d9 940e d9f4 	CALL __GETD1P
0035db 01df      	MOVW R26,R30
0035dc 01cb      	MOVW R24,R22
0035dd 940e 713b 	CALL _addDataQueue
0035df 018f      	MOVW R16,R30
                 ; 0000 00F6                             if(err<0){
0035e0 2311      	TST  R17
0035e1 f47a      	BRPL _0x35
                 ; 0000 00F7                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
0035e2 e8ea     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
0035e3 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
0035e4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
0035e5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
0035e6 940e bc56 	CALL SUBOPT_0x11
                +
0035e8 e0a5     +LDI R26 , 5
0035e9 9fa2     +MUL R26 , R18
0035ea 01f0     +MOVW R30 , R0
0035eb 9fa3     +MUL R26 , R19
0035ec 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
0035ed 940e bcb6 	CALL SUBOPT_0x1F
0035ef 940e bcbc 	CALL SUBOPT_0x20
                 ; 0000 00F8                                 continue;   // -- continue other sensor
                 ; 0000 00F9                             }
                 ; 0000 00FA                         }
                 _0x35:
                 ; 0000 00FB                         else{
                 _0x34:
                 ; 0000 00FC                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 00FD                         }
                 ; 0000 00FE                     }
                 ; 0000 00FF 
                 ; 0000 0100                 }
                 ; 0000 0101                 else                                            // .. sensor disable .. //
                 _0x31:
                 ; 0000 0102                 {
                 ; 0000 0103                 }
                 ; 0000 0104             } // -- iterate each probe -- //
                 _0x2E:
                +
0035f1 5f2f     +SUBI R18 , LOW ( - 1 )
0035f2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0035f3 cfb4      	RJMP _0x2F
                 _0x30:
                 ; 0000 0105 
                 ; 0000 0106             #asm("wdr")
0035f4 95a8      	wdr
                 ; 0000 0107             // --------------- Status Management --------------- //
                 ; 0000 0108            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 0109             last_status = updateStatus();
0035f5 d211      	RCALL _updateStatus
                +
0035f6 01de     +MOVW R26 , R28
0035f7 5aad     +SUBI R26 , LOW ( - 83 )
0035f8 4fbf     +SBCI R27 , HIGH ( - 83 )
0035f9 93ed     +ST X + , R30
0035fa 93fc     +ST X , R31
                 	__PUTW1SX 83
                 ; 0000 010A 
                 ; 0000 010B             // --------------- Alarm Management --------------- //
                 ; 0000 010C             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
0035fb 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0035fd 30e0      	CPI  R30,0
0035fe f411      	BRNE PC+3
0035ff 940c 3674 	JMP _0x38
                 ; 0000 010D             {
                 ; 0000 010E                 // -- check alarm all -- //
                 ; 0000 010F                 if(last_status < 0)                             // .. status update falied .. //
                +
003601 01de     +MOVW R26 , R28
003602 5aac     +SUBI R26 , LOW ( - 84 )
003603 4fbf     +SBCI R27 , HIGH ( - 84 )
003604 91ac     +LD R26 , X
                 	__GETB2SX 84
003605 23aa      	TST  R26
003606 f43a      	BRPL _0x39
                 ; 0000 0110                 {
                 ; 0000 0111                     printDebug("<main> updateStatus() failed\r\n");
                +
003607 ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
003608 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
003609 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
00360a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
00360b 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0112                 }
                 ; 0000 0113                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
00360d c062      	RJMP _0x3A
                 _0x39:
                +
00360e 01de     +MOVW R26 , R28
00360f 5aad     +SUBI R26 , LOW ( - 83 )
003610 4fbf     +SBCI R27 , HIGH ( - 83 )
003611 900d     +LD R0 , X +
003612 91bc     +LD R27 , X
003613 2da0     +MOV R26 , R0
                 	__GETW2SX 83
003614 940e da81 	CALL __CPW02
003616 f424      	BRGE _0x3C
003617 91e0 148b 	LDS  R30,_muteMode
003619 30e0      	CPI  R30,0
00361a f009      	BREQ _0x3D
                 _0x3C:
00361b c044      	RJMP _0x3B
                 _0x3D:
                 ; 0000 0114                 {
                 ; 0000 0115                     // -- Buzzer Alarm -- //
                 ; 0000 0116                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
00361c 91a0 133d 	LDS  R26,_buzz_config
00361e 30a1      	CPI  R26,LOW(0x1)
00361f f471      	BRNE _0x3E
                 ; 0000 0117                     {
                 ; 0000 0118                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 0119                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
003620 e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
003621 e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
003622 93fa      	ST   -Y,R31
003623 93ea      	ST   -Y,R30
                +
003624 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
003626 27bb      	CLR  R27
003627 940e bcc3 	CALL SUBOPT_0x21
                 ; 0000 011A                         if(res){
003629 f011      	BREQ _0x3F
                 ; 0000 011B                             buzzer_on = 1;          // -- buzzer on -- //
00362a 9af3      	SBI  0x1E,3
                 ; 0000 011C                         }
                 ; 0000 011D                         else{
00362b c001      	RJMP _0x42
                 _0x3F:
                 ; 0000 011E                             buzzer_on = 0;          // -- buzzer off -- //
00362c 98f3      	CBI  0x1E,3
                 ; 0000 011F                         }
                 _0x42:
                 ; 0000 0120                     }
                 ; 0000 0121                     else                                        // -- buzzer disabled -- //
00362d c001      	RJMP _0x45
                 _0x3E:
                 ; 0000 0122                     {
                 ; 0000 0123                         buzzer_on = 0;                  // -- buzzer off -- //
00362e 98f3      	CBI  0x1E,3
                 ; 0000 0124                     }
                 _0x45:
                 ; 0000 0125 
                 ; 0000 0126                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0127                     for(k=0;k<USE_DOUT;k++)
                +
00362f e040     +LDI R20 , LOW ( 0 )
003630 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x49:
                +
003631 3042     +CPI R20 , LOW ( 2 )
003632 e0e0     +LDI R30 , HIGH ( 2 )
003633 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003634 f554      	BRGE _0x4A
                 ; 0000 0128                     {
                 ; 0000 0129                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
003635 940e bccc 	CALL SUBOPT_0x22
003637 58e1      	SUBI R30,LOW(-_dout_config)
003638 4efd      	SBCI R31,HIGH(-_dout_config)
003639 81a0      	LD   R26,Z
00363a 30a1      	CPI  R26,LOW(0x1)
00363b f4d1      	BRNE _0x4B
                 ; 0000 012A                         {
                 ; 0000 012B                             // -- check alarm Digital Output -- //
                 ; 0000 012C //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 012D                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
00363c 940e bccc 	CALL SUBOPT_0x22
                +
00363e 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
00363f 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
003640 93fa      	ST   -Y,R31
003641 93ea      	ST   -Y,R30
003642 940e bccc 	CALL SUBOPT_0x22
                +
003644 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
003645 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
003646 81a0      	LD   R26,Z
003647 e0b0      	LDI  R27,0
003648 940e bcc3 	CALL SUBOPT_0x21
                 ; 0000 012E                             if(res){
00364a f021      	BREQ _0x4C
                 ; 0000 012F                                 IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
00364b 940e bbdd 	CALL SUBOPT_0x1
00364d 81a0      	LD   R26,Z
00364e c004      	RJMP _0x133
                 ; 0000 0130                             }
                 ; 0000 0131                             else{
                 _0x4C:
                 ; 0000 0132                                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00364f 940e bbdd 	CALL SUBOPT_0x1
003651 940e bbe7 	CALL SUBOPT_0x2
                 _0x133:
003653 940e 4205 	CALL _IO_dout
                 ; 0000 0133                             }
                 ; 0000 0134                         }
                 ; 0000 0135                         else                                                // -- digital output disabled -- //
003655 c006      	RJMP _0x4E
                 _0x4B:
                 ; 0000 0136                         {
                 ; 0000 0137                             IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
003656 940e bbdd 	CALL SUBOPT_0x1
003658 940e bbe7 	CALL SUBOPT_0x2
00365a 940e 4205 	CALL _IO_dout
                 ; 0000 0138                         }
                 _0x4E:
                 ; 0000 0139                     }
                +
00365c 5f4f     +SUBI R20 , LOW ( - 1 )
00365d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00365e cfd2      	RJMP _0x49
                 _0x4A:
                 ; 0000 013A                 }
                 ; 0000 013B                 else                                            // .. no event .. //
00365f c010      	RJMP _0x4F
                 _0x3B:
                 ; 0000 013C                 {
                 ; 0000 013D                     // -- no alarm -- // ^_^
                 ; 0000 013E                     buzzer_on = 0;                  // -- buzzer off -- //
003660 98f3      	CBI  0x1E,3
                 ; 0000 013F                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
003661 e040     +LDI R20 , LOW ( 0 )
003662 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x53:
                +
003663 3042     +CPI R20 , LOW ( 2 )
003664 e0e0     +LDI R30 , HIGH ( 2 )
003665 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003666 f44c      	BRGE _0x54
                 ; 0000 0140                     {
                 ; 0000 0141                         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
003667 940e bbdd 	CALL SUBOPT_0x1
003669 940e bbe7 	CALL SUBOPT_0x2
00366b 940e 4205 	CALL _IO_dout
                 ; 0000 0142                     }
                +
00366d 5f4f     +SUBI R20 , LOW ( - 1 )
00366e 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00366f cff3      	RJMP _0x53
                 _0x54:
                 ; 0000 0143                 }
                 _0x4F:
                 _0x3A:
                 ; 0000 0144 
                 ; 0000 0145                 res = eventCapture();                           // -- send event packet if needed -- //
003670 d20b      	RCALL _eventCapture
003671 940e bcd2 	CALL SUBOPT_0x23
                 ; 0000 0146             }
                 ; 0000 0147             else                                                // .. alarm disable .. //
003673 c010      	RJMP _0x55
                 _0x38:
                 ; 0000 0148             {
                 ; 0000 0149             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 014A                 // -- no alarm -- // ;-P
                 ; 0000 014B                 buzzer_on = 0;                      // -- buzzer off -- //
003674 98f3      	CBI  0x1E,3
                 ; 0000 014C                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
003675 e040     +LDI R20 , LOW ( 0 )
003676 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x59:
                +
003677 3042     +CPI R20 , LOW ( 2 )
003678 e0e0     +LDI R30 , HIGH ( 2 )
003679 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00367a f44c      	BRGE _0x5A
                 ; 0000 014D                 {
                 ; 0000 014E                     IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00367b 940e bbdd 	CALL SUBOPT_0x1
00367d 940e bbe7 	CALL SUBOPT_0x2
00367f 940e 4205 	CALL _IO_dout
                 ; 0000 014F                 }
                +
003681 5f4f     +SUBI R20 , LOW ( - 1 )
003682 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003683 cff3      	RJMP _0x59
                 _0x5A:
                 ; 0000 0150             }
                 _0x55:
                 ; 0000 0151 
                 ; 0000 0152             // -- check mute expired -- //
                 ; 0000 0153             if(muteMode){
003684 91e0 148b 	LDS  R30,_muteMode
003686 30e0      	CPI  R30,0
003687 f059      	BREQ _0x5B
                 ; 0000 0154                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 0155                 if(ALARM_checkMuteExpired()){
003688 940e 7a2b 	CALL _ALARM_checkMuteExpired
00368a 9730      	SBIW R30,0
00368b f039      	BREQ _0x5C
                 ; 0000 0156                     muteAlarmExpired = 0xFFFFFFFF;
00368c 940e bcd8 	CALL SUBOPT_0x24
00368e 940e bcdd 	CALL SUBOPT_0x25
                 ; 0000 0157                     muteMode = 0;
003690 e0e0      	LDI  R30,LOW(0)
003691 93e0 148b 	STS  _muteMode,R30
                 ; 0000 0158                 }
                 ; 0000 0159             }
                 _0x5C:
                 ; 0000 015A 
                 ; 0000 015B             // ---------------- Operating Mode ---------------- //
                 ; 0000 015C //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 015D             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
                 _0x5B:
003693 91a0 11b6 	LDS  R26,_operating_config
003695 31a0      	CPI  R26,LOW(0x10)
003696 f5e1      	BRNE _0x5D
                 ; 0000 015E             {
                 ; 0000 015F                 if(!duplicateListClear)
003697 91e0 1425 	LDS  R30,_duplicateListClear
003699 30e0      	CPI  R30,0
00369a f4a9      	BRNE _0x5E
                 ; 0000 0160                 {
                 ; 0000 0161                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
00369b a5af     +LDD R26 , Y + 47
00369c a9b8     +LDD R27 , Y + 47 + 1
00369d a989     +LDD R24 , Y + 47 + 2
00369e a99a     +LDD R25 , Y + 47 + 3
                 	__GETD2S 47
00369f 940e 405d 	CALL _TIMER_checkTimerExceed
0036a1 940e bcd2 	CALL SUBOPT_0x23
                 ; 0000 0162                     if(res != 0){
0036a3 940e bce6 	CALL SUBOPT_0x26
0036a5 9730      	SBIW R30,0
0036a6 f031      	BREQ _0x5F
                 ; 0000 0163                         TIMER_setTimer(&clear_duplicate_timer, 10);
0036a7 01fe      	MOVW R30,R28
0036a8 96bf      	ADIW R30,47
0036a9 940e bced 	CALL SUBOPT_0x27
                 ; 0000 0164                         ETH_clearDuplicateRequestCmd();
0036ab 940e 5522 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 0165                     }
                 ; 0000 0166 
                 ; 0000 0167                     sensorDataSave();
                 _0x5F:
0036ad d43e      	RCALL _sensorDataSave
                 ; 0000 0168                     eventSave();
0036ae d4c1      	RCALL _eventSave
                 ; 0000 0169                 }
                 ; 0000 016A                 else
0036af c022      	RJMP _0x60
                 _0x5E:
                 ; 0000 016B                 {
                 ; 0000 016C                     if(TIMER_checkTimerExceed(status_report_timer))
                +
0036b0 adab     +LDD R26 , Y + 59
0036b1 adbc     +LDD R27 , Y + 59 + 1
0036b2 ad8d     +LDD R24 , Y + 59 + 2
0036b3 ad9e     +LDD R25 , Y + 59 + 3
                 	__GETD2S 59
0036b4 940e 405d 	CALL _TIMER_checkTimerExceed
0036b6 9730      	SBIW R30,0
0036b7 f069      	BREQ _0x61
                 ; 0000 016D                     {
                 ; 0000 016E                         TIMER_setTimer(&status_report_timer, status_config.intv);
0036b8 01fe      	MOVW R30,R28
0036b9 96fb      	ADIW R30,59
0036ba 93fa      	ST   -Y,R31
0036bb 93ea      	ST   -Y,R30
                +
0036bc 91a0 1363+LDS R26 , _status_config + ( 1 )
0036be 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
0036c0 2788      	CLR  R24
0036c1 2799      	CLR  R25
0036c2 940e 4073 	CALL _TIMER_setTimer
                 ; 0000 016F 
                 ; 0000 0170                         statusReport();
0036c4 d2e3      	RCALL _statusReport
                 ; 0000 0171                     }
                 ; 0000 0172 
                 ; 0000 0173                     // -- report log only when no realtime data not ready -- //
                 ; 0000 0174                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x61:
0036c5 d383      	RCALL _sensorDataReport
0036c6 9730      	SBIW R30,0
0036c7 f441      	BRNE _0x63
0036c8 d3d4      	RCALL _eventReport
0036c9 9730      	SBIW R30,0
0036ca f429      	BRNE _0x63
0036cb 940e bcf5 	CALL SUBOPT_0x28
0036cd 940e da89 	CALL __CPD02
0036cf f008      	BRLO _0x64
                 _0x63:
0036d0 c001      	RJMP _0x62
                 _0x64:
                 ; 0000 0175                     {
                 ; 0000 0176                         logReport();
0036d1 d526      	RCALL _logReport
                 ; 0000 0177                     }
                 ; 0000 0178                 }
                 _0x62:
                 _0x60:
                 ; 0000 0179             }
                 ; 0000 017A             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
0036d2 c011      	RJMP _0x65
                 _0x5D:
0036d3 91a0 11b6 	LDS  R26,_operating_config
0036d5 32a0      	CPI  R26,LOW(0x20)
0036d6 f419      	BRNE _0x66
                 ; 0000 017B             {
                 ; 0000 017C                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 017D                 sensorDataSave();
0036d7 d414      	RCALL _sensorDataSave
                 ; 0000 017E               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 017F                 eventSave();
0036d8 d497      	RCALL _eventSave
                 ; 0000 0180             }
                 ; 0000 0181             else                                                // .. unknown mode .. //
0036d9 c00a      	RJMP _0x67
                 _0x66:
                 ; 0000 0182             {
                 ; 0000 0183                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
0036da ede5     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
0036db e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
0036dc e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
0036dd e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
0036de 940e da29 	CALL __PUTPARD1
0036e0 91e0 11b6 	LDS  R30,_operating_config
0036e2 940e bcfe 	CALL SUBOPT_0x29
                 ; 0000 0184             }
                 _0x67:
                 _0x65:
                 ; 0000 0185 
                 ; 0000 0186             #asm("wdr")
0036e4 95a8      	wdr
                 ; 0000 0187             if(timer_1sec_flag)
0036e5 9bf2      	SBIS 0x1E,2
0036e6 c0b0      	RJMP _0x68
                 ; 0000 0188             {
                 ; 0000 0189               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 018A                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
0036e7 a9ab     +LDD R26 , Y + 51
0036e8 a9bc     +LDD R27 , Y + 51 + 1
0036e9 a98d     +LDD R24 , Y + 51 + 2
0036ea a99e     +LDD R25 , Y + 51 + 3
                 	__GETD2S 51
0036eb 940e 405d 	CALL _TIMER_checkTimerExceed
0036ed 9730      	SBIW R30,0
0036ee f021      	BREQ _0x6A
0036ef 91a0 1482 	LDS  R26,_memoryStatus
0036f1 30a1      	CPI  R26,LOW(0x1)
0036f2 f409      	BRNE _0x6B
                 _0x6A:
0036f3 c014      	RJMP _0x69
                 _0x6B:
                 ; 0000 018B                 {
                 ; 0000 018C               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 018D                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0036f4 940e bc1d 	CALL SUBOPT_0x8
                 ; 0000 018E 
                 ; 0000 018F                     res = SD_readMemoryRemain(&sdFreeSpace);
0036f6 e6ab      	LDI  R26,LOW(_sdFreeSpace)
0036f7 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
0036f8 940e 7db9 	CALL _SD_readMemoryRemain
0036fa 940e bcd2 	CALL SUBOPT_0x23
                 ; 0000 0190                     if(res < 0){
                +
0036fc 01de     +MOVW R26 , R28
0036fd 5aaa     +SUBI R26 , LOW ( - 86 )
0036fe 4fbf     +SBCI R27 , HIGH ( - 86 )
0036ff 91ac     +LD R26 , X
                 	__GETB2SX 86
003700 23aa      	TST  R26
003701 f432      	BRPL _0x6C
                 ; 0000 0191                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
003702 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
003703 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
003704 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
003705 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
003706 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0192                     }
                 ; 0000 0193                 }
                 _0x6C:
                 ; 0000 0194 
                 ; 0000 0195                 if(currentPage == P_MONITOR)
                 _0x69:
003708 91e0 14df 	LDS  R30,_currentPage
00370a 30e0      	CPI  R30,0
00370b f569      	BRNE _0x6D
                 ; 0000 0196                 {
                 ; 0000 0197               //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 0198                     OLED_showSensorValue();
00370c 940e 7ab7 	CALL _OLED_showSensorValue
                 ; 0000 0199 
                 ; 0000 019A                     for(i=0;i<2;i++){
                +
00370e e020     +LDI R18 , LOW ( 0 )
00370f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
                +
003710 3022     +CPI R18 , LOW ( 2 )
003711 e0e0     +LDI R30 , HIGH ( 2 )
003712 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003713 f454      	BRGE _0x70
                 ; 0000 019B                         OLED_showInputStatus(i,dinStatus[i]);
003714 933a      	ST   -Y,R19
003715 932a      	ST   -Y,R18
003716 940e bd04 	CALL SUBOPT_0x2A
003718 91ac      	LD   R26,X
003719 940e 7b7c 	CALL _OLED_showInputStatus
                 ; 0000 019C                     }
                +
00371b 5f2f     +SUBI R18 , LOW ( - 1 )
00371c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00371d cff2      	RJMP _0x6F
                 _0x70:
                 ; 0000 019D 
                 ; 0000 019E                     for(i=0;i<2;i++){
                +
00371e e020     +LDI R18 , LOW ( 0 )
00371f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x72:
                +
003720 3022     +CPI R18 , LOW ( 2 )
003721 e0e0     +LDI R30 , HIGH ( 2 )
003722 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003723 f464      	BRGE _0x73
                 ; 0000 019F                         OLED_showOutputStatus(i,doutStatus[i]);
003724 933a      	ST   -Y,R19
003725 932a      	ST   -Y,R18
003726 e7ae      	LDI  R26,LOW(_doutStatus)
003727 e1b4      	LDI  R27,HIGH(_doutStatus)
003728 0fa2      	ADD  R26,R18
003729 1fb3      	ADC  R27,R19
00372a 91ac      	LD   R26,X
00372b 940e 7ba1 	CALL _OLED_showOutputStatus
                 ; 0000 01A0                     }
                +
00372d 5f2f     +SUBI R18 , LOW ( - 1 )
00372e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00372f cff0      	RJMP _0x72
                 _0x73:
                 ; 0000 01A1 
                 ; 0000 01A2                //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01A3                     OLED_showDateTime(properties_config.timeZone);
                +
003730 91a0 11b5+LDS R26 , _properties_config + ( 160 )
                 	__GETB2MN _properties_config,160
003732 e0b0      	LDI  R27,0
003733 fda7      	SBRC R26,7
003734 efbf      	SER  R27
003735 940e 7a93 	CALL _OLED_showDateTime
                 ; 0000 01A4 
                 ; 0000 01A5               //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01A6                     OLED_showAlarmStatus();
003737 940e 7bfa 	CALL _OLED_showAlarmStatus
                 ; 0000 01A7                 }
                 ; 0000 01A8 
                 ; 0000 01A9               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01AA                 switch(powerSrcStatus){
                 _0x6D:
003739 91e0 147a 	LDS  R30,_powerSrcStatus
00373b 940e bd09 	CALL SUBOPT_0x2B
                 ; 0000 01AB                     case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
00373d f439      	BRNE _0x77
00373e e0e0      	LDI  R30,LOW(0)
00373f 93ea      	ST   -Y,R30
003740 940e bd0c 	CALL SUBOPT_0x2C
003742 940e 7b35 	CALL _OLED_showPowerStatus
003744 c00a      	RJMP _0x76
                 ; 0000 01AC                     case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 _0x77:
003745 30e1      	CPI  R30,LOW(0x1)
003746 e0a0      	LDI  R26,HIGH(0x1)
003747 07fa      	CPC  R31,R26
003748 f431      	BRNE _0x79
003749 e0e1      	LDI  R30,LOW(1)
00374a 93ea      	ST   -Y,R30
00374b 940e bd11 	CALL SUBOPT_0x2D
00374d 940e 7b35 	CALL _OLED_showPowerStatus
                 ; 0000 01AD                     default             :   break;
                 _0x79:
                 ; 0000 01AE                 }
                 _0x76:
                 ; 0000 01AF 
                 ; 0000 01B0             //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01B1                 switch(serverCommStatus){
00374f 91e0 1480 	LDS  R30,_serverCommStatus
003751 940e bd09 	CALL SUBOPT_0x2B
                 ; 0000 01B2                     case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
003753 f411      	BRNE _0x7D
003754 e0a2      	LDI  R26,LOW(2)
003755 c007      	RJMP _0x134
                 ; 0000 01B3                     case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 _0x7D:
003756 30e2      	CPI  R30,LOW(0x2)
003757 e0a0      	LDI  R26,HIGH(0x2)
003758 07fa      	CPC  R31,R26
003759 f411      	BRNE _0x7F
00375a e0a1      	LDI  R26,LOW(1)
00375b c001      	RJMP _0x134
                 ; 0000 01B4                     default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 _0x7F:
00375c e0a0      	LDI  R26,LOW(0)
                 _0x134:
00375d 940e 7bd2 	CALL _OLED_showServerCommStatus
                 ; 0000 01B5                 }
                 ; 0000 01B6 
                 ; 0000 01B7             //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01B8                 switch(lanStatus){
00375f 91e0 1481 	LDS  R30,_lanStatus
003761 940e bd09 	CALL SUBOPT_0x2B
                 ; 0000 01B9                     case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
003763 f421      	BRNE _0x83
003764 e0a1      	LDI  R26,LOW(1)
003765 940e 7bdc 	CALL _OLED_showLanStatus
003767 c007      	RJMP _0x82
                 ; 0000 01BA                     case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 _0x83:
003768 30e1      	CPI  R30,LOW(0x1)
003769 e0a0      	LDI  R26,HIGH(0x1)
00376a 07fa      	CPC  R31,R26
00376b f419      	BRNE _0x85
00376c e0a0      	LDI  R26,LOW(0)
00376d 940e 7bdc 	CALL _OLED_showLanStatus
                 ; 0000 01BB                     default                     :   break;
                 _0x85:
                 ; 0000 01BC                 }
                 _0x82:
                 ; 0000 01BD 
                 ; 0000 01BE             //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 01BF                 if(muteMode){
00376f 91e0 148b 	LDS  R30,_muteMode
003771 30e0      	CPI  R30,0
003772 f011      	BREQ _0x86
                 ; 0000 01C0                     OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
003773 e0a2      	LDI  R26,LOW(2)
003774 c007      	RJMP _0x135
                 ; 0000 01C1                 }
                 ; 0000 01C2                 else if(buzz_config.enable == 0x01){
                 _0x86:
003775 91a0 133d 	LDS  R26,_buzz_config
003777 30a1      	CPI  R26,LOW(0x1)
003778 f411      	BRNE _0x88
                 ; 0000 01C3                     OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
003779 e0a0      	LDI  R26,LOW(0)
00377a c001      	RJMP _0x135
                 ; 0000 01C4                 }
                 ; 0000 01C5                 else{
                 _0x88:
                 ; 0000 01C6                     OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
00377b e0a1      	LDI  R26,LOW(1)
                 _0x135:
00377c 940e 7be6 	CALL _OLED_showBuzzerStatus
                 ; 0000 01C7                 }
                 ; 0000 01C8 
                 ; 0000 01C9            //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 01CA                 switch(memoryStatus){
00377e 91e0 1482 	LDS  R30,_memoryStatus
003780 940e bd09 	CALL SUBOPT_0x2B
                 ; 0000 01CB                     case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
003782 f421      	BRNE _0x8D
003783 e0a0      	LDI  R26,LOW(0)
003784 940e 7bf0 	CALL _OLED_showMemoryStatus
003786 c00f      	RJMP _0x8C
                 ; 0000 01CC                     case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 _0x8D:
003787 30e1      	CPI  R30,LOW(0x1)
003788 e0a0      	LDI  R26,HIGH(0x1)
003789 07fa      	CPC  R31,R26
00378a f421      	BRNE _0x8E
00378b e0a1      	LDI  R26,LOW(1)
00378c 940e 7bf0 	CALL _OLED_showMemoryStatus
00378e c007      	RJMP _0x8C
                 ; 0000 01CD                     case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 _0x8E:
00378f 30e2      	CPI  R30,LOW(0x2)
003790 e0a0      	LDI  R26,HIGH(0x2)
003791 07fa      	CPC  R31,R26
003792 f419      	BRNE _0x90
003793 e0a2      	LDI  R26,LOW(2)
003794 940e 7bf0 	CALL _OLED_showMemoryStatus
                 ; 0000 01CE                     default                 :   break;
                 _0x90:
                 ; 0000 01CF                 }
                 _0x8C:
                 ; 0000 01D0 
                 ; 0000 01D1                 timer_1sec_flag = 0;
003796 98f2      	CBI  0x1E,2
                 ; 0000 01D2             }
                 ; 0000 01D3         } // -- device enable -- //
                 _0x68:
                 ; 0000 01D4         else                                                    // ----- device disable ----- //
003797 c06c      	RJMP _0x93
                 _0x2D:
                 ; 0000 01D5         {
                 ; 0000 01D6             // -- no alarm -- // ;-P
                 ; 0000 01D7             buzzer_on = 0;                      // -- buzzer off -- //
003798 98f3      	CBI  0x1E,3
                 ; 0000 01D8             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
003799 e040     +LDI R20 , LOW ( 0 )
00379a e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x97:
                +
00379b 3042     +CPI R20 , LOW ( 2 )
00379c e0e0     +LDI R30 , HIGH ( 2 )
00379d 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00379e f44c      	BRGE _0x98
                 ; 0000 01D9             {
                 ; 0000 01DA                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00379f 940e bbdd 	CALL SUBOPT_0x1
0037a1 940e bbe7 	CALL SUBOPT_0x2
0037a3 940e 4205 	CALL _IO_dout
                 ; 0000 01DB             }
                +
0037a5 5f4f     +SUBI R20 , LOW ( - 1 )
0037a6 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0037a7 cff3      	RJMP _0x97
                 _0x98:
                 ; 0000 01DC 
                 ; 0000 01DD 
                 ; 0000 01DE             if(TEMP_SEL == TEMP_TYPE_K){
0037a8 940e bd1a 	CALL SUBOPT_0x2E
0037aa f5d9      	BRNE _0x99
                 ; 0000 01DF                 if(hwCalId == 9){
0037ab 91a0 10f4 	LDS  R26,_hwCalId
0037ad 91b0 10f5 	LDS  R27,_hwCalId+1
0037af 9719      	SBIW R26,9
0037b0 f439      	BRNE _0x9A
                 ; 0000 01E0                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                +
0037b1 e2e4     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
0037b2 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
0037b3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
0037b4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
0037b5 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 01E1                 }
                 ; 0000 01E2                 else if(SENSOR_CONNECT){
0037b7 c02b      	RJMP _0x9B
                 _0x9A:
0037b8 940e bd25 	CALL SUBOPT_0x2F
0037ba 9730      	SBIW R30,0
0037bb f0e9      	BREQ _0x9C
                 ; 0000 01E3                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : %f                     \r",hwCalId,(adcData[hwCalId]*ADC_CONV_FAC*100));
                +
0037bc e6eb     +LDI R30 , LOW ( 2 * _0x0 + ( 331 ) )
0037bd e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 331 ) )
0037be e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 331 ) )
0037bf e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 331 ) )
                 	__POINTD1FN _0x0,331
0037c0 940e bd2c 	CALL SUBOPT_0x30
0037c2 2766      	CLR  R22
0037c3 2777      	CLR  R23
0037c4 940e bd2c 	CALL SUBOPT_0x30
0037c6 940e bd33 	CALL SUBOPT_0x31
0037c8 937f      	PUSH R23
0037c9 936f      	PUSH R22
0037ca 93ff      	PUSH R31
0037cb 93ef      	PUSH R30
0037cc 940e bd36 	CALL SUBOPT_0x32
0037ce 91af      	POP  R26
0037cf 91bf      	POP  R27
0037d0 918f      	POP  R24
0037d1 919f      	POP  R25
0037d2 940e d7dd 	CALL __MULF12
0037d4 940e bd43 	CALL SUBOPT_0x33
0037d6 940e bcbc 	CALL SUBOPT_0x20
                 ; 0000 01E4                 }
                 ; 0000 01E5                 else{
0037d8 c00a      	RJMP _0x9D
                 _0x9C:
                 ; 0000 01E6                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : disconnected           \r",hwCalId);
                +
0037d9 ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 402 ) )
0037da e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 402 ) )
0037db e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 402 ) )
0037dc e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 402 ) )
                 	__POINTD1FN _0x0,402
0037dd 940e bd2c 	CALL SUBOPT_0x30
0037df 940e bd4a 	CALL SUBOPT_0x34
0037e1 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 01E7                 }
                 _0x9D:
                 _0x9B:
                 ; 0000 01E8                 delay_ms(200);
0037e3 940e bd4f 	CALL SUBOPT_0x35
                 ; 0000 01E9             }
                 ; 0000 01EA             else if(TEMP_SEL == TEMP_TMEC){
0037e5 c01e      	RJMP _0x9E
                 _0x99:
0037e6 940e bd1a 	CALL SUBOPT_0x2E
0037e8 30e1      	CPI  R30,LOW(0x1)
0037e9 f429      	BRNE _0x9F
                 ; 0000 01EB                     printDebug("<main> [Device disable] [TMEC]                                       \r");
                +
0037ea efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 473 ) )
0037eb e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 473 ) )
0037ec e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 473 ) )
0037ed e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 473 ) )
                 	__POINTD1FN _0x0,473
0037ee c011      	RJMP _0x136
                 ; 0000 01EC             }
                 ; 0000 01ED             else if(TEMP_SEL == TEMP_PT100){
                 _0x9F:
0037ef 940e bd1a 	CALL SUBOPT_0x2E
0037f1 30e2      	CPI  R30,LOW(0x2)
0037f2 f429      	BRNE _0xA1
                 ; 0000 01EE                     printDebug("<main> [Device disable] [PT100]                                      \r");
                +
0037f3 e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 544 ) )
0037f4 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 544 ) )
0037f5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 544 ) )
0037f6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 544 ) )
                 	__POINTD1FN _0x0,544
0037f7 c008      	RJMP _0x136
                 ; 0000 01EF             }
                 ; 0000 01F0             else if(TEMP_SEL == TEMP_RESERVED){
                 _0xA1:
0037f8 940e bd1a 	CALL SUBOPT_0x2E
0037fa 30e3      	CPI  R30,LOW(0x3)
0037fb f441      	BRNE _0xA3
                 ; 0000 01F1                     printDebug("<main> [Device disable] [RESERVED]                                   \r");
                +
0037fc e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 615 ) )
0037fd e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 615 ) )
0037fe e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 615 ) )
0037ff e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 615 ) )
                 	__POINTD1FN _0x0,615
                 _0x136:
003800 940e da29 	CALL __PUTPARD1
003802 940e bd53 	CALL SUBOPT_0x36
                 ; 0000 01F2             }
                 ; 0000 01F3         }
                 _0xA3:
                 _0x9E:
                 _0x93:
                 ; 0000 01F4 
                 ; 0000 01F5         #asm("wdr")
003804 95a8      	wdr
                 ; 0000 01F6     }
003805 ccef      	RJMP _0x10
                 ; 0000 01F7 
                 ; 0000 01F8 }
                 _0xA4:
003806 cfff      	RJMP _0xA4
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 0200 {
                 _updateStatus:
                 ; 0000 0201     int                 res=0, i=0, err=0;
                 ; 0000 0202     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0203 
                 ; 0000 0204     // --------------- Update Sensor's Event --------------- //
                 ; 0000 0205     for(i=0;i<MAX_SENS_CHANNEL;i++)
003807 940e bd58 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
003809 e020     +LDI R18 , LOW ( 0 )
00380a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA7:
                +
00380b 3025     +CPI R18 , LOW ( 5 )
00380c e0e0     +LDI R30 , HIGH ( 5 )
00380d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00380e f4dc      	BRGE _0xA8
                 ; 0000 0206     {
                 ; 0000 0207         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
00380f 940e bbf3 	CALL SUBOPT_0x4
003811 f0a9      	BREQ _0xA9
                 ; 0000 0208         {
                 ; 0000 0209             // ----------- Update Probe Status ------------------------- //
                 ; 0000 020A             err =   updateSensorStatus(i);
003812 01d9      	MOVW R26,R18
003813 940e 727c 	CALL _updateSensorStatus
003815 01af      	MOVW R20,R30
                 ; 0000 020B             if(err >= 0){
003816 2355      	TST  R21
003817 f07a      	BRMI _0xAA
                 ; 0000 020C                 res |=  err;
                +
003818 2b04     +OR R16 , R20
003819 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 020D                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
00381a 940e bd5d 	CALL SUBOPT_0x38
00381c f019      	BREQ _0xAC
00381d 2e04      	MOV  R0,R20
00381e 2a05      	OR   R0,R21
00381f f009      	BREQ _0xAD
                 _0xAC:
003820 c006      	RJMP _0xAB
                 _0xAD:
                 ; 0000 020E                 {
                 ; 0000 020F                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 0210                     err =   updateDataStatus(i);
003821 01d9      	MOVW R26,R18
003822 940e 72af 	CALL _updateDataStatus
003824 01af      	MOVW R20,R30
                 ; 0000 0211                     res |=  err;
                +
003825 2b04     +OR R16 , R20
003826 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0212                 }
                 ; 0000 0213             }
                 _0xAB:
                 ; 0000 0214         }
                 _0xAA:
                 ; 0000 0215     }
                 _0xA9:
                +
003827 5f2f     +SUBI R18 , LOW ( - 1 )
003828 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003829 cfe1      	RJMP _0xA7
                 _0xA8:
                 ; 0000 0216 
                 ; 0000 0217     // --- Update Battery Status --- //
                 ; 0000 0218     err =   updateBatteryStatus();
00382a 940e 719b 	CALL _updateBatteryStatus
00382c 01af      	MOVW R20,R30
                 ; 0000 0219     res |=  err;
                +
00382d 2b04     +OR R16 , R20
00382e 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 021A     // --- Update Digital Input Status --- //
                 ; 0000 021B     err =   updateDinStatus();
00382f 940e 7398 	CALL _updateDinStatus
003831 01af      	MOVW R20,R30
                 ; 0000 021C     res |=  err;
                +
003832 2b04     +OR R16 , R20
003833 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 021D     // --- Update Digital Output Status --- //
                 ; 0000 021E     err =   updateDoutStatus();
003834 940e 7416 	CALL _updateDoutStatus
003836 01af      	MOVW R20,R30
                 ; 0000 021F     res |=  err;
                +
003837 2b04     +OR R16 , R20
003838 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0220     // --- Update Analog Input Status --- //
                 ; 0000 0221     // --- Update Communication Status --- //
                 ; 0000 0222     err =   updateCommStatus();
003839 940e 71f8 	CALL _updateCommStatus
00383b 01af      	MOVW R20,R30
                 ; 0000 0223     if(err){
00383c 2e04      	MOV  R0,R20
00383d 2a05      	OR   R0,R21
00383e f189      	BREQ _0xAE
                 ; 0000 0224 
                 ; 0000 0225         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
00383f 940e bd67 	CALL SUBOPT_0x39
003841 940e bd70 	CALL SUBOPT_0x3A
003843 f029      	BREQ _0xB0
003844 940e bd67 	CALL SUBOPT_0x39
003846 940e da89 	CALL __CPD02
003848 f471      	BRNE _0xAF
                 _0xB0:
                 ; 0000 0226             TIMER_setTimer(&ETH_rst_timer,15);
003849 eee0      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
00384a e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
00384b 940e bd78 	CALL SUBOPT_0x3B
                 ; 0000 0227             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
00384d ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 686 ) )
00384e e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 686 ) )
00384f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 686 ) )
003850 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 686 ) )
                 	__POINTD1FN _0x0,686
003851 940e bd80 	CALL SUBOPT_0x3C
003853 940e bd80 	CALL SUBOPT_0x3C
003855 940e bcbc 	CALL SUBOPT_0x20
                 ; 0000 0228         }
                 ; 0000 0229 
                 ; 0000 022A         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0xAF:
003857 940e bd67 	CALL SUBOPT_0x39
003859 940e 405d 	CALL _TIMER_checkTimerExceed
00385b 30e1      	CPI  R30,LOW(0x1)
00385c e0a0      	LDI  R26,HIGH(0x1)
00385d 07fa      	CPC  R31,R26
00385e f489      	BRNE _0xB2
                 ; 0000 022B             ETH_NORM;
00385f 91e0 0102 	LDS  R30,258
003861 77ef      	ANDI R30,0x7F
003862 93e0 0102 	STS  258,R30
                 ; 0000 022C             ETH_reset();
003864 940e 5f9e 	CALL _ETH_reset
                 ; 0000 022D             ETH_rst_timer = 0xFFFFFFFF;
003866 940e bcd8 	CALL SUBOPT_0x24
003868 93e0 14e0 	STS  _ETH_rst_timer_S0000001000,R30
00386a 93f0 14e1 	STS  _ETH_rst_timer_S0000001000+1,R31
00386c 9360 14e2 	STS  _ETH_rst_timer_S0000001000+2,R22
00386e 9370 14e3 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 022E         }
                 ; 0000 022F     }
                 _0xB2:
                 ; 0000 0230     res |=  err;
                 _0xAE:
                +
003870 2b04     +OR R16 , R20
003871 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0231     // --- Update Memory Card Status --- //
                 ; 0000 0232     err =   updateMemoryStatus();
003872 940e 725c 	CALL _updateMemoryStatus
003874 01af      	MOVW R20,R30
                 ; 0000 0233     res |=  err;
                +
003875 2b04     +OR R16 , R20
003876 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0234 
                 ; 0000 0235     return res;
003877 01f8      	MOVW R30,R16
003878 940e daa0 	CALL __LOADLOCR6
00387a 9626      	ADIW R28,6
00387b 9508      	RET
                 ; 0000 0236 }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 0239 {
                 _eventCapture:
                 ; 0000 023A     int                 res=0, i=0, err=0;
                 ; 0000 023B     unsigned long int   timestamp_rd;
                 ; 0000 023C     unsigned char       statusCode;
                 ; 0000 023D 
                 ; 0000 023E     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 023F     err =   checkSendMIPAlarm(&statusCode);
00387c 9725      	SBIW R28,5
00387d 940e bd58 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
00387f 01de      	MOVW R26,R28
003880 9616      	ADIW R26,6
003881 940e 77f6 	CALL _checkSendMIPAlarm
003883 940e bd95 	CALL SUBOPT_0x3D
                 ; 0000 0240     res |=  err;
                 ; 0000 0241     if(err){
003885 f0c1      	BREQ _0xB3
                 ; 0000 0242         timestamp_rd    = DS1672_read();
003886 940e bd9b 	CALL SUBOPT_0x3E
                 ; 0000 0243         if(statusCode)
003888 f029      	BREQ _0xB4
                 ; 0000 0244         {
                 ; 0000 0245             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
003889 e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 738 ) )
00388a e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 738 ) )
00388b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 738 ) )
00388c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD1FN _0x0,738
00388d c004      	RJMP _0x137
                 ; 0000 0246             //printOLED("AL12%1d",i+1);
                 ; 0000 0247         }
                 ; 0000 0248         else
                 _0xB4:
                 ; 0000 0249         {
                 ; 0000 024A             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
00388e e3e4     +LDI R30 , LOW ( 2 * _0x0 + ( 788 ) )
00388f e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 788 ) )
003890 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 788 ) )
003891 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 788 ) )
                 	__POINTD1FN _0x0,788
                 _0x137:
003892 940e da29 	CALL __PUTPARD1
003894 940e bd53 	CALL SUBOPT_0x36
                 ; 0000 024B             //printOLED("AL02%1d",i+1);
                 ; 0000 024C         }
                 ; 0000 024D         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
003896 940e bda4 	CALL SUBOPT_0x3F
003898 e1e0      	LDI  R30,LOW(16)
003899 940e bdab 	CALL SUBOPT_0x40
                 ; 0000 024E         if(err < 0){
00389b f412      	BRPL _0xB6
                 ; 0000 024F             printDebug("<eventCapture> addEventQueue() failed\r\n");
00389c 940e bdb2 	CALL SUBOPT_0x41
                 ; 0000 0250         }
                 ; 0000 0251     }
                 _0xB6:
                 ; 0000 0252 
                 ; 0000 0253     /*
                 ; 0000 0254     // -- Analog Input Event -- //
                 ; 0000 0255     // -- reserved -- //
                 ; 0000 0256     */
                 ; 0000 0257     // --------------- Check for Power Down Event --------------- //
                 ; 0000 0258     err =   checkSendPowerAlarm(&statusCode);
                 _0xB3:
00389e 01de      	MOVW R26,R28
00389f 9616      	ADIW R26,6
0038a0 940e 780b 	CALL _checkSendPowerAlarm
0038a2 940e bd95 	CALL SUBOPT_0x3D
                 ; 0000 0259     res |=  err;
                 ; 0000 025A     if(err){
0038a4 f0c1      	BREQ _0xB7
                 ; 0000 025B         timestamp_rd    = DS1672_read();
0038a5 940e bd9b 	CALL SUBOPT_0x3E
                 ; 0000 025C         if(statusCode)
0038a7 f029      	BREQ _0xB8
                 ; 0000 025D         {
                 ; 0000 025E             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
0038a8 e9e9     +LDI R30 , LOW ( 2 * _0x0 + ( 889 ) )
0038a9 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 889 ) )
0038aa e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 889 ) )
0038ab e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 889 ) )
                 	__POINTD1FN _0x0,889
0038ac c004      	RJMP _0x138
                 ; 0000 025F             //printOLED("AL12%1d",i+1);
                 ; 0000 0260         }
                 ; 0000 0261         else
                 _0xB8:
                 ; 0000 0262         {
                 ; 0000 0263             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
0038ad ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 942 ) )
0038ae e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 942 ) )
0038af e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 942 ) )
0038b0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 942 ) )
                 	__POINTD1FN _0x0,942
                 _0x138:
0038b1 940e da29 	CALL __PUTPARD1
0038b3 940e bd53 	CALL SUBOPT_0x36
                 ; 0000 0264             //printOLED("AL02%1d",i+1);
                 ; 0000 0265         }
                 ; 0000 0266         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
0038b5 940e bda4 	CALL SUBOPT_0x3F
0038b7 e5e0      	LDI  R30,LOW(80)
0038b8 940e bdab 	CALL SUBOPT_0x40
                 ; 0000 0267         if(err < 0){
0038ba f412      	BRPL _0xBA
                 ; 0000 0268             printDebug("<eventCapture> addEventQueue() failed\r\n");
0038bb 940e bdb2 	CALL SUBOPT_0x41
                 ; 0000 0269         }
                 ; 0000 026A     }
                 _0xBA:
                 ; 0000 026B 
                 ; 0000 026C     // --------------- Check for Battery Event --------------- //
                 ; 0000 026D     err =   checkSendBatteryAlarm(&statusCode);
                 _0xB7:
0038bd 01de      	MOVW R26,R28
0038be 9616      	ADIW R26,6
0038bf 940e 7853 	CALL _checkSendBatteryAlarm
0038c1 940e bd95 	CALL SUBOPT_0x3D
                 ; 0000 026E     res |=  err;
                 ; 0000 026F     if(err){
0038c3 f0c1      	BREQ _0xBB
                 ; 0000 0270         timestamp_rd    = DS1672_read();
0038c4 940e bd9b 	CALL SUBOPT_0x3E
                 ; 0000 0271         if(statusCode)
0038c6 f029      	BREQ _0xBC
                 ; 0000 0272         {
                 ; 0000 0273             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
0038c7 e0e1     +LDI R30 , LOW ( 2 * _0x0 + ( 993 ) )
0038c8 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 993 ) )
0038c9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 993 ) )
0038ca e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 993 ) )
                 	__POINTD1FN _0x0,993
0038cb c004      	RJMP _0x139
                 ; 0000 0274             //printOLED("AL12%1d",i+1);
                 ; 0000 0275         }
                 ; 0000 0276         else
                 _0xBC:
                 ; 0000 0277         {
                 ; 0000 0278             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
0038cc e3e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1042 ) )
0038cd e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1042 ) )
0038ce e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1042 ) )
0038cf e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1042 ) )
                 	__POINTD1FN _0x0,1042
                 _0x139:
0038d0 940e da29 	CALL __PUTPARD1
0038d2 940e bd53 	CALL SUBOPT_0x36
                 ; 0000 0279             //printOLED("AL02%1d",i+1);
                 ; 0000 027A         }
                 ; 0000 027B         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
0038d4 940e bda4 	CALL SUBOPT_0x3F
0038d6 e5e1      	LDI  R30,LOW(81)
0038d7 940e bdab 	CALL SUBOPT_0x40
                 ; 0000 027C         if(err < 0){
0038d9 f412      	BRPL _0xBE
                 ; 0000 027D             printDebug("<eventCapture> addEventQueue() failed\r\n");
0038da 940e bdb2 	CALL SUBOPT_0x41
                 ; 0000 027E         }
                 ; 0000 027F     }
                 _0xBE:
                 ; 0000 0280 
                 ; 0000 0281     // --------------- Check for Memory Event --------------- //
                 ; 0000 0282     err =   checkSendMemoryAlarm(&statusCode);
                 _0xBB:
0038dc 01de      	MOVW R26,R28
0038dd 9616      	ADIW R26,6
0038de 940e 78ac 	CALL _checkSendMemoryAlarm
0038e0 940e bd95 	CALL SUBOPT_0x3D
                 ; 0000 0283     res |=  err;
                 ; 0000 0284     if(err){
0038e2 f131      	BREQ _0xBF
                 ; 0000 0285         timestamp_rd    = DS1672_read();
0038e3 940e 43d0 	CALL _DS1672_read
                +
0038e5 83ef     +STD Y + 7 , R30
0038e6 87f8     +STD Y + 7 + 1 , R31
0038e7 8769     +STD Y + 7 + 2 , R22
0038e8 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 0286         if(statusCode == ES_LOWMEMORY)
0038e9 81ae      	LDD  R26,Y+6
0038ea 30a1      	CPI  R26,LOW(0x1)
0038eb f429      	BRNE _0xC0
                 ; 0000 0287         {
                 ; 0000 0288             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
0038ec e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1090 ) )
0038ed e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1090 ) )
0038ee e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1090 ) )
0038ef e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1090 ) )
                 	__POINTD1FN _0x0,1090
0038f0 c00c      	RJMP _0x13A
                 ; 0000 0289             //printOLED("AL12%1d",i+1);
                 ; 0000 028A         }
                 ; 0000 028B         else if(statusCode == ES_MEMORYERROR)
                 _0xC0:
0038f1 81ae      	LDD  R26,Y+6
0038f2 30a2      	CPI  R26,LOW(0x2)
0038f3 f429      	BRNE _0xC2
                 ; 0000 028C         {
                 ; 0000 028D             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
0038f4 e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1138 ) )
0038f5 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1138 ) )
0038f6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1138 ) )
0038f7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1138 ) )
                 	__POINTD1FN _0x0,1138
0038f8 c004      	RJMP _0x13A
                 ; 0000 028E             //printOLED("AL12%1d",i+1);
                 ; 0000 028F         }
                 ; 0000 0290         else
                 _0xC2:
                 ; 0000 0291         {
                 ; 0000 0292             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
0038f9 ece4     +LDI R30 , LOW ( 2 * _0x0 + ( 1188 ) )
0038fa e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1188 ) )
0038fb e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1188 ) )
0038fc e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1188 ) )
                 	__POINTD1FN _0x0,1188
                 _0x13A:
0038fd 940e da29 	CALL __PUTPARD1
0038ff 940e bd53 	CALL SUBOPT_0x36
                 ; 0000 0293             //printOLED("AL02%1d",i+1);
                 ; 0000 0294         }
                 ; 0000 0295         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
003901 940e bda4 	CALL SUBOPT_0x3F
003903 e7e0      	LDI  R30,LOW(112)
003904 940e bdab 	CALL SUBOPT_0x40
                 ; 0000 0296         if(err < 0){
003906 f412      	BRPL _0xC4
                 ; 0000 0297             printDebug("<eventCapture> addEventQueue() failed\r\n");
003907 940e bdb2 	CALL SUBOPT_0x41
                 ; 0000 0298         }
                 ; 0000 0299     }
                 _0xC4:
                 ; 0000 029A 
                 ; 0000 029B     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 029C     for(i=0;i<USE_DIN;i++)
                 _0xBF:
                +
003909 e020     +LDI R18 , LOW ( 0 )
00390a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC6:
                +
00390b 3022     +CPI R18 , LOW ( 2 )
00390c e0e0     +LDI R30 , HIGH ( 2 )
00390d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00390e f544      	BRGE _0xC7
                 ; 0000 029D     {
                 ; 0000 029E         if(din_config[i].channelEnable)
00390f 940e bc70 	CALL SUBOPT_0x15
003911 81e0      	LD   R30,Z
003912 30e0      	CPI  R30,0
003913 f101      	BREQ _0xC8
                 ; 0000 029F         {
                 ; 0000 02A0             err =   checkSendDinAlarm(i,&statusCode);
003914 940e bdb7 	CALL SUBOPT_0x42
003916 940e 78fa 	CALL _checkSendDinAlarm
003918 940e bd95 	CALL SUBOPT_0x3D
                 ; 0000 02A1             res |=  err;
                 ; 0000 02A2             if(err){
00391a f0c9      	BREQ _0xC9
                 ; 0000 02A3                 timestamp_rd    = DS1672_read();
00391b 940e bd9b 	CALL SUBOPT_0x3E
                 ; 0000 02A4                 if(statusCode)
00391d f029      	BREQ _0xCA
                 ; 0000 02A5                 {
                 ; 0000 02A6                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
00391e efe3     +LDI R30 , LOW ( 2 * _0x0 + ( 1235 ) )
00391f e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1235 ) )
003920 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1235 ) )
003921 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1235 ) )
                 	__POINTD1FN _0x0,1235
003922 c004      	RJMP _0x13B
                 ; 0000 02A7                     //printOLED("AL12%1d",i+1);
                 ; 0000 02A8                 }
                 ; 0000 02A9                 else
                 _0xCA:
                 ; 0000 02AA                 {
                 ; 0000 02AB                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
003923 e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1286 ) )
003924 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1286 ) )
003925 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1286 ) )
003926 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1286 ) )
                 	__POINTD1FN _0x0,1286
                 _0x13B:
003927 940e da29 	CALL __PUTPARD1
003929 940e bdbc 	CALL SUBOPT_0x43
                 ; 0000 02AC                     //printOLED("AL02%1d",i+1);
                 ; 0000 02AD                 }
                 ; 0000 02AE                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
00392b 940e bda4 	CALL SUBOPT_0x3F
00392d 2fe2      	MOV  R30,R18
00392e 6ce0      	ORI  R30,LOW(0xC0)
00392f 940e bdab 	CALL SUBOPT_0x40
                 ; 0000 02AF                 if(err < 0){
003931 f412      	BRPL _0xCC
                 ; 0000 02B0                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003932 940e bdb2 	CALL SUBOPT_0x41
                 ; 0000 02B1                 }
                 ; 0000 02B2             }
                 _0xCC:
                 ; 0000 02B3         }// -- din channel Enable -- //
                 _0xC9:
                 ; 0000 02B4     }// -- for loop -- //
                 _0xC8:
                +
003934 5f2f     +SUBI R18 , LOW ( - 1 )
003935 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003936 cfd4      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02B5 
                 ; 0000 02B6     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02B7     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003937 e020     +LDI R18 , LOW ( 0 )
003938 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCE:
                +
003939 3025     +CPI R18 , LOW ( 5 )
00393a e0e0     +LDI R30 , HIGH ( 5 )
00393b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00393c f014      	BRLT PC+3
00393d 940c 39a3 	JMP _0xCF
                 ; 0000 02B8     {
                 ; 0000 02B9         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
00393f 940e bbf3 	CALL SUBOPT_0x4
003941 f411      	BRNE PC+3
003942 940c 39a0 	JMP _0xD0
                 ; 0000 02BA         {
                 ; 0000 02BB             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 02BC             err =   checkSendSensorAlarm(i,&statusCode);
003944 940e bdb7 	CALL SUBOPT_0x42
003946 940e 7958 	CALL _checkSendSensorAlarm
003948 940e bd95 	CALL SUBOPT_0x3D
                 ; 0000 02BD             res |=  err;
                 ; 0000 02BE             if(err){
00394a f131      	BREQ _0xD1
                 ; 0000 02BF                 timestamp_rd    = DS1672_read();
00394b 940e bd9b 	CALL SUBOPT_0x3E
                 ; 0000 02C0                 if(statusCode)
00394d f059      	BREQ _0xD2
                 ; 0000 02C1                 {
                 ; 0000 02C2                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
00394e e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1338 ) )
00394f e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1338 ) )
003950 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1338 ) )
003951 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1338 ) )
                 	__POINTD1FN _0x0,1338
003952 940e bdc3 	CALL SUBOPT_0x44
                 ; 0000 02C3                     printOLED("AL12%1d",i+1);
                +
003954 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003955 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003956 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003957 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003958 c00a      	RJMP _0x13C
                 ; 0000 02C4                 }
                 ; 0000 02C5                 else
                 _0xD2:
                 ; 0000 02C6                 {
                 ; 0000 02C7                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
003959 e9eb     +LDI R30 , LOW ( 2 * _0x0 + ( 1403 ) )
00395a e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1403 ) )
00395b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1403 ) )
00395c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1403 ) )
                 	__POINTD1FN _0x0,1403
00395d 940e bdc3 	CALL SUBOPT_0x44
                 ; 0000 02C8                     printOLED("AL02%1d",i+1);
                +
00395f ede1     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003960 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003961 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003962 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13C:
003963 940e da29 	CALL __PUTPARD1
003965 940e bdc6 	CALL SUBOPT_0x45
                 ; 0000 02C9                 }
                 ; 0000 02CA 
                 ; 0000 02CB                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
003967 940e bda4 	CALL SUBOPT_0x3F
003969 2fe2      	MOV  R30,R18
00396a 6fe0      	ORI  R30,LOW(0xF0)
00396b 940e bdab 	CALL SUBOPT_0x40
                 ; 0000 02CC                 if(err < 0){
00396d f412      	BRPL _0xD4
                 ; 0000 02CD                     printDebug("<eventCapture> addEventQueue() failed\r\n");
00396e 940e bdb2 	CALL SUBOPT_0x41
                 ; 0000 02CE                 }
                 ; 0000 02CF             }// -- check sensor alarm -- //
                 _0xD4:
                 ; 0000 02D0             else
003970 c02f      	RJMP _0xD5
                 _0xD1:
                 ; 0000 02D1             {
                 ; 0000 02D2                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
003971 940e bd5d 	CALL SUBOPT_0x38
003973 f161      	BREQ _0xD6
                 ; 0000 02D3                 {
                 ; 0000 02D4                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 02D5                     err =   checkSendDataAlarm(i,&statusCode);
003974 940e bdb7 	CALL SUBOPT_0x42
003976 940e 79b8 	CALL _checkSendDataAlarm
003978 940e bd95 	CALL SUBOPT_0x3D
                 ; 0000 02D6                     res |=  err;
                 ; 0000 02D7                     if(err){
00397a f129      	BREQ _0xD7
                 ; 0000 02D8                         timestamp_rd    = DS1672_read();
00397b 940e bd9b 	CALL SUBOPT_0x3E
                 ; 0000 02D9                         if(statusCode)
00397d f059      	BREQ _0xD8
                 ; 0000 02DA                         {
                 ; 0000 02DB                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
00397e ede9     +LDI R30 , LOW ( 2 * _0x0 + ( 1465 ) )
00397f e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1465 ) )
003980 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1465 ) )
003981 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1465 ) )
                 	__POINTD1FN _0x0,1465
003982 940e bdc3 	CALL SUBOPT_0x44
                 ; 0000 02DC                             printOLED("AL12%1d",i+1);
                +
003984 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003985 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003986 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003987 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003988 c00a      	RJMP _0x13D
                 ; 0000 02DD                         }
                 ; 0000 02DE                         else
                 _0xD8:
                 ; 0000 02DF                         {
                 ; 0000 02E0                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
003989 e1e9     +LDI R30 , LOW ( 2 * _0x0 + ( 1529 ) )
00398a e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1529 ) )
00398b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1529 ) )
00398c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1529 ) )
                 	__POINTD1FN _0x0,1529
00398d 940e bdc3 	CALL SUBOPT_0x44
                 ; 0000 02E1                             printOLED("AL02%1d",i+1);
                +
00398f ede1     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003990 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003991 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003992 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13D:
003993 940e da29 	CALL __PUTPARD1
003995 940e bdc6 	CALL SUBOPT_0x45
                 ; 0000 02E2                         }
                 ; 0000 02E3                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003997 940e bda4 	CALL SUBOPT_0x3F
003999 2fe2      	MOV  R30,R18
00399a 6ee0      	ORI  R30,LOW(0xE0)
00399b 940e bdab 	CALL SUBOPT_0x40
                 ; 0000 02E4                         if(err < 0){
00399d f412      	BRPL _0xDA
                 ; 0000 02E5                             printDebug("<eventCapture> addEventQueue() failed\r\n");
00399e 940e bdb2 	CALL SUBOPT_0x41
                 ; 0000 02E6                         }
                 ; 0000 02E7                     }
                 _0xDA:
                 ; 0000 02E8                 }// -- sensor.alarmEnable -- //
                 _0xD7:
                 ; 0000 02E9             }// -- check data alarm -- //
                 _0xD6:
                 _0xD5:
                 ; 0000 02EA         }// -- sensor Enable -- //
                 ; 0000 02EB     }// -- for loop -- //
                 _0xD0:
                +
0039a0 5f2f     +SUBI R18 , LOW ( - 1 )
0039a1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0039a2 cf96      	RJMP _0xCE
                 _0xCF:
                 ; 0000 02EC 
                 ; 0000 02ED 
                 ; 0000 02EE     return res;
0039a3 01f8      	MOVW R30,R16
0039a4 940e daa0 	CALL __LOADLOCR6
0039a6 962b      	ADIW R28,11
0039a7 9508      	RET
                 ; 0000 02EF }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 02F7 {
                 _statusReport:
                 ; 0000 02F8     int                     res = 0;
                 ; 0000 02F9     unsigned long int       timestamp_rd;
                 ; 0000 02FA     unsigned char           *param;
                 ; 0000 02FB     int                     paramLen = 0;
                 ; 0000 02FC 
                 ; 0000 02FD     unsigned short          deviceState;
                 ; 0000 02FE 
                 ; 0000 02FF     switch (status_config.accm)
0039a8 9726      	SBIW R28,6
0039a9 940e bdd1 	CALL SUBOPT_0x46
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
0039ab e040     +LDI R20 , LOW ( 0 )
0039ac e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0039ad 91e0 1362 	LDS  R30,_status_config
0039af 940e bdd6 	CALL SUBOPT_0x47
                 ; 0000 0300     {
                 ; 0000 0301         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
0039b1 f449      	BRNE _0xDE
                +
0039b2 e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1590 ) )
0039b3 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1590 ) )
0039b4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1590 ) )
0039b5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1590 ) )
                 	__POINTD1FN _0x0,1590
0039b6 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0302                                     return -1;
0039b8 efef      	LDI  R30,LOW(65535)
0039b9 efff      	LDI  R31,HIGH(65535)
0039ba c08a      	RJMP _0x20E009D
                 ; 0000 0303         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xDE:
0039bb 32e0      	CPI  R30,LOW(0x20)
0039bc e0a0      	LDI  R26,HIGH(0x20)
0039bd 07fa      	CPC  R31,R26
0039be f449      	BRNE _0xDF
                +
0039bf e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 1644 ) )
0039c0 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1644 ) )
0039c1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1644 ) )
0039c2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1644 ) )
                 	__POINTD1FN _0x0,1644
0039c3 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0304                                     return -1;
0039c5 efef      	LDI  R30,LOW(65535)
0039c6 efff      	LDI  R31,HIGH(65535)
0039c7 c07d      	RJMP _0x20E009D
                 ; 0000 0305         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xDF:
0039c8 33e0      	CPI  R30,LOW(0x30)
0039c9 e0a0      	LDI  R26,HIGH(0x30)
0039ca 07fa      	CPC  R31,R26
0039cb f011      	BREQ PC+3
0039cc 940c 3a1e 	JMP _0xE3
0039ce 940e bddb 	CALL SUBOPT_0x48
0039d0 940e a0d2 	CALL _malloc
0039d2 019f      	MOVW R18,R30
                 ; 0000 0306                                     if(param == NULL){
0039d3 2e02      	MOV  R0,R18
0039d4 2a03      	OR   R0,R19
0039d5 f449      	BRNE _0xE1
                 ; 0000 0307                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
0039d6 ece4     +LDI R30 , LOW ( 2 * _0x0 + ( 1700 ) )
0039d7 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1700 ) )
0039d8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1700 ) )
0039d9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1700 ) )
                 	__POINTD1FN _0x0,1700
0039da 940e bdde 	CALL SUBOPT_0x49
                 ; 0000 0308                                         return -1;
0039dc efef      	LDI  R30,LOW(65535)
0039dd efff      	LDI  R31,HIGH(65535)
0039de c066      	RJMP _0x20E009D
                 ; 0000 0309                                     }
                 ; 0000 030A 
                 ; 0000 030B                                     res = getDeviceState(&deviceState);
                 _0xE1:
0039df 01de      	MOVW R26,R28
0039e0 9616      	ADIW R26,6
0039e1 940e 742b 	CALL _getDeviceState
0039e3 018f      	MOVW R16,R30
                 ; 0000 030C                                     if(res<0){
0039e4 2311      	TST  R17
0039e5 f452      	BRPL _0xE2
                 ; 0000 030D                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
0039e6 eeee     +LDI R30 , LOW ( 2 * _0x0 + ( 1742 ) )
0039e7 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1742 ) )
0039e8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1742 ) )
0039e9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1742 ) )
                 	__POINTD1FN _0x0,1742
0039ea 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 030E                                         free ( param );
0039ec 01d9      	MOVW R26,R18
0039ed 940e bde6 	CALL SUBOPT_0x4A
                 ; 0000 030F                                         return -1;
0039ef c055      	RJMP _0x20E009D
                 ; 0000 0310                                     }
                 ; 0000 0311 
                 ; 0000 0312                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xE2:
0039f0 940e bdeb 	CALL SUBOPT_0x4B
0039f2 81ef      	LDD  R30,Y+7
0039f3 70f0      	ANDI R31,HIGH(0x0)
0039f4 93ec      	ST   X,R30
                 ; 0000 0313                                     param[paramLen++] = (deviceState & 0x00FF);
0039f5 940e bdeb 	CALL SUBOPT_0x4B
0039f7 81ee      	LDD  R30,Y+6
0039f8 93ec      	ST   X,R30
                 ; 0000 0314                                     param[paramLen++] = powerSrcStatus;
0039f9 940e bdf2 	CALL SUBOPT_0x4C
0039fb 91a0 147a 	LDS  R26,_powerSrcStatus
0039fd 83a0      	STD  Z+0,R26
                 ; 0000 0315 
                 ; 0000 0316 
                 ; 0000 0317                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
0039fe 01fa      	MOVW R30,R20
0039ff 0fe2      	ADD  R30,R18
003a00 1ff3      	ADC  R31,R19
003a01 93fa      	ST   -Y,R31
003a02 93ea      	ST   -Y,R30
003a03 e8e3      	LDI  R30,LOW(_batteryVolt)
003a04 e1f4      	LDI  R31,HIGH(_batteryVolt)
003a05 940e bdf8 	CALL SUBOPT_0x4D
                 ; 0000 0318                                     paramLen         += sizeof(batteryVolt);
                +
003a07 5f4c     +SUBI R20 , LOW ( - 4 )
003a08 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 0319 
                 ; 0000 031A                                     param[paramLen++] = dinStatus[0];
003a09 940e bdf2 	CALL SUBOPT_0x4C
003a0b 91a0 147c 	LDS  R26,_dinStatus
003a0d 83a0      	STD  Z+0,R26
                 ; 0000 031B                                     param[paramLen++] = dinStatus[1];
003a0e 940e bdf2 	CALL SUBOPT_0x4C
                +
003a10 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
003a12 83a0      	STD  Z+0,R26
                 ; 0000 031C                                     param[paramLen++] = doutStatus[0];
003a13 940e bdf2 	CALL SUBOPT_0x4C
003a15 91a0 147e 	LDS  R26,_doutStatus
003a17 83a0      	STD  Z+0,R26
                 ; 0000 031D                                     param[paramLen++] = doutStatus[1];
003a18 940e bdf2 	CALL SUBOPT_0x4C
                +
003a1a 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
003a1c 83a0      	STD  Z+0,R26
                 ; 0000 031E 
                 ; 0000 031F                                     break;
003a1d c00d      	RJMP _0xDD
                 ; 0000 0320         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xE3:
                +
003a1e e1e7     +LDI R30 , LOW ( 2 * _0x0 + ( 1783 ) )
003a1f e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1783 ) )
003a20 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1783 ) )
003a21 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1783 ) )
                 	__POINTD1FN _0x0,1783
003a22 940e da29 	CALL __PUTPARD1
003a24 91e0 1362 	LDS  R30,_status_config
003a26 940e bcfe 	CALL SUBOPT_0x29
                 ; 0000 0321                                     return -1;
003a28 efef      	LDI  R30,LOW(65535)
003a29 efff      	LDI  R31,HIGH(65535)
003a2a c01a      	RJMP _0x20E009D
                 ; 0000 0322     }
                 _0xDD:
                 ; 0000 0323 
                 ; 0000 0324     timestamp_rd = DS1672_read();
003a2b 940e bdfe 	CALL SUBOPT_0x4E
                 ; 0000 0325 
                 ; 0000 0326     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
003a2d 940e be05 	CALL SUBOPT_0x4F
003a2f 940e da29 	CALL __PUTPARD1
003a31 91e0 1362 	LDS  R30,_status_config
003a33 93ea      	ST   -Y,R30
003a34 933a      	ST   -Y,R19
003a35 932a      	ST   -Y,R18
003a36 01da      	MOVW R26,R20
003a37 940e 52a7 	CALL _ETH_sendStatusReportCmd
003a39 018f      	MOVW R16,R30
                 ; 0000 0327     if(res < 0)
003a3a 2311      	TST  R17
003a3b f432      	BRPL _0xE4
                 ; 0000 0328     {
                 ; 0000 0329         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
003a3c e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 1836 ) )
003a3d e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1836 ) )
003a3e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1836 ) )
003a3f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1836 ) )
                 	__POINTD1FN _0x0,1836
003a40 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 032A     }
                 ; 0000 032B 
                 ; 0000 032C     free ( param );
                 _0xE4:
003a42 01d9      	MOVW R26,R18
003a43 940e a0ed 	CALL _free
                 ; 0000 032D }
                 _0x20E009D:
003a45 940e daa0 	CALL __LOADLOCR6
003a47 962c      	ADIW R28,12
003a48 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 0330 {
                 _sensorDataReport:
                 ; 0000 0331     int                     count = 0;
                 ; 0000 0332     int                     res;
                 ; 0000 0333     unsigned long int       timestamp;
                 ; 0000 0334     unsigned int            channel;
                 ; 0000 0335     float                   value;
                 ; 0000 0336 
                 ; 0000 0337     // -- for debug -- //
                 ; 0000 0338     //struct rtc_structure    dt;
                 ; 0000 0339     // --------------- //
                 ; 0000 033A     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 033B 
                 ; 0000 033C     while (count < MAX_DATA_QUEUE)
003a49 9728      	SBIW R28,8
003a4a 940e bdd1 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xE5:
                +
003a4c 300a     +CPI R16 , LOW ( 10 )
003a4d e0e0     +LDI R30 , HIGH ( 10 )
003a4e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
003a4f f014      	BRLT PC+3
003a50 940c 3a98 	JMP _0xE7
                 ; 0000 033D     {
                 ; 0000 033E         res = fetchDataQueue(&timestamp, &channel, &value);
003a52 01fe      	MOVW R30,R28
003a53 963a      	ADIW R30,10
003a54 93fa      	ST   -Y,R31
003a55 93ea      	ST   -Y,R30
003a56 b7ed      	IN   R30,SPL
003a57 b7fe      	IN   R31,SPH
003a58 9731      	SBIW R30,1
003a59 93fa      	ST   -Y,R31
003a5a 93ea      	ST   -Y,R30
003a5b 935f      	PUSH R21
003a5c 934f      	PUSH R20
003a5d 01de      	MOVW R26,R28
003a5e 961a      	ADIW R26,10
003a5f 940e 716a 	CALL _fetchDataQueue
003a61 914f      	POP  R20
003a62 915f      	POP  R21
003a63 019f      	MOVW R18,R30
                 ; 0000 033F         if(res < 0)
003a64 2333      	TST  R19
003a65 f192      	BRMI _0xE7
                 ; 0000 0340         {
                 ; 0000 0341             break;
                 ; 0000 0342         }
                 ; 0000 0343         else
                 ; 0000 0344         {
                 ; 0000 0345             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
003a66 e7ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1886 ) )
003a67 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1886 ) )
003a68 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1886 ) )
003a69 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1886 ) )
                 	__POINTD1FN _0x0,1886
003a6a 940e be0a 	CALL SUBOPT_0x50
003a6c 01fa      	MOVW R30,R20
003a6d 940e bd4a 	CALL SUBOPT_0x34
003a6f 940e be13 	CALL SUBOPT_0x51
                 ; 0000 0346             /*
                 ; 0000 0347             binary_to_date(timestamp, &dt);
                 ; 0000 0348             printRTC(dt);
                 ; 0000 0349             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 034A             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 034B             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 034C             */
                 ; 0000 034D 
                 ; 0000 034E             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003a71 940e be1e 	CALL SUBOPT_0x52
003a73 940e da89 	CALL __CPD02
003a75 f039      	BREQ _0xEB
003a76 940e be23 	CALL SUBOPT_0x53
003a78 f021      	BREQ _0xEB
                +
003a79 3045     +CPI R20 , LOW ( 5 )
003a7a e0e0     +LDI R30 , HIGH ( 5 )
003a7b 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
003a7c f038      	BRLO _0xEA
                 _0xEB:
                 ; 0000 034F             {
                 ; 0000 0350                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003a7d eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 1923 ) )
003a7e e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1923 ) )
003a7f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1923 ) )
003a80 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1923 ) )
                 	__POINTD1FN _0x0,1923
003a81 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0351                 continue;
003a83 cfc8      	RJMP _0xE5
                 ; 0000 0352             }
                 ; 0000 0353 
                 ; 0000 0354 
                 ; 0000 0355             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xEA:
003a84 e0e0      	LDI  R30,LOW(0)
003a85 940e be25 	CALL SUBOPT_0x54
003a87 935a      	ST   -Y,R21
003a88 934a      	ST   -Y,R20
003a89 940e be2d 	CALL SUBOPT_0x55
003a8b 019f      	MOVW R18,R30
                 ; 0000 0356             if(res < 0)
003a8c 2333      	TST  R19
003a8d f43a      	BRPL _0xED
                 ; 0000 0357             {
                 ; 0000 0358                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
003a8e eee1     +LDI R30 , LOW ( 2 * _0x0 + ( 1985 ) )
003a8f e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1985 ) )
003a90 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1985 ) )
003a91 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1985 ) )
                 	__POINTD1FN _0x0,1985
003a92 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0359                 // --- Keep in Log --- //
                 ; 0000 035A                 continue;
003a94 cfb7      	RJMP _0xE5
                 ; 0000 035B             }
                 ; 0000 035C             count++;
                 _0xED:
                +
003a95 5f0f     +SUBI R16 , LOW ( - 1 )
003a96 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 035D         }
                 ; 0000 035E 
                 ; 0000 035F     }
003a97 cfb4      	RJMP _0xE5
                 _0xE7:
                 ; 0000 0360 
                 ; 0000 0361     return count;
003a98 01f8      	MOVW R30,R16
003a99 940e daa0 	CALL __LOADLOCR6
003a9b 962e      	ADIW R28,14
003a9c 9508      	RET
                 ; 0000 0362 }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 0365 {
                 _eventReport:
                 ; 0000 0366     int                     count = 0;
                 ; 0000 0367     int                     res;
                 ; 0000 0368     unsigned long int       timestamp;
                 ; 0000 0369     unsigned char           eventID;
                 ; 0000 036A     unsigned char           eventStatus;
                 ; 0000 036B 
                 ; 0000 036C     // -- for debug -- //
                 ; 0000 036D     //struct rtc_structure    dt;
                 ; 0000 036E     // --------------- //
                 ; 0000 036F     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 0370 
                 ; 0000 0371     while (count < MAX_EVENT_QUEUE)
003a9d 9724      	SBIW R28,4
003a9e 940e bdd1 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xEE:
                +
003aa0 3104     +CPI R16 , LOW ( 20 )
003aa1 e0e0     +LDI R30 , HIGH ( 20 )
003aa2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003aa3 f014      	BRLT PC+3
003aa4 940c 3ae7 	JMP _0xF0
                 ; 0000 0372     {
                 ; 0000 0373         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003aa6 940e be33 	CALL SUBOPT_0x56
003aa8 b7ed      	IN   R30,SPL
003aa9 b7fe      	IN   R31,SPH
003aaa 93fa      	ST   -Y,R31
003aab 93ea      	ST   -Y,R30
003aac 935f      	PUSH R21
003aad b7ad      	IN   R26,SPL
003aae b7be      	IN   R27,SPH
003aaf 934f      	PUSH R20
003ab0 940e 74d0 	CALL _fetchEventQueue
003ab2 914f      	POP  R20
003ab3 915f      	POP  R21
003ab4 019f      	MOVW R18,R30
                 ; 0000 0374         if(res < 0)
003ab5 2333      	TST  R19
003ab6 f182      	BRMI _0xF0
                 ; 0000 0375         {
                 ; 0000 0376             break;
                 ; 0000 0377         }
                 ; 0000 0378         else
                 ; 0000 0379         {
                 ; 0000 037A 
                 ; 0000 037B             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003ab7 e1e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2037 ) )
003ab8 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2037 ) )
003ab9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2037 ) )
003aba e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2037 ) )
                 	__POINTD1FN _0x0,2037
003abb 940e be38 	CALL SUBOPT_0x57
003abd 940e da29 	CALL __PUTPARD1
003abf 940e be3f 	CALL SUBOPT_0x58
                 ; 0000 037C             /*
                 ; 0000 037D             binary_to_date(timestamp, &dt);
                 ; 0000 037E             printRTC(dt);
                 ; 0000 037F             */
                 ; 0000 0380 
                 ; 0000 0381             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003ac1 940e be50 	CALL SUBOPT_0x59
003ac3 940e da89 	CALL __CPD02
003ac5 f029      	BREQ _0xF4
003ac6 940e be50 	CALL SUBOPT_0x59
003ac8 940e bd70 	CALL SUBOPT_0x3A
003aca f439      	BRNE _0xF3
                 _0xF4:
                 ; 0000 0382             {
                 ; 0000 0383                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003acb e3eb     +LDI R30 , LOW ( 2 * _0x0 + ( 2075 ) )
003acc e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2075 ) )
003acd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2075 ) )
003ace e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2075 ) )
                 	__POINTD1FN _0x0,2075
003acf 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0384                 continue;
003ad1 cfce      	RJMP _0xEE
                 ; 0000 0385             }
                 ; 0000 0386 
                 ; 0000 0387 
                 ; 0000 0388             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xF3:
003ad2 e0e0      	LDI  R30,LOW(0)
003ad3 93ea      	ST   -Y,R30
003ad4 940e bda4 	CALL SUBOPT_0x3F
003ad6 935a      	ST   -Y,R21
003ad7 2fa4      	MOV  R26,R20
003ad8 940e 52f6 	CALL _ETH_sendEventReportCmd
003ada 019f      	MOVW R18,R30
                 ; 0000 0389             if(res < 0)
003adb 2333      	TST  R19
003adc f43a      	BRPL _0xF6
                 ; 0000 038A             {
                 ; 0000 038B                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003add e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 2132 ) )
003ade e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2132 ) )
003adf e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2132 ) )
003ae0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2132 ) )
                 	__POINTD1FN _0x0,2132
003ae1 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 038C                 // --- Keep in Log --- //
                 ; 0000 038D                 continue;
003ae3 cfbc      	RJMP _0xEE
                 ; 0000 038E             }
                 ; 0000 038F             count++;
                 _0xF6:
                +
003ae4 5f0f     +SUBI R16 , LOW ( - 1 )
003ae5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0390         }
                 ; 0000 0391     }
003ae6 cfb9      	RJMP _0xEE
                 _0xF0:
                 ; 0000 0392 
                 ; 0000 0393     return count;
003ae7 01f8      	MOVW R30,R16
003ae8 940e daa0 	CALL __LOADLOCR6
003aea 962a      	ADIW R28,10
003aeb 9508      	RET
                 ; 0000 0394 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 039C {
                 _sensorDataSave:
                 ; 0000 039D     FIL                     file;
                 ; 0000 039E     char                    isFileOpen = 0;
                 ; 0000 039F     int                     count = 0;
                 ; 0000 03A0     int                     res;
                 ; 0000 03A1     unsigned long int       timestamp;
                 ; 0000 03A2     unsigned int            channel;
                 ; 0000 03A3     float                   value;
                 ; 0000 03A4 
                 ; 0000 03A5 
                 ; 0000 03A6     // -- for debug -- //
                 ; 0000 03A7     //struct rtc_structure    dt;
                 ; 0000 03A8     // --------------- //
                 ; 0000 03A9 
                 ; 0000 03AA     while (count < MAX_DATA_QUEUE)
003aec 97aa      	SBIW R28,42
003aed 50d2      	SUBI R29,2
003aee 940e da99 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
003af0 e010      	LDI  R17,0
                +
003af1 e020     +LDI R18 , LOW ( 0 )
003af2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF7:
                +
003af3 302a     +CPI R18 , LOW ( 10 )
003af4 e0e0     +LDI R30 , HIGH ( 10 )
003af5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
003af6 f014      	BRLT PC+3
003af7 940c 3b50 	JMP _0xF9
                 ; 0000 03AB     {
                 ; 0000 03AC         res = fetchDataQueue(&timestamp, &channel, &value);
003af9 940e be55 	CALL SUBOPT_0x5A
003afb 940e be55 	CALL SUBOPT_0x5A
003afd 01de      	MOVW R26,R28
003afe 961a      	ADIW R26,10
003aff 940e 716a 	CALL _fetchDataQueue
003b01 01af      	MOVW R20,R30
                 ; 0000 03AD         if(res < 0)
003b02 2355      	TST  R21
003b03 f40a      	BRPL _0xFA
                 ; 0000 03AE         {
                 ; 0000 03AF             break;
003b04 c04b      	RJMP _0xF9
                 ; 0000 03B0         }
                 ; 0000 03B1         else
                 _0xFA:
                 ; 0000 03B2         {
                 ; 0000 03B3             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003b05 eae4     +LDI R30 , LOW ( 2 * _0x0 + ( 2180 ) )
003b06 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2180 ) )
003b07 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2180 ) )
003b08 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2180 ) )
                 	__POINTD1FN _0x0,2180
003b09 940e be5a 	CALL SUBOPT_0x5B
003b0b 89ea      	LDD  R30,Y+18
003b0c 89fb      	LDD  R31,Y+18+1
003b0d 940e bd4a 	CALL SUBOPT_0x34
003b0f 940e be13 	CALL SUBOPT_0x51
                 ; 0000 03B4             /*
                 ; 0000 03B5             binary_to_date(timestamp, &dt);
                 ; 0000 03B6             printRTC(dt);
                 ; 0000 03B7             */
                 ; 0000 03B8 
                 ; 0000 03B9             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003b11 940e bc2e 	CALL SUBOPT_0xB
003b13 940e da89 	CALL __CPD02
003b15 f039      	BREQ _0xFD
003b16 940e be60 	CALL SUBOPT_0x5C
003b18 f021      	BREQ _0xFD
003b19 85aa      	LDD  R26,Y+10
003b1a 85bb      	LDD  R27,Y+10+1
003b1b 9715      	SBIW R26,5
003b1c f038      	BRLO _0xFC
                 _0xFD:
                 ; 0000 03BA             {
                 ; 0000 03BB                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003b1d ede2     +LDI R30 , LOW ( 2 * _0x0 + ( 2226 ) )
003b1e e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2226 ) )
003b1f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2226 ) )
003b20 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2226 ) )
                 	__POINTD1FN _0x0,2226
003b21 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 03BC                 continue;
003b23 cfcf      	RJMP _0xF7
                 ; 0000 03BD             }
                 ; 0000 03BE 
                 ; 0000 03BF             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 03C0             if(!isFileOpen)
                 _0xFC:
003b24 3010      	CPI  R17,0
003b25 f489      	BRNE _0xFF
                 ; 0000 03C1             {
                 ; 0000 03C2                 res = LOG_openFile(&file,LOGFILE_DATA);
003b26 940e be62 	CALL SUBOPT_0x5D
003b28 940e be67 	CALL SUBOPT_0x5E
003b2a 01af      	MOVW R20,R30
                 ; 0000 03C3                 if(res < 0)
003b2b 2355      	TST  R21
003b2c f44a      	BRPL _0x100
                 ; 0000 03C4                 {
                 ; 0000 03C5                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
003b2d e0ee     +LDI R30 , LOW ( 2 * _0x0 + ( 2286 ) )
003b2e e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2286 ) )
003b2f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2286 ) )
003b30 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2286 ) )
                 	__POINTD1FN _0x0,2286
003b31 940e be72 	CALL SUBOPT_0x5F
003b33 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 03C6                     continue;
003b35 cfbd      	RJMP _0xF7
                 ; 0000 03C7                 }
                 ; 0000 03C8                 isFileOpen = 1;
                 _0x100:
003b36 e011      	LDI  R17,LOW(1)
                 ; 0000 03C9             }
                 ; 0000 03CA 
                 ; 0000 03CB             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xFF:
003b37 940e be62 	CALL SUBOPT_0x5D
003b39 940e be77 	CALL SUBOPT_0x60
003b3b 940e da29 	CALL __PUTPARD1
003b3d 89e8      	LDD  R30,Y+16
003b3e 89f9      	LDD  R31,Y+16+1
003b3f 93fa      	ST   -Y,R31
003b40 93ea      	ST   -Y,R30
003b41 940e be7c 	CALL SUBOPT_0x61
003b43 01af      	MOVW R20,R30
                 ; 0000 03CC             if(res < 0)
003b44 2355      	TST  R21
003b45 f43a      	BRPL _0x101
                 ; 0000 03CD             {
                 ; 0000 03CE                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
003b46 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 2348 ) )
003b47 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2348 ) )
003b48 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2348 ) )
003b49 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2348 ) )
                 	__POINTD1FN _0x0,2348
003b4a 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 03CF                 continue;
003b4c cfa6      	RJMP _0xF7
                 ; 0000 03D0             }
                 ; 0000 03D1             count++;
                 _0x101:
                +
003b4d 5f2f     +SUBI R18 , LOW ( - 1 )
003b4e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 03D2         }
                 ; 0000 03D3     }
003b4f cfa3      	RJMP _0xF7
                 _0xF9:
                 ; 0000 03D4 
                 ; 0000 03D5     if(isFileOpen)
003b50 3010      	CPI  R17,0
003b51 f071      	BREQ _0x102
                 ; 0000 03D6     {
                 ; 0000 03D7         res = LOG_closeFile(&file);
003b52 01de      	MOVW R26,R28
003b53 9650      	ADIW R26,16
003b54 940e be82 	CALL SUBOPT_0x62
                 ; 0000 03D8         if(res < 0)
003b56 f44a      	BRPL _0x103
                 ; 0000 03D9         {
                 ; 0000 03DA             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
003b57 e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2391 ) )
003b58 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2391 ) )
003b59 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2391 ) )
003b5a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2391 ) )
                 	__POINTD1FN _0x0,2391
003b5b 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 03DB             return -1;
003b5d efef      	LDI  R30,LOW(65535)
003b5e efff      	LDI  R31,HIGH(65535)
003b5f c00b      	RJMP _0x20E009C
                 ; 0000 03DC         }
                 ; 0000 03DD     }
                 _0x103:
                 ; 0000 03DE 
                 ; 0000 03DF     if(count > 0){
                 _0x102:
003b60 2400      	CLR  R0
003b61 1602      	CP   R0,R18
003b62 0603      	CPC  R0,R19
003b63 f434      	BRGE _0x104
                 ; 0000 03E0         //isDataLogEmpty  = 0;
                 ; 0000 03E1         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
003b64 eae1     +LDI R30 , LOW ( 2 * _0x0 + ( 2433 ) )
003b65 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2433 ) )
003b66 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2433 ) )
003b67 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2433 ) )
                 	__POINTD1FN _0x0,2433
003b68 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 03E2     }
                 ; 0000 03E3 
                 ; 0000 03E4     return count;
                 _0x104:
003b6a 01f9      	MOVW R30,R18
                 _0x20E009C:
003b6b 940e daa0 	CALL __LOADLOCR6
003b6d 96e0      	ADIW R28,48
003b6e 5fde      	SUBI R29,-2
003b6f 9508      	RET
                 ; 0000 03E5 }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 03E8 {
                 _eventSave:
                 ; 0000 03E9     FIL                     file;
                 ; 0000 03EA     char                    isFileOpen = 0;
                 ; 0000 03EB     int                     count = 0;
                 ; 0000 03EC     int                     res;
                 ; 0000 03ED     unsigned long int       timestamp;
                 ; 0000 03EE     unsigned char           eventID;
                 ; 0000 03EF     unsigned char           eventStatus;
                 ; 0000 03F0 
                 ; 0000 03F1     // -- for debug -- //
                 ; 0000 03F2     //struct rtc_structure    dt;
                 ; 0000 03F3     // --------------- //
                 ; 0000 03F4 
                 ; 0000 03F5     while (count < MAX_EVENT_QUEUE)
003b70 97a5      	SBIW R28,37
003b71 50d2      	SUBI R29,2
003b72 940e da99 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
003b74 e010      	LDI  R17,0
                +
003b75 e020     +LDI R18 , LOW ( 0 )
003b76 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x105:
                +
003b77 3124     +CPI R18 , LOW ( 20 )
003b78 e0e0     +LDI R30 , HIGH ( 20 )
003b79 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
003b7a f014      	BRLT PC+3
003b7b 940c 3bd8 	JMP _0x107
                 ; 0000 03F6     {
                 ; 0000 03F7         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003b7d 940e be8d 	CALL SUBOPT_0x63
003b7f b7ed      	IN   R30,SPL
003b80 b7fe      	IN   R31,SPH
003b81 93fa      	ST   -Y,R31
003b82 93ea      	ST   -Y,R30
003b83 930f      	PUSH R16
003b84 01de      	MOVW R26,R28
003b85 961a      	ADIW R26,10
003b86 940e 74d0 	CALL _fetchEventQueue
003b88 910f      	POP  R16
003b89 01af      	MOVW R20,R30
                 ; 0000 03F8         if(res < 0)
003b8a 2355      	TST  R21
003b8b f40a      	BRPL _0x108
                 ; 0000 03F9         {
                 ; 0000 03FA             break;
003b8c c04b      	RJMP _0x107
                 ; 0000 03FB         }
                 ; 0000 03FC         else
                 _0x108:
                 ; 0000 03FD         {
                 ; 0000 03FE             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003b8d ecea     +LDI R30 , LOW ( 2 * _0x0 + ( 2474 ) )
003b8e e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2474 ) )
003b8f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2474 ) )
003b90 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2474 ) )
                 	__POINTD1FN _0x0,2474
003b91 940e da29 	CALL __PUTPARD1
003b93 940e be92 	CALL SUBOPT_0x64
003b95 2fe0      	MOV  R30,R16
003b96 940e be99 	CALL SUBOPT_0x65
003b98 89ea      	LDD  R30,Y+18
003b99 940e be99 	CALL SUBOPT_0x65
003b9b 940e be9f 	CALL SUBOPT_0x66
                 ; 0000 03FF             /*
                 ; 0000 0400             binary_to_date(timestamp, &dt);
                 ; 0000 0401             printRTC(dt);
                 ; 0000 0402             */
                 ; 0000 0403 
                 ; 0000 0404             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003b9d 940e bea4 	CALL SUBOPT_0x67
003b9f 940e da89 	CALL __CPD02
003ba1 f029      	BREQ _0x10B
003ba2 940e bea4 	CALL SUBOPT_0x67
003ba4 940e bd70 	CALL SUBOPT_0x3A
003ba6 f439      	BRNE _0x10A
                 _0x10B:
                 ; 0000 0405             {
                 ; 0000 0406                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003ba7 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 2522 ) )
003ba8 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2522 ) )
003ba9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2522 ) )
003baa e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2522 ) )
                 	__POINTD1FN _0x0,2522
003bab 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0407                 continue;
003bad cfc9      	RJMP _0x105
                 ; 0000 0408             }
                 ; 0000 0409 
                 ; 0000 040A             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 040B             if(!isFileOpen)
                 _0x10A:
003bae 3010      	CPI  R17,0
003baf f489      	BRNE _0x10D
                 ; 0000 040C             {
                 ; 0000 040D                 res = LOG_openFile(&file,LOGFILE_EVENT);
003bb0 940e bea9 	CALL SUBOPT_0x68
003bb2 940e beae 	CALL SUBOPT_0x69
003bb4 01af      	MOVW R20,R30
                 ; 0000 040E                 if(res < 0)
003bb5 2355      	TST  R21
003bb6 f44a      	BRPL _0x10E
                 ; 0000 040F                 {
                 ; 0000 0410                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
003bb7 e3e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2577 ) )
003bb8 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2577 ) )
003bb9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2577 ) )
003bba e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2577 ) )
                 	__POINTD1FN _0x0,2577
003bbb 940e beb9 	CALL SUBOPT_0x6A
003bbd 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 0411                     continue;
003bbf cfb7      	RJMP _0x105
                 ; 0000 0412                 }
                 ; 0000 0413                 isFileOpen = 1;
                 _0x10E:
003bc0 e011      	LDI  R17,LOW(1)
                 ; 0000 0414             }
                 ; 0000 0415 
                 ; 0000 0416             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0x10D:
003bc1 940e bea9 	CALL SUBOPT_0x68
003bc3 940e bebe 	CALL SUBOPT_0x6B
003bc5 940e da29 	CALL __PUTPARD1
003bc7 930a      	ST   -Y,R16
003bc8 85ad      	LDD  R26,Y+13
003bc9 940e 8046 	CALL _LOG_insertEvent
003bcb 01af      	MOVW R20,R30
                 ; 0000 0417             if(res < 0)
003bcc 2355      	TST  R21
003bcd f43a      	BRPL _0x10F
                 ; 0000 0418             {
                 ; 0000 0419                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003bce e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2634 ) )
003bcf e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2634 ) )
003bd0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2634 ) )
003bd1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2634 ) )
                 	__POINTD1FN _0x0,2634
003bd2 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 041A                 continue;
003bd4 cfa2      	RJMP _0x105
                 ; 0000 041B             }
                 ; 0000 041C             count++;
                 _0x10F:
                +
003bd5 5f2f     +SUBI R18 , LOW ( - 1 )
003bd6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 041D         }
                 ; 0000 041E     }
003bd7 cf9f      	RJMP _0x105
                 _0x107:
                 ; 0000 041F 
                 ; 0000 0420     if(isFileOpen)
003bd8 3010      	CPI  R17,0
003bd9 f071      	BREQ _0x110
                 ; 0000 0421     {
                 ; 0000 0422         res = LOG_closeFile(&file);
003bda 01de      	MOVW R26,R28
003bdb 961b      	ADIW R26,11
003bdc 940e be82 	CALL SUBOPT_0x62
                 ; 0000 0423         if(res < 0)
003bde f44a      	BRPL _0x111
                 ; 0000 0424         {
                 ; 0000 0425             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003bdf e9e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2673 ) )
003be0 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2673 ) )
003be1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2673 ) )
003be2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2673 ) )
                 	__POINTD1FN _0x0,2673
003be3 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0426             return -1;
003be5 efef      	LDI  R30,LOW(65535)
003be6 efff      	LDI  R31,HIGH(65535)
003be7 c00b      	RJMP _0x20E009B
                 ; 0000 0427         }
                 ; 0000 0428     }
                 _0x111:
                 ; 0000 0429 
                 ; 0000 042A     if(count > 0){
                 _0x110:
003be8 2400      	CLR  R0
003be9 1602      	CP   R0,R18
003bea 0603      	CPC  R0,R19
003beb f434      	BRGE _0x112
                 ; 0000 042B         //isEventLogEmpty    = 0;
                 ; 0000 042C         printDebug("<eventSave> Event Log is not empty\r\n");
                +
003bec ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 2710 ) )
003bed e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2710 ) )
003bee e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2710 ) )
003bef e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2710 ) )
                 	__POINTD1FN _0x0,2710
003bf0 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 042D     }
                 ; 0000 042E 
                 ; 0000 042F     return count;
                 _0x112:
003bf2 01f9      	MOVW R30,R18
                 _0x20E009B:
003bf3 940e daa0 	CALL __LOADLOCR6
003bf5 96ab      	ADIW R28,43
003bf6 5fde      	SUBI R29,-2
003bf7 9508      	RET
                 ; 0000 0430 }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0433 {
                 _logReport:
                 ; 0000 0434     FIL                     file;
                 ; 0000 0435     int                     res;
                 ; 0000 0436     unsigned long int       index;
                 ; 0000 0437     unsigned long int       timestamp;
                 ; 0000 0438     unsigned int            channel;
                 ; 0000 0439     float                   value;
                 ; 0000 043A     unsigned char           id;
                 ; 0000 043B     unsigned char           status;
                 ; 0000 043C 
                 ; 0000 043D     // -- send data log if any exist -- //
                 ; 0000 043E     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
003bf8 97ac      	SBIW R28,44
003bf9 50d2      	SUBI R29,2
003bfa 940e da99 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
003bfc 91e0 14dd 	LDS  R30,_isDataLogEmpty
003bfe 30e0      	CPI  R30,0
003bff f421      	BRNE _0x114
003c00 91a0 1426 	LDS  R26,_logDataWait
003c02 30a0      	CPI  R26,LOW(0x0)
003c03 f009      	BREQ _0x115
                 _0x114:
003c04 c091      	RJMP _0x113
                 _0x115:
                 ; 0000 043F     {
                 ; 0000 0440         printDebug("<logReport> Check Data Log Exist\r\n");
                +
003c05 edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 2747 ) )
003c06 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2747 ) )
003c07 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2747 ) )
003c08 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2747 ) )
                 	__POINTD1FN _0x0,2747
003c09 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0441         res = LOG_openFile(&file,LOGFILE_DATA);
003c0b 940e bec3 	CALL SUBOPT_0x6C
003c0d 940e be67 	CALL SUBOPT_0x5E
003c0f 018f      	MOVW R16,R30
                 ; 0000 0442         if(res < 0)
003c10 2311      	TST  R17
003c11 f44a      	BRPL _0x116
                 ; 0000 0443         {
                 ; 0000 0444             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
003c12 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003c13 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003c14 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003c15 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003c16 940e be72 	CALL SUBOPT_0x5F
003c18 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 0445         }
                 ; 0000 0446         else
003c1a c07b      	RJMP _0x117
                 _0x116:
                 ; 0000 0447         {
                 ; 0000 0448             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
003c1b 940e bec3 	CALL SUBOPT_0x6C
003c1d 940e be55 	CALL SUBOPT_0x5A
003c1f b7ed      	IN   R30,SPL
003c20 b7fe      	IN   R31,SPH
003c21 9731      	SBIW R30,1
003c22 93fa      	ST   -Y,R31
003c23 93ea      	ST   -Y,R30
003c24 933f      	PUSH R19
003c25 932f      	PUSH R18
003c26 940e be55 	CALL SUBOPT_0x5A
003c28 01de      	MOVW R26,R28
003c29 9656      	ADIW R26,22
003c2a 940e 7fab 	CALL _LOG_readData
003c2c 912f      	POP  R18
003c2d 913f      	POP  R19
003c2e 018f      	MOVW R16,R30
                 ; 0000 0449             if(res < 0)
003c2f 2311      	TST  R17
003c30 f44a      	BRPL _0x118
                 ; 0000 044A             {
                 ; 0000 044B                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
003c31 e2e4     +LDI R30 , LOW ( 2 * _0x0 + ( 2820 ) )
003c32 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2820 ) )
003c33 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2820 ) )
003c34 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2820 ) )
                 	__POINTD1FN _0x0,2820
003c35 940e be72 	CALL SUBOPT_0x5F
003c37 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 044C             }
                 ; 0000 044D             else if(res == 0)
003c39 c053      	RJMP _0x119
                 _0x118:
003c3a 2e00      	MOV  R0,R16
003c3b 2a01      	OR   R0,R17
003c3c f439      	BRNE _0x11A
                 ; 0000 044E             {
                 ; 0000 044F                 //isDataLogEmpty      = 1;
                 ; 0000 0450                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
003c3d e4ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2858 ) )
003c3e e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2858 ) )
003c3f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2858 ) )
003c40 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2858 ) )
                 	__POINTD1FN _0x0,2858
003c41 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0451             }
                 ; 0000 0452             else
003c43 c049      	RJMP _0x11B
                 _0x11A:
                 ; 0000 0453             {
                 ; 0000 0454                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003c44 940e bec8 	CALL SUBOPT_0x6D
003c46 f039      	BREQ _0x11D
003c47 940e be23 	CALL SUBOPT_0x53
003c49 f021      	BREQ _0x11D
                +
003c4a 3025     +CPI R18 , LOW ( 5 )
003c4b e0e0     +LDI R30 , HIGH ( 5 )
003c4c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003c4d f048      	BRLO _0x11C
                 _0x11D:
                 ; 0000 0455                 {
                 ; 0000 0456                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
003c4e e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003c4f e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003c50 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003c51 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003c52 940e be72 	CALL SUBOPT_0x5F
003c54 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 0457                 }
                 ; 0000 0458                 else
003c56 c036      	RJMP _0x11F
                 _0x11C:
                 ; 0000 0459                 {
                 ; 0000 045A                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003c57 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 2944 ) )
003c58 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2944 ) )
003c59 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2944 ) )
003c5a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2944 ) )
                 	__POINTD1FN _0x0,2944
003c5b 940e be0a 	CALL SUBOPT_0x50
003c5d 01f9      	MOVW R30,R18
003c5e 940e bd4a 	CALL SUBOPT_0x34
003c60 940e be13 	CALL SUBOPT_0x51
                 ; 0000 045B                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003c62 e0e1      	LDI  R30,LOW(1)
003c63 940e be25 	CALL SUBOPT_0x54
003c65 933a      	ST   -Y,R19
003c66 932a      	ST   -Y,R18
003c67 940e be2d 	CALL SUBOPT_0x55
003c69 018f      	MOVW R16,R30
                 ; 0000 045C                     if(res < 0)
003c6a 2311      	TST  R17
003c6b f44a      	BRPL _0x120
                 ; 0000 045D                     {
                 ; 0000 045E                         logDataWait.frameID    = 0;
003c6c 940e becc 	CALL SUBOPT_0x6E
                 ; 0000 045F                         logDataWait.logID      = 0;
                 ; 0000 0460                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003c6e ede7     +LDI R30 , LOW ( 2 * _0x0 + ( 2999 ) )
003c6f e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2999 ) )
003c70 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2999 ) )
003c71 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2999 ) )
                 	__POINTD1FN _0x0,2999
003c72 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0461                     }
                 ; 0000 0462                     else
003c74 c018      	RJMP _0x121
                 _0x120:
                 ; 0000 0463                     {
                 ; 0000 0464                         logDataWait.logID       = index;
003c75 940e be77 	CALL SUBOPT_0x60
                +
003c77 93e0 1427+STS _logDataWait + ( 1 ) , R30
003c79 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003c7b 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003c7d 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 0465                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003c7f e0e4     +LDI R30 , LOW ( 2 * _0x0 + ( 3044 ) )
003c80 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3044 ) )
003c81 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3044 ) )
003c82 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3044 ) )
                 	__POINTD1FN _0x0,3044
003c83 940e da29 	CALL __PUTPARD1
003c85 91e0 1426 	LDS  R30,_logDataWait
003c87 940e be99 	CALL SUBOPT_0x65
003c89 940e bedc 	CALL SUBOPT_0x6F
003c8b 940e bcbc 	CALL SUBOPT_0x20
                 ; 0000 0466                     }
                 _0x121:
                 ; 0000 0467                 }
                 _0x11F:
                 ; 0000 0468             }
                 _0x11B:
                 _0x119:
                 ; 0000 0469 
                 ; 0000 046A             res = LOG_closeFile(&file);
003c8d 940e bee5 	CALL SUBOPT_0x70
                 ; 0000 046B             if(res < 0)
003c8f f432      	BRPL _0x122
                 ; 0000 046C             {
                 ; 0000 046D                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003c90 e3ed     +LDI R30 , LOW ( 2 * _0x0 + ( 3101 ) )
003c91 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3101 ) )
003c92 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3101 ) )
003c93 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3101 ) )
                 	__POINTD1FN _0x0,3101
003c94 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 046E             }
                 ; 0000 046F         }
                 _0x122:
                 _0x117:
                 ; 0000 0470     }
                 ; 0000 0471 
                 ; 0000 0472     // -- send event log if any exist -- //
                 ; 0000 0473     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0x113:
003c96 91e0 14de 	LDS  R30,_isEventLogEmpty
003c98 30e0      	CPI  R30,0
003c99 f421      	BRNE _0x124
003c9a 91a0 142b 	LDS  R26,_logEventWait
003c9c 30a0      	CPI  R26,LOW(0x0)
003c9d f009      	BREQ _0x125
                 _0x124:
003c9e c08b      	RJMP _0x123
                 _0x125:
                 ; 0000 0474     {
                 ; 0000 0475         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003c9f e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 3138 ) )
003ca0 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3138 ) )
003ca1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3138 ) )
003ca2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3138 ) )
                 	__POINTD1FN _0x0,3138
003ca3 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0476         res = LOG_openFile(&file,LOGFILE_EVENT);
003ca5 940e bec3 	CALL SUBOPT_0x6C
003ca7 940e beae 	CALL SUBOPT_0x69
003ca9 018f      	MOVW R16,R30
                 ; 0000 0477         if(res < 0)
003caa 2311      	TST  R17
003cab f42a      	BRPL _0x126
                 ; 0000 0478         {
                 ; 0000 0479             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003cac efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003cad e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003cae e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003caf e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003cb0 c071      	RJMP _0x13E
                 ; 0000 047A         }
                 ; 0000 047B         else
                 _0x126:
                 ; 0000 047C         {
                 ; 0000 047D             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003cb1 940e bec3 	CALL SUBOPT_0x6C
003cb3 940e be55 	CALL SUBOPT_0x5A
003cb5 b7ed      	IN   R30,SPL
003cb6 b7fe      	IN   R31,SPH
003cb7 93fa      	ST   -Y,R31
003cb8 93ea      	ST   -Y,R30
003cb9 935f      	PUSH R21
003cba b7ed      	IN   R30,SPL
003cbb b7fe      	IN   R31,SPH
003cbc 93fa      	ST   -Y,R31
003cbd 93ea      	ST   -Y,R30
003cbe 934f      	PUSH R20
003cbf 01de      	MOVW R26,R28
003cc0 9656      	ADIW R26,22
003cc1 940e 80d2 	CALL _LOG_readEvent
003cc3 914f      	POP  R20
003cc4 915f      	POP  R21
003cc5 018f      	MOVW R16,R30
                 ; 0000 047E             if(res < 0)
003cc6 2311      	TST  R17
003cc7 f43a      	BRPL _0x128
                 ; 0000 047F             {
                 ; 0000 0480                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003cc8 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 3174 ) )
003cc9 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3174 ) )
003cca e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3174 ) )
003ccb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3174 ) )
                 	__POINTD1FN _0x0,3174
003ccc 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0481             }
                 ; 0000 0482             else if(res == 0)
003cce c04c      	RJMP _0x129
                 _0x128:
003ccf 2e00      	MOV  R0,R16
003cd0 2a01      	OR   R0,R17
003cd1 f439      	BRNE _0x12A
                 ; 0000 0483             {
                 ; 0000 0484                 //isEventLogEmpty     = 1;
                 ; 0000 0485                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003cd2 eaeb     +LDI R30 , LOW ( 2 * _0x0 + ( 3211 ) )
003cd3 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3211 ) )
003cd4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3211 ) )
003cd5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3211 ) )
                 	__POINTD1FN _0x0,3211
003cd6 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0486             }
                 ; 0000 0487             else
003cd8 c042      	RJMP _0x12B
                 _0x12A:
                 ; 0000 0488             {
                 ; 0000 0489                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003cd9 940e bec8 	CALL SUBOPT_0x6D
003cdb f019      	BREQ _0x12D
003cdc 940e be23 	CALL SUBOPT_0x53
003cde f449      	BRNE _0x12C
                 _0x12D:
                 ; 0000 048A                 {
                 ; 0000 048B                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003cdf e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003ce0 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003ce1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003ce2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003ce3 940e beb9 	CALL SUBOPT_0x6A
003ce5 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 048C                 }
                 ; 0000 048D                 else
003ce7 c033      	RJMP _0x12F
                 _0x12C:
                 ; 0000 048E                 {
                 ; 0000 048F                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003ce8 ede3     +LDI R30 , LOW ( 2 * _0x0 + ( 3251 ) )
003ce9 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3251 ) )
003cea e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3251 ) )
003ceb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3251 ) )
                 	__POINTD1FN _0x0,3251
003cec 940e be0a 	CALL SUBOPT_0x50
003cee 940e be3f 	CALL SUBOPT_0x58
                 ; 0000 0490                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003cf0 e0e1      	LDI  R30,LOW(1)
003cf1 940e be25 	CALL SUBOPT_0x54
003cf3 935a      	ST   -Y,R21
003cf4 2fa4      	MOV  R26,R20
003cf5 940e 52f6 	CALL _ETH_sendEventReportCmd
003cf7 018f      	MOVW R16,R30
                 ; 0000 0491                     if(res < 0)
003cf8 2311      	TST  R17
003cf9 f44a      	BRPL _0x130
                 ; 0000 0492                     {
                 ; 0000 0493                         logEventWait.frameID    = 0;
003cfa 940e bef2 	CALL SUBOPT_0x71
                 ; 0000 0494                         logEventWait.logID      = 0;
                 ; 0000 0495                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003cfc e1e2     +LDI R30 , LOW ( 2 * _0x0 + ( 3314 ) )
003cfd e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3314 ) )
003cfe e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3314 ) )
003cff e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3314 ) )
                 	__POINTD1FN _0x0,3314
003d00 940e bbec 	CALL SUBOPT_0x3
                 ; 0000 0496                     }
                 ; 0000 0497                     else
003d02 c018      	RJMP _0x131
                 _0x130:
                 ; 0000 0498                     {
                 ; 0000 0499                         logEventWait.logID      = index;
003d03 940e be77 	CALL SUBOPT_0x60
                +
003d05 93e0 142c+STS _logEventWait + ( 1 ) , R30
003d07 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003d09 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003d0b 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 049A                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003d0d e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 3360 ) )
003d0e e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3360 ) )
003d0f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3360 ) )
003d10 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3360 ) )
                 	__POINTD1FN _0x0,3360
003d11 940e da29 	CALL __PUTPARD1
003d13 91e0 142b 	LDS  R30,_logEventWait
003d15 940e be99 	CALL SUBOPT_0x65
003d17 940e bf02 	CALL SUBOPT_0x72
003d19 940e bcbc 	CALL SUBOPT_0x20
                 ; 0000 049B                     }
                 _0x131:
                 ; 0000 049C                 }
                 _0x12F:
                 ; 0000 049D             }
                 _0x12B:
                 _0x129:
                 ; 0000 049E 
                 ; 0000 049F             res = LOG_closeFile(&file);
003d1b 940e bee5 	CALL SUBOPT_0x70
                 ; 0000 04A0             if(res < 0)
003d1d f462      	BRPL _0x132
                 ; 0000 04A1             {
                 ; 0000 04A2                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003d1e e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 3418 ) )
003d1f e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3418 ) )
003d20 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3418 ) )
003d21 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3418 ) )
                 	__POINTD1FN _0x0,3418
                 _0x13E:
003d22 940e da29 	CALL __PUTPARD1
003d24 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
003d25 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
003d26 940e bd4a 	CALL SUBOPT_0x34
003d28 940e bc5e 	CALL SUBOPT_0x12
                 ; 0000 04A3             }
                 ; 0000 04A4         }
                 _0x132:
                 ; 0000 04A5     }
                 ; 0000 04A6 
                 ; 0000 04A7     return 0;
                 _0x123:
003d2a e0e0      	LDI  R30,LOW(0)
003d2b e0f0      	LDI  R31,HIGH(0)
003d2c 940e daa0 	CALL __LOADLOCR6
003d2e 96e2      	ADIW R28,50
003d2f 5fde      	SUBI R29,-2
003d30 9508      	RET
                 ; 0000 04A8 }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003d31 931a      	ST   -Y,R17
003d32 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003d33 e000     +LDI R16 , LOW ( 0 )
003d34 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003d35 e8e0      	LDI  R30,LOW(128)
003d36 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003d38 e0e0      	LDI  R30,LOW(0)
003d39 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003d3b 940e 4020 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003d3d b7e4      	IN   R30,0x34
003d3e ffe0      	SBRS R30,0
003d3f c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003d40 eae2     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003d41 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003d42 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003d43 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003d44 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003d46 b7e4      	IN   R30,0x34
003d47 7fee      	ANDI R30,0xFE
003d48 bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003d49 b7e4      	IN   R30,0x34
003d4a ffe1      	SBRS R30,1
003d4b c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003d4c ebe5     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003d4d e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003d4e e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003d4f e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003d50 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003d52 b7e4      	IN   R30,0x34
003d53 7fed      	ANDI R30,0xFD
003d54 bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003d55 b7e4      	IN   R30,0x34
003d56 ffe2      	SBRS R30,2
003d57 c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003d58 ece8     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003d59 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003d5a e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003d5b e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003d5c 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003d5e b7e4      	IN   R30,0x34
003d5f 7feb      	ANDI R30,0xFB
003d60 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003d61 b7e4      	IN   R30,0x34
003d62 ffe3      	SBRS R30,3
003d63 c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003d64 edec     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003d65 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003d66 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003d67 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003d68 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003d6a b7e4      	IN   R30,0x34
003d6b 7fe7      	ANDI R30,0XF7
003d6c bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003d6d b7e4      	IN   R30,0x34
003d6e ffe4      	SBRS R30,4
003d6f c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003d70 eeef     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003d71 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003d72 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003d73 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003d74 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003d76 b7e4      	IN   R30,0x34
003d77 7eef      	ANDI R30,0xEF
003d78 bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003d79 940e 41c2 	CALL _init_io
                 ; 0001 0036     init_i2c();
003d7b d052      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003d7c d054      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003d7d 940e 43a3 	CALL _init_adc
                 ; 0001 0039     init_timer();
003d7f 940e 410f 	CALL _init_timer
                 ; 0001 003A     init_common();
003d81 d054      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003d82 940e bf0b 	CALL SUBOPT_0x73
003d84 940e 419c 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003d86 efa4      	LDI  R26,LOW(500)
003d87 e0b1      	LDI  R27,HIGH(500)
003d88 940e d6dd 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003d8a 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003d8b 940e 4794 	CALL _init_RTC
003d8d 940e bf0e 	CALL SUBOPT_0x74
                 ; 0001 0043     init_oled();        delay_ms(100);
003d8f 940e 7cda 	CALL _init_oled
003d91 940e bf0e 	CALL SUBOPT_0x74
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003d93 940e 4346 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003d95 940e bf12 	CALL SUBOPT_0x75
003d97 940e 419c 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003d99 940e bf15 	CALL SUBOPT_0x76
003d9b 940e 419c 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003d9d 940e bf18 	CALL SUBOPT_0x77
003d9f 940e 419c 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003da1 940e 51f4 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     playBeep();
003da3 d04a      	RCALL _playBeep
                 ; 0001 004D     showLedInitComplete();
003da4 d09c      	RCALL _showLedInitComplete
                 ; 0001 004E     showDebugInitComplete();
003da5 d04d      	RCALL _showDebugInitComplete
                 ; 0001 004F 
                 ; 0001 0050     if(SD_init() == 0)
003da6 940e 7ec9 	CALL _SD_init
003da8 9730      	SBIW R30,0
003da9 f459      	BRNE _0x2000A
                 ; 0001 0051     {
                 ; 0001 0052         if(LOG_init() < 0)
003daa 940e 82ad 	CALL _LOG_init
003dac 23ff      	TST  R31
003dad f432      	BRPL _0x2000B
                 ; 0001 0053         {
                 ; 0001 0054             // -- log status = error -- //
                 ; 0001 0055             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003dae efee     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003daf e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003db0 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003db1 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003db2 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 0056         }
                 ; 0001 0057 
                 ; 0001 0058         // -- log status = ok -- //
                 ; 0001 0059     }
                 _0x2000B:
                 ; 0001 005A     else
003db4 c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005B     {
                 ; 0001 005C         // -- sd status = error -- //
                 ; 0001 005D         printDebug("<initial_system> SD_init() failed\r\n");
                +
003db5 e2e3     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003db6 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003db7 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003db8 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003db9 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 005E     }
                 _0x2000C:
                 ; 0001 005F 
                 ; 0001 0060     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003dbb e0a8      	LDI  R26,LOW(8)
003dbc 940e 42cc 	CALL _read_adc
003dbe e0ad      	LDI  R26,LOW(13)
003dbf e0b0      	LDI  R27,HIGH(13)
003dc0 940e d932 	CALL __MULW12U
003dc2 91a0 1430 	LDS  R26,_raw_rtc
003dc4 91b0 1431 	LDS  R27,_raw_rtc+1
003dc6 0fae      	ADD  R26,R30
003dc7 1fbf      	ADC  R27,R31
003dc8 940e a016 	CALL _srand
                 ; 0001 0061 
                 ; 0001 0062     // -------- Configuration Initialize ----------- //
                 ; 0001 0063 //    readConfig();
                 ; 0001 0064 //    initAlarm();        //delay_ms(100);
                 ; 0001 0065 //
                 ; 0001 0066 //    if(init_logfile() < 0){
                 ; 0001 0067 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0068 //        return -1;
                 ; 0001 0069 //    }
                 ; 0001 006A 
                 ; 0001 006B 
                 ; 0001 006C     return res;
003dca 01f8      	MOVW R30,R16
003dcb 9109      	LD   R16,Y+
003dcc 9119      	LD   R17,Y+
003dcd 9508      	RET
                 ; 0001 006D }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0070 {
                 _init_i2c:
                 ; 0001 0071     // I2C Bus initialization
                 ; 0001 0072     i2c_init();
003dce 940e d68c 	CALL _i2c_init
                 ; 0001 0073 }
003dd0 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0076 {
                 _init_spi:
                 ; 0001 0077     // SPI initialization
                 ; 0001 0078     // SPI Type: Master
                 ; 0001 0079     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007A     // SPI Clock Phase: Cycle Start
                 ; 0001 007B     // SPI Clock Polarity: Low
                 ; 0001 007C     // SPI Data Order: MSB First
                 ; 0001 007D     SPCR=0x50;
003dd1 e5e0      	LDI  R30,LOW(80)
003dd2 bdec      	OUT  0x2C,R30
                 ; 0001 007E     SPSR=0x00;
003dd3 e0e0      	LDI  R30,LOW(0)
003dd4 bded      	OUT  0x2D,R30
                 ; 0001 007F }
003dd5 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0082 {
                 _init_common:
                 ; 0001 0083     // External Interrupt(s) initialization
                 ; 0001 0084     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0085     EICRA=0x00;
003dd6 e0e0      	LDI  R30,LOW(0)
003dd7 93e0 0069 	STS  105,R30
                 ; 0001 0086     EICRB=0x00;
003dd9 93e0 006a 	STS  106,R30
                 ; 0001 0087     EIMSK=0x00;
003ddb bbed      	OUT  0x1D,R30
                 ; 0001 0088 
                 ; 0001 0089     PCMSK0=0x00;
003ddc 93e0 006b 	STS  107,R30
                 ; 0001 008A     PCMSK1=0x00;
003dde 93e0 006c 	STS  108,R30
                 ; 0001 008B     PCMSK2=0x00;
003de0 93e0 006d 	STS  109,R30
                 ; 0001 008C     PCICR=0x00;
003de2 93e0 0068 	STS  104,R30
                 ; 0001 008D 
                 ; 0001 008E     // Analog Comparator initialization
                 ; 0001 008F     // Analog Comparator: Off
                 ; 0001 0090     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0091     ACSR=0x80;
003de4 e8e0      	LDI  R30,LOW(128)
003de5 bfe0      	OUT  0x30,R30
                 ; 0001 0092     ADCSRB=0x00;
003de6 e0e0      	LDI  R30,LOW(0)
003de7 93e0 007b 	STS  123,R30
                 ; 0001 0093     DIDR1=0x00;
003de9 93e0 007f 	STS  127,R30
                 ; 0001 0094 
                 ; 0001 0095     // TWI initialization
                 ; 0001 0096     // TWI disabled
                 ; 0001 0097     TWCR=0x00;
003deb 93e0 00bc 	STS  188,R30
                 ; 0001 0098 }
003ded 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009B {
                 _playBeep:
                 ; 0001 009C     BUZZER = 1;                                     // Buzzer ON Starting
003dee 9a77      	SBI  0xE,7
                 ; 0001 009D     delay_ms(200);
003def 940e bd4f 	CALL SUBOPT_0x35
                 ; 0001 009E     BUZZER = 0;
003df1 9877      	CBI  0xE,7
                 ; 0001 009F }
003df2 9508      	RET
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A2 {
                 _showDebugInitComplete:
                 ; 0001 00A3     struct rtc_structure time;
                 ; 0001 00A4     struct prop_cnfg_st properties_config;
                 ; 0001 00A5 
                 ; 0001 00A6     printDebug("Initial Device Completed at - ");
003df3 97ef      	SBIW R28,63
003df4 97ef      	SBIW R28,63
003df5 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003df6 e4e7     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003df7 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003df8 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003df9 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003dfa 940e bbec 	CALL SUBOPT_0x3
                 ; 0001 00A7     RTC_getDateTime(&time,properties_config.timeZone);
003dfc 01fe      	MOVW R30,R28
003dfd 55ef      	SUBI R30,LOW(-(161))
003dfe 4fff      	SBCI R31,HIGH(-(161))
003dff 93fa      	ST   -Y,R31
003e00 93ea      	ST   -Y,R30
003e01 01de      	MOVW R26,R28
003e02 55ae      	SUBI R26,LOW(-162)
003e03 4fbf      	SBCI R27,HIGH(-162)
003e04 91ec      	LD   R30,X
003e05 e0f0      	LDI  R31,0
003e06 fde7      	SBRC R30,7
003e07 efff      	SER  R31
003e08 01df      	MOVW R26,R30
003e09 940e 46fd 	CALL _RTC_getDateTime
                 ; 0001 00A8     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00A9             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003e0b e6e6     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003e0c e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003e0d e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003e0e e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003e0f 940e da29 	CALL __PUTPARD1
                +
003e11 01fe     +MOVW R30 , R28
003e12 55eb     +SUBI R30 , LOW ( - 165 )
003e13 4fff     +SBCI R31 , HIGH ( - 165 )
003e14 9001     +LD R0 , Z +
003e15 9011     +LD R1 , Z +
003e16 9161     +LD R22 , Z +
003e17 8170     +LD R23 , Z
003e18 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003e19 940e da29 	CALL __PUTPARD1
003e1b 01fe      	MOVW R30,R28
003e1c 55e7      	SUBI R30,LOW(-(169))
003e1d 4fff      	SBCI R31,HIGH(-(169))
003e1e 9634      	ADIW R30,4
003e1f 940e bf1b 	CALL SUBOPT_0x78
003e21 01fe      	MOVW R30,R28
003e22 55e3      	SUBI R30,LOW(-(173))
003e23 4fff      	SBCI R31,HIGH(-(173))
003e24 9638      	ADIW R30,8
003e25 940e bf1b 	CALL SUBOPT_0x78
003e27 01fe      	MOVW R30,R28
003e28 54ef      	SUBI R30,LOW(-(177))
003e29 4fff      	SBCI R31,HIGH(-(177))
003e2a 963c      	ADIW R30,12
003e2b 940e bf1b 	CALL SUBOPT_0x78
003e2d 01fe      	MOVW R30,R28
003e2e 54eb      	SUBI R30,LOW(-(181))
003e2f 4fff      	SBCI R31,HIGH(-(181))
003e30 9670      	ADIW R30,16
003e31 940e bf1b 	CALL SUBOPT_0x78
003e33 01fe      	MOVW R30,R28
003e34 54e7      	SUBI R30,LOW(-(185))
003e35 4fff      	SBCI R31,HIGH(-(185))
003e36 9674      	ADIW R30,20
003e37 940e bf1b 	CALL SUBOPT_0x78
003e39 e188      	LDI  R24,24
003e3a 940e 9afc 	CALL _printDebug
003e3c 966c      	ADIW R28,28
                 ; 0001 00AA }
003e3d 96ef      	ADIW R28,63
003e3e 96ef      	ADIW R28,63
003e3f 96ed      	ADIW R28,61
003e40 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AD {
                 _showLedInitComplete:
                 ; 0001 00AE     LED_ON(BIT_LED_ALARM);
003e41 91e0 0102 	LDS  R30,258
003e43 7bef      	ANDI R30,0xBF
003e44 940e bf21 	CALL SUBOPT_0x79
                 ; 0001 00AF     delay_ms(200);
                 ; 0001 00B0 
                 ; 0001 00B1     LED_ON(BIT_LED_LINK);
003e46 91e0 0102 	LDS  R30,258
003e48 7def      	ANDI R30,0xDF
003e49 940e bf21 	CALL SUBOPT_0x79
                 ; 0001 00B2     delay_ms(200);
                 ; 0001 00B3 
                 ; 0001 00B4     LED_ON(BIT_LED_TEMP);
003e4b 91e0 0102 	LDS  R30,258
003e4d 7eef      	ANDI R30,0xEF
003e4e 940e bf21 	CALL SUBOPT_0x79
                 ; 0001 00B5     delay_ms(200);
                 ; 0001 00B6 
                 ; 0001 00B7     LED_ON(BIT_LED_PWR);
003e50 91e0 0102 	LDS  R30,258
003e52 7fe7      	ANDI R30,0XF7
003e53 940e bf21 	CALL SUBOPT_0x79
                 ; 0001 00B8     delay_ms(200);
                 ; 0001 00B9 
                 ; 0001 00BA     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003e55 91e0 0102 	LDS  R30,258
003e57 67e8      	ORI  R30,LOW(0x78)
003e58 940e bf21 	CALL SUBOPT_0x79
                 ; 0001 00BB     delay_ms(200);
                 ; 0001 00BC 
                 ; 0001 00BD     LED_ON(BIT_LED_PWR);
003e5a 91e0 0102 	LDS  R30,258
003e5c 7fe7      	ANDI R30,0XF7
003e5d 93e0 0102 	STS  258,R30
                 ; 0001 00BE     delay_ms(50);
003e5f 940e bf24 	CALL SUBOPT_0x7A
                 ; 0001 00BF }
003e61 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
003e62 940e bf28 	CALL SUBOPT_0x7B
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
003e64 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
003e66 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003e68 2fe1      	MOV  R30,R17
003e69 71ec      	ANDI R30,LOW(0x1C)
003e6a f011      	BREQ PC+3
003e6b 940c 3f16 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
003e6d 91e0 1420 	LDS  R30,_ETH_current_mode
003e6f 30e0      	CPI  R30,0
003e70 f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
003e71 eaa3      	LDI  R26,LOW(_rx_wr_index0)
003e72 e0bf      	LDI  R27,HIGH(_rx_wr_index0)
003e73 940e bf3c 	CALL SUBOPT_0x7C
003e75 9731      	SBIW R30,1
003e76 55e1      	SUBI R30,LOW(-_rx_buffer0)
003e77 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003e78 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
003e79 91a0 0fa3 	LDS  R26,_rx_wr_index0
003e7b 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
003e7d 3fa4      	CPI  R26,LOW(0x1F4)
003e7e e0e1      	LDI  R30,HIGH(0x1F4)
003e7f 07be      	CPC  R27,R30
003e80 f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
003e81 e0e0      	LDI  R30,LOW(0)
003e82 93e0 0fa3 	STS  _rx_wr_index0,R30
003e84 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
003e86 eaa7      	LDI  R26,LOW(_rx_counter0)
003e87 e0bf      	LDI  R27,HIGH(_rx_counter0)
003e88 940e bf3c 	CALL SUBOPT_0x7C
003e8a 3fe4      	CPI  R30,LOW(0x1F4)
003e8b e0a1      	LDI  R26,HIGH(0x1F4)
003e8c 07fa      	CPC  R31,R26
003e8d f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
003e8e e0e0      	LDI  R30,LOW(0)
003e8f 93e0 0fa7 	STS  _rx_counter0,R30
003e91 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
003e93 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003e94 e0e3      	LDI  R30,LOW(3)
003e95 93ea      	ST   -Y,R30
                +
003e96 efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
003e97 e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
003e98 d154      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
003e99 e0e3      	LDI  R30,LOW(3)
003e9a 93ea      	ST   -Y,R30
                +
003e9b e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
003e9c e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
003e9d d14f      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003e9e e0e3      	LDI  R30,LOW(3)
003e9f 93ea      	ST   -Y,R30
                +
003ea0 e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
003ea1 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
003ea2 d14a      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
003ea3 c072      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
003ea4 2fa0      	MOV  R26,R16
003ea5 d13d      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
003ea6 940e bf42 	CALL SUBOPT_0x7D
003ea8 34a5      	CPI  R26,LOW(0x145)
003ea9 e0e1      	LDI  R30,HIGH(0x145)
003eaa 07be      	CPC  R27,R30
003eab f411      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
003eac 940e bf47 	CALL SUBOPT_0x7E
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
003eae 330c      	CPI  R16,60
003eaf f421      	BRNE _0x4000D
003eb0 91a0 10f0 	LDS  R26,_config_start
003eb2 30a0      	CPI  R26,LOW(0x0)
003eb3 f009      	BREQ _0x4000E
                 _0x4000D:
003eb4 c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
003eb5 e0e1      	LDI  R30,LOW(1)
003eb6 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
003eb8 e0e0      	LDI  R30,LOW(0)
003eb9 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
003ebb 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
003ebd c058      	RJMP _0x4000F
                 _0x4000C:
003ebe 300d      	CPI  R16,13
003ebf f461      	BRNE _0x40011
003ec0 91a0 10f2 	LDS  R26,_config_end
003ec2 30a0      	CPI  R26,LOW(0x0)
003ec3 f441      	BRNE _0x40011
003ec4 91a0 10f0 	LDS  R26,_config_start
003ec6 30a1      	CPI  R26,LOW(0x1)
003ec7 f421      	BRNE _0x40011
003ec8 91a0 10f3 	LDS  R26,_config_response
003eca 30a0      	CPI  R26,LOW(0x0)
003ecb f409      	BRNE _0x40012
                 _0x40011:
003ecc c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
003ecd e0ed      	LDI  R30,LOW(13)
003ece 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
003ed0 c045      	RJMP _0x40013
                 _0x40010:
003ed1 300a      	CPI  R16,10
003ed2 f461      	BRNE _0x40015
003ed3 91a0 10f2 	LDS  R26,_config_end
003ed5 30ad      	CPI  R26,LOW(0xD)
003ed6 f441      	BRNE _0x40015
003ed7 91a0 10f0 	LDS  R26,_config_start
003ed9 30a1      	CPI  R26,LOW(0x1)
003eda f421      	BRNE _0x40015
003edb 91a0 10f3 	LDS  R26,_config_response
003edd 30a0      	CPI  R26,LOW(0x0)
003ede f409      	BRNE _0x40016
                 _0x40015:
003edf c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
003ee0 e0ea      	LDI  R30,LOW(10)
003ee1 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
003ee3 e0e1      	LDI  R30,LOW(1)
003ee4 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
003ee6 c02f      	RJMP _0x40017
                 _0x40014:
003ee7 3405      	CPI  R16,69
003ee8 f441      	BRNE _0x40019
003ee9 91a0 10f0 	LDS  R26,_config_start
003eeb 30a1      	CPI  R26,LOW(0x1)
003eec f421      	BRNE _0x40019
003eed 91a0 10f3 	LDS  R26,_config_response
003eef 30a0      	CPI  R26,LOW(0x0)
003ef0 f009      	BREQ _0x4001A
                 _0x40019:
003ef1 c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
003ef2 e4e5      	LDI  R30,LOW(69)
003ef3 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
003ef5 c020      	RJMP _0x4001B
                 _0x40018:
003ef6 3503      	CPI  R16,83
003ef7 f441      	BRNE _0x4001D
003ef8 91a0 10f0 	LDS  R26,_config_start
003efa 30a1      	CPI  R26,LOW(0x1)
003efb f421      	BRNE _0x4001D
003efc 91a0 10f3 	LDS  R26,_config_response
003efe 30a0      	CPI  R26,LOW(0x0)
003eff f009      	BREQ _0x4001E
                 _0x4001D:
003f00 c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
003f01 e5e3      	LDI  R30,LOW(83)
003f02 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
003f04 c011      	RJMP _0x4001F
                 _0x4001C:
003f05 91a0 10f0 	LDS  R26,_config_start
003f07 30a1      	CPI  R26,LOW(0x1)
003f08 f421      	BRNE _0x40021
003f09 91a0 10f3 	LDS  R26,_config_response
003f0b 30a0      	CPI  R26,LOW(0x0)
003f0c f409      	BRNE _0x40022
                 _0x40021:
003f0d c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
003f0e eeae      	LDI  R26,LOW(_configLen)
003f0f e1b0      	LDI  R27,HIGH(_configLen)
003f10 940e bf3c 	CALL SUBOPT_0x7C
003f12 9731      	SBIW R30,1
003f13 55e7      	SUBI R30,LOW(-_configRd)
003f14 4ff0      	SBCI R31,HIGH(-_configRd)
003f15 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
003f16 c0b8      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
003f17 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
003f18 91e0 00c0 	LDS  R30,192
003f1a 72e0      	ANDI R30,LOW(0x20)
003f1b f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
003f1c 81e8      	LD   R30,Y
003f1d 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
003f1f c0cb      	RJMP _0x20E009A
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
003f20 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
003f22 e020     +LDI R18 , LOW ( 0 )
003f23 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
003f24 91a0 0fa7 	LDS  R26,_rx_counter0
003f26 91b0 0fa8 	LDS  R27,_rx_counter0+1
003f28 940e da81 	CALL __CPW02
003f2a f010      	BRLO PC+3
003f2b 940c 3f6d 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
003f2d eaa5      	LDI  R26,LOW(_rx_rd_index0)
003f2e e0bf      	LDI  R27,HIGH(_rx_rd_index0)
003f2f 940e bf3c 	CALL SUBOPT_0x7C
003f31 9731      	SBIW R30,1
003f32 55e1      	SUBI R30,LOW(-_rx_buffer0)
003f33 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003f34 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
003f35 91a0 0fa5 	LDS  R26,_rx_rd_index0
003f37 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
003f39 3fa4      	CPI  R26,LOW(0x1F4)
003f3a e0e1      	LDI  R30,HIGH(0x1F4)
003f3b 07be      	CPC  R27,R30
003f3c f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
003f3d e0e0      	LDI  R30,LOW(0)
003f3e 93e0 0fa5 	STS  _rx_rd_index0,R30
003f40 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
003f42 91e0 00c1 	LDS  R30,193
003f44 77ef      	ANDI R30,0x7F
003f45 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
003f47 eaa7      	LDI  R26,LOW(_rx_counter0)
003f48 e0bf      	LDI  R27,HIGH(_rx_counter0)
003f49 91ed      	LD   R30,X+
003f4a 91fd      	LD   R31,X+
003f4b 9731      	SBIW R30,1
003f4c 93fe      	ST   -X,R31
003f4d 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
003f4e 91e0 00c1 	LDS  R30,193
003f50 68e0      	ORI  R30,0x80
003f51 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
003f53 940e bf52 	CALL SUBOPT_0x80
003f55 93fa      	ST   -Y,R31
003f56 93ea      	ST   -Y,R30
003f57 b7ed      	IN   R30,SPL
003f58 b7fe      	IN   R31,SPH
003f59 93fa      	ST   -Y,R31
003f5a 93ea      	ST   -Y,R30
003f5b 931f      	PUSH R17
003f5c 940e bf12 	CALL SUBOPT_0x75
003f5e 940e a10f 	CALL _memcpy
003f60 911f      	POP  R17
                 ; 0002 0092         len++;
                +
003f61 5f2f     +SUBI R18 , LOW ( - 1 )
003f62 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
003f63 81ee      	LDD  R30,Y+6
003f64 81ff      	LDD  R31,Y+6+1
003f65 17e2      	CP   R30,R18
003f66 07f3      	CPC  R31,R19
003f67 f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
003f68 81ac      	LDD  R26,Y+4
003f69 81bd      	LDD  R27,Y+4+1
003f6a 940e d6dd 	CALL _delay_ms
                 ; 0002 0098     }
003f6c cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
003f6d 01f9      	MOVW R30,R18
003f6e 940e daa2 	CALL __LOADLOCR4
003f70 c143      	RJMP _0x20E0099
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
003f71 940e bf59 	CALL SUBOPT_0x81
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
003f73 e000     +LDI R16 , LOW ( 0 )
003f74 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
003f75 940e bf5e 	CALL SUBOPT_0x82
003f77 f43c      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
003f78 940e bf63 	CALL SUBOPT_0x83
003f7a 91ac      	LD   R26,X
003f7b df9b      	RCALL _putchar0
                 ; 0002 00A1     }
                +
003f7c 5f0f     +SUBI R16 , LOW ( - 1 )
003f7d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
003f7e cff6      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
003f7f 01f8      	MOVW R30,R16
003f80 8119      	LDD  R17,Y+1
003f81 8108      	LDD  R16,Y+0
003f82 9626      	ADIW R28,6
003f83 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
003f84 93ea      	ST   -Y,R30
003f85 b7ef      	IN   R30,SREG
003f86 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
003f87 931a      	ST   -Y,R17
003f88 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003f89 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
003f8b 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003f8d 2fe1      	MOV  R30,R17
003f8e 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
003f8f c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
003f90 93ea      	ST   -Y,R30
003f91 b7ef      	IN   R30,SREG
003f92 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
003f93 931a      	ST   -Y,R17
003f94 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003f95 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
003f97 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003f99 2fe1      	MOV  R30,R17
003f9a 71ec      	ANDI R30,LOW(0x1C)
003f9b f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
003f9c 340b      	CPI  R16,75
003f9d f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
003f9e 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
003f9f 9109      	LD   R16,Y+
003fa0 9119      	LD   R17,Y+
003fa1 91e9      	LD   R30,Y+
003fa2 bfef      	OUT  SREG,R30
003fa3 91e9      	LD   R30,Y+
003fa4 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
003fa5 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
003fa6 91e0 00d0 	LDS  R30,208
003fa8 72e0      	ANDI R30,LOW(0x20)
003fa9 f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
003faa 81e8      	LD   R30,Y
003fab 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
003fad c03d      	RJMP _0x20E009A
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
003fae 940e bf28 	CALL SUBOPT_0x7B
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
003fb0 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
003fb2 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003fb4 2fe1      	MOV  R30,R17
003fb5 71ec      	ANDI R30,LOW(0x1C)
003fb6 f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
003fb7 2fa0      	MOV  R26,R16
003fb8 d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
003fb9 3204      	CPI  R16,36
003fba f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
003fbb 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
003fbc 2de5      	MOV  R30,R5
003fbd 9453      	INC  R5
003fbe e0f0      	LDI  R31,0
003fbf 59e1      	SUBI R30,LOW(-_rxPackage3)
003fc0 4ff2      	SBCI R31,HIGH(-_rxPackage3)
003fc1 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
003fc2 e4e0      	LDI  R30,LOW(64)
003fc3 165e      	CP   R5,R30
003fc4 f008      	BRLO _0x4003E
003fc5 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
003fc6 3203      	CPI  R16,35
003fc7 f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
003fc8 2de5      	MOV  R30,R5
003fc9 50e1      	SUBI R30,LOW(1)
003fca 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
003fcb 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
003fcc e0e1      	LDI  R30,LOW(1)
003fcd 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
003fcf 9109      	LD   R16,Y+
003fd0 9119      	LD   R17,Y+
003fd1 91e9      	LD   R30,Y+
003fd2 bfef      	OUT  SREG,R30
003fd3 91e9      	LD   R30,Y+
003fd4 bfec      	OUT  EIND,R30
003fd5 91e9      	LD   R30,Y+
003fd6 bfeb      	OUT  RAMPZ,R30
003fd7 91f9      	LD   R31,Y+
003fd8 91e9      	LD   R30,Y+
003fd9 91b9      	LD   R27,Y+
003fda 91a9      	LD   R26,Y+
003fdb 9199      	LD   R25,Y+
003fdc 9189      	LD   R24,Y+
003fdd 9179      	LD   R23,Y+
003fde 9169      	LD   R22,Y+
003fdf 90f9      	LD   R15,Y+
003fe0 9019      	LD   R1,Y+
003fe1 9009      	LD   R0,Y+
003fe2 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
003fe3 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
003fe4 91e0 0130 	LDS  R30,304
003fe6 72e0      	ANDI R30,LOW(0x20)
003fe7 f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
003fe8 81e8      	LD   R30,Y
003fe9 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E009A:
003feb 9621      	ADIW R28,1
003fec 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
003fed 93ba      	ST   -Y,R27
003fee 93aa      	ST   -Y,R26
003fef 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
003ff0 e010      	LDI  R17,0
003ff1 81eb      	LDD  R30,Y+3
003ff2 940e bd09 	CALL SUBOPT_0x2B
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
003ff4 f429      	BRNE _0x40046
003ff5 81a9      	LDD  R26,Y+1
003ff6 81ba      	LDD  R27,Y+1+1
003ff7 940e b7b9 	CALL _puts
                 ; 0002 0100                 break;
003ff9 c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
003ffa 30e1      	CPI  R30,LOW(0x1)
003ffb e0a0      	LDI  R26,HIGH(0x1)
003ffc 07fa      	CPC  R31,R26
003ffd f431      	BRNE _0x40047
                 _0x40048:
003ffe 940e bf69 	CALL SUBOPT_0x84
004000 f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
004001 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
004002 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
004003 c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
004004 30e2      	CPI  R30,LOW(0x2)
004005 e0a0      	LDI  R26,HIGH(0x2)
004006 07fa      	CPC  R31,R26
004007 f449      	BRNE _0x4004B
                 _0x4004C:
004008 940e bf69 	CALL SUBOPT_0x84
00400a f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
00400b 940e bf71 	CALL SUBOPT_0x85
00400d df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
00400e 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
00400f cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
004010 c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
004011 30e3      	CPI  R30,LOW(0x3)
004012 e0a0      	LDI  R26,HIGH(0x3)
004013 07fa      	CPC  R31,R26
004014 f441      	BRNE _0x40045
                 _0x40050:
004015 940e bf69 	CALL SUBOPT_0x84
004017 f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
004018 940e bf71 	CALL SUBOPT_0x85
00401a dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
00401b 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
00401c cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
00401d 8118      	LDD  R17,Y+0
00401e 940c 4344 	JMP  _0x20E0096
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
004020 e0e0      	LDI  R30,LOW(0)
004021 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
004023 e9e8      	LDI  R30,LOW(152)
004024 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
004026 e0e6      	LDI  R30,LOW(6)
004027 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
004029 e0e0      	LDI  R30,LOW(0)
00402a 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
00402c e3e3      	LDI  R30,LOW(51)
00402d 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
00402f e0e0      	LDI  R30,LOW(0)
004030 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
004032 e9e8      	LDI  R30,LOW(152)
004033 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
004035 e0e6      	LDI  R30,LOW(6)
004036 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
004038 e0e0      	LDI  R30,LOW(0)
004039 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
00403b e0ec      	LDI  R30,LOW(12)
00403c 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
00403e e0e0      	LDI  R30,LOW(0)
00403f 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
004041 e9e8      	LDI  R30,LOW(152)
004042 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
004044 e0e6      	LDI  R30,LOW(6)
004045 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
004047 e0e0      	LDI  R30,LOW(0)
004048 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
00404a e0ec      	LDI  R30,LOW(12)
00404b 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
00404d e0e0      	LDI  R30,LOW(0)
00404e 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
004050 e9e8      	LDI  R30,LOW(152)
004051 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
004053 e0e6      	LDI  R30,LOW(6)
004054 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
004056 e0e0      	LDI  R30,LOW(0)
004057 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
004059 e0ec      	LDI  R30,LOW(12)
00405a 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
00405c 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
00405d 940e bf78 	CALL SUBOPT_0x86
                 ;	keeper -> Y+0
00405f f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
004060 efef      	LDI  R30,LOW(65535)
004061 efff      	LDI  R31,HIGH(65535)
004062 940c 4344 	JMP  _0x20E0096
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
004064 940e bf7f 	CALL SUBOPT_0x87
004066 940e bf82 	CALL SUBOPT_0x88
004068 940e da94 	CALL __CPD21
00406a f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
00406b e0e0      	LDI  R30,LOW(0)
00406c e0f0      	LDI  R31,HIGH(0)
00406d 940c 4344 	JMP  _0x20E0096
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
00406f e0e1      	LDI  R30,LOW(1)
004070 e0f0      	LDI  R31,HIGH(1)
004071 940c 4344 	JMP  _0x20E0096
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
004073 940e da2e 	CALL __PUTPARD2
004075 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
004076 940e bf8b 	CALL SUBOPT_0x89
004078 940e da7d 	CALL __CPD10
00407a f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
00407b ede8     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
00407c e1f0     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
00407d e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
00407e e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
00407f 940e bbec 	CALL SUBOPT_0x3
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
004081 85a8      	LDD  R26,Y+8
004082 85b9      	LDD  R27,Y+8+1
004083 940e bcd8 	CALL SUBOPT_0x24
004085 940e d9ff 	CALL __PUTDP1
                 ; 0003 0030         return -1;
004087 efef      	LDI  R30,LOW(65535)
004088 efff      	LDI  R31,HIGH(65535)
004089 c02a      	RJMP _0x20E0099
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
00408a 940e bf8b 	CALL SUBOPT_0x89
00408c 940e bf82 	CALL SUBOPT_0x88
00408e 940e bf90 	CALL SUBOPT_0x8A
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
004090 940e bf7f 	CALL SUBOPT_0x87
004092 85a8      	LDD  R26,Y+8
004093 85b9      	LDD  R27,Y+8+1
004094 940e d9ff 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
004096 940e bf95 	CALL SUBOPT_0x8B
004098 940e bf9e 	CALL SUBOPT_0x8C
00409a 940e da8f 	CALL __CPD12
00409c f0a8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
00409d efeb     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
00409e e1f0     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
00409f e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
0040a0 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
0040a1 940e da29 	CALL __PUTPARD1
0040a3 940e bf95 	CALL SUBOPT_0x8B
0040a5 940e bfa1 	CALL SUBOPT_0x8D
0040a7 940e bfa1 	CALL SUBOPT_0x8D
0040a9 940e bfa8 	CALL SUBOPT_0x8E
                 ; 0003 0039         *keeper = 0;
0040ab 85a8      	LDD  R26,Y+8
0040ac 85b9      	LDD  R27,Y+8+1
0040ad 940e bfab 	CALL SUBOPT_0x8F
                 ; 0003 003A         return -1;
0040af efef      	LDI  R30,LOW(65535)
0040b0 efff      	LDI  R31,HIGH(65535)
0040b1 c002      	RJMP _0x20E0099
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
0040b2 e0e0      	LDI  R30,LOW(0)
0040b3 e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0099:
0040b4 962a      	ADIW R28,10
0040b5 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
0040b6 940e bfb2 	CALL SUBOPT_0x90
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
0040b8 e3ee     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
0040b9 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
0040ba e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
0040bb e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
0040bc 940e bbec 	CALL SUBOPT_0x3
                 ; 0003 004B     return;
0040be c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
0040bf 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
0040c0 e6e4      	LDI  R30,LOW(100)
0040c1 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
0040c2 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
0040c3 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
0040c4 940e bfc4 	CALL SUBOPT_0x91
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
0040c6 c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
0040c7 940e bfb2 	CALL SUBOPT_0x90
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
0040c9 ebe2      	LDI  R30,LOW(178)
0040ca 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
0040cc 940e a65b 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
0040ce 91e9      	LD   R30,Y+
0040cf bfef      	OUT  SREG,R30
0040d0 91e9      	LD   R30,Y+
0040d1 bfec      	OUT  EIND,R30
0040d2 91e9      	LD   R30,Y+
0040d3 bfeb      	OUT  RAMPZ,R30
0040d4 91f9      	LD   R31,Y+
0040d5 91e9      	LD   R30,Y+
0040d6 91b9      	LD   R27,Y+
0040d7 91a9      	LD   R26,Y+
0040d8 9199      	LD   R25,Y+
0040d9 9189      	LD   R24,Y+
0040da 9179      	LD   R23,Y+
0040db 9169      	LD   R22,Y+
0040dc 90f9      	LD   R15,Y+
0040dd 9019      	LD   R1,Y+
0040de 9009      	LD   R0,Y+
0040df 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
0040e0 936a      	ST   -Y,R22
0040e1 937a      	ST   -Y,R23
0040e2 93aa      	ST   -Y,R26
0040e3 93ba      	ST   -Y,R27
0040e4 93ea      	ST   -Y,R30
0040e5 93fa      	ST   -Y,R31
0040e6 b7ef      	IN   R30,SREG
0040e7 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
0040e8 940e bfcb 	CALL SUBOPT_0x92
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
0040ea 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
0040eb e7a7      	LDI  R26,LOW(_baseCounter)
0040ec e1b3      	LDI  R27,HIGH(_baseCounter)
0040ed 940e bfd2 	CALL SUBOPT_0x93
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
0040ef e3a0      	LDI  R26,LOW(_raw_rtc)
0040f0 e1b4      	LDI  R27,HIGH(_raw_rtc)
0040f1 940e bfd2 	CALL SUBOPT_0x93
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
0040f3 91e9      	LD   R30,Y+
0040f4 bfef      	OUT  SREG,R30
0040f5 91f9      	LD   R31,Y+
0040f6 91e9      	LD   R30,Y+
0040f7 91b9      	LD   R27,Y+
0040f8 91a9      	LD   R26,Y+
0040f9 9179      	LD   R23,Y+
0040fa 9169      	LD   R22,Y+
0040fb 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
0040fc 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
0040fd 940e bfdb 	CALL SUBOPT_0x94
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
0040ff 9bf4      	SBIS 0x1E,4
004100 c002      	RJMP _0x6000D
004101 98f4      	CBI  0x1E,4
004102 c001      	RJMP _0x6000E
                 _0x6000D:
004103 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
004104 9bf3      	SBIS 0x1E,3
004105 c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
004106 9bf4      	SBIS 0x1E,4
004107 c002      	RJMP _0x60010
004108 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
004109 c001      	RJMP _0x60013
                 _0x60010:
00410a 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
00410b c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
00410c 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
00410d 91e9      	LD   R30,Y+
00410e 9518      	RETI
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 0095 {
                 _init_timer:
                 ; 0003 0096 
                 ; 0003 0097     // Timer/Counter 0 initialization
                 ; 0003 0098     // Clock source: System Clock
                 ; 0003 0099     // Clock value: 7.813 kHz
                 ; 0003 009A     // Mode: Normal top=0xFF
                 ; 0003 009B     // OC0A output: Disconnected
                 ; 0003 009C     // OC0B output: Disconnected
                 ; 0003 009D     TCCR0A=0x00;
00410f e0e0      	LDI  R30,LOW(0)
004110 bde4      	OUT  0x24,R30
                 ; 0003 009E     TCCR0B=0x05;
004111 e0e5      	LDI  R30,LOW(5)
004112 bde5      	OUT  0x25,R30
                 ; 0003 009F     TCNT0=0x64;
004113 e6e4      	LDI  R30,LOW(100)
004114 bde6      	OUT  0x26,R30
                 ; 0003 00A0     OCR0A=0x00;
004115 e0e0      	LDI  R30,LOW(0)
004116 bde7      	OUT  0x27,R30
                 ; 0003 00A1     OCR0B=0x00;
004117 bde8      	OUT  0x28,R30
                 ; 0003 00A2 
                 ; 0003 00A3     // Timer/Counter 1 initialization
                 ; 0003 00A4     // Clock source: System Clock
                 ; 0003 00A5     // Clock value: 7.813 kHz
                 ; 0003 00A6     // Mode: Normal top=0xFFFF
                 ; 0003 00A7     // OC1A output: Discon.
                 ; 0003 00A8     // OC1B output: Discon.
                 ; 0003 00A9     // OC1C output: Discon.
                 ; 0003 00AA     // Noise Canceler: Off
                 ; 0003 00AB     // Input Capture on Falling Edge
                 ; 0003 00AC     // Timer1 Overflow Interrupt: On
                 ; 0003 00AD     // Input Capture Interrupt: Off
                 ; 0003 00AE     // Compare A Match Interrupt: Off
                 ; 0003 00AF     // Compare B Match Interrupt: Off
                 ; 0003 00B0     // Compare C Match Interrupt: Off
                 ; 0003 00B1     TCCR1A=0x00;
004118 93e0 0080 	STS  128,R30
                 ; 0003 00B2     TCCR1B=0x05;
00411a e0e5      	LDI  R30,LOW(5)
00411b 93e0 0081 	STS  129,R30
                 ; 0003 00B3     //TCNT1H=0xFF;
                 ; 0003 00B4     //TCNT1L=0x64;
                 ; 0003 00B5     TCNT1H=0xFE;
00411d 940e bfc4 	CALL SUBOPT_0x91
                 ; 0003 00B6     TCNT1L=0x79;
                 ; 0003 00B7     ICR1H=0x00;
00411f e0e0      	LDI  R30,LOW(0)
004120 93e0 0087 	STS  135,R30
                 ; 0003 00B8     ICR1L=0x00;
004122 93e0 0086 	STS  134,R30
                 ; 0003 00B9     OCR1AH=0x00;
004124 93e0 0089 	STS  137,R30
                 ; 0003 00BA     OCR1AL=0x00;
004126 93e0 0088 	STS  136,R30
                 ; 0003 00BB     OCR1BH=0x00;
004128 93e0 008b 	STS  139,R30
                 ; 0003 00BC     OCR1BL=0x00;
00412a 93e0 008a 	STS  138,R30
                 ; 0003 00BD     OCR1CH=0x00;
00412c 93e0 008d 	STS  141,R30
                 ; 0003 00BE     OCR1CL=0x00;
00412e 93e0 008c 	STS  140,R30
                 ; 0003 00BF 
                 ; 0003 00C0     // Timer/Counter 2 initialization
                 ; 0003 00C1     // Clock source: System Clock
                 ; 0003 00C2     // Clock value: 7.813 kHz
                 ; 0003 00C3     // Mode: Normal top=0xFF
                 ; 0003 00C4     // OC2A output: Disconnected
                 ; 0003 00C5     // OC2B output: Disconnected
                 ; 0003 00C6     ASSR=0x00;
004130 93e0 00b6 	STS  182,R30
                 ; 0003 00C7     TCCR2A=0x00;
004132 93e0 00b0 	STS  176,R30
                 ; 0003 00C8     TCCR2B=0x07;
004134 e0e7      	LDI  R30,LOW(7)
004135 93e0 00b1 	STS  177,R30
                 ; 0003 00C9     TCNT2=0xb2;
004137 ebe2      	LDI  R30,LOW(178)
004138 93e0 00b2 	STS  178,R30
                 ; 0003 00CA     OCR2A=0x00;
00413a e0e0      	LDI  R30,LOW(0)
00413b 93e0 00b3 	STS  179,R30
                 ; 0003 00CB     OCR2B=0x00;
00413d 93e0 00b4 	STS  180,R30
                 ; 0003 00CC 
                 ; 0003 00CD     // Timer/Counter 3 initialization
                 ; 0003 00CE     // Clock source: System Clock
                 ; 0003 00CF     // Clock value: 31.250 kHz
                 ; 0003 00D0     // Mode: Normal top=0xFFFF
                 ; 0003 00D1     // OC3A output: Discon.
                 ; 0003 00D2     // OC3B output: Discon.
                 ; 0003 00D3     // OC3C output: Discon.
                 ; 0003 00D4     // Noise Canceler: Off
                 ; 0003 00D5     // Input Capture on Falling Edge
                 ; 0003 00D6     // Timer3 Overflow Interrupt: On
                 ; 0003 00D7     // Input Capture Interrupt: Off
                 ; 0003 00D8     // Compare A Match Interrupt: Off
                 ; 0003 00D9     // Compare B Match Interrupt: Off
                 ; 0003 00DA     // Compare C Match Interrupt: Off
                 ; 0003 00DB     TCCR3A=0x00;
00413f 93e0 0090 	STS  144,R30
                 ; 0003 00DC     TCCR3B=0x04;
004141 e0e4      	LDI  R30,LOW(4)
004142 93e0 0091 	STS  145,R30
                 ; 0003 00DD     TCNT3H=0x85;
004144 940e bfcb 	CALL SUBOPT_0x92
                 ; 0003 00DE     TCNT3L=0xED;
                 ; 0003 00DF     ICR3H=0x00;
004146 e0e0      	LDI  R30,LOW(0)
004147 93e0 0097 	STS  151,R30
                 ; 0003 00E0     ICR3L=0x00;
004149 93e0 0096 	STS  150,R30
                 ; 0003 00E1     OCR3AH=0x00;
00414b 93e0 0099 	STS  153,R30
                 ; 0003 00E2     OCR3AL=0x00;
00414d 93e0 0098 	STS  152,R30
                 ; 0003 00E3     OCR3BH=0x00;
00414f 93e0 009b 	STS  155,R30
                 ; 0003 00E4     OCR3BL=0x00;
004151 93e0 009a 	STS  154,R30
                 ; 0003 00E5     OCR3CH=0x00;
004153 93e0 009d 	STS  157,R30
                 ; 0003 00E6     OCR3CL=0x00;
004155 93e0 009c 	STS  156,R30
                 ; 0003 00E7 
                 ; 0003 00E8     // Timer/Counter 4 initialization
                 ; 0003 00E9     // Clock source: System Clock
                 ; 0003 00EA     // Clock value: 125.000 kHz
                 ; 0003 00EB     // Mode: Normal top=0xFFFF
                 ; 0003 00EC     // OC4A output: Discon.
                 ; 0003 00ED     // OC4B output: Discon.
                 ; 0003 00EE     // OC4C output: Discon.
                 ; 0003 00EF     // Noise Canceler: Off
                 ; 0003 00F0     // Input Capture on Falling Edge
                 ; 0003 00F1     // Timer4 Overflow Interrupt: On
                 ; 0003 00F2     // Input Capture Interrupt: Off
                 ; 0003 00F3     // Compare A Match Interrupt: Off
                 ; 0003 00F4     // Compare B Match Interrupt: Off
                 ; 0003 00F5     // Compare C Match Interrupt: Off
                 ; 0003 00F6     TCCR4A=0x00;
004157 93e0 00a0 	STS  160,R30
                 ; 0003 00F7     TCCR4B=0x03;
004159 e0e3      	LDI  R30,LOW(3)
00415a 93e0 00a1 	STS  161,R30
                 ; 0003 00F8     TCNT4H=0x85;
00415c 940e bfdb 	CALL SUBOPT_0x94
                 ; 0003 00F9     TCNT4L=0xED;
                 ; 0003 00FA     ICR4H=0x00;
00415e e0e0      	LDI  R30,LOW(0)
00415f 93e0 00a7 	STS  167,R30
                 ; 0003 00FB     ICR4L=0x00;
004161 93e0 00a6 	STS  166,R30
                 ; 0003 00FC     OCR4AH=0x00;
004163 93e0 00a9 	STS  169,R30
                 ; 0003 00FD     OCR4AL=0x00;
004165 93e0 00a8 	STS  168,R30
                 ; 0003 00FE     OCR4BH=0x00;
004167 93e0 00ab 	STS  171,R30
                 ; 0003 00FF     OCR4BL=0x00;
004169 93e0 00aa 	STS  170,R30
                 ; 0003 0100     OCR4CH=0x00;
00416b 93e0 00ad 	STS  173,R30
                 ; 0003 0101     OCR4CL=0x00;
00416d 93e0 00ac 	STS  172,R30
                 ; 0003 0102 
                 ; 0003 0103     // Timer/Counter 5 initialization
                 ; 0003 0104     // Clock source: System Clock
                 ; 0003 0105     // Clock value: Timer5 Stopped
                 ; 0003 0106     // Mode: Normal top=0xFFFF
                 ; 0003 0107     // OC5A output: Discon.
                 ; 0003 0108     // OC5B output: Discon.
                 ; 0003 0109     // OC5C output: Discon.
                 ; 0003 010A     // Noise Canceler: Off
                 ; 0003 010B     // Input Capture on Falling Edge
                 ; 0003 010C     // Timer5 Overflow Interrupt: Off
                 ; 0003 010D     // Input Capture Interrupt: Off
                 ; 0003 010E     // Compare A Match Interrupt: Off
                 ; 0003 010F     // Compare B Match Interrupt: Off
                 ; 0003 0110     // Compare C Match Interrupt: Off
                 ; 0003 0111     TCCR5A=0x00;
00416f 93e0 0120 	STS  288,R30
                 ; 0003 0112     TCCR5B=0x00;
004171 93e0 0121 	STS  289,R30
                 ; 0003 0113     TCNT5H=0x00;
004173 93e0 0125 	STS  293,R30
                 ; 0003 0114     TCNT5L=0x00;
004175 93e0 0124 	STS  292,R30
                 ; 0003 0115     ICR5H=0x00;
004177 93e0 0127 	STS  295,R30
                 ; 0003 0116     ICR5L=0x00;
004179 93e0 0126 	STS  294,R30
                 ; 0003 0117     OCR5AH=0x00;
00417b 93e0 0129 	STS  297,R30
                 ; 0003 0118     OCR5AL=0x00;
00417d 93e0 0128 	STS  296,R30
                 ; 0003 0119     OCR5BH=0x00;
00417f 93e0 012b 	STS  299,R30
                 ; 0003 011A     OCR5BL=0x00;
004181 93e0 012a 	STS  298,R30
                 ; 0003 011B     OCR5CH=0x00;
004183 93e0 012d 	STS  301,R30
                 ; 0003 011C     OCR5CL=0x00;
004185 93e0 012c 	STS  300,R30
                 ; 0003 011D 
                 ; 0003 011E     // Watchdog Timer initialization
                 ; 0003 011F     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0120     // Watchdog Timer interrupt: On
                 ; 0003 0121     #pragma optsize-
                 ; 0003 0122     #asm("wdr")
004187 95a8      	wdr
                 ; 0003 0123     WDTCSR=0x79;
004188 e7e9      	LDI  R30,LOW(121)
004189 93e0 0060 	STS  96,R30
                 ; 0003 0124     WDTCSR=0x69;
00418b e6e9      	LDI  R30,LOW(105)
00418c 93e0 0060 	STS  96,R30
                 ; 0003 0125 
                 ; 0003 0126     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 0127     #pragma optsize+
                 ; 0003 0128     #endif
                 ; 0003 0129 
                 ; 0003 012A 
                 ; 0003 012B     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 012C     TIMSK0=0x00;
00418e e0e0      	LDI  R30,LOW(0)
00418f 93e0 006e 	STS  110,R30
                 ; 0003 012D 
                 ; 0003 012E     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 012F     TIMSK1=0x00;
004191 93e0 006f 	STS  111,R30
                 ; 0003 0130 
                 ; 0003 0131     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0132     TIMSK2=0x00;
004193 93e0 0070 	STS  112,R30
                 ; 0003 0133 
                 ; 0003 0134     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0135     TIMSK3=0x00;
004195 93e0 0071 	STS  113,R30
                 ; 0003 0136 
                 ; 0003 0137     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0138     TIMSK4=0x00;
004197 93e0 0072 	STS  114,R30
                 ; 0003 0139 
                 ; 0003 013A     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 013B     TIMSK5=0x00;
004199 93e0 0073 	STS  115,R30
                 ; 0003 013C }
00419b 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 013F {
                 _enable_interrupt:
                 ; 0003 0140 
                 ; 0003 0141     // -------------- enable timer ---------------  //
                 ; 0003 0142 
                 ; 0003 0143     switch(ch){
00419c 940e bfe2 	CALL SUBOPT_0x95
                 ;	ch -> Y+0
                 ; 0003 0144         case 0: // Timer/Counter 0 Interrupt(s) initialization
00419e 9730      	SBIW R30,0
00419f f0f9      	BREQ _0x6001B
                 ; 0003 0145                 //TIMSK0=0x01;
                 ; 0003 0146                 break;
                 ; 0003 0147         case 1: // Timer/Counter 1 Interrupt(s) initialization
0041a0 30e1      	CPI  R30,LOW(0x1)
0041a1 e0a0      	LDI  R26,HIGH(0x1)
0041a2 07fa      	CPC  R31,R26
0041a3 f421      	BRNE _0x6001D
                 ; 0003 0148                 TIMSK1=0x01;
0041a4 e0e1      	LDI  R30,LOW(1)
0041a5 93e0 006f 	STS  111,R30
                 ; 0003 0149                 break;
0041a7 c017      	RJMP _0x6001B
                 ; 0003 014A         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
0041a8 30e2      	CPI  R30,LOW(0x2)
0041a9 e0a0      	LDI  R26,HIGH(0x2)
0041aa 07fa      	CPC  R31,R26
0041ab f421      	BRNE _0x6001E
                 ; 0003 014B                 TIMSK2=0x01;
0041ac e0e1      	LDI  R30,LOW(1)
0041ad 93e0 0070 	STS  112,R30
                 ; 0003 014C                 break;
0041af c00f      	RJMP _0x6001B
                 ; 0003 014D         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
0041b0 30e3      	CPI  R30,LOW(0x3)
0041b1 e0a0      	LDI  R26,HIGH(0x3)
0041b2 07fa      	CPC  R31,R26
0041b3 f421      	BRNE _0x6001F
                 ; 0003 014E                 TIMSK3=0x01;
0041b4 e0e1      	LDI  R30,LOW(1)
0041b5 93e0 0071 	STS  113,R30
                 ; 0003 014F                 break;
0041b7 c007      	RJMP _0x6001B
                 ; 0003 0150         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
0041b8 30e4      	CPI  R30,LOW(0x4)
0041b9 e0a0      	LDI  R26,HIGH(0x4)
0041ba 07fa      	CPC  R31,R26
0041bb f419      	BRNE _0x6001B
                 ; 0003 0151                 TIMSK4=0x01;
0041bc e0e1      	LDI  R30,LOW(1)
0041bd 93e0 0072 	STS  114,R30
                 ; 0003 0152                 break;
                 ; 0003 0153     }
                 _0x6001B:
                 ; 0003 0154     // Global enable interrupts
                 ; 0003 0155     #asm("sei")
0041bf 9478      	sei
                 ; 0003 0156 }
0041c0 9622      	ADIW R28,2
0041c1 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0159 {
                 ; 0003 015A 
                 ; 0003 015B     // -------------- enable timer ---------------  //
                 ; 0003 015C 
                 ; 0003 015D     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 015E         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 015F                 //TIMSK0=0x00;
                 ; 0003 0160                 break;
                 ; 0003 0161         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0162                 TIMSK1=0x00;
                 ; 0003 0163                 break;
                 ; 0003 0164         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0165                 TIMSK2=0x00;
                 ; 0003 0166                 break;
                 ; 0003 0167         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0168                 TIMSK3=0x00;
                 ; 0003 0169                 break;
                 ; 0003 016A         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 016B                 TIMSK4=0x00;
                 ; 0003 016C                 break;
                 ; 0003 016D     }
                 ; 0003 016E     // Global enable interrupts
                 ; 0003 016F     #asm("sei")
                 ; 0003 0170 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
0041c2 e0e0      	LDI  R30,LOW(0)
0041c3 b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
0041c4 e0e4      	LDI  R30,LOW(4)
0041c5 b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
0041c6 efef      	LDI  R30,LOW(255)
0041c7 b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
0041c8 efe7      	LDI  R30,LOW(247)
0041c9 b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
0041ca ece0      	LDI  R30,LOW(192)
0041cb b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
0041cc e0e0      	LDI  R30,LOW(0)
0041cd b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
0041ce e8e0      	LDI  R30,LOW(128)
0041cf b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
0041d0 e0e0      	LDI  R30,LOW(0)
0041d1 b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
0041d2 efec      	LDI  R30,LOW(252)
0041d3 b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
0041d4 b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
0041d5 e0e0      	LDI  R30,LOW(0)
0041d6 bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
0041d7 bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
0041d8 e3e0      	LDI  R30,LOW(48)
0041d9 bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
0041da bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
0041db efe8      	LDI  R30,LOW(248)
0041dc 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
0041de 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
0041e0 e8e0      	LDI  R30,LOW(128)
0041e1 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
0041e3 e0e0      	LDI  R30,LOW(0)
0041e4 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0041e6 940e bd1a 	CALL SUBOPT_0x2E
0041e8 f021      	BREQ _0x80005
0041e9 940e bd1a 	CALL SUBOPT_0x2E
0041eb 30e3      	CPI  R30,LOW(0x3)
0041ec f429      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054         PORTK=0x90;
0041ed e9e0      	LDI  R30,LOW(144)
0041ee 93e0 0108 	STS  264,R30
                 ; 0004 0055         DDRK=0x0E;
0041f0 e0ee      	LDI  R30,LOW(14)
0041f1 c00b      	RJMP _0x8003D
                 ; 0004 0056     }
                 ; 0004 0057     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
0041f2 940e bfe7 	CALL SUBOPT_0x96
0041f4 f021      	BREQ _0x80009
0041f5 940e bd1a 	CALL SUBOPT_0x2E
0041f7 30e2      	CPI  R30,LOW(0x2)
0041f8 f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 0058         // Port K initialization
                 ; 0004 0059         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005A         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 005B         PORTK=0x80;
0041f9 e8e0      	LDI  R30,LOW(128)
0041fa 93e0 0108 	STS  264,R30
                 ; 0004 005C         DDRK=0x00;
0041fc e0e0      	LDI  R30,LOW(0)
                 _0x8003D:
0041fd 93e0 0107 	STS  263,R30
                 ; 0004 005D     }
                 ; 0004 005E 
                 ; 0004 005F     // Port L initialization
                 ; 0004 0060     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0061     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0062     PORTL=0x00;
                 _0x80008:
0041ff e0e0      	LDI  R30,LOW(0)
004200 93e0 010b 	STS  267,R30
                 ; 0004 0063     DDRL=0x00;
004202 93e0 010a 	STS  266,R30
                 ; 0004 0064 
                 ; 0004 0065 }
004204 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 0068 {
                 _IO_dout:
                 ; 0004 0069     switch(ch){
004205 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
004206 81e9      	LDD  R30,Y+1
004207 81fa      	LDD  R31,Y+1+1
                 ; 0004 006A         case 0  :   DOUT1       =   !state;
004208 9730      	SBIW R30,0
004209 f451      	BRNE _0x8000E
00420a 81e8      	LD   R30,Y
00420b 30e0      	CPI  R30,0
00420c f011      	BREQ _0x8000F
00420d 9873      	CBI  0xE,3
00420e c001      	RJMP _0x80010
                 _0x8000F:
00420f 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 006B                     d_out[0]    =   state;
004210 81e8      	LD   R30,Y
004211 93e0 1434 	STS  _d_out,R30
                 ; 0004 006C                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 006D                     break;
004213 c00d      	RJMP _0x8000D
                 ; 0004 006E         case 1  :   DOUT2       =   !state;
                 _0x8000E:
004214 30e1      	CPI  R30,LOW(0x1)
004215 e0a0      	LDI  R26,HIGH(0x1)
004216 07fa      	CPC  R31,R26
004217 f449      	BRNE _0x80014
004218 81e8      	LD   R30,Y
004219 30e0      	CPI  R30,0
00421a f011      	BREQ _0x80012
00421b 9874      	CBI  0xE,4
00421c c001      	RJMP _0x80013
                 _0x80012:
00421d 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 006F                     d_out[1]    =   state;
00421e 81e8      	LD   R30,Y
                +
00421f 93e0 1435+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0070                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0071                     break;
                 ; 0004 0072         default :   break;
                 _0x80014:
                 ; 0004 0073     }
                 _0x8000D:
                 ; 0004 0074 }
004221 c0f1      	RJMP _0x20E0097
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 0077 {
                 _IO_keyCheck:
                 ; 0004 0078     static char flag_hold_MODE   = 0;
                 ; 0004 0079     static char flag_hold_UP     = 0;
                 ; 0004 007A     static char flag_hold_DOWN   = 0;
                 ; 0004 007B     static char flag_hold_OK     = 0;
                 ; 0004 007C 
                 ; 0004 007D     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
004222 940e bff4 	CALL SUBOPT_0x97
004224 f421      	BRNE _0x80016
004225 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004227 30e0      	CPI  R30,0
004228 f009      	BREQ _0x80017
                 _0x80016:
004229 c00f      	RJMP _0x80015
                 _0x80017:
                 ; 0004 007E     {
                 ; 0004 007F         delay_ms(KEY_DELAY);
00422a 940e bffb 	CALL SUBOPT_0x98
                 ; 0004 0080 
                 ; 0004 0081         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
00422c 940e bff4 	CALL SUBOPT_0x97
00422e f421      	BRNE _0x80019
00422f 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004231 30e0      	CPI  R30,0
004232 f009      	BREQ _0x8001A
                 _0x80019:
004233 c004      	RJMP _0x80018
                 _0x8001A:
                 ; 0004 0082         {
                 ; 0004 0083             flag_hold_MODE = 1;
004234 e0e1      	LDI  R30,LOW(1)
004235 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0084             return 0;
004237 c092      	RJMP _0x20E0098
                 ; 0004 0085         }
                 ; 0004 0086     }
                 _0x80018:
                 ; 0004 0087     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
004238 c013      	RJMP _0x8001B
                 _0x80015:
004239 940e bff4 	CALL SUBOPT_0x97
00423b f021      	BREQ _0x8001D
00423c 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
00423e 30e0      	CPI  R30,0
00423f f409      	BRNE _0x8001E
                 _0x8001D:
004240 c00b      	RJMP _0x8001C
                 _0x8001E:
                 ; 0004 0088     {
                 ; 0004 0089         printDebug("<IO_keyCheck> key MODE\r\n");
                +
004241 e6e0     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
004242 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
004243 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 0 ) )
004244 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 0 ) )
                 	__POINTD1FN _0x80000,0
004245 940e bbec 	CALL SUBOPT_0x3
                 ; 0004 008A         flag_hold_MODE = 0;
004247 e0e0      	LDI  R30,LOW(0)
004248 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 008B         return KEY_MODE;
00424a e0e1      	LDI  R30,LOW(1)
00424b 9508      	RET
                 ; 0004 008C     }
                 ; 0004 008D 
                 ; 0004 008E     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 _0x8001C:
                 _0x8001B:
00424c 940e bfff 	CALL SUBOPT_0x99
00424e f421      	BRNE _0x80020
00424f 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
004251 30e0      	CPI  R30,0
004252 f009      	BREQ _0x80021
                 _0x80020:
004253 c00f      	RJMP _0x8001F
                 _0x80021:
                 ; 0004 008F     {
                 ; 0004 0090         delay_ms(KEY_DELAY);
004254 940e bffb 	CALL SUBOPT_0x98
                 ; 0004 0091 
                 ; 0004 0092         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
004256 940e bfff 	CALL SUBOPT_0x99
004258 f421      	BRNE _0x80023
004259 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
00425b 30e0      	CPI  R30,0
00425c f009      	BREQ _0x80024
                 _0x80023:
00425d c004      	RJMP _0x80022
                 _0x80024:
                 ; 0004 0093         {
                 ; 0004 0094             flag_hold_UP = 1;
00425e e0e1      	LDI  R30,LOW(1)
00425f 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 0095             return 0;
004261 c068      	RJMP _0x20E0098
                 ; 0004 0096         }
                 ; 0004 0097     }
                 _0x80022:
                 ; 0004 0098     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
004262 c013      	RJMP _0x80025
                 _0x8001F:
004263 940e bfff 	CALL SUBOPT_0x99
004265 f021      	BREQ _0x80027
004266 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
004268 30e0      	CPI  R30,0
004269 f409      	BRNE _0x80028
                 _0x80027:
00426a c00b      	RJMP _0x80026
                 _0x80028:
                 ; 0004 0099     {
                 ; 0004 009A         printDebug("<IO_keyCheck> key UP\r\n");
                +
00426b e7e9     +LDI R30 , LOW ( 2 * _0x80000 + ( 25 ) )
00426c e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 25 ) )
00426d e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 25 ) )
00426e e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 25 ) )
                 	__POINTD1FN _0x80000,25
00426f 940e bbec 	CALL SUBOPT_0x3
                 ; 0004 009B         flag_hold_UP = 0;
004271 e0e0      	LDI  R30,LOW(0)
004272 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 009C         return KEY_UP;
004274 e0e2      	LDI  R30,LOW(2)
004275 9508      	RET
                 ; 0004 009D     }
                 ; 0004 009E 
                 ; 0004 009F     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 _0x80026:
                 _0x80025:
004276 940e c008 	CALL SUBOPT_0x9A
004278 f421      	BRNE _0x8002A
004279 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
00427b 30e0      	CPI  R30,0
00427c f009      	BREQ _0x8002B
                 _0x8002A:
00427d c00f      	RJMP _0x80029
                 _0x8002B:
                 ; 0004 00A0     {
                 ; 0004 00A1         delay_ms(KEY_DELAY);
00427e 940e bffb 	CALL SUBOPT_0x98
                 ; 0004 00A2 
                 ; 0004 00A3         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
004280 940e c008 	CALL SUBOPT_0x9A
004282 f421      	BRNE _0x8002D
004283 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004285 30e0      	CPI  R30,0
004286 f009      	BREQ _0x8002E
                 _0x8002D:
004287 c004      	RJMP _0x8002C
                 _0x8002E:
                 ; 0004 00A4         {
                 ; 0004 00A5             flag_hold_DOWN = 1;
004288 e0e1      	LDI  R30,LOW(1)
004289 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00A6             return 0;
00428b c03e      	RJMP _0x20E0098
                 ; 0004 00A7         }
                 ; 0004 00A8     }
                 _0x8002C:
                 ; 0004 00A9     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
00428c c013      	RJMP _0x8002F
                 _0x80029:
00428d 940e c008 	CALL SUBOPT_0x9A
00428f f021      	BREQ _0x80031
004290 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004292 30e0      	CPI  R30,0
004293 f409      	BRNE _0x80032
                 _0x80031:
004294 c00b      	RJMP _0x80030
                 _0x80032:
                 ; 0004 00AA     {
                 ; 0004 00AB         printDebug("<IO_keyCheck> key DOWN\r\n");
                +
004295 e9e0     +LDI R30 , LOW ( 2 * _0x80000 + ( 48 ) )
004296 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 48 ) )
004297 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 48 ) )
004298 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 48 ) )
                 	__POINTD1FN _0x80000,48
004299 940e bbec 	CALL SUBOPT_0x3
                 ; 0004 00AC         flag_hold_DOWN = 0;
00429b e0e0      	LDI  R30,LOW(0)
00429c 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00AD         return KEY_DOWN;
00429e e0e3      	LDI  R30,LOW(3)
00429f 9508      	RET
                 ; 0004 00AE     }
                 ; 0004 00AF 
                 ; 0004 00B0     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 _0x80030:
                 _0x8002F:
0042a0 940e c011 	CALL SUBOPT_0x9B
0042a2 f421      	BRNE _0x80034
0042a3 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0042a5 30e0      	CPI  R30,0
0042a6 f009      	BREQ _0x80035
                 _0x80034:
0042a7 c00f      	RJMP _0x80033
                 _0x80035:
                 ; 0004 00B1     {
                 ; 0004 00B2         delay_ms(KEY_DELAY);
0042a8 940e bffb 	CALL SUBOPT_0x98
                 ; 0004 00B3 
                 ; 0004 00B4         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
0042aa 940e c011 	CALL SUBOPT_0x9B
0042ac f421      	BRNE _0x80037
0042ad 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0042af 30e0      	CPI  R30,0
0042b0 f009      	BREQ _0x80038
                 _0x80037:
0042b1 c004      	RJMP _0x80036
                 _0x80038:
                 ; 0004 00B5         {
                 ; 0004 00B6             flag_hold_OK = 1;
0042b2 e0e1      	LDI  R30,LOW(1)
0042b3 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00B7             return 0;
0042b5 c014      	RJMP _0x20E0098
                 ; 0004 00B8         }
                 ; 0004 00B9     }
                 _0x80036:
                 ; 0004 00BA     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
0042b6 c013      	RJMP _0x80039
                 _0x80033:
0042b7 940e c011 	CALL SUBOPT_0x9B
0042b9 f021      	BREQ _0x8003B
0042ba 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0042bc 30e0      	CPI  R30,0
0042bd f409      	BRNE _0x8003C
                 _0x8003B:
0042be c00b      	RJMP _0x8003A
                 _0x8003C:
                 ; 0004 00BB     {
                 ; 0004 00BC         printDebug("<IO_keyCheck> key OK\r\n");
                +
0042bf eae9     +LDI R30 , LOW ( 2 * _0x80000 + ( 73 ) )
0042c0 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 73 ) )
0042c1 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 73 ) )
0042c2 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 73 ) )
                 	__POINTD1FN _0x80000,73
0042c3 940e bbec 	CALL SUBOPT_0x3
                 ; 0004 00BD         flag_hold_OK = 0;
0042c5 e0e0      	LDI  R30,LOW(0)
0042c6 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00BE         return KEY_OK;
0042c8 e0e4      	LDI  R30,LOW(4)
0042c9 9508      	RET
                 ; 0004 00BF     }
                 ; 0004 00C0 
                 ; 0004 00C1     return 0;
                 _0x8003A:
                 _0x80039:
                 _0x20E0098:
0042ca e0e0      	LDI  R30,LOW(0)
0042cb 9508      	RET
                 ; 0004 00C2 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     unsigned int adc_data = 0x0000;
                 ; 0005 0012 
                 ; 0005 0013     ADMUX  &= ADC_VREF_TYPE;
0042cc 93aa      	ST   -Y,R26
0042cd 940e c01a 	CALL SUBOPT_0x9C
                 ;	adc_input -> Y+2
                 ;	adc_data -> R16,R17
0042cf 91e0 007c 	LDS  R30,124
0042d1 7ce0      	ANDI R30,LOW(0xC0)
0042d2 93e0 007c 	STS  124,R30
                 ; 0005 0014     ADCSRB &= 0xf7;
0042d4 91e0 007b 	LDS  R30,123
0042d6 7fe7      	ANDI R30,0XF7
0042d7 93e0 007b 	STS  123,R30
                 ; 0005 0015 
                 ; 0005 0016     ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
0042d9 e7ac      	LDI  R26,LOW(124)
0042da e0b0      	LDI  R27,HIGH(124)
0042db 2e0a      	MOV  R0,R26
0042dc 91ac      	LD   R26,X
0042dd 81ea      	LDD  R30,Y+2
0042de 70e7      	ANDI R30,LOW(0x7)
0042df 6ce0      	ORI  R30,LOW(0xC0)
0042e0 2bea      	OR   R30,R26
0042e1 2da0      	MOV  R26,R0
0042e2 93ec      	ST   X,R30
                 ; 0005 0017 
                 ; 0005 0018     if(adc_input > 7)
0042e3 81aa      	LDD  R26,Y+2
0042e4 30a8      	CPI  R26,LOW(0x8)
0042e5 f020      	BRLO _0xA0003
                 ; 0005 0019     {
                 ; 0005 001A         ADCSRB |= 0x08;
0042e6 91e0 007b 	LDS  R30,123
0042e8 60e8      	ORI  R30,8
0042e9 c003      	RJMP _0xA0020
                 ; 0005 001B     }
                 ; 0005 001C     else
                 _0xA0003:
                 ; 0005 001D     {
                 ; 0005 001E         ADCSRB &= 0xf7;
0042ea 91e0 007b 	LDS  R30,123
0042ec 7fe7      	ANDI R30,0XF7
                 _0xA0020:
0042ed 93e0 007b 	STS  123,R30
                 ; 0005 001F     }
                 ; 0005 0020 
                 ; 0005 0021     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0022     //delay_us(20);
                 ; 0005 0023     delay_us(2);     //bongkot edit
                +
0042ef e085     +LDI R24 , LOW ( 5 )
                +__DELAY_USB_LOOP :
0042f0 958a     +DEC R24
0042f1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 5
                 ; 0005 0024 
                 ; 0005 0025     // Start the AD conversion
                 ; 0005 0026     ADCSRA  |= 0x80; //ENABLE ADC
0042f2 91e0 007a 	LDS  R30,122
0042f4 68e0      	ORI  R30,0x80
0042f5 93e0 007a 	STS  122,R30
                 ; 0005 0027     ADCSRA  |= 0x40;
0042f7 91e0 007a 	LDS  R30,122
0042f9 64e0      	ORI  R30,0x40
0042fa 93e0 007a 	STS  122,R30
                 ; 0005 0028 
                 ; 0005 0029     // Wait for the AD conversion to complete
                 ; 0005 002A     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 002B     while ( (ADCSRA & 0x10)==0);
                 _0xA0005:
0042fc 91e0 007a 	LDS  R30,122
0042fe 71e0      	ANDI R30,LOW(0x10)
0042ff f3e1      	BREQ _0xA0005
                 ; 0005 002C     adc_data = ADCL;
004300 9100 0078 	LDS  R16,120
004302 2711      	CLR  R17
                 ; 0005 002D     adc_data |= (ADCH & 0x00ff) << 8;
004303 91e0 0079 	LDS  R30,121
004305 940e c01f 	CALL SUBOPT_0x9D
004307 2ffe      	MOV  R31,R30
004308 e0e0      	LDI  R30,0
                +
004309 2b0e     +OR R16 , R30
00430a 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
                 ; 0005 002E 
                 ; 0005 002F     ADCSRA  |=0x10;
00430b 91e0 007a 	LDS  R30,122
00430d 61e0      	ORI  R30,0x10
00430e 93e0 007a 	STS  122,R30
                 ; 0005 0030 
                 ; 0005 0031     //delay_us(50);
                 ; 0005 0032     //delay_us(4);     //bongkot edit
                 ; 0005 0033 
                 ; 0005 0034     return adc_data;
004310 01f8      	MOVW R30,R16
004311 8119      	LDD  R17,Y+1
004312 8108      	LDD  R16,Y+0
                 _0x20E0097:
004313 9623      	ADIW R28,3
004314 9508      	RET
                 ; 0005 0035 }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 0038 {
                 ; 0005 0039     static int      i = 0;
                 ; 0005 003A     static char     batt_read_flag = 0;
                 ; 0005 003B 
                 ; 0005 003C     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 003D         /*
                 ; 0005 003E         printDebug("<%d>",i);
                 ; 0005 003F         SENSOR_SELECT(i);
                 ; 0005 0040         delay_ms(20);
                 ; 0005 0041         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0042         if(++i >= 5){   i = 0;  }
                 ; 0005 0043         */
                 ; 0005 0044     }
                 ; 0005 0045     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 0046 //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 0047 //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 0048 //        }
                 ; 0005 0049     }
                 ; 0005 004A 
                 ; 0005 004B //    if(++batt_read_flag > 25){
                 ; 0005 004C //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 004D //        batt_read_flag = 0;
                 ; 0005 004E //    }
                 ; 0005 004F 
                 ; 0005 0050     return 0;
                 ; 0005 0051 }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 0054 {
                 _readBattery:
                 ; 0005 0055     float   vBATT;
                 ; 0005 0056 
                 ; 0005 0057     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
004315 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
004316 940e c022 	CALL SUBOPT_0x9E
                +
004318 e6e6     +LDI R30 , LOW ( 0x411E6666 )
004319 e6f6     +LDI R31 , HIGH ( 0x411E6666 )
00431a e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
00431b e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
00431c 940e d7dd 	CALL __MULF12
00431e 937f      	PUSH R23
00431f 936f      	PUSH R22
004320 93ff      	PUSH R31
004321 93ef      	PUSH R30
004322 e0ae      	LDI  R26,LOW(14)
004323 dfa8      	RCALL _read_adc
004324 940e c02b 	CALL SUBOPT_0x9F
004326 940e c030 	CALL SUBOPT_0xA0
004328 91af      	POP  R26
004329 91bf      	POP  R27
00432a 918f      	POP  R24
00432b 919f      	POP  R25
00432c 940e c037 	CALL SUBOPT_0xA1
00432e 93e0 14e8 	STS  _adcBatt,R30
004330 93f0 14e9 	STS  _adcBatt+1,R31
004332 9360 14ea 	STS  _adcBatt+2,R22
004334 9370 14eb 	STS  _adcBatt+3,R23
                 ; 0005 0058     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
004336 940e bd36 	CALL SUBOPT_0x32
004338 940e c022 	CALL SUBOPT_0x9E
00433a 940e d7dd 	CALL __MULF12
                +
00433c e6a6     +LDI R26 , LOW ( 0x3FE66666 )
00433d e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
00433e ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
00433f e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
004340 940e c042 	CALL SUBOPT_0xA2
                 ; 0005 0059     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 005A 
                 ; 0005 005B     return vBATT;
004342 940e bf7f 	CALL SUBOPT_0x87
                 _0x20E0096:
004344 9624      	ADIW R28,4
004345 9508      	RET
                 ; 0005 005C }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 005F {
                 _adc_init_read:
                 ; 0005 0060     int i;
                 ; 0005 0061     printDebug("Initializing ADC.. ");
004346 931a      	ST   -Y,R17
004347 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
004348 ece0     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
004349 e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
00434a e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
00434b e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
00434c 940e bbec 	CALL SUBOPT_0x3
                 ; 0005 0062 
                 ; 0005 0063     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00434e 940e bd1a 	CALL SUBOPT_0x2E
004350 f021      	BREQ _0xA0010
004351 940e bd1a 	CALL SUBOPT_0x2E
004353 30e3      	CPI  R30,LOW(0x3)
004354 f4d1      	BRNE _0xA000F
                 _0xA0010:
                 ; 0005 0064         for(i=0;i<5;i++){ \
                 ; 0005 0065             SENSOR_SELECT(i);
                +
004355 e000     +LDI R16 , LOW ( 0 )
004356 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0013:
                +
004357 3005     +CPI R16 , LOW ( 5 )
004358 e0e0     +LDI R30 , HIGH ( 5 )
004359 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00435a f49c      	BRGE _0xA0014
00435b 940e c047 	CALL SUBOPT_0xA3
00435d 2fe0      	MOV  R30,R16
00435e 940e c051 	CALL SUBOPT_0xA4
                 ; 0005 0066             delay_ms(20);
                 ; 0005 0067             adcData[i] = read_adc(8);
004360 01f8      	MOVW R30,R16
004361 940e c059 	CALL SUBOPT_0xA5
004363 93ff      	PUSH R31
004364 93ef      	PUSH R30
004365 e0a8      	LDI  R26,LOW(8)
004366 df65      	RCALL _read_adc
004367 91af      	POP  R26
004368 91bf      	POP  R27
004369 940e c05c 	CALL SUBOPT_0xA6
                 ; 0005 0068         }
                +
00436b 5f0f     +SUBI R16 , LOW ( - 1 )
00436c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00436d cfe9      	RJMP _0xA0013
                 _0xA0014:
                 ; 0005 0069     }
                 ; 0005 006A     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
00436e c025      	RJMP _0xA0015
                 _0xA000F:
00436f 940e bfe7 	CALL SUBOPT_0x96
004371 f021      	BREQ _0xA0017
004372 940e bd1a 	CALL SUBOPT_0x2E
004374 30e2      	CPI  R30,LOW(0x2)
004375 f4f1      	BRNE _0xA0016
                 _0xA0017:
                 ; 0005 006B         adcData[0] = read_adc(8);
004376 e0a8      	LDI  R26,LOW(8)
004377 df54      	RCALL _read_adc
004378 e3a6      	LDI  R26,LOW(_adcData)
004379 e1b4      	LDI  R27,HIGH(_adcData)
00437a 940e c05c 	CALL SUBOPT_0xA6
                 ; 0005 006C         adcData[1] = read_adc(9);
00437c e0a9      	LDI  R26,LOW(9)
00437d df4e      	RCALL _read_adc
                +
00437e e3aa     +LDI R26 , LOW ( _adcData + ( 4 ) )
00437f e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
004380 940e c05c 	CALL SUBOPT_0xA6
                 ; 0005 006D         adcData[2] = read_adc(10);
004382 e0aa      	LDI  R26,LOW(10)
004383 df48      	RCALL _read_adc
                +
004384 e3ae     +LDI R26 , LOW ( _adcData + ( 8 ) )
004385 e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
004386 940e c05c 	CALL SUBOPT_0xA6
                 ; 0005 006E         adcData[3] = read_adc(11);
004388 e0ab      	LDI  R26,LOW(11)
004389 df42      	RCALL _read_adc
                +
00438a e4a2     +LDI R26 , LOW ( _adcData + ( 12 ) )
00438b e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
00438c 940e c05c 	CALL SUBOPT_0xA6
                 ; 0005 006F         adcData[4] = read_adc(12);
00438e e0ac      	LDI  R26,LOW(12)
00438f df3c      	RCALL _read_adc
                +
004390 e4a6     +LDI R26 , LOW ( _adcData + ( 16 ) )
004391 e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
004392 940e c05c 	CALL SUBOPT_0xA6
                 ; 0005 0070     }
                 ; 0005 0071 
                 ; 0005 0072     adcBatt = read_adc(14);
                 _0xA0016:
                 _0xA0015:
004394 e0ae      	LDI  R26,LOW(14)
004395 df36      	RCALL _read_adc
004396 eea8      	LDI  R26,LOW(_adcBatt)
004397 e1b4      	LDI  R27,HIGH(_adcBatt)
004398 940e c05c 	CALL SUBOPT_0xA6
                 ; 0005 0073 
                 ; 0005 0074     printDebug("OK\r\n");
                +
00439a ede4     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
00439b e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
00439c e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
00439d e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
00439e 940e bbec 	CALL SUBOPT_0x3
                 ; 0005 0075 }
0043a0 9109      	LD   R16,Y+
0043a1 9119      	LD   R17,Y+
0043a2 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 0078 {
                 _init_adc:
                 ; 0005 0079     // ADC initialization
                 ; 0005 007A     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 007B     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 007C     // ADC Auto Trigger Source: Free Running
                 ; 0005 007D     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 007E     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 007F     DIDR0=0x00;
0043a3 e0e0      	LDI  R30,LOW(0)
0043a4 93e0 007e 	STS  126,R30
                 ; 0005 0080 
                 ; 0005 0081 
                 ; 0005 0082     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0043a6 940e bd1a 	CALL SUBOPT_0x2E
0043a8 f021      	BREQ _0xA001A
0043a9 940e bd1a 	CALL SUBOPT_0x2E
0043ab 30e3      	CPI  R30,LOW(0x3)
0043ac f411      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0083         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 0084         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0085         DIDR2=0x61;
0043ad e6e1      	LDI  R30,LOW(97)
0043ae c008      	RJMP _0xA0021
                 ; 0005 0086     }
                 ; 0005 0087     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0xA0019:
0043af 940e bfe7 	CALL SUBOPT_0x96
0043b1 f021      	BREQ _0xA001E
0043b2 940e bd1a 	CALL SUBOPT_0x2E
0043b4 30e2      	CPI  R30,LOW(0x2)
0043b5 f419      	BRNE _0xA001D
                 _0xA001E:
                 ; 0005 0088         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0089         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 008A         DIDR2=0x7F;
0043b6 e7ef      	LDI  R30,LOW(127)
                 _0xA0021:
0043b7 93e0 007d 	STS  125,R30
                 ; 0005 008B     }
                 ; 0005 008C 
                 ; 0005 008D     ADMUX   = ADC_VREF_TYPE;
                 _0xA001D:
0043b9 ece0      	LDI  R30,LOW(192)
0043ba 93e0 007c 	STS  124,R30
                 ; 0005 008E     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 008F               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 0090               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 0091               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 0092               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 0093               (1<<2) |          //-----
                 ; 0005 0094               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 0095               (0<<0);           //-----
0043bc e8e6      	LDI  R30,LOW(134)
0043bd 93e0 007a 	STS  122,R30
                 ; 0005 0096 
                 ; 0005 0097     ADCSRB  = 0;
0043bf e0e0      	LDI  R30,LOW(0)
0043c0 93e0 007b 	STS  123,R30
                 ; 0005 0098 
                 ; 0005 0099     //adc_init_read();
                 ; 0005 009A }
0043c2 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
0043c3 94f8      	cli
                 ; 0006 000E     i2c_start();
0043c4 940e c060 	CALL SUBOPT_0xA7
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
0043c6 e0a5      	LDI  R26,LOW(5)
0043c7 940e d6c5 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
0043c9 eaa6      	LDI  R26,LOW(166)
0043ca 940e c065 	CALL SUBOPT_0xA8
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
0043cc 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
0043cd 940e c069 	CALL SUBOPT_0xA9
                 ; 0006 0017 
                 ; 0006 0018     return 0;
0043cf 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
0043d0 9724      	SBIW R28,4
0043d1 940e da9b 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
0043d3 94f8      	cli
                 ; 0006 0021     i2c_start();
0043d4 940e c060 	CALL SUBOPT_0xA7
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
0043d6 e0a0      	LDI  R26,LOW(0)
0043d7 940e d6c5 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
0043d9 940e d691 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
0043db eda1      	LDI  R26,LOW(209)
0043dc 940e d6c5 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
0043de e0a1      	LDI  R26,LOW(1)
0043df 940e d6aa 	CALL _i2c_read
0043e1 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
0043e2 e0a1      	LDI  R26,LOW(1)
0043e3 940e d6aa 	CALL _i2c_read
0043e5 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
0043e6 e0a1      	LDI  R26,LOW(1)
0043e7 940e d6aa 	CALL _i2c_read
0043e9 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
0043ea e0a0      	LDI  R26,LOW(0)
0043eb 940e d6aa 	CALL _i2c_read
0043ed 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
0043ee 940e d6a0 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
0043f0 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
0043f1 2fe2      	MOV  R30,R18
0043f2 27ff      	CLR  R31
0043f3 2766      	CLR  R22
0043f4 2777      	CLR  R23
0043f5 940e c070 	CALL SUBOPT_0xAA
                 ; 0006 002E     z <<= 8;
0043f7 940e c075 	CALL SUBOPT_0xAB
0043f9 940e c07a 	CALL SUBOPT_0xAC
                 ; 0006 002F     z += rtc_reg3;
0043fb 2fe3      	MOV  R30,R19
0043fc 940e c07e 	CALL SUBOPT_0xAD
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
0043fe 2fe0      	MOV  R30,R16
0043ff 940e c07e 	CALL SUBOPT_0xAD
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
004401 940e c087 	CALL SUBOPT_0xAE
004403 940e c075 	CALL SUBOPT_0xAB
004405 940e c08a 	CALL SUBOPT_0xAF
004407 940e c08f 	CALL SUBOPT_0xB0
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
004409 940e daa2 	CALL __LOADLOCR4
00440b 9628      	ADIW R28,8
00440c 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
00440d 93ba      	ST   -Y,R27
00440e 93aa      	ST   -Y,R26
00440f 97a8      	SBIW R28,40
004410 e08c      	LDI  R24,12
004411 e1ac      	LDI  R26,LOW(28)
004412 e0b0      	LDI  R27,HIGH(28)
004413 edea      	LDI  R30,LOW(_0xC0003*2)
004414 e1f1      	LDI  R31,HIGH(_0xC0003*2)
004415 e060      	LDI  R22,BYTE3(_0xC0003*2)
004416 940e daa7 	CALL __INITLOCB
004418 931a      	ST   -Y,R17
004419 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
                +
00441a a5ac     +LDD R26 , Y + 44
00441b a5bd     +LDD R27 , Y + 44 + 1
00441c a58e     +LDD R24 , Y + 44 + 2
00441d a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
00441e 940e c091 	CALL SUBOPT_0xB1
004420 940e c098 	CALL SUBOPT_0xB2
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
004422 940e c09d 	CALL SUBOPT_0xB3
                +
004424 a5ac     +LDD R26 , Y + 44
004425 a5bd     +LDD R27 , Y + 44 + 1
004426 a58e     +LDD R24 , Y + 44 + 2
004427 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
004428 940e d8a3 	CALL __SUBD21
                +
00442a 87aa     +STD Y + 10 , R26
00442b 87bb     +STD Y + 10 + 1 , R27
00442c 878c     +STD Y + 10 + 2 , R24
00442d 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
00442e 940e be50 	CALL SUBOPT_0x59
004430 940e c091 	CALL SUBOPT_0xB1
004432 940e c0a4 	CALL SUBOPT_0xB4
                 ; 0006 0044     min = j - (60 * n);
004434 940e c0a9 	CALL SUBOPT_0xB5
004436 940e c09d 	CALL SUBOPT_0xB3
004438 940e be50 	CALL SUBOPT_0x59
00443a 940e d8a3 	CALL __SUBD21
                +
00443c 87ae     +STD Y + 14 , R26
00443d 87bf     +STD Y + 14 + 1 , R27
00443e 8b88     +STD Y + 14 + 2 , R24
00443f 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
004440 940e c0ae 	CALL SUBOPT_0xB6
                +
004442 e1e8     +LDI R30 , LOW ( 0x18 )
004443 e0f0     +LDI R31 , HIGH ( 0x18 )
004444 e060     +LDI R22 , BYTE3 ( 0x18 )
004445 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
004446 940e d990 	CALL __DIVD21U
004448 940e c098 	CALL SUBOPT_0xB2
                 ; 0006 0046     hrs = n - (24 * j);
                +
00444a e1a8     +LDI R26 , LOW ( 0x18 )
00444b e0b0     +LDI R27 , HIGH ( 0x18 )
00444c e080     +LDI R24 , BYTE3 ( 0x18 )
00444d e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
00444e 940e d93a 	CALL __MULD12U
004450 940e c0ae 	CALL SUBOPT_0xB6
004452 940e d8a3 	CALL __SUBD21
                +
004454 8baa     +STD Y + 18 , R26
004455 8bbb     +STD Y + 18 + 1 , R27
004456 8b8c     +STD Y + 18 + 2 , R24
004457 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
004458 940e c0b3 	CALL SUBOPT_0xB7
                +
00445a 52e5     +SUBI R30 , LOW ( - 731 )
00445b 4ffd     +SBCI R31 , HIGH ( - 731 )
00445c 4f6f     +SBCI R22 , BYTE3 ( - 731 )
00445d 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
00445e 940e c0b8 	CALL SUBOPT_0xB8
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
004460 940e be50 	CALL SUBOPT_0x59
                +
004462 e0e7     +LDI R30 , LOW ( 0x7 )
004463 e0f0     +LDI R31 , HIGH ( 0x7 )
004464 e060     +LDI R22 , BYTE3 ( 0x7 )
004465 e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
004466 940e d9d2 	CALL __MODD21U
004468 9631      	ADIW R30,1
004469 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
00446a 940e c0bd 	CALL SUBOPT_0xB9
00446c 940e d990 	CALL __DIVD21U
00446e 940e c0c3 	CALL SUBOPT_0xBA
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
004470 940e c0bd 	CALL SUBOPT_0xB9
004472 940e d9d2 	CALL __MODD21U
                +
004474 8fea     +STD Y + 26 , R30
004475 8ffb     +STD Y + 26 + 1 , R31
004476 8f6c     +STD Y + 26 + 2 , R22
004477 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
004478 940e c0c8 	CALL SUBOPT_0xBB
00447a 940e c0cd 	CALL SUBOPT_0xBC
00447c f030      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
00447d 940e c0d5 	CALL SUBOPT_0xBD
00447f 940e c0da 	CALL SUBOPT_0xBE
004481 940e c0c3 	CALL SUBOPT_0xBA
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
004483 940e c0df 	CALL SUBOPT_0xBF
004485 940e c0b3 	CALL SUBOPT_0xB7
004487 940e d89e 	CALL __SUBD12
004489 01df      	MOVW R26,R30
00448a 01cb      	MOVW R24,R22
                +
00448b e6ed     +LDI R30 , LOW ( 0x16D )
00448c e0f1     +LDI R31 , HIGH ( 0x16D )
00448d e060     +LDI R22 , BYTE3 ( 0x16D )
00448e e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
00448f 940e d990 	CALL __DIVD21U
                +
004491 a3ee     +STD Y + 38 , R30
004492 a3ff     +STD Y + 38 + 1 , R31
004493 a768     +STD Y + 38 + 2 , R22
004494 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
004495 940e c0e4 	CALL SUBOPT_0xC0
004497 940e c0e9 	CALL SUBOPT_0xC1
004499 940e be50 	CALL SUBOPT_0x59
00449b 940e c0f0 	CALL SUBOPT_0xC2
00449d 940e c0df 	CALL SUBOPT_0xBF
00449f 940e d89e 	CALL __SUBD12
0044a1 940e c0f5 	CALL SUBOPT_0xC3
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
0044a3 940e c0c8 	CALL SUBOPT_0xBB
                +
0044a5 36ae     +CPI R26 , LOW ( 0x16E )
0044a6 e0e1     +LDI R30 , HIGH ( 0x16E )
0044a7 07be     +CPC R27 , R30
0044a8 e0e0     +LDI R30 , BYTE3 ( 0x16E )
0044a9 078e     +CPC R24 , R30
0044aa e0e0     +LDI R30 , BYTE4 ( 0x16E )
0044ab 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
0044ac f428      	BRSH _0xC0006
0044ad 940e c0c8 	CALL SUBOPT_0xBB
0044af 940e c0cd 	CALL SUBOPT_0xBC
0044b1 f408      	BRSH _0xC0007
                 _0xC0006:
0044b2 c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
0044b3 940e c0fa 	CALL SUBOPT_0xC4
0044b5 940e c0da 	CALL SUBOPT_0xBE
0044b7 940e c0f5 	CALL SUBOPT_0xC3
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
0044b9 940e c0e4 	CALL SUBOPT_0xC0
                +
0044bb 55e0     +SUBI R30 , LOW ( - 1968 )
0044bc 4ff8     +SBCI R31 , HIGH ( - 1968 )
0044bd 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
0044be 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
0044bf a3ee     +STD Y + 38 , R30
0044c0 a3ff     +STD Y + 38 + 1 , R31
0044c1 a768     +STD Y + 38 + 2 , R22
0044c2 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
0044c3 e0ec     +LDI R30 , LOW ( 0xC )
0044c4 e0f0     +LDI R31 , HIGH ( 0xC )
0044c5 e060     +LDI R22 , BYTE3 ( 0xC )
0044c6 e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
0044c7 a3ea     +STD Y + 34 , R30
0044c8 a3fb     +STD Y + 34 + 1 , R31
0044c9 a36c     +STD Y + 34 + 2 , R22
0044ca a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
0044cb a1aa     +LDD R26 , Y + 34
0044cc a1bb     +LDD R27 , Y + 34 + 1
0044cd a18c     +LDD R24 , Y + 34 + 2
0044ce a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
0044cf 940e da89 	CALL __CPD02
0044d1 f010      	BRLO PC+3
0044d2 940c 455f 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
0044d4 940e c0ff 	CALL SUBOPT_0xC5
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
0044d6 940e c104 	CALL SUBOPT_0xC6
0044d8 f431      	BRNE _0xC000E
0044d9 e0e0      	LDI  R30,LOW(0)
                +
0044da 8fea     +STD Y + 26 , R30
0044db 8feb     +STD Y + 26 + 1 , R30
0044dc 8fec     +STD Y + 26 + 2 , R30
0044dd 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
0044de c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
0044df 940e c10c 	CALL SUBOPT_0xC7
0044e1 f429      	BRNE _0xC000F
                +
0044e2 e1ef     +LDI R30 , LOW ( 0x1F )
0044e3 e0f0     +LDI R31 , HIGH ( 0x1F )
0044e4 e060     +LDI R22 , BYTE3 ( 0x1F )
0044e5 e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
0044e6 c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
0044e7 940e c114 	CALL SUBOPT_0xC8
0044e9 f429      	BRNE _0xC0010
                +
0044ea e3eb     +LDI R30 , LOW ( 0x3B )
0044eb e0f0     +LDI R31 , HIGH ( 0x3B )
0044ec e060     +LDI R22 , BYTE3 ( 0x3B )
0044ed e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
0044ee c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
0044ef 940e c11c 	CALL SUBOPT_0xC9
0044f1 f429      	BRNE _0xC0011
                +
0044f2 e5ea     +LDI R30 , LOW ( 0x5A )
0044f3 e0f0     +LDI R31 , HIGH ( 0x5A )
0044f4 e060     +LDI R22 , BYTE3 ( 0x5A )
0044f5 e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
0044f6 c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
0044f7 940e c124 	CALL SUBOPT_0xCA
0044f9 f429      	BRNE _0xC0012
                +
0044fa e7e8     +LDI R30 , LOW ( 0x78 )
0044fb e0f0     +LDI R31 , HIGH ( 0x78 )
0044fc e060     +LDI R22 , BYTE3 ( 0x78 )
0044fd e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
0044fe c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
0044ff 940e c12c 	CALL SUBOPT_0xCB
004501 f429      	BRNE _0xC0013
                +
004502 e9e7     +LDI R30 , LOW ( 0x97 )
004503 e0f0     +LDI R31 , HIGH ( 0x97 )
004504 e060     +LDI R22 , BYTE3 ( 0x97 )
004505 e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
004506 c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
004507 940e c134 	CALL SUBOPT_0xCC
004509 f429      	BRNE _0xC0014
                +
00450a ebe5     +LDI R30 , LOW ( 0xB5 )
00450b e0f0     +LDI R31 , HIGH ( 0xB5 )
00450c e060     +LDI R22 , BYTE3 ( 0xB5 )
00450d e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
00450e c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
00450f 940e c13c 	CALL SUBOPT_0xCD
004511 f429      	BRNE _0xC0015
                +
004512 ede4     +LDI R30 , LOW ( 0xD4 )
004513 e0f0     +LDI R31 , HIGH ( 0xD4 )
004514 e060     +LDI R22 , BYTE3 ( 0xD4 )
004515 e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
004516 c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
004517 940e c144 	CALL SUBOPT_0xCE
004519 f429      	BRNE _0xC0016
                +
00451a efe3     +LDI R30 , LOW ( 0xF3 )
00451b e0f0     +LDI R31 , HIGH ( 0xF3 )
00451c e060     +LDI R22 , BYTE3 ( 0xF3 )
00451d e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
00451e c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
00451f 940e c14c 	CALL SUBOPT_0xCF
004521 f429      	BRNE _0xC0017
                +
004522 e1e1     +LDI R30 , LOW ( 0x111 )
004523 e0f1     +LDI R31 , HIGH ( 0x111 )
004524 e060     +LDI R22 , BYTE3 ( 0x111 )
004525 e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
004526 c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
004527 940e c154 	CALL SUBOPT_0xD0
004529 f429      	BRNE _0xC0018
                +
00452a e3e0     +LDI R30 , LOW ( 0x130 )
00452b e0f1     +LDI R31 , HIGH ( 0x130 )
00452c e060     +LDI R22 , BYTE3 ( 0x130 )
00452d e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
00452e c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
00452f 940e c15c 	CALL SUBOPT_0xD1
004531 f441      	BRNE _0xC000D
                +
004532 e4ee     +LDI R30 , LOW ( 0x14E )
004533 e0f1     +LDI R31 , HIGH ( 0x14E )
004534 e060     +LDI R22 , BYTE3 ( 0x14E )
004535 e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
004536 8fea     +STD Y + 26 , R30
004537 8ffb     +STD Y + 26 + 1 , R31
004538 8f6c     +STD Y + 26 + 2 , R22
004539 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
00453a a1aa     +LDD R26 , Y + 34
00453b a1bb     +LDD R27 , Y + 34 + 1
00453c a18c     +LDD R24 , Y + 34 + 2
00453d a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
00453e 940e c164 	CALL SUBOPT_0xD2
004540 f020      	BRLO _0xC001B
004541 940e c0e4 	CALL SUBOPT_0xC0
004543 70e3      	ANDI R30,LOW(0x3)
004544 f009      	BREQ _0xC001C
                 _0xC001B:
004545 c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
004546 940e c16c 	CALL SUBOPT_0xD3
004548 940e c0da 	CALL SUBOPT_0xBE
                +
00454a 8fea     +STD Y + 26 , R30
00454b 8ffb     +STD Y + 26 + 1 , R31
00454c 8f6c     +STD Y + 26 + 2 , R22
00454d 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
00454e 940e c16c 	CALL SUBOPT_0xD3
004550 940e c171 	CALL SUBOPT_0xD4
004552 940e da94 	CALL __CPD21
004554 f450      	BRSH _0xC000A
                 ; 0006 0074     }
004555 940e c0ff 	CALL SUBOPT_0xC5
004557 9731      	SBIW R30,1
004558 4060      	SBCI R22,0
004559 4070      	SBCI R23,0
                +
00455a a3ea     +STD Y + 34 , R30
00455b a3fb     +STD Y + 34 + 1 , R31
00455c a36c     +STD Y + 34 + 2 , R22
00455d a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
00455e cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
00455f 940e c0c8 	CALL SUBOPT_0xBB
004561 940e c0fa 	CALL SUBOPT_0xC4
004563 940e d89e 	CALL __SUBD12
004565 940e c176 	CALL SUBOPT_0xD5
004567 940e c0c3 	CALL SUBOPT_0xBA
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
004569 940e c0e4 	CALL SUBOPT_0xC0
00456b a5aa      	LDD  R26,Y+42
00456c a5bb      	LDD  R27,Y+42+1
00456d 940e d9ff 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
00456f 940e c0ff 	CALL SUBOPT_0xC5
                +
004571 a5aa     +LDD R26 , Y + 42
004572 a5bb     +LDD R27 , Y + 42 + 1
004573 9614     +ADIW R26 , 4
004574 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
004576 940e c0d5 	CALL SUBOPT_0xBD
                +
004578 a5aa     +LDD R26 , Y + 42
004579 a5bb     +LDD R27 , Y + 42 + 1
00457a 9618     +ADIW R26 , 8
00457b 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
00457d 940e c17b 	CALL SUBOPT_0xD6
                +
00457f a5aa     +LDD R26 , Y + 42
004580 a5bb     +LDD R27 , Y + 42 + 1
004581 961c     +ADIW R26 , 12
004582 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
004584 940e be77 	CALL SUBOPT_0x60
                +
004586 a5aa     +LDD R26 , Y + 42
004587 a5bb     +LDD R27 , Y + 42 + 1
004588 9650     +ADIW R26 , 16
004589 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
00458b 940e c180 	CALL SUBOPT_0xD7
                +
00458d a5aa     +LDD R26 , Y + 42
00458e a5bb     +LDD R27 , Y + 42 + 1
00458f 9654     +ADIW R26 , 20
004590 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
004592 01f8      	MOVW R30,R16
                +
004593 a5aa     +LDD R26 , Y + 42
004594 a5bb     +LDD R27 , Y + 42 + 1
004595 9658     +ADIW R26 , 24
004596 93ed     +ST X + , R30
004597 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
004598 940e c185 	CALL SUBOPT_0xD8
00459a 96e0      	ADIW R28,48
00459b 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
00459c 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
00459d 940e bf8b 	CALL SUBOPT_0x89
                +
00459f 5be2     +SUBI R30 , LOW ( 1970 )
0045a0 40f7     +SBCI R31 , HIGH ( 1970 )
0045a1 4060     +SBCI R22 , BYTE3 ( 1970 )
0045a2 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
0045a3 940e c0e9 	CALL SUBOPT_0xC1
0045a5 940e c18a 	CALL SUBOPT_0xD9
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
0045a7 940e bf8b 	CALL SUBOPT_0x89
                +
0045a9 5be1     +SUBI R30 , LOW ( 1969 )
0045aa 40f7     +SBCI R31 , HIGH ( 1969 )
0045ab 4060     +SBCI R22 , BYTE3 ( 1969 )
0045ac 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
0045ad 940e d8fa 	CALL __LSRD1
0045af 940e d8fa 	CALL __LSRD1
0045b1 940e c18d 	CALL SUBOPT_0xDA
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
0045b3 940e c18f 	CALL SUBOPT_0xDB
0045b5 940e c164 	CALL SUBOPT_0xD2
0045b7 f018      	BRLO _0xC001F
0045b8 81ec      	LDD  R30,Y+4
0045b9 70e3      	ANDI R30,LOW(0x3)
0045ba f009      	BREQ _0xC0020
                 _0xC001F:
0045bb c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
0045bc 940e bf7f 	CALL SUBOPT_0x87
0045be 940e c0da 	CALL SUBOPT_0xBE
0045c0 940e c18a 	CALL SUBOPT_0xD9
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
0045c2 940e be05 	CALL SUBOPT_0x4F
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
0045c4 940e c104 	CALL SUBOPT_0xC6
0045c6 f419      	BRNE _0xC0024
0045c7 940e bf7f 	CALL SUBOPT_0x87
0045c9 c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
0045ca 940e c10c 	CALL SUBOPT_0xC7
0045cc f439      	BRNE _0xC0025
0045cd 940e bf7f 	CALL SUBOPT_0x87
                +
0045cf 5ee1     +SUBI R30 , LOW ( - 31 )
0045d0 4fff     +SBCI R31 , HIGH ( - 31 )
0045d1 4f6f     +SBCI R22 , BYTE3 ( - 31 )
0045d2 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
0045d3 c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
0045d4 940e c114 	CALL SUBOPT_0xC8
0045d6 f439      	BRNE _0xC0026
0045d7 940e bf7f 	CALL SUBOPT_0x87
                +
0045d9 5ce5     +SUBI R30 , LOW ( - 59 )
0045da 4fff     +SBCI R31 , HIGH ( - 59 )
0045db 4f6f     +SBCI R22 , BYTE3 ( - 59 )
0045dc 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
0045dd c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
0045de 940e c11c 	CALL SUBOPT_0xC9
0045e0 f439      	BRNE _0xC0027
0045e1 940e bf7f 	CALL SUBOPT_0x87
                +
0045e3 5ae6     +SUBI R30 , LOW ( - 90 )
0045e4 4fff     +SBCI R31 , HIGH ( - 90 )
0045e5 4f6f     +SBCI R22 , BYTE3 ( - 90 )
0045e6 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
0045e7 c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
0045e8 940e c124 	CALL SUBOPT_0xCA
0045ea f439      	BRNE _0xC0028
0045eb 940e bf7f 	CALL SUBOPT_0x87
                +
0045ed 58e8     +SUBI R30 , LOW ( - 120 )
0045ee 4fff     +SBCI R31 , HIGH ( - 120 )
0045ef 4f6f     +SBCI R22 , BYTE3 ( - 120 )
0045f0 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
0045f1 c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
0045f2 940e c12c 	CALL SUBOPT_0xCB
0045f4 f439      	BRNE _0xC0029
0045f5 940e bf7f 	CALL SUBOPT_0x87
                +
0045f7 56e9     +SUBI R30 , LOW ( - 151 )
0045f8 4fff     +SBCI R31 , HIGH ( - 151 )
0045f9 4f6f     +SBCI R22 , BYTE3 ( - 151 )
0045fa 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
0045fb c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
0045fc 940e c134 	CALL SUBOPT_0xCC
0045fe f439      	BRNE _0xC002A
0045ff 940e bf7f 	CALL SUBOPT_0x87
                +
004601 54eb     +SUBI R30 , LOW ( - 181 )
004602 4fff     +SBCI R31 , HIGH ( - 181 )
004603 4f6f     +SBCI R22 , BYTE3 ( - 181 )
004604 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
004605 c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
004606 940e c13c 	CALL SUBOPT_0xCD
004608 f439      	BRNE _0xC002B
004609 940e bf7f 	CALL SUBOPT_0x87
                +
00460b 52ec     +SUBI R30 , LOW ( - 212 )
00460c 4fff     +SBCI R31 , HIGH ( - 212 )
00460d 4f6f     +SBCI R22 , BYTE3 ( - 212 )
00460e 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
00460f c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
004610 940e c144 	CALL SUBOPT_0xCE
004612 f439      	BRNE _0xC002C
004613 940e bf7f 	CALL SUBOPT_0x87
                +
004615 50ed     +SUBI R30 , LOW ( - 243 )
004616 4fff     +SBCI R31 , HIGH ( - 243 )
004617 4f6f     +SBCI R22 , BYTE3 ( - 243 )
004618 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
004619 c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
00461a 940e c14c 	CALL SUBOPT_0xCF
00461c f439      	BRNE _0xC002D
00461d 940e bf7f 	CALL SUBOPT_0x87
                +
00461f 5eef     +SUBI R30 , LOW ( - 273 )
004620 4ffe     +SBCI R31 , HIGH ( - 273 )
004621 4f6f     +SBCI R22 , BYTE3 ( - 273 )
004622 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
004623 c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
004624 940e c154 	CALL SUBOPT_0xD0
004626 f439      	BRNE _0xC002E
004627 940e bf7f 	CALL SUBOPT_0x87
                +
004629 5de0     +SUBI R30 , LOW ( - 304 )
00462a 4ffe     +SBCI R31 , HIGH ( - 304 )
00462b 4f6f     +SBCI R22 , BYTE3 ( - 304 )
00462c 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
00462d c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
00462e 940e c15c 	CALL SUBOPT_0xD1
004630 f441      	BRNE _0xC0023
004631 940e bf7f 	CALL SUBOPT_0x87
                +
004633 5be2     +SUBI R30 , LOW ( - 334 )
004634 4ffe     +SBCI R31 , HIGH ( - 334 )
004635 4f6f     +SBCI R22 , BYTE3 ( - 334 )
004636 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
004637 940e da1a 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
004639 940e c194 	CALL SUBOPT_0xDC
00463b 940e c199 	CALL SUBOPT_0xDD
00463d 940e c18d 	CALL SUBOPT_0xDA
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
00463f 940e bf7f 	CALL SUBOPT_0x87
                +
004641 e8a0     +LDI R26 , LOW ( 0x15180 )
004642 e5b1     +LDI R27 , HIGH ( 0x15180 )
004643 e081     +LDI R24 , BYTE3 ( 0x15180 )
004644 e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
004645 940e d93a 	CALL __MULD12U
004647 940e c18a 	CALL SUBOPT_0xD9
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
004649 940e c19e 	CALL SUBOPT_0xDE
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
00464b 940e c19e 	CALL SUBOPT_0xDE
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
00464d 940e c1a6 	CALL SUBOPT_0xDF
00464f 940e c09d 	CALL SUBOPT_0xB3
004651 940e c18d 	CALL SUBOPT_0xDA
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
004653 940e c1ab 	CALL SUBOPT_0xE0
004655 940e c18d 	CALL SUBOPT_0xDA
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
004657 940e bf7f 	CALL SUBOPT_0x87
004659 966e      	ADIW R28,30
00465a 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
00465b 940e da2e 	CALL __PUTPARD2
00465d 9728      	SBIW R28,8
00465e 940e da9b 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004660 940e bdfe 	CALL SUBOPT_0x4E
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
004662 940e c1b0 	CALL SUBOPT_0xE1
004664 f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
004665 940e c1b5 	CALL SUBOPT_0xE2
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
004667 c00b      	RJMP _0xC0031
                 _0xC0030:
004668 940e c1ba 	CALL SUBOPT_0xE3
00466a f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
00466b 940e c1bf 	CALL SUBOPT_0xE4
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
00466d c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
00466e e0e0      	LDI  R30,LOW(0)
                +
00466f 83ec     +STD Y + 4 , R30
004670 83ed     +STD Y + 4 + 1 , R30
004671 83ee     +STD Y + 4 + 2 , R30
004672 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
004673 940e c075 	CALL SUBOPT_0xAB
004675 940e da85 	CALL __CPD20
004677 f018      	BRLO _0xC0035
004678 940e c1c4 	CALL SUBOPT_0xE5
00467a f008      	BRLO _0xC0036
                 _0xC0035:
00467b c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
00467c efef      	LDI  R30,LOW(65535)
00467d efff      	LDI  R31,HIGH(65535)
00467e c016      	RJMP _0x20E0095
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
00467f 940e c1cd 	CALL SUBOPT_0xE6
004681 940e c1d2 	CALL SUBOPT_0xE7
004683 940e be9f 	CALL SUBOPT_0x66
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
004685 940e c1d6 	CALL SUBOPT_0xE8
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
004687 94f8      	cli
                 ; 0006 00D5     i2c_start();
004688 940e c060 	CALL SUBOPT_0xA7
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
00468a 940e c1e7 	CALL SUBOPT_0xE9
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
00468c 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
00468d e0ef     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
00468e e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
00468f e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
004690 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
004691 940e bbec 	CALL SUBOPT_0x3
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
004693 940e c069 	CALL SUBOPT_0xA9
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E0095:
004695 940e daa2 	CALL __LOADLOCR4
004697 9660      	ADIW R28,16
004698 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
004699 940e c1f5 	CALL SUBOPT_0xEA
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
00469b 89a8      	LDD  R26,Y+16
00469c 89b9      	LDD  R27,Y+16+1
00469d 971f      	SBIW R26,15
00469e f434      	BRGE _0xC0038
00469f 89a8      	LDD  R26,Y+16
0046a0 89b9      	LDD  R27,Y+16+1
0046a1 3fa4      	CPI  R26,LOW(0xFFF4)
0046a2 efef      	LDI  R30,HIGH(0xFFF4)
0046a3 07be      	CPC  R27,R30
0046a4 f45c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
0046a5 e2ec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
0046a6 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
0046a7 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
0046a8 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
0046a9 940e c1fb 	CALL SUBOPT_0xEB
0046ab 940e c200 	CALL SUBOPT_0xEC
                 ; 0006 00F0         return -2;
0046ad efee      	LDI  R30,LOW(65534)
0046ae efff      	LDI  R31,HIGH(65534)
0046af c049      	RJMP _0x20E0094
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
0046b0 01fe      	MOVW R30,R28
0046b1 9672      	ADIW R30,18
0046b2 e1aa      	LDI  R26,26
0046b3 940e da33 	CALL __PUTPARL
0046b5 dee6      	RCALL _date_to_binary
0046b6 940e c205 	CALL SUBOPT_0xED
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
0046b8 89e8      	LDD  R30,Y+16
0046b9 89f9      	LDD  R31,Y+16+1
0046ba 940e c20a 	CALL SUBOPT_0xEE
0046bc 940e c20a 	CALL SUBOPT_0xEE
0046be efaf      	LDI  R26,LOW(65535)
0046bf efbf      	LDI  R27,HIGH(65535)
0046c0 940e d960 	CALL __MULW12
0046c2 940e bc2e 	CALL SUBOPT_0xB
0046c4 940e c08a 	CALL SUBOPT_0xAF
0046c6 940e c20f 	CALL SUBOPT_0xEF
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
0046c8 940e c211 	CALL SUBOPT_0xF0
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
0046ca 940e bdfe 	CALL SUBOPT_0x4E
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
0046cc 940e c1b0 	CALL SUBOPT_0xE1
0046ce f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
0046cf 940e c1b5 	CALL SUBOPT_0xE2
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
0046d1 c00b      	RJMP _0xC003B
                 _0xC003A:
0046d2 940e c1ba 	CALL SUBOPT_0xE3
0046d4 f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
0046d5 940e c1bf 	CALL SUBOPT_0xE4
                 ; 0006 0100     }
                 ; 0006 0101     else{
0046d7 c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
0046d8 e0e0      	LDI  R30,LOW(0)
                +
0046d9 83ec     +STD Y + 4 , R30
0046da 83ed     +STD Y + 4 + 1 , R30
0046db 83ee     +STD Y + 4 + 2 , R30
0046dc 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
0046dd 940e c075 	CALL SUBOPT_0xAB
0046df 940e da85 	CALL __CPD20
0046e1 f018      	BRLO _0xC003F
0046e2 940e c1c4 	CALL SUBOPT_0xE5
0046e4 f008      	BRLO _0xC0040
                 _0xC003F:
0046e5 c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
0046e6 efef      	LDI  R30,LOW(65535)
0046e7 efff      	LDI  R31,HIGH(65535)
0046e8 c010      	RJMP _0x20E0094
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
0046e9 940e c1cd 	CALL SUBOPT_0xE6
0046eb 940e c1d2 	CALL SUBOPT_0xE7
0046ed 940e be9f 	CALL SUBOPT_0x66
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
0046ef 940e c1d6 	CALL SUBOPT_0xE8
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
0046f1 94f8      	cli
                 ; 0006 0113     i2c_start();
0046f2 940e c060 	CALL SUBOPT_0xA7
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
0046f4 940e c1e7 	CALL SUBOPT_0xE9
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
0046f6 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
0046f7 940e c069 	CALL SUBOPT_0xA9
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E0094:
0046f9 940e daa2 	CALL __LOADLOCR4
0046fb 96ac      	ADIW R28,44
0046fc 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
0046fd 940e c21a 	CALL SUBOPT_0xF1
0046ff 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
004700 dccf      	RCALL _DS1672_read
004701 940e c21f 	CALL SUBOPT_0xF2
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
004703 940e bd70 	CALL SUBOPT_0x3A
004705 f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
004706 e001     +LDI R16 , LOW ( 1 )
004707 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
004708 91e0 1430 	LDS  R30,_raw_rtc
00470a 91f0 1431 	LDS  R31,_raw_rtc+1
00470c 9160 1432 	LDS  R22,_raw_rtc+2
00470e 9170 1433 	LDS  R23,_raw_rtc+3
004710 940e c0a4 	CALL SUBOPT_0xB4
                 ; 0006 012C     }
                 ; 0006 012D     else{
004712 c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
004713 e000     +LDI R16 , LOW ( 0 )
004714 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
004715 940e c0a9 	CALL SUBOPT_0xB5
004717 940e c211 	CALL SUBOPT_0xF0
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
004719 81ee      	LDD  R30,Y+6
00471a 81ff      	LDD  R31,Y+6+1
00471b 940e c20a 	CALL SUBOPT_0xEE
00471d 940e c20a 	CALL SUBOPT_0xEE
00471f 940e c0ae 	CALL SUBOPT_0xB6
004721 940e c08a 	CALL SUBOPT_0xAF
004723 940e c0a4 	CALL SUBOPT_0xB4
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
004725 940e c221 	CALL SUBOPT_0xF3
004727 85ac      	LDD  R26,Y+12
004728 85bd      	LDD  R27,Y+12+1
004729 dce3      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
00472a 01f8      	MOVW R30,R16
00472b 8119      	LDD  R17,Y+1
00472c 8108      	LDD  R16,Y+0
00472d 962a      	ADIW R28,10
00472e 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
00472f 8de8      	LDD  R30,Y+24
004730 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
004731 30e1      	CPI  R30,LOW(0x1)
004732 e0a0      	LDI  R26,HIGH(0x1)
004733 07fa      	CPC  R31,R26
004734 f429      	BRNE _0xC0046
                +
004735 e5ec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
004736 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
004737 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
004738 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
004739 c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
00473a 30e2      	CPI  R30,LOW(0x2)
00473b e0a0      	LDI  R26,HIGH(0x2)
00473c 07fa      	CPC  R31,R26
00473d f429      	BRNE _0xC0047
                +
00473e e6e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
00473f e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
004740 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
004741 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
004742 c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
004743 30e3      	CPI  R30,LOW(0x3)
004744 e0a0      	LDI  R26,HIGH(0x3)
004745 07fa      	CPC  R31,R26
004746 f429      	BRNE _0xC0048
                +
004747 e6e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
004748 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
004749 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
00474a e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
00474b c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
00474c 30e4      	CPI  R30,LOW(0x4)
00474d e0a0      	LDI  R26,HIGH(0x4)
00474e 07fa      	CPC  R31,R26
00474f f429      	BRNE _0xC0049
                +
004750 e6ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
004751 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
004752 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
004753 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
004754 c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
004755 30e5      	CPI  R30,LOW(0x5)
004756 e0a0      	LDI  R26,HIGH(0x5)
004757 07fa      	CPC  R31,R26
004758 f429      	BRNE _0xC004A
                +
004759 e7e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
00475a e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
00475b e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
00475c e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
00475d c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
00475e 30e6      	CPI  R30,LOW(0x6)
00475f e0a0      	LDI  R26,HIGH(0x6)
004760 07fa      	CPC  R31,R26
004761 f429      	BRNE _0xC004B
                +
004762 e7ea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
004763 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
004764 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
004765 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
004766 c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
004767 30e7      	CPI  R30,LOW(0x7)
004768 e0a0      	LDI  R26,HIGH(0x7)
004769 07fa      	CPC  R31,R26
00476a f441      	BRNE _0xC0045
                +
00476b e8e0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
00476c e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
00476d e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
00476e e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
00476f 940e da29 	CALL __PUTPARD1
004771 940e bd53 	CALL SUBOPT_0x36
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
004773 e8e6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
004774 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
004775 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
004776 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
004777 940e c225 	CALL SUBOPT_0xF4
004779 940e bd4a 	CALL SUBOPT_0x34
00477b 940e be05 	CALL SUBOPT_0x4F
00477d 940e be5a 	CALL SUBOPT_0x5B
00477f 940e c22a 	CALL SUBOPT_0xF5
                +
004781 a1e8     +LDD R30 , Y + 32
004782 a1f9     +LDD R31 , Y + 32 + 1
004783 a16a     +LDD R22 , Y + 32 + 2
004784 a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
004785 940e da29 	CALL __PUTPARD1
004787 940e c22e 	CALL SUBOPT_0xF6
                +
004789 a9e8     +LDD R30 , Y + 48
00478a a9f9     +LDD R31 , Y + 48 + 1
00478b a96a     +LDD R22 , Y + 48 + 2
00478c a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
00478d 940e da29 	CALL __PUTPARD1
00478f e18c      	LDI  R24,28
004790 940e 9afc 	CALL _printDebug
004792 96a0      	ADIW R28,32
                 ; 0006 014F     return;
004793 c025      	RJMP _0x20E0093
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
004794 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
004795 e0e0      	LDI  R30,LOW(0)
004796 93e0 1430 	STS  _raw_rtc,R30
004798 93e0 1431 	STS  _raw_rtc+1,R30
00479a 93e0 1432 	STS  _raw_rtc+2,R30
00479c 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
00479e 94f8      	cli
                 ; 0006 0159     i2c_start();
00479f 940e c060 	CALL SUBOPT_0xA7
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
0047a1 e0a4      	LDI  R26,LOW(4)
0047a2 940e d6c5 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
0047a4 e0a0      	LDI  R26,LOW(0)
0047a5 940e c065 	CALL SUBOPT_0xA8
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
0047a7 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
0047a8 dc1a      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
0047a9 940e bc27 	CALL SUBOPT_0x9
0047ab 940e c235 	CALL SUBOPT_0xF7
0047ad df4f      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
0047ae eaea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
0047af e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
0047b0 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
0047b1 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
0047b2 940e bbec 	CALL SUBOPT_0x3
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
0047b4 01fe      	MOVW R30,R28
0047b5 e1aa      	LDI  R26,26
0047b6 940e da33 	CALL __PUTPARL
0047b8 df76      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E0093:
0047b9 966a      	ADIW R28,26
0047ba 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0021 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0022     int i;
                 ; 0007 0023 
                 ; 0007 0024     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0025 
                 ; 0007 0026     if( config_prop_flag != 0x01){
0047bb 940e bf59 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0047bd e4a2      	LDI  R26,LOW(_config_prop_flag)
0047be e0b5      	LDI  R27,HIGH(_config_prop_flag)
0047bf 940e da50 	CALL __EEPROMRDB
0047c1 30e1      	CPI  R30,LOW(0x1)
0047c2 f0a9      	BREQ _0xE000B
                 ; 0007 0027         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
0047c3 eeee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
0047c4 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
0047c5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
0047c6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
0047c7 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0028         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
0047c9 81ea      	LDD  R30,Y+2
0047ca 81fb      	LDD  R31,Y+2+1
0047cb 940e c238 	CALL SUBOPT_0xF8
0047cd 940e c23d 	CALL SUBOPT_0xF9
0047cf 940e a154 	CALL _memset
                 ; 0007 0029         readConfig->timeZone   = 7;
0047d1 81aa      	LDD  R26,Y+2
0047d2 81bb      	LDD  R27,Y+2+1
0047d3 56a0      	SUBI R26,LOW(-160)
0047d4 4fbf      	SBCI R27,HIGH(-160)
0047d5 e0e7      	LDI  R30,LOW(7)
0047d6 93ec      	ST   X,R30
                 ; 0007 002A     }
                 ; 0007 002B     else{
0047d7 c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002C 
                 ; 0007 002D         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
0047d8 e000     +LDI R16 , LOW ( 0 )
0047d9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
0047da 3104     +CPI R16 , LOW ( 20 )
0047db e0e0     +LDI R30 , HIGH ( 20 )
0047dc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0047dd f47c      	BRGE _0xE000F
                 ; 0007 002E         {
                 ; 0007 002F             readConfig->deviceType[i]   = config_prop.deviceType[i];
0047de 01f8      	MOVW R30,R16
0047df 81aa      	LDD  R26,Y+2
0047e0 81bb      	LDD  R27,Y+2+1
0047e1 0fea      	ADD  R30,R26
0047e2 1ffb      	ADC  R31,R27
0047e3 010f      	MOVW R0,R30
0047e4 e0a0      	LDI  R26,LOW(_config_prop)
0047e5 e0b0      	LDI  R27,HIGH(_config_prop)
0047e6 940e c240 	CALL SUBOPT_0xFA
0047e8 01d0      	MOVW R26,R0
0047e9 93ec      	ST   X,R30
                 ; 0007 0030         }
                +
0047ea 5f0f     +SUBI R16 , LOW ( - 1 )
0047eb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0047ec cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0031 
                 ; 0007 0032         /*
                 ; 0007 0033         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0034         {
                 ; 0007 0035             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0036             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 0037         }
                 ; 0007 0038         */
                 ; 0007 0039         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
0047ed 81ea      	LDD  R30,Y+2
0047ee 81fb      	LDD  R31,Y+2+1
0047ef 9674      	ADIW R30,20
0047f0 93fa      	ST   -Y,R31
0047f1 93ea      	ST   -Y,R30
                +
0047f2 eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0047f3 e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0047f4 e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0047f5 e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
0047f6 940e da29 	CALL __PUTPARD1
0047f8 eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
0047f9 e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
0047fa e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
0047fb 940e a1a7 	CALL _strlenf
0047fd 01df      	MOVW R26,R30
0047fe 940e a121 	CALL _memcpyf
                 ; 0007 003A 
                 ; 0007 003B         for(i=0;i<NAME_LENGTH;i++)
                +
004800 e000     +LDI R16 , LOW ( 0 )
004801 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
004802 3208     +CPI R16 , LOW ( 40 )
004803 e0e0     +LDI R30 , HIGH ( 40 )
004804 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004805 f46c      	BRGE _0xE0012
                 ; 0007 003C         {
                 ; 0007 003D             readConfig->deviceName[i]   = config_prop.deviceName[i];
004806 81ea      	LDD  R30,Y+2
004807 81fb      	LDD  R31,Y+2+1
004808 96b8      	ADIW R30,40
004809 0fe0      	ADD  R30,R16
00480a 1ff1      	ADC  R31,R17
00480b 010f      	MOVW R0,R30
                +
00480c e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
00480d e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
00480e 940e c245 	CALL SUBOPT_0xFB
                 ; 0007 003E         }
                +
004810 5f0f     +SUBI R16 , LOW ( - 1 )
004811 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004812 cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 003F 
                 ; 0007 0040         for(i=0;i<ID_LENGTH;i++)
                +
004813 e000     +LDI R16 , LOW ( 0 )
004814 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
004815 3104     +CPI R16 , LOW ( 20 )
004816 e0e0     +LDI R30 , HIGH ( 20 )
004817 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004818 f454      	BRGE _0xE0015
                 ; 0007 0041         {
                 ; 0007 0042             readConfig->deviceID[i]   = config_prop.deviceID[i];
004819 940e c24d 	CALL SUBOPT_0xFC
00481b 010f      	MOVW R0,R30
                +
00481c e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
00481d e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
00481e 940e c245 	CALL SUBOPT_0xFB
                 ; 0007 0043         }
                +
004820 5f0f     +SUBI R16 , LOW ( - 1 )
004821 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004822 cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0044 
                 ; 0007 0045         for(i=0;i<NAME_LENGTH;i++)
                +
004823 e000     +LDI R16 , LOW ( 0 )
004824 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
004825 3208     +CPI R16 , LOW ( 40 )
004826 e0e0     +LDI R30 , HIGH ( 40 )
004827 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004828 f454      	BRGE _0xE0018
                 ; 0007 0046         {
                 ; 0007 0047             readConfig->hostName[i]   = config_prop.hostName[i];
004829 940e c254 	CALL SUBOPT_0xFD
00482b 010f      	MOVW R0,R30
                +
00482c e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
00482d e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
00482e 940e c245 	CALL SUBOPT_0xFB
                 ; 0007 0048         }
                +
004830 5f0f     +SUBI R16 , LOW ( - 1 )
004831 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004832 cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 0049 
                 ; 0007 004A         for(i=0;i<ID_LENGTH;i++)
                +
004833 e000     +LDI R16 , LOW ( 0 )
004834 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
004835 3104     +CPI R16 , LOW ( 20 )
004836 e0e0     +LDI R30 , HIGH ( 20 )
004837 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004838 f454      	BRGE _0xE001B
                 ; 0007 004B         {
                 ; 0007 004C             readConfig->hostID[i]   = config_prop.hostID[i];
004839 940e c25b 	CALL SUBOPT_0xFE
00483b 010f      	MOVW R0,R30
                +
00483c e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
00483d e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
00483e 940e c245 	CALL SUBOPT_0xFB
                 ; 0007 004D         }
                +
004840 5f0f     +SUBI R16 , LOW ( - 1 )
004841 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004842 cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 004E 
                 ; 0007 004F         readConfig->timeZone   = config_prop.timeZone;
                +
004843 eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
004844 e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
004845 940e da50 	CALL __EEPROMRDB
                +
004847 81aa     +LDD R26 , Y + 2
004848 81bb     +LDD R27 , Y + 2 + 1
004849 56a0     +SUBI R26 , LOW ( - 160 )
00484a 4fbf     +SBCI R27 , HIGH ( - 160 )
00484b 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0050     }
                 _0xE000C:
                 ; 0007 0051     return 0;
00484c 940e c185 	CALL SUBOPT_0xD8
00484e 9624      	ADIW R28,4
00484f 9508      	RET
                 ; 0007 0052 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0055 {
                 _getOperatingConfig:
                 ; 0007 0056     int i;
                 ; 0007 0057 
                 ; 0007 0058     if( config_oper_flag != 0x01){
004850 940e bf59 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004852 e4a3      	LDI  R26,LOW(_config_oper_flag)
004853 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004854 940e da50 	CALL __EEPROMRDB
004856 30e1      	CPI  R30,LOW(0x1)
004857 f0d1      	BREQ _0xE001C
                 ; 0007 0059         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
004858 e2e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
004859 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
00485a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
00485b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
00485c 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 005A 
                 ; 0007 005B         readConfig->mode                    =   MODE_DATALOGGER;
00485e 81aa      	LDD  R26,Y+2
00485f 81bb      	LDD  R27,Y+2+1
004860 e2e0      	LDI  R30,LOW(32)
004861 940e c262 	CALL SUBOPT_0xFF
                 ; 0007 005C         readConfig->deviceEnable            =   0x00;
004863 e0e0      	LDI  R30,LOW(0)
004864 940e c267 	CALL SUBOPT_0x100
                 ; 0007 005D         readConfig->alarmEnable             =   0x00;
                 ; 0007 005E 
                 ; 0007 005F         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
004866 3005     +CPI R16 , LOW ( 5 )
004867 e0e0     +LDI R30 , HIGH ( 5 )
004868 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004869 f43c      	BRGE _0xE001F
                 ; 0007 0060         {
                 ; 0007 0061             readConfig->sensorEnable[i]     =   0x00;
00486a 940e c270 	CALL SUBOPT_0x101
00486c e0a0      	LDI  R26,LOW(0)
00486d 83a0      	STD  Z+0,R26
                 ; 0007 0062         }
                +
00486e 5f0f     +SUBI R16 , LOW ( - 1 )
00486f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004870 cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0063 
                 ; 0007 0064         /* // -- for test -- //
                 ; 0007 0065         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0066         readConfig->deviceEnable            =   0x01;
                 ; 0007 0067         readConfig->alarmEnable             =   0x01;
                 ; 0007 0068 
                 ; 0007 0069         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006A         {
                 ; 0007 006B             if(i==0){
                 ; 0007 006C                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 006D             }
                 ; 0007 006E             else{
                 ; 0007 006F                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0070             }
                 ; 0007 0071         }
                 ; 0007 0072         */
                 ; 0007 0073     }
                 ; 0007 0074     else{
004871 c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0075         readConfig->mode                    =   config_oper.mode;
004872 eaa1      	LDI  R26,LOW(_config_oper)
004873 e0b0      	LDI  R27,HIGH(_config_oper)
004874 940e c276 	CALL SUBOPT_0x102
                 ; 0007 0076         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
004876 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004877 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004878 940e c27c 	CALL SUBOPT_0x103
                 ; 0007 0077         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
00487a eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
00487b e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
00487c 940e c283 	CALL SUBOPT_0x104
                 ; 0007 0078 
                 ; 0007 0079         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
00487e e000     +LDI R16 , LOW ( 0 )
00487f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
004880 3005     +CPI R16 , LOW ( 5 )
004881 e0e0     +LDI R30 , HIGH ( 5 )
004882 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004883 f454      	BRGE _0xE0023
                 ; 0007 007A         {
                 ; 0007 007B             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
004884 940e c270 	CALL SUBOPT_0x101
004886 010f      	MOVW R0,R30
                +
004887 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004888 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004889 940e c245 	CALL SUBOPT_0xFB
                 ; 0007 007C         }
                +
00488b 5f0f     +SUBI R16 , LOW ( - 1 )
00488c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00488d cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 007D     }
                 _0xE0020:
                 ; 0007 007E 
                 ; 0007 007F 
                 ; 0007 0080     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
00488e e5e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
00488f e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
004890 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
004891 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
004892 940e c28a 	CALL SUBOPT_0x105
                 ; 0007 0081     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
004894 e8ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
004895 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
004896 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
004897 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
004898 940e c290 	CALL SUBOPT_0x106
00489a 81e1      	LDD  R30,Z+1
00489b 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0082     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
00489d ebeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
00489e e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
00489f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
0048a0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
0048a1 940e c290 	CALL SUBOPT_0x106
0048a3 81e2      	LDD  R30,Z+2
0048a4 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0083     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
0048a6 eeec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
0048a7 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
0048a8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
0048a9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
0048aa 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0084 
                 ; 0007 0085     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0048ac e000     +LDI R16 , LOW ( 0 )
0048ad e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
0048ae 3005     +CPI R16 , LOW ( 5 )
0048af e0e0     +LDI R30 , HIGH ( 5 )
0048b0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0048b1 f43c      	BRGE _0xE0026
                 ; 0007 0086     {
                 ; 0007 0087         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
0048b2 940e c295 	CALL SUBOPT_0x107
0048b4 940e c29a 	CALL SUBOPT_0x108
                 ; 0007 0088     }
                +
0048b6 5f0f     +SUBI R16 , LOW ( - 1 )
0048b7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048b8 cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 0089     printDebug("\r\n");
0048b9 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 008A 
                 ; 0007 008B     return 0;
0048bb 940e c185 	CALL SUBOPT_0xD8
0048bd c4e4      	RJMP _0x20E008E
                 ; 0007 008C }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 008F {
                 _getSensorConfig:
                 ; 0007 0090     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
0048be 940e c2a4 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
0048c0 f022      	BRMI _0xE0028
0048c1 81aa      	LDD  R26,Y+2
0048c2 81bb      	LDD  R27,Y+2+1
0048c3 9715      	SBIW R26,5
0048c4 f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0091         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
0048c5 e1ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
0048c6 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
0048c7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
0048c8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
0048c9 940e c290 	CALL SUBOPT_0x106
0048cb 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 0092         return -1;
0048cd c4d2      	RJMP _0x20E008F
                 ; 0007 0093     }
                 ; 0007 0094 
                 ; 0007 0095     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
0048ce 81aa      	LDD  R26,Y+2
0048cf 81bb      	LDD  R27,Y+2+1
0048d0 5bac      	SUBI R26,LOW(-_config_sens_flag)
0048d1 4fba      	SBCI R27,HIGH(-_config_sens_flag)
0048d2 940e da50 	CALL __EEPROMRDB
0048d4 30e1      	CPI  R30,LOW(0x1)
0048d5 f411      	BRNE PC+3
0048d6 940c 491f 	JMP _0xE002A
                 ; 0007 0096         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
0048d8 e5e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
0048d9 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
0048da e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
0048db e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
0048dc 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0097         readConfig->samplingRate        =   300;
0048de 81a8      	LD   R26,Y
0048df 81b9      	LDD  R27,Y+1
0048e0 e2ec      	LDI  R30,LOW(300)
0048e1 e0f1      	LDI  R31,HIGH(300)
0048e2 940e c2a9 	CALL SUBOPT_0x10B
                 ; 0007 0098         readConfig->reOccurrence        =   0x8000;
0048e4 9612      	ADIW R26,2
0048e5 e0e0      	LDI  R30,LOW(32768)
0048e6 e8f0      	LDI  R31,HIGH(32768)
0048e7 940e c2a9 	CALL SUBOPT_0x10B
                 ; 0007 0099         readConfig->timeStartHour       =   0;
0048e9 9614      	ADIW R26,4
0048ea 940e c2ae 	CALL SUBOPT_0x10C
                 ; 0007 009A         readConfig->timeStartMin        =   0;
0048ec 9615      	ADIW R26,5
0048ed 940e c2ae 	CALL SUBOPT_0x10C
                 ; 0007 009B         readConfig->timeStopHour        =   0;
0048ef 9616      	ADIW R26,6
0048f0 940e c2ae 	CALL SUBOPT_0x10C
                 ; 0007 009C         readConfig->timeStopMin         =   0;
0048f2 9617      	ADIW R26,7
0048f3 940e c2ae 	CALL SUBOPT_0x10C
                 ; 0007 009D 
                 ; 0007 009E         readConfig->alarmEnable         =   0x00;
0048f5 9618      	ADIW R26,8
0048f6 940e c2ae 	CALL SUBOPT_0x10C
                 ; 0007 009F         readConfig->lowerLimit          =   10.0;
0048f8 9619      	ADIW R26,9
0048f9 940e c2b3 	CALL SUBOPT_0x10D
0048fb 940e d9ff 	CALL __PUTDP1
                 ; 0007 00A0         readConfig->lowerDelay          =   20;
0048fd 81a8      	LD   R26,Y
0048fe 81b9      	LDD  R27,Y+1
0048ff 961d      	ADIW R26,13
004900 e1e4      	LDI  R30,LOW(20)
004901 e0f0      	LDI  R31,HIGH(20)
004902 940e c2a9 	CALL SUBOPT_0x10B
                 ; 0007 00A1         readConfig->lowerExtreme        =   0.0;
004904 961f      	ADIW R26,15
004905 940e bfab 	CALL SUBOPT_0x8F
                 ; 0007 00A2         readConfig->upperLimit          =   180.0;
004907 81a8      	LD   R26,Y
004908 81b9      	LDD  R27,Y+1
004909 9653      	ADIW R26,19
                +
00490a e0e0     +LDI R30 , LOW ( 0x43340000 )
00490b e0f0     +LDI R31 , HIGH ( 0x43340000 )
00490c e364     +LDI R22 , BYTE3 ( 0x43340000 )
00490d e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
00490e 940e d9ff 	CALL __PUTDP1
                 ; 0007 00A3         readConfig->upperDelay          =   20;
004910 81a8      	LD   R26,Y
004911 81b9      	LDD  R27,Y+1
004912 9657      	ADIW R26,23
004913 e1e4      	LDI  R30,LOW(20)
004914 e0f0      	LDI  R31,HIGH(20)
004915 940e c2a9 	CALL SUBOPT_0x10B
                 ; 0007 00A4         readConfig->upperExtreme        =   200.0;
004917 9659      	ADIW R26,25
                +
004918 e0e0     +LDI R30 , LOW ( 0x43480000 )
004919 e0f0     +LDI R31 , HIGH ( 0x43480000 )
00491a e468     +LDI R22 , BYTE3 ( 0x43480000 )
00491b e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
00491c 940e d9ff 	CALL __PUTDP1
                 ; 0007 00A5         /*
                 ; 0007 00A6         readConfig->alarmEnable         =   0x00;
                 ; 0007 00A7         readConfig->lowerLimit          =   0.0;
                 ; 0007 00A8         readConfig->lowerDelay          =   10;
                 ; 0007 00A9         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AA         readConfig->upperLimit          =   0.0;
                 ; 0007 00AB         readConfig->upperDelay          =   10;
                 ; 0007 00AC         readConfig->upperExtreme        =   0.0;
                 ; 0007 00AD         */
                 ; 0007 00AE     }
                 ; 0007 00AF     else{
00491e c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B0         readConfig->samplingRate        =   config_sens[ch].samplingRate;
00491f 940e c2b8 	CALL SUBOPT_0x10E
004921 55e7      	SUBI R30,LOW(-_config_sens)
004922 4fff      	SBCI R31,HIGH(-_config_sens)
004923 01df      	MOVW R26,R30
004924 940e da4c 	CALL __EEPROMRDW
004926 81a8      	LD   R26,Y
004927 81b9      	LDD  R27,Y+1
004928 93ed      	ST   X+,R30
004929 93fc      	ST   X,R31
                 ; 0007 00B1         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
00492a 940e c2b8 	CALL SUBOPT_0x10E
                +
00492c 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
00492d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
00492e 01df      	MOVW R26,R30
00492f 940e da4c 	CALL __EEPROMRDW
                +
004931 81a8     +LDD R26 , Y + 0
004932 81b9     +LDD R27 , Y + 0 + 1
004933 9612     +ADIW R26 , 2
004934 93ed     +ST X + , R30
004935 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B2         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
004936 940e c2b8 	CALL SUBOPT_0x10E
                +
004938 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004939 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
00493a 01df      	MOVW R26,R30
00493b 940e da50 	CALL __EEPROMRDB
                +
00493d 81a8     +LDD R26 , Y + 0
00493e 81b9     +LDD R27 , Y + 0 + 1
00493f 9614     +ADIW R26 , 4
004940 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B3         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
004941 940e c2b8 	CALL SUBOPT_0x10E
                +
004943 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004944 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004945 01df      	MOVW R26,R30
004946 940e da50 	CALL __EEPROMRDB
                +
004948 81a8     +LDD R26 , Y + 0
004949 81b9     +LDD R27 , Y + 0 + 1
00494a 9615     +ADIW R26 , 5
00494b 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B4         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
00494c 940e c2b8 	CALL SUBOPT_0x10E
                +
00494e 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
00494f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004950 01df      	MOVW R26,R30
004951 940e da50 	CALL __EEPROMRDB
                +
004953 81a8     +LDD R26 , Y + 0
004954 81b9     +LDD R27 , Y + 0 + 1
004955 9616     +ADIW R26 , 6
004956 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B5         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
004957 940e c2b8 	CALL SUBOPT_0x10E
                +
004959 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
00495a 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
00495b 01df      	MOVW R26,R30
00495c 940e da50 	CALL __EEPROMRDB
                +
00495e 81a8     +LDD R26 , Y + 0
00495f 81b9     +LDD R27 , Y + 0 + 1
004960 9617     +ADIW R26 , 7
004961 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B6 
                 ; 0007 00B7         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
004962 940e c2b8 	CALL SUBOPT_0x10E
                +
004964 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004965 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004966 01df      	MOVW R26,R30
004967 940e da50 	CALL __EEPROMRDB
                +
004969 81a8     +LDD R26 , Y + 0
00496a 81b9     +LDD R27 , Y + 0 + 1
00496b 9618     +ADIW R26 , 8
00496c 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00B8         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
00496d 940e c2b8 	CALL SUBOPT_0x10E
00496f 940e c2be 	CALL SUBOPT_0x10F
                +
004971 81a8     +LDD R26 , Y + 0
004972 81b9     +LDD R27 , Y + 0 + 1
004973 9619     +ADIW R26 , 9
004974 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00B9         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004976 940e c2b8 	CALL SUBOPT_0x10E
004978 940e c2c4 	CALL SUBOPT_0x110
                +
00497a 81a8     +LDD R26 , Y + 0
00497b 81b9     +LDD R27 , Y + 0 + 1
00497c 961d     +ADIW R26 , 13
00497d 93ed     +ST X + , R30
00497e 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BA         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
00497f 940e c2b8 	CALL SUBOPT_0x10E
004981 940e c2ca 	CALL SUBOPT_0x111
                +
004983 81a8     +LDD R26 , Y + 0
004984 81b9     +LDD R27 , Y + 0 + 1
004985 961f     +ADIW R26 , 15
004986 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BB         readConfig->upperLimit          =   config_sens[ch].upperLimit;
004988 940e c2b8 	CALL SUBOPT_0x10E
00498a 940e c2d0 	CALL SUBOPT_0x112
                +
00498c 81a8     +LDD R26 , Y + 0
00498d 81b9     +LDD R27 , Y + 0 + 1
00498e 9653     +ADIW R26 , 19
00498f 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BC         readConfig->upperDelay          =   config_sens[ch].upperDelay;
004991 940e c2b8 	CALL SUBOPT_0x10E
004993 940e c2d6 	CALL SUBOPT_0x113
                +
004995 81a8     +LDD R26 , Y + 0
004996 81b9     +LDD R27 , Y + 0 + 1
004997 9657     +ADIW R26 , 23
004998 93ed     +ST X + , R30
004999 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00BD         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
00499a 940e c2b8 	CALL SUBOPT_0x10E
00499c 940e c2dc 	CALL SUBOPT_0x114
                +
00499e 81a8     +LDD R26 , Y + 0
00499f 81b9     +LDD R27 , Y + 0 + 1
0049a0 9659     +ADIW R26 , 25
0049a1 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00BE     }
                 _0xE002B:
                 ; 0007 00BF     return 0;
0049a3 e0e0      	LDI  R30,LOW(0)
0049a4 e0f0      	LDI  R31,HIGH(0)
0049a5 c3fc      	RJMP _0x20E008E
                 ; 0007 00C0 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C3 {
                 _getAuxDinConfig:
                 ; 0007 00C4     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
0049a6 940e c2a4 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
0049a8 f022      	BRMI _0xE002D
0049a9 81aa      	LDD  R26,Y+2
0049aa 81bb      	LDD  R27,Y+2+1
0049ab 9750      	SBIW R26,16
0049ac f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C5         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
0049ad e8e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
0049ae e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
0049af e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
0049b0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
0049b1 940e c290 	CALL SUBOPT_0x106
0049b3 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 00C6         return -1;
0049b5 c3ea      	RJMP _0x20E008F
                 ; 0007 00C7     }
                 ; 0007 00C8 
                 ; 0007 00C9     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
0049b6 81aa      	LDD  R26,Y+2
0049b7 81bb      	LDD  R27,Y+2+1
0049b8 5ba7      	SUBI R26,LOW(-_config_din_flag)
0049b9 4fba      	SBCI R27,HIGH(-_config_din_flag)
0049ba 940e da50 	CALL __EEPROMRDB
0049bc 30e1      	CPI  R30,LOW(0x1)
0049bd f071      	BREQ _0xE002F
                 ; 0007 00CA         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
0049be ece1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
0049bf e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
0049c0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
0049c1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
0049c2 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 00CB 
                 ; 0007 00CC         readConfig->channelEnable       =   0x00;
0049c4 81a8      	LD   R26,Y
0049c5 81b9      	LDD  R27,Y+1
0049c6 940e c2ae 	CALL SUBOPT_0x10C
                 ; 0007 00CD         readConfig->alarmDelay          =   0;
0049c8 9611      	ADIW R26,1
0049c9 940e c2e2 	CALL SUBOPT_0x115
                 ; 0007 00CE 
                 ; 0007 00CF         /* // -- for test -- //
                 ; 0007 00D0         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D1         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D2 
                 ; 0007 00D3         readConfig->alarmDelay          =   0;
                 ; 0007 00D4         */
                 ; 0007 00D5     }
                 ; 0007 00D6     else{
0049cb c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00D7         readConfig->channelEnable       =   config_din[ch].channelEnable;
0049cc 940e c2e7 	CALL SUBOPT_0x116
0049ce 5ce6      	SUBI R30,LOW(-_config_din)
0049cf 4ffe      	SBCI R31,HIGH(-_config_din)
0049d0 940e c2ed 	CALL SUBOPT_0x117
                 ; 0007 00D8         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
0049d2 940e c2e7 	CALL SUBOPT_0x116
                +
0049d4 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
0049d5 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
0049d6 01df      	MOVW R26,R30
0049d7 940e c2f4 	CALL SUBOPT_0x118
                 ; 0007 00D9     }
                 _0xE0030:
                 ; 0007 00DA     return 0;
0049d9 e0e0      	LDI  R30,LOW(0)
0049da e0f0      	LDI  R31,HIGH(0)
0049db c3c6      	RJMP _0x20E008E
                 ; 0007 00DB }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00DE {
                 _getAuxDoutConfig:
                 ; 0007 00DF     int i;
                 ; 0007 00E0 
                 ; 0007 00E1     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
0049dc 940e bf59 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0049de 81ad      	LDD  R26,Y+5
0049df 23aa      	TST  R26
0049e0 f022      	BRMI _0xE0032
0049e1 81ac      	LDD  R26,Y+4
0049e2 81bd      	LDD  R27,Y+4+1
0049e3 9715      	SBIW R26,5
0049e4 f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E2         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
0049e5 efe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
0049e6 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
0049e7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
0049e8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
0049e9 940e c2fc 	CALL SUBOPT_0x119
                 ; 0007 00E3         return -1;
0049eb efef      	LDI  R30,LOW(65535)
0049ec efff      	LDI  R31,HIGH(65535)
0049ed c144      	RJMP _0x20E0091
                 ; 0007 00E4     }
                 ; 0007 00E5 
                 ; 0007 00E6     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
0049ee 81ac      	LDD  R26,Y+4
0049ef 81bd      	LDD  R27,Y+4+1
0049f0 5aa7      	SUBI R26,LOW(-_config_dout_flag)
0049f1 4fba      	SBCI R27,HIGH(-_config_dout_flag)
0049f2 940e da50 	CALL __EEPROMRDB
0049f4 30e1      	CPI  R30,LOW(0x1)
0049f5 f0d1      	BREQ _0xE0034
                 ; 0007 00E7         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
0049f6 e3e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
0049f7 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
0049f8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
0049f9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
0049fa 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 00E8         readConfig->channelEnable       =   0x00;
0049fc 81aa      	LDD  R26,Y+2
0049fd 81bb      	LDD  R27,Y+2+1
0049fe e0e0      	LDI  R30,LOW(0)
0049ff 940e c262 	CALL SUBOPT_0xFF
                 ; 0007 00E9         readConfig->stateOnEvent        =   0x01;
004a01 e0e1      	LDI  R30,LOW(1)
004a02 940e c267 	CALL SUBOPT_0x100
                 ; 0007 00EA         readConfig->eventSourceNumber   =   0;
                 ; 0007 00EB 
                 ; 0007 00EC         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
004a04 3203     +CPI R16 , LOW ( 35 )
004a05 e0e0     +LDI R30 , HIGH ( 35 )
004a06 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004a07 f43c      	BRGE _0xE0037
                 ; 0007 00ED             readConfig->eventSource[i]  =   0x00;
004a08 940e c270 	CALL SUBOPT_0x101
004a0a e0a0      	LDI  R26,LOW(0)
004a0b 83a0      	STD  Z+0,R26
                 ; 0007 00EE         }
                +
004a0c 5f0f     +SUBI R16 , LOW ( - 1 )
004a0d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a0e cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00EF     }
                 ; 0007 00F0     else{
004a0f c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F1         readConfig->channelEnable       =   config_dout[ch].channelEnable;
004a10 940e c301 	CALL SUBOPT_0x11A
004a12 59e6      	SUBI R30,LOW(-_config_dout)
004a13 4ffe      	SBCI R31,HIGH(-_config_dout)
004a14 01df      	MOVW R26,R30
004a15 940e c276 	CALL SUBOPT_0x102
                 ; 0007 00F2         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
004a17 940e c301 	CALL SUBOPT_0x11A
                +
004a19 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004a1a 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004a1b 01df      	MOVW R26,R30
004a1c 940e c27c 	CALL SUBOPT_0x103
                 ; 0007 00F3         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
004a1e 940e c301 	CALL SUBOPT_0x11A
                +
004a20 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004a21 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004a22 01df      	MOVW R26,R30
004a23 940e c283 	CALL SUBOPT_0x104
                 ; 0007 00F4 
                 ; 0007 00F5         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
004a25 e6e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
004a26 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
004a27 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
004a28 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
004a29 940e c2fc 	CALL SUBOPT_0x119
                 ; 0007 00F6         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
004a2b e8e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
004a2c e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
004a2d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
004a2e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
004a2f 940e c307 	CALL SUBOPT_0x11B
004a31 940e c30f 	CALL SUBOPT_0x11C
                 ; 0007 00F7         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
004a33 ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
004a34 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
004a35 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
004a36 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
004a37 940e c307 	CALL SUBOPT_0x11B
004a39 940e c315 	CALL SUBOPT_0x11D
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
004a3b eee0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
004a3c e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
004a3d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
004a3e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
004a3f 940e c307 	CALL SUBOPT_0x11B
004a41 940e c31b 	CALL SUBOPT_0x11E
004a43 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 00F9         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004a45 e000     +LDI R16 , LOW ( 0 )
004a46 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
004a47 940e c301 	CALL SUBOPT_0x11A
004a49 940e c31b 	CALL SUBOPT_0x11E
004a4b 940e c321 	CALL SUBOPT_0x11F
004a4d f4a4      	BRGE _0xE003B
                 ; 0007 00FA             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
004a4e 940e c270 	CALL SUBOPT_0x101
                +
004a50 2f7e     +MOV R23 , R30
004a51 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004a52 940e c301 	CALL SUBOPT_0x11A
004a54 940e c326 	CALL SUBOPT_0x120
004a56 940e da50 	CALL __EEPROMRDB
                +
004a58 2fa7     +MOV R26 , R23
004a59 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004a5a 93ec      	ST   X,R30
                 ; 0007 00FB             printDebug("[0x%02X]",readConfig->eventSource[i]);
004a5b 940e c295 	CALL SUBOPT_0x107
004a5d 940e c29a 	CALL SUBOPT_0x108
                 ; 0007 00FC         }
                +
004a5f 5f0f     +SUBI R16 , LOW ( - 1 )
004a60 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a61 cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 00FD         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004a62 940e c301 	CALL SUBOPT_0x11A
004a64 940e c31b 	CALL SUBOPT_0x11E
004a66 2f0e      	MOV  R16,R30
004a67 2711      	CLR  R17
                 _0xE003D:
                +
004a68 3203     +CPI R16 , LOW ( 35 )
004a69 e0e0     +LDI R30 , HIGH ( 35 )
004a6a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004a6b f43c      	BRGE _0xE003E
                 ; 0007 00FE             readConfig->eventSource[i]  =   0x00;
004a6c 940e c270 	CALL SUBOPT_0x101
004a6e e0a0      	LDI  R26,LOW(0)
004a6f 83a0      	STD  Z+0,R26
                 ; 0007 00FF             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0100         }
                +
004a70 5f0f     +SUBI R16 , LOW ( - 1 )
004a71 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a72 cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0101         printDebug("\r\n");
004a73 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 0102 
                 ; 0007 0103     }
                 _0xE0038:
                 ; 0007 0104     return 0;
004a75 c0ba      	RJMP _0x20E0092
                 ; 0007 0105 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 0108 {
                 _getAuxAinConfig:
                 ; 0007 0109     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004a76 940e c2a4 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004a78 f022      	BRMI _0xE0040
004a79 81aa      	LDD  R26,Y+2
004a7a 81bb      	LDD  R27,Y+2+1
004a7b 9750      	SBIW R26,16
004a7c f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010A         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004a7d e0e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004a7e e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004a7f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
004a80 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
004a81 940e c290 	CALL SUBOPT_0x106
004a83 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 010B         return -1;
004a85 c31a      	RJMP _0x20E008F
                 ; 0007 010C     }
                 ; 0007 010D 
                 ; 0007 010E     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004a86 81aa      	LDD  R26,Y+2
004a87 81bb      	LDD  R27,Y+2+1
004a88 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004a89 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004a8a 940e da50 	CALL __EEPROMRDB
004a8c 30e1      	CPI  R30,LOW(0x1)
004a8d f071      	BREQ _0xE0042
                 ; 0007 010F         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
004a8e e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
004a8f e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
004a90 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
004a91 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
004a92 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0110         readConfig->channelEnable       =   0x00;
004a94 81a8      	LD   R26,Y
004a95 81b9      	LDD  R27,Y+1
004a96 940e c2ae 	CALL SUBOPT_0x10C
                 ; 0007 0111         readConfig->alarmLevel          =   0;
004a98 9611      	ADIW R26,1
004a99 940e bfab 	CALL SUBOPT_0x8F
                 ; 0007 0112     }
                 ; 0007 0113     else{
004a9b c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0114         readConfig->channelEnable       =   config_ain[ch].channelEnable;
004a9c 940e c32c 	CALL SUBOPT_0x121
004a9e 5de8      	SUBI R30,LOW(-_config_ain)
004a9f 4ffd      	SBCI R31,HIGH(-_config_ain)
004aa0 940e c2ed 	CALL SUBOPT_0x117
                 ; 0007 0115         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
004aa2 940e c32c 	CALL SUBOPT_0x121
                +
004aa4 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004aa5 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004aa6 01df      	MOVW R26,R30
004aa7 940e da48 	CALL __EEPROMRDD
                +
004aa9 81a8     +LDD R26 , Y + 0
004aaa 81b9     +LDD R27 , Y + 0 + 1
004aab 9611     +ADIW R26 , 1
004aac 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0116     }
                 _0xE0043:
                 ; 0007 0117     return 0;
004aae e0e0      	LDI  R30,LOW(0)
004aaf e0f0      	LDI  R31,HIGH(0)
004ab0 c2f1      	RJMP _0x20E008E
                 ; 0007 0118 }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011B {
                 _getAuxAoutConfig:
                 ; 0007 011C     int i;
                 ; 0007 011D 
                 ; 0007 011E     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
004ab1 940e bf59 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004ab3 81ad      	LDD  R26,Y+5
004ab4 23aa      	TST  R26
004ab5 f022      	BRMI _0xE0045
004ab6 81ac      	LDD  R26,Y+4
004ab7 81bd      	LDD  R27,Y+4+1
004ab8 9750      	SBIW R26,16
004ab9 f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 011F         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
004aba e7e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
004abb e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
004abc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
004abd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
004abe 940e c2fc 	CALL SUBOPT_0x119
                 ; 0007 0120         return -1;
004ac0 efef      	LDI  R30,LOW(65535)
004ac1 efff      	LDI  R31,HIGH(65535)
004ac2 c06f      	RJMP _0x20E0091
                 ; 0007 0121     }
                 ; 0007 0122 
                 ; 0007 0123     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
004ac3 81ac      	LDD  R26,Y+4
004ac4 81bd      	LDD  R27,Y+4+1
004ac5 59a2      	SUBI R26,LOW(-_config_aout_flag)
004ac6 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004ac7 940e da50 	CALL __EEPROMRDB
004ac9 30e1      	CPI  R30,LOW(0x1)
004aca f101      	BREQ _0xE0047
                 ; 0007 0124         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
004acb ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
004acc e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
004acd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
004ace e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
004acf 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0125         readConfig->channelEnable       =   0x00;
004ad1 81aa      	LDD  R26,Y+2
004ad2 81bb      	LDD  R27,Y+2+1
004ad3 e0e0      	LDI  R30,LOW(0)
004ad4 940e c262 	CALL SUBOPT_0xFF
                 ; 0007 0126         readConfig->levelOnEvent        =   0.0;
004ad6 940e bfab 	CALL SUBOPT_0x8F
                 ; 0007 0127         readConfig->eventSourceNumber   =   0;
004ad8 81aa      	LDD  R26,Y+2
004ad9 81bb      	LDD  R27,Y+2+1
004ada 9615      	ADIW R26,5
004adb e0e0      	LDI  R30,LOW(0)
004adc 93ec      	ST   X,R30
                 ; 0007 0128 
                 ; 0007 0129         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004add e000     +LDI R16 , LOW ( 0 )
004ade e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
004adf 3203     +CPI R16 , LOW ( 35 )
004ae0 e0e0     +LDI R30 , HIGH ( 35 )
004ae1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004ae2 f43c      	BRGE _0xE004A
                 ; 0007 012A             readConfig->eventSource[i]  =   0x00;
004ae3 940e c332 	CALL SUBOPT_0x122
004ae5 e0a0      	LDI  R26,LOW(0)
004ae6 83a0      	STD  Z+0,R26
                 ; 0007 012B         }
                +
004ae7 5f0f     +SUBI R16 , LOW ( - 1 )
004ae8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ae9 cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012C     }
                 ; 0007 012D     else{
004aea c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 012E         readConfig->channelEnable       =   config_aout[ch].channelEnable;
004aeb 940e c338 	CALL SUBOPT_0x123
004aed 58e8      	SUBI R30,LOW(-_config_aout)
004aee 4ffd      	SBCI R31,HIGH(-_config_aout)
004aef 01df      	MOVW R26,R30
004af0 940e c276 	CALL SUBOPT_0x102
                 ; 0007 012F         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
004af2 940e c338 	CALL SUBOPT_0x123
                +
004af4 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004af5 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004af6 01df      	MOVW R26,R30
004af7 940e da48 	CALL __EEPROMRDD
                +
004af9 81aa     +LDD R26 , Y + 2
004afa 81bb     +LDD R27 , Y + 2 + 1
004afb 9611     +ADIW R26 , 1
004afc 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0130         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
004afe 940e c338 	CALL SUBOPT_0x123
004b00 940e c33e 	CALL SUBOPT_0x124
                +
004b02 81aa     +LDD R26 , Y + 2
004b03 81bb     +LDD R27 , Y + 2 + 1
004b04 9615     +ADIW R26 , 5
004b05 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0131 
                 ; 0007 0132         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004b06 e000     +LDI R16 , LOW ( 0 )
004b07 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
004b08 940e c338 	CALL SUBOPT_0x123
004b0a 940e c33e 	CALL SUBOPT_0x124
004b0c 940e c321 	CALL SUBOPT_0x11F
004b0e f484      	BRGE _0xE004E
                 ; 0007 0133             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
004b0f 940e c332 	CALL SUBOPT_0x122
                +
004b11 2f7e     +MOV R23 , R30
004b12 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004b13 940e c338 	CALL SUBOPT_0x123
004b15 940e c344 	CALL SUBOPT_0x125
004b17 940e da50 	CALL __EEPROMRDB
                +
004b19 2fa7     +MOV R26 , R23
004b1a 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004b1b 93ec      	ST   X,R30
                 ; 0007 0134         }
                +
004b1c 5f0f     +SUBI R16 , LOW ( - 1 )
004b1d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b1e cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0135         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004b1f 940e c338 	CALL SUBOPT_0x123
004b21 940e c33e 	CALL SUBOPT_0x124
004b23 2f0e      	MOV  R16,R30
004b24 2711      	CLR  R17
                 _0xE0050:
                +
004b25 3203     +CPI R16 , LOW ( 35 )
004b26 e0e0     +LDI R30 , HIGH ( 35 )
004b27 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004b28 f43c      	BRGE _0xE0051
                 ; 0007 0136             readConfig->eventSource[i]  =   0x00;
004b29 940e c332 	CALL SUBOPT_0x122
004b2b e0a0      	LDI  R26,LOW(0)
004b2c 83a0      	STD  Z+0,R26
                 ; 0007 0137         }
                +
004b2d 5f0f     +SUBI R16 , LOW ( - 1 )
004b2e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b2f cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 0138     }
                 _0xE004B:
                 ; 0007 0139     return 0;
                 _0x20E0092:
004b30 e0e0      	LDI  R30,LOW(0)
004b31 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0091:
004b32 8119      	LDD  R17,Y+1
004b33 8108      	LDD  R16,Y+0
004b34 9626      	ADIW R28,6
004b35 9508      	RET
                 ; 0007 013A }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 013D {
                 _getBuzzerConfig:
                 ; 0007 013E     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 013F     int i;
                 ; 0007 0140 
                 ; 0007 0141     if( config_buzz_flag != 0x01){
004b36 93ba      	ST   -Y,R27
004b37 93aa      	ST   -Y,R26
004b38 9724      	SBIW R28,4
004b39 ece7      	LDI  R30,LOW(199)
004b3a 83e8      	ST   Y,R30
004b3b ecef      	LDI  R30,LOW(207)
004b3c 83e9      	STD  Y+1,R30
004b3d ede7      	LDI  R30,LOW(215)
004b3e 83ea      	STD  Y+2,R30
004b3f edef      	LDI  R30,LOW(223)
004b40 83eb      	STD  Y+3,R30
004b41 931a      	ST   -Y,R17
004b42 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
004b43 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004b44 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004b45 940e da50 	CALL __EEPROMRDB
004b47 30e1      	CPI  R30,LOW(0x1)
004b48 f141      	BREQ _0xE0052
                 ; 0007 0142         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
004b49 eee6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
004b4a e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
004b4b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
004b4c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
004b4d 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0143         readConfig->enable              =   0x01;
004b4f 81ae      	LDD  R26,Y+6
004b50 81bf      	LDD  R27,Y+6+1
004b51 e0e1      	LDI  R30,LOW(1)
004b52 93ec      	ST   X,R30
                 ; 0007 0144         readConfig->eventSourceNumber   =   sizeof(errSrc);
004b53 9611      	ADIW R26,1
004b54 e0e4      	LDI  R30,LOW(4)
004b55 93ec      	ST   X,R30
                 ; 0007 0145 
                 ; 0007 0146         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 0147         for(i=0;i<sizeof(errSrc);i++){
                +
004b56 e000     +LDI R16 , LOW ( 0 )
004b57 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
004b58 3004     +CPI R16 , LOW ( 4 )
004b59 e0e0     +LDI R30 , HIGH ( 4 )
004b5a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004b5b f4a4      	BRGE _0xE0055
                 ; 0007 0148             if(i<sizeof(errSrc)){
                +
004b5c 3004     +CPI R16 , LOW ( 4 )
004b5d e0e0     +LDI R30 , HIGH ( 4 )
004b5e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004b5f f44c      	BRGE _0xE0056
                 ; 0007 0149                 readConfig->eventSource[i]  =   errSrc[i];
004b60 940e c34a 	CALL SUBOPT_0x126
004b62 010f      	MOVW R0,R30
004b63 940e c350 	CALL SUBOPT_0x127
004b65 91ec      	LD   R30,X
004b66 01d0      	MOVW R26,R0
004b67 93ec      	ST   X,R30
                 ; 0007 014A                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014B             }
                 ; 0007 014C             else{
004b68 c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 014D                 readConfig->eventSource[i]  =   0x00;
004b69 940e c34a 	CALL SUBOPT_0x126
004b6b e0a0      	LDI  R26,LOW(0)
004b6c 83a0      	STD  Z+0,R26
                 ; 0007 014E             }
                 _0xE0057:
                 ; 0007 014F         }
                +
004b6d 5f0f     +SUBI R16 , LOW ( - 1 )
004b6e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b6f cfe8      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0150         //printDebug("\r\n");
                 ; 0007 0151     }
                 ; 0007 0152     else{
004b70 c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0153         readConfig->enable              =   config_buzz.enable;
004b71 e0a8      	LDI  R26,LOW(_config_buzz)
004b72 e0b5      	LDI  R27,HIGH(_config_buzz)
004b73 940e da50 	CALL __EEPROMRDB
004b75 81ae      	LDD  R26,Y+6
004b76 81bf      	LDD  R27,Y+6+1
004b77 93ec      	ST   X,R30
                 ; 0007 0154         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
004b78 940e c355 	CALL SUBOPT_0x128
                +
004b7a 81ae     +LDD R26 , Y + 6
004b7b 81bf     +LDD R27 , Y + 6 + 1
004b7c 9611     +ADIW R26 , 1
004b7d 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0155 
                 ; 0007 0156         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004b7e e000     +LDI R16 , LOW ( 0 )
004b7f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004b80 940e c355 	CALL SUBOPT_0x128
004b82 940e c321 	CALL SUBOPT_0x11F
004b84 f454      	BRGE _0xE005B
                 ; 0007 0157             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
004b85 940e c34a 	CALL SUBOPT_0x126
004b87 010f      	MOVW R0,R30
                +
004b88 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
004b89 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
004b8a 940e c245 	CALL SUBOPT_0xFB
                 ; 0007 0158         }
                +
004b8c 5f0f     +SUBI R16 , LOW ( - 1 )
004b8d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b8e cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 0159         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004b8f 940e c355 	CALL SUBOPT_0x128
004b91 2f0e      	MOV  R16,R30
004b92 2711      	CLR  R17
                 _0xE005D:
                +
004b93 3203     +CPI R16 , LOW ( 35 )
004b94 e0e0     +LDI R30 , HIGH ( 35 )
004b95 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004b96 f43c      	BRGE _0xE005E
                 ; 0007 015A             readConfig->eventSource[i]  =   0x00;
004b97 940e c34a 	CALL SUBOPT_0x126
004b99 e0a0      	LDI  R26,LOW(0)
004b9a 83a0      	STD  Z+0,R26
                 ; 0007 015B         }
                +
004b9b 5f0f     +SUBI R16 , LOW ( - 1 )
004b9c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b9d cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015C     }
                 _0xE0058:
                 ; 0007 015D 
                 ; 0007 015E     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
004b9e e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
004b9f e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
004ba0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
004ba1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
004ba2 940e c35a 	CALL SUBOPT_0x129
004ba4 91ec      	LD   R30,X
004ba5 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 015F     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
004ba7 e4e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
004ba8 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
004ba9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
004baa e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
004bab 940e c35f 	CALL SUBOPT_0x12A
004bad 81e1      	LDD  R30,Z+1
004bae 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0160     printDebug("<getBuzzerConfig> eventSource       >>");
                +
004bb0 e7e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
004bb1 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
004bb2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
004bb3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
004bb4 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0161     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004bb6 e000     +LDI R16 , LOW ( 0 )
004bb7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
004bb8 3203     +CPI R16 , LOW ( 35 )
004bb9 e0e0     +LDI R30 , HIGH ( 35 )
004bba 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004bbb f45c      	BRGE _0xE0061
                 ; 0007 0162         printDebug("[0x%02X]",readConfig->eventSource[i]);
004bbc 940e c364 	CALL SUBOPT_0x12B
004bbe 940e c35f 	CALL SUBOPT_0x12A
004bc0 940e c369 	CALL SUBOPT_0x12C
004bc2 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0163     }
                +
004bc4 5f0f     +SUBI R16 , LOW ( - 1 )
004bc5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bc6 cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0164     printDebug("\r\n");
004bc7 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 0165 
                 ; 0007 0166     return 0;
004bc9 940e c185 	CALL SUBOPT_0xD8
004bcb 9628      	ADIW R28,8
004bcc 9508      	RET
                 ; 0007 0167 }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016A {
                 _getEnvAlarmConfig:
                 ; 0007 016B     if( config_alm_flag != 0x01 ){
004bcd 93ba      	ST   -Y,R27
004bce 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004bcf e7af      	LDI  R26,LOW(_config_alm_flag)
004bd0 e0b5      	LDI  R27,HIGH(_config_alm_flag)
004bd1 940e da50 	CALL __EEPROMRDB
004bd3 30e1      	CPI  R30,LOW(0x1)
004bd4 f121      	BREQ _0xE0062
                 ; 0007 016C         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
004bd5 e9ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
004bd6 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
004bd7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
004bd8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
004bd9 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 016D         readConfig->gsmRSSILevel         =   0;
004bdb 81a8      	LD   R26,Y
004bdc 81b9      	LDD  R27,Y+1
004bdd 940e bfab 	CALL SUBOPT_0x8F
                 ; 0007 016E         readConfig->gsmCreditBalance     =   0;
004bdf 81a8      	LD   R26,Y
004be0 81b9      	LDD  R27,Y+1
004be1 9614      	ADIW R26,4
004be2 e0e0      	LDI  R30,LOW(0)
004be3 e0f0      	LDI  R31,HIGH(0)
004be4 940e c2a9 	CALL SUBOPT_0x10B
                 ; 0007 016F         readConfig->batteryLevel         =   0;
004be6 9616      	ADIW R26,6
004be7 940e bfab 	CALL SUBOPT_0x8F
                 ; 0007 0170         readConfig->commSignalLevel      =   0;
004be9 81a8      	LD   R26,Y
004bea 81b9      	LDD  R27,Y+1
004beb 961a      	ADIW R26,10
004bec 940e bfab 	CALL SUBOPT_0x8F
                 ; 0007 0171         readConfig->commLostDelay        =   0;
004bee 81a8      	LD   R26,Y
004bef 81b9      	LDD  R27,Y+1
004bf0 961e      	ADIW R26,14
004bf1 e0e0      	LDI  R30,LOW(0)
004bf2 e0f0      	LDI  R31,HIGH(0)
004bf3 940e c2a9 	CALL SUBOPT_0x10B
                 ; 0007 0172         readConfig->memoryMin            =   0;
004bf5 9650      	ADIW R26,16
004bf6 940e c2e2 	CALL SUBOPT_0x115
                 ; 0007 0173     }
                 ; 0007 0174     else{
004bf8 c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0175         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
004bf9 e2ad      	LDI  R26,LOW(_config_alm)
004bfa e0b5      	LDI  R27,HIGH(_config_alm)
004bfb 940e da48 	CALL __EEPROMRDD
004bfd 81a8      	LD   R26,Y
004bfe 81b9      	LDD  R27,Y+1
004bff 940e d9ff 	CALL __PUTDP1
                 ; 0007 0176         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004c01 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004c02 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004c03 940e da4c 	CALL __EEPROMRDW
                +
004c05 81a8     +LDD R26 , Y + 0
004c06 81b9     +LDD R27 , Y + 0 + 1
004c07 9614     +ADIW R26 , 4
004c08 93ed     +ST X + , R30
004c09 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 0177         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
004c0a e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004c0b e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004c0c 940e da48 	CALL __EEPROMRDD
                +
004c0e 81a8     +LDD R26 , Y + 0
004c0f 81b9     +LDD R27 , Y + 0 + 1
004c10 9616     +ADIW R26 , 6
004c11 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 0178         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004c13 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004c14 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004c15 940e da48 	CALL __EEPROMRDD
                +
004c17 81a8     +LDD R26 , Y + 0
004c18 81b9     +LDD R27 , Y + 0 + 1
004c19 961a     +ADIW R26 , 10
004c1a 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 0179         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004c1c e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004c1d e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004c1e 940e da4c 	CALL __EEPROMRDW
                +
004c20 81a8     +LDD R26 , Y + 0
004c21 81b9     +LDD R27 , Y + 0 + 1
004c22 961e     +ADIW R26 , 14
004c23 93ed     +ST X + , R30
004c24 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017A         readConfig->memoryMin            =   config_alm.memoryMin;
                +
004c25 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004c26 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004c27 940e da4c 	CALL __EEPROMRDW
                +
004c29 81a8     +LDD R26 , Y + 0
004c2a 81b9     +LDD R27 , Y + 0 + 1
004c2b 9650     +ADIW R26 , 16
004c2c 93ed     +ST X + , R30
004c2d 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017B     }
                 _0xE0063:
                 ; 0007 017C 
                 ; 0007 017D     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004c2e ede1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004c2f e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004c30 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004c31 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004c32 940e c36e 	CALL SUBOPT_0x12D
004c34 940e c373 	CALL SUBOPT_0x12E
                 ; 0007 017E     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
004c36 e0e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
004c37 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
004c38 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
004c39 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
004c3a 940e c36e 	CALL SUBOPT_0x12D
004c3c 9614      	ADIW R26,4
004c3d 940e c378 	CALL SUBOPT_0x12F
                 ; 0007 017F     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004c3f e3e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004c40 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004c41 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004c42 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004c43 940e c37b 	CALL SUBOPT_0x130
004c45 940e c380 	CALL SUBOPT_0x131
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
004c47 e6e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
004c48 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
004c49 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
004c4a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004c4b 940e c37b 	CALL SUBOPT_0x130
004c4d 940e c387 	CALL SUBOPT_0x132
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004c4f e9e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004c50 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004c51 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004c52 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004c53 940e c36e 	CALL SUBOPT_0x12D
004c55 961e      	ADIW R26,14
004c56 940e c378 	CALL SUBOPT_0x12F
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
004c58 ece1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
004c59 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
004c5a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004c5b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004c5c 940e c36e 	CALL SUBOPT_0x12D
004c5e 9650      	ADIW R26,16
004c5f c033      	RJMP _0x20E0090
                 ; 0007 0183 
                 ; 0007 0184     return 0;
                 ; 0007 0185 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 0188 {
                 _getStatusReportConfig:
                 ; 0007 0189     if( config_stat_flag != 0x01 ){
004c60 93ba      	ST   -Y,R27
004c61 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004c62 e8a0      	LDI  R26,LOW(_config_stat_flag)
004c63 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004c64 940e da50 	CALL __EEPROMRDB
004c66 30e1      	CPI  R30,LOW(0x1)
004c67 f081      	BREQ _0xE0064
                 ; 0007 018A         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
004c68 efe1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
004c69 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
004c6a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004c6b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004c6c 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 018B         readConfig->accm                =   0x30;
004c6e 81a8      	LD   R26,Y
004c6f 81b9      	LDD  R27,Y+1
004c70 e3e0      	LDI  R30,LOW(48)
004c71 93ec      	ST   X,R30
                 ; 0007 018C         readConfig->intv                =   60;
004c72 9611      	ADIW R26,1
004c73 e3ec      	LDI  R30,LOW(60)
004c74 e0f0      	LDI  R31,HIGH(60)
004c75 93ed      	ST   X+,R30
004c76 93fc      	ST   X,R31
                 ; 0007 018D     }
                 ; 0007 018E     else{
004c77 c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 018F         readConfig->accm                =   config_stat.accm;
004c78 e3af      	LDI  R26,LOW(_config_stat)
004c79 e0b5      	LDI  R27,HIGH(_config_stat)
004c7a 940e da50 	CALL __EEPROMRDB
004c7c 81a8      	LD   R26,Y
004c7d 81b9      	LDD  R27,Y+1
004c7e 93ec      	ST   X,R30
                 ; 0007 0190         readConfig->intv                =   config_stat.intv;
                +
004c7f e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004c80 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004c81 940e c2f4 	CALL SUBOPT_0x118
                 ; 0007 0191     }
                 _0xE0065:
                 ; 0007 0192 
                 ; 0007 0193     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004c83 e2e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004c84 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
004c85 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
004c86 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
004c87 940e c36e 	CALL SUBOPT_0x12D
004c89 91ec      	LD   R30,X
004c8a 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0194     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
004c8c e5e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
004c8d e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
004c8e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
004c8f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
004c90 940e c36e 	CALL SUBOPT_0x12D
004c92 9611      	ADIW R26,1
                 _0x20E0090:
004c93 940e d9f0 	CALL __GETW1P
004c95 940e bd4a 	CALL SUBOPT_0x34
004c97 940e bc5e 	CALL SUBOPT_0x12
                 ; 0007 0195 
                 ; 0007 0196     return 0;
004c99 e0e0      	LDI  R30,LOW(0)
004c9a e0f0      	LDI  R31,HIGH(0)
004c9b 9622      	ADIW R28,2
004c9c 9508      	RET
                 ; 0007 0197 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 019F {
                 _setPropertiesConfig:
                 ; 0007 01A0     int i;
                 ; 0007 01A1 
                 ; 0007 01A2     for(i=0;i<DEVTYPE_LENGTH;i++)
004c9d 940e bf59 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
004c9f e000     +LDI R16 , LOW ( 0 )
004ca0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
004ca1 3104     +CPI R16 , LOW ( 20 )
004ca2 e0e0     +LDI R30 , HIGH ( 20 )
004ca3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004ca4 f474      	BRGE _0xE0068
                 ; 0007 01A3     {
                 ; 0007 01A4         config_prop.deviceType[i]       = newConfig->deviceType[i];
004ca5 01f8      	MOVW R30,R16
004ca6 50e0      	SUBI R30,LOW(-_config_prop)
004ca7 40f0      	SBCI R31,HIGH(-_config_prop)
004ca8 010f      	MOVW R0,R30
004ca9 01f8      	MOVW R30,R16
004caa 81aa      	LDD  R26,Y+2
004cab 81bb      	LDD  R27,Y+2+1
004cac 940e c38e 	CALL SUBOPT_0x133
004cae 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01A5     }
                +
004cb0 5f0f     +SUBI R16 , LOW ( - 1 )
004cb1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cb2 cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A6 
                 ; 0007 01A7     /*
                 ; 0007 01A8     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01A9     {
                 ; 0007 01AA         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AB     }
                 ; 0007 01AC     */
                 ; 0007 01AD 
                 ; 0007 01AE     for(i=0;i<NAME_LENGTH;i++)
                +
004cb3 e000     +LDI R16 , LOW ( 0 )
004cb4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
004cb5 3208     +CPI R16 , LOW ( 40 )
004cb6 e0e0     +LDI R30 , HIGH ( 40 )
004cb7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004cb8 f484      	BRGE _0xE006B
                 ; 0007 01AF     {
                 ; 0007 01B0         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
004cb9 e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004cba e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004cbb 0fe0      	ADD  R30,R16
004cbc 1ff1      	ADC  R31,R17
004cbd 01df      	MOVW R26,R30
004cbe 81ea      	LDD  R30,Y+2
004cbf 81fb      	LDD  R31,Y+2+1
004cc0 96b8      	ADIW R30,40
004cc1 0fe0      	ADD  R30,R16
004cc2 1ff1      	ADC  R31,R17
004cc3 81e0      	LD   R30,Z
004cc4 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01B1     }
                +
004cc6 5f0f     +SUBI R16 , LOW ( - 1 )
004cc7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cc8 cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B2 
                 ; 0007 01B3     for(i=0;i<ID_LENGTH;i++)
                +
004cc9 e000     +LDI R16 , LOW ( 0 )
004cca e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
004ccb 3104     +CPI R16 , LOW ( 20 )
004ccc e0e0     +LDI R30 , HIGH ( 20 )
004ccd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004cce f46c      	BRGE _0xE006E
                 ; 0007 01B4     {
                 ; 0007 01B5         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
004ccf e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004cd0 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004cd1 0fe0      	ADD  R30,R16
004cd2 1ff1      	ADC  R31,R17
004cd3 01df      	MOVW R26,R30
004cd4 940e c24d 	CALL SUBOPT_0xFC
004cd6 81e0      	LD   R30,Z
004cd7 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01B6     }
                +
004cd9 5f0f     +SUBI R16 , LOW ( - 1 )
004cda 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cdb cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01B7 
                 ; 0007 01B8     for(i=0;i<NAME_LENGTH;i++)
                +
004cdc e000     +LDI R16 , LOW ( 0 )
004cdd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
004cde 3208     +CPI R16 , LOW ( 40 )
004cdf e0e0     +LDI R30 , HIGH ( 40 )
004ce0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004ce1 f46c      	BRGE _0xE0071
                 ; 0007 01B9     {
                 ; 0007 01BA         config_prop.hostName[i]         = newConfig->hostName[i];
                +
004ce2 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004ce3 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004ce4 0fe0      	ADD  R30,R16
004ce5 1ff1      	ADC  R31,R17
004ce6 01df      	MOVW R26,R30
004ce7 940e c254 	CALL SUBOPT_0xFD
004ce9 81e0      	LD   R30,Z
004cea 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01BB     }
                +
004cec 5f0f     +SUBI R16 , LOW ( - 1 )
004ced 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cee cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BC 
                 ; 0007 01BD     for(i=0;i<ID_LENGTH;i++)
                +
004cef e000     +LDI R16 , LOW ( 0 )
004cf0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004cf1 3104     +CPI R16 , LOW ( 20 )
004cf2 e0e0     +LDI R30 , HIGH ( 20 )
004cf3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004cf4 f46c      	BRGE _0xE0074
                 ; 0007 01BE     {
                 ; 0007 01BF         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004cf5 e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004cf6 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004cf7 0fe0      	ADD  R30,R16
004cf8 1ff1      	ADC  R31,R17
004cf9 01df      	MOVW R26,R30
004cfa 940e c25b 	CALL SUBOPT_0xFE
004cfc 81e0      	LD   R30,Z
004cfd 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01C0     }
                +
004cff 5f0f     +SUBI R16 , LOW ( - 1 )
004d00 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d01 cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C1 
                 ; 0007 01C2     config_prop.timeZone                = newConfig->timeZone;
                +
004d02 eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004d03 e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004d04 010f      	MOVW R0,R30
004d05 81aa      	LDD  R26,Y+2
004d06 81bb      	LDD  R27,Y+2+1
004d07 56a0      	SUBI R26,LOW(-160)
004d08 4fbf      	SBCI R27,HIGH(-160)
004d09 940e c393 	CALL SUBOPT_0x134
                 ; 0007 01C3 
                 ; 0007 01C4     config_prop_flag                    = 0x01;
004d0b e4a2      	LDI  R26,LOW(_config_prop_flag)
004d0c e0b5      	LDI  R27,HIGH(_config_prop_flag)
004d0d 940e c398 	CALL SUBOPT_0x135
                 ; 0007 01C5 
                 ; 0007 01C6     is_properties_config_update          = 1;
004d0f 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01C7 
                 ; 0007 01C8     return 0;
004d11 940e c185 	CALL SUBOPT_0xD8
004d13 c08e      	RJMP _0x20E008E
                 ; 0007 01C9 }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CC {
                 _setOperatingConfig:
                 ; 0007 01CD     int i;
                 ; 0007 01CE 
                 ; 0007 01CF     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004d14 940e bf59 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004d16 81aa      	LDD  R26,Y+2
004d17 81bb      	LDD  R27,Y+2+1
004d18 91ac      	LD   R26,X
004d19 31a0      	CPI  R26,LOW(0x10)
004d1a f029      	BREQ _0xE0076
004d1b 81aa      	LDD  R26,Y+2
004d1c 81bb      	LDD  R27,Y+2+1
004d1d 91ac      	LD   R26,X
004d1e 32a0      	CPI  R26,LOW(0x20)
004d1f f409      	BRNE _0xE0077
                 _0xE0076:
004d20 c009      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D0         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004d21 e8e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004d22 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004d23 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004d24 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004d25 940e c28a 	CALL SUBOPT_0x105
                 ; 0007 01D1         return -1;
004d27 940e c39c 	CALL SUBOPT_0x136
004d29 c078      	RJMP _0x20E008E
                 ; 0007 01D2     }
                 ; 0007 01D3 
                 ; 0007 01D4     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004d2a 81aa      	LDD  R26,Y+2
004d2b 81bb      	LDD  R27,Y+2+1
004d2c 91ec      	LD   R30,X
004d2d eaa1      	LDI  R26,LOW(_config_oper)
004d2e e0b0      	LDI  R27,HIGH(_config_oper)
004d2f 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01D5     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004d31 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004d32 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004d33 81ea      	LDD  R30,Y+2
004d34 81fb      	LDD  R31,Y+2+1
004d35 81e1      	LDD  R30,Z+1
004d36 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01D6     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004d38 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004d39 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004d3a 81ea      	LDD  R30,Y+2
004d3b 81fb      	LDD  R31,Y+2+1
004d3c 81e2      	LDD  R30,Z+2
004d3d 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01D7 
                 ; 0007 01D8     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004d3f ece1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004d40 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004d41 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004d42 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004d43 940e da29 	CALL __PUTPARD1
004d45 eaa1      	LDI  R26,LOW(_config_oper)
004d46 e0b0      	LDI  R27,HIGH(_config_oper)
004d47 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 01D9     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004d49 edee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004d4a e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004d4b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004d4c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004d4d 940e da29 	CALL __PUTPARD1
                +
004d4f eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004d50 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004d51 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 01DA     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004d53 940e c3a4 	CALL SUBOPT_0x138
                +
004d55 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004d56 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004d57 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 01DB     printDebug("\r\n sensorEnable    >> ");
                +
004d59 e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004d5a e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004d5b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004d5c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004d5d 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 01DC 
                 ; 0007 01DD     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004d5f e000     +LDI R16 , LOW ( 0 )
004d60 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004d61 3005     +CPI R16 , LOW ( 5 )
004d62 e0e0     +LDI R30 , HIGH ( 5 )
004d63 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004d64 f4c4      	BRGE _0xE007A
                 ; 0007 01DE     {
                 ; 0007 01DF         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004d65 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004d66 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004d67 0fe0      	ADD  R30,R16
004d68 1ff1      	ADC  R31,R17
004d69 01df      	MOVW R26,R30
004d6a 940e c270 	CALL SUBOPT_0x101
004d6c 81e0      	LD   R30,Z
004d6d 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01E0         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004d6f 940e c364 	CALL SUBOPT_0x12B
004d71 940e da29 	CALL __PUTPARD1
                +
004d73 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004d74 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004d75 0fe0      	ADD  R30,R16
004d76 1ff1      	ADC  R31,R17
004d77 01df      	MOVW R26,R30
004d78 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 01E1     }
                +
004d7a 5f0f     +SUBI R16 , LOW ( - 1 )
004d7b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d7c cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E2     printDebug("\r\n");
004d7d 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 01E3 
                 ; 0007 01E4     config_oper_flag                    =   0x01;
004d7f e4a3      	LDI  R26,LOW(_config_oper_flag)
004d80 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004d81 940e c398 	CALL SUBOPT_0x135
                 ; 0007 01E5 
                 ; 0007 01E6     is_operating_config_update          =   1;
004d83 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01E7 
                 ; 0007 01E8     return 0;
004d85 940e c185 	CALL SUBOPT_0xD8
004d87 c01a      	RJMP _0x20E008E
                 ; 0007 01E9 }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EC {
                 _setSensorConfig:
                 ; 0007 01ED     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004d88 940e c2a4 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004d8a f022      	BRMI _0xE007C
004d8b 81aa      	LDD  R26,Y+2
004d8c 81bb      	LDD  R27,Y+2+1
004d8d 9715      	SBIW R26,5
004d8e f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01EE         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004d8f e2ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004d90 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004d91 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004d92 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004d93 c008      	RJMP _0x20E008D
                 ; 0007 01EF         return -1;
                 ; 0007 01F0     }
                 ; 0007 01F1     if(newConfig->samplingRate == 0){
                 _0xE007B:
004d94 940e c3ab 	CALL SUBOPT_0x139
004d96 9730      	SBIW R30,0
004d97 f461      	BRNE _0xE007E
                 ; 0007 01F2         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004d98 e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004d99 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004d9a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004d9b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E008D:
004d9c 940e da29 	CALL __PUTPARD1
004d9e 940e bd53 	CALL SUBOPT_0x36
                 ; 0007 01F3         return -1;
                 _0x20E008F:
004da0 efef      	LDI  R30,LOW(65535)
004da1 efff      	LDI  R31,HIGH(65535)
                 _0x20E008E:
004da2 9624      	ADIW R28,4
004da3 9508      	RET
                 ; 0007 01F4     }
                 ; 0007 01F5 
                 ; 0007 01F6     if(newConfig->samplingRate < 60){
                 _0xE007E:
004da4 940e c3ab 	CALL SUBOPT_0x139
004da6 97fc      	SBIW R30,60
004da7 f430      	BRSH _0xE007F
                 ; 0007 01F7         newConfig->samplingRate         =   60;
004da8 81a8      	LD   R26,Y
004da9 81b9      	LDD  R27,Y+1
004daa e3ec      	LDI  R30,LOW(60)
004dab e0f0      	LDI  R31,HIGH(60)
004dac 93ed      	ST   X+,R30
004dad 93fc      	ST   X,R31
                 ; 0007 01F8     }
                 ; 0007 01F9 
                 ; 0007 01FA     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004dae 940e c2b8 	CALL SUBOPT_0x10E
004db0 55e7      	SUBI R30,LOW(-_config_sens)
004db1 4fff      	SBCI R31,HIGH(-_config_sens)
004db2 010f      	MOVW R0,R30
004db3 940e c3ab 	CALL SUBOPT_0x139
004db5 940e c3b0 	CALL SUBOPT_0x13A
                 ; 0007 01FB     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004db7 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004db8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004db9 010f      	MOVW R0,R30
004dba 81a8      	LD   R26,Y
004dbb 81b9      	LDD  R27,Y+1
004dbc 9612      	ADIW R26,2
004dbd 940e c3b4 	CALL SUBOPT_0x13B
                 ; 0007 01FC     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004dbf 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004dc0 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004dc1 01df      	MOVW R26,R30
004dc2 81e8      	LD   R30,Y
004dc3 81f9      	LDD  R31,Y+1
004dc4 81e4      	LDD  R30,Z+4
004dc5 940e c3b7 	CALL SUBOPT_0x13C
                 ; 0007 01FD     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004dc7 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004dc8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004dc9 01df      	MOVW R26,R30
004dca 81e8      	LD   R30,Y
004dcb 81f9      	LDD  R31,Y+1
004dcc 81e5      	LDD  R30,Z+5
004dcd 940e c3b7 	CALL SUBOPT_0x13C
                 ; 0007 01FE     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004dcf 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004dd0 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004dd1 01df      	MOVW R26,R30
004dd2 81e8      	LD   R30,Y
004dd3 81f9      	LDD  R31,Y+1
004dd4 81e6      	LDD  R30,Z+6
004dd5 940e c3b7 	CALL SUBOPT_0x13C
                 ; 0007 01FF     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004dd7 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004dd8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004dd9 01df      	MOVW R26,R30
004dda 81e8      	LD   R30,Y
004ddb 81f9      	LDD  R31,Y+1
004ddc 81e7      	LDD  R30,Z+7
004ddd 940e c3b7 	CALL SUBOPT_0x13C
                 ; 0007 0200 
                 ; 0007 0201     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004ddf 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004de0 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004de1 01df      	MOVW R26,R30
004de2 81e8      	LD   R30,Y
004de3 81f9      	LDD  R31,Y+1
004de4 85e0      	LDD  R30,Z+8
004de5 940e c3b7 	CALL SUBOPT_0x13C
                 ; 0007 0202     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004de7 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004de8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004de9 010f      	MOVW R0,R30
004dea 81a8      	LD   R26,Y
004deb 81b9      	LDD  R27,Y+1
004dec 9619      	ADIW R26,9
004ded 940e c3ba 	CALL SUBOPT_0x13D
                 ; 0007 0203     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004def 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004df0 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004df1 010f      	MOVW R0,R30
004df2 81a8      	LD   R26,Y
004df3 81b9      	LDD  R27,Y+1
004df4 961d      	ADIW R26,13
004df5 940e c3b4 	CALL SUBOPT_0x13B
                 ; 0007 0204     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004df7 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004df8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004df9 010f      	MOVW R0,R30
004dfa 81a8      	LD   R26,Y
004dfb 81b9      	LDD  R27,Y+1
004dfc 961f      	ADIW R26,15
004dfd 940e c3ba 	CALL SUBOPT_0x13D
                 ; 0007 0205     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004dff 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004e00 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004e01 010f      	MOVW R0,R30
004e02 81a8      	LD   R26,Y
004e03 81b9      	LDD  R27,Y+1
004e04 9653      	ADIW R26,19
004e05 940e c3ba 	CALL SUBOPT_0x13D
                 ; 0007 0206     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004e07 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004e08 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004e09 010f      	MOVW R0,R30
004e0a 81a8      	LD   R26,Y
004e0b 81b9      	LDD  R27,Y+1
004e0c 9657      	ADIW R26,23
004e0d 940e c3b4 	CALL SUBOPT_0x13B
                 ; 0007 0207     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004e0f 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004e10 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004e11 010f      	MOVW R0,R30
004e12 81a8      	LD   R26,Y
004e13 81b9      	LDD  R27,Y+1
004e14 9659      	ADIW R26,25
004e15 940e c3c0 	CALL SUBOPT_0x13E
                 ; 0007 0208 
                 ; 0007 0209     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004e17 e9e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004e18 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004e19 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004e1a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004e1b 940e c3c6 	CALL SUBOPT_0x13F
004e1d 55e7      	SUBI R30,LOW(-_config_sens)
004e1e 4fff      	SBCI R31,HIGH(-_config_sens)
004e1f 940e c3ce 	CALL SUBOPT_0x140
004e21 940e bc5e 	CALL SUBOPT_0x12
                 ; 0007 020A     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004e23 ebe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004e24 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004e25 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004e26 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004e27 940e c3c6 	CALL SUBOPT_0x13F
                +
004e29 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004e2a 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004e2b 940e c3ce 	CALL SUBOPT_0x140
004e2d 940e bc5e 	CALL SUBOPT_0x12
                 ; 0007 020B     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004e2f ede2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004e30 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004e31 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004e32 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004e33 940e c3c6 	CALL SUBOPT_0x13F
                +
004e35 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004e36 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004e37 01df      	MOVW R26,R30
004e38 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 020C     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004e3a eeef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004e3b e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004e3c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004e3d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004e3e 940e c3c6 	CALL SUBOPT_0x13F
                +
004e40 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004e41 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004e42 01df      	MOVW R26,R30
004e43 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 020D     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004e45 e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004e46 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004e47 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004e48 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004e49 940e c3c6 	CALL SUBOPT_0x13F
                +
004e4b 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004e4c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004e4d 01df      	MOVW R26,R30
004e4e 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 020E     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
004e50 e2e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
004e51 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
004e52 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
004e53 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
004e54 940e c3c6 	CALL SUBOPT_0x13F
                +
004e56 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004e57 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004e58 01df      	MOVW R26,R30
004e59 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 020F 
                 ; 0007 0210     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
004e5b 940e c3a4 	CALL SUBOPT_0x138
004e5d 81ae      	LDD  R26,Y+6
004e5e 81bf      	LDD  R27,Y+6+1
004e5f e1ed      	LDI  R30,LOW(29)
004e60 940e d95a 	CALL __MULB1W2U
                +
004e62 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004e63 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004e64 01df      	MOVW R26,R30
004e65 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 0211     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
004e67 e4e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
004e68 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
004e69 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
004e6a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
004e6b 940e c3c6 	CALL SUBOPT_0x13F
004e6d 940e c2be 	CALL SUBOPT_0x10F
004e6f 940e c35a 	CALL SUBOPT_0x129
004e71 e1ed      	LDI  R30,LOW(29)
004e72 940e d95a 	CALL __MULB1W2U
004e74 940e c2be 	CALL SUBOPT_0x10F
004e76 940e bcbc 	CALL SUBOPT_0x20
                 ; 0007 0212     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
004e78 e6e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
004e79 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
004e7a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
004e7b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
004e7c 940e c3c6 	CALL SUBOPT_0x13F
004e7e 940e c2c4 	CALL SUBOPT_0x110
004e80 940e bd4a 	CALL SUBOPT_0x34
004e82 85aa      	LDD  R26,Y+10
004e83 85bb      	LDD  R27,Y+10+1
004e84 e1ed      	LDI  R30,LOW(29)
004e85 940e d95a 	CALL __MULB1W2U
004e87 940e c2c4 	CALL SUBOPT_0x110
004e89 940e c3d2 	CALL SUBOPT_0x141
                 ; 0007 0213     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
004e8b e8e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
004e8c e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
004e8d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
004e8e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
004e8f 940e c3c6 	CALL SUBOPT_0x13F
004e91 940e c2ca 	CALL SUBOPT_0x111
004e93 940e c35a 	CALL SUBOPT_0x129
004e95 e1ed      	LDI  R30,LOW(29)
004e96 940e d95a 	CALL __MULB1W2U
004e98 940e c2ca 	CALL SUBOPT_0x111
004e9a 940e bcbc 	CALL SUBOPT_0x20
                 ; 0007 0214     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
004e9c eae8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
004e9d e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
004e9e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
004e9f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
004ea0 940e c3c6 	CALL SUBOPT_0x13F
004ea2 940e c2d0 	CALL SUBOPT_0x112
004ea4 940e c35a 	CALL SUBOPT_0x129
004ea6 e1ed      	LDI  R30,LOW(29)
004ea7 940e d95a 	CALL __MULB1W2U
004ea9 940e c2d0 	CALL SUBOPT_0x112
004eab 940e bcbc 	CALL SUBOPT_0x20
                 ; 0007 0215     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
004ead ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
004eae e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
004eaf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
004eb0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
004eb1 940e c3c6 	CALL SUBOPT_0x13F
004eb3 940e c2d6 	CALL SUBOPT_0x113
004eb5 940e bd4a 	CALL SUBOPT_0x34
004eb7 85aa      	LDD  R26,Y+10
004eb8 85bb      	LDD  R27,Y+10+1
004eb9 e1ed      	LDI  R30,LOW(29)
004eba 940e d95a 	CALL __MULB1W2U
004ebc 940e c2d6 	CALL SUBOPT_0x113
004ebe 940e c3d2 	CALL SUBOPT_0x141
                 ; 0007 0216     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
004ec0 eee9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
004ec1 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
004ec2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
004ec3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
004ec4 940e c3c6 	CALL SUBOPT_0x13F
004ec6 940e c2dc 	CALL SUBOPT_0x114
004ec8 940e c35a 	CALL SUBOPT_0x129
004eca e1ed      	LDI  R30,LOW(29)
004ecb 940e d95a 	CALL __MULB1W2U
004ecd 940e c2dc 	CALL SUBOPT_0x114
004ecf 940e bcbc 	CALL SUBOPT_0x20
                 ; 0007 0217     printDebug("\r\n");
004ed1 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 0218 
                 ; 0007 0219     config_sens_flag[ch]                = 0x01;
004ed3 81aa      	LDD  R26,Y+2
004ed4 81bb      	LDD  R27,Y+2+1
004ed5 5bac      	SUBI R26,LOW(-_config_sens_flag)
004ed6 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004ed7 e0e1      	LDI  R30,LOW(1)
004ed8 940e da6c 	CALL __EEPROMWRB
                 ; 0007 021A     is_sensor_config_update[ch]          = 1;
004eda 81ea      	LDD  R30,Y+2
004edb 81fb      	LDD  R31,Y+2+1
004edc 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
004edd 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
004ede e0a1      	LDI  R26,LOW(1)
004edf 83a0      	STD  Z+0,R26
                 ; 0007 021B 
                 ; 0007 021C     return 0;
004ee0 e0e0      	LDI  R30,LOW(0)
004ee1 e0f0      	LDI  R31,HIGH(0)
004ee2 c372      	RJMP _0x20E0088
                 ; 0007 021D }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0220 {
                 _setAuxDinConfig:
                 ; 0007 0221     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
004ee3 940e c2a4 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004ee5 f022      	BRMI _0xE0081
004ee6 81aa      	LDD  R26,Y+2
004ee7 81bb      	LDD  R27,Y+2+1
004ee8 9751      	SBIW R26,17
004ee9 f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0222         return -1;
004eea efef      	LDI  R30,LOW(65535)
004eeb efff      	LDI  R31,HIGH(65535)
004eec c368      	RJMP _0x20E0088
                 ; 0007 0223     }
                 ; 0007 0224 
                 ; 0007 0225     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
004eed 940e c2e7 	CALL SUBOPT_0x116
004eef 5ce6      	SUBI R30,LOW(-_config_din)
004ef0 4ffe      	SBCI R31,HIGH(-_config_din)
004ef1 010f      	MOVW R0,R30
004ef2 81a8      	LD   R26,Y
004ef3 81b9      	LDD  R27,Y+1
004ef4 940e c393 	CALL SUBOPT_0x134
                 ; 0007 0226     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
004ef6 940e c2e7 	CALL SUBOPT_0x116
                +
004ef8 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004ef9 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004efa 940e c3d5 	CALL SUBOPT_0x142
004efc 940e c3da 	CALL SUBOPT_0x143
                 ; 0007 0227 
                 ; 0007 0228     printDebug("\r\n channel         >> [%d]",      ch);
004efe 940e c3e0 	CALL SUBOPT_0x144
004f00 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 0229     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
004f02 940e c3e5 	CALL SUBOPT_0x145
004f04 e0e3      	LDI  R30,LOW(3)
004f05 940e d95a 	CALL __MULB1W2U
004f07 5ce6      	SUBI R30,LOW(-_config_din)
004f08 4ffe      	SBCI R31,HIGH(-_config_din)
004f09 01df      	MOVW R26,R30
004f0a 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 022A     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
004f0c e4e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
004f0d e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
004f0e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
004f0f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
004f10 940e c3ee 	CALL SUBOPT_0x146
004f12 e0e3      	LDI  R30,LOW(3)
004f13 940e d95a 	CALL __MULB1W2U
                +
004f15 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004f16 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004f17 940e c3ce 	CALL SUBOPT_0x140
004f19 940e bc5e 	CALL SUBOPT_0x12
                 ; 0007 022B 
                 ; 0007 022C     config_din_flag[ch]                 =   0x01;
004f1b 81aa      	LDD  R26,Y+2
004f1c 81bb      	LDD  R27,Y+2+1
004f1d 5ba7      	SUBI R26,LOW(-_config_din_flag)
004f1e 4fba      	SBCI R27,HIGH(-_config_din_flag)
004f1f e0e1      	LDI  R30,LOW(1)
004f20 940e da6c 	CALL __EEPROMWRB
                 ; 0007 022D     is_din_config_update[ch]            =   1;
004f22 81ea      	LDD  R30,Y+2
004f23 81fb      	LDD  R31,Y+2+1
004f24 50e3      	SUBI R30,LOW(-_is_din_config_update)
004f25 4eff      	SBCI R31,HIGH(-_is_din_config_update)
004f26 e0a1      	LDI  R26,LOW(1)
004f27 83a0      	STD  Z+0,R26
                 ; 0007 022E     return 0;
004f28 e0e0      	LDI  R30,LOW(0)
004f29 e0f0      	LDI  R31,HIGH(0)
004f2a c32a      	RJMP _0x20E0088
                 ; 0007 022F }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0232 {
                 _setAuxDoutConfig:
                 ; 0007 0233     int i;
                 ; 0007 0234 
                 ; 0007 0235     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
004f2b 940e bf59 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004f2d 81ad      	LDD  R26,Y+5
004f2e 23aa      	TST  R26
004f2f f022      	BRMI _0xE0084
004f30 81ac      	LDD  R26,Y+4
004f31 81bd      	LDD  R27,Y+4+1
004f32 9716      	SBIW R26,6
004f33 f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0236         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
004f34 e5eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
004f35 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
004f36 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
004f37 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
004f38 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0237         return -1;
004f3a efef      	LDI  R30,LOW(65535)
004f3b efff      	LDI  R31,HIGH(65535)
004f3c c143      	RJMP _0x20E008B
                 ; 0007 0238     }
                 ; 0007 0239 
                 ; 0007 023A     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
004f3d 81ea      	LDD  R30,Y+2
004f3e 81fb      	LDD  R31,Y+2+1
004f3f 81a2      	LDD  R26,Z+2
004f40 32a4      	CPI  R26,LOW(0x24)
004f41 f060      	BRLO _0xE0086
                 ; 0007 023B         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004f42 e8e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
004f43 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
004f44 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
004f45 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
004f46 940e c290 	CALL SUBOPT_0x106
004f48 81e2      	LDD  R30,Z+2
004f49 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 023C         return -1;
004f4b efef      	LDI  R30,LOW(65535)
004f4c efff      	LDI  R31,HIGH(65535)
004f4d c132      	RJMP _0x20E008B
                 ; 0007 023D     }
                 ; 0007 023E 
                 ; 0007 023F     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
004f4e 940e c301 	CALL SUBOPT_0x11A
004f50 59e6      	SUBI R30,LOW(-_config_dout)
004f51 4ffe      	SBCI R31,HIGH(-_config_dout)
004f52 01df      	MOVW R26,R30
004f53 e0e1      	LDI  R30,LOW(1)
004f54 940e c3f3 	CALL SUBOPT_0x147
                 ; 0007 0240     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
004f56 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004f57 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004f58 01df      	MOVW R26,R30
004f59 e0e0      	LDI  R30,LOW(0)
004f5a 940e c3f3 	CALL SUBOPT_0x147
                 ; 0007 0241     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
004f5c 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004f5d 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004f5e 01df      	MOVW R26,R30
004f5f 81ea      	LDD  R30,Y+2
004f60 81fb      	LDD  R31,Y+2+1
004f61 81e2      	LDD  R30,Z+2
004f62 940e c3f6 	CALL SUBOPT_0x148
                 ; 0007 0242 
                 ; 0007 0243     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0244     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
004f64 edeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
004f65 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
004f66 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
004f67 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
004f68 940e c307 	CALL SUBOPT_0x11B
004f6a 940e c30f 	CALL SUBOPT_0x11C
                 ; 0007 0245     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
004f6c efea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
004f6d e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
004f6e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
004f6f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
004f70 940e c307 	CALL SUBOPT_0x11B
004f72 940e c315 	CALL SUBOPT_0x11D
                 ; 0007 0246     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
004f74 940e c3fd 	CALL SUBOPT_0x149
004f76 940e c307 	CALL SUBOPT_0x11B
004f78 940e c31b 	CALL SUBOPT_0x11E
004f7a 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0247     printDebug("\r\n eventSource       >> ");
004f7c 940e c402 	CALL SUBOPT_0x14A
                 ; 0007 0248 
                 ; 0007 0249     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004f7e e000     +LDI R16 , LOW ( 0 )
004f7f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
004f80 940e c301 	CALL SUBOPT_0x11A
004f82 940e c31b 	CALL SUBOPT_0x11E
004f84 940e c321 	CALL SUBOPT_0x11F
004f86 f4d4      	BRGE _0xE0089
                 ; 0007 024A 
                 ; 0007 024B         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
004f87 940e c301 	CALL SUBOPT_0x11A
004f89 940e c326 	CALL SUBOPT_0x120
004f8b 940e c270 	CALL SUBOPT_0x101
004f8d 81e0      	LD   R30,Z
004f8e 940e c3f3 	CALL SUBOPT_0x147
                 ; 0007 024C 
                 ; 0007 024D         if( config_dout[ch].eventSource[i] != 0x00 ){
004f90 940e c326 	CALL SUBOPT_0x120
004f92 940e da50 	CALL __EEPROMRDB
004f94 30e0      	CPI  R30,0
004f95 f041      	BREQ _0xE008A
                 ; 0007 024E             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
004f96 940e c364 	CALL SUBOPT_0x12B
004f98 940e c307 	CALL SUBOPT_0x11B
004f9a 940e c326 	CALL SUBOPT_0x120
004f9c 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 024F         }
                 ; 0007 0250     }
                 _0xE008A:
                +
004f9e 5f0f     +SUBI R16 , LOW ( - 1 )
004f9f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004fa0 cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0251     printDebug("\r\n");
004fa1 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 0252 
                 ; 0007 0253     config_dout_flag[ch]                =   0x01;
004fa3 81ac      	LDD  R26,Y+4
004fa4 81bd      	LDD  R27,Y+4+1
004fa5 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004fa6 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004fa7 e0e1      	LDI  R30,LOW(1)
004fa8 940e da6c 	CALL __EEPROMWRB
                 ; 0007 0254     is_dout_config_update[ch]           =   1;
004faa 81ec      	LDD  R30,Y+4
004fab 81fd      	LDD  R31,Y+4+1
004fac 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
004fad 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
004fae e0a1      	LDI  R26,LOW(1)
004faf 83a0      	STD  Z+0,R26
                 ; 0007 0255 
                 ; 0007 0256     return 0;
004fb0 c0cd      	RJMP _0x20E008C
                 ; 0007 0257 }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025A {
                 _setAuxAinConfig:
                 ; 0007 025B     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
004fb1 940e c2a4 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004fb3 f022      	BRMI _0xE008C
004fb4 81aa      	LDD  R26,Y+2
004fb5 81bb      	LDD  R27,Y+2+1
004fb6 9751      	SBIW R26,17
004fb7 f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025C         return -1;
004fb8 efef      	LDI  R30,LOW(65535)
004fb9 efff      	LDI  R31,HIGH(65535)
004fba c29a      	RJMP _0x20E0088
                 ; 0007 025D     }
                 ; 0007 025E 
                 ; 0007 025F     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
004fbb 940e c32c 	CALL SUBOPT_0x121
004fbd 5de8      	SUBI R30,LOW(-_config_ain)
004fbe 4ffd      	SBCI R31,HIGH(-_config_ain)
004fbf 010f      	MOVW R0,R30
004fc0 81a8      	LD   R26,Y
004fc1 81b9      	LDD  R27,Y+1
004fc2 940e c393 	CALL SUBOPT_0x134
                 ; 0007 0260     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
004fc4 940e c32c 	CALL SUBOPT_0x121
                +
004fc6 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004fc7 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004fc8 940e c3d5 	CALL SUBOPT_0x142
004fca 940e c3c0 	CALL SUBOPT_0x13E
                 ; 0007 0261 
                 ; 0007 0262     printDebug("\r\n channel         >> [%d]",      ch);
004fcc 940e c3e0 	CALL SUBOPT_0x144
004fce 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 0263     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
004fd0 940e c3e5 	CALL SUBOPT_0x145
004fd2 e0e5      	LDI  R30,LOW(5)
004fd3 940e d95a 	CALL __MULB1W2U
004fd5 5de8      	SUBI R30,LOW(-_config_ain)
004fd6 4ffd      	SBCI R31,HIGH(-_config_ain)
004fd7 01df      	MOVW R26,R30
004fd8 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 0264     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
004fda e4ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
004fdb e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
004fdc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
004fdd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
004fde 940e c3ee 	CALL SUBOPT_0x146
004fe0 e0e5      	LDI  R30,LOW(5)
004fe1 940e d95a 	CALL __MULB1W2U
                +
004fe3 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004fe4 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004fe5 940e c408 	CALL SUBOPT_0x14B
                 ; 0007 0265 
                 ; 0007 0266     config_ain_flag[ch]                 = 0x01;
004fe7 81aa      	LDD  R26,Y+2
004fe8 81bb      	LDD  R27,Y+2+1
004fe9 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004fea 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004feb e0e1      	LDI  R30,LOW(1)
004fec 940e da6c 	CALL __EEPROMWRB
                 ; 0007 0267 
                 ; 0007 0268     return 0;
004fee e0e0      	LDI  R30,LOW(0)
004fef e0f0      	LDI  R31,HIGH(0)
004ff0 c264      	RJMP _0x20E0088
                 ; 0007 0269 }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026C {
                 _setAuxAoutConfig:
                 ; 0007 026D     int i;
                 ; 0007 026E 
                 ; 0007 026F     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
004ff1 940e bf59 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004ff3 81ad      	LDD  R26,Y+5
004ff4 23aa      	TST  R26
004ff5 f022      	BRMI _0xE008F
004ff6 81ac      	LDD  R26,Y+4
004ff7 81bd      	LDD  R27,Y+4+1
004ff8 9751      	SBIW R26,17
004ff9 f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0270         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
004ffa e6e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
004ffb e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
004ffc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
004ffd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
004ffe 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 0271         return -1;
005000 efef      	LDI  R30,LOW(65535)
005001 efff      	LDI  R31,HIGH(65535)
005002 c07d      	RJMP _0x20E008B
                 ; 0007 0272     }
                 ; 0007 0273 
                 ; 0007 0274     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
005003 81ea      	LDD  R30,Y+2
005004 81fb      	LDD  R31,Y+2+1
005005 81a5      	LDD  R26,Z+5
005006 32a4      	CPI  R26,LOW(0x24)
005007 f060      	BRLO _0xE0091
                 ; 0007 0275         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
005008 e8ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
005009 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
00500a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
00500b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
00500c 940e c290 	CALL SUBOPT_0x106
00500e 81e5      	LDD  R30,Z+5
00500f 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0276         return -1;
005011 efef      	LDI  R30,LOW(65535)
005012 efff      	LDI  R31,HIGH(65535)
005013 c06c      	RJMP _0x20E008B
                 ; 0007 0277     }
                 ; 0007 0278 
                 ; 0007 0279     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
005014 940e c338 	CALL SUBOPT_0x123
005016 58e8      	SUBI R30,LOW(-_config_aout)
005017 4ffd      	SBCI R31,HIGH(-_config_aout)
005018 010f      	MOVW R0,R30
005019 81aa      	LDD  R26,Y+2
00501a 81bb      	LDD  R27,Y+2+1
00501b 940e c393 	CALL SUBOPT_0x134
                 ; 0007 027A     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
00501d 940e c338 	CALL SUBOPT_0x123
                +
00501f 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
005020 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
005021 010f      	MOVW R0,R30
005022 81aa      	LDD  R26,Y+2
005023 81bb      	LDD  R27,Y+2+1
005024 9611      	ADIW R26,1
005025 940e c3c0 	CALL SUBOPT_0x13E
                 ; 0007 027B     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
005027 940e c338 	CALL SUBOPT_0x123
                +
005029 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00502a 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00502b 01df      	MOVW R26,R30
00502c 81ea      	LDD  R30,Y+2
00502d 81fb      	LDD  R31,Y+2+1
00502e 81e5      	LDD  R30,Z+5
00502f 940e c3f6 	CALL SUBOPT_0x148
                 ; 0007 027C 
                 ; 0007 027D     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 027E     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
005031 edeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
005032 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
005033 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
005034 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
005035 940e c40f 	CALL SUBOPT_0x14C
005037 58e8      	SUBI R30,LOW(-_config_aout)
005038 4ffd      	SBCI R31,HIGH(-_config_aout)
005039 01df      	MOVW R26,R30
00503a 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 027F     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
00503c ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
00503d e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
00503e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
00503f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
005040 940e c40f 	CALL SUBOPT_0x14C
                +
005042 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
005043 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
005044 940e c408 	CALL SUBOPT_0x14B
                 ; 0007 0280     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
005046 940e c3fd 	CALL SUBOPT_0x149
005048 940e c40f 	CALL SUBOPT_0x14C
00504a 940e c33e 	CALL SUBOPT_0x124
00504c 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0281     printDebug("\r\n eventSource       >> ");
00504e 940e c402 	CALL SUBOPT_0x14A
                 ; 0007 0282 
                 ; 0007 0283     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
005050 e000     +LDI R16 , LOW ( 0 )
005051 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
005052 940e c338 	CALL SUBOPT_0x123
005054 940e c33e 	CALL SUBOPT_0x124
005056 940e c321 	CALL SUBOPT_0x11F
005058 f4e4      	BRGE _0xE0094
                 ; 0007 0284 
                 ; 0007 0285         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
005059 940e c338 	CALL SUBOPT_0x123
00505b 940e c344 	CALL SUBOPT_0x125
00505d 940e c332 	CALL SUBOPT_0x122
00505f 81e0      	LD   R30,Z
005060 940e da6c 	CALL __EEPROMWRB
                 ; 0007 0286 
                 ; 0007 0287         if( config_aout[ch].eventSource[i] != 0x00 ){
005062 940e c338 	CALL SUBOPT_0x123
005064 940e c344 	CALL SUBOPT_0x125
005066 940e da50 	CALL __EEPROMRDB
005068 30e0      	CPI  R30,0
005069 f041      	BREQ _0xE0095
                 ; 0007 0288             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
00506a 940e c364 	CALL SUBOPT_0x12B
00506c 940e c40f 	CALL SUBOPT_0x14C
00506e 940e c344 	CALL SUBOPT_0x125
005070 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 0289         }
                 ; 0007 028A     }
                 _0xE0095:
                +
005072 5f0f     +SUBI R16 , LOW ( - 1 )
005073 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005074 cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028B     printDebug("\r\n");
005075 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 028C 
                 ; 0007 028D     config_aout_flag[ch]                =   0x01;
005077 81ac      	LDD  R26,Y+4
005078 81bd      	LDD  R27,Y+4+1
005079 59a2      	SUBI R26,LOW(-_config_aout_flag)
00507a 4fba      	SBCI R27,HIGH(-_config_aout_flag)
00507b e0e1      	LDI  R30,LOW(1)
00507c 940e da6c 	CALL __EEPROMWRB
                 ; 0007 028E 
                 ; 0007 028F     return 0;
                 _0x20E008C:
00507e e0e0      	LDI  R30,LOW(0)
00507f e0f0      	LDI  R31,HIGH(0)
                 _0x20E008B:
005080 8119      	LDD  R17,Y+1
005081 8108      	LDD  R16,Y+0
005082 9626      	ADIW R28,6
005083 9508      	RET
                 ; 0007 0290 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0293 {
                 _setBuzzerConfig:
                 ; 0007 0294     int i;
                 ; 0007 0295 
                 ; 0007 0296     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
005084 940e bf59 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
005086 81ea      	LDD  R30,Y+2
005087 81fb      	LDD  R31,Y+2+1
005088 81a1      	LDD  R26,Z+1
005089 32a4      	CPI  R26,LOW(0x24)
00508a f060      	BRLO _0xE0096
                 ; 0007 0297         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
00508b eee4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
00508c e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
00508d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
00508e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
00508f 940e c290 	CALL SUBOPT_0x106
005091 81e1      	LDD  R30,Z+1
005092 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 0298         return -1;
005094 940e c39c 	CALL SUBOPT_0x136
005096 c1be      	RJMP _0x20E0088
                 ; 0007 0299     }
                 ; 0007 029A 
                 ; 0007 029B     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
005097 81aa      	LDD  R26,Y+2
005098 81bb      	LDD  R27,Y+2+1
005099 91ec      	LD   R30,X
00509a e0a8      	LDI  R26,LOW(_config_buzz)
00509b e0b5      	LDI  R27,HIGH(_config_buzz)
00509c 940e da6c 	CALL __EEPROMWRB
                 ; 0007 029C     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
00509e e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00509f e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
0050a0 81ea      	LDD  R30,Y+2
0050a1 81fb      	LDD  R31,Y+2+1
0050a2 81e1      	LDD  R30,Z+1
0050a3 940e da6c 	CALL __EEPROMWRB
                 ; 0007 029D 
                 ; 0007 029E     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
0050a5 e1ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
0050a6 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
0050a7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
0050a8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
0050a9 940e da29 	CALL __PUTPARD1
0050ab e0a8      	LDI  R26,LOW(_config_buzz)
0050ac e0b5      	LDI  R27,HIGH(_config_buzz)
0050ad 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 029F     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
0050af 940e c3fd 	CALL SUBOPT_0x149
0050b1 940e da29 	CALL __PUTPARD1
0050b3 940e c355 	CALL SUBOPT_0x128
0050b5 940e bcfe 	CALL SUBOPT_0x29
                 ; 0007 02A0     printDebug("\r\n eventSource       >>");
                +
0050b7 e3ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
0050b8 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
0050b9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
0050ba e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
0050bb 940e bbec 	CALL SUBOPT_0x3
                 ; 0007 02A1 
                 ; 0007 02A2     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
0050bd e000     +LDI R16 , LOW ( 0 )
0050be e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
0050bf 940e c355 	CALL SUBOPT_0x128
0050c1 940e c321 	CALL SUBOPT_0x11F
0050c3 f4cc      	BRGE _0xE0099
                 ; 0007 02A3 
                 ; 0007 02A4         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
0050c4 940e c417 	CALL SUBOPT_0x14D
0050c6 81ea      	LDD  R30,Y+2
0050c7 81fb      	LDD  R31,Y+2+1
0050c8 940e c369 	CALL SUBOPT_0x12C
0050ca 940e da6c 	CALL __EEPROMWRB
                 ; 0007 02A5 
                 ; 0007 02A6         if( config_buzz.eventSource[i] != 0x00 ){
0050cc 940e c417 	CALL SUBOPT_0x14D
0050ce 940e da50 	CALL __EEPROMRDB
0050d0 30e0      	CPI  R30,0
0050d1 f041      	BREQ _0xE009A
                 ; 0007 02A7             printDebug("[0x%02X]",config_buzz.eventSource[i]);
0050d2 940e c364 	CALL SUBOPT_0x12B
0050d4 940e da29 	CALL __PUTPARD1
0050d6 940e c417 	CALL SUBOPT_0x14D
0050d8 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 02A8         }
                 ; 0007 02A9 
                 ; 0007 02AA     }
                 _0xE009A:
                +
0050da 5f0f     +SUBI R16 , LOW ( - 1 )
0050db 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0050dc cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AB     printDebug("\r\n");
0050dd 940e c29f 	CALL SUBOPT_0x109
                 ; 0007 02AC 
                 ; 0007 02AD     config_buzz_flag                    =   0x01;
0050df e7ae      	LDI  R26,LOW(_config_buzz_flag)
0050e0 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
0050e1 940e c398 	CALL SUBOPT_0x135
                 ; 0007 02AE 
                 ; 0007 02AF     is_buzzer_config_update             =   1;
0050e3 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B0 
                 ; 0007 02B1     return 0;
0050e5 940e c185 	CALL SUBOPT_0xD8
0050e7 c16d      	RJMP _0x20E0088
                 ; 0007 02B2 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B5 {
                 _setEnvAlarmConfig:
                 ; 0007 02B6     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
0050e8 93ba      	ST   -Y,R27
0050e9 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
0050ea 81a8      	LD   R26,Y
0050eb 81b9      	LDD  R27,Y+1
0050ec 940e d9f4 	CALL __GETD1P
0050ee e2ad      	LDI  R26,LOW(_config_alm)
0050ef e0b5      	LDI  R27,HIGH(_config_alm)
0050f0 940e da5c 	CALL __EEPROMWRD
                 ; 0007 02B7     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
0050f2 e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
0050f3 e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
0050f4 010f      	MOVW R0,R30
0050f5 81a8      	LD   R26,Y
0050f6 81b9      	LDD  R27,Y+1
0050f7 9614      	ADIW R26,4
0050f8 940e c3da 	CALL SUBOPT_0x143
                 ; 0007 02B8     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
0050fa e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
0050fb e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
0050fc 010f      	MOVW R0,R30
0050fd 81a8      	LD   R26,Y
0050fe 81b9      	LDD  R27,Y+1
0050ff 9616      	ADIW R26,6
005100 940e c3c0 	CALL SUBOPT_0x13E
                 ; 0007 02B9     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
005102 e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
005103 e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
005104 010f      	MOVW R0,R30
005105 81a8      	LD   R26,Y
005106 81b9      	LDD  R27,Y+1
005107 961a      	ADIW R26,10
005108 940e c3c0 	CALL SUBOPT_0x13E
                 ; 0007 02BA     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
00510a e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
00510b e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
00510c 010f      	MOVW R0,R30
00510d 81a8      	LD   R26,Y
00510e 81b9      	LDD  R27,Y+1
00510f 961e      	ADIW R26,14
005110 940e c3da 	CALL SUBOPT_0x143
                 ; 0007 02BB     config_alm.memoryMin                =   newConfig->memoryMin;
                +
005112 e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
005113 e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
005114 010f      	MOVW R0,R30
005115 81a8      	LD   R26,Y
005116 81b9      	LDD  R27,Y+1
005117 9650      	ADIW R26,16
005118 940e c3da 	CALL SUBOPT_0x143
                 ; 0007 02BC 
                 ; 0007 02BD     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
00511a e5e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
00511b e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
00511c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
00511d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
00511e 940e da29 	CALL __PUTPARD1
005120 e2ad      	LDI  R26,LOW(_config_alm)
005121 e0b5      	LDI  R27,HIGH(_config_alm)
005122 940e c41d 	CALL SUBOPT_0x14E
                 ; 0007 02BE     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
005124 e7e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
005125 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
005126 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
005127 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
005128 940e da29 	CALL __PUTPARD1
                +
00512a e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
00512b e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
00512c 940e da4c 	CALL __EEPROMRDW
00512e 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 02BF     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
005130 e9e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
005131 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
005132 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
005133 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
005134 940e da29 	CALL __PUTPARD1
                +
005136 e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
005137 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
005138 940e c41d 	CALL SUBOPT_0x14E
                 ; 0007 02C0     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
00513a ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
00513b e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
00513c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
00513d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
00513e 940e da29 	CALL __PUTPARD1
                +
005140 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
005141 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
005142 940e c41d 	CALL SUBOPT_0x14E
                 ; 0007 02C1     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
005144 ecef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
005145 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
005146 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
005147 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
005148 940e da29 	CALL __PUTPARD1
                +
00514a e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
00514b e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
00514c 940e da4c 	CALL __EEPROMRDW
00514e 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 02C2     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
005150 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
005151 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
005152 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
005153 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
005154 940e da29 	CALL __PUTPARD1
                +
005156 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
005157 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
005158 940e da4c 	CALL __EEPROMRDW
00515a 940e bd4a 	CALL SUBOPT_0x34
00515c 940e bc5e 	CALL SUBOPT_0x12
                 ; 0007 02C3 
                 ; 0007 02C4     config_alm_flag                 = 0x01;
00515e e7af      	LDI  R26,LOW(_config_alm_flag)
00515f e0b5      	LDI  R27,HIGH(_config_alm_flag)
005160 940e c398 	CALL SUBOPT_0x135
                 ; 0007 02C5     is_env_config_update            = 1;
005162 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C6     return 0;
005164 c02d      	RJMP _0x20E008A
                 ; 0007 02C7 }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CA {
                 _setStatusReportConfig:
                 ; 0007 02CB     config_stat.accm                    =   newConfig->accm;
005165 93ba      	ST   -Y,R27
005166 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
005167 81a8      	LD   R26,Y
005168 81b9      	LDD  R27,Y+1
005169 91ec      	LD   R30,X
00516a e3af      	LDI  R26,LOW(_config_stat)
00516b e0b5      	LDI  R27,HIGH(_config_stat)
00516c 940e da6c 	CALL __EEPROMWRB
                 ; 0007 02CC     config_stat.intv                    =   newConfig->intv;
                +
00516e e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
00516f e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
005170 940e c3d5 	CALL SUBOPT_0x142
005172 940e c3da 	CALL SUBOPT_0x143
                 ; 0007 02CD 
                 ; 0007 02CE     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
005174 e0eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
005175 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
005176 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
005177 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
005178 940e da29 	CALL __PUTPARD1
00517a e3af      	LDI  R26,LOW(_config_stat)
00517b e0b5      	LDI  R27,HIGH(_config_stat)
00517c 940e c3a1 	CALL SUBOPT_0x137
                 ; 0007 02CF     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
00517e e2e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
00517f e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
005180 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
005181 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
005182 940e da29 	CALL __PUTPARD1
                +
005184 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
005185 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
005186 940e da4c 	CALL __EEPROMRDW
005188 940e bd4a 	CALL SUBOPT_0x34
00518a 940e bc5e 	CALL SUBOPT_0x12
                 ; 0007 02D0 
                 ; 0007 02D1     config_stat_flag                    = 0x01;
00518c e8a0      	LDI  R26,LOW(_config_stat_flag)
00518d e0b5      	LDI  R27,HIGH(_config_stat_flag)
00518e 940e c398 	CALL SUBOPT_0x135
                 ; 0007 02D2     is_status_config_update             = 1;
005190 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D3     return 0;
                 _0x20E008A:
005192 e0e0      	LDI  R30,LOW(0)
005193 e0f0      	LDI  R31,HIGH(0)
005194 9622      	ADIW R28,2
005195 9508      	RET
                 ; 0007 02D4 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DC {
                 ; 0007 02DD     int i;
                 ; 0007 02DE 
                 ; 0007 02DF     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E0     config_oper_flag            = 0x00;
                 ; 0007 02E1 
                 ; 0007 02E2     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E3         config_sens_flag[i]     = 0x00;
                 ; 0007 02E4     }
                 ; 0007 02E5 
                 ; 0007 02E6     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02E7         config_din_flag[i]      = 0x00;
                 ; 0007 02E8     }
                 ; 0007 02E9 
                 ; 0007 02EA     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02EB         config_dout_flag[i]     = 0x00;
                 ; 0007 02EC     }
                 ; 0007 02ED 
                 ; 0007 02EE     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02EF         config_ain_flag[i]      = 0x00;
                 ; 0007 02F0     }
                 ; 0007 02F1 
                 ; 0007 02F2     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F3         config_aout_flag[i]     = 0x00;
                 ; 0007 02F4     }
                 ; 0007 02F5 
                 ; 0007 02F6     config_buzz_flag            = 0x00;
                 ; 0007 02F7     config_alm_flag             = 0x00;
                 ; 0007 02F8     config_stat_flag            = 0x00;
                 ; 0007 02F9 
                 ; 0007 02FA     return 0;
                 ; 0007 02FB }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 02FE {
                 _isDeviceConfig:
                 ; 0007 02FF     int i   = 0;
                 ; 0007 0300 
                 ; 0007 0301     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
005196 940e c01a 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
005198 e4a2      	LDI  R26,LOW(_config_prop_flag)
005199 e0b5      	LDI  R27,HIGH(_config_prop_flag)
00519a 940e da50 	CALL __EEPROMRDB
00519c 30e0      	CPI  R30,0
00519d f4c1      	BRNE _0xE00AB
00519e e4a3      	LDI  R26,LOW(_config_oper_flag)
00519f e0b5      	LDI  R27,HIGH(_config_oper_flag)
0051a0 940e da50 	CALL __EEPROMRDB
0051a2 30e0      	CPI  R30,0
0051a3 f491      	BRNE _0xE00AB
0051a4 e7ae      	LDI  R26,LOW(_config_buzz_flag)
0051a5 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
0051a6 940e da50 	CALL __EEPROMRDB
0051a8 30e0      	CPI  R30,0
0051a9 f461      	BRNE _0xE00AB
0051aa e7af      	LDI  R26,LOW(_config_alm_flag)
0051ab e0b5      	LDI  R27,HIGH(_config_alm_flag)
0051ac 940e da50 	CALL __EEPROMRDB
0051ae 30e0      	CPI  R30,0
0051af f431      	BRNE _0xE00AB
0051b0 e8a0      	LDI  R26,LOW(_config_stat_flag)
0051b1 e0b5      	LDI  R27,HIGH(_config_stat_flag)
0051b2 940e da50 	CALL __EEPROMRDB
0051b4 30e0      	CPI  R30,0
0051b5 f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0302         return 1;
0051b6 e0e1      	LDI  R30,LOW(1)
0051b7 e0f0      	LDI  R31,HIGH(1)
0051b8 c038      	RJMP _0x20E0089
                 ; 0007 0303     }
                 ; 0007 0304 
                 ; 0007 0305     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
0051b9 e000     +LDI R16 , LOW ( 0 )
0051ba e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
0051bb 3005     +CPI R16 , LOW ( 5 )
0051bc e0e0     +LDI R30 , HIGH ( 5 )
0051bd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0051be f464      	BRGE _0xE00AF
                 ; 0007 0306         if(config_sens_flag[i]){
0051bf e4a4      	LDI  R26,LOW(_config_sens_flag)
0051c0 e0b5      	LDI  R27,HIGH(_config_sens_flag)
0051c1 940e c240 	CALL SUBOPT_0xFA
0051c3 30e0      	CPI  R30,0
0051c4 f019      	BREQ _0xE00B0
                 ; 0007 0307             return 1;
0051c5 e0e1      	LDI  R30,LOW(1)
0051c6 e0f0      	LDI  R31,HIGH(1)
0051c7 c029      	RJMP _0x20E0089
                 ; 0007 0308         }
                 ; 0007 0309     }
                 _0xE00B0:
                +
0051c8 5f0f     +SUBI R16 , LOW ( - 1 )
0051c9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051ca cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030A 
                 ; 0007 030B     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030C     for(i=0;i<2;i++){
                +
0051cb e000     +LDI R16 , LOW ( 0 )
0051cc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
0051cd 3002     +CPI R16 , LOW ( 2 )
0051ce e0e0     +LDI R30 , HIGH ( 2 )
0051cf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0051d0 f464      	BRGE _0xE00B3
                 ; 0007 030D         if(config_din_flag[i]){
0051d1 e4a9      	LDI  R26,LOW(_config_din_flag)
0051d2 e0b5      	LDI  R27,HIGH(_config_din_flag)
0051d3 940e c240 	CALL SUBOPT_0xFA
0051d5 30e0      	CPI  R30,0
0051d6 f019      	BREQ _0xE00B4
                 ; 0007 030E             return 1;
0051d7 e0e1      	LDI  R30,LOW(1)
0051d8 e0f0      	LDI  R31,HIGH(1)
0051d9 c017      	RJMP _0x20E0089
                 ; 0007 030F         }
                 ; 0007 0310     }
                 _0xE00B4:
                +
0051da 5f0f     +SUBI R16 , LOW ( - 1 )
0051db 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051dc cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0311 
                 ; 0007 0312     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0313     for(i=0;i<2;i++){
                +
0051dd e000     +LDI R16 , LOW ( 0 )
0051de e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
0051df 3002     +CPI R16 , LOW ( 2 )
0051e0 e0e0     +LDI R30 , HIGH ( 2 )
0051e1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0051e2 f464      	BRGE _0xE00B7
                 ; 0007 0314         if(config_dout_flag[i]){
0051e3 e5a9      	LDI  R26,LOW(_config_dout_flag)
0051e4 e0b5      	LDI  R27,HIGH(_config_dout_flag)
0051e5 940e c240 	CALL SUBOPT_0xFA
0051e7 30e0      	CPI  R30,0
0051e8 f019      	BREQ _0xE00B8
                 ; 0007 0315             return 1;
0051e9 e0e1      	LDI  R30,LOW(1)
0051ea e0f0      	LDI  R31,HIGH(1)
0051eb c005      	RJMP _0x20E0089
                 ; 0007 0316         }
                 ; 0007 0317     }
                 _0xE00B8:
                +
0051ec 5f0f     +SUBI R16 , LOW ( - 1 )
0051ed 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051ee cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 0318     return 0;
0051ef e0e0      	LDI  R30,LOW(0)
0051f0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0089:
0051f1 9109      	LD   R16,Y+
0051f2 9119      	LD   R17,Y+
0051f3 9508      	RET
                 ; 0007 0319 }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031C {
                 _getAllConfig:
                 ; 0007 031D     int i,err;
                 ; 0007 031E 
                 ; 0007 031F     // -- load configuration -- //
                 ; 0007 0320     getPropertiesConfig(&properties_config);
0051f4 940e da9b 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
0051f6 940e bc38 	CALL SUBOPT_0xD
                 ; 0007 0321     is_properties_config_update = 0;
                 ; 0007 0322 
                 ; 0007 0323     getOperatingConfig(&operating_config);
0051f8 940e bc40 	CALL SUBOPT_0xE
                 ; 0007 0324     is_operating_config_update = 0;
                 ; 0007 0325 
                 ; 0007 0326     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0051fa e000     +LDI R16 , LOW ( 0 )
0051fb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
0051fc 3005     +CPI R16 , LOW ( 5 )
0051fd e0e0     +LDI R30 , HIGH ( 5 )
0051fe 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0051ff f504      	BRGE _0xE00BB
                 ; 0007 0327         err = getSensorConfig(i,&sensor_config[i]);
005200 931a      	ST   -Y,R17
005201 930a      	ST   -Y,R16
                +
005202 e1ad     +LDI R26 , 29
005203 9fa0     +MUL R26 , R16
005204 01f0     +MOVW R30 , R0
005205 9fa1     +MUL R26 , R17
005206 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
005207 54e2      	SUBI R30,LOW(-_sensor_config)
005208 4efe      	SBCI R31,HIGH(-_sensor_config)
005209 01df      	MOVW R26,R30
00520a 940e 48be 	CALL _getSensorConfig
00520c 019f      	MOVW R18,R30
                 ; 0007 0328         if(err < 0){
00520d 2333      	TST  R19
00520e f452      	BRPL _0xE00BC
                 ; 0007 0329             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
00520f e3e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
005210 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
005211 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
005212 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
005213 940e da29 	CALL __PUTPARD1
005215 01f8      	MOVW R30,R16
005216 940e c200 	CALL SUBOPT_0xEC
                 ; 0007 032A             continue;
005218 c004      	RJMP _0xE00B9
                 ; 0007 032B         }
                 ; 0007 032C         is_sensor_config_update[i] = 0;
                 _0xE00BC:
005219 efa8      	LDI  R26,LOW(_is_sensor_config_update)
00521a e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
00521b 940e c423 	CALL SUBOPT_0x14F
                 ; 0007 032D     }
                 _0xE00B9:
                +
00521d 5f0f     +SUBI R16 , LOW ( - 1 )
00521e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00521f cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 032E 
                 ; 0007 032F     getBuzzerConfig(&buzz_config);
005220 940e bc68 	CALL SUBOPT_0x14
                 ; 0007 0330     is_buzzer_config_update = 0;
                 ; 0007 0331 
                 ; 0007 0332     for(i=0;i<USE_DIN;i++){
                +
005222 e000     +LDI R16 , LOW ( 0 )
005223 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
005224 3002     +CPI R16 , LOW ( 2 )
005225 e0e0     +LDI R30 , HIGH ( 2 )
005226 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005227 f49c      	BRGE _0xE00BF
                 ; 0007 0333         getAuxDinConfig(i,&din_config[i]);
005228 931a      	ST   -Y,R17
005229 930a      	ST   -Y,R16
                +
00522a e0a3     +LDI R26 , 3
00522b 9fa0     +MUL R26 , R16
00522c 01f0     +MOVW R30 , R0
00522d 9fa1     +MUL R26 , R17
00522e 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
00522f 5be1      	SUBI R30,LOW(-_din_config)
005230 4efd      	SBCI R31,HIGH(-_din_config)
005231 01df      	MOVW R26,R30
005232 940e 49a6 	CALL _getAuxDinConfig
                 ; 0007 0334         is_din_config_update[i] = 0;
005234 efad      	LDI  R26,LOW(_is_din_config_update)
005235 e1b0      	LDI  R27,HIGH(_is_din_config_update)
005236 940e c423 	CALL SUBOPT_0x14F
                 ; 0007 0335     }
                +
005238 5f0f     +SUBI R16 , LOW ( - 1 )
005239 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00523a cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0336 
                 ; 0007 0337     for(i=0;i<USE_DOUT;i++){
                +
00523b e000     +LDI R16 , LOW ( 0 )
00523c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
00523d 3002     +CPI R16 , LOW ( 2 )
00523e e0e0     +LDI R30 , HIGH ( 2 )
00523f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005240 f474      	BRGE _0xE00C2
                 ; 0007 0338         getAuxDoutConfig(i,&dout_config[i]);
005241 931a      	ST   -Y,R17
005242 930a      	ST   -Y,R16
                +
005243 e2a6     +LDI R26 , 38
005244 9fa0     +MUL R26 , R16
005245 01f0     +MOVW R30 , R0
005246 9fa1     +MUL R26 , R17
005247 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
005248 940e bc78 	CALL SUBOPT_0x16
                 ; 0007 0339         is_dout_config_update[i] = 0;
00524a 940e c423 	CALL SUBOPT_0x14F
                 ; 0007 033A     }
                +
00524c 5f0f     +SUBI R16 , LOW ( - 1 )
00524d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00524e cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033B 
                 ; 0007 033C     getStatusReportConfig(&status_config);
00524f 940e bc80 	CALL SUBOPT_0x17
                 ; 0007 033D     is_status_config_update = 0;
                 ; 0007 033E 
                 ; 0007 033F     getEnvAlarmConfig(&env_config);
005251 940e bc88 	CALL SUBOPT_0x18
                 ; 0007 0340     is_env_config_update = 0;
                 ; 0007 0341 
                 ; 0007 0342     return 0;
005253 940e c428 	CALL SUBOPT_0x150
                 _0x20E0088:
005255 9624      	ADIW R28,4
005256 9508      	RET
                 ; 0007 0343 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 0018 {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 0019     int     i=0,k=0;
                 ; 0009 001A     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001B 
                 ; 0009 001C     frameData[i++]      = PROTOERROR;
005257 93aa      	ST   -Y,R26
005258 940e c42d 	CALL SUBOPT_0x151
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00525a eeeb      	LDI  R30,LOW(235)
00525b 93ec      	ST   X,R30
                 ; 0009 001D 
                 ; 0009 001E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00525c e020     +LDI R18 , LOW ( 0 )
00525d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
00525e 3028     +CPI R18 , LOW ( 8 )
00525f e0e0     +LDI R30 , HIGH ( 8 )
005260 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005261 f43c      	BRGE _0x120005
                 ; 0009 001F         frameData[i++]  = DEVICE_SERIAL[k];
005262 940e c43c 	CALL SUBOPT_0x152
005264 940e c444 	CALL SUBOPT_0x153
                 ; 0009 0020     }
                +
005266 5f2f     +SUBI R18 , LOW ( - 1 )
005267 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005268 cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0021 
                 ; 0009 0022     frameData[i++]      = errCode;
005269 940e c43c 	CALL SUBOPT_0x152
00526b 85ae      	LDD  R26,Y+14
00526c 83a0      	STD  Z+0,R26
                 ; 0009 0023 
                 ; 0009 0024     printDebug("<ETH_sendNack> sending..\r\n");
                +
00526d e5ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
00526e e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
00526f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
005270 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
005271 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0025     //print_payload(frameData,i);
                 ; 0009 0026     ETH_send(frameData,i,frameID,0);
005273 940e c44e 	CALL SUBOPT_0x154
005275 89eb      	LDD  R30,Y+19
005276 93ea      	ST   -Y,R30
005277 940e c235 	CALL SUBOPT_0xF7
005279 940e c455 	CALL SUBOPT_0x155
                 ; 0009 0027 
                 ; 0009 0028     return 0;
00527b c1a1      	RJMP _0x20E0085
                 ; 0009 0029 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002C {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002D     int     i=0,k=0;
                 ; 0009 002E     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 002F 
                 ; 0009 0030     frameData[i++]      = STATREQA;
00527c 93aa      	ST   -Y,R26
00527d 972f      	SBIW R28,15
00527e 940e c458 	CALL SUBOPT_0x156
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005280 e1eb      	LDI  R30,LOW(27)
005281 93ec      	ST   X,R30
                 ; 0009 0031 
                 ; 0009 0032     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005282 e020     +LDI R18 , LOW ( 0 )
005283 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
005284 3028     +CPI R18 , LOW ( 8 )
005285 e0e0     +LDI R30 , HIGH ( 8 )
005286 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005287 f43c      	BRGE _0x120008
                 ; 0009 0033         frameData[i++]  = DEVICE_SERIAL[k];
005288 940e c43c 	CALL SUBOPT_0x152
00528a 940e c444 	CALL SUBOPT_0x153
                 ; 0009 0034     }
                +
00528c 5f2f     +SUBI R18 , LOW ( - 1 )
00528d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00528e cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0035 
                 ; 0009 0036     frameData[i++]      = accm;
00528f 940e c43c 	CALL SUBOPT_0x152
005291 89ac      	LDD  R26,Y+20
005292 83a0      	STD  Z+0,R26
                 ; 0009 0037     frameData[i++]      = status;
005293 940e c43c 	CALL SUBOPT_0x152
005295 89ab      	LDD  R26,Y+19
005296 83a0      	STD  Z+0,R26
                 ; 0009 0038 
                 ; 0009 0039     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
005297 e7e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
005298 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
005299 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
00529a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
00529b 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 003A     //print_payload(frameData,i);
                 ; 0009 003B 
                 ; 0009 003C     ETH_send(frameData,i,frameID,0);
00529d 940e c44e 	CALL SUBOPT_0x154
00529f 8de9      	LDD  R30,Y+25
0052a0 93ea      	ST   -Y,R30
0052a1 940e c235 	CALL SUBOPT_0xF7
0052a3 940e c455 	CALL SUBOPT_0x155
                 ; 0009 003D 
                 ; 0009 003E     return 0;
0052a5 9666      	ADIW R28,22
0052a6 9508      	RET
                 ; 0009 003F 
                 ; 0009 0040 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0043 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0044     int     i=0,k=0;
                 ; 0009 0045     int     frameLen    = 0;
                 ; 0009 0046     char    *frameData;
                 ; 0009 0047 
                 ; 0009 0048     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
0052a7 93ba      	ST   -Y,R27
0052a8 93aa      	ST   -Y,R26
0052a9 9722      	SBIW R28,2
0052aa 940e bd58 	CALL SUBOPT_0x37
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
0052ac 940e c466 	CALL SUBOPT_0x157
                 ; 0009 0049     if(frameLen > 250){
0052ae f04c      	BRLT _0x120009
                 ; 0009 004A         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
0052af e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
0052b0 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
0052b1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
0052b2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
0052b3 940e bdde 	CALL SUBOPT_0x49
                 ; 0009 004B         return -1;
0052b5 efef      	LDI  R30,LOW(65535)
0052b6 efff      	LDI  R31,HIGH(65535)
0052b7 c03a      	RJMP _0x20E0087
                 ; 0009 004C     }
                 ; 0009 004D 
                 ; 0009 004E     frameData           = (char *) malloc (frameLen);
                 _0x120009:
0052b8 940e c46e 	CALL SUBOPT_0x158
                 ; 0009 004F     if(frameData == NULL){
0052ba f449      	BRNE _0x12000A
                 ; 0009 0050         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
0052bb ede5     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
0052bc e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
0052bd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
0052be e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
0052bf 940e bdde 	CALL SUBOPT_0x49
                 ; 0009 0051         return -1;
0052c1 efef      	LDI  R30,LOW(65535)
0052c2 efff      	LDI  R31,HIGH(65535)
0052c3 c02e      	RJMP _0x20E0087
                 ; 0009 0052     }
                 ; 0009 0053 
                 ; 0009 0054     frameData[i++]      = STATREPC;
                 _0x12000A:
0052c4 940e c475 	CALL SUBOPT_0x159
0052c6 0fae      	ADD  R26,R30
0052c7 1fbf      	ADC  R27,R31
0052c8 e2ea      	LDI  R30,LOW(42)
0052c9 93ec      	ST   X,R30
                 ; 0009 0055 
                 ; 0009 0056     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0052ca e020     +LDI R18 , LOW ( 0 )
0052cb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
0052cc 3028     +CPI R18 , LOW ( 8 )
0052cd e0e0     +LDI R30 , HIGH ( 8 )
0052ce 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0052cf f43c      	BRGE _0x12000D
                 ; 0009 0057         frameData[i++]  = DEVICE_SERIAL[k];
0052d0 940e c475 	CALL SUBOPT_0x159
0052d2 940e c47b 	CALL SUBOPT_0x15A
                 ; 0009 0058     }
                +
0052d4 5f2f     +SUBI R18 , LOW ( - 1 )
0052d5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0052d6 cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 0059 
                 ; 0009 005A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
0052d7 940e c47e 	CALL SUBOPT_0x15B
0052d9 01fe      	MOVW R30,R28
0052da 963f      	ADIW R30,15
0052db 940e bdf8 	CALL SUBOPT_0x4D
                 ; 0009 005B     i += sizeof(timestamp);
                +
0052dd 5f0c     +SUBI R16 , LOW ( - 4 )
0052de 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005C 
                 ; 0009 005D     frameData[i++]      = accm;
0052df 940e c475 	CALL SUBOPT_0x159
0052e1 0fea      	ADD  R30,R26
0052e2 1ffb      	ADC  R31,R27
0052e3 85ac      	LDD  R26,Y+12
0052e4 83a0      	STD  Z+0,R26
                 ; 0009 005E 
                 ; 0009 005F     memcpy(&frameData[i],paraResp,paraLen);
0052e5 940e c47e 	CALL SUBOPT_0x15B
0052e7 940e c486 	CALL SUBOPT_0x15C
                 ; 0009 0060     i += paraLen;
                 ; 0009 0061 
                 ; 0009 0062     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
0052e9 940e c493 	CALL SUBOPT_0x15D
0052eb 931a      	ST   -Y,R17
0052ec 930a      	ST   -Y,R16
0052ed e0e0      	LDI  R30,LOW(0)
0052ee 940e c498 	CALL SUBOPT_0x15E
                 ; 0009 0063     free( frameData );
0052f0 940e c49d 	CALL SUBOPT_0x15F
                 ; 0009 0064 }
                 _0x20E0087:
0052f2 940e daa0 	CALL __LOADLOCR6
0052f4 9661      	ADIW R28,17
0052f5 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0067 {
                 _ETH_sendEventReportCmd:
                 ; 0009 0068     int     i=0,k=0,res=0;
                 ; 0009 0069     char    frameID;
                 ; 0009 006A     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006B 
                 ; 0009 006C     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
0052f6 93aa      	ST   -Y,R26
0052f7 9761      	SBIW R28,17
0052f8 940e bd58 	CALL SUBOPT_0x37
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
0052fa 8dad      	LDD  R26,Y+29
0052fb 30a0      	CPI  R26,LOW(0x0)
0052fc f021      	BREQ _0x12000F
0052fd 30a1      	CPI  R26,LOW(0x1)
0052fe f011      	BREQ _0x12000F
0052ff 30a2      	CPI  R26,LOW(0x2)
005300 f409      	BRNE _0x120010
                 _0x12000F:
005301 c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006D     {
                 ; 0009 006E         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
005302 e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
005303 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
005304 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
005305 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
005306 940e da29 	CALL __PUTPARD1
005308 a1e9      	LDD  R30,Y+33
005309 940e bcfe 	CALL SUBOPT_0x29
                 ; 0009 006F         return -1;
00530b efef      	LDI  R30,LOW(65535)
00530c efff      	LDI  R31,HIGH(65535)
00530d c078      	RJMP _0x20E0086
                 ; 0009 0070     }
                 ; 0009 0071 
                 ; 0009 0072     frameData[i++]      =   EVENREPC;
                 _0x12000E:
00530e 940e c4a1 	CALL SUBOPT_0x160
005310 0fae      	ADD  R26,R30
005311 1fbf      	ADC  R27,R31
005312 e3ea      	LDI  R30,LOW(58)
005313 93ec      	ST   X,R30
                 ; 0009 0073 
                 ; 0009 0074     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005314 e020     +LDI R18 , LOW ( 0 )
005315 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
005316 3028     +CPI R18 , LOW ( 8 )
005317 e0e0     +LDI R30 , HIGH ( 8 )
005318 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005319 f43c      	BRGE _0x120013
                 ; 0009 0075         frameData[i++]  = DEVICE_SERIAL[k];
00531a 940e c4a1 	CALL SUBOPT_0x160
00531c 940e c47b 	CALL SUBOPT_0x15A
                 ; 0009 0076     }
                +
00531e 5f2f     +SUBI R18 , LOW ( - 1 )
00531f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005320 cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0077 
                 ; 0009 0078     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005321 01f8      	MOVW R30,R16
005322 01de      	MOVW R26,R28
005323 9616      	ADIW R26,6
005324 940e c4a7 	CALL SUBOPT_0x161
005326 01fe      	MOVW R30,R28
005327 967b      	ADIW R30,27
005328 940e bdf8 	CALL SUBOPT_0x4D
                 ; 0009 0079     i += sizeof(timestamp);
                +
00532a 5f0c     +SUBI R16 , LOW ( - 4 )
00532b 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007A 
                 ; 0009 007B     frameData[i++]      =   eventType;
00532c 940e c4a1 	CALL SUBOPT_0x160
00532e 0fea      	ADD  R30,R26
00532f 1ffb      	ADC  R31,R27
005330 8dad      	LDD  R26,Y+29
005331 83a0      	STD  Z+0,R26
                 ; 0009 007C     frameData[i++]      =   eventID;
005332 940e c4a1 	CALL SUBOPT_0x160
005334 0fea      	ADD  R30,R26
005335 1ffb      	ADC  R31,R27
005336 8da8      	LDD  R26,Y+24
005337 83a0      	STD  Z+0,R26
                 ; 0009 007D     frameData[i++]      =   statusCode;
005338 940e c4a1 	CALL SUBOPT_0x160
00533a 0fea      	ADD  R30,R26
00533b 1ffb      	ADC  R31,R27
00533c 89af      	LDD  R26,Y+23
00533d 83a0      	STD  Z+0,R26
                 ; 0009 007E 
                 ; 0009 007F     frameID             = ETH_generateId();
00533e 940e 693c 	CALL _ETH_generateId
005340 8bee      	STD  Y+22,R30
                 ; 0009 0080 
                 ; 0009 0081     if(eventType == TYP_RLT)
005341 8ded      	LDD  R30,Y+29
005342 30e0      	CPI  R30,0
005343 f511      	BRNE _0x120014
                 ; 0009 0082     {
                 ; 0009 0083         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
005344 89ee      	LDD  R30,Y+22
005345 93ea      	ST   -Y,R30
005346 940e c16c 	CALL SUBOPT_0xD3
005348 940e da29 	CALL __PUTPARD1
00534a 8ded      	LDD  R30,Y+29
00534b 93ea      	ST   -Y,R30
00534c 8dad      	LDD  R26,Y+29
00534d 940e 83ba 	CALL _addEventLogQueue
00534f 01af      	MOVW R20,R30
                 ; 0009 0084         if(res < 0)
005350 2355      	TST  R21
005351 f49a      	BRPL _0x120015
                 ; 0009 0085         {
                 ; 0009 0086             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0087                         frameID,timestamp,eventID,statusCode);
                +
005352 e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
005353 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
005354 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
005355 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
005356 940e da29 	CALL __PUTPARD1
005358 8dea      	LDD  R30,Y+26
005359 940e be99 	CALL SUBOPT_0x65
00535b 940e c4ac 	CALL SUBOPT_0x162
00535d a1ec      	LDD  R30,Y+36
00535e 940e be99 	CALL SUBOPT_0x65
005360 a1ef      	LDD  R30,Y+39
005361 940e be99 	CALL SUBOPT_0x65
005363 940e c4b3 	CALL SUBOPT_0x163
                 ; 0009 0088         }
                 ; 0009 0089     }
                 _0x120015:
                 ; 0009 008A     else if(eventType == TYP_LOG)
005365 c006      	RJMP _0x120016
                 _0x120014:
005366 8dad      	LDD  R26,Y+29
005367 30a1      	CPI  R26,LOW(0x1)
005368 f419      	BRNE _0x120017
                 ; 0009 008B     {
                 ; 0009 008C         logEventWait.frameID = frameID;
005369 89ee      	LDD  R30,Y+22
00536a 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008D     }
                 ; 0009 008E 
                 ; 0009 008F     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
00536c e8e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
00536d e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
00536e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
00536f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
005370 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0090     print_payload(frameData,i);
005372 940e be33 	CALL SUBOPT_0x56
005374 01d8      	MOVW R26,R16
005375 940e 9b80 	CALL _print_payload
                 ; 0009 0091 
                 ; 0009 0092     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
005377 940e be33 	CALL SUBOPT_0x56
005379 931a      	ST   -Y,R17
00537a 930a      	ST   -Y,R16
00537b 8dea      	LDD  R30,Y+26
00537c 940e c498 	CALL SUBOPT_0x15E
00537e 01af      	MOVW R20,R30
                 ; 0009 0093     if(res < 0){
00537f 2355      	TST  R21
005380 f41a      	BRPL _0x120018
                 ; 0009 0094         return -1;
005381 efef      	LDI  R30,LOW(65535)
005382 efff      	LDI  R31,HIGH(65535)
005383 c002      	RJMP _0x20E0086
                 ; 0009 0095     }
                 ; 0009 0096     else{
                 _0x120018:
                 ; 0009 0097         return 0;
005384 e0e0      	LDI  R30,LOW(0)
005385 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0098     }
                 ; 0009 0099 }
                 _0x20E0086:
005386 940e daa0 	CALL __LOADLOCR6
005388 966e      	ADIW R28,30
005389 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009C {
                 _ETH_sendConfigManageNack:
                 ; 0009 009D     int     i=0,k=0;
                 ; 0009 009E     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 009F 
                 ; 0009 00A0     frameData[i++]      = CONFMANA;
00538a 93aa      	ST   -Y,R26
00538b 972c      	SBIW R28,12
00538c 940e c458 	CALL SUBOPT_0x156
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00538e e4eb      	LDI  R30,LOW(75)
00538f 93ec      	ST   X,R30
                 ; 0009 00A1 
                 ; 0009 00A2     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005390 e020     +LDI R18 , LOW ( 0 )
005391 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
005392 3028     +CPI R18 , LOW ( 8 )
005393 e0e0     +LDI R30 , HIGH ( 8 )
005394 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005395 f43c      	BRGE _0x12001C
                 ; 0009 00A3         frameData[i++]  = DEVICE_SERIAL[k];
005396 940e c43c 	CALL SUBOPT_0x152
005398 940e c444 	CALL SUBOPT_0x153
                 ; 0009 00A4     }
                +
00539a 5f2f     +SUBI R18 , LOW ( - 1 )
00539b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00539c cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A5 
                 ; 0009 00A6     frameData[i++]      = accd;
00539d 940e c43c 	CALL SUBOPT_0x152
00539f 89aa      	LDD  R26,Y+18
0053a0 83a0      	STD  Z+0,R26
                 ; 0009 00A7     frameData[i++]      = cnfg;
0053a1 940e c43c 	CALL SUBOPT_0x152
0053a3 89a9      	LDD  R26,Y+17
0053a4 83a0      	STD  Z+0,R26
                 ; 0009 00A8     frameData[i++]      = status;
0053a5 940e c43c 	CALL SUBOPT_0x152
0053a7 89a8      	LDD  R26,Y+16
0053a8 83a0      	STD  Z+0,R26
                 ; 0009 00A9 
                 ; 0009 00AA     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
0053a9 eaee     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
0053aa e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
0053ab e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
0053ac e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
0053ad 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 00AB     //print_payload(frameData,i);
                 ; 0009 00AC 
                 ; 0009 00AD     ETH_send(frameData,i,frameID,0);
0053af 940e c44e 	CALL SUBOPT_0x154
0053b1 89ef      	LDD  R30,Y+23
0053b2 93ea      	ST   -Y,R30
0053b3 940e c235 	CALL SUBOPT_0xF7
0053b5 940e c455 	CALL SUBOPT_0x155
                 ; 0009 00AE 
                 ; 0009 00AF     return 0;
0053b7 9664      	ADIW R28,20
0053b8 9508      	RET
                 ; 0009 00B0 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B3 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B4     int     i=0,k=0;
                 ; 0009 00B5     int     frameLen    = 0;
                 ; 0009 00B6     char    *frameData;
                 ; 0009 00B7 
                 ; 0009 00B8 
                 ; 0009 00B9     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
0053b9 93ba      	ST   -Y,R27
0053ba 93aa      	ST   -Y,R26
0053bb 9722      	SBIW R28,2
0053bc 940e bd58 	CALL SUBOPT_0x37
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
0053be 940e c466 	CALL SUBOPT_0x157
                 ; 0009 00BA     if(frameLen > 250){
0053c0 f04c      	BRLT _0x12001D
                 ; 0009 00BB         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
0053c1 ede5     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
0053c2 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
0053c3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
0053c4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
0053c5 940e bdde 	CALL SUBOPT_0x49
                 ; 0009 00BC         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0053c7 940e c4b8 	CALL SUBOPT_0x164
                 ; 0009 00BD         return -1;
0053c9 c051      	RJMP _0x20E0084
                 ; 0009 00BE     }
                 ; 0009 00BF 
                 ; 0009 00C0     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
0053ca 940e c46e 	CALL SUBOPT_0x158
                 ; 0009 00C1     if(frameData == NULL){
0053cc f449      	BRNE _0x12001E
                 ; 0009 00C2         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
0053cd e0ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
0053ce e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
0053cf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
0053d0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
0053d1 940e bdde 	CALL SUBOPT_0x49
                 ; 0009 00C3         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0053d3 940e c4b8 	CALL SUBOPT_0x164
                 ; 0009 00C4         return -1;
0053d5 c045      	RJMP _0x20E0084
                 ; 0009 00C5     }
                 ; 0009 00C6 
                 ; 0009 00C7     frameData[i++]      = CONFMANA;
                 _0x12001E:
0053d6 940e c475 	CALL SUBOPT_0x159
0053d8 0fae      	ADD  R26,R30
0053d9 1fbf      	ADC  R27,R31
0053da e4eb      	LDI  R30,LOW(75)
0053db 93ec      	ST   X,R30
                 ; 0009 00C8 
                 ; 0009 00C9     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053dc e020     +LDI R18 , LOW ( 0 )
0053dd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
0053de 3028     +CPI R18 , LOW ( 8 )
0053df e0e0     +LDI R30 , HIGH ( 8 )
0053e0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053e1 f43c      	BRGE _0x120021
                 ; 0009 00CA         frameData[i++]  = DEVICE_SERIAL[k];
0053e2 940e c475 	CALL SUBOPT_0x159
0053e4 940e c47b 	CALL SUBOPT_0x15A
                 ; 0009 00CB     }
                +
0053e6 5f2f     +SUBI R18 , LOW ( - 1 )
0053e7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053e8 cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CC 
                 ; 0009 00CD     frameData[i++]      = accd;
0053e9 940e c475 	CALL SUBOPT_0x159
0053eb 0fea      	ADD  R30,R26
0053ec 1ffb      	ADC  R31,R27
0053ed 85ae      	LDD  R26,Y+14
0053ee 83a0      	STD  Z+0,R26
                 ; 0009 00CE     frameData[i++]      = cnfg;
0053ef 940e c475 	CALL SUBOPT_0x159
0053f1 0fea      	ADD  R30,R26
0053f2 1ffb      	ADC  R31,R27
0053f3 85ad      	LDD  R26,Y+13
0053f4 83a0      	STD  Z+0,R26
                 ; 0009 00CF     frameData[i++]      = status;
0053f5 940e c475 	CALL SUBOPT_0x159
0053f7 0fea      	ADD  R30,R26
0053f8 1ffb      	ADC  R31,R27
0053f9 85ac      	LDD  R26,Y+12
0053fa 83a0      	STD  Z+0,R26
                 ; 0009 00D0     if(cnfgLen > 0){
0053fb 85a8      	LDD  R26,Y+8
0053fc 85b9      	LDD  R27,Y+8+1
0053fd 940e da81 	CALL __CPW02
0053ff f424      	BRGE _0x120022
                 ; 0009 00D1         memcpy(&frameData[i],cnfgData,cnfgLen);
005400 940e c47e 	CALL SUBOPT_0x15B
005402 940e c486 	CALL SUBOPT_0x15C
                 ; 0009 00D2         i += cnfgLen;
                 ; 0009 00D3     }
                 ; 0009 00D4 
                 ; 0009 00D5     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
005404 e4e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
005405 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
005406 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
005407 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
005408 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 00D6     print_payload(frameData,i);
00540a 940e c493 	CALL SUBOPT_0x15D
00540c 01d8      	MOVW R26,R16
00540d 940e c4c4 	CALL SUBOPT_0x165
                 ; 0009 00D7 
                 ; 0009 00D8     ETH_send(frameData,i,frameID,0);
00540f 931a      	ST   -Y,R17
005410 930a      	ST   -Y,R16
005411 89eb      	LDD  R30,Y+19
005412 93ea      	ST   -Y,R30
005413 940e c235 	CALL SUBOPT_0xF7
005415 940e 5c5c 	CALL _ETH_send
                 ; 0009 00D9 
                 ; 0009 00DA     free( frameData );
005417 940e c49d 	CALL SUBOPT_0x15F
                 ; 0009 00DB 
                 ; 0009 00DC     return 0;
005419 e0e0      	LDI  R30,LOW(0)
00541a e0f0      	LDI  R31,HIGH(0)
                 _0x20E0084:
00541b 940e daa0 	CALL __LOADLOCR6
                 _0x20E0085:
00541d 9660      	ADIW R28,16
00541e 9508      	RET
                 ; 0009 00DD }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E0 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E1     int     i=0,k=0,res=0;
                 ; 0009 00E2     char    frameID;
                 ; 0009 00E3     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E4     char    did = 0x00;
                 ; 0009 00E5 
                 ; 0009 00E6     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
00541f 940e da2e 	CALL __PUTPARD2
005421 9764      	SBIW R28,20
005422 e0e0      	LDI  R30,LOW(0)
005423 83e8      	ST   Y,R30
005424 940e bd58 	CALL SUBOPT_0x37
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
005426 a1ac      	LDD  R26,Y+36
005427 30a0      	CPI  R26,LOW(0x0)
005428 f021      	BREQ _0x120024
005429 30a1      	CPI  R26,LOW(0x1)
00542a f011      	BREQ _0x120024
00542b 30a2      	CPI  R26,LOW(0x2)
00542c f409      	BRNE _0x120025
                 _0x120024:
00542d c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E7     {
                 ; 0009 00E8         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
00542e e6e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
00542f e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
005430 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
005431 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
005432 940e da29 	CALL __PUTPARD1
005434 a5e8      	LDD  R30,Y+40
005435 940e bcfe 	CALL SUBOPT_0x29
                 ; 0009 00E9         return -1;
005437 efef      	LDI  R30,LOW(65535)
005438 efff      	LDI  R31,HIGH(65535)
005439 c083      	RJMP _0x20E0083
                 ; 0009 00EA     }
                 ; 0009 00EB 
                 ; 0009 00EC     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
00543a 8dae      	LDD  R26,Y+30
00543b 5faf      	SUBI R26,-LOW(1)
00543c 2fea      	MOV  R30,R26
00543d 95e2      	SWAP R30
00543e 7fe0      	ANDI R30,0xF0
00543f 83ee      	STD  Y+6,R30
                 ; 0009 00ED     did    |= dataType;
005440 a1ec      	LDD  R30,Y+36
005441 81ae      	LDD  R26,Y+6
005442 2bea      	OR   R30,R26
005443 83ee      	STD  Y+6,R30
                 ; 0009 00EE 
                 ; 0009 00EF     frameData[i++]      =   DATAREPC;
005444 940e c4c7 	CALL SUBOPT_0x166
005446 0fae      	ADD  R26,R30
005447 1fbf      	ADC  R27,R31
005448 e5ea      	LDI  R30,LOW(90)
005449 93ec      	ST   X,R30
                 ; 0009 00F0 
                 ; 0009 00F1     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00544a e020     +LDI R18 , LOW ( 0 )
00544b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
00544c 3028     +CPI R18 , LOW ( 8 )
00544d e0e0     +LDI R30 , HIGH ( 8 )
00544e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00544f f43c      	BRGE _0x120028
                 ; 0009 00F2         frameData[i++]  = DEVICE_SERIAL[k];
005450 940e c4c7 	CALL SUBOPT_0x166
005452 940e c47b 	CALL SUBOPT_0x15A
                 ; 0009 00F3     }
                +
005454 5f2f     +SUBI R18 , LOW ( - 1 )
005455 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005456 cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F4 
                 ; 0009 00F5     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005457 01f8      	MOVW R30,R16
005458 01de      	MOVW R26,R28
005459 9617      	ADIW R26,7
00545a 940e c4a7 	CALL SUBOPT_0x161
00545c 01fe      	MOVW R30,R28
00545d 96b2      	ADIW R30,34
00545e 940e bdf8 	CALL SUBOPT_0x4D
                 ; 0009 00F6     i += sizeof(timestamp);
                +
005460 5f0c     +SUBI R16 , LOW ( - 4 )
005461 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F7 
                 ; 0009 00F8     frameData[i++]      =   did;
005462 940e c4c7 	CALL SUBOPT_0x166
005464 0fea      	ADD  R30,R26
005465 1ffb      	ADC  R31,R27
005466 81ae      	LDD  R26,Y+6
005467 83a0      	STD  Z+0,R26
                 ; 0009 00F9 
                 ; 0009 00FA     memcpy(&frameData[i],&value,sizeof(value));
005468 01f8      	MOVW R30,R16
005469 01de      	MOVW R26,R28
00546a 9617      	ADIW R26,7
00546b 940e c4a7 	CALL SUBOPT_0x161
00546d 01fe      	MOVW R30,R28
00546e 967c      	ADIW R30,28
00546f 940e bdf8 	CALL SUBOPT_0x4D
                 ; 0009 00FB     i += sizeof(value);
                +
005471 5f0c     +SUBI R16 , LOW ( - 4 )
005472 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FC 
                 ; 0009 00FD     frameID             = ETH_generateId();
005473 940e 693c 	CALL _ETH_generateId
005475 8fe9      	STD  Y+25,R30
                 ; 0009 00FE 
                 ; 0009 00FF     if(dataType == TYP_RLT)
005476 a1ec      	LDD  R30,Y+36
005477 30e0      	CPI  R30,0
005478 f549      	BRNE _0x120029
                 ; 0009 0100     {
                 ; 0009 0101         res = addDataLogQueue(frameID,timestamp,sensorID,value);
005479 8de9      	LDD  R30,Y+25
00547a 93ea      	ST   -Y,R30
00547b 940e c4ac 	CALL SUBOPT_0x162
00547d a1eb      	LDD  R30,Y+35
00547e a1fc      	LDD  R31,Y+35+1
00547f 93fa      	ST   -Y,R31
005480 93ea      	ST   -Y,R30
                +
005481 a1a9     +LDD R26 , Y + 33
005482 a1ba     +LDD R27 , Y + 33 + 1
005483 a18b     +LDD R24 , Y + 33 + 2
005484 a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
005485 940e 82ec 	CALL _addDataLogQueue
005487 01af      	MOVW R20,R30
                 ; 0009 0102         if(res < 0)
005488 2355      	TST  R21
005489 f4ba      	BRPL _0x12002A
                 ; 0009 0103         {
                 ; 0009 0104             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
00548a e9e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
00548b e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
00548c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
00548d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
00548e 940e da29 	CALL __PUTPARD1
005490 8ded      	LDD  R30,Y+29
005491 940e be99 	CALL SUBOPT_0x65
005493 940e c22e 	CALL SUBOPT_0xF6
005495 a5ea      	LDD  R30,Y+42
005496 a5fb      	LDD  R31,Y+42+1
005497 940e bd4a 	CALL SUBOPT_0x34
                +
005499 a5ea     +LDD R30 , Y + 42
00549a a5fb     +LDD R31 , Y + 42 + 1
00549b a56c     +LDD R22 , Y + 42 + 2
00549c a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
00549d 940e da29 	CALL __PUTPARD1
00549f 940e c4b3 	CALL SUBOPT_0x163
                 ; 0009 0105         }
                 ; 0009 0106     }
                 _0x12002A:
                 ; 0009 0107     else if(dataType == TYP_LOG)
0054a1 c006      	RJMP _0x12002B
                 _0x120029:
0054a2 a1ac      	LDD  R26,Y+36
0054a3 30a1      	CPI  R26,LOW(0x1)
0054a4 f419      	BRNE _0x12002C
                 ; 0009 0108     {
                 ; 0009 0109         logDataWait.frameID = frameID;
0054a5 8de9      	LDD  R30,Y+25
0054a6 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010A     }
                 ; 0009 010B 
                 ; 0009 010C     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
0054a8 edee     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
0054a9 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
0054aa e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
0054ab e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
0054ac 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 010D     //print_payload(frameData,i);
                 ; 0009 010E 
                 ; 0009 010F     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
0054ae 940e be8d 	CALL SUBOPT_0x63
0054b0 931a      	ST   -Y,R17
0054b1 930a      	ST   -Y,R16
0054b2 8ded      	LDD  R30,Y+29
0054b3 940e c498 	CALL SUBOPT_0x15E
0054b5 01af      	MOVW R20,R30
                 ; 0009 0110     if(res < 0){
0054b6 2355      	TST  R21
0054b7 f41a      	BRPL _0x12002D
                 ; 0009 0111         return -1;
0054b8 efef      	LDI  R30,LOW(65535)
0054b9 efff      	LDI  R31,HIGH(65535)
0054ba c002      	RJMP _0x20E0083
                 ; 0009 0112     }
                 ; 0009 0113     else{
                 _0x12002D:
                 ; 0009 0114         return 0;
0054bb e0e0      	LDI  R30,LOW(0)
0054bc e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0115     }
                 ; 0009 0116 }
                 _0x20E0083:
0054bd 940e daa0 	CALL __LOADLOCR6
0054bf 96a5      	ADIW R28,37
0054c0 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 0119 {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011A     int     i=0,k=0;
                 ; 0009 011B     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011C 
                 ; 0009 011D     frameData[i++]      = LOGMANIA;
0054c1 940e c4cd 	CALL SUBOPT_0x167
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0054c3 e6eb      	LDI  R30,LOW(107)
0054c4 93ec      	ST   X,R30
                 ; 0009 011E 
                 ; 0009 011F     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054c5 e020     +LDI R18 , LOW ( 0 )
0054c6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
0054c7 3028     +CPI R18 , LOW ( 8 )
0054c8 e0e0     +LDI R30 , HIGH ( 8 )
0054c9 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054ca f43c      	BRGE _0x120031
                 ; 0009 0120         frameData[i++]  = DEVICE_SERIAL[k];
0054cb 940e c43c 	CALL SUBOPT_0x152
0054cd 940e c444 	CALL SUBOPT_0x153
                 ; 0009 0121     }
                +
0054cf 5f2f     +SUBI R18 , LOW ( - 1 )
0054d0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0054d1 cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0122 
                 ; 0009 0123     frameData[i++]      = accd;
0054d2 940e c43c 	CALL SUBOPT_0x152
0054d4 940e c4d0 	CALL SUBOPT_0x168
                 ; 0009 0124     frameData[i++]      = status;
0054d6 85af      	LDD  R26,Y+15
0054d7 83a0      	STD  Z+0,R26
                 ; 0009 0125 
                 ; 0009 0126     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
0054d8 e0e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
0054d9 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
0054da e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
0054db e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
0054dc c037      	RJMP _0x20E0082
                 ; 0009 0127     //print_payload(frameData,i);
                 ; 0009 0128     ETH_send(frameData,i,frameID,0);
                 ; 0009 0129 
                 ; 0009 012A     return 0;
                 ; 0009 012B }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 012E {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 012F     int     i=0,k=0;
                 ; 0009 0130     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0131 
                 ; 0009 0132     frameData[i++]      = NETMAINA;
0054dd 940e c4cd 	CALL SUBOPT_0x167
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0054df e7eb      	LDI  R30,LOW(123)
0054e0 93ec      	ST   X,R30
                 ; 0009 0133 
                 ; 0009 0134     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054e1 e020     +LDI R18 , LOW ( 0 )
0054e2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
0054e3 3028     +CPI R18 , LOW ( 8 )
0054e4 e0e0     +LDI R30 , HIGH ( 8 )
0054e5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054e6 f43c      	BRGE _0x120034
                 ; 0009 0135         frameData[i++]  = DEVICE_SERIAL[k];
0054e7 940e c43c 	CALL SUBOPT_0x152
0054e9 940e c444 	CALL SUBOPT_0x153
                 ; 0009 0136     }
                +
0054eb 5f2f     +SUBI R18 , LOW ( - 1 )
0054ec 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0054ed cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0137 
                 ; 0009 0138     frameData[i++]      = cmd;
0054ee 940e c43c 	CALL SUBOPT_0x152
0054f0 940e c4d0 	CALL SUBOPT_0x168
                 ; 0009 0139     frameData[i++]      = status;
0054f2 85af      	LDD  R26,Y+15
0054f3 83a0      	STD  Z+0,R26
                 ; 0009 013A 
                 ; 0009 013B     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
0054f4 e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
0054f5 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
0054f6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
0054f7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
0054f8 c01b      	RJMP _0x20E0082
                 ; 0009 013C     ETH_send(frameData,i,frameID,0);
                 ; 0009 013D 
                 ; 0009 013E     return 0;
                 ; 0009 013F }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0142 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0143     int     i=0,k=0;
                 ; 0009 0144     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0145 
                 ; 0009 0146     frameData[i++]      = RMDCTRLA;
0054f9 940e c4cd 	CALL SUBOPT_0x167
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0054fb e8eb      	LDI  R30,LOW(139)
0054fc 93ec      	ST   X,R30
                 ; 0009 0147 
                 ; 0009 0148     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054fd e020     +LDI R18 , LOW ( 0 )
0054fe e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
0054ff 3028     +CPI R18 , LOW ( 8 )
005500 e0e0     +LDI R30 , HIGH ( 8 )
005501 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005502 f43c      	BRGE _0x120037
                 ; 0009 0149         frameData[i++]  = DEVICE_SERIAL[k];
005503 940e c43c 	CALL SUBOPT_0x152
005505 940e c444 	CALL SUBOPT_0x153
                 ; 0009 014A     }
                +
005507 5f2f     +SUBI R18 , LOW ( - 1 )
005508 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005509 cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014B 
                 ; 0009 014C     frameData[i++]      = cmd;
00550a 940e c43c 	CALL SUBOPT_0x152
00550c 940e c4d0 	CALL SUBOPT_0x168
                 ; 0009 014D     frameData[i++]      = status;
00550e 85af      	LDD  R26,Y+15
00550f 83a0      	STD  Z+0,R26
                 ; 0009 014E 
                 ; 0009 014F     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
005510 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
005511 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
005512 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
005513 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E0082:
005514 940e da29 	CALL __PUTPARD1
005516 940e bd53 	CALL SUBOPT_0x36
                 ; 0009 0150     ETH_send(frameData,i,frameID,0);
005518 940e c44e 	CALL SUBOPT_0x154
00551a 89ed      	LDD  R30,Y+21
00551b 93ea      	ST   -Y,R30
00551c 940e c235 	CALL SUBOPT_0xF7
00551e 940e c455 	CALL SUBOPT_0x155
                 ; 0009 0151 
                 ; 0009 0152     return 0;
005520 9662      	ADIW R28,18
005521 9508      	RET
                 ; 0009 0153 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0156 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0157     int     i=0,k=0;
                 ; 0009 0158     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0159 
                 ; 0009 015A     frameData[i++]  = CLRLISTC;
005522 940e c42d 	CALL SUBOPT_0x151
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005524 e9ea      	LDI  R30,LOW(154)
005525 93ec      	ST   X,R30
                 ; 0009 015B 
                 ; 0009 015C     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005526 e020     +LDI R18 , LOW ( 0 )
005527 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
005528 3028     +CPI R18 , LOW ( 8 )
005529 e0e0     +LDI R30 , HIGH ( 8 )
00552a 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00552b f43c      	BRGE _0x12003A
                 ; 0009 015D         frameData[i++]  = DEVICE_SERIAL[k];
00552c 940e c43c 	CALL SUBOPT_0x152
00552e 940e c444 	CALL SUBOPT_0x153
                 ; 0009 015E     }
                +
005530 5f2f     +SUBI R18 , LOW ( - 1 )
005531 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005532 cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 015F 
                 ; 0009 0160     frameData[i++]  = CLR_DUPLIST;
005533 01f8      	MOVW R30,R16
                +
005534 5f0f     +SUBI R16 , LOW ( - 1 )
005535 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005536 940e c4d3 	CALL SUBOPT_0x169
005538 e0e1      	LDI  R30,LOW(1)
005539 93ec      	ST   X,R30
                 ; 0009 0161 
                 ; 0009 0162     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
00553a e8e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
00553b e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
00553c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
00553d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
00553e 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0163     ETH_send(frameData,i,0xFF,0);
005540 940e c44e 	CALL SUBOPT_0x154
005542 efef      	LDI  R30,LOW(255)
005543 93ea      	ST   -Y,R30
005544 940e c235 	CALL SUBOPT_0xF7
005546 940e c455 	CALL SUBOPT_0x155
                 ; 0009 0164 
                 ; 0009 0165     return 0;
005548 962e      	ADIW R28,14
005549 9508      	RET
                 ; 0009 0166 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 0169 {
                 _ETH_checkPushLog:
                 ; 0009 016A     FIL                 file;
                 ; 0009 016B     int                 res;
                 ; 0009 016C     unsigned long int   timestamp;
                 ; 0009 016D     unsigned int        channel;
                 ; 0009 016E     float               value;
                 ; 0009 016F     unsigned char       eventID;
                 ; 0009 0170     unsigned char       eventStatus;
                 ; 0009 0171 
                 ; 0009 0172     // -- check if id is in dataLogQueue -- //
                 ; 0009 0173     res = readDataLogQueue(id,&timestamp,&channel,&value);
00554a 93aa      	ST   -Y,R26
00554b 97a8      	SBIW R28,40
00554c 50d2      	SUBI R29,2
00554d 940e da99 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
00554f 940e c4d8 	CALL SUBOPT_0x16A
005551 b7ed      	IN   R30,SPL
005552 b7fe      	IN   R31,SPH
005553 9731      	SBIW R30,1
005554 93fa      	ST   -Y,R31
005555 93ea      	ST   -Y,R30
005556 933f      	PUSH R19
005557 932f      	PUSH R18
005558 01de      	MOVW R26,R28
005559 961b      	ADIW R26,11
00555a 940e 8338 	CALL _readDataLogQueue
00555c 912f      	POP  R18
00555d 913f      	POP  R19
00555e 018f      	MOVW R16,R30
                 ; 0009 0174     if(res != -1)
00555f efef      	LDI  R30,LOW(65535)
005560 efff      	LDI  R31,HIGH(65535)
005561 17e0      	CP   R30,R16
005562 07f1      	CPC  R31,R17
005563 f411      	BRNE PC+3
005564 940c 55b0 	JMP _0x12003B
                 ; 0009 0175     {
                 ; 0009 0176         // -- found in dataLogQueue -- //
                 ; 0009 0177         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
005566 940e bec8 	CALL SUBOPT_0x6D
005568 f039      	BREQ _0x12003D
005569 940e be23 	CALL SUBOPT_0x53
00556b f021      	BREQ _0x12003D
                +
00556c 3025     +CPI R18 , LOW ( 5 )
00556d e0e0     +LDI R30 , HIGH ( 5 )
00556e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00556f f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 0178         {
                 ; 0009 0179             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
005570 eaeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
005571 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
005572 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
005573 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
005574 c031      	RJMP _0x120115
                 ; 0009 017A         }
                 ; 0009 017B         else
                 _0x12003C:
                 ; 0009 017C         {
                 ; 0009 017D             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
005575 eeed     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
005576 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
005577 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
005578 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
005579 940e be0a 	CALL SUBOPT_0x50
00557b 01f9      	MOVW R30,R18
00557c 940e bd4a 	CALL SUBOPT_0x34
00557e 940e be13 	CALL SUBOPT_0x51
                 ; 0009 017E             res = LOG_openFile(&file,LOGFILE_DATA);
005580 940e c4de 	CALL SUBOPT_0x16B
005582 940e be67 	CALL SUBOPT_0x5E
005584 018f      	MOVW R16,R30
                 ; 0009 017F             if(res < 0)
005585 2311      	TST  R17
005586 f44a      	BRPL _0x120040
                 ; 0009 0180             {
                 ; 0009 0181                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
005587 e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
005588 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
005589 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
00558a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
00558b 940e be72 	CALL SUBOPT_0x5F
00558d 940e bc5e 	CALL SUBOPT_0x12
                 ; 0009 0182             }
                 ; 0009 0183             else
00558f c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0184             {
                 ; 0009 0185                 res = LOG_insertData(&file,timestamp,channel,value);
005590 940e c4de 	CALL SUBOPT_0x16B
005592 940e c4e3 	CALL SUBOPT_0x16C
005594 933a      	ST   -Y,R19
005595 932a      	ST   -Y,R18
005596 940e be7c 	CALL SUBOPT_0x61
005598 018f      	MOVW R16,R30
                 ; 0009 0186                 if(res < 0)
005599 2311      	TST  R17
00559a f412      	BRPL _0x120042
                 ; 0009 0187                 {
                 ; 0009 0188                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
00559b 940e c4e7 	CALL SUBOPT_0x16D
                 ; 0009 0189                 }
                 ; 0009 018A 
                 ; 0009 018B                 res = LOG_closeFile(&file);
                 _0x120042:
00559d 940e c4ed 	CALL SUBOPT_0x16E
                 ; 0009 018C                 if(res < 0)
00559f f412      	BRPL _0x120043
                 ; 0009 018D                 {
                 ; 0009 018E                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0055a0 940e c4fa 	CALL SUBOPT_0x16F
                 ; 0009 018F                 }
                 ; 0009 0190 
                 ; 0009 0191                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
0055a2 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
0055a3 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
0055a4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
0055a5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
0055a6 940e da29 	CALL __PUTPARD1
0055a8 940e bd53 	CALL SUBOPT_0x36
                 ; 0009 0192             }
                 _0x120041:
                 ; 0009 0193         }
                 ; 0009 0194 
                 ; 0009 0195         //isDataLogEmpty = 0;
                 ; 0009 0196         removeDataLogQueue(id);
                +
0055aa 01de     +MOVW R26 , R28
0055ab 5da2     +SUBI R26 , LOW ( - 558 )
0055ac 4fbd     +SBCI R27 , HIGH ( - 558 )
0055ad 91ac     +LD R26 , X
                 	__GETB2SX 558
0055ae 940e 8379 	CALL _removeDataLogQueue
                 ; 0009 0197     }
                 ; 0009 0198 
                 ; 0009 0199     // -- check if id is in eventLogQueue -- //
                 ; 0009 019A     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
0055b0 940e c4d8 	CALL SUBOPT_0x16A
0055b2 b7ed      	IN   R30,SPL
0055b3 b7fe      	IN   R31,SPH
0055b4 93fa      	ST   -Y,R31
0055b5 93ea      	ST   -Y,R30
0055b6 935f      	PUSH R21
0055b7 b7ad      	IN   R26,SPL
0055b8 b7be      	IN   R27,SPH
0055b9 934f      	PUSH R20
0055ba 940e 83fb 	CALL _readEventLogQueue
0055bc 914f      	POP  R20
0055bd 915f      	POP  R21
0055be 018f      	MOVW R16,R30
                 ; 0009 019B     if(res != -1)
0055bf efef      	LDI  R30,LOW(65535)
0055c0 efff      	LDI  R31,HIGH(65535)
0055c1 17e0      	CP   R30,R16
0055c2 07f1      	CPC  R31,R17
0055c3 f411      	BRNE PC+3
0055c4 940c 5609 	JMP _0x120044
                 ; 0009 019C     {
                 ; 0009 019D         // -- found in eventLogQueue -- //
                 ; 0009 019E         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
0055c6 940e bec8 	CALL SUBOPT_0x6D
0055c8 f019      	BREQ _0x120046
0055c9 940e be23 	CALL SUBOPT_0x53
0055cb f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 019F         {
                 ; 0009 01A0             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
0055cc eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
0055cd e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
0055ce e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
0055cf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
0055d0 c02e      	RJMP _0x120116
                 ; 0009 01A1         }
                 ; 0009 01A2         else{
                 _0x120045:
                 ; 0009 01A3 
                 ; 0009 01A4             res = LOG_openFile(&file,LOGFILE_EVENT);
0055d1 940e c4de 	CALL SUBOPT_0x16B
0055d3 940e beae 	CALL SUBOPT_0x69
0055d5 018f      	MOVW R16,R30
                 ; 0009 01A5             if(res < 0)
0055d6 2311      	TST  R17
0055d7 f44a      	BRPL _0x120049
                 ; 0009 01A6             {
                 ; 0009 01A7                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
0055d8 e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
0055d9 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
0055da e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
0055db e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
0055dc 940e beb9 	CALL SUBOPT_0x6A
0055de 940e bc5e 	CALL SUBOPT_0x12
                 ; 0009 01A8             }
                 ; 0009 01A9             else
0055e0 c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AA             {
                 ; 0009 01AB                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
0055e1 e2e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
0055e2 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
0055e3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
0055e4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
0055e5 940e be0a 	CALL SUBOPT_0x50
0055e7 940e be3f 	CALL SUBOPT_0x58
                 ; 0009 01AC                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
0055e9 940e c4de 	CALL SUBOPT_0x16B
0055eb 940e c4e3 	CALL SUBOPT_0x16C
0055ed 935a      	ST   -Y,R21
0055ee 2fa4      	MOV  R26,R20
0055ef 940e 8046 	CALL _LOG_insertEvent
0055f1 018f      	MOVW R16,R30
                 ; 0009 01AD                 if(res < 0)
0055f2 2311      	TST  R17
0055f3 f412      	BRPL _0x12004B
                 ; 0009 01AE                 {
                 ; 0009 01AF                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0055f4 940e c4e7 	CALL SUBOPT_0x16D
                 ; 0009 01B0                 }
                 ; 0009 01B1 
                 ; 0009 01B2                 res = LOG_closeFile(&file);
                 _0x12004B:
0055f6 940e c4ed 	CALL SUBOPT_0x16E
                 ; 0009 01B3                 if(res < 0)
0055f8 f412      	BRPL _0x12004C
                 ; 0009 01B4                 {
                 ; 0009 01B5                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0055f9 940e c4fa 	CALL SUBOPT_0x16F
                 ; 0009 01B6                 }
                 ; 0009 01B7 
                 ; 0009 01B8                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
0055fb e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
0055fc e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
0055fd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
0055fe e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
0055ff 940e da29 	CALL __PUTPARD1
005601 940e bd53 	CALL SUBOPT_0x36
                 ; 0009 01B9             }
                 _0x12004A:
                 ; 0009 01BA 
                 ; 0009 01BB         }
                 ; 0009 01BC 
                 ; 0009 01BD         //isEventLogEmpty    = 0;
                 ; 0009 01BE         removeEventLogQueue(id);
                +
005603 01de     +MOVW R26 , R28
005604 5da2     +SUBI R26 , LOW ( - 558 )
005605 4fbd     +SBCI R27 , HIGH ( - 558 )
005606 91ac     +LD R26 , X
                 	__GETB2SX 558
005607 940e 8440 	CALL _removeEventLogQueue
                 ; 0009 01BF     }
                 ; 0009 01C0 
                 ; 0009 01C1     return;
                 _0x120044:
005609 940e daa0 	CALL __LOADLOCR6
00560b 96af      	ADIW R28,47
00560c 5fde      	SUBI R29,-2
00560d 9508      	RET
                 ; 0009 01C2 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C5 {
                 _ETH_retransmit:
                 ; 0009 01C6     int i;
                 ; 0009 01C7 
                 ; 0009 01C8     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
00560e 940e c01a 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x12004E:
                +
005610 300f     +CPI R16 , LOW ( 15 )
005611 e0e0     +LDI R30 , HIGH ( 15 )
005612 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
005613 f014      	BRLT PC+3
005614 940c 56c2 	JMP _0x12004F
                 ; 0009 01C9     {
                 ; 0009 01CA         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CB             (eth_waitQueue[i].packetID != 0))
005616 940e c500 	CALL SUBOPT_0x170
                +
005618 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
005619 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00561a 01df      	MOVW R26,R30
00561b 940e d9f4 	CALL __GETD1P
00561d 940e bca2 	CALL SUBOPT_0x1B
00561f f039      	BREQ _0x120051
005620 940e c500 	CALL SUBOPT_0x170
                +
005622 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005623 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005624 81a0      	LD   R26,Z
005625 30a0      	CPI  R26,LOW(0x0)
005626 f409      	BRNE _0x120052
                 _0x120051:
005627 c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CC         {
                 ; 0009 01CD             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
005628 940e c500 	CALL SUBOPT_0x170
00562a 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00562b 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00562c 81a0      	LD   R26,Z
00562d 30a3      	CPI  R26,LOW(0x3)
00562e f410      	BRSH PC+3
00562f 940c 5696 	JMP _0x120053
                 ; 0009 01CE             {
                 ; 0009 01CF                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
005631 e9e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
005632 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
005633 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
005634 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
005635 940e da29 	CALL __PUTPARD1
005637 940e c500 	CALL SUBOPT_0x170
                +
005639 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00563a 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00563b 81e0      	LD   R30,Z
00563c 940e bcfe 	CALL SUBOPT_0x29
                 ; 0009 01D0 
                 ; 0009 01D1                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
00563e 940e c500 	CALL SUBOPT_0x170
                +
005640 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005641 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005642 81a0      	LD   R26,Z
005643 91e0 1426 	LDS  R30,_logDataWait
005645 17ea      	CP   R30,R26
005646 f451      	BRNE _0x120054
                 ; 0009 01D2                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
005647 ebeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
005648 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
005649 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
00564a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
00564b 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 01D3                     logDataWait.frameID = 0x00;
00564d e0e0      	LDI  R30,LOW(0)
00564e 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D4                 }
                 ; 0009 01D5                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
005650 c019      	RJMP _0x120055
                 _0x120054:
005651 940e c500 	CALL SUBOPT_0x170
                +
005653 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005654 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005655 81a0      	LD   R26,Z
005656 91e0 142b 	LDS  R30,_logEventWait
005658 17ea      	CP   R30,R26
005659 f451      	BRNE _0x120056
                 ; 0009 01D6                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
00565a eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
00565b e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
00565c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
00565d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
00565e 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 01D7                     logEventWait.frameID = 0x00;
005660 e0e0      	LDI  R30,LOW(0)
005661 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01D8                 }
                 ; 0009 01D9                 else{
005663 c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DA                     // ---- Push in log here ---- //
                 ; 0009 01DB                     ETH_checkPushLog(eth_waitQueue[i].packetID);
005664 940e c500 	CALL SUBOPT_0x170
                +
005666 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005667 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005668 81a0      	LD   R26,Z
005669 dee0      	RCALL _ETH_checkPushLog
                 ; 0009 01DC                     // -------------------------- //
                 ; 0009 01DD                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01DE 
                 ; 0009 01DF                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
00566a 940e c500 	CALL SUBOPT_0x170
                +
00566c 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00566d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00566e 81a0      	LD   R26,Z
00566f 940e 68c5 	CALL _ETH_removeWaitQueue
                 ; 0009 01E0 
                 ; 0009 01E1                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
005671 e1e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
005672 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
005673 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
005674 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
005675 940e c506 	CALL SUBOPT_0x171
005677 940e c506 	CALL SUBOPT_0x171
005679 940e bcbc 	CALL SUBOPT_0x20
                 ; 0009 01E2                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
00567b 940e c511 	CALL SUBOPT_0x172
00567d 940e bd70 	CALL SUBOPT_0x3A
00567f f029      	BREQ _0x120059
005680 940e c511 	CALL SUBOPT_0x172
005682 940e da89 	CALL __CPD02
005684 f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E3                     TIMER_setTimer(&commLostTimer,30);
005685 e2e1      	LDI  R30,LOW(_commLostTimer)
005686 e1f4      	LDI  R31,HIGH(_commLostTimer)
005687 940e c51a 	CALL SUBOPT_0x173
005689 940e 4073 	CALL _TIMER_setTimer
                 ; 0009 01E4                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
00568b e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
00568c e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
00568d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
00568e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
00568f 940e c521 	CALL SUBOPT_0x174
005691 940e c521 	CALL SUBOPT_0x174
005693 940e bcbc 	CALL SUBOPT_0x20
                 ; 0009 01E5                 }
                 ; 0009 01E6             }
                 _0x120058:
                 ; 0009 01E7             else
005695 c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01E8             {
                 ; 0009 01E9                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
005696 940e c500 	CALL SUBOPT_0x170
005698 940e c52f 	CALL SUBOPT_0x175
00569a 940e c534 	CALL SUBOPT_0x176
                 ; 0009 01EA                 eth_waitQueue[i].retryCount++;      // increase retry counter
00569c 940e c500 	CALL SUBOPT_0x170
00569e 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00569f 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
0056a0 01df      	MOVW R26,R30
0056a1 91ec      	LD   R30,X
0056a2 5fef      	SUBI R30,-LOW(1)
0056a3 93ec      	ST   X,R30
                 ; 0009 01EB 
                 ; 0009 01EC                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
0056a4 e6ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
0056a5 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
0056a6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
0056a7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
0056a8 940e da29 	CALL __PUTPARD1
0056aa 940e c500 	CALL SUBOPT_0x170
                +
0056ac 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0056ad 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0056ae 81e0      	LD   R30,Z
0056af 940e bcfe 	CALL SUBOPT_0x29
                 ; 0009 01ED 
                 ; 0009 01EE                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01EF                                 eth_waitQueue[i].packetLen);
0056b1 940e c500 	CALL SUBOPT_0x170
0056b3 940e c53d 	CALL SUBOPT_0x177
0056b5 93fa      	ST   -Y,R31
0056b6 93ea      	ST   -Y,R30
0056b7 940e c500 	CALL SUBOPT_0x170
                +
0056b9 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
0056ba 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0056bb 81a0      	LD   R26,Z
0056bc e0b0      	LDI  R27,0
0056bd 940e 3f71 	CALL _write_uart0
                 ; 0009 01F0             }
                 _0x12005B:
                 ; 0009 01F1         }
                 ; 0009 01F2     }
                 _0x120050:
                +
0056bf 5f0f     +SUBI R16 , LOW ( - 1 )
0056c0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0056c1 cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F3     return;
0056c2 9109      	LD   R16,Y+
0056c3 9119      	LD   R17,Y+
0056c4 9508      	RET
                 ; 0009 01F4 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F7 {
                 _ETH_processPacket:
                 ; 0009 01F8     FIL             file;
                 ; 0009 01F9     unsigned char   frameType;
                 ; 0009 01FA     int             res=0;
                 ; 0009 01FB     unsigned char   frameID;
                 ; 0009 01FC     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FD 
                 ; 0009 01FE     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 01FF     char            *cnfgWr;
                 ; 0009 0200 
                 ; 0009 0201     int             i;
                 ; 0009 0202 
                 ; 0009 0203 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0204 //    print_payload(ptr2frame,len);
                 ; 0009 0205 //    printDebug("\r\n******************\r\n");
                 ; 0009 0206     frameID         = ptr2frame[0];
0056c5 93ba      	ST   -Y,R27
0056c6 93aa      	ST   -Y,R26
0056c7 97a6      	SBIW R28,38
0056c8 50d2      	SUBI R29,2
0056c9 940e da99 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
0056cb e020     +LDI R18 , LOW ( 0 )
0056cc e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0056cd 940e c543 	CALL SUBOPT_0x178
0056cf 910c      	LD   R16,X
                 ; 0009 0207     frameType       = ptr2frame[1];
0056d0 940e c543 	CALL SUBOPT_0x178
0056d2 9611      	ADIW R26,1
0056d3 911c      	LD   R17,X
                 ; 0009 0208 
                 ; 0009 0209     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
0056d4 940e bcd8 	CALL SUBOPT_0x24
0056d6 93e0 1421 	STS  _commLostTimer,R30
0056d8 93f0 1422 	STS  _commLostTimer+1,R31
0056da 9360 1423 	STS  _commLostTimer+2,R22
0056dc 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020A     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020B 
                 ; 0009 020C     switch(frameType){
0056de 940e c087 	CALL SUBOPT_0xAE
                 ; 0009 020D         case STATREQC  :     // -- Status Request COMMAND
0056e0 31ea      	CPI  R30,LOW(0x1A)
0056e1 e0a0      	LDI  R26,HIGH(0x1A)
0056e2 07fa      	CPC  R31,R26
0056e3 f011      	BREQ PC+3
0056e4 940c 5763 	JMP _0x12005F
                 ; 0009 020E             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
0056e6 940e c54a 	CALL SUBOPT_0x179
0056e8 971d      	SBIW R26,13
0056e9 f44c      	BRGE _0x120060
                 ; 0009 020F                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
0056ea e9ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
0056eb e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
0056ec e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
0056ed e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
0056ee 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 0210                 ETH_sendNack(frameID,INVALID_LENGTH);
0056f0 940e c55a 	CALL SUBOPT_0x17B
                 ; 0009 0211                 return;
0056f2 c0d3      	RJMP _0x20E0081
                 ; 0009 0212             }
                 ; 0009 0213 
                 ; 0009 0214             payload = (int) malloc (len);
                 _0x120060:
0056f3 940e c54a 	CALL SUBOPT_0x179
0056f5 940e c55e 	CALL SUBOPT_0x17C
                 ; 0009 0215             if(payload == NULL){
0056f7 f449      	BRNE _0x120061
                 ; 0009 0216                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
0056f8 ede8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
0056f9 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
0056fa e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
0056fb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
0056fc 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0217                 ETH_sendNack(frameID,NOT_READY);
0056fe 940e c564 	CALL SUBOPT_0x17D
                 ; 0009 0218                 return;
005700 c0c5      	RJMP _0x20E0081
                 ; 0009 0219             }
                 ; 0009 021A 
                 ; 0009 021B             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
005701 940e c568 	CALL SUBOPT_0x17E
005703 940e c56f 	CALL SUBOPT_0x17F
005705 940e 5fb5 	CALL _statusRequestParser
005707 019f      	MOVW R18,R30
                 ; 0009 021C             if(res < 0){
005708 2333      	TST  R19
005709 f44a      	BRPL _0x120062
                 ; 0009 021D                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
00570a e0e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
00570b e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
00570c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
00570d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
00570e 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 021E                 free( (void *) payload );
005710 940e c578 	CALL SUBOPT_0x180
                 ; 0009 021F                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0220                 return;
005712 c0b3      	RJMP _0x20E0081
                 ; 0009 0221             }
                 ; 0009 0222 
                 ; 0009 0223             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
005713 e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
005714 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
005715 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
005716 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
005717 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 0224             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
005719 e6e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
00571a e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
00571b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
00571c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
00571d 940e c584 	CALL SUBOPT_0x182
                 ; 0009 0225             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
00571f e7ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
005720 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
005721 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
005722 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
005723 940e c58a 	CALL SUBOPT_0x183
005725 940e c58a 	CALL SUBOPT_0x183
005727 940e bcbc 	CALL SUBOPT_0x20
                 ; 0009 0226             printDebug("statusList      |");
                +
005729 e9ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
00572a e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
00572b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
00572c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
00572d 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0227 
                 ; 0009 0228             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
00572f e0e0      	LDI  R30,LOW(0)
005730 83ee      	STD  Y+6,R30
005731 83ef      	STD  Y+6+1,R30
                 _0x120064:
005732 01da      	MOVW R26,R20
005733 961b      	ADIW R26,11
005734 940e c590 	CALL SUBOPT_0x184
005736 f4b8      	BRSH _0x120065
                 ; 0009 0229             {
                 ; 0009 022A                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
005737 eaef     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
005738 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
005739 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
00573a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
00573b 940e da29 	CALL __PUTPARD1
00573d 01fa      	MOVW R30,R20
00573e 85a5      	LDD  R26,Z+13
00573f 85b6      	LDD  R27,Z+14
005740 85ea      	LDD  R30,Y+10
005741 85fb      	LDD  R31,Y+10+1
005742 9631      	ADIW R30,1
005743 87ea      	STD  Y+10,R30
005744 87fb      	STD  Y+10+1,R31
005745 9731      	SBIW R30,1
005746 940e c597 	CALL SUBOPT_0x185
                 ; 0009 022B             }
005748 81ee      	LDD  R30,Y+6
005749 81ff      	LDD  R31,Y+6+1
00574a 9631      	ADIW R30,1
00574b 83ee      	STD  Y+6,R30
00574c 83ff      	STD  Y+6+1,R31
00574d cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022C             printDebug("\r\n-- ..Done.. --\r\n");
                +
00574e ebe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
00574f e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
005750 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
005751 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
005752 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 022D 
                 ; 0009 022E             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
005754 940e c59c 	CALL SUBOPT_0x186
005756 e0a0      	LDI  R26,LOW(0)
005757 db24      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 022F 
                 ; 0009 0230             if( ((struct stat_req_st *)payload)->accm < 0x30){
005758 01fa      	MOVW R30,R20
005759 85a0      	LDD  R26,Z+8
00575a 33a0      	CPI  R26,LOW(0x30)
00575b f418      	BRSH _0x120066
                 ; 0009 0231                 free_statusRequest((struct stat_req_st *)payload);
00575c 01da      	MOVW R26,R20
00575d 940e 61f5 	CALL _free_statusRequest
                 ; 0009 0232             }
                 ; 0009 0233 
                 ; 0009 0234             free( (void *) payload );
                 _0x120066:
00575f 01da      	MOVW R26,R20
005760 940e a0ed 	CALL _free
                 ; 0009 0235             break;
005762 c460      	RJMP _0x12005E
                 ; 0009 0236         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
005763 32eb      	CPI  R30,LOW(0x2B)
005764 e0a0      	LDI  R26,HIGH(0x2B)
005765 07fa      	CPC  R31,R26
005766 f011      	BREQ PC+3
005767 940c 57ae 	JMP _0x120067
                 ; 0009 0237             if( len < (2 + sizeof(struct stat_rep_st)) ){
005769 940e c54a 	CALL SUBOPT_0x179
00576b 971e      	SBIW R26,14
00576c f42c      	BRGE _0x120068
                 ; 0009 0238                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
00576d ece8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
00576e e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
00576f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
005770 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
005771 c04a      	RJMP _0x20E0080
                 ; 0009 0239                 return;
                 ; 0009 023A             }
                 ; 0009 023B 
                 ; 0009 023C             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
005772 e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
005773 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
005774 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
005775 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
005776 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 023D             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 023E                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
005778 e2e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
005779 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
00577a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
00577b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
00577c 940e da29 	CALL __PUTPARD1
                +
00577e 01fe     +MOVW R30 , R28
00577f 5cee     +SUBI R30 , LOW ( - 562 )
005780 4ffd     +SBCI R31 , HIGH ( - 562 )
005781 9001     +LD R0 , Z +
005782 81f0     +LD R31 , Z
005783 2de0     +MOV R30 , R0
                 	__GETW1SX 562
005784 85e2      	LDD  R30,Z+10
005785 940e be99 	CALL SUBOPT_0x65
                +
005787 01fe     +MOVW R30 , R28
005788 5cea     +SUBI R30 , LOW ( - 566 )
005789 4ffd     +SBCI R31 , HIGH ( - 566 )
00578a 9001     +LD R0 , Z +
00578b 81f0     +LD R31 , Z
00578c 2de0     +MOV R30 , R0
                 	__GETW1SX 566
00578d 85e3      	LDD  R30,Z+11
00578e 940e be99 	CALL SUBOPT_0x65
                +
005790 01fe     +MOVW R30 , R28
005791 5ce6     +SUBI R30 , LOW ( - 570 )
005792 4ffd     +SBCI R31 , HIGH ( - 570 )
005793 9001     +LD R0 , Z +
005794 81f0     +LD R31 , Z
005795 2de0     +MOV R30 , R0
                 	__GETW1SX 570
005796 85e4      	LDD  R30,Z+12
005797 940e be99 	CALL SUBOPT_0x65
                +
005799 01fe     +MOVW R30 , R28
00579a 5ce2     +SUBI R30 , LOW ( - 574 )
00579b 4ffd     +SBCI R31 , HIGH ( - 574 )
00579c 9001     +LD R0 , Z +
00579d 81f0     +LD R31 , Z
00579e 2de0     +MOV R30 , R0
                 	__GETW1SX 574
00579f 85e5      	LDD  R30,Z+13
0057a0 940e be99 	CALL SUBOPT_0x65
0057a2 940e c4b3 	CALL SUBOPT_0x163
                 ; 0009 023F             res = setTimeSyncSchema( &ptr2frame[10] );
0057a4 940e c543 	CALL SUBOPT_0x178
0057a6 961a      	ADIW R26,10
0057a7 940e 67e2 	CALL _setTimeSyncSchema
0057a9 019f      	MOVW R18,R30
                 ; 0009 0240             if(res < 0){
                 ; 0009 0241                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0242             }
                 ; 0009 0243             ETH_removeWaitQueue(frameID);
0057aa 2fa0      	MOV  R26,R16
0057ab 940e 68c5 	CALL _ETH_removeWaitQueue
                 ; 0009 0244             break;
0057ad c415      	RJMP _0x12005E
                 ; 0009 0245         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
0057ae 33eb      	CPI  R30,LOW(0x3B)
0057af e0a0      	LDI  R26,HIGH(0x3B)
0057b0 07fa      	CPC  R31,R26
0057b1 f011      	BREQ PC+3
0057b2 940c 581a 	JMP _0x12006A
                 ; 0009 0246             if( len < (2 + sizeof(struct event_rep_st)) ){
0057b4 940e c54a 	CALL SUBOPT_0x179
0057b6 971a      	SBIW R26,10
0057b7 f49c      	BRGE _0x12006B
                 ; 0009 0247                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
0057b8 e5eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
0057b9 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
0057ba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
0057bb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E0080:
0057bc 940e da29 	CALL __PUTPARD1
                +
0057be 01fe     +MOVW R30 , R28
0057bf 5de0     +SUBI R30 , LOW ( - 560 )
0057c0 4ffd     +SBCI R31 , HIGH ( - 560 )
0057c1 9001     +LD R0 , Z +
0057c2 81f0     +LD R31 , Z
0057c3 2de0     +MOV R30 , R0
                 	__GETW1SX 560
0057c4 940e c200 	CALL SUBOPT_0xEC
                 ; 0009 0248                 return;
                 _0x20E0081:
0057c6 940e daa0 	CALL __LOADLOCR6
0057c8 96e0      	ADIW R28,48
0057c9 5fde      	SUBI R29,-2
0057ca 9508      	RET
                 ; 0009 0249             }
                 ; 0009 024A 
                 ; 0009 024B             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
0057cb e9e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
0057cc e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
0057cd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
0057ce e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
0057cf 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 024C             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
0057d1 91a0 142b 	LDS  R26,_logEventWait
0057d3 30a0      	CPI  R26,LOW(0x0)
0057d4 f021      	BREQ _0x12006D
0057d5 91e0 142b 	LDS  R30,_logEventWait
0057d7 17e0      	CP   R30,R16
0057d8 f009      	BREQ _0x12006E
                 _0x12006D:
0057d9 c039      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024D             {
                 ; 0009 024E                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
0057da ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
0057db e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
0057dc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
0057dd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
0057de 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 024F 
                 ; 0009 0250                 res = LOG_openFile(&file,LOGFILE_EVENT);
0057e0 940e be55 	CALL SUBOPT_0x5A
0057e2 940e beae 	CALL SUBOPT_0x69
0057e4 019f      	MOVW R18,R30
                 ; 0009 0251                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
0057e5 2333      	TST  R19
0057e6 f42a      	BRPL _0x12006F
                +
0057e7 eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
0057e8 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
0057e9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
0057ea e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
0057eb c01d      	RJMP _0x120117
                 ; 0009 0252                 else
                 _0x12006F:
                 ; 0009 0253                 {
                 ; 0009 0254                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
0057ec 940e be55 	CALL SUBOPT_0x5A
0057ee 940e bf02 	CALL SUBOPT_0x72
0057f0 940e c5a1 	CALL SUBOPT_0x187
                 ; 0009 0255                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
0057f2 f41a      	BRPL _0x120071
0057f3 940e c5a9 	CALL SUBOPT_0x188
                 ; 0009 0256                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
0057f5 c00c      	RJMP _0x120072
                 _0x120071:
                +
0057f6 e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
0057f7 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
0057f8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
0057f9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
0057fa 940e beb9 	CALL SUBOPT_0x6A
0057fc 940e bf02 	CALL SUBOPT_0x72
0057fe 940e c176 	CALL SUBOPT_0xD5
005800 940e bcbc 	CALL SUBOPT_0x20
                 _0x120072:
                 ; 0009 0257 
                 ; 0009 0258                     res = LOG_closeFile(&file);
005802 940e c5af 	CALL SUBOPT_0x189
                 ; 0009 0259                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
005804 f462      	BRPL _0x120073
                +
005805 e5ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005806 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005807 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005808 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
005809 940e da29 	CALL __PUTPARD1
00580b ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00580c e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00580d 940e bd4a 	CALL SUBOPT_0x34
00580f 940e bc5e 	CALL SUBOPT_0x12
                 ; 0009 025A                 }
                 _0x120073:
                 ; 0009 025B 
                 ; 0009 025C                 logEventWait.frameID    = 0;
005811 940e bef2 	CALL SUBOPT_0x71
                 ; 0009 025D                 logEventWait.logID      = 0;
                 ; 0009 025E             }
                 ; 0009 025F             removeEventLogQueue(frameID);
                 _0x12006C:
005813 2fa0      	MOV  R26,R16
005814 940e 8440 	CALL _removeEventLogQueue
                 ; 0009 0260             ETH_removeWaitQueue(frameID);
005816 2fa0      	MOV  R26,R16
005817 940e 68c5 	CALL _ETH_removeWaitQueue
                 ; 0009 0261             break;
005819 c3a9      	RJMP _0x12005E
                 ; 0009 0262         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
00581a 34ea      	CPI  R30,LOW(0x4A)
00581b e0a0      	LDI  R26,HIGH(0x4A)
00581c 07fa      	CPC  R31,R26
00581d f011      	BREQ PC+3
00581e 940c 5951 	JMP _0x120074
                 ; 0009 0263             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
005820 e8e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
005821 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
005822 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
005823 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
005824 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0264             print_payload(ptr2frame, len);
005826 940e c568 	CALL SUBOPT_0x17E
005828 93fa      	ST   -Y,R31
005829 93ea      	ST   -Y,R30
00582a 940e c543 	CALL SUBOPT_0x178
00582c 940e 9b80 	CALL _print_payload
                 ; 0009 0265 
                 ; 0009 0266             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
00582e 940e c54a 	CALL SUBOPT_0x179
005830 971c      	SBIW R26,12
005831 f44c      	BRGE _0x120075
                 ; 0009 0267                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
005832 eae5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
005833 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
005834 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
005835 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
005836 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 0268                 ETH_sendNack(frameID,INVALID_LENGTH);
005838 940e c55a 	CALL SUBOPT_0x17B
                 ; 0009 0269                 return;
00583a c388      	RJMP _0x20E007F
                 ; 0009 026A             }
                 ; 0009 026B 
                 ; 0009 026C             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
00583b e0ae      	LDI  R26,LOW(14)
00583c 940e c5bc 	CALL SUBOPT_0x18A
                 ; 0009 026D             if(payload == NULL){
00583e f459      	BRNE _0x120076
                 ; 0009 026E                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
00583f 940e c5be 	CALL SUBOPT_0x18B
                +
005841 e0ee     +LDI R30 , LOW ( 0xE )
005842 e0f0     +LDI R31 , HIGH ( 0xE )
005843 e060     +LDI R22 , BYTE3 ( 0xE )
005844 e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
005845 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0009 026F                 ETH_sendNack(frameID,NOT_READY);
005847 940e c564 	CALL SUBOPT_0x17D
                 ; 0009 0270                 return;
005849 c379      	RJMP _0x20E007F
                 ; 0009 0271             }
                 ; 0009 0272 
                 ; 0009 0273             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
00584a 940e c5c9 	CALL SUBOPT_0x18D
00584c 940e 6011 	CALL _configManageParser
00584e 019f      	MOVW R18,R30
                 ; 0009 0274             if(res < 0){
00584f 2333      	TST  R19
005850 f44a      	BRPL _0x120077
                 ; 0009 0275                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
005851 e1e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
005852 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
005853 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
005854 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
005855 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0276                 free( (void *) payload );
005857 940e c578 	CALL SUBOPT_0x180
                 ; 0009 0277                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0278                 return;
005859 c369      	RJMP _0x20E007F
                 ; 0009 0279             }
                 ; 0009 027A 
                 ; 0009 027B             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
00585a e4ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
00585b e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
00585c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
00585d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
00585e 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 027C             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
005860 940e c5cb 	CALL SUBOPT_0x18E
                 ; 0009 027D             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
005862 e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
005863 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
005864 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
005865 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
005866 940e c5d0 	CALL SUBOPT_0x18F
                 ; 0009 027E 
                 ; 0009 027F             switch( ((struct conf_man_st *)payload)->accd ){
005868 940e c5d6 	CALL SUBOPT_0x190
                 ; 0009 0280                 case CONF_RD_CMD    :   // -- Configration Read -- //
00586a f011      	BREQ PC+3
00586b 940c 58da 	JMP _0x12007B
                 ; 0009 0281                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
00586d 01fa      	MOVW R30,R20
00586e 85a1      	LDD  R26,Z+9
00586f 940e 620a 	CALL _getConfigLen
005871 019f      	MOVW R18,R30
                 ; 0009 0282                                         if(res < 0){
005872 2333      	TST  R19
005873 f43a      	BRPL _0x12007C
                 ; 0009 0283                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
005874 eae8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
005875 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
005876 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
005877 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
005878 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0284                                             ETH_sendNack(frameID,INVALID_PARAMETER);
00587a c0cc      	RJMP _0x120118
                 ; 0009 0285                                             break;
                 ; 0009 0286                                         }
                 ; 0009 0287 
                 ; 0009 0288                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
00587b 01d9      	MOVW R26,R18
00587c 940e a0d2 	CALL _malloc
00587e 87ea      	STD  Y+10,R30
00587f 87fb      	STD  Y+10+1,R31
                 ; 0009 0289                                         if(cnfgRd == NULL){
005880 9730      	SBIW R30,0
005881 f449      	BRNE _0x12007D
                 ; 0009 028A                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
005882 ede4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
005883 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
005884 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
005885 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
005886 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 028B                                             ETH_sendNack(frameID,NOT_READY);
005888 930a      	ST   -Y,R16
005889 e5a0      	LDI  R26,LOW(80)
00588a c0be      	RJMP _0x120119
                 ; 0009 028C                                             break;
                 ; 0009 028D                                         }
                 ; 0009 028E 
                 ; 0009 028F                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
00588b 01fa      	MOVW R30,R20
00588c 85a1      	LDD  R26,Z+9
00588d 93aa      	ST   -Y,R26
00588e 85ab      	LDD  R26,Y+11
00588f 85bc      	LDD  R27,Y+11+1
005890 940e 625c 	CALL _configRead
005892 019f      	MOVW R18,R30
                 ; 0009 0290                                         if(res <= 0){
005893 2400      	CLR  R0
005894 1602      	CP   R0,R18
005895 0603      	CPC  R0,R19
005896 f164      	BRLT _0x12007E
                 ; 0009 0291                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
005897 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
005898 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
005899 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
00589a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
00589b 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0292                                             if(res == -1){
00589d efef      	LDI  R30,LOW(65535)
00589e efff      	LDI  R31,HIGH(65535)
00589f 17e2      	CP   R30,R18
0058a0 07f3      	CPC  R31,R19
0058a1 f419      	BRNE _0x12007F
                 ; 0009 0293                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
0058a2 930a      	ST   -Y,R16
0058a3 e3a0      	LDI  R26,LOW(48)
0058a4 c018      	RJMP _0x12011A
                 ; 0009 0294                                             }
                 ; 0009 0295                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
0058a5 efee      	LDI  R30,LOW(65534)
0058a6 efff      	LDI  R31,HIGH(65534)
0058a7 17e2      	CP   R30,R18
0058a8 07f3      	CPC  R31,R19
0058a9 f021      	BREQ _0x120082
0058aa 2400      	CLR  R0
0058ab 1602      	CP   R0,R18
0058ac 0603      	CPC  R0,R19
0058ad f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0296                                                 ETH_sendNack(frameID,NOT_READY);
0058ae 930a      	ST   -Y,R16
0058af e5a0      	LDI  R26,LOW(80)
0058b0 c00c      	RJMP _0x12011A
                 ; 0009 0297                                             }
                 ; 0009 0298                                             else if(res == -3){
                 _0x120081:
0058b1 efed      	LDI  R30,LOW(65533)
0058b2 efff      	LDI  R31,HIGH(65533)
0058b3 17e2      	CP   R30,R18
0058b4 07f3      	CPC  R31,R19
0058b5 f429      	BRNE _0x120085
                 ; 0009 0299                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029A                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029B                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029C                                                                             ERROR);
0058b6 940e c59c 	CALL SUBOPT_0x186
0058b8 940e c5da 	CALL SUBOPT_0x191
                 ; 0009 029D                                             }
                 ; 0009 029E                                             else{
0058ba c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 029F                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
0058bb 930a      	ST   -Y,R16
0058bc efaf      	LDI  R26,LOW(255)
                 _0x12011A:
0058bd d999      	RCALL _ETH_sendNack
                 ; 0009 02A0                                             }
                 _0x120086:
                 ; 0009 02A1 
                 ; 0009 02A2                                             free((void *) cnfgRd);
0058be 85aa      	LDD  R26,Y+10
0058bf 85bb      	LDD  R27,Y+10+1
0058c0 940e a0ed 	CALL _free
                 ; 0009 02A3                                             break;
0058c2 c087      	RJMP _0x12007A
                 ; 0009 02A4                                         }
                 ; 0009 02A5 
                 ; 0009 02A6                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A7                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02A8                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02A9                                                                         SUCCESS,
                 ; 0009 02AA                                                                         (char *)cnfgRd,
                 ; 0009 02AB                                                                         res  );
0058c3 940e c59c 	CALL SUBOPT_0x186
0058c5 940e c5e0 	CALL SUBOPT_0x192
0058c7 85ee      	LDD  R30,Y+14
0058c8 85ff      	LDD  R31,Y+14+1
0058c9 93fa      	ST   -Y,R31
0058ca 93ea      	ST   -Y,R30
0058cb 01d9      	MOVW R26,R18
0058cc 940e c5e6 	CALL SUBOPT_0x193
                 ; 0009 02AC                                         if(res < 0){
0058ce f432      	BRPL _0x120087
                 ; 0009 02AD                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
0058cf e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
0058d0 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
0058d1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
0058d2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
0058d3 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 02AE                                         }
                 ; 0009 02AF 
                 ; 0009 02B0                                         free( (void *) cnfgRd );
                 _0x120087:
0058d5 85aa      	LDD  R26,Y+10
0058d6 85bb      	LDD  R27,Y+10+1
0058d7 940e a0ed 	CALL _free
                 ; 0009 02B1                                         break;
0058d9 c070      	RJMP _0x12007A
                 ; 0009 02B2                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
0058da 32e0      	CPI  R30,LOW(0x20)
0058db e0a0      	LDI  R26,HIGH(0x20)
0058dc 07fa      	CPC  R31,R26
0058dd f011      	BREQ PC+3
0058de 940c 5925 	JMP _0x120088
                 ; 0009 02B3                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
0058e0 01fa      	MOVW R30,R20
0058e1 85a2      	LDD  R26,Z+10
0058e2 85b3      	LDD  R27,Z+11
0058e3 940e a0d2 	CALL _malloc
0058e5 940e c5eb 	CALL SUBOPT_0x194
                 ; 0009 02B4                                         if(cnfgWr == NULL){
0058e7 9730      	SBIW R30,0
0058e8 f449      	BRNE _0x120089
                 ; 0009 02B5                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
0058e9 e6eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
0058ea e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
0058eb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
0058ec e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
0058ed 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 02B6                                             ETH_sendNack(frameID,NOT_READY);
0058ef 930a      	ST   -Y,R16
0058f0 e5a0      	LDI  R26,LOW(80)
0058f1 c057      	RJMP _0x120119
                 ; 0009 02B7                                             break;
                 ; 0009 02B8                                         }
                 ; 0009 02B9 
                 ; 0009 02BA                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
0058f2 940e c5ee 	CALL SUBOPT_0x195
0058f4 01fa      	MOVW R30,R20
0058f5 85a4      	LDD  R26,Z+12
0058f6 85b5      	LDD  R27,Z+13
0058f7 93ba      	ST   -Y,R27
0058f8 93aa      	ST   -Y,R26
0058f9 85a2      	LDD  R26,Z+10
0058fa 85b3      	LDD  R27,Z+11
0058fb 940e a10f 	CALL _memcpy
                 ; 0009 02BB 
                 ; 0009 02BC                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BD                                                             cnfgWr,
                 ; 0009 02BE                                                             (int) (((struct conf_man_st *)payload)->confLen) );
0058fd 01fa      	MOVW R30,R20
0058fe 85a1      	LDD  R26,Z+9
0058ff 93aa      	ST   -Y,R26
005900 940e c5f3 	CALL SUBOPT_0x196
005902 01fa      	MOVW R30,R20
005903 85a2      	LDD  R26,Z+10
005904 85b3      	LDD  R27,Z+11
005905 940e 668c 	CALL _configWrite
005907 019f      	MOVW R18,R30
                 ; 0009 02BF 
                 ; 0009 02C0                                         free(cnfgWr);
005908 85a8      	LDD  R26,Y+8
005909 85b9      	LDD  R27,Y+8+1
00590a 940e a0ed 	CALL _free
                 ; 0009 02C1                                         if(res < 0){
00590c 2333      	TST  R19
00590d f45a      	BRPL _0x12008A
                 ; 0009 02C2                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
00590e e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
00590f e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
005910 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
005911 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
005912 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 02C3                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C6                                                                         ERROR);
005914 940e c59c 	CALL SUBOPT_0x186
005916 940e c5da 	CALL SUBOPT_0x191
                 ; 0009 02C7                                             break;
005918 c031      	RJMP _0x12007A
                 ; 0009 02C8                                         }
                 ; 0009 02C9 
                 ; 0009 02CA 
                 ; 0009 02CB                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CC                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CD                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02CE                                                                         SUCCESS,
                 ; 0009 02CF                                                                         NULL,
                 ; 0009 02D0                                                                         0  );
005919 940e c59c 	CALL SUBOPT_0x186
00591b 940e c5e0 	CALL SUBOPT_0x192
00591d 940e c5f8 	CALL SUBOPT_0x197
00591f 940e c5e6 	CALL SUBOPT_0x193
                 ; 0009 02D1                                         if(res < 0){
005921 f412      	BRPL _0x12008B
                 ; 0009 02D2                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005922 940e c5fd 	CALL SUBOPT_0x198
                 ; 0009 02D3                                         }
                 ; 0009 02D4 
                 ; 0009 02D5                                         break;
                 _0x12008B:
005924 c025      	RJMP _0x12007A
                 ; 0009 02D6                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
005925 33e0      	CPI  R30,LOW(0x30)
005926 e0a0      	LDI  R26,HIGH(0x30)
005927 07fa      	CPC  R31,R26
005928 f4e1      	BRNE _0x12008F
                 ; 0009 02D7                                         res = configConfirm();
005929 940e 6859 	CALL _configConfirm
00592b 019f      	MOVW R18,R30
                 ; 0009 02D8                                         if(res < 0){
00592c 2333      	TST  R19
00592d f45a      	BRPL _0x12008D
                 ; 0009 02D9                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
00592e e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
00592f e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
005930 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
005931 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
005932 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 02DA                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DB                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DC                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DD                                                                         ERROR);
005934 940e c59c 	CALL SUBOPT_0x186
005936 940e c5da 	CALL SUBOPT_0x191
                 ; 0009 02DE                                             break;
005938 c011      	RJMP _0x12007A
                 ; 0009 02DF                                         }
                 ; 0009 02E0 
                 ; 0009 02E1                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E2                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E3                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E4                                                                         SUCCESS,
                 ; 0009 02E5                                                                         NULL,
                 ; 0009 02E6                                                                         0  );
005939 940e c59c 	CALL SUBOPT_0x186
00593b 940e c5e0 	CALL SUBOPT_0x192
00593d 940e c5f8 	CALL SUBOPT_0x197
00593f 940e c5e6 	CALL SUBOPT_0x193
                 ; 0009 02E7                                         if(res < 0){
005941 f412      	BRPL _0x12008E
                 ; 0009 02E8                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005942 940e c5fd 	CALL SUBOPT_0x198
                 ; 0009 02E9                                         }
                 ; 0009 02EA 
                 ; 0009 02EB                                         break;
                 _0x12008E:
005944 c005      	RJMP _0x12007A
                 ; 0009 02EC                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02ED                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02EE                                                         ((struct conf_man_st *)payload)->accd );
005945 940e c603 	CALL SUBOPT_0x199
                 ; 0009 02EF                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
005947 930a      	ST   -Y,R16
005948 e3a0      	LDI  R26,LOW(48)
                 _0x120119:
005949 d90d      	RCALL _ETH_sendNack
                 ; 0009 02F0                                         break;
                 ; 0009 02F1             }
                 _0x12007A:
                 ; 0009 02F2 
                 ; 0009 02F3             free_configManage((struct conf_man_st *)payload);
00594a 01da      	MOVW R26,R20
00594b 940e 61fc 	CALL _free_configManage
                 ; 0009 02F4             free( (void *) payload );
00594d 01da      	MOVW R26,R20
00594e 940e a0ed 	CALL _free
                 ; 0009 02F5 
                 ; 0009 02F6             break;
005950 c272      	RJMP _0x12005E
                 ; 0009 02F7         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
005951 35eb      	CPI  R30,LOW(0x5B)
005952 e0a0      	LDI  R26,HIGH(0x5B)
005953 07fa      	CPC  R31,R26
005954 f011      	BREQ PC+3
005955 940c 59b1 	JMP _0x120090
                 ; 0009 02F8             if( len < (2 + sizeof(struct data_rep_st)) ){
005957 940e c54a 	CALL SUBOPT_0x179
005959 971a      	SBIW R26,10
00595a f43c      	BRGE _0x120091
                 ; 0009 02F9                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
00595b e7e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
00595c e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
00595d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
00595e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
00595f 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 02FA                 return;
005961 c261      	RJMP _0x20E007F
                 ; 0009 02FB             }
                 ; 0009 02FC 
                 ; 0009 02FD             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
005962 eaea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
005963 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
005964 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
005965 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
005966 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 02FE             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
005968 91a0 1426 	LDS  R26,_logDataWait
00596a 30a0      	CPI  R26,LOW(0x0)
00596b f021      	BREQ _0x120093
00596c 91e0 1426 	LDS  R30,_logDataWait
00596e 17e0      	CP   R30,R16
00596f f009      	BREQ _0x120094
                 _0x120093:
005970 c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 02FF             {
                 ; 0009 0300                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
005971 ede0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
005972 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
005973 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
005974 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
005975 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0301 
                 ; 0009 0302                 res = LOG_openFile(&file,LOGFILE_DATA);
005977 940e be55 	CALL SUBOPT_0x5A
005979 940e be67 	CALL SUBOPT_0x5E
00597b 019f      	MOVW R18,R30
                 ; 0009 0303                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
00597c 2333      	TST  R19
00597d f42a      	BRPL _0x120095
                +
00597e eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
00597f e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005980 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005981 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005982 c01d      	RJMP _0x12011B
                 ; 0009 0304                 else
                 _0x120095:
                 ; 0009 0305                 {
                 ; 0009 0306                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
005983 940e be55 	CALL SUBOPT_0x5A
005985 940e bedc 	CALL SUBOPT_0x6F
005987 940e c5a1 	CALL SUBOPT_0x187
                 ; 0009 0307                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005989 f41a      	BRPL _0x120097
00598a 940e c5a9 	CALL SUBOPT_0x188
                 ; 0009 0308                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
00598c c00c      	RJMP _0x120098
                 _0x120097:
                +
00598d e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
00598e e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
00598f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005990 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005991 940e be72 	CALL SUBOPT_0x5F
005993 940e bedc 	CALL SUBOPT_0x6F
005995 940e c176 	CALL SUBOPT_0xD5
005997 940e bcbc 	CALL SUBOPT_0x20
                 _0x120098:
                 ; 0009 0309 
                 ; 0009 030A                     res = LOG_closeFile(&file);
005999 940e c5af 	CALL SUBOPT_0x189
                 ; 0009 030B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
00599b f462      	BRPL _0x120099
                +
00599c e5ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
00599d e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
00599e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
00599f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
0059a0 940e da29 	CALL __PUTPARD1
0059a2 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
0059a3 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
0059a4 940e bd4a 	CALL SUBOPT_0x34
0059a6 940e bc5e 	CALL SUBOPT_0x12
                 ; 0009 030C                 }
                 _0x120099:
                 ; 0009 030D 
                 ; 0009 030E                 logDataWait.frameID    = 0;
0059a8 940e becc 	CALL SUBOPT_0x6E
                 ; 0009 030F                 logDataWait.logID      = 0;
                 ; 0009 0310             }
                 ; 0009 0311             removeDataLogQueue(frameID);
                 _0x120092:
0059aa 2fa0      	MOV  R26,R16
0059ab 940e 8379 	CALL _removeDataLogQueue
                 ; 0009 0312             ETH_removeWaitQueue(frameID);
0059ad 2fa0      	MOV  R26,R16
0059ae 940e 68c5 	CALL _ETH_removeWaitQueue
                 ; 0009 0313             break;
0059b0 c212      	RJMP _0x12005E
                 ; 0009 0314         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
0059b1 36ea      	CPI  R30,LOW(0x6A)
0059b2 e0a0      	LDI  R26,HIGH(0x6A)
0059b3 07fa      	CPC  R31,R26
0059b4 f011      	BREQ PC+3
0059b5 940c 5a1d 	JMP _0x12009A
                 ; 0009 0315             if( len < (2 + sizeof(struct log_manic_st)) ){
0059b7 940e c54a 	CALL SUBOPT_0x179
0059b9 9753      	SBIW R26,19
0059ba f44c      	BRGE _0x12009B
                 ; 0009 0316                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
0059bb efe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
0059bc e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
0059bd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
0059be e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
0059bf 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 0317                 ETH_sendNack(frameID,INVALID_LENGTH);
0059c1 940e c55a 	CALL SUBOPT_0x17B
                 ; 0009 0318                 return;
0059c3 c1ff      	RJMP _0x20E007F
                 ; 0009 0319             }
                 ; 0009 031A 
                 ; 0009 031B             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
0059c4 e1a1      	LDI  R26,LOW(17)
0059c5 940e c5bc 	CALL SUBOPT_0x18A
                 ; 0009 031C             if(payload == NULL){
0059c7 f459      	BRNE _0x12009C
                 ; 0009 031D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
0059c8 940e c5be 	CALL SUBOPT_0x18B
                +
0059ca e1e1     +LDI R30 , LOW ( 0x11 )
0059cb e0f0     +LDI R31 , HIGH ( 0x11 )
0059cc e060     +LDI R22 , BYTE3 ( 0x11 )
0059cd e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
0059ce 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0009 031E                 ETH_sendNack(frameID,NOT_READY);
0059d0 940e c564 	CALL SUBOPT_0x17D
                 ; 0009 031F                 return;
0059d2 c1f0      	RJMP _0x20E007F
                 ; 0009 0320             }
                 ; 0009 0321 
                 ; 0009 0322             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
0059d3 940e c5c9 	CALL SUBOPT_0x18D
0059d5 940e 6097 	CALL _logManipulationCmdParser
0059d7 019f      	MOVW R18,R30
                 ; 0009 0323             if(res < 0){
0059d8 2333      	TST  R19
0059d9 f42a      	BRPL _0x12009D
                 ; 0009 0324                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
0059da 940e c608 	CALL SUBOPT_0x19A
                 ; 0009 0325                 free( (void *) payload );
0059dc 940e c578 	CALL SUBOPT_0x180
                 ; 0009 0326                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0327                 return;
0059de c1e4      	RJMP _0x20E007F
                 ; 0009 0328             }
                 ; 0009 0329 
                 ; 0009 032A             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
0059df e7e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
0059e0 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
0059e1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
0059e2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
0059e3 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 032B             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
0059e5 940e c5cb 	CALL SUBOPT_0x18E
                 ; 0009 032C             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
0059e7 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
0059e8 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
0059e9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
0059ea e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
0059eb 940e c60e 	CALL SUBOPT_0x19B
                 ; 0009 032D             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
0059ed ebe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
0059ee e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
0059ef e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
0059f0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
0059f1 940e da29 	CALL __PUTPARD1
0059f3 01fa      	MOVW R30,R20
                +
0059f4 85a5     +LDD R26 , Z + 13
0059f5 85b6     +LDD R27 , Z + 13 + 1
0059f6 8587     +LDD R24 , Z + 13 + 2
0059f7 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
0059f8 940e c619 	CALL SUBOPT_0x19C
                 ; 0009 032E 
                 ; 0009 032F             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0330                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0331                                             ((struct log_manic_st *)payload)->tStop);
0059fa 01fa      	MOVW R30,R20
0059fb 85a0      	LDD  R26,Z+8
0059fc 93aa      	ST   -Y,R26
0059fd 940e c61d 	CALL SUBOPT_0x19D
0059ff 940e da2e 	CALL __PUTPARD2
005a01 01fa      	MOVW R30,R20
                +
005a02 85a5     +LDD R26 , Z + 13
005a03 85b6     +LDD R27 , Z + 13 + 1
005a04 8587     +LDD R24 , Z + 13 + 2
005a05 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005a06 940e 67c9 	CALL _setLogManipulateSchema
005a08 019f      	MOVW R18,R30
                 ; 0009 0332             if(res < 0){
005a09 2333      	TST  R19
005a0a f452      	BRPL _0x12009E
                 ; 0009 0333                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
005a0b ecee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
005a0c e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
005a0d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
005a0e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
005a0f 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0334                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
005a11 940e c59c 	CALL SUBOPT_0x186
005a13 e0a1      	LDI  R26,LOW(1)
005a14 daac      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0335             }
                 ; 0009 0336 
                 ; 0009 0337             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
005a15 940e c59c 	CALL SUBOPT_0x186
005a17 e0a0      	LDI  R26,LOW(0)
005a18 daa8      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0338 
                 ; 0009 0339             free( (void *) payload );
005a19 01da      	MOVW R26,R20
005a1a 940e a0ed 	CALL _free
                 ; 0009 033A 
                 ; 0009 033B             break;
005a1c c1a6      	RJMP _0x12005E
                 ; 0009 033C         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
005a1d 36eb      	CPI  R30,LOW(0x6B)
005a1e e0a0      	LDI  R26,HIGH(0x6B)
005a1f 07fa      	CPC  R31,R26
005a20 f5b1      	BRNE _0x12009F
                 ; 0009 033D             if( len < (2 + sizeof(struct log_mania_st)) ){
005a21 940e c54a 	CALL SUBOPT_0x179
005a23 971c      	SBIW R26,12
005a24 f43c      	BRGE _0x1200A0
                 ; 0009 033E                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
005a25 e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
005a26 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
005a27 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
005a28 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
005a29 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 033F                 return;
005a2b c197      	RJMP _0x20E007F
                 ; 0009 0340             }
                 ; 0009 0341 
                 ; 0009 0342             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
005a2c e0aa      	LDI  R26,LOW(10)
005a2d 940e c5bc 	CALL SUBOPT_0x18A
                 ; 0009 0343             if(payload == NULL){
005a2f f429      	BRNE _0x1200A1
                 ; 0009 0344                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
005a30 940e c5be 	CALL SUBOPT_0x18B
005a32 940e c622 	CALL SUBOPT_0x19E
                 ; 0009 0345                 return;
005a34 c18e      	RJMP _0x20E007F
                 ; 0009 0346             }
                 ; 0009 0347 
                 ; 0009 0348             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
005a35 940e c627 	CALL SUBOPT_0x19F
005a37 940e 611f 	CALL _logManipulationAckParser
005a39 019f      	MOVW R18,R30
                 ; 0009 0349             if(res < 0){
005a3a 2333      	TST  R19
005a3b f432      	BRPL _0x1200A2
                 ; 0009 034A                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005a3c 940e c608 	CALL SUBOPT_0x19A
                 ; 0009 034B                 free( (void *) payload );
005a3e 01da      	MOVW R26,R20
005a3f 940e a0ed 	CALL _free
                 ; 0009 034C                 return;
005a41 c181      	RJMP _0x20E007F
                 ; 0009 034D             }
                 ; 0009 034E 
                 ; 0009 034F             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
005a42 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
005a43 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
005a44 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
005a45 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
005a46 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 0350             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
005a48 940e c5cb 	CALL SUBOPT_0x18E
                 ; 0009 0351             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
005a4a e7e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
005a4b e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
005a4c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
005a4d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
005a4e 940e c5d0 	CALL SUBOPT_0x18F
                 ; 0009 0352 
                 ; 0009 0353             free( (void *) payload );
005a50 01da      	MOVW R26,R20
005a51 940e a0ed 	CALL _free
                 ; 0009 0354             ETH_removeWaitQueue(frameID);
005a53 2fa0      	MOV  R26,R16
005a54 940e 68c5 	CALL _ETH_removeWaitQueue
                 ; 0009 0355             break;
005a56 c16c      	RJMP _0x12005E
                 ; 0009 0356         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
005a57 37ea      	CPI  R30,LOW(0x7A)
005a58 e0a0      	LDI  R26,HIGH(0x7A)
005a59 07fa      	CPC  R31,R26
005a5a f011      	BREQ PC+3
005a5b 940c 5ae5 	JMP _0x1200A3
                 ; 0009 0357             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
005a5d 940e c54a 	CALL SUBOPT_0x179
005a5f 971c      	SBIW R26,12
005a60 f44c      	BRGE _0x1200A4
                 ; 0009 0358                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
005a61 e8eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005a62 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005a63 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
005a64 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
005a65 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 0359                 ETH_sendNack(frameID,INVALID_LENGTH);
005a67 940e c55a 	CALL SUBOPT_0x17B
                 ; 0009 035A                 return;
005a69 c159      	RJMP _0x20E007F
                 ; 0009 035B             }
                 ; 0009 035C 
                 ; 0009 035D             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005a6a e0ad      	LDI  R26,LOW(13)
005a6b 940e c5bc 	CALL SUBOPT_0x18A
                 ; 0009 035E             if(payload == NULL){
005a6d f439      	BRNE _0x1200A5
                 ; 0009 035F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
005a6e 940e c5be 	CALL SUBOPT_0x18B
005a70 940e c62d 	CALL SUBOPT_0x1A0
                 ; 0009 0360                 ETH_sendNack(frameID,NOT_READY);
005a72 940e c564 	CALL SUBOPT_0x17D
                 ; 0009 0361                 return;
005a74 c14e      	RJMP _0x20E007F
                 ; 0009 0362             }
                 ; 0009 0363 
                 ; 0009 0364             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
005a75 940e c5c9 	CALL SUBOPT_0x18D
005a77 940e 6130 	CALL _networkMaintenanceParser
005a79 019f      	MOVW R18,R30
                 ; 0009 0365             if(res < 0){
005a7a 2333      	TST  R19
005a7b f44a      	BRPL _0x1200A6
                 ; 0009 0366                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
005a7c ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
005a7d e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
005a7e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
005a7f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
005a80 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0367                 free( (void *) payload );
005a82 940e c578 	CALL SUBOPT_0x180
                 ; 0009 0368                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0369                 return;
005a84 c13e      	RJMP _0x20E007F
                 ; 0009 036A             }
                 ; 0009 036B 
                 ; 0009 036C             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
005a85 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
005a86 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
005a87 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
005a88 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
005a89 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 036D             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005a8b 940e c632 	CALL SUBOPT_0x1A1
                 ; 0009 036E             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
005a8d e4ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
005a8e e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
005a8f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
005a90 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
005a91 940e c58a 	CALL SUBOPT_0x183
005a93 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0009 036F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005a95 01fa      	MOVW R30,R20
005a96 940e c637 	CALL SUBOPT_0x1A2
005a98 f4a8      	BRSH _0x1200A7
                 ; 0009 0370                 printDebug("data ---        \r\n");
                +
005a99 e6e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
005a9a e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005a9b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
005a9c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
005a9d 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0371                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
005a9f 01fa      	MOVW R30,R20
005aa0 85a3      	LDD  R26,Z+11
005aa1 85b4      	LDD  R27,Z+12
005aa2 93ba      	ST   -Y,R27
005aa3 93aa      	ST   -Y,R26
005aa4 85a1      	LDD  R26,Z+9
005aa5 85b2      	LDD  R27,Z+10
005aa6 940e 9b80 	CALL _print_payload
                 ; 0009 0372                 printDebug("--------\r\n");
                +
005aa8 e7e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
005aa9 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
005aaa e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
005aab e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
005aac 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0373             }
                 ; 0009 0374 
                 ; 0009 0375             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
005aae 940e c5d6 	CALL SUBOPT_0x190
                 ; 0009 0376                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
005ab0 f529      	BRNE _0x1200AE
005ab1 01fa      	MOVW R30,R20
005ab2 85a3      	LDD  R26,Z+11
005ab3 85b4      	LDD  R27,Z+12
005ab4 940e 67e2 	CALL _setTimeSyncSchema
005ab6 019f      	MOVW R18,R30
                 ; 0009 0377                                         if(res < 0){
005ab7 2333      	TST  R19
005ab8 f47a      	BRPL _0x1200AC
                 ; 0009 0378                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
005ab9 e7ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
005aba e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
005abb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
005abc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
005abd 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0379                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005abf 940e c63c 	CALL SUBOPT_0x1A3
                 ; 0009 037A                                             free_networkMaintenance((struct netw_man_st *)payload);
005ac1 01da      	MOVW R26,R20
005ac2 940e 6203 	CALL _free_networkMaintenance
                 ; 0009 037B                                             free( (void *) payload );
005ac4 01da      	MOVW R26,R20
005ac5 940e a0ed 	CALL _free
                 ; 0009 037C                                             return;
005ac7 c0fb      	RJMP _0x20E007F
                 ; 0009 037D                                         }
                 ; 0009 037E 
                 ; 0009 037F                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
005ac8 940e c59c 	CALL SUBOPT_0x186
005aca e0a0      	LDI  R26,LOW(0)
005acb da11      	RCALL _ETH_sendNetworkMaintenanceAck
005acc 019f      	MOVW R18,R30
                 ; 0009 0380 
                 ; 0009 0381                                         if(res < 0){
005acd 2333      	TST  R19
005ace f432      	BRPL _0x1200AD
                 ; 0009 0382                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
005acf ebe0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
005ad0 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
005ad1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
005ad2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
005ad3 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0383                                         }
                 ; 0009 0384 
                 ; 0009 0385                                         break;
                 _0x1200AD:
005ad5 c004      	RJMP _0x1200AA
                 ; 0009 0386                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0387                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 0388                                                         ((struct netw_man_st *)payload)->cmd );
005ad6 940e c603 	CALL SUBOPT_0x199
                 ; 0009 0389                                         ETH_sendNack(frameID,INVALID_PARAMETER);
005ad8 940e c63c 	CALL SUBOPT_0x1A3
                 ; 0009 038A                                         break;
                 ; 0009 038B             }
                 _0x1200AA:
                 ; 0009 038C 
                 ; 0009 038D             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005ada 01fa      	MOVW R30,R20
005adb 940e c637 	CALL SUBOPT_0x1A2
005add f418      	BRSH _0x1200AF
                 ; 0009 038E                 free_networkMaintenance((struct netw_man_st *)payload);
005ade 01da      	MOVW R26,R20
005adf 940e 6203 	CALL _free_networkMaintenance
                 ; 0009 038F             }
                 ; 0009 0390 
                 ; 0009 0391             free( (void *) payload );
                 _0x1200AF:
005ae1 01da      	MOVW R26,R20
005ae2 940e a0ed 	CALL _free
                 ; 0009 0392 
                 ; 0009 0393             break;
005ae4 c0de      	RJMP _0x12005E
                 ; 0009 0394         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
005ae5 38ea      	CPI  R30,LOW(0x8A)
005ae6 e0a0      	LDI  R26,HIGH(0x8A)
005ae7 07fa      	CPC  R31,R26
005ae8 f011      	BREQ PC+3
005ae9 940c 5b4e 	JMP _0x1200B0
                 ; 0009 0395             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
005aeb 940e c54a 	CALL SUBOPT_0x179
005aed 971f      	SBIW R26,15
005aee f44c      	BRGE _0x1200B1
                 ; 0009 0396                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
005aef e0e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
005af0 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
005af1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
005af2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
005af3 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 0397                 ETH_sendNack(frameID,INVALID_LENGTH);
005af5 940e c55a 	CALL SUBOPT_0x17B
                 ; 0009 0398                 return;
005af7 c0cb      	RJMP _0x20E007F
                 ; 0009 0399             }
                 ; 0009 039A 
                 ; 0009 039B             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
005af8 e0ad      	LDI  R26,LOW(13)
005af9 940e c5bc 	CALL SUBOPT_0x18A
                 ; 0009 039C             if(payload == NULL){
005afb f439      	BRNE _0x1200B2
                 ; 0009 039D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
005afc 940e c5be 	CALL SUBOPT_0x18B
005afe 940e c62d 	CALL SUBOPT_0x1A0
                 ; 0009 039E                 ETH_sendNack(frameID,NOT_READY);
005b00 940e c564 	CALL SUBOPT_0x17D
                 ; 0009 039F                 return;
005b02 c0c0      	RJMP _0x20E007F
                 ; 0009 03A0             }
                 ; 0009 03A1 
                 ; 0009 03A2             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
005b03 940e c627 	CALL SUBOPT_0x19F
005b05 940e 6189 	CALL _remoteDeviceControlParser
005b07 019f      	MOVW R18,R30
                 ; 0009 03A3             if(res < 0){
005b08 2333      	TST  R19
005b09 f44a      	BRPL _0x1200B3
                 ; 0009 03A4                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
005b0a e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
005b0b e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
005b0c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
005b0d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
005b0e 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 03A5                 free( (void *) payload );
005b10 940e c578 	CALL SUBOPT_0x180
                 ; 0009 03A6                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A7                 return;
005b12 c0b0      	RJMP _0x20E007F
                 ; 0009 03A8             }
                 ; 0009 03A9 
                 ; 0009 03AA             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
005b13 e7ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
005b14 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
005b15 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
005b16 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
005b17 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 03AB             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
005b19 940e c632 	CALL SUBOPT_0x1A1
                 ; 0009 03AC             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
005b1b eaed     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
005b1c e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
005b1d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
005b1e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
005b1f 940e c60e 	CALL SUBOPT_0x19B
                 ; 0009 03AD 
                 ; 0009 03AE             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
005b21 940e c5d6 	CALL SUBOPT_0x190
                 ; 0009 03AF                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
005b23 f511      	BRNE _0x1200BA
005b24 01fa      	MOVW R30,R20
005b25 940e c61d 	CALL SUBOPT_0x19D
005b27 940e 6814 	CALL _setMuteAlarm
005b29 019f      	MOVW R18,R30
                 ; 0009 03B0                                             if(res < 0){
005b2a 2333      	TST  R19
005b2b f462      	BRPL _0x1200B8
                 ; 0009 03B1                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
005b2c ece5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
005b2d e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
005b2e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
005b2f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
005b30 940e c60e 	CALL SUBOPT_0x19B
                 ; 0009 03B2                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005b32 940e c63c 	CALL SUBOPT_0x1A3
                 ; 0009 03B3                                                 free( (void *) payload );
005b34 01da      	MOVW R26,R20
005b35 940e a0ed 	CALL _free
                 ; 0009 03B4                                                 return;
005b37 c08b      	RJMP _0x20E007F
                 ; 0009 03B5                                             }
                 ; 0009 03B6 
                 ; 0009 03B7                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
005b38 940e c59c 	CALL SUBOPT_0x186
005b3a e0a0      	LDI  R26,LOW(0)
005b3b d9bd      	RCALL _ETH_remoteDeviceControlAck
005b3c 019f      	MOVW R18,R30
                 ; 0009 03B8 
                 ; 0009 03B9                                             if(res < 0){
005b3d 2333      	TST  R19
005b3e f432      	BRPL _0x1200B9
                 ; 0009 03BA                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
005b3f efe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
005b40 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
005b41 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
005b42 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
005b43 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 03BB                                             }
                 ; 0009 03BC                                             break;
                 _0x1200B9:
005b45 c004      	RJMP _0x1200B6
                 ; 0009 03BD                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03BE                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03BF                                                             ((struct netw_man_st *)payload)->cmd );
005b46 940e c603 	CALL SUBOPT_0x199
                 ; 0009 03C0                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005b48 940e c63c 	CALL SUBOPT_0x1A3
                 ; 0009 03C1                                             break;
                 ; 0009 03C2             }
                 _0x1200B6:
                 ; 0009 03C3 
                 ; 0009 03C4             free( (void *) payload );
005b4a 01da      	MOVW R26,R20
005b4b 940e a0ed 	CALL _free
                 ; 0009 03C5             break;
005b4d c075      	RJMP _0x12005E
                 ; 0009 03C6         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
005b4e 39eb      	CPI  R30,LOW(0x9B)
005b4f e0a0      	LDI  R26,HIGH(0x9B)
005b50 07fa      	CPC  R31,R26
005b51 f011      	BREQ PC+3
005b52 940c 5baf 	JMP _0x1200BB
                 ; 0009 03C7             if( len < (2 + sizeof(struct clr_lst_st)) ){
005b54 940e c54a 	CALL SUBOPT_0x179
005b56 971c      	SBIW R26,12
005b57 f43c      	BRGE _0x1200BC
                 ; 0009 03C8                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
005b58 e4ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
005b59 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
005b5a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
005b5b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
005b5c 940e c551 	CALL SUBOPT_0x17A
                 ; 0009 03C9                 return;
005b5e c064      	RJMP _0x20E007F
                 ; 0009 03CA             }
                 ; 0009 03CB 
                 ; 0009 03CC             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005b5f e0aa      	LDI  R26,LOW(10)
005b60 940e c5bc 	CALL SUBOPT_0x18A
                 ; 0009 03CD             if(payload == NULL){
005b62 f429      	BRNE _0x1200BD
                 ; 0009 03CE                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005b63 940e c5be 	CALL SUBOPT_0x18B
005b65 940e c622 	CALL SUBOPT_0x19E
                 ; 0009 03CF                 return;
005b67 c05b      	RJMP _0x20E007F
                 ; 0009 03D0             }
                 ; 0009 03D1 
                 ; 0009 03D2             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
005b68 940e c627 	CALL SUBOPT_0x19F
005b6a d667      	RCALL _clearListParser
005b6b 019f      	MOVW R18,R30
                 ; 0009 03D3             if(res < 0){
005b6c 2333      	TST  R19
005b6d f452      	BRPL _0x1200BE
                 ; 0009 03D4                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005b6e e8e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005b6f e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005b70 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005b71 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005b72 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 03D5                 free( (void *) payload );
005b74 01da      	MOVW R26,R20
005b75 940e a0ed 	CALL _free
                 ; 0009 03D6                 return;
005b77 c04b      	RJMP _0x20E007F
                 ; 0009 03D7             }
                 ; 0009 03D8 
                 ; 0009 03D9             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
005b78 ebe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
005b79 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
005b7a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
005b7b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
005b7c 940e c57f 	CALL SUBOPT_0x181
                 ; 0009 03DA             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005b7e 940e c632 	CALL SUBOPT_0x1A1
                 ; 0009 03DB             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005b80 edec     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005b81 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005b82 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005b83 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005b84 940e c5d0 	CALL SUBOPT_0x18F
                 ; 0009 03DC 
                 ; 0009 03DD             switch(((struct clr_lst_st *)payload)->cmd){
005b86 01fa      	MOVW R30,R20
005b87 940e c640 	CALL SUBOPT_0x1A4
                 ; 0009 03DE                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
005b89 30e1      	CPI  R30,LOW(0x1)
005b8a e0a0      	LDI  R26,HIGH(0x1)
005b8b 07fa      	CPC  R31,R26
005b8c f4c1      	BRNE _0x1200C5
005b8d 01fa      	MOVW R30,R20
005b8e 85e1      	LDD  R30,Z+9
005b8f 30e0      	CPI  R30,0
005b90 f469      	BRNE _0x1200C3
                 ; 0009 03DF                                     {
                 ; 0009 03E0                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005b91 efe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005b92 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005b93 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005b94 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005b95 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 03E1                                         duplicateListClear = 1;
005b97 e0e1      	LDI  R30,LOW(1)
005b98 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E2                                         free( (void *) payload );
005b9a 01da      	MOVW R26,R20
005b9b 940e a0ed 	CALL _free
                 ; 0009 03E3                                         return;
005b9d c025      	RJMP _0x20E007F
                 ; 0009 03E4                                     }
                 ; 0009 03E5                                     else
                 _0x1200C3:
                 ; 0009 03E6                                     {
                 ; 0009 03E7                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03E8                                                     ((struct clr_lst_st *)payload)->status);
                +
005b9e e3e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
005b9f e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005ba0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005ba1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005ba2 940e c5d0 	CALL SUBOPT_0x18F
                 ; 0009 03E9                                     }
                 ; 0009 03EA                                     break;
005ba4 c006      	RJMP _0x1200C1
                 ; 0009 03EB                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EC                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03ED                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005ba5 e7ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005ba6 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005ba7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005ba8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005ba9 940e c584 	CALL SUBOPT_0x182
                 ; 0009 03EE                                     break;
                 ; 0009 03EF             }
                 _0x1200C1:
                 ; 0009 03F0 
                 ; 0009 03F1             free( (void *) payload );
005bab 01da      	MOVW R26,R20
005bac 940e a0ed 	CALL _free
                 ; 0009 03F2             break;
005bae c014      	RJMP _0x12005E
                 ; 0009 03F3         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
005baf 3fea      	CPI  R30,LOW(0xFA)
005bb0 e0a0      	LDI  R26,HIGH(0xFA)
005bb1 07fa      	CPC  R31,R26
005bb2 f439      	BRNE _0x1200C7
                 ; 0009 03F4             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
005bb3 ebea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
005bb4 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
005bb5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
005bb6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
005bb7 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 03F5             break;
005bb9 c009      	RJMP _0x12005E
                 ; 0009 03F6         default:
                 _0x1200C7:
                 ; 0009 03F7             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
005bba efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
005bbb e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
005bbc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
005bbd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
005bbe 940e da29 	CALL __PUTPARD1
005bc0 2fe1      	MOV  R30,R17
005bc1 940e bcfe 	CALL SUBOPT_0x29
                 ; 0009 03F8             break;
                 ; 0009 03F9     }
                 _0x12005E:
                 ; 0009 03FA 
                 ; 0009 03FB     return;
                 _0x20E007F:
005bc3 940e daa0 	CALL __LOADLOCR6
005bc5 96e0      	ADIW R28,48
005bc6 5fde      	SUBI R29,-2
005bc7 9508      	RET
                 ; 0009 03FC }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0404 {
                 _ETH_receive:
                 ; 0009 0405     unsigned char   *ptr;
                 ; 0009 0406     int             size=0;
                 ; 0009 0407 
                 ; 0009 0408     // -- for packet validation -- //
                 ; 0009 0409     int     offset=0;
                 ; 0009 040A     int     len = 0x0000;
                 ; 0009 040B     int     total=0;
                 ; 0009 040C 
                 ; 0009 040D     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 040E     do{
005bc8 940e c643 	CALL SUBOPT_0x1A5
005bca 940e da99 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
005bcc 940e bbd8 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 040F         ptr = (char *) malloc (RX_BUFFER_SIZE0);
005bce efa4      	LDI  R26,LOW(500)
005bcf e0b1      	LDI  R27,HIGH(500)
005bd0 940e a0d2 	CALL _malloc
005bd2 018f      	MOVW R16,R30
                 ; 0009 0410         if(ptr == NULL){
005bd3 2e00      	MOV  R0,R16
005bd4 2a01      	OR   R0,R17
005bd5 f431      	BRNE _0x1200CB
                 ; 0009 0411             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
005bd6 e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
005bd7 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
005bd8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
005bd9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
005bda 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0412         }
                 ; 0009 0413     }while(ptr == NULL);
                 _0x1200CB:
005bdc 2e00      	MOV  R0,R16
005bdd 2a01      	OR   R0,R17
005bde f379      	BREQ _0x1200C9
                 ; 0009 0414     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
005bdf 931a      	ST   -Y,R17
005be0 930a      	ST   -Y,R16
005be1 efe3      	LDI  R30,LOW(499)
005be2 e0f1      	LDI  R31,HIGH(499)
005be3 93fa      	ST   -Y,R31
005be4 93ea      	ST   -Y,R30
005be5 e0aa      	LDI  R26,LOW(10)
005be6 e0b0      	LDI  R27,0
005be7 940e 3f20 	CALL _read_uart0
005be9 019f      	MOVW R18,R30
                 ; 0009 0415 
                 ; 0009 0416     if(size <= 0){
005bea 2400      	CLR  R0
005beb 1602      	CP   R0,R18
005bec 0603      	CPC  R0,R19
005bed f00c      	BRLT _0x1200CC
                 ; 0009 0417         free( ptr );
005bee c066      	RJMP _0x20E007E
                 ; 0009 0418         return;
                 ; 0009 0419     }
                 ; 0009 041A 
                 ; 0009 041B //    printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 ; 0009 041C //    print_payload(ptr,size);
                 ; 0009 041D 
                 ; 0009 041E     do{
                 _0x1200CC:
                 _0x1200CE:
                 ; 0009 041F         //printDebug("<ETH_receive> ptr");
                 ; 0009 0420         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
005bef 01fa      	MOVW R30,R20
005bf0 940e c64a 	CALL SUBOPT_0x1A6
                +
005bf2 e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
005bf3 e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
005bf4 940e a185 	CALL _strcspn
                +
005bf6 0f4e     +ADD R20 , R30
005bf7 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0421         if(offset == size){
                +
005bf8 1724     +CP R18 , R20
005bf9 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
005bfa f409      	BRNE _0x1200D1
                 ; 0009 0422 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0423             break;
005bfb c059      	RJMP _0x1200CF
                 ; 0009 0424         }
                 ; 0009 0425         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
005bfc 01fa      	MOVW R30,R20
005bfd 9631      	ADIW R30,1
005bfe 0fe0      	ADD  R30,R16
005bff 1ff1      	ADC  R31,R17
005c00 81e0      	LD   R30,Z
005c01 e0f0      	LDI  R31,0
005c02 2ffe      	MOV  R31,R30
005c03 e0e0      	LDI  R30,0
005c04 87e8      	STD  Y+8,R30
005c05 87f9      	STD  Y+8+1,R31
                 ; 0009 0426         len |= ptr[offset+2];                                                   // check packet length (LSB)
005c06 01fa      	MOVW R30,R20
005c07 940e c369 	CALL SUBOPT_0x12C
005c09 85a8      	LDD  R26,Y+8
005c0a 85b9      	LDD  R27,Y+8+1
005c0b e0f0      	LDI  R31,0
005c0c 2bea      	OR   R30,R26
005c0d 2bfb      	OR   R31,R27
005c0e 940e c5eb 	CALL SUBOPT_0x194
                 ; 0009 0427 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 0428 
                 ; 0009 0429         total += len;                                                           // update total analyse
005c10 940e c64f 	CALL SUBOPT_0x1A7
005c12 83ee      	STD  Y+6,R30
005c13 83ff      	STD  Y+6+1,R31
                 ; 0009 042A         if (total > size){                                                      //check length validation
005c14 81ae      	LDD  R26,Y+6
005c15 81bf      	LDD  R27,Y+6+1
005c16 172a      	CP   R18,R26
005c17 073b      	CPC  R19,R27
005c18 f45c      	BRGE _0x1200D2
                 ; 0009 042B             offset++;
                +
005c19 5f4f     +SUBI R20 , LOW ( - 1 )
005c1a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042C             total = offset;                                                     // roll back total analyse
                +
005c1b 834e     +STD Y + 6 , R20
005c1c 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042D             printDebug("\r\ninvalid length!!\r\n");
                +
005c1d e4ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4852 ) )
005c1e e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4852 ) )
005c1f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4852 ) )
005c20 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4852 ) )
                 	__POINTD1FN _0x120000,4852
005c21 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 042E             continue;
005c23 c02b      	RJMP _0x1200CD
                 ; 0009 042F         }
                 ; 0009 0430 
                 ; 0009 0431 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0432 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0433         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
005c24 01fa      	MOVW R30,R20
005c25 9633      	ADIW R30,3
005c26 940e c64a 	CALL SUBOPT_0x1A6
005c28 85aa      	LDD  R26,Y+10
005c29 85bb      	LDD  R27,Y+10+1
005c2a d0c9      	RCALL _ETH_checksum
005c2b 010f      	MOVW R0,R30
005c2c 01fa      	MOVW R30,R20
005c2d 9633      	ADIW R30,3
005c2e 85a8      	LDD  R26,Y+8
005c2f 85b9      	LDD  R27,Y+8+1
005c30 0fea      	ADD  R30,R26
005c31 1ffb      	ADC  R31,R27
005c32 0fe0      	ADD  R30,R16
005c33 1ff1      	ADC  R31,R17
005c34 81e0      	LD   R30,Z
005c35 940e c654 	CALL SUBOPT_0x1A8
005c37 f059      	BREQ _0x1200D3
                 ; 0009 0434             printDebug("<ETH_receive> checksum error\r\n");
                +
005c38 e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4873 ) )
005c39 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4873 ) )
005c3a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4873 ) )
005c3b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4873 ) )
                 	__POINTD1FN _0x120000,4873
005c3c 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0435             offset++;
                +
005c3e 5f4f     +SUBI R20 , LOW ( - 1 )
005c3f 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0436             total = offset;                                                     // roll back total analyse
                +
005c40 834e     +STD Y + 6 , R20
005c41 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0437         }
                 ; 0009 0438         else{                                                                   // got a valid packet
005c42 c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 0439 //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043A //            print_payload(&ptr[offset+3],len);
                 ; 0009 043B //            printDebug("\r\n******************\r\n");
                 ; 0009 043C 
                 ; 0009 043D             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
005c43 01fa      	MOVW R30,R20
005c44 9633      	ADIW R30,3
005c45 940e c64a 	CALL SUBOPT_0x1A6
005c47 85aa      	LDD  R26,Y+10
005c48 85bb      	LDD  R27,Y+10+1
005c49 da7b      	RCALL _ETH_processPacket
                 ; 0009 043E             offset += 3+len;
005c4a 85e8      	LDD  R30,Y+8
005c4b 85f9      	LDD  R31,Y+8+1
005c4c 9633      	ADIW R30,3
                +
005c4d 0f4e     +ADD R20 , R30
005c4e 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 043F         }
                 _0x1200D4:
                 ; 0009 0440 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
005c4f 81ae      	LDD  R26,Y+6
005c50 81bf      	LDD  R27,Y+6+1
005c51 17a2      	CP   R26,R18
005c52 07b3      	CPC  R27,R19
005c53 f40c      	BRGE _0x1200CF
005c54 cf9a      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0441 
                 ; 0009 0442 
                 ; 0009 0443 
                 ; 0009 0444     free( ptr );
                 _0x20E007E:
005c55 01d8      	MOVW R26,R16
005c56 940e a0ed 	CALL _free
                 ; 0009 0445 }
005c58 940e daa0 	CALL __LOADLOCR6
005c5a 962a      	ADIW R28,10
005c5b 9508      	RET
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 0448 {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 0449     int     res;
                 ; 0009 044A     char    *sendPacket;
                 ; 0009 044B     int     packetLen   = 0;
                 ; 0009 044C 
                 ; 0009 044D     frameLen++;     // -- + frameID (1 Byte) -- //
005c5c 940e c659 	CALL SUBOPT_0x1A9
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005c5e e040     +LDI R20 , LOW ( 0 )
005c5f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
005c60 85e9      	LDD  R30,Y+9
005c61 85fa      	LDD  R31,Y+9+1
005c62 9631      	ADIW R30,1
005c63 87e9      	STD  Y+9,R30
005c64 87fa      	STD  Y+9+1,R31
                 ; 0009 044E 
                 ; 0009 044F     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
005c65 9634      	ADIW R30,4
005c66 01af      	MOVW R20,R30
                 ; 0009 0450 
                 ; 0009 0451     if(packetLen > MAX_MTU){
                +
005c67 3f45     +CPI R20 , LOW ( 501 )
005c68 e0e1     +LDI R30 , HIGH ( 501 )
005c69 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005c6a f04c      	BRLT _0x1200D5
                 ; 0009 0452         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005c6b e8e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4904 ) )
005c6c e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4904 ) )
005c6d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4904 ) )
005c6e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4904 ) )
                 	__POINTD1FN _0x120000,4904
005c6f 940e bdde 	CALL SUBOPT_0x49
                 ; 0009 0453         return -1;
005c71 efef      	LDI  R30,LOW(65535)
005c72 efff      	LDI  R31,HIGH(65535)
005c73 c07c      	RJMP _0x20E007D
                 ; 0009 0454     }
                 ; 0009 0455 
                 ; 0009 0456     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
005c74 01da      	MOVW R26,R20
005c75 940e a0d2 	CALL _malloc
005c77 019f      	MOVW R18,R30
                 ; 0009 0457     if(sendPacket == NULL){
005c78 2e02      	MOV  R0,R18
005c79 2a03      	OR   R0,R19
005c7a f449      	BRNE _0x1200D6
                 ; 0009 0458         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005c7b ebe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4956 ) )
005c7c e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4956 ) )
005c7d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4956 ) )
005c7e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4956 ) )
                 	__POINTD1FN _0x120000,4956
005c7f 940e bdde 	CALL SUBOPT_0x49
                 ; 0009 0459         return -1;
005c81 efef      	LDI  R30,LOW(65535)
005c82 efff      	LDI  R31,HIGH(65535)
005c83 c06c      	RJMP _0x20E007D
                 ; 0009 045A     }
                 ; 0009 045B 
                 ; 0009 045C     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
005c84 933a      	ST   -Y,R19
005c85 932a      	ST   -Y,R18
005c86 e0e0      	LDI  R30,LOW(0)
005c87 93ea      	ST   -Y,R30
005c88 01da      	MOVW R26,R20
005c89 940e a154 	CALL _memset
                 ; 0009 045D 
                 ; 0009 045E     sendPacket[0] = 0x7E;
005c8b 01d9      	MOVW R26,R18
005c8c e7ee      	LDI  R30,LOW(126)
005c8d 93ec      	ST   X,R30
                 ; 0009 045F     sendPacket[1] = (frameLen >> 8) & 0xFF;
005c8e 85e9      	LDD  R30,Y+9
005c8f 85fa      	LDD  R31,Y+9+1
005c90 940e d904 	CALL __ASRW8
                +
005c92 01d9     +MOVW R26 , R18
005c93 9611     +ADIW R26 , 1
005c94 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0460     sendPacket[2] = frameLen & 0xFF;
005c95 85e9      	LDD  R30,Y+9
                +
005c96 01d9     +MOVW R26 , R18
005c97 9612     +ADIW R26 , 2
005c98 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0461 
                 ; 0009 0462     if(frameID == 0x00){
005c99 85e8      	LDD  R30,Y+8
005c9a 30e0      	CPI  R30,0
005c9b f419      	BRNE _0x1200D7
                 ; 0009 0463         frameID         = ETH_generateId();
005c9c 940e 693c 	CALL _ETH_generateId
005c9e 87e8      	STD  Y+8,R30
                 ; 0009 0464         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0465     }
                 ; 0009 0466 
                 ; 0009 0467     sendPacket[3] = frameID;
                 _0x1200D7:
005c9f 85e8      	LDD  R30,Y+8
                +
005ca0 01d9     +MOVW R26 , R18
005ca1 9613     +ADIW R26 , 3
005ca2 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 0468 
                 ; 0009 0469     memcpy(&sendPacket[4],frameData,frameLen);
005ca3 01f9      	MOVW R30,R18
005ca4 9634      	ADIW R30,4
005ca5 93fa      	ST   -Y,R31
005ca6 93ea      	ST   -Y,R30
005ca7 85ed      	LDD  R30,Y+13
005ca8 85fe      	LDD  R31,Y+13+1
005ca9 93fa      	ST   -Y,R31
005caa 93ea      	ST   -Y,R30
005cab 85ad      	LDD  R26,Y+13
005cac 85be      	LDD  R27,Y+13+1
005cad 940e a10f 	CALL _memcpy
                 ; 0009 046A     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
005caf 01fa      	MOVW R30,R20
005cb0 9731      	SBIW R30,1
005cb1 0fe2      	ADD  R30,R18
005cb2 1ff3      	ADC  R31,R19
005cb3 93ff      	PUSH R31
005cb4 93ef      	PUSH R30
005cb5 01f9      	MOVW R30,R18
005cb6 9633      	ADIW R30,3
005cb7 93fa      	ST   -Y,R31
005cb8 93ea      	ST   -Y,R30
005cb9 85ab      	LDD  R26,Y+11
005cba 85bc      	LDD  R27,Y+11+1
005cbb d038      	RCALL _ETH_checksum
005cbc 91af      	POP  R26
005cbd 91bf      	POP  R27
005cbe 93ec      	ST   X,R30
                 ; 0009 046B 
                 ; 0009 046C     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046D 
                 ; 0009 046E     if((timeout > 0) && (frameID != 0xFF)){
005cbf 81ae      	LDD  R26,Y+6
005cc0 81bf      	LDD  R27,Y+6+1
005cc1 940e da81 	CALL __CPW02
005cc3 f41c      	BRGE _0x1200D9
005cc4 85a8      	LDD  R26,Y+8
005cc5 3faf      	CPI  R26,LOW(0xFF)
005cc6 f409      	BRNE _0x1200DA
                 _0x1200D9:
005cc7 c01a      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 046F         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
005cc8 85e8      	LDD  R30,Y+8
005cc9 93ea      	ST   -Y,R30
005cca 933a      	ST   -Y,R19
005ccb 932a      	ST   -Y,R18
005ccc 935a      	ST   -Y,R21
005ccd 934a      	ST   -Y,R20
005cce 85ab      	LDD  R26,Y+11
005ccf 85bc      	LDD  R27,Y+11+1
005cd0 940e 685c 	CALL _ETH_addWaitQueue
005cd2 018f      	MOVW R16,R30
                 ; 0009 0470         if(res < 0){
005cd3 2311      	TST  R17
005cd4 f46a      	BRPL _0x1200DB
                 ; 0009 0471             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
005cd5 eee9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5007 ) )
005cd6 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5007 ) )
005cd7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5007 ) )
005cd8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5007 ) )
                 	__POINTD1FN _0x120000,5007
005cd9 940e da29 	CALL __PUTPARD1
005cdb 85ec      	LDD  R30,Y+12
005cdc 940e bcfe 	CALL SUBOPT_0x29
                 ; 0009 0472             free(sendPacket);
005cde 01d9      	MOVW R26,R18
005cdf 940e bde6 	CALL SUBOPT_0x4A
                 ; 0009 0473             return -1;
005ce1 c00e      	RJMP _0x20E007D
                 ; 0009 0474         }
                 ; 0009 0475     }
                 _0x1200DB:
                 ; 0009 0476 
                 ; 0009 0477 
                 ; 0009 0478 //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 0479 //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047A //    }
                 ; 0009 047B 
                 ; 0009 047C //    printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 ; 0009 047D //    print_payload(sendPacket,packetLen);
                 ; 0009 047E     write_uart0(sendPacket,packetLen);
                 _0x1200D8:
005ce2 933a      	ST   -Y,R19
005ce3 932a      	ST   -Y,R18
005ce4 01da      	MOVW R26,R20
005ce5 940e 3f71 	CALL _write_uart0
                 ; 0009 047F     free(sendPacket);
005ce7 01d9      	MOVW R26,R18
005ce8 940e a0ed 	CALL _free
                 ; 0009 0480 
                 ; 0009 0481     //printDebug("-- Completed --\r\n");
                 ; 0009 0482     delay_ms(7);
005cea 940e bc2b 	CALL SUBOPT_0xA
005cec 940e d6dd 	CALL _delay_ms
                 ; 0009 0483 
                 ; 0009 0484     return 0;
005cee e0e0      	LDI  R30,LOW(0)
005cef e0f0      	LDI  R31,HIGH(0)
                 _0x20E007D:
005cf0 940e daa0 	CALL __LOADLOCR6
005cf2 962d      	ADIW R28,13
005cf3 9508      	RET
                 ; 0009 0485 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 0488 {
                 _ETH_checksum:
                 ; 0009 0489     int i;
                 ; 0009 048A     char sum = 0;
                 ; 0009 048B 
                 ; 0009 048C     //printDebug("<checksum> \r\n");
                 ; 0009 048D     for (i=0;i<len;i++){
005cf4 940e bf4d 	CALL SUBOPT_0x7F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005cf6 e030      	LDI  R19,0
                +
005cf7 e000     +LDI R16 , LOW ( 0 )
005cf8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005cf9 81ec      	LDD  R30,Y+4
005cfa 81fd      	LDD  R31,Y+4+1
005cfb 170e      	CP   R16,R30
005cfc 071f      	CPC  R17,R31
005cfd f43c      	BRGE _0x1200DE
                 ; 0009 048E         sum += buf[i];
005cfe 01f8      	MOVW R30,R16
005cff 940e c65e 	CALL SUBOPT_0x1AA
005d01 0f3e      	ADD  R19,R30
                 ; 0009 048F         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0490     }
                +
005d02 5f0f     +SUBI R16 , LOW ( - 1 )
005d03 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d04 cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0491     return (0xff - (sum & 0xff));
005d05 2fe3      	MOV  R30,R19
005d06 940e c01f 	CALL SUBOPT_0x9D
005d08 efaf      	LDI  R26,LOW(255)
005d09 e0b0      	LDI  R27,HIGH(255)
005d0a 940e da41 	CALL __SWAPW12
005d0c 1bea      	SUB  R30,R26
005d0d 0bfb      	SBC  R31,R27
005d0e 940e daa2 	CALL __LOADLOCR4
005d10 9628      	ADIW R28,8
005d11 9508      	RET
                 ; 0009 0492 
                 ; 0009 0493 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049C {
                 _ETH_switchMode:
                 ; 0009 049D     if(mode == MODE_CONF){
005d12 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005d13 81e8      	LD   R30,Y
005d14 30e0      	CPI  R30,0
005d15 f451      	BRNE _0x1200DF
                 ; 0009 049E         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005d16 e1ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5058 ) )
005d17 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5058 ) )
005d18 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5058 ) )
005d19 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5058 ) )
                 	__POINTD1FN _0x120000,5058
005d1a 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 049F         ETH_CONF;
005d1c 91e0 0102 	LDS  R30,258
005d1e 68e0      	ORI  R30,0x80
005d1f c009      	RJMP _0x12011C
                 ; 0009 04A0     }
                 ; 0009 04A1     else{
                 _0x1200DF:
                 ; 0009 04A2         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005d20 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5099 ) )
005d21 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5099 ) )
005d22 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5099 ) )
005d23 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5099 ) )
                 	__POINTD1FN _0x120000,5099
005d24 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 04A3         ETH_NORM;
005d26 91e0 0102 	LDS  R30,258
005d28 77ef      	ANDI R30,0x7F
                 _0x12011C:
005d29 93e0 0102 	STS  258,R30
                 ; 0009 04A4     }
                 ; 0009 04A5 
                 ; 0009 04A6     delay_ms(5);
005d2b 940e bffb 	CALL SUBOPT_0x98
                 ; 0009 04A7 
                 ; 0009 04A8     ETH_current_mode = mode;
005d2d 81e8      	LD   R30,Y
005d2e 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04A9 
                 ; 0009 04AA     delay_ms(5);
005d30 940e bffb 	CALL SUBOPT_0x98
                 ; 0009 04AB     ETH_OFF;
005d32 98a4      	CBI  0x14,4
                 ; 0009 04AC     delay_ms(1500);
005d33 edac      	LDI  R26,LOW(1500)
005d34 e0b5      	LDI  R27,HIGH(1500)
005d35 940e d6dd 	CALL _delay_ms
                 ; 0009 04AD     ETH_ON;
005d37 9aa4      	SBI  0x14,4
                 ; 0009 04AE     #asm("wdr")
005d38 95a8      	wdr
                 ; 0009 04AF     delay_ms(2000);
005d39 eda0      	LDI  R26,LOW(2000)
005d3a e0b7      	LDI  R27,HIGH(2000)
005d3b 940e d6dd 	CALL _delay_ms
                 ; 0009 04B0 
                 ; 0009 04B1     return ETH_MODE;
005d3d 91e0 0102 	LDS  R30,258
005d3f 78e0      	ANDI R30,LOW(0x80)
005d40 9621      	ADIW R28,1
005d41 9508      	RET
                 ; 0009 04B2 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B5 {
                 _ETH_getConfig:
                 ; 0009 04B6     TIMER   timeout;
                 ; 0009 04B7     char    getInfoCmd[] = ">R\r";
                 ; 0009 04B8     int     i=0;
                 ; 0009 04B9 
                 ; 0009 04BA     ETH_switchMode((unsigned char) MODE_CONF);
005d42 93ba      	ST   -Y,R27
005d43 93aa      	ST   -Y,R26
005d44 9728      	SBIW R28,8
005d45 e3ee      	LDI  R30,LOW(62)
005d46 83e8      	ST   Y,R30
005d47 e5e2      	LDI  R30,LOW(82)
005d48 83e9      	STD  Y+1,R30
005d49 e0ed      	LDI  R30,LOW(13)
005d4a 83ea      	STD  Y+2,R30
005d4b e0e0      	LDI  R30,LOW(0)
005d4c 83eb      	STD  Y+3,R30
005d4d 940e c01a 	CALL SUBOPT_0x9C
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
005d4f e0a0      	LDI  R26,LOW(0)
005d50 dfc1      	RCALL _ETH_switchMode
                 ; 0009 04BB     /*
                 ; 0009 04BC     if(mode != MODE_CONF){
                 ; 0009 04BD         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04BE         return -1;
                 ; 0009 04BF     }
                 ; 0009 04C0     */
                 ; 0009 04C1 
                 ; 0009 04C2     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005d51 e000     +LDI R16 , LOW ( 0 )
005d52 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E2:
                +
005d53 3405     +CPI R16 , LOW ( 325 )
005d54 e0e1     +LDI R30 , HIGH ( 325 )
005d55 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005d56 f42c      	BRGE _0x1200E3
                 ; 0009 04C3         configRd[i] = 0x00;
005d57 940e c664 	CALL SUBOPT_0x1AB
                 ; 0009 04C4     }
                +
005d59 5f0f     +SUBI R16 , LOW ( - 1 )
005d5a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d5b cff7      	RJMP _0x1200E2
                 _0x1200E3:
                 ; 0009 04C5     configLen       = 0;
005d5c 940e bf47 	CALL SUBOPT_0x7E
                 ; 0009 04C6     config_start    = 0;
005d5e 940e c667 	CALL SUBOPT_0x1AC
                 ; 0009 04C7     config_ready    = 0;
                 ; 0009 04C8     config_end      = 0;
                 ; 0009 04C9     config_response = 0;
                 ; 0009 04CA 
                 ; 0009 04CB     printDebug("<ETH_getConfig> Write to uart 0 :");
                +
005d60 e6ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5140 ) )
005d61 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5140 ) )
005d62 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5140 ) )
005d63 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5140 ) )
                 	__POINTD1FN _0x120000,5140
005d64 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 04CC     for(i=0;i<strlen(getInfoCmd);i++){
                +
005d66 e000     +LDI R16 , LOW ( 0 )
005d67 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E5:
005d68 940e c671 	CALL SUBOPT_0x1AD
005d6a f440      	BRSH _0x1200E6
                 ; 0009 04CD         putchar3(getInfoCmd[i]);
005d6b 940e c350 	CALL SUBOPT_0x127
005d6d 91ac      	LD   R26,X
005d6e 940e 3fe3 	CALL _putchar3
                 ; 0009 04CE     }
                +
005d70 5f0f     +SUBI R16 , LOW ( - 1 )
005d71 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d72 cff5      	RJMP _0x1200E5
                 _0x1200E6:
                 ; 0009 04CF     printDebug("\r\n");
005d73 940e c678 	CALL SUBOPT_0x1AE
                 ; 0009 04D0 
                 ; 0009 04D1     for(i=0;i<strlen(getInfoCmd);i++){
                +
005d75 e000     +LDI R16 , LOW ( 0 )
005d76 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E8:
005d77 940e c671 	CALL SUBOPT_0x1AD
005d79 f440      	BRSH _0x1200E9
                 ; 0009 04D2         putchar0(getInfoCmd[i]);
005d7a 940e c350 	CALL SUBOPT_0x127
005d7c 91ac      	LD   R26,X
005d7d 940e 3f17 	CALL _putchar0
                 ; 0009 04D3     }
                +
005d7f 5f0f     +SUBI R16 , LOW ( - 1 )
005d80 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d81 cff5      	RJMP _0x1200E8
                 _0x1200E9:
                 ; 0009 04D4 
                 ; 0009 04D5     TIMER_setTimer(&timeout, 7);
005d82 940e be33 	CALL SUBOPT_0x56
005d84 940e c67e 	CALL SUBOPT_0x1AF
                 ; 0009 04D6 
                 ; 0009 04D7     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200EA:
005d86 91e0 10f1 	LDS  R30,_config_ready
005d88 30e0      	CPI  R30,0
005d89 f431      	BRNE _0x1200ED
005d8a 940e be50 	CALL SUBOPT_0x59
005d8c 940e 405d 	CALL _TIMER_checkTimerExceed
005d8e 9730      	SBIW R30,0
005d8f f009      	BREQ _0x1200EE
                 _0x1200ED:
005d90 c004      	RJMP _0x1200EC
                 _0x1200EE:
                 ; 0009 04D8        delay_ms(50);
005d91 940e bf24 	CALL SUBOPT_0x7A
                 ; 0009 04D9        #asm("wdr")
005d93 95a8      	wdr
                 ; 0009 04DA     }
005d94 cff1      	RJMP _0x1200EA
                 _0x1200EC:
                 ; 0009 04DB 
                 ; 0009 04DC     memcpy(ptr,&configRd[0],configLen);
005d95 940e c684 	CALL SUBOPT_0x1B0
005d97 940e c689 	CALL SUBOPT_0x1B1
                 ; 0009 04DD 
                 ; 0009 04DE     *buflen    = configLen;
005d99 91e0 10ee 	LDS  R30,_configLen
005d9b 91f0 10ef 	LDS  R31,_configLen+1
005d9d 85aa      	LDD  R26,Y+10
005d9e 85bb      	LDD  R27,Y+10+1
005d9f 93ed      	ST   X+,R30
005da0 93fc      	ST   X,R31
                 ; 0009 04DF 
                 ; 0009 04E0     ETH_switchMode(MODE_NORM);
005da1 e8a0      	LDI  R26,LOW(128)
005da2 df6f      	RCALL _ETH_switchMode
                 ; 0009 04E1 
                 ; 0009 04E2     /*
                 ; 0009 04E3     if(mode != MODE_NORM){
                 ; 0009 04E4         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E5         return -1;
                 ; 0009 04E6     }
                 ; 0009 04E7     */
                 ; 0009 04E8 
                 ; 0009 04E9     if(config_response == 'S'){
005da3 91a0 10f3 	LDS  R26,_config_response
005da5 35a3      	CPI  R26,LOW(0x53)
005da6 f419      	BRNE _0x1200EF
                 ; 0009 04EA         return 0;
005da7 e0e0      	LDI  R30,LOW(0)
005da8 e0f0      	LDI  R31,HIGH(0)
005da9 c002      	RJMP _0x20E007C
                 ; 0009 04EB     }
                 ; 0009 04EC     else{
                 _0x1200EF:
                 ; 0009 04ED         return -1;
005daa efef      	LDI  R30,LOW(65535)
005dab efff      	LDI  R31,HIGH(65535)
                 ; 0009 04EE     }
                 ; 0009 04EF }
                 _0x20E007C:
005dac 8119      	LDD  R17,Y+1
005dad 8108      	LDD  R16,Y+0
005dae 962e      	ADIW R28,14
005daf 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F2 {
                 _ETH_setConfig:
                 ; 0009 04F3     TIMER   timeout;
                 ; 0009 04F4     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F5     char    setInfoCmd[] = ">W";
                 ; 0009 04F6     int     i=0;
                 ; 0009 04F7     char    setStr[30];
                 ; 0009 04F8     int     readLen=0;
                 ; 0009 04F9     char    *ptr;
                 ; 0009 04FA 
                 ; 0009 04FB     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
005db0 93ba      	ST   -Y,R27
005db1 93aa      	ST   -Y,R26
005db2 97a9      	SBIW R28,41
005db3 e3ee      	LDI  R30,LOW(62)
005db4 8fee      	STD  Y+30,R30
005db5 e5e7      	LDI  R30,LOW(87)
005db6 8fef      	STD  Y+31,R30
005db7 e0e0      	LDI  R30,LOW(0)
005db8 a3e8      	STD  Y+32,R30
005db9 e3ee      	LDI  R30,LOW(62)
005dba a3e9      	STD  Y+33,R30
005dbb e5e2      	LDI  R30,LOW(82)
005dbc a3ea      	STD  Y+34,R30
005dbd e0ed      	LDI  R30,LOW(13)
005dbe a3eb      	STD  Y+35,R30
005dbf e0e0      	LDI  R30,LOW(0)
005dc0 a3ec      	STD  Y+36,R30
005dc1 940e bdd1 	CALL SUBOPT_0x46
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                +
005dc3 e020     +LDI R18 , LOW ( 0 )
005dc4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005dc5 e4a5      	LDI  R26,LOW(325)
005dc6 e0b1      	LDI  R27,HIGH(325)
005dc7 940e c55e 	CALL SUBOPT_0x17C
                 ; 0009 04FC     if(ptr == NULL){
005dc9 f449      	BRNE _0x1200F1
                 ; 0009 04FD         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                +
005dca e9e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 5174 ) )
005dcb e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5174 ) )
005dcc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5174 ) )
005dcd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5174 ) )
                 	__POINTD1FN _0x120000,5174
005dce 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 04FE         return -1;
005dd0 efef      	LDI  R30,LOW(65535)
005dd1 efff      	LDI  R31,HIGH(65535)
005dd2 c1c7      	RJMP _0x20E007B
                 ; 0009 04FF     }
                 ; 0009 0500 
                 ; 0009 0501     ETH_switchMode((unsigned char) MODE_CONF);
                 _0x1200F1:
005dd3 e0a0      	LDI  R26,LOW(0)
005dd4 df3d      	RCALL _ETH_switchMode
                 ; 0009 0502 
                 ; 0009 0503     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0504     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005dd5 e000     +LDI R16 , LOW ( 0 )
005dd6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F3:
                +
005dd7 3405     +CPI R16 , LOW ( 325 )
005dd8 e0e1     +LDI R30 , HIGH ( 325 )
005dd9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005dda f42c      	BRGE _0x1200F4
                 ; 0009 0505         configRd[i] = 0x00;
005ddb 940e c664 	CALL SUBOPT_0x1AB
                 ; 0009 0506     }
                +
005ddd 5f0f     +SUBI R16 , LOW ( - 1 )
005dde 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ddf cff7      	RJMP _0x1200F3
                 _0x1200F4:
                 ; 0009 0507     configLen       = 0;
005de0 940e bf47 	CALL SUBOPT_0x7E
                 ; 0009 0508     config_start    = 0;
005de2 940e c667 	CALL SUBOPT_0x1AC
                 ; 0009 0509     config_ready    = 0;
                 ; 0009 050A     config_end      = 0;
                 ; 0009 050B     config_response = 0;
                 ; 0009 050C 
                 ; 0009 050D     printDebug("<ETH_setConfig> Write to uart 0 :");
                +
005de4 ece2     +LDI R30 , LOW ( 2 * _0x120000 + ( 5224 ) )
005de5 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5224 ) )
005de6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5224 ) )
005de7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5224 ) )
                 	__POINTD1FN _0x120000,5224
005de8 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 050E     for(i=0;i<strlen(getInfoCmd);i++){
                +
005dea e000     +LDI R16 , LOW ( 0 )
005deb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F6:
005dec 940e c690 	CALL SUBOPT_0x1B2
005dee f450      	BRSH _0x1200F7
                 ; 0009 050F         putchar3(getInfoCmd[i]);
005def 01de      	MOVW R26,R28
005df0 9697      	ADIW R26,39
005df1 0fa0      	ADD  R26,R16
005df2 1fb1      	ADC  R27,R17
005df3 91ac      	LD   R26,X
005df4 940e 3fe3 	CALL _putchar3
                 ; 0009 0510     }
                +
005df6 5f0f     +SUBI R16 , LOW ( - 1 )
005df7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005df8 cff3      	RJMP _0x1200F6
                 _0x1200F7:
                 ; 0009 0511     printDebug("\r\n");
005df9 940e c678 	CALL SUBOPT_0x1AE
                 ; 0009 0512 
                 ; 0009 0513     for(i=0;i<strlen(getInfoCmd);i++){
                +
005dfb e000     +LDI R16 , LOW ( 0 )
005dfc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F9:
005dfd 940e c690 	CALL SUBOPT_0x1B2
005dff f450      	BRSH _0x1200FA
                 ; 0009 0514         putchar0(getInfoCmd[i]);
005e00 01de      	MOVW R26,R28
005e01 9697      	ADIW R26,39
005e02 0fa0      	ADD  R26,R16
005e03 1fb1      	ADC  R27,R17
005e04 91ac      	LD   R26,X
005e05 940e 3f17 	CALL _putchar0
                 ; 0009 0515     }
                +
005e07 5f0f     +SUBI R16 , LOW ( - 1 )
005e08 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e09 cff3      	RJMP _0x1200F9
                 _0x1200FA:
                 ; 0009 0516 
                 ; 0009 0517     TIMER_setTimer(&timeout, 7);
005e0a 01fe      	MOVW R30,R28
005e0b 96bb      	ADIW R30,43
005e0c 93fa      	ST   -Y,R31
005e0d 93ea      	ST   -Y,R30
005e0e 940e c67e 	CALL SUBOPT_0x1AF
                 ; 0009 0518 
                 ; 0009 0519     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200FB:
005e10 91e0 10f1 	LDS  R30,_config_ready
005e12 30e0      	CPI  R30,0
005e13 f419      	BRNE _0x1200FE
005e14 940e c697 	CALL SUBOPT_0x1B3
005e16 f009      	BREQ _0x1200FF
                 _0x1200FE:
005e17 c004      	RJMP _0x1200FD
                 _0x1200FF:
                 ; 0009 051A        delay_ms(50);
005e18 940e bf24 	CALL SUBOPT_0x7A
                 ; 0009 051B        #asm("wdr")
005e1a 95a8      	wdr
                 ; 0009 051C     }
005e1b cff4      	RJMP _0x1200FB
                 _0x1200FD:
                 ; 0009 051D 
                 ; 0009 051E     memcpy(ptr,&configRd[0],configLen);
005e1c 935a      	ST   -Y,R21
005e1d 934a      	ST   -Y,R20
005e1e 940e c689 	CALL SUBOPT_0x1B1
                 ; 0009 051F     readLen = configLen;
                +
005e20 9120 10ee+LDS R18 , 0 + ( _configLen )
005e22 9130 10ef+LDS R19 , 0 + ( _configLen ) + 1
                 	__GETWRMN 18,19,0,_configLen
                 ; 0009 0520 
                 ; 0009 0521     if(config_response != 'S'){
005e24 91a0 10f3 	LDS  R26,_config_response
005e26 35a3      	CPI  R26,LOW(0x53)
005e27 f051      	BREQ _0x120100
                 ; 0009 0522         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                +
005e28 eee4     +LDI R30 , LOW ( 2 * _0x120000 + ( 5258 ) )
005e29 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5258 ) )
005e2a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5258 ) )
005e2b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5258 ) )
                 	__POINTD1FN _0x120000,5258
005e2c 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0523         free( ptr );
005e2e 01da      	MOVW R26,R20
005e2f 940e bde6 	CALL SUBOPT_0x4A
                 ; 0009 0524         return -1;
005e31 c168      	RJMP _0x20E007B
                 ; 0009 0525     }
                 ; 0009 0526 
                 ; 0009 0527     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 0528     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 _0x120100:
                 ; 0009 0529                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052A                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052B                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052C                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 052D                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 052E                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 052F                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0530                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0531                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0532                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0533                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0534                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
005e32 940e be33 	CALL SUBOPT_0x56
                +
005e34 e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5311 ) )
005e35 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5311 ) )
005e36 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5311 ) )
005e37 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5311 ) )
                 	__POINTD1FN _0x120000,5311
005e38 940e da29 	CALL __PUTPARD1
005e3a adab      	LDD  R26,Y+59
005e3b adbc      	LDD  R27,Y+59+1
005e3c 940e c69f 	CALL SUBOPT_0x1B4
005e3e adeb      	LDD  R30,Y+59
005e3f adfc      	LDD  R31,Y+59+1
005e40 940e c6a4 	CALL SUBOPT_0x1B5
005e42 adeb      	LDD  R30,Y+59
005e43 adfc      	LDD  R31,Y+59+1
005e44 940e c6ac 	CALL SUBOPT_0x1B6
005e46 940e c6b5 	CALL SUBOPT_0x1B7
005e48 940e c6bc 	CALL SUBOPT_0x1B8
005e4a 940e c6b5 	CALL SUBOPT_0x1B7
005e4c 940e c6c1 	CALL SUBOPT_0x1B9
005e4e 940e c6b5 	CALL SUBOPT_0x1B7
005e50 940e c6c9 	CALL SUBOPT_0x1BA
005e52 940e c6d2 	CALL SUBOPT_0x1BB
005e54 940e c6d9 	CALL SUBOPT_0x1BC
005e56 940e c6d2 	CALL SUBOPT_0x1BB
005e58 940e c6de 	CALL SUBOPT_0x1BD
005e5a 940e c6d2 	CALL SUBOPT_0x1BB
005e5c 940e c640 	CALL SUBOPT_0x1A4
005e5e 940e c6e6 	CALL SUBOPT_0x1BE
005e60 940e c6ed 	CALL SUBOPT_0x1BF
005e62 940e c6f4 	CALL SUBOPT_0x1C0
005e64 940e c6ed 	CALL SUBOPT_0x1BF
005e66 940e c6f9 	CALL SUBOPT_0x1C1
005e68 940e c6ed 	CALL SUBOPT_0x1BF
005e6a 940e c701 	CALL SUBOPT_0x1C2
                +
005e6c 01de     +MOVW R26 , R28
005e6d 5ba7     +SUBI R26 , LOW ( - 73 )
005e6e 4fbf     +SBCI R27 , HIGH ( - 73 )
005e6f 900d     +LD R0 , X +
005e70 91bc     +LD R27 , X
005e71 2da0     +MOV R26 , R0
                 	__GETW2SX 73
005e72 940e c69f 	CALL SUBOPT_0x1B4
005e74 940e c704 	CALL SUBOPT_0x1C3
005e76 940e c6a4 	CALL SUBOPT_0x1B5
005e78 940e c704 	CALL SUBOPT_0x1C3
005e7a 940e c6ac 	CALL SUBOPT_0x1B6
005e7c 940e c70b 	CALL SUBOPT_0x1C4
005e7e 940e c6bc 	CALL SUBOPT_0x1B8
005e80 940e c70b 	CALL SUBOPT_0x1C4
005e82 940e c6c1 	CALL SUBOPT_0x1B9
005e84 940e c70b 	CALL SUBOPT_0x1C4
005e86 940e c6c9 	CALL SUBOPT_0x1BA
005e88 940e c712 	CALL SUBOPT_0x1C5
005e8a 940e c6d9 	CALL SUBOPT_0x1BC
005e8c 940e c712 	CALL SUBOPT_0x1C5
005e8e 940e c6de 	CALL SUBOPT_0x1BD
005e90 940e c712 	CALL SUBOPT_0x1C5
005e92 940e c640 	CALL SUBOPT_0x1A4
005e94 940e c6e6 	CALL SUBOPT_0x1BE
005e96 940e bce6 	CALL SUBOPT_0x26
005e98 940e c6f4 	CALL SUBOPT_0x1C0
005e9a 940e bce6 	CALL SUBOPT_0x26
005e9c 940e c6f9 	CALL SUBOPT_0x1C1
005e9e 940e bce6 	CALL SUBOPT_0x26
005ea0 940e c701 	CALL SUBOPT_0x1C2
                +
005ea2 01de     +MOVW R26 , R28
005ea3 5aa9     +SUBI R26 , LOW ( - 87 )
005ea4 4fbf     +SBCI R27 , HIGH ( - 87 )
005ea5 900d     +LD R0 , X +
005ea6 91bc     +LD R27 , X
005ea7 2da0     +MOV R26 , R0
                 	__GETW2SX 87
005ea8 940e c69f 	CALL SUBOPT_0x1B4
005eaa 940e c719 	CALL SUBOPT_0x1C6
005eac 940e c6a4 	CALL SUBOPT_0x1B5
005eae 940e c719 	CALL SUBOPT_0x1C6
005eb0 940e c6ac 	CALL SUBOPT_0x1B6
005eb2 940e c720 	CALL SUBOPT_0x1C7
005eb4 940e c6bc 	CALL SUBOPT_0x1B8
005eb6 940e c720 	CALL SUBOPT_0x1C7
005eb8 940e c6c1 	CALL SUBOPT_0x1B9
005eba 940e c720 	CALL SUBOPT_0x1C7
005ebc 940e c6c9 	CALL SUBOPT_0x1BA
005ebe 940e c727 	CALL SUBOPT_0x1C8
005ec0 940e c6d9 	CALL SUBOPT_0x1BC
005ec2 940e c727 	CALL SUBOPT_0x1C8
005ec4 940e c6de 	CALL SUBOPT_0x1BD
005ec6 940e c727 	CALL SUBOPT_0x1C8
005ec8 940e c640 	CALL SUBOPT_0x1A4
005eca 940e c6e6 	CALL SUBOPT_0x1BE
005ecc 940e c72e 	CALL SUBOPT_0x1C9
005ece 940e c6f4 	CALL SUBOPT_0x1C0
005ed0 940e c72e 	CALL SUBOPT_0x1C9
005ed2 940e c6f9 	CALL SUBOPT_0x1C1
005ed4 940e c72e 	CALL SUBOPT_0x1C9
005ed6 940e c701 	CALL SUBOPT_0x1C2
005ed8 e380      	LDI  R24,48
005ed9 940e bb00 	CALL _sprintf
005edb 96e6      	ADIW R28,54
                 ; 0009 0535 
                 ; 0009 0536     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
005edc 940e c735 	CALL SUBOPT_0x1CA
005ede 940e bc5e 	CALL SUBOPT_0x12
                 ; 0009 0537 
                 ; 0009 0538     memcpy((ptr+14),&setStr[0],24);
005ee0 01fa      	MOVW R30,R20
005ee1 963e      	ADIW R30,14
005ee2 940e c73f 	CALL SUBOPT_0x1CB
005ee4 e1a8      	LDI  R26,LOW(24)
005ee5 940e c746 	CALL SUBOPT_0x1CC
                 ; 0009 0539 
                 ; 0009 053A     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053B                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053C                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 053D                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 053E                 (server[9]*100) + (server[10]*10) + server[11]);
005ee7 940e be33 	CALL SUBOPT_0x56
                +
005ee9 e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5343 ) )
005eea e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5343 ) )
005eeb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5343 ) )
005eec e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5343 ) )
                 	__POINTD1FN _0x120000,5343
005eed 940e da29 	CALL __PUTPARD1
005eef a9ad      	LDD  R26,Y+53
005ef0 a9be      	LDD  R27,Y+53+1
005ef1 940e c69f 	CALL SUBOPT_0x1B4
005ef3 a9ed      	LDD  R30,Y+53
005ef4 a9fe      	LDD  R31,Y+53+1
005ef5 940e c6a4 	CALL SUBOPT_0x1B5
005ef7 a9ed      	LDD  R30,Y+53
005ef8 a9fe      	LDD  R31,Y+53+1
005ef9 940e c6ac 	CALL SUBOPT_0x1B6
005efb ade9      	LDD  R30,Y+57
005efc adfa      	LDD  R31,Y+57+1
005efd 940e c6bc 	CALL SUBOPT_0x1B8
005eff ade9      	LDD  R30,Y+57
005f00 adfa      	LDD  R31,Y+57+1
005f01 940e c6c1 	CALL SUBOPT_0x1B9
005f03 ade9      	LDD  R30,Y+57
005f04 adfa      	LDD  R31,Y+57+1
005f05 940e c6c9 	CALL SUBOPT_0x1BA
005f07 aded      	LDD  R30,Y+61
005f08 adfe      	LDD  R31,Y+61+1
005f09 940e c6d9 	CALL SUBOPT_0x1BC
005f0b aded      	LDD  R30,Y+61
005f0c adfe      	LDD  R31,Y+61+1
005f0d 940e c6de 	CALL SUBOPT_0x1BD
005f0f aded      	LDD  R30,Y+61
005f10 adfe      	LDD  R31,Y+61+1
005f11 940e c640 	CALL SUBOPT_0x1A4
005f13 940e c6e6 	CALL SUBOPT_0x1BE
005f15 940e c749 	CALL SUBOPT_0x1CD
005f17 940e c6f4 	CALL SUBOPT_0x1C0
005f19 940e c749 	CALL SUBOPT_0x1CD
005f1b 940e c6f9 	CALL SUBOPT_0x1C1
005f1d 940e c749 	CALL SUBOPT_0x1CD
005f1f 940e c701 	CALL SUBOPT_0x1C2
005f21 e180      	LDI  R24,16
005f22 940e bb00 	CALL _sprintf
005f24 9666      	ADIW R28,22
                 ; 0009 053F 
                 ; 0009 0540     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
005f25 940e c735 	CALL SUBOPT_0x1CA
005f27 940e bc5e 	CALL SUBOPT_0x12
                 ; 0009 0541 
                 ; 0009 0542     memcpy((ptr+42),&setStr[0],8);
005f29 01fa      	MOVW R30,R20
005f2a 96ba      	ADIW R30,42
005f2b 940e c73f 	CALL SUBOPT_0x1CB
005f2d e0a8      	LDI  R26,LOW(8)
005f2e 940e c746 	CALL SUBOPT_0x1CC
                 ; 0009 0543 
                 ; 0009 0544 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0545 //    for(i=0;i<configLen;i++){
                 ; 0009 0546 //        putchar3(ptr[i]);
                 ; 0009 0547 //    }
                 ; 0009 0548 //    printDebug("\r\n\---\r\n");
                 ; 0009 0549 
                 ; 0009 054A     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054B     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005f30 e000     +LDI R16 , LOW ( 0 )
005f31 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120102:
                +
005f32 3405     +CPI R16 , LOW ( 325 )
005f33 e0e1     +LDI R30 , HIGH ( 325 )
005f34 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005f35 f42c      	BRGE _0x120103
                 ; 0009 054C         configRd[i] = 0x00;
005f36 940e c664 	CALL SUBOPT_0x1AB
                 ; 0009 054D     }
                +
005f38 5f0f     +SUBI R16 , LOW ( - 1 )
005f39 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f3a cff7      	RJMP _0x120102
                 _0x120103:
                 ; 0009 054E     configLen       = 0;
005f3b 940e bf47 	CALL SUBOPT_0x7E
                 ; 0009 054F     config_start    = 0;
005f3d 940e c667 	CALL SUBOPT_0x1AC
                 ; 0009 0550     config_ready    = 0;
                 ; 0009 0551     config_end      = 0;
                 ; 0009 0552     config_response = 0;
                 ; 0009 0553 
                 ; 0009 0554     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                +
005f3f e6ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5394 ) )
005f40 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5394 ) )
005f41 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5394 ) )
005f42 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5394 ) )
                 	__POINTD1FN _0x120000,5394
005f43 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0555     for(i=0;i<strlen(setInfoCmd);i++){
                +
005f45 e000     +LDI R16 , LOW ( 0 )
005f46 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120105:
005f47 01de      	MOVW R26,R28
005f48 9694      	ADIW R26,36
005f49 940e a19b 	CALL _strlen
005f4b 170e      	CP   R16,R30
005f4c 071f      	CPC  R17,R31
005f4d f488      	BRSH _0x120106
                 ; 0009 0556         putchar0(setInfoCmd[i]);
005f4e 01de      	MOVW R26,R28
005f4f 9694      	ADIW R26,36
005f50 0fa0      	ADD  R26,R16
005f51 1fb1      	ADC  R27,R17
005f52 91ac      	LD   R26,X
005f53 940e 3f17 	CALL _putchar0
                 ; 0009 0557         putchar3(setInfoCmd[i]);
005f55 01de      	MOVW R26,R28
005f56 9694      	ADIW R26,36
005f57 0fa0      	ADD  R26,R16
005f58 1fb1      	ADC  R27,R17
005f59 91ac      	LD   R26,X
005f5a 940e 3fe3 	CALL _putchar3
                 ; 0009 0558     }
                +
005f5c 5f0f     +SUBI R16 , LOW ( - 1 )
005f5d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f5e cfe8      	RJMP _0x120105
                 _0x120106:
                 ; 0009 0559     for(i=12;i<readLen;i++){
                +
005f5f e00c     +LDI R16 , LOW ( 12 )
005f60 e010     +LDI R17 , HIGH ( 12 )
                 	__GETWRN 16,17,12
                 _0x120108:
                +
005f61 1702     +CP R16 , R18
005f62 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
005f63 f47c      	BRGE _0x120109
                 ; 0009 055A         putchar0(ptr[i]);
005f64 01f8      	MOVW R30,R16
005f65 0fe4      	ADD  R30,R20
005f66 1ff5      	ADC  R31,R21
005f67 81a0      	LD   R26,Z
005f68 940e 3f17 	CALL _putchar0
                 ; 0009 055B         putchar3(ptr[i]);
005f6a 01f8      	MOVW R30,R16
005f6b 0fe4      	ADD  R30,R20
005f6c 1ff5      	ADC  R31,R21
005f6d 81a0      	LD   R26,Z
005f6e 940e 3fe3 	CALL _putchar3
                 ; 0009 055C     }
                +
005f70 5f0f     +SUBI R16 , LOW ( - 1 )
005f71 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f72 cfee      	RJMP _0x120108
                 _0x120109:
                 ; 0009 055D     putchar0('\r');
005f73 e0ad      	LDI  R26,LOW(13)
005f74 940e 3f17 	CALL _putchar0
                 ; 0009 055E     printDebug("\r\n\---\r\n");
                +
005f76 e8ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5428 ) )
005f77 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5428 ) )
005f78 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5428 ) )
005f79 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5428 ) )
                 	__POINTD1FN _0x120000,5428
005f7a 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 055F 
                 ; 0009 0560     TIMER_setTimer(&timeout, 10);
005f7c 01fe      	MOVW R30,R28
005f7d 96bb      	ADIW R30,43
005f7e 940e bced 	CALL SUBOPT_0x27
                 ; 0009 0561 
                 ; 0009 0562     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x12010A:
005f80 91e0 10f1 	LDS  R30,_config_ready
005f82 30e0      	CPI  R30,0
005f83 f419      	BRNE _0x12010D
005f84 940e c697 	CALL SUBOPT_0x1B3
005f86 f009      	BREQ _0x12010E
                 _0x12010D:
005f87 c004      	RJMP _0x12010C
                 _0x12010E:
                 ; 0009 0563        delay_ms(50);
005f88 940e bf24 	CALL SUBOPT_0x7A
                 ; 0009 0564        #asm("wdr")
005f8a 95a8      	wdr
                 ; 0009 0565     }
005f8b cff4      	RJMP _0x12010A
                 _0x12010C:
                 ; 0009 0566 
                 ; 0009 0567     ETH_switchMode(MODE_NORM);
005f8c e8a0      	LDI  R26,LOW(128)
005f8d dd84      	RCALL _ETH_switchMode
                 ; 0009 0568 
                 ; 0009 0569     free( ptr );
005f8e 01da      	MOVW R26,R20
005f8f 940e a0ed 	CALL _free
                 ; 0009 056A 
                 ; 0009 056B     if(config_response == 'S'){
005f91 91a0 10f3 	LDS  R26,_config_response
005f93 35a3      	CPI  R26,LOW(0x53)
005f94 f419      	BRNE _0x12010F
                 ; 0009 056C         return 0;
005f95 e0e0      	LDI  R30,LOW(0)
005f96 e0f0      	LDI  R31,HIGH(0)
005f97 c002      	RJMP _0x20E007B
                 ; 0009 056D     }
                 ; 0009 056E     else{
                 _0x12010F:
                 ; 0009 056F         return -1;
005f98 efef      	LDI  R30,LOW(65535)
005f99 efff      	LDI  R31,HIGH(65535)
                 ; 0009 0570     }
                 ; 0009 0571 }
                 _0x20E007B:
005f9a 940e daa0 	CALL __LOADLOCR6
005f9c 96e7      	ADIW R28,55
005f9d 9508      	RET
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0574 {
                 _ETH_reset:
                 ; 0009 0575     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
005f9e e9e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5436 ) )
005f9f e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5436 ) )
005fa0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5436 ) )
005fa1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5436 ) )
                 	__POINTD1FN _0x120000,5436
005fa2 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 0576     ETH_RESET   = 0;
005fa4 9872      	CBI  0xE,2
                 ; 0009 0577     delay_ms(3000);
005fa5 eba8      	LDI  R26,LOW(3000)
005fa6 e0bb      	LDI  R27,HIGH(3000)
005fa7 940e d6dd 	CALL _delay_ms
                 ; 0009 0578     ETH_RESET   = 1;
005fa9 9a72      	SBI  0xE,2
                 ; 0009 0579     delay_ms(1);
005faa 940e bf12 	CALL SUBOPT_0x75
005fac 940e d6dd 	CALL _delay_ms
                 ; 0009 057A     printDebug("...Done\r\n");
                +
005fae ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5488 ) )
005faf e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5488 ) )
005fb0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5488 ) )
005fb1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5488 ) )
                 	__POINTD1FN _0x120000,5488
005fb2 940e bbec 	CALL SUBOPT_0x3
                 ; 0009 057B }
005fb4 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
005fb5 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005fb7 940e c750 	CALL SUBOPT_0x1CE
                 _0x140004:
                +
005fb9 3008     +CPI R16 , LOW ( 8 )
005fba e0e0     +LDI R30 , HIGH ( 8 )
005fbb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005fbc f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
005fbd 940e c755 	CALL SUBOPT_0x1CF
005fbf 81ac      	LDD  R26,Y+4
005fc0 81bd      	LDD  R27,Y+4+1
005fc1 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
005fc2 5f0f     +SUBI R16 , LOW ( - 1 )
005fc3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005fc4 cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
005fc5 940e c755 	CALL SUBOPT_0x1CF
005fc7 940e c75e 	CALL SUBOPT_0x1D0
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
005fc9 940e c01f 	CALL SUBOPT_0x9D
005fcb 2ffe      	MOV  R31,R30
005fcc e0e0      	LDI  R30,0
005fcd 010f      	MOVW R0,R30
005fce 940e c755 	CALL SUBOPT_0x1CF
005fd0 940e c01f 	CALL SUBOPT_0x9D
005fd2 29e0      	OR   R30,R0
005fd3 29f1      	OR   R31,R1
005fd4 940e c763 	CALL SUBOPT_0x1D1
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
005fd6 85a0      	LDD  R26,Z+8
005fd7 33a0      	CPI  R26,LOW(0x30)
005fd8 f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
005fd9 c1a9      	RJMP _0x20E007A
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
005fda 81ee      	LDD  R30,Y+6
005fdb 81ff      	LDD  R31,Y+6+1
005fdc 1be2      	SUB  R30,R18
005fdd 0bf3      	SBC  R31,R19
                +
005fde 81ac     +LDD R26 , Y + 4
005fdf 81bd     +LDD R27 , Y + 4 + 1
005fe0 961b     +ADIW R26 , 11
005fe1 93ed     +ST X + , R30
005fe2 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
005fe3 81ec      	LDD  R30,Y+4
005fe4 81fd      	LDD  R31,Y+4+1
005fe5 85a3      	LDD  R26,Z+11
005fe6 85b4      	LDD  R27,Z+12
005fe7 940e c76b 	CALL SUBOPT_0x1D2
                +
005fe9 81ac     +LDD R26 , Y + 4
005fea 81bd     +LDD R27 , Y + 4 + 1
005feb 961d     +ADIW R26 , 13
005fec 93ed     +ST X + , R30
005fed 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
005fee 81ac      	LDD  R26,Y+4
005fef 81bd      	LDD  R27,Y+4+1
005ff0 961d      	ADIW R26,13
005ff1 940e d9f0 	CALL __GETW1P
005ff3 9730      	SBIW R30,0
005ff4 f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
005ff5 ede4     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
005ff6 e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
005ff7 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
005ff8 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
005ff9 940e bbec 	CALL SUBOPT_0x3
                 ; 000A 001D         return -1;
005ffb efef      	LDI  R30,LOW(65535)
005ffc efff      	LDI  R31,HIGH(65535)
005ffd c187      	RJMP _0x20E0079
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
005ffe e000     +LDI R16 , LOW ( 0 )
005fff e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
006000 81ac      	LDD  R26,Y+4
006001 81bd      	LDD  R27,Y+4+1
006002 961b      	ADIW R26,11
006003 940e c772 	CALL SUBOPT_0x1D3
006005 f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
006006 81ec      	LDD  R30,Y+4
006007 81fd      	LDD  R31,Y+4+1
006008 85a5      	LDD  R26,Z+13
006009 85b6      	LDD  R27,Z+14
00600a 940e c777 	CALL SUBOPT_0x1D4
00600c 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
00600d 5f0f     +SUBI R16 , LOW ( - 1 )
00600e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00600f cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
006010 c172      	RJMP _0x20E007A
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
006011 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
006013 e020     +LDI R18 , LOW ( 0 )
006014 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
006015 efea     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
006016 e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
006017 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
006018 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
006019 940e bbec 	CALL SUBOPT_0x3
                 ; 000A 003B     print_payload(pkt,len);
00601b 940e c5ee 	CALL SUBOPT_0x195
00601d 85a8      	LDD  R26,Y+8
00601e 85b9      	LDD  R27,Y+8+1
00601f 940e 9b80 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
006021 e000     +LDI R16 , LOW ( 0 )
006022 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
006023 3008     +CPI R16 , LOW ( 8 )
006024 e0e0     +LDI R30 , HIGH ( 8 )
006025 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006026 f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
006027 940e c755 	CALL SUBOPT_0x1CF
006029 81ac      	LDD  R26,Y+4
00602a 81bd      	LDD  R27,Y+4+1
00602b 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
00602c 5f0f     +SUBI R16 , LOW ( - 1 )
00602d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00602e cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
00602f 940e c755 	CALL SUBOPT_0x1CF
006031 940e c75e 	CALL SUBOPT_0x1D0
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
006033 81ac     +LDD R26 , Y + 4
006034 81bd     +LDD R27 , Y + 4 + 1
006035 9619     +ADIW R26 , 9
006036 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
006037 81ec      	LDD  R30,Y+4
006038 81fd      	LDD  R31,Y+4+1
006039 85a0      	LDD  R26,Z+8
00603a 31a0      	CPI  R26,LOW(0x10)
00603b f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
00603c e1e1     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
00603d e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
00603e e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
00603f e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
006040 940e bbec 	CALL SUBOPT_0x3
                 ; 000A 0047         st->confLen     =   0;
006042 81ac      	LDD  R26,Y+4
006043 81bd      	LDD  R27,Y+4+1
006044 961a      	ADIW R26,10
006045 940e c2e2 	CALL SUBOPT_0x115
                 ; 000A 0048         st->confSpec    =   NULL;
006047 81ac      	LDD  R26,Y+4
006048 81bd      	LDD  R27,Y+4+1
006049 961c      	ADIW R26,12
00604a 940e c2e2 	CALL SUBOPT_0x115
                 ; 000A 0049         return 0;
00604c c136      	RJMP _0x20E007A
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
00604d e3e0     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
00604e e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
00604f e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
006050 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
006051 940e bbec 	CALL SUBOPT_0x3
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
006053 81ee      	LDD  R30,Y+6
006054 81ff      	LDD  R31,Y+6+1
006055 1be2      	SUB  R30,R18
006056 0bf3      	SBC  R31,R19
                +
006057 81ac     +LDD R26 , Y + 4
006058 81bd     +LDD R27 , Y + 4 + 1
006059 961a     +ADIW R26 , 10
00605a 93ed     +ST X + , R30
00605b 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
00605c e4ef     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
00605d e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
00605e e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
00605f e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
006060 940e da29 	CALL __PUTPARD1
006062 85a8      	LDD  R26,Y+8
006063 85b9      	LDD  R27,Y+8+1
006064 961a      	ADIW R26,10
006065 940e bcad 	CALL SUBOPT_0x1D
006067 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
006069 81ec      	LDD  R30,Y+4
00606a 81fd      	LDD  R31,Y+4+1
00606b 85a2      	LDD  R26,Z+10
00606c 85b3      	LDD  R27,Z+11
00606d 940e c76b 	CALL SUBOPT_0x1D2
                +
00606f 81ac     +LDD R26 , Y + 4
006070 81bd     +LDD R27 , Y + 4 + 1
006071 961c     +ADIW R26 , 12
006072 93ed     +ST X + , R30
006073 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
006074 81ac      	LDD  R26,Y+4
006075 81bd      	LDD  R27,Y+4+1
006076 961c      	ADIW R26,12
006077 940e d9f0 	CALL __GETW1P
006079 9730      	SBIW R30,0
00607a f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
00607b e7e3     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
00607c e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
00607d e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
00607e e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
00607f 940e bbec 	CALL SUBOPT_0x3
                 ; 000A 0056         return -1;
006081 efef      	LDI  R30,LOW(65535)
006082 efff      	LDI  R31,HIGH(65535)
006083 c101      	RJMP _0x20E0079
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
006084 e000     +LDI R16 , LOW ( 0 )
006085 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
006086 81ac      	LDD  R26,Y+4
006087 81bd      	LDD  R27,Y+4+1
006088 961a      	ADIW R26,10
006089 940e c772 	CALL SUBOPT_0x1D3
00608b f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
00608c 81ec      	LDD  R30,Y+4
00608d 81fd      	LDD  R31,Y+4+1
00608e 85a4      	LDD  R26,Z+12
00608f 85b5      	LDD  R27,Z+13
006090 940e c777 	CALL SUBOPT_0x1D4
006092 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
006093 5f0f     +SUBI R16 , LOW ( - 1 )
006094 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006095 cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
006096 c0ec      	RJMP _0x20E007A
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
006097 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006099 940e c750 	CALL SUBOPT_0x1CE
                 _0x140014:
                +
00609b 3008     +CPI R16 , LOW ( 8 )
00609c e0e0     +LDI R30 , HIGH ( 8 )
00609d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00609e f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
00609f 940e c755 	CALL SUBOPT_0x1CF
0060a1 81ac      	LDD  R26,Y+4
0060a2 81bd      	LDD  R27,Y+4+1
0060a3 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
0060a4 5f0f     +SUBI R16 , LOW ( - 1 )
0060a5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060a6 cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
0060a7 940e c755 	CALL SUBOPT_0x1CF
0060a9 940e c781 	CALL SUBOPT_0x1D5
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
0060ab 81ae      	LDD  R26,Y+6
0060ac 81bf      	LDD  R27,Y+6+1
0060ad 9717      	SBIW R26,7
0060ae f414      	BRGE PC+3
0060af 940c 611e 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
0060b1 940e c755 	CALL SUBOPT_0x1CF
0060b3 940e c786 	CALL SUBOPT_0x1D6
0060b5 940e c78e 	CALL SUBOPT_0x1D7
0060b7 937f      	PUSH R23
0060b8 936f      	PUSH R22
0060b9 93ff      	PUSH R31
0060ba 93ef      	PUSH R30
0060bb 940e c755 	CALL SUBOPT_0x1CF
0060bd 940e c786 	CALL SUBOPT_0x1D6
0060bf 940e d90e 	CALL __LSLD16
0060c1 91af      	POP  R26
0060c2 91bf      	POP  R27
0060c3 918f      	POP  R24
0060c4 919f      	POP  R25
0060c5 940e d8ad 	CALL __ORD12
0060c7 937f      	PUSH R23
0060c8 936f      	PUSH R22
0060c9 93ff      	PUSH R31
0060ca 93ef      	PUSH R30
0060cb 940e c755 	CALL SUBOPT_0x1CF
0060cd 940e c786 	CALL SUBOPT_0x1D6
0060cf 940e c794 	CALL SUBOPT_0x1D8
0060d1 91af      	POP  R26
0060d2 91bf      	POP  R27
0060d3 918f      	POP  R24
0060d4 919f      	POP  R25
0060d5 940e d8ad 	CALL __ORD12
0060d7 937f      	PUSH R23
0060d8 936f      	PUSH R22
0060d9 93ff      	PUSH R31
0060da 93ef      	PUSH R30
0060db 940e c755 	CALL SUBOPT_0x1CF
0060dd 940e c786 	CALL SUBOPT_0x1D6
0060df 91af      	POP  R26
0060e0 91bf      	POP  R27
0060e1 918f      	POP  R24
0060e2 919f      	POP  R25
0060e3 940e c79a 	CALL SUBOPT_0x1D9
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
0060e5 940e c755 	CALL SUBOPT_0x1CF
0060e7 940e c786 	CALL SUBOPT_0x1D6
0060e9 940e c78e 	CALL SUBOPT_0x1D7
0060eb 937f      	PUSH R23
0060ec 936f      	PUSH R22
0060ed 93ff      	PUSH R31
0060ee 93ef      	PUSH R30
0060ef 940e c755 	CALL SUBOPT_0x1CF
0060f1 940e c786 	CALL SUBOPT_0x1D6
0060f3 940e d90e 	CALL __LSLD16
0060f5 91af      	POP  R26
0060f6 91bf      	POP  R27
0060f7 918f      	POP  R24
0060f8 919f      	POP  R25
0060f9 940e d8ad 	CALL __ORD12
0060fb 937f      	PUSH R23
0060fc 936f      	PUSH R22
0060fd 93ff      	PUSH R31
0060fe 93ef      	PUSH R30
0060ff 940e c755 	CALL SUBOPT_0x1CF
006101 940e c786 	CALL SUBOPT_0x1D6
006103 940e c794 	CALL SUBOPT_0x1D8
006105 91af      	POP  R26
006106 91bf      	POP  R27
006107 918f      	POP  R24
006108 919f      	POP  R25
006109 940e d8ad 	CALL __ORD12
00610b 937f      	PUSH R23
00610c 936f      	PUSH R22
00610d 93ff      	PUSH R31
00610e 93ef      	PUSH R30
00610f 940e c755 	CALL SUBOPT_0x1CF
006111 940e c786 	CALL SUBOPT_0x1D6
006113 91af      	POP  R26
006114 91bf      	POP  R27
006115 918f      	POP  R24
006116 919f      	POP  R25
006117 940e d8ad 	CALL __ORD12
                +
006119 81ac     +LDD R26 , Y + 4
00611a 81bd     +LDD R27 , Y + 4 + 1
00611b 961d     +ADIW R26 , 13
00611c 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
00611e c064      	RJMP _0x20E007A
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
00611f 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006121 940e c750 	CALL SUBOPT_0x1CE
                 _0x140018:
                +
006123 3008     +CPI R16 , LOW ( 8 )
006124 e0e0     +LDI R30 , HIGH ( 8 )
006125 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006126 f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
006127 940e c7a2 	CALL SUBOPT_0x1DA
006129 81ac      	LDD  R26,Y+4
00612a 81bd      	LDD  R27,Y+4+1
00612b 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
00612c 5f0f     +SUBI R16 , LOW ( - 1 )
00612d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00612e cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
00612f c0b2      	RJMP _0x20E0078
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
006130 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006132 940e c750 	CALL SUBOPT_0x1CE
                 _0x14001B:
                +
006134 3008     +CPI R16 , LOW ( 8 )
006135 e0e0     +LDI R30 , HIGH ( 8 )
006136 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006137 f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
006138 940e c755 	CALL SUBOPT_0x1CF
00613a 81ac      	LDD  R26,Y+4
00613b 81bd      	LDD  R27,Y+4+1
00613c 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
00613d 5f0f     +SUBI R16 , LOW ( - 1 )
00613e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00613f cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
006140 940e c755 	CALL SUBOPT_0x1CF
006142 940e c781 	CALL SUBOPT_0x1D5
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
006144 81ee      	LDD  R30,Y+6
006145 81ff      	LDD  R31,Y+6+1
006146 9732      	SBIW R30,2
006147 940e c763 	CALL SUBOPT_0x1D1
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
006149 940e c637 	CALL SUBOPT_0x1A2
00614b f5b8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
00614c 81ec      	LDD  R30,Y+4
00614d 81fd      	LDD  R31,Y+4+1
00614e 85a1      	LDD  R26,Z+9
00614f 85b2      	LDD  R27,Z+10
006150 940e c76b 	CALL SUBOPT_0x1D2
                +
006152 81ac     +LDD R26 , Y + 4
006153 81bd     +LDD R27 , Y + 4 + 1
006154 961b     +ADIW R26 , 11
006155 93ed     +ST X + , R30
006156 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
006157 81ac      	LDD  R26,Y+4
006158 81bd      	LDD  R27,Y+4+1
006159 961b      	ADIW R26,11
00615a 940e d9f0 	CALL __GETW1P
00615c 9730      	SBIW R30,0
00615d f499      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
00615e e9e8     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
00615f e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
006160 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
006161 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
006162 940e c7a6 	CALL SUBOPT_0x1DB
006164 85a1      	LDD  R26,Z+9
006165 85b2      	LDD  R27,Z+10
006166 e0e1      	LDI  R30,LOW(1)
006167 e0f0      	LDI  R31,HIGH(1)
006168 940e d932 	CALL __MULW12U
00616a 940e bd4a 	CALL SUBOPT_0x34
00616c 940e bc5e 	CALL SUBOPT_0x12
                 ; 000A 00A3             return -1;
00616e efef      	LDI  R30,LOW(65535)
00616f efff      	LDI  R31,HIGH(65535)
006170 c014      	RJMP _0x20E0079
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
006171 e000     +LDI R16 , LOW ( 0 )
006172 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
006173 81ac      	LDD  R26,Y+4
006174 81bd      	LDD  R27,Y+4+1
006175 9619      	ADIW R26,9
006176 940e c772 	CALL SUBOPT_0x1D3
006178 f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
006179 81ec      	LDD  R30,Y+4
00617a 81fd      	LDD  R31,Y+4+1
00617b 85a3      	LDD  R26,Z+11
00617c 85b4      	LDD  R27,Z+12
00617d 940e c777 	CALL SUBOPT_0x1D4
00617f 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
006180 5f0f     +SUBI R16 , LOW ( - 1 )
006181 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006182 cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E007A:
006183 e0e0      	LDI  R30,LOW(0)
006184 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0079:
006185 940e daa2 	CALL __LOADLOCR4
006187 962a      	ADIW R28,10
006188 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
006189 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00618b 940e c750 	CALL SUBOPT_0x1CE
                 _0x140023:
                +
00618d 3008     +CPI R16 , LOW ( 8 )
00618e e0e0     +LDI R30 , HIGH ( 8 )
00618f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006190 f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
006191 940e c7a2 	CALL SUBOPT_0x1DA
006193 81ac      	LDD  R26,Y+4
006194 81bd      	LDD  R27,Y+4+1
006195 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
006196 5f0f     +SUBI R16 , LOW ( - 1 )
006197 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006198 cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
006199 940e c7a2 	CALL SUBOPT_0x1DA
00619b 940e c781 	CALL SUBOPT_0x1D5
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
00619d 940e c7a2 	CALL SUBOPT_0x1DA
00619f 940e c786 	CALL SUBOPT_0x1D6
0061a1 940e c78e 	CALL SUBOPT_0x1D7
0061a3 937f      	PUSH R23
0061a4 936f      	PUSH R22
0061a5 93ff      	PUSH R31
0061a6 93ef      	PUSH R30
0061a7 940e c7a2 	CALL SUBOPT_0x1DA
0061a9 940e c786 	CALL SUBOPT_0x1D6
0061ab 940e d90e 	CALL __LSLD16
0061ad 91af      	POP  R26
0061ae 91bf      	POP  R27
0061af 918f      	POP  R24
0061b0 919f      	POP  R25
0061b1 940e d8ad 	CALL __ORD12
0061b3 937f      	PUSH R23
0061b4 936f      	PUSH R22
0061b5 93ff      	PUSH R31
0061b6 93ef      	PUSH R30
0061b7 940e c7a2 	CALL SUBOPT_0x1DA
0061b9 940e c786 	CALL SUBOPT_0x1D6
0061bb 940e c794 	CALL SUBOPT_0x1D8
0061bd 91af      	POP  R26
0061be 91bf      	POP  R27
0061bf 918f      	POP  R24
0061c0 919f      	POP  R25
0061c1 940e d8ad 	CALL __ORD12
0061c3 937f      	PUSH R23
0061c4 936f      	PUSH R22
0061c5 93ff      	PUSH R31
0061c6 93ef      	PUSH R30
0061c7 940e c7a2 	CALL SUBOPT_0x1DA
0061c9 940e c786 	CALL SUBOPT_0x1D6
0061cb 91af      	POP  R26
0061cc 91bf      	POP  R27
0061cd 918f      	POP  R24
0061ce 919f      	POP  R25
0061cf 940e c79a 	CALL SUBOPT_0x1D9
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
0061d1 c01d      	RJMP _0x20E0077
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
0061d2 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0061d4 940e c750 	CALL SUBOPT_0x1CE
                 _0x140026:
                +
0061d6 3008     +CPI R16 , LOW ( 8 )
0061d7 e0e0     +LDI R30 , HIGH ( 8 )
0061d8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0061d9 f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
0061da 940e c7a2 	CALL SUBOPT_0x1DA
0061dc 81ac      	LDD  R26,Y+4
0061dd 81bd      	LDD  R27,Y+4+1
0061de 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
0061df 5f0f     +SUBI R16 , LOW ( - 1 )
0061e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0061e1 cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0078:
0061e2 01f9      	MOVW R30,R18
                +
0061e3 5f2f     +SUBI R18 , LOW ( - 1 )
0061e4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0061e5 940e c65e 	CALL SUBOPT_0x1AA
0061e7 940e c781 	CALL SUBOPT_0x1D5
                 ; 000A 00CB     st->status      =   pkt[k++];
0061e9 940e c7a2 	CALL SUBOPT_0x1DA
                +
0061eb 81ac     +LDD R26 , Y + 4
0061ec 81bd     +LDD R27 , Y + 4 + 1
0061ed 9619     +ADIW R26 , 9
0061ee 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E0077:
0061ef e0e0      	LDI  R30,LOW(0)
0061f0 e0f0      	LDI  R31,HIGH(0)
0061f1 940e daa2 	CALL __LOADLOCR4
0061f3 9628      	ADIW R28,8
0061f4 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
0061f5 940e bfe2 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
0061f7 85a5      	LDD  R26,Z+13
0061f8 85b6      	LDD  R27,Z+14
0061f9 940e a0ed 	CALL _free
                 ; 000A 00D3 }
0061fb c05e      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
0061fc 940e bfe2 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
0061fe 85a4      	LDD  R26,Z+12
0061ff 85b5      	LDD  R27,Z+13
006200 940e a0ed 	CALL _free
                 ; 000A 00D8 }
006202 c057      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
006203 940e bfe2 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
006205 85a3      	LDD  R26,Z+11
006206 85b4      	LDD  R27,Z+12
006207 940e a0ed 	CALL _free
                 ; 000A 00DD }
006209 c050      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
00620a 93aa      	ST   -Y,R26
00620b 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
00620c 81e9      	LDD  R30,Y+1
00620d 7fe0      	ANDI R30,LOW(0xF0)
00620e 2f1e      	MOV  R17,R30
00620f 2fe1      	MOV  R30,R17
006210 940e bdd6 	CALL SUBOPT_0x47
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
006212 f419      	BRNE _0x160006
006213 eae1      	LDI  R30,LOW(161)
006214 e0f0      	LDI  R31,HIGH(161)
006215 c043      	RJMP _0x20E0075
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
006216 32e0      	CPI  R30,LOW(0x20)
006217 e0a0      	LDI  R26,HIGH(0x20)
006218 07fa      	CPC  R31,R26
006219 f419      	BRNE _0x160007
00621a e0e8      	LDI  R30,LOW(8)
00621b e0f0      	LDI  R31,HIGH(8)
00621c c03c      	RJMP _0x20E0075
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
00621d 33e0      	CPI  R30,LOW(0x30)
00621e e0a0      	LDI  R26,HIGH(0x30)
00621f 07fa      	CPC  R31,R26
006220 f419      	BRNE _0x160008
006221 e1ed      	LDI  R30,LOW(29)
006222 e0f0      	LDI  R31,HIGH(29)
006223 c035      	RJMP _0x20E0075
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
006224 34e0      	CPI  R30,LOW(0x40)
006225 e0a0      	LDI  R26,HIGH(0x40)
006226 07fa      	CPC  R31,R26
006227 f419      	BRNE _0x160009
006228 e0e3      	LDI  R30,LOW(3)
006229 e0f0      	LDI  R31,HIGH(3)
00622a c02e      	RJMP _0x20E0075
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
00622b 35e0      	CPI  R30,LOW(0x50)
00622c e0a0      	LDI  R26,HIGH(0x50)
00622d 07fa      	CPC  R31,R26
00622e f419      	BRNE _0x16000A
00622f e2e6      	LDI  R30,LOW(38)
006230 e0f0      	LDI  R31,HIGH(38)
006231 c027      	RJMP _0x20E0075
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
006232 36e0      	CPI  R30,LOW(0x60)
006233 e0a0      	LDI  R26,HIGH(0x60)
006234 07fa      	CPC  R31,R26
006235 f419      	BRNE _0x16000B
006236 e0e5      	LDI  R30,LOW(5)
006237 e0f0      	LDI  R31,HIGH(5)
006238 c020      	RJMP _0x20E0075
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
006239 37e0      	CPI  R30,LOW(0x70)
00623a e0a0      	LDI  R26,HIGH(0x70)
00623b 07fa      	CPC  R31,R26
00623c f419      	BRNE _0x16000C
00623d e2e9      	LDI  R30,LOW(41)
00623e e0f0      	LDI  R31,HIGH(41)
00623f c019      	RJMP _0x20E0075
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
006240 38e0      	CPI  R30,LOW(0x80)
006241 e0a0      	LDI  R26,HIGH(0x80)
006242 07fa      	CPC  R31,R26
006243 f419      	BRNE _0x16000D
006244 e2e5      	LDI  R30,LOW(37)
006245 e0f0      	LDI  R31,HIGH(37)
006246 c012      	RJMP _0x20E0075
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
006247 39e0      	CPI  R30,LOW(0x90)
006248 e0a0      	LDI  R26,HIGH(0x90)
006249 07fa      	CPC  R31,R26
00624a f419      	BRNE _0x16000F
00624b e1e2      	LDI  R30,LOW(18)
00624c e0f0      	LDI  R31,HIGH(18)
00624d c00b      	RJMP _0x20E0075
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
00624e ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
00624f e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
006250 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
006251 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
006252 940e da29 	CALL __PUTPARD1
006254 2fe1      	MOV  R30,R17
006255 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0018                                     return -1;
006257 efef      	LDI  R30,LOW(65535)
006258 efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E0075:
006259 8118      	LDD  R17,Y+0
                 _0x20E0076:
00625a 9622      	ADIW R28,2
00625b 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
00625c 940e c7ab 	CALL SUBOPT_0x1DC
00625e 940e bdd1 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
006260 e020     +LDI R18 , LOW ( 0 )
006261 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
006262 e050      	LDI  R21,0
006263 85ec      	LDD  R30,Y+12
006264 7fe0      	ANDI R30,LOW(0xF0)
006265 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
006266 2fe5      	MOV  R30,R21
006267 940e bdd6 	CALL SUBOPT_0x47
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
006269 f011      	BREQ PC+3
00626a 940c 62da 	JMP _0x160013
00626c 940e c23d 	CALL SUBOPT_0xF9
00626e 940e c7ae 	CALL SUBOPT_0x1DD
                 ; 000B 0029                                     if(cnfgStrc == NULL){
006270 f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
006271 efed     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
006272 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
006273 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
006274 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
006275 940e da29 	CALL __PUTPARD1
                +
006277 eae1     +LDI R30 , LOW ( 0xA1 )
006278 e0f0     +LDI R31 , HIGH ( 0xA1 )
006279 e060     +LDI R22 , BYTE3 ( 0xA1 )
00627a e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
00627b 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 002B                                         return -2;
00627d efee      	LDI  R30,LOW(65534)
00627e efff      	LDI  R31,HIGH(65534)
00627f c408      	RJMP _0x20E0074
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
006280 81ae      	LDD  R26,Y+6
006281 81bf      	LDD  R27,Y+6+1
006282 940e 47bb 	CALL _getPropertiesConfig
006284 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
006285 2333      	TST  R19
006286 f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
006287 e3e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
006288 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
006289 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
00628a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
00628b 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0031                                         free ( cnfgStrc );
00628d 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 0032                                         return -3;
00628f efed      	LDI  R30,LOW(65533)
006290 efff      	LDI  R31,HIGH(65533)
006291 c3f6      	RJMP _0x20E0074
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
006292 e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
006293 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
006294 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
006295 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
006296 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
006298 940e c7b4 	CALL SUBOPT_0x1DE
00629a 940e bd4a 	CALL SUBOPT_0x34
00629c 940e bc5e 	CALL SUBOPT_0x12
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
00629e 940e c7b4 	CALL SUBOPT_0x1DE
0062a0 9674      	ADIW R30,20
0062a1 940e bd4a 	CALL SUBOPT_0x34
0062a3 940e bc5e 	CALL SUBOPT_0x12
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
0062a5 940e c7b4 	CALL SUBOPT_0x1DE
0062a7 96b8      	ADIW R30,40
0062a8 940e bd4a 	CALL SUBOPT_0x34
0062aa 940e bc5e 	CALL SUBOPT_0x12
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
0062ac 940e c7b4 	CALL SUBOPT_0x1DE
0062ae 5be0      	SUBI R30,LOW(-80)
0062af 4fff      	SBCI R31,HIGH(-80)
0062b0 940e bd4a 	CALL SUBOPT_0x34
0062b2 940e bc5e 	CALL SUBOPT_0x12
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
0062b4 940e c7b4 	CALL SUBOPT_0x1DE
0062b6 59ec      	SUBI R30,LOW(-100)
0062b7 4fff      	SBCI R31,HIGH(-100)
0062b8 940e bd4a 	CALL SUBOPT_0x34
0062ba 940e bc5e 	CALL SUBOPT_0x12
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
0062bc 940e c7b4 	CALL SUBOPT_0x1DE
0062be 57e4      	SUBI R30,LOW(-140)
0062bf 4fff      	SBCI R31,HIGH(-140)
0062c0 940e bd4a 	CALL SUBOPT_0x34
0062c2 940e bc5e 	CALL SUBOPT_0x12
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
0062c4 e8e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
0062c5 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
0062c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
0062c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
0062c8 940e c35a 	CALL SUBOPT_0x129
0062ca 56a0      	SUBI R26,LOW(-160)
0062cb 4fbf      	SBCI R27,HIGH(-160)
0062cc 91ec      	LD   R30,X
0062cd 940e d913 	CALL __CBD1
0062cf 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
0062d1 940e c7b9 	CALL SUBOPT_0x1DF
0062d3 940e c23d 	CALL SUBOPT_0xF9
0062d5 940e c7be 	CALL SUBOPT_0x1E0
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
0062d7 eae1      	LDI  R30,LOW(161)
0062d8 e0f0      	LDI  R31,HIGH(161)
0062d9 c3ae      	RJMP _0x20E0074
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
0062da 32e0      	CPI  R30,LOW(0x20)
0062db e0a0      	LDI  R26,HIGH(0x20)
0062dc 07fa      	CPC  R31,R26
0062dd f011      	BREQ PC+3
0062de 940c 6347 	JMP _0x160016
0062e0 940e c7c1 	CALL SUBOPT_0x1E1
0062e2 940e c7ae 	CALL SUBOPT_0x1DD
                 ; 000B 004A                                     if(cnfgStrc == NULL){
0062e4 f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
0062e5 e8ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
0062e6 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
0062e7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
0062e8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
0062e9 940e da29 	CALL __PUTPARD1
                +
0062eb e0e8     +LDI R30 , LOW ( 0x8 )
0062ec e0f0     +LDI R31 , HIGH ( 0x8 )
0062ed e060     +LDI R22 , BYTE3 ( 0x8 )
0062ee e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
0062ef 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 004C                                         return -2;
0062f1 efee      	LDI  R30,LOW(65534)
0062f2 efff      	LDI  R31,HIGH(65534)
0062f3 c394      	RJMP _0x20E0074
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
0062f4 81ae      	LDD  R26,Y+6
0062f5 81bf      	LDD  R27,Y+6+1
0062f6 940e 4850 	CALL _getOperatingConfig
0062f8 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
0062f9 2333      	TST  R19
0062fa f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
0062fb ece3     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
0062fc e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
0062fd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
0062fe e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
0062ff 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0052                                         free ( cnfgStrc );
006301 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 0053                                         return -3;
006303 efed      	LDI  R30,LOW(65533)
006304 efff      	LDI  R31,HIGH(65533)
006305 c382      	RJMP _0x20E0074
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
006306 eeee     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
006307 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
006308 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
006309 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
00630a 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
00630c e0ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
00630d e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
00630e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
00630f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
006310 940e c35a 	CALL SUBOPT_0x129
006312 91ec      	LD   R30,X
006313 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
006315 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
006316 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
006317 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
006318 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
006319 940e c35f 	CALL SUBOPT_0x12A
00631b 81e1      	LDD  R30,Z+1
00631c 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
00631e 940e c7c4 	CALL SUBOPT_0x1E2
006320 81e2      	LDD  R30,Z+2
006321 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
006323 e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
006324 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
006325 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
006326 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
006327 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
006329 e000     +LDI R16 , LOW ( 0 )
00632a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
00632b 3005     +CPI R16 , LOW ( 5 )
00632c e0e0     +LDI R30 , HIGH ( 5 )
00632d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00632e f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
00632f 940e c7c9 	CALL SUBOPT_0x1E3
006331 940e c29a 	CALL SUBOPT_0x108
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
006333 e0e4      	LDI  R30,LOW(4)
006334 e0f0      	LDI  R31,HIGH(4)
006335 17e0      	CP   R30,R16
006336 07f1      	CPC  R31,R17
006337 f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
006338 940e c7ce 	CALL SUBOPT_0x1E4
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
00633a 5f0f     +SUBI R16 , LOW ( - 1 )
00633b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00633c cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
00633d 940e c7b9 	CALL SUBOPT_0x1DF
00633f e0a8      	LDI  R26,LOW(8)
006340 940e c746 	CALL SUBOPT_0x1CC
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
006342 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
006344 e0e8      	LDI  R30,LOW(8)
006345 e0f0      	LDI  R31,HIGH(8)
006346 c341      	RJMP _0x20E0074
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
006347 33e0      	CPI  R30,LOW(0x30)
006348 e0a0      	LDI  R26,HIGH(0x30)
006349 07fa      	CPC  R31,R26
00634a f011      	BREQ PC+3
00634b 940c 6408 	JMP _0x16001D
00634d 940e c7d4 	CALL SUBOPT_0x1E5
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
00634f e1ad      	LDI  R26,LOW(29)
006350 940e c7db 	CALL SUBOPT_0x1E6
                 ; 000B 0070                                     if(cnfgStrc == NULL){
006352 f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
006353 e7e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
006354 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
006355 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
006356 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
006357 940e da29 	CALL __PUTPARD1
                +
006359 e1ed     +LDI R30 , LOW ( 0x1D )
00635a e0f0     +LDI R31 , HIGH ( 0x1D )
00635b e060     +LDI R22 , BYTE3 ( 0x1D )
00635c e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
00635d 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 0072                                         return -2;
00635f efee      	LDI  R30,LOW(65534)
006360 efff      	LDI  R31,HIGH(65534)
006361 c326      	RJMP _0x20E0074
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
006362 940e c5ee 	CALL SUBOPT_0x195
006364 85a8      	LDD  R26,Y+8
006365 85b9      	LDD  R27,Y+8+1
006366 940e 48be 	CALL _getSensorConfig
006368 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
006369 2333      	TST  R19
00636a f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
00636b eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
00636c e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
00636d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
00636e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
00636f 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0078                                         free ( cnfgStrc );
006371 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 0079                                         return -3;
006373 efed      	LDI  R30,LOW(65533)
006374 efff      	LDI  R31,HIGH(65533)
006375 c312      	RJMP _0x20E0074
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
006376 ede4     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
006377 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
006378 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
006379 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
00637a 940e c7dd 	CALL SUBOPT_0x1E7
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
00637c efe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
00637d e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
00637e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
00637f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
006380 940e c35a 	CALL SUBOPT_0x129
006382 940e bcad 	CALL SUBOPT_0x1D
006384 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
006386 e0ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
006387 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
006388 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
006389 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
00638a 940e c35a 	CALL SUBOPT_0x129
00638c 9612      	ADIW R26,2
00638d 940e bcad 	CALL SUBOPT_0x1D
00638f 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
006391 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
006392 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
006393 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
006394 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
006395 940e c35f 	CALL SUBOPT_0x12A
006397 81e4      	LDD  R30,Z+4
006398 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
00639a e3ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
00639b e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
00639c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
00639d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
00639e 940e c35f 	CALL SUBOPT_0x12A
0063a0 81e5      	LDD  R30,Z+5
0063a1 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
0063a3 e5e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
0063a4 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
0063a5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
0063a6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
0063a7 940e c35f 	CALL SUBOPT_0x12A
0063a9 81e6      	LDD  R30,Z+6
0063aa 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
0063ac e6ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
0063ad e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
0063ae e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
0063af e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
0063b0 940e c35f 	CALL SUBOPT_0x12A
0063b2 81e7      	LDD  R30,Z+7
0063b3 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
0063b5 940e c7c4 	CALL SUBOPT_0x1E2
0063b7 85e0      	LDD  R30,Z+8
0063b8 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
0063ba e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
0063bb e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
0063bc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
0063bd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
0063be 940e c35f 	CALL SUBOPT_0x12A
0063c0 940e c61d 	CALL SUBOPT_0x19D
0063c2 940e c619 	CALL SUBOPT_0x19C
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
0063c4 e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
0063c5 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
0063c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
0063c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
0063c8 940e c35a 	CALL SUBOPT_0x129
0063ca 961d      	ADIW R26,13
0063cb 940e bcad 	CALL SUBOPT_0x1D
0063cd 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
0063cf ebe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
0063d0 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
0063d1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
0063d2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
0063d3 940e c35f 	CALL SUBOPT_0x12A
                +
0063d5 85a7     +LDD R26 , Z + 15
0063d6 89b0     +LDD R27 , Z + 15 + 1
0063d7 8981     +LDD R24 , Z + 15 + 2
0063d8 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
0063d9 940e c619 	CALL SUBOPT_0x19C
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
0063db ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
0063dc e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
0063dd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
0063de e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
0063df 940e c35f 	CALL SUBOPT_0x12A
                +
0063e1 89a3     +LDD R26 , Z + 19
0063e2 89b4     +LDD R27 , Z + 19 + 1
0063e3 8985     +LDD R24 , Z + 19 + 2
0063e4 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
0063e5 940e c619 	CALL SUBOPT_0x19C
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
0063e7 edef     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
0063e8 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
0063e9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
0063ea e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
0063eb 940e c35a 	CALL SUBOPT_0x129
0063ed 9657      	ADIW R26,23
0063ee 940e bcad 	CALL SUBOPT_0x1D
0063f0 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
0063f2 efe6     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
0063f3 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
0063f4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
0063f5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
0063f6 940e c35f 	CALL SUBOPT_0x12A
                +
0063f8 8da1     +LDD R26 , Z + 25
0063f9 8db2     +LDD R27 , Z + 25 + 1
0063fa 8d83     +LDD R24 , Z + 25 + 2
0063fb 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
0063fc 940e c619 	CALL SUBOPT_0x19C
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
0063fe 940e c7b9 	CALL SUBOPT_0x1DF
006400 e1ad      	LDI  R26,LOW(29)
006401 940e c746 	CALL SUBOPT_0x1CC
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
006403 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
006405 e1ed      	LDI  R30,LOW(29)
006406 e0f0      	LDI  R31,HIGH(29)
006407 c280      	RJMP _0x20E0074
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
006408 34e0      	CPI  R30,LOW(0x40)
006409 e0a0      	LDI  R26,HIGH(0x40)
00640a 07fa      	CPC  R31,R26
00640b f011      	BREQ PC+3
00640c 940c 6451 	JMP _0x160020
00640e 940e c7d4 	CALL SUBOPT_0x1E5
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
006410 940e bf15 	CALL SUBOPT_0x76
006412 940e c7ae 	CALL SUBOPT_0x1DD
                 ; 000B 0099                                     if(cnfgStrc == NULL){
006414 f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
006415 e0ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
006416 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
006417 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
006418 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
006419 940e c7e2 	CALL SUBOPT_0x1E8
                 ; 000B 009B                                         return -2;
00641b efee      	LDI  R30,LOW(65534)
00641c efff      	LDI  R31,HIGH(65534)
00641d c26a      	RJMP _0x20E0074
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
00641e 940e c5ee 	CALL SUBOPT_0x195
006420 85a8      	LDD  R26,Y+8
006421 85b9      	LDD  R27,Y+8+1
006422 940e 49a6 	CALL _getAuxDinConfig
006424 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
006425 2333      	TST  R19
006426 f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
006427 e4e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
006428 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
006429 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
00642a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
00642b 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 00A1                                         free ( cnfgStrc );
00642d 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 00A2                                         return -3;
00642f efed      	LDI  R30,LOW(65533)
006430 efff      	LDI  R31,HIGH(65533)
006431 c256      	RJMP _0x20E0074
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
006432 e6e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
006433 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
006434 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
006435 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
006436 940e c7dd 	CALL SUBOPT_0x1E7
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
006438 940e c7e9 	CALL SUBOPT_0x1E9
00643a 91ec      	LD   R30,X
00643b 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
00643d eae5     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
00643e e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
00643f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
006440 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
006441 940e c35a 	CALL SUBOPT_0x129
006443 9611      	ADIW R26,1
006444 940e bcad 	CALL SUBOPT_0x1D
006446 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
006448 940e c7b9 	CALL SUBOPT_0x1DF
00644a 940e bf15 	CALL SUBOPT_0x76
00644c 940e c7be 	CALL SUBOPT_0x1E0
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
00644e e0e3      	LDI  R30,LOW(3)
00644f e0f0      	LDI  R31,HIGH(3)
006450 c237      	RJMP _0x20E0074
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
006451 35e0      	CPI  R30,LOW(0x50)
006452 e0a0      	LDI  R26,HIGH(0x50)
006453 07fa      	CPC  R31,R26
006454 f011      	BREQ PC+3
006455 940c 64b7 	JMP _0x160023
006457 940e c7d4 	CALL SUBOPT_0x1E5
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
006459 e2a6      	LDI  R26,LOW(38)
00645a 940e c7db 	CALL SUBOPT_0x1E6
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
00645c f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
00645d ebed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
00645e e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
00645f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
006460 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
006461 940e da29 	CALL __PUTPARD1
                +
006463 e2e6     +LDI R30 , LOW ( 0x26 )
006464 e0f0     +LDI R31 , HIGH ( 0x26 )
006465 e060     +LDI R22 , BYTE3 ( 0x26 )
006466 e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
006467 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 00B9                                         return -2;
006469 efee      	LDI  R30,LOW(65534)
00646a efff      	LDI  R31,HIGH(65534)
00646b c21c      	RJMP _0x20E0074
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
00646c 940e c5ee 	CALL SUBOPT_0x195
00646e 85a8      	LDD  R26,Y+8
00646f 85b9      	LDD  R27,Y+8+1
006470 940e 49dc 	CALL _getAuxDoutConfig
006472 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
006473 2333      	TST  R19
006474 f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
006475 efe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
006476 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
006477 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
006478 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
006479 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 00BF                                         free ( cnfgStrc );
00647b 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 00C0                                         return -3;
00647d efed      	LDI  R30,LOW(65533)
00647e efff      	LDI  R31,HIGH(65533)
00647f c208      	RJMP _0x20E0074
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
006480 e1ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
006481 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
006482 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
006483 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
006484 940e c7dd 	CALL SUBOPT_0x1E7
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
006486 940e c7ee 	CALL SUBOPT_0x1EA
006488 91ec      	LD   R30,X
006489 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
00648b e5e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
00648c e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
00648d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
00648e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
00648f 940e c35f 	CALL SUBOPT_0x12A
006491 81e1      	LDD  R30,Z+1
006492 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
006494 940e c7f3 	CALL SUBOPT_0x1EB
006496 81e2      	LDD  R30,Z+2
006497 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
006499 940e c7f8 	CALL SUBOPT_0x1EC
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
00649b e000     +LDI R16 , LOW ( 0 )
00649c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
00649d 3203     +CPI R16 , LOW ( 35 )
00649e e0e0     +LDI R30 , HIGH ( 35 )
00649f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0064a0 f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
0064a1 940e c7c9 	CALL SUBOPT_0x1E3
0064a3 940e c29a 	CALL SUBOPT_0x108
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
0064a5 940e c7fe 	CALL SUBOPT_0x1ED
0064a7 f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
0064a8 940e c7ce 	CALL SUBOPT_0x1E4
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
0064aa 5f0f     +SUBI R16 , LOW ( - 1 )
0064ab 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0064ac cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
0064ad 940e c7b9 	CALL SUBOPT_0x1DF
0064af e2a6      	LDI  R26,LOW(38)
0064b0 940e c746 	CALL SUBOPT_0x1CC
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
0064b2 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
0064b4 e2e6      	LDI  R30,LOW(38)
0064b5 e0f0      	LDI  R31,HIGH(38)
0064b6 c1d1      	RJMP _0x20E0074
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
0064b7 36e0      	CPI  R30,LOW(0x60)
0064b8 e0a0      	LDI  R26,HIGH(0x60)
0064b9 07fa      	CPC  R31,R26
0064ba f011      	BREQ PC+3
0064bb 940c 6503 	JMP _0x16002A
0064bd 940e c7d4 	CALL SUBOPT_0x1E5
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
0064bf e0a5      	LDI  R26,LOW(5)
0064c0 940e c7db 	CALL SUBOPT_0x1E6
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
0064c2 f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
0064c3 e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
0064c4 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
0064c5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
0064c6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
0064c7 940e da29 	CALL __PUTPARD1
                +
0064c9 e0e5     +LDI R30 , LOW ( 0x5 )
0064ca e0f0     +LDI R31 , HIGH ( 0x5 )
0064cb e060     +LDI R22 , BYTE3 ( 0x5 )
0064cc e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
0064cd 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 00E0                                         return -2;
0064cf efee      	LDI  R30,LOW(65534)
0064d0 efff      	LDI  R31,HIGH(65534)
0064d1 c1b6      	RJMP _0x20E0074
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
0064d2 940e c5ee 	CALL SUBOPT_0x195
0064d4 85a8      	LDD  R26,Y+8
0064d5 85b9      	LDD  R27,Y+8+1
0064d6 940e 4a76 	CALL _getAuxAinConfig
0064d8 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
0064d9 2333      	TST  R19
0064da f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
0064db ede0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
0064dc e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
0064dd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
0064de e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
0064df 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 00E6                                         free ( cnfgStrc );
0064e1 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 00E7                                         return -3;
0064e3 efed      	LDI  R30,LOW(65533)
0064e4 efff      	LDI  R31,HIGH(65533)
0064e5 c1a2      	RJMP _0x20E0074
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
0064e6 efe8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
0064e7 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
0064e8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
0064e9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
0064ea 940e c7dd 	CALL SUBOPT_0x1E7
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
0064ec 940e c7e9 	CALL SUBOPT_0x1E9
0064ee 91ec      	LD   R30,X
0064ef 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
0064f1 e1e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
0064f2 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
0064f3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
0064f4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
0064f5 940e c35f 	CALL SUBOPT_0x12A
0064f7 940e c803 	CALL SUBOPT_0x1EE
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
0064f9 940e c7b9 	CALL SUBOPT_0x1DF
0064fb e0a5      	LDI  R26,LOW(5)
0064fc 940e c746 	CALL SUBOPT_0x1CC
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
0064fe 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
006500 e0e5      	LDI  R30,LOW(5)
006501 e0f0      	LDI  R31,HIGH(5)
006502 c185      	RJMP _0x20E0074
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
006503 37e0      	CPI  R30,LOW(0x70)
006504 e0a0      	LDI  R26,HIGH(0x70)
006505 07fa      	CPC  R31,R26
006506 f011      	BREQ PC+3
006507 940c 656c 	JMP _0x16002D
006509 940e c7d4 	CALL SUBOPT_0x1E5
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
00650b e2a9      	LDI  R26,LOW(41)
00650c 940e c7db 	CALL SUBOPT_0x1E6
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
00650e f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
00650f e3e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
006510 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
006511 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
006512 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
006513 940e da29 	CALL __PUTPARD1
                +
006515 e2e9     +LDI R30 , LOW ( 0x29 )
006516 e0f0     +LDI R31 , HIGH ( 0x29 )
006517 e060     +LDI R22 , BYTE3 ( 0x29 )
006518 e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
006519 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 00FE                                         return -2;
00651b efee      	LDI  R30,LOW(65534)
00651c efff      	LDI  R31,HIGH(65534)
00651d c16a      	RJMP _0x20E0074
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
00651e 940e c5ee 	CALL SUBOPT_0x195
006520 85a8      	LDD  R26,Y+8
006521 85b9      	LDD  R27,Y+8+1
006522 940e 4ab1 	CALL _getAuxAoutConfig
006524 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
006525 2333      	TST  R19
006526 f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
006527 e6e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
006528 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
006529 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
00652a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
00652b 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0104                                         free ( cnfgStrc );
00652d 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 0105                                         return -3;
00652f efed      	LDI  R30,LOW(65533)
006530 efff      	LDI  R31,HIGH(65533)
006531 c156      	RJMP _0x20E0074
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
006532 e8ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
006533 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
006534 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
006535 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
006536 940e c7dd 	CALL SUBOPT_0x1E7
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
006538 940e c7ee 	CALL SUBOPT_0x1EA
00653a 91ec      	LD   R30,X
00653b 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
00653d eaed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
00653e e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
00653f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
006540 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
006541 940e c35f 	CALL SUBOPT_0x12A
006543 940e c803 	CALL SUBOPT_0x1EE
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
006545 940e c7f3 	CALL SUBOPT_0x1EB
006547 81e5      	LDD  R30,Z+5
006548 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
00654a 940e c7f8 	CALL SUBOPT_0x1EC
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
00654c e000     +LDI R16 , LOW ( 0 )
00654d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
00654e 3203     +CPI R16 , LOW ( 35 )
00654f e0e0     +LDI R30 , HIGH ( 35 )
006550 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006551 f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
006552 940e c7c9 	CALL SUBOPT_0x1E3
006554 9636      	ADIW R30,6
006555 0fe0      	ADD  R30,R16
006556 1ff1      	ADC  R31,R17
006557 81e0      	LD   R30,Z
006558 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
00655a 940e c7fe 	CALL SUBOPT_0x1ED
00655c f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
00655d 940e c7ce 	CALL SUBOPT_0x1E4
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
00655f 5f0f     +SUBI R16 , LOW ( - 1 )
006560 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006561 cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
006562 940e c7b9 	CALL SUBOPT_0x1DF
006564 e2a9      	LDI  R26,LOW(41)
006565 940e c746 	CALL SUBOPT_0x1CC
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
006567 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
006569 e2e9      	LDI  R30,LOW(41)
00656a e0f0      	LDI  R31,HIGH(41)
00656b c11c      	RJMP _0x20E0074
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
00656c 38e0      	CPI  R30,LOW(0x80)
00656d e0a0      	LDI  R26,HIGH(0x80)
00656e 07fa      	CPC  R31,R26
00656f f011      	BREQ PC+3
006570 940c 65cb 	JMP _0x160034
006572 e2a5      	LDI  R26,LOW(37)
006573 940e c7db 	CALL SUBOPT_0x1E6
                 ; 000B 0121                                     if(cnfgStrc == NULL){
006575 f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
006576 ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
006577 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
006578 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
006579 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
00657a 940e da29 	CALL __PUTPARD1
                +
00657c e2e5     +LDI R30 , LOW ( 0x25 )
00657d e0f0     +LDI R31 , HIGH ( 0x25 )
00657e e060     +LDI R22 , BYTE3 ( 0x25 )
00657f e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
006580 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 0123                                         return -2;
006582 efee      	LDI  R30,LOW(65534)
006583 efff      	LDI  R31,HIGH(65534)
006584 c103      	RJMP _0x20E0074
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
006585 81ae      	LDD  R26,Y+6
006586 81bf      	LDD  R27,Y+6+1
006587 940e 4b36 	CALL _getBuzzerConfig
006589 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
00658a 2333      	TST  R19
00658b f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
00658c efeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
00658d e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
00658e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
00658f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
006590 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0129                                         free ( cnfgStrc );
006592 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 012A                                         return -3;
006594 efed      	LDI  R30,LOW(65533)
006595 efff      	LDI  R31,HIGH(65533)
006596 c0f1      	RJMP _0x20E0074
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
006597 e2e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
006598 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
006599 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
00659a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
00659b 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
00659d e4e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
00659e e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
00659f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
0065a0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
0065a1 940e c35a 	CALL SUBOPT_0x129
0065a3 91ec      	LD   R30,X
0065a4 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
0065a6 940e c7f3 	CALL SUBOPT_0x1EB
0065a8 81e1      	LDD  R30,Z+1
0065a9 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
0065ab 940e c7f8 	CALL SUBOPT_0x1EC
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0065ad e000     +LDI R16 , LOW ( 0 )
0065ae e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
0065af 3203     +CPI R16 , LOW ( 35 )
0065b0 e0e0     +LDI R30 , HIGH ( 35 )
0065b1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0065b2 f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
0065b3 940e c7c9 	CALL SUBOPT_0x1E3
0065b5 940e c369 	CALL SUBOPT_0x12C
0065b7 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
0065b9 940e c7fe 	CALL SUBOPT_0x1ED
0065bb f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
0065bc 940e c7ce 	CALL SUBOPT_0x1E4
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
0065be 5f0f     +SUBI R16 , LOW ( - 1 )
0065bf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0065c0 cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
0065c1 940e c7b9 	CALL SUBOPT_0x1DF
0065c3 e2a5      	LDI  R26,LOW(37)
0065c4 940e c746 	CALL SUBOPT_0x1CC
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
0065c6 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
0065c8 e2e5      	LDI  R30,LOW(37)
0065c9 e0f0      	LDI  R31,HIGH(37)
0065ca c0bd      	RJMP _0x20E0074
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
0065cb 39e0      	CPI  R30,LOW(0x90)
0065cc e0a0      	LDI  R26,HIGH(0x90)
0065cd 07fa      	CPC  R31,R26
0065ce f011      	BREQ PC+3
0065cf 940c 663b 	JMP _0x16003B
0065d1 e1a2      	LDI  R26,LOW(18)
0065d2 940e c7db 	CALL SUBOPT_0x1E6
                 ; 000B 0145                                     if(cnfgStrc == NULL){
0065d4 f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
0065d5 e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
0065d6 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
0065d7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
0065d8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
0065d9 940e da29 	CALL __PUTPARD1
                +
0065db e1e2     +LDI R30 , LOW ( 0x12 )
0065dc e0f0     +LDI R31 , HIGH ( 0x12 )
0065dd e060     +LDI R22 , BYTE3 ( 0x12 )
0065de e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
0065df 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 0147                                         return -2;
0065e1 efee      	LDI  R30,LOW(65534)
0065e2 efff      	LDI  R31,HIGH(65534)
0065e3 c0a4      	RJMP _0x20E0074
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
0065e4 81ae      	LDD  R26,Y+6
0065e5 81bf      	LDD  R27,Y+6+1
0065e6 940e 4bcd 	CALL _getEnvAlarmConfig
0065e8 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
0065e9 2333      	TST  R19
0065ea f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
0065eb e9e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
0065ec e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
0065ed e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
0065ee e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
0065ef 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 014D                                         free ( cnfgStrc );
0065f1 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 014E                                         return -3;
0065f3 efed      	LDI  R30,LOW(65533)
0065f4 efff      	LDI  R31,HIGH(65533)
0065f5 c092      	RJMP _0x20E0074
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
0065f6 ebee     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
0065f7 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
0065f8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
0065f9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
0065fa 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
0065fc eded     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
0065fd e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
0065fe e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
0065ff e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
006600 940e c35a 	CALL SUBOPT_0x129
006602 940e c373 	CALL SUBOPT_0x12E
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
006604 efe6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
006605 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
006606 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
006607 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
006608 940e c35a 	CALL SUBOPT_0x129
00660a 9614      	ADIW R26,4
00660b 940e c378 	CALL SUBOPT_0x12F
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
00660d e0ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
00660e e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
00660f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
006610 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
006611 940e c35f 	CALL SUBOPT_0x12A
006613 940e c380 	CALL SUBOPT_0x131
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
006615 e2e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
006616 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
006617 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
006618 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
006619 940e c35f 	CALL SUBOPT_0x12A
00661b 940e c387 	CALL SUBOPT_0x132
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
00661d e4e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
00661e e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
00661f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
006620 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
006621 940e c35a 	CALL SUBOPT_0x129
006623 961e      	ADIW R26,14
006624 940e c378 	CALL SUBOPT_0x12F
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
006626 e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
006627 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
006628 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
006629 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
00662a 940e c35a 	CALL SUBOPT_0x129
00662c 9650      	ADIW R26,16
00662d 940e bcad 	CALL SUBOPT_0x1D
00662f 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
006631 940e c7b9 	CALL SUBOPT_0x1DF
006633 e1a2      	LDI  R26,LOW(18)
006634 940e c746 	CALL SUBOPT_0x1CC
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
006636 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
006638 e1e2      	LDI  R30,LOW(18)
006639 e0f0      	LDI  R31,HIGH(18)
00663a c04d      	RJMP _0x20E0074
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
00663b 3ae0      	CPI  R30,LOW(0xA0)
00663c e0a0      	LDI  R26,HIGH(0xA0)
00663d 07fa      	CPC  R31,R26
00663e f011      	BREQ PC+3
00663f 940c 6681 	JMP _0x160041
006641 940e bf15 	CALL SUBOPT_0x76
006643 940e c7ae 	CALL SUBOPT_0x1DD
                 ; 000B 0164                                     if(cnfgStrc == NULL){
006645 f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
006646 e7e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
006647 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
006648 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
006649 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
00664a 940e c7e2 	CALL SUBOPT_0x1E8
                 ; 000B 0166                                         return -2;
00664c efee      	LDI  R30,LOW(65534)
00664d efff      	LDI  R31,HIGH(65534)
00664e c039      	RJMP _0x20E0074
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
00664f 81ae      	LDD  R26,Y+6
006650 81bf      	LDD  R27,Y+6+1
006651 940e 4c60 	CALL _getStatusReportConfig
006653 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
006654 2333      	TST  R19
006655 f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
006656 eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
006657 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
006658 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
006659 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
00665a 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 016C                                         free ( cnfgStrc );
00665c 940e c49d 	CALL SUBOPT_0x15F
                 ; 000B 016D                                         return -3;
00665e efed      	LDI  R30,LOW(65533)
00665f efff      	LDI  R31,HIGH(65533)
006660 c027      	RJMP _0x20E0074
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
006661 edea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
006662 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
006663 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
006664 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
006665 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
006667 efeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
006668 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
006669 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
00666a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
00666b 940e c35a 	CALL SUBOPT_0x129
00666d 91ec      	LD   R30,X
00666e 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
006670 e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
006671 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
006672 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
006673 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
006674 940e c35a 	CALL SUBOPT_0x129
006676 9611      	ADIW R26,1
006677 940e bcad 	CALL SUBOPT_0x1D
006679 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
00667b 940e c7b9 	CALL SUBOPT_0x1DF
00667d 940e bf15 	CALL SUBOPT_0x76
00667f 940e c7be 	CALL SUBOPT_0x1E0
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
006681 940e c808 	CALL SUBOPT_0x1EF
006683 2fe5      	MOV  R30,R21
006684 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 017D                                     return -1;
006686 efef      	LDI  R30,LOW(65535)
006687 efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E0074:
006688 940e daa0 	CALL __LOADLOCR6
00668a 962d      	ADIW R28,13
00668b 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
00668c 93ba      	ST   -Y,R27
00668d 93aa      	ST   -Y,R26
00668e 940e bdd1 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
006690 e030      	LDI  R19,0
                +
006691 e040     +LDI R20 , LOW ( 0 )
006692 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
006693 85ea      	LDD  R30,Y+10
006694 7fe0      	ANDI R30,LOW(0xF0)
006695 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
006696 e5e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
006697 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
006698 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
006699 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
00669a 940e c35f 	CALL SUBOPT_0x12A
00669c 940e c200 	CALL SUBOPT_0xEC
                 ; 000B 018D     print_payload(conf,len);
00669e 940e c5ee 	CALL SUBOPT_0x195
0066a0 85a8      	LDD  R26,Y+8
0066a1 85b9      	LDD  R27,Y+8+1
0066a2 940e 9b80 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
0066a4 2fe3      	MOV  R30,R19
0066a5 940e bdd6 	CALL SUBOPT_0x47
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
0066a7 f4b9      	BRNE _0x160045
                +
0066a8 e7ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
0066a9 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
0066aa e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
0066ab e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
0066ac 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
0066ae 85a8      	LDD  R26,Y+8
0066af 85b9      	LDD  R27,Y+8+1
0066b0 940e 4c9d 	CALL _setPropertiesConfig
0066b2 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
0066b3 2311      	TST  R17
0066b4 f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
0066b5 e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
0066b6 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
0066b7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
0066b8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
0066b9 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0195                                         return -3;
0066bb efed      	LDI  R30,LOW(65533)
0066bc efff      	LDI  R31,HIGH(65533)
0066bd c107      	RJMP _0x20E0073
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
0066be c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
0066bf 32e0      	CPI  R30,LOW(0x20)
0066c0 e0a0      	LDI  R26,HIGH(0x20)
0066c1 07fa      	CPC  R31,R26
0066c2 f4b9      	BRNE _0x160047
                +
0066c3 ece7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
0066c4 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
0066c5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
0066c6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
0066c7 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
0066c9 85a8      	LDD  R26,Y+8
0066ca 85b9      	LDD  R27,Y+8+1
0066cb 940e 4d14 	CALL _setOperatingConfig
0066cd 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
0066ce 2311      	TST  R17
0066cf f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
0066d0 eee4     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
0066d1 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
0066d2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
0066d3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
0066d4 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 019D                                         return -3;
0066d6 efed      	LDI  R30,LOW(65533)
0066d7 efff      	LDI  R31,HIGH(65533)
0066d8 c0ec      	RJMP _0x20E0073
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
0066d9 c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
0066da 33e0      	CPI  R30,LOW(0x30)
0066db e0a0      	LDI  R26,HIGH(0x30)
0066dc 07fa      	CPC  R31,R26
0066dd f4c9      	BRNE _0x160049
0066de 940e c80f 	CALL SUBOPT_0x1F0
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
0066e0 e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
0066e1 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
0066e2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
0066e3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
0066e4 940e bdde 	CALL SUBOPT_0x49
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
0066e6 940e c815 	CALL SUBOPT_0x1F1
0066e8 940e 4d88 	CALL _setSensorConfig
0066ea 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
0066eb 2311      	TST  R17
0066ec f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
0066ed e3e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
0066ee e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
0066ef e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
0066f0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
0066f1 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01A6                                         return -3;
0066f3 efed      	LDI  R30,LOW(65533)
0066f4 efff      	LDI  R31,HIGH(65533)
0066f5 c0cf      	RJMP _0x20E0073
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
0066f6 c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
0066f7 34e0      	CPI  R30,LOW(0x40)
0066f8 e0a0      	LDI  R26,HIGH(0x40)
0066f9 07fa      	CPC  R31,R26
0066fa f4c9      	BRNE _0x16004B
0066fb 940e c80f 	CALL SUBOPT_0x1F0
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
0066fd e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
0066fe e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
0066ff e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
006700 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
006701 940e bdde 	CALL SUBOPT_0x49
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
006703 940e c815 	CALL SUBOPT_0x1F1
006705 940e 4ee3 	CALL _setAuxDinConfig
006707 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
006708 2311      	TST  R17
006709 f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
00670a e7ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
00670b e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
00670c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
00670d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
00670e 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01AF                                         return -3;
006710 efed      	LDI  R30,LOW(65533)
006711 efff      	LDI  R31,HIGH(65533)
006712 c0b2      	RJMP _0x20E0073
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
006713 c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
006714 35e0      	CPI  R30,LOW(0x50)
006715 e0a0      	LDI  R26,HIGH(0x50)
006716 07fa      	CPC  R31,R26
006717 f4c9      	BRNE _0x16004D
006718 940e c80f 	CALL SUBOPT_0x1F0
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
00671a eae3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
00671b e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
00671c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
00671d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
00671e 940e bdde 	CALL SUBOPT_0x49
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
006720 940e c815 	CALL SUBOPT_0x1F1
006722 940e 4f2b 	CALL _setAuxDoutConfig
006724 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
006725 2311      	TST  R17
006726 f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
006727 ece3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
006728 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
006729 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
00672a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
00672b 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01B8                                         return -3;
00672d efed      	LDI  R30,LOW(65533)
00672e efff      	LDI  R31,HIGH(65533)
00672f c095      	RJMP _0x20E0073
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
006730 c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
006731 36e0      	CPI  R30,LOW(0x60)
006732 e0a0      	LDI  R26,HIGH(0x60)
006733 07fa      	CPC  R31,R26
006734 f4c9      	BRNE _0x16004F
006735 940e c80f 	CALL SUBOPT_0x1F0
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
006737 eeed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
006738 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
006739 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
00673a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
00673b 940e bdde 	CALL SUBOPT_0x49
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
00673d 940e c815 	CALL SUBOPT_0x1F1
00673f 940e 4fb1 	CALL _setAuxAinConfig
006741 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
006742 2311      	TST  R17
006743 f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
006744 e0ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
006745 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
006746 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
006747 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
006748 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01C1                                         return -3;
00674a efed      	LDI  R30,LOW(65533)
00674b efff      	LDI  R31,HIGH(65533)
00674c c078      	RJMP _0x20E0073
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
00674d c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
00674e 37e0      	CPI  R30,LOW(0x70)
00674f e0a0      	LDI  R26,HIGH(0x70)
006750 07fa      	CPC  R31,R26
006751 f4c9      	BRNE _0x160051
006752 940e c80f 	CALL SUBOPT_0x1F0
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
006754 e3e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
006755 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
006756 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
006757 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
006758 940e bdde 	CALL SUBOPT_0x49
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
00675a 940e c815 	CALL SUBOPT_0x1F1
00675c 940e 4ff1 	CALL _setAuxAoutConfig
00675e 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
00675f 2311      	TST  R17
006760 f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
006761 e5e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
006762 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
006763 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
006764 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
006765 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01CA                                         return -3;
006767 efed      	LDI  R30,LOW(65533)
006768 efff      	LDI  R31,HIGH(65533)
006769 c05b      	RJMP _0x20E0073
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
00676a c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
00676b 38e0      	CPI  R30,LOW(0x80)
00676c e0a0      	LDI  R26,HIGH(0x80)
00676d 07fa      	CPC  R31,R26
00676e f4b9      	BRNE _0x160053
                +
00676f e8e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
006770 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
006771 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
006772 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
006773 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
006775 85a8      	LDD  R26,Y+8
006776 85b9      	LDD  R27,Y+8+1
006777 940e 5084 	CALL _setBuzzerConfig
006779 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
00677a 2311      	TST  R17
00677b f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
00677c e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
00677d e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
00677e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
00677f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
006780 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01D2                                         return -3;
006782 efed      	LDI  R30,LOW(65533)
006783 efff      	LDI  R31,HIGH(65533)
006784 c040      	RJMP _0x20E0073
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
006785 c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
006786 39e0      	CPI  R30,LOW(0x90)
006787 e0a0      	LDI  R26,HIGH(0x90)
006788 07fa      	CPC  R31,R26
006789 f4b9      	BRNE _0x160055
                +
00678a ece5     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
00678b e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
00678c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
00678d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
00678e 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
006790 85a8      	LDD  R26,Y+8
006791 85b9      	LDD  R27,Y+8+1
006792 940e 50e8 	CALL _setEnvAlarmConfig
006794 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
006795 2311      	TST  R17
006796 f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
006797 eee3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
006798 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
006799 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
00679a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
00679b 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01DA                                         return -3;
00679d efed      	LDI  R30,LOW(65533)
00679e efff      	LDI  R31,HIGH(65533)
00679f c025      	RJMP _0x20E0073
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
0067a0 c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
0067a1 3ae0      	CPI  R30,LOW(0xA0)
0067a2 e0a0      	LDI  R26,HIGH(0xA0)
0067a3 07fa      	CPC  R31,R26
0067a4 f4b1      	BRNE _0x160059
                +
0067a5 e0ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
0067a6 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
0067a7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
0067a8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
0067a9 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
0067ab 85a8      	LDD  R26,Y+8
0067ac 85b9      	LDD  R27,Y+8+1
0067ad 940e 5165 	CALL _setStatusReportConfig
0067af 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
0067b0 2311      	TST  R17
0067b1 f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
0067b2 e2ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
0067b3 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
0067b4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
0067b5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
0067b6 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01E2                                         return -3;
0067b8 efed      	LDI  R30,LOW(65533)
0067b9 efff      	LDI  R31,HIGH(65533)
0067ba c00a      	RJMP _0x20E0073
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
0067bb 940e c808 	CALL SUBOPT_0x1EF
0067bd 2fe3      	MOV  R30,R19
0067be 940e bcfe 	CALL SUBOPT_0x29
                 ; 000B 01E6                                     return -1;
0067c0 efef      	LDI  R30,LOW(65535)
0067c1 efff      	LDI  R31,HIGH(65535)
0067c2 c002      	RJMP _0x20E0073
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
0067c3 e0e0      	LDI  R30,LOW(0)
0067c4 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0073:
0067c5 940e daa0 	CALL __LOADLOCR6
0067c7 962b      	ADIW R28,11
0067c8 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
0067c9 940e da2e 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
0067cb 940e bf8b 	CALL SUBOPT_0x89
0067cd 940e bf9e 	CALL SUBOPT_0x8C
0067cf 940e da94 	CALL __CPD21
0067d1 f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
0067d2 e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
0067d3 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
0067d4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
0067d5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
0067d6 940e c81a 	CALL SUBOPT_0x1F2
0067d8 940e c81a 	CALL SUBOPT_0x1F2
0067da 940e bcbc 	CALL SUBOPT_0x20
                 ; 000B 01EF         return -1;
0067dc efef      	LDI  R30,LOW(65535)
0067dd efff      	LDI  R31,HIGH(65535)
0067de c0e4      	RJMP _0x20E0071
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
0067df e0e0      	LDI  R30,LOW(0)
0067e0 e0f0      	LDI  R31,HIGH(0)
0067e1 c0e1      	RJMP _0x20E0071
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
0067e2 940e c7ab 	CALL SUBOPT_0x1DC
0067e4 931a      	ST   -Y,R17
0067e5 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
0067e6 940e c81e 	CALL SUBOPT_0x1F3
0067e8 85e8      	LDD  R30,Y+8
0067e9 85f9      	LDD  R31,Y+8+1
0067ea 940e bdf8 	CALL SUBOPT_0x4D
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
0067ec 940e c823 	CALL SUBOPT_0x1F4
0067ee f449      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
0067ef eae1     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
0067f0 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
0067f1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
0067f2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
0067f3 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 01FE         return -1;
0067f5 efef      	LDI  R30,LOW(65535)
0067f6 efff      	LDI  R31,HIGH(65535)
0067f7 c018      	RJMP _0x20E0072
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
0067f8 eced     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
0067f9 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
0067fa e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
0067fb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
0067fc 940e c827 	CALL SUBOPT_0x1F5
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
0067fe 940e c0ae 	CALL SUBOPT_0xB6
006800 940e 465b 	CALL _RTC_setBinary
006802 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
006803 2311      	TST  R17
006804 f44a      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
006805 e0e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
006806 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
006807 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
006808 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
006809 940e c827 	CALL SUBOPT_0x1F5
                 ; 000B 0206         return -1;
00680b efef      	LDI  R30,LOW(65535)
00680c efff      	LDI  R31,HIGH(65535)
00680d c002      	RJMP _0x20E0072
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
00680e e0e0      	LDI  R30,LOW(0)
00680f e0f0      	LDI  R31,HIGH(0)
                 _0x20E0072:
006810 8119      	LDD  R17,Y+1
006811 8108      	LDD  R16,Y+0
006812 9628      	ADIW R28,8
006813 9508      	RET
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
006814 940e c82b 	CALL SUBOPT_0x1F6
                 ;	period -> Y+2
                 ;	res -> R16,R17
006816 940e c823 	CALL SUBOPT_0x1F4
006818 f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
006819 e3e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
00681a e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
00681b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
00681c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
00681d 940e bbec 	CALL SUBOPT_0x3
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
00681f c024      	RJMP _0x16005E
                 _0x16005D:
006820 940e c0ae 	CALL SUBOPT_0xB6
                +
006822 32ac     +CPI R26 , LOW ( 0x12C )
006823 e0e1     +LDI R30 , HIGH ( 0x12C )
006824 07be     +CPC R27 , R30
006825 e0e0     +LDI R30 , BYTE3 ( 0x12C )
006826 078e     +CPC R24 , R30
006827 e0e0     +LDI R30 , BYTE4 ( 0x12C )
006828 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
006829 f050      	BRLO _0x160060
00682a 940e c0ae 	CALL SUBOPT_0xB6
                +
00682c 38a1     +CPI R26 , LOW ( 0x15181 )
00682d e5e1     +LDI R30 , HIGH ( 0x15181 )
00682e 07be     +CPC R27 , R30
00682f e0e1     +LDI R30 , BYTE3 ( 0x15181 )
006830 078e     +CPC R24 , R30
006831 e0e0     +LDI R30 , BYTE4 ( 0x15181 )
006832 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
006833 f050      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
006834 e5e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
006835 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
006836 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
006837 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
006838 940e c827 	CALL SUBOPT_0x1F5
                 ; 000B 0215         return -1;
00683a 940e c39c 	CALL SUBOPT_0x136
00683c 940c 6a3a 	JMP  _0x20E006B
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
00683e e7ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
00683f e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
006840 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
006841 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
006842 940e c827 	CALL SUBOPT_0x1F5
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
006844 940e c0ae 	CALL SUBOPT_0xB6
006846 940e 7a13 	CALL _ALARM_mute
006848 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
006849 2311      	TST  R17
00684a f452      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
00684b eae9     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
00684c e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
00684d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
00684e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
00684f 940e c827 	CALL SUBOPT_0x1F5
                 ; 000B 021E         return -1;
006851 940e c39c 	CALL SUBOPT_0x136
006853 940c 6a3a 	JMP  _0x20E006B
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
006855 940e c185 	CALL SUBOPT_0xD8
006857 940c 6a3a 	JMP  _0x20E006B
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
006859 e0e0      	LDI  R30,LOW(0)
00685a e0f0      	LDI  R31,HIGH(0)
00685b 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
00685c 940e bf59 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
00685e d0cd      	RCALL _ETH_findFreeSlotWaitQueue
00685f 2f0e      	MOV  R16,R30
006860 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
006861 2311      	TST  R17
006862 f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
006863 ede6     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
006864 e4f2     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
006865 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
006866 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
006867 940e bbec 	CALL SUBOPT_0x3
                 ; 000C 0017         return -1;
006869 efef      	LDI  R30,LOW(65535)
00686a efff      	LDI  R31,HIGH(65535)
00686b c055      	RJMP _0x20E0070
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
00686c 940e c500 	CALL SUBOPT_0x170
                +
00686e 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00686f 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
006870 93ff      	PUSH R31
006871 93ef      	PUSH R30
006872 81ac      	LDD  R26,Y+4
006873 81bd      	LDD  R27,Y+4+1
006874 940e a0d2 	CALL _malloc
006876 91af      	POP  R26
006877 91bf      	POP  R27
006878 93ed      	ST   X+,R30
006879 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
00687a 940e c500 	CALL SUBOPT_0x170
00687c 940e c53d 	CALL SUBOPT_0x177
00687e 9730      	SBIW R30,0
00687f f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
006880 e0eb     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
006881 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
006882 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
006883 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
006884 940e c2fc 	CALL SUBOPT_0x119
                 ; 000C 001F         return -1;
006886 efef      	LDI  R30,LOW(65535)
006887 efff      	LDI  R31,HIGH(65535)
006888 c038      	RJMP _0x20E0070
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
006889 940e c500 	CALL SUBOPT_0x170
00688b 940e c53d 	CALL SUBOPT_0x177
00688d 93fa      	ST   -Y,R31
00688e 93ea      	ST   -Y,R30
00688f 940e c5ee 	CALL SUBOPT_0x195
006891 85a8      	LDD  R26,Y+8
006892 85b9      	LDD  R27,Y+8+1
006893 940e a10f 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
006895 940e c500 	CALL SUBOPT_0x170
                +
006897 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006898 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006899 81ac      	LDD  R26,Y+4
00689a 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
00689b 940e c500 	CALL SUBOPT_0x170
                +
00689d 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00689e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00689f 85a8      	LDD  R26,Y+8
0068a0 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
0068a1 940e c500 	CALL SUBOPT_0x170
0068a3 940e c830 	CALL SUBOPT_0x1F7
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
0068a5 940e c500 	CALL SUBOPT_0x170
                +
0068a7 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
0068a8 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
0068a9 81aa      	LDD  R26,Y+2
0068aa 81bb      	LDD  R27,Y+2+1
0068ab 83a0      	STD  Z+0,R26
0068ac 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
0068ad 940e c500 	CALL SUBOPT_0x170
0068af 940e c52f 	CALL SUBOPT_0x175
0068b1 940e c534 	CALL SUBOPT_0x176
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
0068b3 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
0068b4 e3e2     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
0068b5 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
0068b6 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
0068b7 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
0068b8 940e c835 	CALL SUBOPT_0x1F8
0068ba 01f8      	MOVW R30,R16
0068bb 940e d919 	CALL __CWD1
0068bd 940e bcbc 	CALL SUBOPT_0x20
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
0068bf 2de7      	MOV  R30,R7
0068c0 e0f0      	LDI  R31,0
                 _0x20E0070:
0068c1 8119      	LDD  R17,Y+1
0068c2 8108      	LDD  R16,Y+0
                 _0x20E0071:
0068c3 9629      	ADIW R28,9
0068c4 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0068c5 93aa      	ST   -Y,R26
0068c6 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0068c7 e010      	LDI  R17,LOW(0)
                 _0x180006:
0068c8 301f      	CPI  R17,15
0068c9 f4f8      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
0068ca 940e c83a 	CALL SUBOPT_0x1F9
0068cc 81e0      	LD   R30,Z
0068cd 81a9      	LDD  R26,Y+1
0068ce 17ea      	CP   R30,R26
0068cf f4b9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
0068d0 e0ab      	LDI  R26,LOW(11)
0068d1 9f1a      	MUL  R17,R26
0068d2 01f0      	MOVW R30,R0
0068d3 940e c53d 	CALL SUBOPT_0x177
0068d5 940e c840 	CALL SUBOPT_0x1FA
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
0068d7 940e c854 	CALL SUBOPT_0x1FB
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
0068d9 940e c85a 	CALL SUBOPT_0x1FC
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
0068db 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
0068dc e7ed     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
0068dd e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
0068de e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
0068df e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
0068e0 940e c86d 	CALL SUBOPT_0x1FD
0068e2 940e c872 	CALL SUBOPT_0x1FE
                 ; 000C 0044             return ETH_waitQCount;
0068e4 2de7      	MOV  R30,R7
0068e5 e0f0      	LDI  R31,0
0068e6 c042      	RJMP _0x20E006E
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
0068e7 5f1f      	SUBI R17,-1
0068e8 cfdf      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
0068e9 ecea     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
0068ea e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
0068eb e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
0068ec e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
0068ed 940e da29 	CALL __PUTPARD1
0068ef 81ed      	LDD  R30,Y+5
0068f0 940e bcfe 	CALL SUBOPT_0x29
                 ; 000C 0048     return -1;
0068f2 efef      	LDI  R30,LOW(65535)
0068f3 efff      	LDI  R31,HIGH(65535)
0068f4 c034      	RJMP _0x20E006E
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0068f5 931a      	ST   -Y,R17
                 ;	i -> R17
0068f6 e010      	LDI  R17,LOW(0)
                 _0x18000A:
0068f7 301f      	CPI  R17,15
0068f8 f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
0068f9 e0ab      	LDI  R26,LOW(11)
0068fa 9f1a      	MUL  R17,R26
0068fb 01f0      	MOVW R30,R0
0068fc 940e c53d 	CALL SUBOPT_0x177
0068fe 940e c840 	CALL SUBOPT_0x1FA
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
006900 940e c854 	CALL SUBOPT_0x1FB
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
006902 940e c85a 	CALL SUBOPT_0x1FC
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
006904 5f1f      	SUBI R17,-1
006905 cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
006906 c050      	RJMP _0x20E006C
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006907 93aa      	ST   -Y,R26
006908 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006909 e010      	LDI  R17,LOW(0)
                 _0x18000D:
00690a 301f      	CPI  R17,15
00690b f450      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
00690c 940e c83a 	CALL SUBOPT_0x1F9
00690e 81e0      	LD   R30,Z
00690f 81a9      	LDD  R26,Y+1
006910 17ea      	CP   R30,R26
006911 f411      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
006912 e0e1      	LDI  R30,LOW(1)
006913 c015      	RJMP _0x20E006E
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
006914 5f1f      	SUBI R17,-1
006915 cff4      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
006916 c011      	RJMP _0x20E006F
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
006917 93aa      	ST   -Y,R26
006918 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006919 e010      	LDI  R17,LOW(0)
                 _0x180011:
00691a 3614      	CPI  R17,100
00691b f460      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
00691c 940e c087 	CALL SUBOPT_0xAE
00691e 51e4      	SUBI R30,LOW(-_sess_list)
00691f 4efb      	SBCI R31,HIGH(-_sess_list)
006920 81e0      	LD   R30,Z
006921 81a9      	LDD  R26,Y+1
006922 17ea      	CP   R30,R26
006923 f411      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
006924 e0e1      	LDI  R30,LOW(1)
006925 c003      	RJMP _0x20E006E
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
006926 5f1f      	SUBI R17,-1
006927 cff2      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
                 _0x20E006F:
006928 e0e0      	LDI  R30,LOW(0)
                 _0x20E006E:
006929 8118      	LDD  R17,Y+0
00692a 9622      	ADIW R28,2
00692b 9508      	RET
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
00692c 931a      	ST   -Y,R17
                 ;	i -> R17
00692d e010      	LDI  R17,LOW(0)
                 _0x180015:
00692e 301f      	CPI  R17,15
00692f f450      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
006930 e0ab      	LDI  R26,LOW(11)
006931 9f1a      	MUL  R17,R26
006932 01f0      	MOVW R30,R0
                +
006933 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006934 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006935 81e0      	LD   R30,Z
006936 30e0      	CPI  R30,0
006937 f0f1      	BREQ _0x20E006D
                 ; 000C 0079             return i;
                 ; 000C 007A         }
                 ; 000C 007B     }
006938 5f1f      	SUBI R17,-1
006939 cff4      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
00693a efef      	LDI  R30,LOW(255)
00693b c01b      	RJMP _0x20E006C
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
00693c 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
00693d 940e a01d 	CALL _rand
00693f 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
006940 2fa1      	MOV  R26,R17
006941 dfc5      	RCALL _ETH_isIdExist
006942 30e0      	CPI  R30,0
006943 f441      	BRNE _0x18001B
006944 3010      	CPI  R17,0
006945 f031      	BREQ _0x18001B
006946 3f1f      	CPI  R17,255
006947 f021      	BREQ _0x18001B
006948 2fa1      	MOV  R26,R17
006949 dfcd      	RCALL _ETH_isIdUsed
00694a 30e0      	CPI  R30,0
00694b f009      	BREQ _0x18001A
                 _0x18001B:
00694c cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
00694d 01f4      	MOVW R30,R8
00694e 51e4      	SUBI R30,LOW(-_sess_list)
00694f 4efb      	SBCI R31,HIGH(-_sess_list)
006950 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
006951 01d4      	MOVW R26,R8
006952 9611      	ADIW R26,1
006953 940e c878 	CALL SUBOPT_0x1FF
006955 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
                 _0x20E006D:
006956 2fe1      	MOV  R30,R17
                 _0x20E006C:
006957 9119      	LD   R17,Y+
006958 9508      	RET
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;
                 ;struct sens_val_st      sensor[5];
                 ;
                 ;/******************
                 ;Y = mX + c
                 ;temp = (epFactor_B * adc) + epFactor_C
                 ;******************/
                 ;
                 ;eeprom float            epFactor_A[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_B[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_C[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet1[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef1[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef1[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet2[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef2[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef2[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet3[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef3[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef3[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epCalType[5]            = {CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT};
                 ;
                 ;flash float             epTMECTempSlope         = -0.1114;
                 ;flash float             epTMECTempOffset        = 63.73;
                 ;
                 ;flash float             epPT100TempSlope         = 1.0938;
                 ;flash float             epPT100TempOffset        = -208.42;
                 ;
                 ;//flash float             epPT100Temp_A           = 0.00005;
                 ;//flash float             epPT100Temp_B           = 0.1308;
                 ;//flash float             epPT100Temp_C           = -221.71;
                 ;
                 ;flash float             epPT100Temp_A           = 0.000633;
                 ;flash float             epPT100Temp_B           = 0.162124;
                 ;flash float             epPT100Temp_C           = -180.886306;
                 ;
                 ;// Parameter for sensor pt100
                 ;flash float             tempTable[15]           = {-80.0, -70.0, -60.0, -50.0, -40.0, -30.0, -20.0, -10.0, 0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0};
                 ;//flash float             voltTable[13]           = {0.7276, 0.7734, 0.8176, 0.8604, 0.9019, 0.9420, 0.9810, 1.0188, 1.0556, 1.0912, 1.1259, 1.1596, 1.1924};
                 ;flash float             adcTable[15]            = {290.7750, 309.0467, 326.7189, 343.8240, 360.3923, 376.4502, 392.0239,
                 ;                                                    407.1367, 421.8099, 436.0630, 449.9139, 463.3793, 476.4748, 489.2156, 501.6149};
                 ;
                 ;
                 ;/*============================================================*/
                 ;void updateSensorADC(int ch)
                 ; 000D 003B {
                 
                 	.CSEG
                 _updateSensorADC:
                 ; 000D 003C     //int adc_raw                                     = 0;
                 ; 000D 003D     float adc_raw = 0.0;
                 ; 000D 003E 
                 ; 000D 003F     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006959 940e c7ab 	CALL SUBOPT_0x1DC
                 ;	ch -> Y+4
                 ;	adc_raw -> Y+0
00695b 940e bd1a 	CALL SUBOPT_0x2E
00695d f021      	BREQ _0x1A0004
00695e 940e bd1a 	CALL SUBOPT_0x2E
006960 30e3      	CPI  R30,LOW(0x3)
006961 f419      	BRNE _0x1A0003
                 _0x1A0004:
                 ; 000D 0040         //adc_raw     = read_adc(8);
                 ; 000D 0041         adc_raw     = iSmoothlyADC(8);
006962 940e c7c1 	CALL SUBOPT_0x1E1
006964 c00a      	RJMP _0x1A008E
                 ; 000D 0042     }
                 ; 000D 0043     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A0003:
006965 940e bfe7 	CALL SUBOPT_0x96
006967 f021      	BREQ _0x1A0008
006968 940e bd1a 	CALL SUBOPT_0x2E
00696a 30e2      	CPI  R30,LOW(0x2)
00696b f431      	BRNE _0x1A0007
                 _0x1A0008:
                 ; 000D 0044         //adc_raw     = read_adc(8+ch);
                 ; 000D 0045         adc_raw     = iSmoothlyADC(8+ch);
00696c 81ac      	LDD  R26,Y+4
00696d 81bd      	LDD  R27,Y+4+1
00696e 9618      	ADIW R26,8
                 _0x1A008E:
00696f d0cc      	RCALL _iSmoothlyADC
006970 940e c18a 	CALL SUBOPT_0xD9
                 ; 000D 0046     }
                 ; 000D 0047 
                 ; 000D 0048     if( fabs(adcData[ch] - adc_raw) < 10){
                 _0x1A0007:
006972 940e c87d 	CALL SUBOPT_0x200
006974 940e c881 	CALL SUBOPT_0x201
006976 940e c2b3 	CALL SUBOPT_0x10D
006978 940e d870 	CALL __CMPF12
00697a f4e8      	BRSH _0x1A000A
                 ; 000D 0049         adcData[ch] = (float)((adcData[ch] * 9.9) + (float)(adc_raw * 0.1))/10;           // Temp Sensor Low-Pass Filter
00697b 940e c88c 	CALL SUBOPT_0x202
00697d 93ff      	PUSH R31
00697e 93ef      	PUSH R30
00697f 940e c87d 	CALL SUBOPT_0x200
                +
006981 e6a6     +LDI R26 , LOW ( 0x411E6666 )
006982 e6b6     +LDI R27 , HIGH ( 0x411E6666 )
006983 e18e     +LDI R24 , BYTE3 ( 0x411E6666 )
006984 e491     +LDI R25 , BYTE4 ( 0x411E6666 )
                 	__GETD2N 0x411E6666
006985 940e d7dd 	CALL __MULF12
006987 937f      	PUSH R23
006988 936f      	PUSH R22
006989 93ff      	PUSH R31
00698a 93ef      	PUSH R30
00698b 940e bf9e 	CALL SUBOPT_0x8C
00698d 940e c890 	CALL SUBOPT_0x203
00698f 91af      	POP  R26
006990 91bf      	POP  R27
006991 918f      	POP  R24
006992 919f      	POP  R25
006993 940e c037 	CALL SUBOPT_0xA1
006995 91af      	POP  R26
006996 91bf      	POP  R27
006997 c0a0      	RJMP _0x1A008F
                 ; 000D 004A         //printDebug("<updateSensorADC>        < 10\r\n");
                 ; 000D 004B     }
                 ; 000D 004C     else if( fabs(adcData[ch] - adc_raw) < 30){
                 _0x1A000A:
006998 940e c87d 	CALL SUBOPT_0x200
00699a 940e c881 	CALL SUBOPT_0x201
                +
00699c e0e0     +LDI R30 , LOW ( 0x41F00000 )
00699d e0f0     +LDI R31 , HIGH ( 0x41F00000 )
00699e ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
00699f e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
0069a0 940e d870 	CALL __CMPF12
0069a2 f508      	BRSH _0x1A000C
                 ; 000D 004D         adcData[ch] = (float)((adcData[ch] * 9.5) + (float)(adc_raw * 0.5))/10;           // Temp Sensor Low-Pass Filter
0069a3 940e c88c 	CALL SUBOPT_0x202
0069a5 93ff      	PUSH R31
0069a6 93ef      	PUSH R30
0069a7 940e c87d 	CALL SUBOPT_0x200
                +
0069a9 e0a0     +LDI R26 , LOW ( 0x41180000 )
0069aa e0b0     +LDI R27 , HIGH ( 0x41180000 )
0069ab e188     +LDI R24 , BYTE3 ( 0x41180000 )
0069ac e491     +LDI R25 , BYTE4 ( 0x41180000 )
                 	__GETD2N 0x41180000
0069ad 940e d7dd 	CALL __MULF12
0069af 937f      	PUSH R23
0069b0 936f      	PUSH R22
0069b1 93ff      	PUSH R31
0069b2 93ef      	PUSH R30
0069b3 940e bf9e 	CALL SUBOPT_0x8C
                +
0069b5 e0e0     +LDI R30 , LOW ( 0x3F000000 )
0069b6 e0f0     +LDI R31 , HIGH ( 0x3F000000 )
0069b7 e060     +LDI R22 , BYTE3 ( 0x3F000000 )
0069b8 e37f     +LDI R23 , BYTE4 ( 0x3F000000 )
                 	__GETD1N 0x3F000000
0069b9 940e d7dd 	CALL __MULF12
0069bb 91af      	POP  R26
0069bc 91bf      	POP  R27
0069bd 918f      	POP  R24
0069be 919f      	POP  R25
0069bf 940e c037 	CALL SUBOPT_0xA1
0069c1 91af      	POP  R26
0069c2 91bf      	POP  R27
0069c3 c074      	RJMP _0x1A008F
                 ; 000D 004E         //printDebug("<updateSensorADC>                < 30\r\n");
                 ; 000D 004F     }
                 ; 000D 0050     else if( fabs(adcData[ch] - adc_raw) < 50){
                 _0x1A000C:
0069c4 940e c87d 	CALL SUBOPT_0x200
0069c6 940e c881 	CALL SUBOPT_0x201
                +
0069c8 e0e0     +LDI R30 , LOW ( 0x42480000 )
0069c9 e0f0     +LDI R31 , HIGH ( 0x42480000 )
0069ca e468     +LDI R22 , BYTE3 ( 0x42480000 )
0069cb e472     +LDI R23 , BYTE4 ( 0x42480000 )
                 	__GETD1N 0x42480000
0069cc 940e d870 	CALL __CMPF12
0069ce f508      	BRSH _0x1A000E
                 ; 000D 0051         adcData[ch] = (float)((adcData[ch] * 8.5) + (float)(adc_raw * 1.5))/10;           // Temp Sensor Low-Pass Filter
0069cf 940e c88c 	CALL SUBOPT_0x202
0069d1 93ff      	PUSH R31
0069d2 93ef      	PUSH R30
0069d3 940e c87d 	CALL SUBOPT_0x200
                +
0069d5 e0a0     +LDI R26 , LOW ( 0x41080000 )
0069d6 e0b0     +LDI R27 , HIGH ( 0x41080000 )
0069d7 e088     +LDI R24 , BYTE3 ( 0x41080000 )
0069d8 e491     +LDI R25 , BYTE4 ( 0x41080000 )
                 	__GETD2N 0x41080000
0069d9 940e d7dd 	CALL __MULF12
0069db 937f      	PUSH R23
0069dc 936f      	PUSH R22
0069dd 93ff      	PUSH R31
0069de 93ef      	PUSH R30
0069df 940e bf9e 	CALL SUBOPT_0x8C
                +
0069e1 e0e0     +LDI R30 , LOW ( 0x3FC00000 )
0069e2 e0f0     +LDI R31 , HIGH ( 0x3FC00000 )
0069e3 ec60     +LDI R22 , BYTE3 ( 0x3FC00000 )
0069e4 e37f     +LDI R23 , BYTE4 ( 0x3FC00000 )
                 	__GETD1N 0x3FC00000
0069e5 940e d7dd 	CALL __MULF12
0069e7 91af      	POP  R26
0069e8 91bf      	POP  R27
0069e9 918f      	POP  R24
0069ea 919f      	POP  R25
0069eb 940e c037 	CALL SUBOPT_0xA1
0069ed 91af      	POP  R26
0069ee 91bf      	POP  R27
0069ef c048      	RJMP _0x1A008F
                 ; 000D 0052         //printDebug("<updateSensorADC>                            < 50\r\n");
                 ; 000D 0053     }
                 ; 000D 0054     else if( fabs(adcData[ch] - adc_raw) < 100){
                 _0x1A000E:
0069f0 940e c87d 	CALL SUBOPT_0x200
0069f2 940e c881 	CALL SUBOPT_0x201
                +
0069f4 e0e0     +LDI R30 , LOW ( 0x42C80000 )
0069f5 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
0069f6 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
0069f7 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
0069f8 940e d870 	CALL __CMPF12
0069fa f4e8      	BRSH _0x1A0010
                 ; 000D 0055         adcData[ch] = (float)((adcData[ch] * 7.0) + (float)(adc_raw * 3.0))/10;           // Temp Sensor Low-Pass Filter
0069fb 940e c88c 	CALL SUBOPT_0x202
0069fd 93ff      	PUSH R31
0069fe 93ef      	PUSH R30
0069ff 940e c87d 	CALL SUBOPT_0x200
                +
006a01 e0a0     +LDI R26 , LOW ( 0x40E00000 )
006a02 e0b0     +LDI R27 , HIGH ( 0x40E00000 )
006a03 ee80     +LDI R24 , BYTE3 ( 0x40E00000 )
006a04 e490     +LDI R25 , BYTE4 ( 0x40E00000 )
                 	__GETD2N 0x40E00000
006a05 940e d7dd 	CALL __MULF12
006a07 937f      	PUSH R23
006a08 936f      	PUSH R22
006a09 93ff      	PUSH R31
006a0a 93ef      	PUSH R30
006a0b 940e c897 	CALL SUBOPT_0x204
006a0d 940e d7dd 	CALL __MULF12
006a0f 91af      	POP  R26
006a10 91bf      	POP  R27
006a11 918f      	POP  R24
006a12 919f      	POP  R25
006a13 940e c037 	CALL SUBOPT_0xA1
006a15 91af      	POP  R26
006a16 91bf      	POP  R27
006a17 c020      	RJMP _0x1A008F
                 ; 000D 0056         //printDebug("<updateSensorADC>                                    < 100\r\n");
                 ; 000D 0057     }
                 ; 000D 0058     else{
                 _0x1A0010:
                 ; 000D 0059         adcData[ch] = (float)((adcData[ch] * 5.0) + (float)(adc_raw * 5.0))/10;           // Temp Sensor Low-Pass Filter
006a18 940e c88c 	CALL SUBOPT_0x202
006a1a 93ff      	PUSH R31
006a1b 93ef      	PUSH R30
006a1c 940e c87d 	CALL SUBOPT_0x200
                +
006a1e e0a0     +LDI R26 , LOW ( 0x40A00000 )
006a1f e0b0     +LDI R27 , HIGH ( 0x40A00000 )
006a20 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
006a21 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
006a22 940e d7dd 	CALL __MULF12
006a24 937f      	PUSH R23
006a25 936f      	PUSH R22
006a26 93ff      	PUSH R31
006a27 93ef      	PUSH R30
006a28 940e bf9e 	CALL SUBOPT_0x8C
                +
006a2a e0e0     +LDI R30 , LOW ( 0x40A00000 )
006a2b e0f0     +LDI R31 , HIGH ( 0x40A00000 )
006a2c ea60     +LDI R22 , BYTE3 ( 0x40A00000 )
006a2d e470     +LDI R23 , BYTE4 ( 0x40A00000 )
                 	__GETD1N 0x40A00000
006a2e 940e d7dd 	CALL __MULF12
006a30 91af      	POP  R26
006a31 91bf      	POP  R27
006a32 918f      	POP  R24
006a33 919f      	POP  R25
006a34 940e c037 	CALL SUBOPT_0xA1
006a36 91af      	POP  R26
006a37 91bf      	POP  R27
                 _0x1A008F:
006a38 940e d9ff 	CALL __PUTDP1
                 ; 000D 005A         //printDebug("<updateSensorADC>                                            >= 100\r\n");
                 ; 000D 005B     }
                 ; 000D 005C 
                 ; 000D 005D     return;
                 _0x20E006B:
006a3a 9626      	ADIW R28,6
006a3b 9508      	RET
                 ; 000D 005E }
                 ;float iSmoothlyADC(int  viADCCh_arg){
                 ; 000D 005F float iSmoothlyADC(int  viADCCh_arg){
                 _iSmoothlyADC:
                 ; 000D 0060     float viDataBuffer = 0.0;
                 ; 000D 0061     int viLoopLimit = 20;
                 ; 000D 0062     int i=0;
                 ; 000D 0063 
                 ; 000D 0064     for(i=0;i<viLoopLimit;i++){
006a3c 940e c7ab 	CALL SUBOPT_0x1DC
006a3e 940e da9b 	CALL __SAVELOCR4
                 ;	viADCCh_arg -> Y+8
                 ;	viDataBuffer -> Y+4
                 ;	viLoopLimit -> R16,R17
                 ;	i -> R18,R19
                +
006a40 e104     +LDI R16 , LOW ( 20 )
006a41 e010     +LDI R17 , HIGH ( 20 )
                 	__GETWRN 16,17,20
                +
006a42 e020     +LDI R18 , LOW ( 0 )
006a43 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
006a44 e020     +LDI R18 , LOW ( 0 )
006a45 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1A0013:
                +
006a46 1720     +CP R18 , R16
006a47 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
006a48 f474      	BRGE _0x1A0014
                 ; 000D 0065         viDataBuffer += read_adc(viADCCh_arg);
006a49 85a8      	LDD  R26,Y+8
006a4a 940e 42cc 	CALL _read_adc
006a4c 940e c075 	CALL SUBOPT_0xAB
006a4e 940e c02b 	CALL SUBOPT_0x9F
006a50 940e d78d 	CALL __ADDF12
006a52 940e c070 	CALL SUBOPT_0xAA
                 ; 000D 0066     }
                +
006a54 5f2f     +SUBI R18 , LOW ( - 1 )
006a55 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006a56 cfef      	RJMP _0x1A0013
                 _0x1A0014:
                 ; 000D 0067 
                 ; 000D 0068     return  (float)(viDataBuffer/((float)viLoopLimit));
006a57 01f8      	MOVW R30,R16
006a58 940e c89e 	CALL SUBOPT_0x205
006a5a 940e c075 	CALL SUBOPT_0xAB
006a5c 940e d82b 	CALL __DIVF21
006a5e 940e daa2 	CALL __LOADLOCR4
006a60 962a      	ADIW R28,10
006a61 9508      	RET
                 ; 000D 0069 }
                 ;/*============================================================*/
                 ;int sensorRead(int ch, struct sens_val_st *sensor)
                 ; 000D 006C {
                 _sensorRead:
                 ; 000D 006D     static TIMER t[MAX_SENS_CHANNEL]                = {0,0,0,0,0};
                 ; 000D 006E     static char lastCheck[MAX_SENS_CHANNEL]         = {0xFF,0xFF,0xFF,0xFF,0xFF};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000D 006F     static char steadyState[MAX_SENS_CHANNEL]       = {0,0,0,0,0};
                 ; 000D 0070     char channelConnect                             = 0;
                 ; 000D 0071     float x_1 = 0.0;
                 ; 000D 0072     float x_2 = 0.0;
                 ; 000D 0073     float y_1 = 0.0;
                 ; 000D 0074     float y_2 = 0.0;
                 ; 000D 0075 
                 ; 000D 0076     if( (ch<0) || (ch>=MAX_SENS_CHANNEL) ){
006a62 93ba      	ST   -Y,R27
006a63 93aa      	ST   -Y,R26
006a64 9760      	SBIW R28,16
006a65 e180      	LDI  R24,16
006a66 e0a0      	LDI  R26,LOW(0)
006a67 e0b0      	LDI  R27,HIGH(0)
006a68 e0e8      	LDI  R30,LOW(_0x1A0016*2)
006a69 e4f4      	LDI  R31,HIGH(_0x1A0016*2)
006a6a e060      	LDI  R22,BYTE3(_0x1A0016*2)
006a6b 940e daa7 	CALL __INITLOCB
006a6d 931a      	ST   -Y,R17
                 ;	ch -> Y+19
                 ;	*sensor -> Y+17
                 ;	channelConnect -> R17
                 ;	x_1 -> Y+13
                 ;	x_2 -> Y+9
                 ;	y_1 -> Y+5
                 ;	y_2 -> Y+1
006a6e e010      	LDI  R17,0
006a6f 89ac      	LDD  R26,Y+20
006a70 23aa      	TST  R26
006a71 f022      	BRMI _0x1A0018
006a72 89ab      	LDD  R26,Y+19
006a73 89bc      	LDD  R27,Y+19+1
006a74 9715      	SBIW R26,5
006a75 f04c      	BRLT _0x1A0017
                 _0x1A0018:
                 ; 000D 0077         printDebug("<sensorRead> ERR: ch value out of range\r\n");
                +
006a76 e1e8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 0 ) )
006a77 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 0 ) )
006a78 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 0 ) )
006a79 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 0 ) )
                 	__POINTD1FN _0x1A0000,0
006a7a 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 0078         return -3;
006a7c efed      	LDI  R30,LOW(65533)
006a7d efff      	LDI  R31,HIGH(65533)
006a7e c1e5      	RJMP _0x20E006A
                 ; 000D 0079     }
                 ; 000D 007A 
                 ; 000D 007B     // ----- Check Sensor Status (Connected-Disconnected) ----- //
                 ; 000D 007C     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0017:
006a7f 940e bd1a 	CALL SUBOPT_0x2E
006a81 f021      	BREQ _0x1A001B
006a82 940e bd1a 	CALL SUBOPT_0x2E
006a84 30e3      	CPI  R30,LOW(0x3)
006a85 f449      	BRNE _0x1A001A
                 _0x1A001B:
                 ; 000D 007D         SENSOR_SELECT(ch);
006a86 940e c047 	CALL SUBOPT_0xA3
006a88 89eb      	LDD  R30,Y+19
006a89 940e c051 	CALL SUBOPT_0xA4
                 ; 000D 007E         delay_ms(20);                                               // -- for multiplex stable -- //
                 ; 000D 007F         channelConnect = SENSOR_CONNECT;
006a8b 940e bd25 	CALL SUBOPT_0x2F
006a8d 2f1e      	MOV  R17,R30
                 ; 000D 0080     }
                 ; 000D 0081     else if(TEMP_SEL == TEMP_TMEC){
006a8e c045      	RJMP _0x1A001D
                 _0x1A001A:
006a8f 940e bd1a 	CALL SUBOPT_0x2E
006a91 30e1      	CPI  R30,LOW(0x1)
006a92 f4f9      	BRNE _0x1A001E
                 ; 000D 0082 
                 ; 000D 0083         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006a93 940e c8a3 	CALL SUBOPT_0x206
                 ; 000D 0084 
                 ; 000D 0085         if(adcData[ch] < TMEC_SHORT_LIMIT){
006a95 01df      	MOVW R26,R30
006a96 01cb      	MOVW R24,R22
                +
006a97 e0e0     +LDI R30 , LOW ( 0x40000000 )
006a98 e0f0     +LDI R31 , HIGH ( 0x40000000 )
006a99 e060     +LDI R22 , BYTE3 ( 0x40000000 )
006a9a e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
006a9b 940e d870 	CALL __CMPF12
006a9d f410      	BRSH _0x1A001F
                 ; 000D 0086             channelConnect  = SENS_ERR_SHORT;
006a9e e910      	LDI  R17,LOW(144)
                 ; 000D 0087         }
                 ; 000D 0088         else if(adcData[ch] > TMEC_OPEN_LIMIT){
006a9f c011      	RJMP _0x1A0020
                 _0x1A001F:
006aa0 940e c8ab 	CALL SUBOPT_0x207
006aa2 01df      	MOVW R26,R30
006aa3 01cb      	MOVW R24,R22
                +
006aa4 e0e0     +LDI R30 , LOW ( 0x447F4000 )
006aa5 e4f0     +LDI R31 , HIGH ( 0x447F4000 )
006aa6 e76f     +LDI R22 , BYTE3 ( 0x447F4000 )
006aa7 e474     +LDI R23 , BYTE4 ( 0x447F4000 )
                 	__GETD1N 0x447F4000
006aa8 940e d870 	CALL __CMPF12
006aaa f009      	BREQ PC+2
006aab f410      	BRCC PC+3
006aac 940c 6ab0 	JMP  _0x1A0021
                 ; 000D 0089             channelConnect  = SENS_ERR_DISCONNECT;
006aae e814      	LDI  R17,LOW(132)
                 ; 000D 008A         }
                 ; 000D 008B         else{
006aaf c001      	RJMP _0x1A0022
                 _0x1A0021:
                 ; 000D 008C             channelConnect  = SENS_NORMAL;
006ab0 e010      	LDI  R17,LOW(0)
                 ; 000D 008D         }
                 _0x1A0022:
                 _0x1A0020:
                 ; 000D 008E     }
                 ; 000D 008F     else if(TEMP_SEL == TEMP_PT100){
006ab1 c022      	RJMP _0x1A0023
                 _0x1A001E:
006ab2 940e bd1a 	CALL SUBOPT_0x2E
006ab4 30e2      	CPI  R30,LOW(0x2)
006ab5 f4f1      	BRNE _0x1A0024
                 ; 000D 0090 
                 ; 000D 0091         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006ab6 940e c8a3 	CALL SUBOPT_0x206
                 ; 000D 0092 
                 ; 000D 0093         if(adcData[ch] < PT100_SHORT_LIMIT){
006ab8 01df      	MOVW R26,R30
006ab9 01cb      	MOVW R24,R22
                +
006aba e0e0     +LDI R30 , LOW ( 0x41000000 )
006abb e0f0     +LDI R31 , HIGH ( 0x41000000 )
006abc e060     +LDI R22 , BYTE3 ( 0x41000000 )
006abd e471     +LDI R23 , BYTE4 ( 0x41000000 )
                 	__GETD1N 0x41000000
006abe 940e d870 	CALL __CMPF12
006ac0 f410      	BRSH _0x1A0025
                 ; 000D 0094             channelConnect  = SENS_ERR_SHORT;
006ac1 e910      	LDI  R17,LOW(144)
                 ; 000D 0095         }
                 ; 000D 0096         else if(adcData[ch] > PT100_OPEN_LIMIT){
006ac2 c011      	RJMP _0x1A0026
                 _0x1A0025:
006ac3 940e c8ab 	CALL SUBOPT_0x207
006ac5 01df      	MOVW R26,R30
006ac6 01cb      	MOVW R24,R22
                +
006ac7 e0e0     +LDI R30 , LOW ( 0x44728000 )
006ac8 e8f0     +LDI R31 , HIGH ( 0x44728000 )
006ac9 e762     +LDI R22 , BYTE3 ( 0x44728000 )
006aca e474     +LDI R23 , BYTE4 ( 0x44728000 )
                 	__GETD1N 0x44728000
006acb 940e d870 	CALL __CMPF12
006acd f009      	BREQ PC+2
006ace f410      	BRCC PC+3
006acf 940c 6ad3 	JMP  _0x1A0027
                 ; 000D 0097             channelConnect  = SENS_ERR_DISCONNECT;
006ad1 e814      	LDI  R17,LOW(132)
                 ; 000D 0098         }
                 ; 000D 0099         else{
006ad2 c001      	RJMP _0x1A0028
                 _0x1A0027:
                 ; 000D 009A             channelConnect  = SENS_NORMAL;
006ad3 e010      	LDI  R17,LOW(0)
                 ; 000D 009B         }
                 _0x1A0028:
                 _0x1A0026:
                 ; 000D 009C     }
                 ; 000D 009D 
                 ; 000D 009E     // ----- Confirm Sensor Status Stable ----- //
                 ; 000D 009F     if(channelConnect != lastCheck[ch])
                 _0x1A0024:
                 _0x1A0023:
                 _0x1A001D:
006ad4 89eb      	LDD  R30,Y+19
006ad5 89fc      	LDD  R31,Y+19+1
006ad6 59ec      	SUBI R30,LOW(-_lastCheck_S00D0002000)
006ad7 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0002000)
006ad8 81e0      	LD   R30,Z
006ad9 17e1      	CP   R30,R17
006ada f089      	BREQ _0x1A0029
                 ; 000D 00A0     {
                 ; 000D 00A1         TIMER_setTimer(&t[ch],5);
006adb 89eb      	LDD  R30,Y+19
006adc 89fc      	LDD  R31,Y+19+1
006add e5a0      	LDI  R26,LOW(_t_S00D0002000)
006ade e1b5      	LDI  R27,HIGH(_t_S00D0002000)
006adf 940e bca8 	CALL SUBOPT_0x1C
006ae1 940e c8af 	CALL SUBOPT_0x208
                 ; 000D 00A2         lastCheck[ch]       = channelConnect;
006ae3 89eb      	LDD  R30,Y+19
006ae4 89fc      	LDD  R31,Y+19+1
006ae5 59ec      	SUBI R30,LOW(-_lastCheck_S00D0002000)
006ae6 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0002000)
006ae7 8310      	ST   Z,R17
                 ; 000D 00A3         steadyState[ch]     = 0;
006ae8 940e c8b7 	CALL SUBOPT_0x209
006aea e0a0      	LDI  R26,LOW(0)
006aeb c011      	RJMP _0x1A0090
                 ; 000D 00A4     }
                 ; 000D 00A5     else if(!steadyState[ch])
                 _0x1A0029:
006aec 940e c8b7 	CALL SUBOPT_0x209
006aee 81e0      	LD   R30,Z
006aef 30e0      	CPI  R30,0
006af0 f469      	BRNE _0x1A002B
                 ; 000D 00A6     {
                 ; 000D 00A7         if(TIMER_checkTimerExceed(t[ch])){
006af1 89eb      	LDD  R30,Y+19
006af2 89fc      	LDD  R31,Y+19+1
006af3 e5a0      	LDI  R26,LOW(_t_S00D0002000)
006af4 e1b5      	LDI  R27,HIGH(_t_S00D0002000)
006af5 940e bc9b 	CALL SUBOPT_0x1A
006af7 940e bca2 	CALL SUBOPT_0x1B
006af9 f021      	BREQ _0x1A002C
                 ; 000D 00A8             steadyState[ch] = 1;
006afa 940e c8b7 	CALL SUBOPT_0x209
006afc e0a1      	LDI  R26,LOW(1)
                 _0x1A0090:
006afd 83a0      	STD  Z+0,R26
                 ; 000D 00A9         }
                 ; 000D 00AA     }
                 _0x1A002C:
                 ; 000D 00AB 
                 ; 000D 00AC     if(!steadyState[ch])
                 _0x1A002B:
006afe 940e c8b7 	CALL SUBOPT_0x209
006b00 81e0      	LD   R30,Z
006b01 30e0      	CPI  R30,0
006b02 f441      	BRNE _0x1A002D
                 ; 000D 00AD     {
                 ; 000D 00AE         //printDebug("<sensorRead> sensor %d state unstable\r\n",ch+1);
                 ; 000D 00AF         sensor->status  = SENS_ERR_UNKNOWN;
006b03 89a9      	LDD  R26,Y+17
006b04 89ba      	LDD  R27,Y+17+1
006b05 9614      	ADIW R26,4
006b06 efef      	LDI  R30,LOW(255)
006b07 93ec      	ST   X,R30
                 ; 000D 00B0         return -9;
006b08 efe7      	LDI  R30,LOW(65527)
006b09 efff      	LDI  R31,HIGH(65527)
006b0a c159      	RJMP _0x20E006A
                 ; 000D 00B1     }
                 ; 000D 00B2 
                 ; 000D 00B3     // ----- Return if Sensor Data is not available ----- //
                 ; 000D 00B4     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED))
                 _0x1A002D:
006b0b 940e bd1a 	CALL SUBOPT_0x2E
006b0d f021      	BREQ _0x1A002F
006b0e 940e bd1a 	CALL SUBOPT_0x2E
006b10 30e3      	CPI  R30,LOW(0x3)
006b11 f459      	BRNE _0x1A002E
                 _0x1A002F:
                 ; 000D 00B5     {
                 ; 000D 00B6         if(!channelConnect){
006b12 3010      	CPI  R17,0
006b13 f441      	BRNE _0x1A0031
                 ; 000D 00B7             sensor->status  = SENS_ERR_DISCONNECT;
006b14 89a9      	LDD  R26,Y+17
006b15 89ba      	LDD  R27,Y+17+1
006b16 9614      	ADIW R26,4
006b17 e8e4      	LDI  R30,LOW(132)
006b18 93ec      	ST   X,R30
                 ; 000D 00B8             return -2;
006b19 efee      	LDI  R30,LOW(65534)
006b1a efff      	LDI  R31,HIGH(65534)
006b1b c148      	RJMP _0x20E006A
                 ; 000D 00B9         }
                 ; 000D 00BA 
                 ; 000D 00BB         updateSensorADC(ch);                            // -- update adcData[ch] -- //
                 _0x1A0031:
006b1c c011      	RJMP _0x1A0091
                 ; 000D 00BC     }
                 ; 000D 00BD     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A002E:
006b1d 940e bfe7 	CALL SUBOPT_0x96
006b1f f021      	BREQ _0x1A0034
006b20 940e bd1a 	CALL SUBOPT_0x2E
006b22 30e2      	CPI  R30,LOW(0x2)
006b23 f469      	BRNE _0x1A0033
                 _0x1A0034:
                 ; 000D 00BE         if(channelConnect != SENS_NORMAL){
006b24 3010      	CPI  R17,0
006b25 f041      	BREQ _0x1A0036
                 ; 000D 00BF             sensor->status  = channelConnect;
006b26 2fe1      	MOV  R30,R17
                +
006b27 89a9     +LDD R26 , Y + 17
006b28 89ba     +LDD R27 , Y + 17 + 1
006b29 9614     +ADIW R26 , 4
006b2a 93ec     +ST X , R30
                 	__PUTB1SNS 17,4
                 ; 000D 00C0             return -2;
006b2b efee      	LDI  R30,LOW(65534)
006b2c efff      	LDI  R31,HIGH(65534)
006b2d c136      	RJMP _0x20E006A
                 ; 000D 00C1         }
                 ; 000D 00C2 
                 ; 000D 00C3         updateSensorADC(ch);                            // -- update adcData[ch] -- again ^_^ --- //
                 _0x1A0036:
                 _0x1A0091:
006b2e 89ab      	LDD  R26,Y+19
006b2f 89bc      	LDD  R27,Y+19+1
006b30 de28      	RCALL _updateSensorADC
                 ; 000D 00C4     }
                 ; 000D 00C5 
                 ; 000D 00C6     switch(epCalType[ch]){
                 _0x1A0033:
006b31 89ab      	LDD  R26,Y+19
006b32 89bc      	LDD  R27,Y+19+1
006b33 5aa8      	SUBI R26,LOW(-_epCalType)
006b34 4fb9      	SBCI R27,HIGH(-_epCalType)
006b35 940e da50 	CALL __EEPROMRDB
006b37 940e c8bc 	CALL SUBOPT_0x20A
                 ; 000D 00C7         case CAL_SELFCOMPARE    :   // --- Same as CAL_EXTOFFSET --- //
006b39 f031      	BREQ _0x1A003B
                 ; 000D 00C8         case CAL_EXTOFFSET      :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006b3a 30e2      	CPI  R30,LOW(0x2)
006b3b e0a0      	LDI  R26,HIGH(0x2)
006b3c 07fa      	CPC  R31,R26
006b3d f011      	BREQ PC+3
006b3e 940c 6ba8 	JMP _0x1A003C
                 _0x1A003B:
006b40 940e bd1a 	CALL SUBOPT_0x2E
006b42 f021      	BREQ _0x1A003E
006b43 940e bd1a 	CALL SUBOPT_0x2E
006b45 30e3      	CPI  R30,LOW(0x3)
006b46 f4d9      	BRNE _0x1A003D
                 _0x1A003E:
                 ; 000D 00C9                                         sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]) + epFactor_C[ch];
006b47 940e bd36 	CALL SUBOPT_0x32
006b49 940e bd43 	CALL SUBOPT_0x33
006b4b 937f      	PUSH R23
006b4c 936f      	PUSH R22
006b4d 93ff      	PUSH R31
006b4e 93ef      	PUSH R30
006b4f 940e c8ab 	CALL SUBOPT_0x207
006b51 91af      	POP  R26
006b52 91bf      	POP  R27
006b53 918f      	POP  R24
006b54 919f      	POP  R25
006b55 940e d7dd 	CALL __MULF12
006b57 937f      	PUSH R23
006b58 936f      	PUSH R22
006b59 93ff      	PUSH R31
006b5a 93ef      	PUSH R30
006b5b 940e c8c1 	CALL SUBOPT_0x20B
006b5d 91af      	POP  R26
006b5e 91bf      	POP  R27
006b5f 918f      	POP  R24
006b60 919f      	POP  R25
006b61 c03f      	RJMP _0x1A0092
                 ; 000D 00CA                                     }
                 ; 000D 00CB                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A003D:
006b62 940e bd1a 	CALL SUBOPT_0x2E
006b64 30e1      	CPI  R30,LOW(0x1)
006b65 f479      	BRNE _0x1A0041
                 ; 000D 00CC                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epFactor_C[ch];
006b66 940e c8ab 	CALL SUBOPT_0x207
006b68 940e c8cc 	CALL SUBOPT_0x20C
006b6a 937f      	PUSH R23
006b6b 936f      	PUSH R22
006b6c 93ff      	PUSH R31
006b6d 93ef      	PUSH R30
006b6e 940e c8c1 	CALL SUBOPT_0x20B
006b70 91af      	POP  R26
006b71 91bf      	POP  R27
006b72 918f      	POP  R24
006b73 919f      	POP  R25
006b74 c02c      	RJMP _0x1A0092
                 ; 000D 00CD                                     }
                 ; 000D 00CE                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0041:
006b75 940e bd1a 	CALL SUBOPT_0x2E
006b77 30e2      	CPI  R30,LOW(0x2)
006b78 f571      	BRNE _0x1A0043
                 ; 000D 00CF                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 00D0                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 00D1                                                              epFactor_C[ch];
006b79 940e c8ab 	CALL SUBOPT_0x207
006b7b 940e c8d3 	CALL SUBOPT_0x20D
006b7d 937f      	PUSH R23
006b7e 936f      	PUSH R22
006b7f 93ff      	PUSH R31
006b80 93ef      	PUSH R30
006b81 940e c8ab 	CALL SUBOPT_0x207
006b83 91af      	POP  R26
006b84 91bf      	POP  R27
006b85 918f      	POP  R24
006b86 919f      	POP  R25
006b87 940e d7dd 	CALL __MULF12
006b89 937f      	PUSH R23
006b8a 936f      	PUSH R22
006b8b 93ff      	PUSH R31
006b8c 93ef      	PUSH R30
006b8d 940e c8ab 	CALL SUBOPT_0x207
006b8f 940e c8da 	CALL SUBOPT_0x20E
006b91 91af      	POP  R26
006b92 91bf      	POP  R27
006b93 918f      	POP  R24
006b94 919f      	POP  R25
006b95 940e d78d 	CALL __ADDF12
006b97 937f      	PUSH R23
006b98 936f      	PUSH R22
006b99 93ff      	PUSH R31
006b9a 93ef      	PUSH R30
006b9b 940e c8c1 	CALL SUBOPT_0x20B
006b9d 91af      	POP  R26
006b9e 91bf      	POP  R27
006b9f 918f      	POP  R24
006ba0 919f      	POP  R25
                 _0x1A0092:
006ba1 940e d78d 	CALL __ADDF12
006ba3 89a9      	LDD  R26,Y+17
006ba4 89ba      	LDD  R27,Y+17+1
006ba5 940e d9ff 	CALL __PUTDP1
                 ; 000D 00D2 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epFactor_C[ch];
                 ; 000D 00D3                                     }
                 ; 000D 00D4                                     break;
                 _0x1A0043:
006ba7 c0b5      	RJMP _0x1A0039
                 ; 000D 00D5         case CAL_EXTLINEAR      :   sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
                 _0x1A003C:
006ba8 30e3      	CPI  R30,LOW(0x3)
006ba9 e0a0      	LDI  R26,HIGH(0x3)
006baa 07fa      	CPC  R31,R26
006bab f4c9      	BRNE _0x1A0044
006bac 940e c8e1 	CALL SUBOPT_0x20F
006bae 937f      	PUSH R23
006baf 936f      	PUSH R22
006bb0 93ff      	PUSH R31
006bb1 93ef      	PUSH R30
006bb2 940e c8ab 	CALL SUBOPT_0x207
006bb4 91af      	POP  R26
006bb5 91bf      	POP  R27
006bb6 918f      	POP  R24
006bb7 919f      	POP  R25
006bb8 940e d7dd 	CALL __MULF12
006bba 937f      	PUSH R23
006bbb 936f      	PUSH R22
006bbc 93ff      	PUSH R31
006bbd 93ef      	PUSH R30
006bbe 940e c8c1 	CALL SUBOPT_0x20B
006bc0 91af      	POP  R26
006bc1 91bf      	POP  R27
006bc2 918f      	POP  R24
006bc3 919f      	POP  R25
006bc4 c092      	RJMP _0x1A0093
                 ; 000D 00D6                                     break;
                 ; 000D 00D7         case CAL_EXTPOLYNOMIAL  :   sensor->value   =   (epFactor_A[ch]   * adcData[ch] * adcData[ch]) +
                 _0x1A0044:
006bc5 30e4      	CPI  R30,LOW(0x4)
006bc6 e0a0      	LDI  R26,HIGH(0x4)
006bc7 07fa      	CPC  R31,R26
006bc8 f011      	BREQ PC+3
006bc9 940c 6c0c 	JMP _0x1A0046
                 ; 000D 00D8                                                         (epFactor_B[ch]   * adcData[ch]) +
                 ; 000D 00D9                                                          epFactor_C[ch];
006bcb 89eb      	LDD  R30,Y+19
006bcc 89fc      	LDD  R31,Y+19+1
006bcd 940e c8ec 	CALL SUBOPT_0x210
006bcf 940e da48 	CALL __EEPROMRDD
006bd1 937f      	PUSH R23
006bd2 936f      	PUSH R22
006bd3 93ff      	PUSH R31
006bd4 93ef      	PUSH R30
006bd5 940e c8ab 	CALL SUBOPT_0x207
006bd7 91af      	POP  R26
006bd8 91bf      	POP  R27
006bd9 918f      	POP  R24
006bda 919f      	POP  R25
006bdb 940e d7dd 	CALL __MULF12
006bdd 937f      	PUSH R23
006bde 936f      	PUSH R22
006bdf 93ff      	PUSH R31
006be0 93ef      	PUSH R30
006be1 940e c8ab 	CALL SUBOPT_0x207
006be3 91af      	POP  R26
006be4 91bf      	POP  R27
006be5 918f      	POP  R24
006be6 919f      	POP  R25
006be7 940e d7dd 	CALL __MULF12
006be9 937f      	PUSH R23
006bea 936f      	PUSH R22
006beb 93ff      	PUSH R31
006bec 93ef      	PUSH R30
006bed 940e c8e1 	CALL SUBOPT_0x20F
006bef 937f      	PUSH R23
006bf0 936f      	PUSH R22
006bf1 93ff      	PUSH R31
006bf2 93ef      	PUSH R30
006bf3 940e c8ab 	CALL SUBOPT_0x207
006bf5 91af      	POP  R26
006bf6 91bf      	POP  R27
006bf7 918f      	POP  R24
006bf8 919f      	POP  R25
006bf9 940e d7dd 	CALL __MULF12
006bfb 91af      	POP  R26
006bfc 91bf      	POP  R27
006bfd 918f      	POP  R24
006bfe 919f      	POP  R25
006bff 940e d78d 	CALL __ADDF12
006c01 937f      	PUSH R23
006c02 936f      	PUSH R22
006c03 93ff      	PUSH R31
006c04 93ef      	PUSH R30
006c05 940e c8c1 	CALL SUBOPT_0x20B
006c07 91af      	POP  R26
006c08 91bf      	POP  R27
006c09 918f      	POP  R24
006c0a 919f      	POP  R25
006c0b c04b      	RJMP _0x1A0093
                 ; 000D 00DA                                     break;
                 ; 000D 00DB         default                 :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0046:
006c0c 940e bd1a 	CALL SUBOPT_0x2E
006c0e f021      	BREQ _0x1A0048
006c0f 940e bd1a 	CALL SUBOPT_0x2E
006c11 30e3      	CPI  R30,LOW(0x3)
006c12 f489      	BRNE _0x1A0047
                 _0x1A0048:
                 ; 000D 00DC                                         sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]);
006c13 940e bd36 	CALL SUBOPT_0x32
006c15 940e bd43 	CALL SUBOPT_0x33
006c17 937f      	PUSH R23
006c18 936f      	PUSH R22
006c19 93ff      	PUSH R31
006c1a 93ef      	PUSH R30
006c1b 940e c8ab 	CALL SUBOPT_0x207
006c1d 91af      	POP  R26
006c1e 91bf      	POP  R27
006c1f 918f      	POP  R24
006c20 919f      	POP  R25
006c21 940e d7dd 	CALL __MULF12
006c23 c035      	RJMP _0x1A0094
                 ; 000D 00DD                                     }
                 ; 000D 00DE                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0047:
006c24 940e bd1a 	CALL SUBOPT_0x2E
006c26 30e1      	CPI  R30,LOW(0x1)
006c27 f449      	BRNE _0x1A004B
                 ; 000D 00DF                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epTMECTempOffset;
006c28 940e c8ab 	CALL SUBOPT_0x207
006c2a 940e c8cc 	CALL SUBOPT_0x20C
                +
006c2c e8a5     +LDI R26 , LOW ( 0x427EEB85 )
006c2d eebb     +LDI R27 , HIGH ( 0x427EEB85 )
006c2e e78e     +LDI R24 , BYTE3 ( 0x427EEB85 )
006c2f e492     +LDI R25 , BYTE4 ( 0x427EEB85 )
                 	__GETD2N 0x427EEB85
006c30 c026      	RJMP _0x1A0093
                 ; 000D 00E0                                     }
                 ; 000D 00E1                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A004B:
006c31 940e bd1a 	CALL SUBOPT_0x2E
006c33 30e2      	CPI  R30,LOW(0x2)
006c34 f541      	BRNE _0x1A004D
                 ; 000D 00E2                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 00E3                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 00E4                                                              epPT100Temp_C;
006c35 940e c8ab 	CALL SUBOPT_0x207
006c37 940e c8d3 	CALL SUBOPT_0x20D
006c39 937f      	PUSH R23
006c3a 936f      	PUSH R22
006c3b 93ff      	PUSH R31
006c3c 93ef      	PUSH R30
006c3d 940e c8ab 	CALL SUBOPT_0x207
006c3f 91af      	POP  R26
006c40 91bf      	POP  R27
006c41 918f      	POP  R24
006c42 919f      	POP  R25
006c43 940e d7dd 	CALL __MULF12
006c45 937f      	PUSH R23
006c46 936f      	PUSH R22
006c47 93ff      	PUSH R31
006c48 93ef      	PUSH R30
006c49 940e c8ab 	CALL SUBOPT_0x207
006c4b 940e c8da 	CALL SUBOPT_0x20E
006c4d 91af      	POP  R26
006c4e 91bf      	POP  R27
006c4f 918f      	POP  R24
006c50 919f      	POP  R25
006c51 940e d78d 	CALL __ADDF12
                +
006c53 eea5     +LDI R26 , LOW ( 0xC334E2E5 )
006c54 eeb2     +LDI R27 , HIGH ( 0xC334E2E5 )
006c55 e384     +LDI R24 , BYTE3 ( 0xC334E2E5 )
006c56 ec93     +LDI R25 , BYTE4 ( 0xC334E2E5 )
                 	__GETD2N 0xC334E2E5
                 _0x1A0093:
006c57 940e d78d 	CALL __ADDF12
                 _0x1A0094:
006c59 89a9      	LDD  R26,Y+17
006c5a 89ba      	LDD  R27,Y+17+1
006c5b 940e d9ff 	CALL __PUTDP1
                 ; 000D 00E5 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epPT100TempOffset;
                 ; 000D 00E6 //                                        getInterval(adcData[ch], &x_1, &x_2, &y_1, &y_2);
                 ; 000D 00E7 //                                        sensor->value = (((adcData[ch] - x_1) * (y_2 - y_1)) / (x_2 - x_1)) + y_1;
                 ; 000D 00E8 
                 ; 000D 00E9                                         // test
                 ; 000D 00EA                                         //printDebug("ADC: %f, Value: %f \r\n", adcData[ch], sensor->value);
                 ; 000D 00EB                                         //
                 ; 000D 00EC                                     }
                 ; 000D 00ED                                     break;
                 _0x1A004D:
                 ; 000D 00EE     }
                 _0x1A0039:
                 ; 000D 00EF 
                 ; 000D 00F0     sensor->status  = SENS_NORMAL;
006c5d 89a9      	LDD  R26,Y+17
006c5e 89ba      	LDD  R27,Y+17+1
006c5f 9614      	ADIW R26,4
006c60 e0e0      	LDI  R30,LOW(0)
006c61 93ec      	ST   X,R30
                 ; 000D 00F1 
                 ; 000D 00F2     return 0;
006c62 e0e0      	LDI  R30,LOW(0)
006c63 e0f0      	LDI  R31,HIGH(0)
                 _0x20E006A:
006c64 8118      	LDD  R17,Y+0
006c65 9665      	ADIW R28,21
006c66 9508      	RET
                 ; 000D 00F3 }
                 ;/*============================================================*/
                 ;void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 00F5 void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 00F6 
                 ; 000D 00F7     int i = 0;
                 ; 000D 00F8 
                 ; 000D 00F9     for(i = 0; i < 15; i++) {
                 ;	adcRaw -> Y+10
                 ;	*x1 -> Y+8
                 ;	*x2 -> Y+6
                 ;	*y1 -> Y+4
                 ;	*y2 -> Y+2
                 ;	i -> R16,R17
                 ; 000D 00FA         if(adcRaw <= adcTable[i]) {
                 ; 000D 00FB             *x1 = adcTable[i-1];
                 ; 000D 00FC             *y1 = tempTable[i-1];
                 ; 000D 00FD             *x2 = adcTable[i];
                 ; 000D 00FE             *y2 = tempTable[i];
                 ; 000D 00FF             break;
                 ; 000D 0100         }
                 ; 000D 0101     }
                 ; 000D 0102 
                 ; 000D 0103     return;
                 ; 000D 0104 }
                 ;/*============================================================*/
                 ;int sensorCalibrate1(int p1, int p2)
                 ; 000D 0107 {
                 _sensorCalibrate1:
                 ; 000D 0108     float p2_raw;
                 ; 000D 0109 
                 ; 000D 010A     if(operating_config.sensorEnable[p1] != 0x01){
006c67 93ba      	ST   -Y,R27
006c68 93aa      	ST   -Y,R26
006c69 9724      	SBIW R28,4
                 ;	p1 -> Y+6
                 ;	p2 -> Y+4
                 ;	p2_raw -> Y+0
                +
006c6a ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006c6b e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006c6c 940e c8f3 	CALL SUBOPT_0x211
006c6e 91ac      	LD   R26,X
006c6f 30a1      	CPI  R26,LOW(0x1)
006c70 f061      	BREQ _0x1A0052
                 ; 000D 010B         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p1+1);
                +
006c71 e4e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 42 ) )
006c72 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 42 ) )
006c73 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 42 ) )
006c74 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 42 ) )
                 	__POINTD1FN _0x1A0000,42
006c75 940e c35f 	CALL SUBOPT_0x12A
006c77 9631      	ADIW R30,1
006c78 940e c200 	CALL SUBOPT_0xEC
                 ; 000D 010C         return -1;
006c7a efef      	LDI  R30,LOW(65535)
006c7b efff      	LDI  R31,HIGH(65535)
006c7c c0ac      	RJMP _0x20E0069
                 ; 000D 010D     }
                 ; 000D 010E     if(operating_config.sensorEnable[p2] != 0x01){
                 _0x1A0052:
                +
006c7d ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006c7e e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006c7f 81ac      	LDD  R26,Y+4
006c80 81bd      	LDD  R27,Y+4+1
006c81 940e c8f8 	CALL SUBOPT_0x212
006c83 f061      	BREQ _0x1A0053
                 ; 000D 010F         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p2+1);
                +
006c84 e4e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 42 ) )
006c85 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 42 ) )
006c86 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 42 ) )
006c87 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 42 ) )
                 	__POINTD1FN _0x1A0000,42
006c88 940e c7a6 	CALL SUBOPT_0x1DB
006c8a 9631      	ADIW R30,1
006c8b 940e c200 	CALL SUBOPT_0xEC
                 ; 000D 0110         return -1;
006c8d efef      	LDI  R30,LOW(65535)
006c8e efff      	LDI  R31,HIGH(65535)
006c8f c099      	RJMP _0x20E0069
                 ; 000D 0111     }
                 ; 000D 0112 
                 ; 000D 0113     if(sensor[p1].status != SENS_NORMAL){
                 _0x1A0053:
006c90 81ae      	LDD  R26,Y+6
006c91 81bf      	LDD  R27,Y+6+1
006c92 940e c8fd 	CALL SUBOPT_0x213
006c94 30e0      	CPI  R30,0
006c95 f089      	BREQ _0x1A0054
                 ; 000D 0114         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p1+1,sensor[p1].status);
                +
006c96 e7e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006c97 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006c98 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006c99 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006c9a 940e c35f 	CALL SUBOPT_0x12A
006c9c 940e c904 	CALL SUBOPT_0x214
006c9e 85ae      	LDD  R26,Y+14
006c9f 85bf      	LDD  R27,Y+14+1
006ca0 940e c8fd 	CALL SUBOPT_0x213
006ca2 940e c90a 	CALL SUBOPT_0x215
                 ; 000D 0115         return -1;
006ca4 efef      	LDI  R30,LOW(65535)
006ca5 efff      	LDI  R31,HIGH(65535)
006ca6 c082      	RJMP _0x20E0069
                 ; 000D 0116     }
                 ; 000D 0117     if(sensor[p2].status != SENS_NORMAL){
                 _0x1A0054:
006ca7 81ac      	LDD  R26,Y+4
006ca8 81bd      	LDD  R27,Y+4+1
006ca9 940e c8fd 	CALL SUBOPT_0x213
006cab 30e0      	CPI  R30,0
006cac f089      	BREQ _0x1A0055
                 ; 000D 0118         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p2+1,sensor[p2].status);
                +
006cad e7e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006cae e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006caf e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006cb0 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006cb1 940e c7a6 	CALL SUBOPT_0x1DB
006cb3 940e c904 	CALL SUBOPT_0x214
006cb5 85ac      	LDD  R26,Y+12
006cb6 85bd      	LDD  R27,Y+12+1
006cb7 940e c8fd 	CALL SUBOPT_0x213
006cb9 940e c90a 	CALL SUBOPT_0x215
                 ; 000D 0119         return -1;
006cbb efef      	LDI  R30,LOW(65535)
006cbc efff      	LDI  R31,HIGH(65535)
006cbd c06b      	RJMP _0x20E0069
                 ; 000D 011A     }
                 ; 000D 011B 
                 ; 000D 011C     epCalType[p2]   = CAL_SELFCOMPARE;
                 _0x1A0055:
006cbe 81ac      	LDD  R26,Y+4
006cbf 81bd      	LDD  R27,Y+4+1
006cc0 5aa8      	SUBI R26,LOW(-_epCalType)
006cc1 4fb9      	SBCI R27,HIGH(-_epCalType)
006cc2 e0e1      	LDI  R30,LOW(1)
006cc3 940e da6c 	CALL __EEPROMWRB
                 ; 000D 011D 
                 ; 000D 011E     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006cc5 940e bd1a 	CALL SUBOPT_0x2E
006cc7 f021      	BREQ _0x1A0057
006cc8 940e bd1a 	CALL SUBOPT_0x2E
006cca 30e3      	CPI  R30,LOW(0x3)
006ccb f489      	BRNE _0x1A0056
                 _0x1A0057:
                 ; 000D 011F         p2_raw          = (ADC_CONV_FAC*100 * adcData[p2]);
006ccc 940e bd36 	CALL SUBOPT_0x32
006cce 940e bd43 	CALL SUBOPT_0x33
006cd0 937f      	PUSH R23
006cd1 936f      	PUSH R22
006cd2 93ff      	PUSH R31
006cd3 93ef      	PUSH R30
006cd4 940e c87d 	CALL SUBOPT_0x200
006cd6 91af      	POP  R26
006cd7 91bf      	POP  R27
006cd8 918f      	POP  R24
006cd9 919f      	POP  R25
006cda 940e d7dd 	CALL __MULF12
006cdc c02b      	RJMP _0x1A0095
                 ; 000D 0120     }
                 ; 000D 0121     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0056:
006cdd 940e bd1a 	CALL SUBOPT_0x2E
006cdf 30e1      	CPI  R30,LOW(0x1)
006ce0 f429      	BRNE _0x1A005A
                 ; 000D 0122         p2_raw          = epTMECTempSlope   * adcData[p2];
006ce1 940e c87d 	CALL SUBOPT_0x200
006ce3 940e c8cc 	CALL SUBOPT_0x20C
006ce5 c022      	RJMP _0x1A0095
                 ; 000D 0123     }
                 ; 000D 0124     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A005A:
006ce6 940e bd1a 	CALL SUBOPT_0x2E
006ce8 30e2      	CPI  R30,LOW(0x2)
006ce9 f501      	BRNE _0x1A005C
                 ; 000D 0125         p2_raw          = (epPT100Temp_A    * adcData[p2] * adcData[p2]) +
                 ; 000D 0126                           (epPT100Temp_B    * adcData[p2]);
006cea 940e c87d 	CALL SUBOPT_0x200
006cec 940e c8d3 	CALL SUBOPT_0x20D
006cee 937f      	PUSH R23
006cef 936f      	PUSH R22
006cf0 93ff      	PUSH R31
006cf1 93ef      	PUSH R30
006cf2 940e c87d 	CALL SUBOPT_0x200
006cf4 91af      	POP  R26
006cf5 91bf      	POP  R27
006cf6 918f      	POP  R24
006cf7 919f      	POP  R25
006cf8 940e d7dd 	CALL __MULF12
006cfa 937f      	PUSH R23
006cfb 936f      	PUSH R22
006cfc 93ff      	PUSH R31
006cfd 93ef      	PUSH R30
006cfe 940e c87d 	CALL SUBOPT_0x200
006d00 940e c8da 	CALL SUBOPT_0x20E
006d02 91af      	POP  R26
006d03 91bf      	POP  R27
006d04 918f      	POP  R24
006d05 919f      	POP  R25
006d06 940e d78d 	CALL __ADDF12
                 _0x1A0095:
006d08 940e da1a 	CALL __PUTD1S0
                 ; 000D 0127     }
                 ; 000D 0128 
                 ; 000D 0129     epFactor_A[p2]  = 0;
                 _0x1A005C:
006d0a 81ec      	LDD  R30,Y+4
006d0b 81fd      	LDD  R31,Y+4+1
006d0c 940e c8ec 	CALL SUBOPT_0x210
006d0e 940e c90f 	CALL SUBOPT_0x216
                 ; 000D 012A     epFactor_B[p2]  = 0;
006d10 940e c918 	CALL SUBOPT_0x217
006d12 940e c90f 	CALL SUBOPT_0x216
                 ; 000D 012B     epFactor_C[p2]  = sensor[p1].value - p2_raw;
006d14 940e c91f 	CALL SUBOPT_0x218
006d16 93ff      	PUSH R31
006d17 93ef      	PUSH R30
006d18 81ae      	LDD  R26,Y+6
006d19 81bf      	LDD  R27,Y+6+1
006d1a e0e5      	LDI  R30,LOW(5)
006d1b 940e d95a 	CALL __MULB1W2U
006d1d 940e bcb6 	CALL SUBOPT_0x1F
006d1f 940e bf9e 	CALL SUBOPT_0x8C
006d21 940e d786 	CALL __SUBF12
006d23 91af      	POP  R26
006d24 91bf      	POP  R27
006d25 940e da5c 	CALL __EEPROMWRD
                 ; 000D 012C 
                 ; 000D 012D     return 0;
006d27 e0e0      	LDI  R30,LOW(0)
006d28 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0069:
006d29 9628      	ADIW R28,8
006d2a 9508      	RET
                 ; 000D 012E }
                 ;/*============================================================*/
                 ;int sensorCalibrate2(int prbId)
                 ; 000D 0131 {
                 _sensorCalibrate2:
                 ; 000D 0132     float p2_raw;
                 ; 000D 0133     float tmpA,tmpB,tmpC;
                 ; 000D 0134 
                 ; 000D 0135     if(epIsPointSet1[prbId] == 0){
006d2b 93ba      	ST   -Y,R27
006d2c 93aa      	ST   -Y,R26
006d2d 9760      	SBIW R28,16
                 ;	prbId -> Y+16
                 ;	p2_raw -> Y+12
                 ;	tmpA -> Y+8
                 ;	tmpB -> Y+4
                 ;	tmpC -> Y+0
006d2e 89a8      	LDD  R26,Y+16
006d2f 89b9      	LDD  R27,Y+16+1
006d30 52af      	SUBI R26,LOW(-_epIsPointSet1)
006d31 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
006d32 940e da50 	CALL __EEPROMRDB
006d34 30e0      	CPI  R30,0
006d35 f461      	BRNE _0x1A005D
                 ; 000D 0136         printDebug("<sensorCalibrate2> ABORT: sensor ch %d No set point found\r\n",prbId+1);
                +
006d36 eaed     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 149 ) )
006d37 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 149 ) )
006d38 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 149 ) )
006d39 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 149 ) )
                 	__POINTD1FN _0x1A0000,149
006d3a 940e c1fb 	CALL SUBOPT_0xEB
006d3c 9631      	ADIW R30,1
006d3d 940e c200 	CALL SUBOPT_0xEC
                 ; 000D 0137         return -1;
006d3f efef      	LDI  R30,LOW(65535)
006d40 efff      	LDI  R31,HIGH(65535)
006d41 c166      	RJMP _0x20E0068
                 ; 000D 0138     }
                 ; 000D 0139 
                 ; 000D 013A     if(epIsPointSet2[prbId] == 0){
                 _0x1A005D:
006d42 89a8      	LDD  R26,Y+16
006d43 89b9      	LDD  R27,Y+16+1
006d44 50a2      	SUBI R26,LOW(-_epIsPointSet2)
006d45 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
006d46 940e da50 	CALL __EEPROMRDB
006d48 30e0      	CPI  R30,0
006d49 f011      	BREQ PC+3
006d4a 940c 6dbf 	JMP _0x1A005E
                 ; 000D 013B         printDebug("<sensorCalibrate2> -- CAL_EXTOFFSET --\r\n");
                +
006d4c eee9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 209 ) )
006d4d e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 209 ) )
006d4e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 209 ) )
006d4f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 209 ) )
                 	__POINTD1FN _0x1A0000,209
006d50 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 013C         epFactor_A[prbId]   = 0;
006d52 89e8      	LDD  R30,Y+16
006d53 89f9      	LDD  R31,Y+16+1
006d54 940e c8ec 	CALL SUBOPT_0x210
006d56 940e c923 	CALL SUBOPT_0x219
                 ; 000D 013D         epFactor_B[prbId]   = 0;
006d58 89e8      	LDD  R30,Y+16
006d59 89f9      	LDD  R31,Y+16+1
006d5a 940e c918 	CALL SUBOPT_0x217
006d5c 940e c923 	CALL SUBOPT_0x219
                 ; 000D 013E 
                 ; 000D 013F         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006d5e 940e bd1a 	CALL SUBOPT_0x2E
006d60 f021      	BREQ _0x1A0060
006d61 940e bd1a 	CALL SUBOPT_0x2E
006d63 30e3      	CPI  R30,LOW(0x3)
006d64 f489      	BRNE _0x1A005F
                 _0x1A0060:
                 ; 000D 0140             p2_raw          = (ADC_CONV_FAC*100 * epADCRef1[prbId]);
006d65 940e bd36 	CALL SUBOPT_0x32
006d67 940e bd43 	CALL SUBOPT_0x33
006d69 937f      	PUSH R23
006d6a 936f      	PUSH R22
006d6b 93ff      	PUSH R31
006d6c 93ef      	PUSH R30
006d6d 940e c92a 	CALL SUBOPT_0x21A
006d6f 91af      	POP  R26
006d70 91bf      	POP  R27
006d71 918f      	POP  R24
006d72 919f      	POP  R25
006d73 940e d7dd 	CALL __MULF12
006d75 c02b      	RJMP _0x1A0096
                 ; 000D 0141         }
                 ; 000D 0142         else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A005F:
006d76 940e bd1a 	CALL SUBOPT_0x2E
006d78 30e1      	CPI  R30,LOW(0x1)
006d79 f429      	BRNE _0x1A0063
                 ; 000D 0143             p2_raw          = epTMECTempSlope   * epADCRef1[prbId];
006d7a 940e c92a 	CALL SUBOPT_0x21A
006d7c 940e c8cc 	CALL SUBOPT_0x20C
006d7e c022      	RJMP _0x1A0096
                 ; 000D 0144         }
                 ; 000D 0145         else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0063:
006d7f 940e bd1a 	CALL SUBOPT_0x2E
006d81 30e2      	CPI  R30,LOW(0x2)
006d82 f511      	BRNE _0x1A0065
                 ; 000D 0146             p2_raw          = (epPT100Temp_A    * epADCRef1[prbId] * epADCRef1[prbId]) +
                 ; 000D 0147                               (epPT100Temp_B    * epADCRef1[prbId]);
006d83 940e c92a 	CALL SUBOPT_0x21A
006d85 940e c8d3 	CALL SUBOPT_0x20D
006d87 937f      	PUSH R23
006d88 936f      	PUSH R22
006d89 93ff      	PUSH R31
006d8a 93ef      	PUSH R30
006d8b 940e c92a 	CALL SUBOPT_0x21A
006d8d 91af      	POP  R26
006d8e 91bf      	POP  R27
006d8f 918f      	POP  R24
006d90 919f      	POP  R25
006d91 940e d7dd 	CALL __MULF12
006d93 937f      	PUSH R23
006d94 936f      	PUSH R22
006d95 93ff      	PUSH R31
006d96 93ef      	PUSH R30
006d97 940e c92a 	CALL SUBOPT_0x21A
006d99 940e c8da 	CALL SUBOPT_0x20E
006d9b 91af      	POP  R26
006d9c 91bf      	POP  R27
006d9d 918f      	POP  R24
006d9e 919f      	POP  R25
006d9f 940e d78d 	CALL __ADDF12
                 _0x1A0096:
                +
006da1 87ec     +STD Y + 12 , R30
006da2 87fd     +STD Y + 12 + 1 , R31
006da3 876e     +STD Y + 12 + 2 , R22
006da4 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 000D 0148         }
                 ; 000D 0149 
                 ; 000D 014A         epFactor_C[prbId]   = epTempRef1[prbId] - p2_raw;
                 _0x1A0065:
006da5 89e8      	LDD  R30,Y+16
006da6 89f9      	LDD  R31,Y+16+1
006da7 940e c91f 	CALL SUBOPT_0x218
006da9 93ff      	PUSH R31
006daa 93ef      	PUSH R30
006dab 940e c935 	CALL SUBOPT_0x21B
006dad 940e bc2e 	CALL SUBOPT_0xB
006daf 940e d786 	CALL __SUBF12
006db1 91af      	POP  R26
006db2 91bf      	POP  R27
006db3 940e da5c 	CALL __EEPROMWRD
                 ; 000D 014B         epCalType[prbId]    = CAL_EXTOFFSET;
006db5 940e c940 	CALL SUBOPT_0x21C
006db7 e0e2      	LDI  R30,LOW(2)
006db8 940e da6c 	CALL __EEPROMWRB
                 ; 000D 014C         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
006dba 940e c945 	CALL SUBOPT_0x21D
006dbc 940e c94a 	CALL SUBOPT_0x21E
                 ; 000D 014D         return 0;
006dbe c0e7      	RJMP _0x20E0067
                 ; 000D 014E     }
                 ; 000D 014F 
                 ; 000D 0150     if(epIsPointSet3[prbId] == 0){
                 _0x1A005E:
006dbf 89a8      	LDD  R26,Y+16
006dc0 89b9      	LDD  R27,Y+16+1
006dc1 5da5      	SUBI R26,LOW(-_epIsPointSet3)
006dc2 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
006dc3 940e da50 	CALL __EEPROMRDB
006dc5 30e0      	CPI  R30,0
006dc6 f011      	BREQ PC+3
006dc7 940c 6e3d 	JMP _0x1A0066
                 ; 000D 0151         printDebug("<sensorCalibrate2> -- CAL_EXTLINEAR --\r\n");
                +
006dc9 e3e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 281 ) )
006dca e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 281 ) )
006dcb e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 281 ) )
006dcc e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 281 ) )
                 	__POINTD1FN _0x1A0000,281
006dcd 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 0152         epFactor_A[prbId]   = 0;
006dcf 89e8      	LDD  R30,Y+16
006dd0 89f9      	LDD  R31,Y+16+1
006dd1 940e c8ec 	CALL SUBOPT_0x210
006dd3 940e c923 	CALL SUBOPT_0x219
                 ; 000D 0153 
                 ; 000D 0154         epFactor_B[prbId]   = (epTempRef2[prbId] - epTempRef1[prbId])/(epADCRef2[prbId] - epADCRef1[prbId]);
006dd5 89e8      	LDD  R30,Y+16
006dd6 89f9      	LDD  R31,Y+16+1
006dd7 eaa9      	LDI  R26,LOW(_epFactor_B)
006dd8 e0b5      	LDI  R27,HIGH(_epFactor_B)
006dd9 940e bca8 	CALL SUBOPT_0x1C
006ddb 93ff      	PUSH R31
006ddc 93ef      	PUSH R30
006ddd 940e c951 	CALL SUBOPT_0x21F
006ddf 937f      	PUSH R23
006de0 936f      	PUSH R22
006de1 93ff      	PUSH R31
006de2 93ef      	PUSH R30
006de3 940e c935 	CALL SUBOPT_0x21B
006de5 91af      	POP  R26
006de6 91bf      	POP  R27
006de7 918f      	POP  R24
006de8 919f      	POP  R25
006de9 940e c95c 	CALL SUBOPT_0x220
006deb 937f      	PUSH R23
006dec 936f      	PUSH R22
006ded 93ff      	PUSH R31
006dee 93ef      	PUSH R30
006def 940e c961 	CALL SUBOPT_0x221
006df1 937f      	PUSH R23
006df2 936f      	PUSH R22
006df3 93ff      	PUSH R31
006df4 93ef      	PUSH R30
006df5 940e c92a 	CALL SUBOPT_0x21A
006df7 91af      	POP  R26
006df8 91bf      	POP  R27
006df9 918f      	POP  R24
006dfa 919f      	POP  R25
006dfb 940e c95c 	CALL SUBOPT_0x220
006dfd 91af      	POP  R26
006dfe 91bf      	POP  R27
006dff 918f      	POP  R24
006e00 919f      	POP  R25
006e01 940e d82b 	CALL __DIVF21
006e03 91af      	POP  R26
006e04 91bf      	POP  R27
006e05 940e da5c 	CALL __EEPROMWRD
                 ; 000D 0155         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
006e07 940e c96c 	CALL SUBOPT_0x222
006e09 940e c918 	CALL SUBOPT_0x217
006e0b 940e c41d 	CALL SUBOPT_0x14E
                 ; 000D 0156 
                 ; 000D 0157         epFactor_C[prbId]   = epTempRef2[prbId] - (epFactor_B[prbId] * epADCRef2[prbId]);
006e0d 89e8      	LDD  R30,Y+16
006e0e 89f9      	LDD  R31,Y+16+1
006e0f 940e c91f 	CALL SUBOPT_0x218
006e11 93ff      	PUSH R31
006e12 93ef      	PUSH R30
006e13 940e c951 	CALL SUBOPT_0x21F
006e15 937f      	PUSH R23
006e16 936f      	PUSH R22
006e17 93ff      	PUSH R31
006e18 93ef      	PUSH R30
006e19 89e8      	LDD  R30,Y+16
006e1a 89f9      	LDD  R31,Y+16+1
006e1b 940e c918 	CALL SUBOPT_0x217
006e1d 940e da48 	CALL __EEPROMRDD
006e1f 937f      	PUSH R23
006e20 936f      	PUSH R22
006e21 93ff      	PUSH R31
006e22 93ef      	PUSH R30
006e23 940e c961 	CALL SUBOPT_0x221
006e25 91af      	POP  R26
006e26 91bf      	POP  R27
006e27 918f      	POP  R24
006e28 919f      	POP  R25
006e29 940e d7dd 	CALL __MULF12
006e2b 91af      	POP  R26
006e2c 91bf      	POP  R27
006e2d 918f      	POP  R24
006e2e 919f      	POP  R25
006e2f 940e c95c 	CALL SUBOPT_0x220
006e31 91af      	POP  R26
006e32 91bf      	POP  R27
006e33 940e da5c 	CALL __EEPROMWRD
                 ; 000D 0158         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
006e35 940e c945 	CALL SUBOPT_0x21D
006e37 940e c94a 	CALL SUBOPT_0x21E
                 ; 000D 0159 
                 ; 000D 015A         epCalType[prbId]    = CAL_EXTLINEAR;
006e39 940e c940 	CALL SUBOPT_0x21C
006e3b e0e3      	LDI  R30,LOW(3)
006e3c c067      	RJMP _0x1A0097
                 ; 000D 015B     }
                 ; 000D 015C     else{
                 _0x1A0066:
                 ; 000D 015D         printDebug("<sensorCalibrate2> -- CAL_EXTPOLYNOMIAL --\r\n");
                +
006e3d e7e9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 353 ) )
006e3e e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 353 ) )
006e3f e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 353 ) )
006e40 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 353 ) )
                 	__POINTD1FN _0x1A0000,353
006e41 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 015E 
                 ; 000D 015F         gaussian(epADCRef1[prbId],  epADCRef2[prbId],  epADCRef3[prbId],
                 ; 000D 0160                  epTempRef1[prbId], epTempRef2[prbId], epTempRef3[prbId],
                 ; 000D 0161                  &tmpA, &tmpB, &tmpC);
006e43 940e c92a 	CALL SUBOPT_0x21A
006e45 940e c1fb 	CALL SUBOPT_0xEB
006e47 e0a3      	LDI  R26,LOW(_epADCRef2)
006e48 e0b6      	LDI  R27,HIGH(_epADCRef2)
006e49 940e c971 	CALL SUBOPT_0x223
006e4b 940e c978 	CALL SUBOPT_0x224
006e4d e3a0      	LDI  R26,LOW(_epADCRef3)
006e4e e0b6      	LDI  R27,HIGH(_epADCRef3)
006e4f 940e c971 	CALL SUBOPT_0x223
006e51 940e c225 	CALL SUBOPT_0xF4
006e53 940e c97d 	CALL SUBOPT_0x225
006e55 940e da29 	CALL __PUTPARD1
006e57 a1e8      	LDD  R30,Y+32
006e58 a1f9      	LDD  R31,Y+32+1
006e59 940e c980 	CALL SUBOPT_0x226
006e5b 940e da29 	CALL __PUTPARD1
006e5d a1ec      	LDD  R30,Y+36
006e5e a1fd      	LDD  R31,Y+36+1
006e5f 940e c983 	CALL SUBOPT_0x227
006e61 940e da29 	CALL __PUTPARD1
006e63 01fe      	MOVW R30,R28
006e64 96b0      	ADIW R30,32
006e65 93fa      	ST   -Y,R31
006e66 93ea      	ST   -Y,R30
006e67 01fe      	MOVW R30,R28
006e68 967e      	ADIW R30,30
006e69 93fa      	ST   -Y,R31
006e6a 93ea      	ST   -Y,R30
006e6b 01de      	MOVW R26,R28
006e6c 965c      	ADIW R26,28
006e6d 940e 9ce7 	CALL _gaussian
                 ; 000D 0162 
                 ; 000D 0163         epFactor_A[prbId]   = tmpA;
006e6f 89e8      	LDD  R30,Y+16
006e70 89f9      	LDD  R31,Y+16+1
006e71 e9a5      	LDI  R26,LOW(_epFactor_A)
006e72 e0b5      	LDI  R27,HIGH(_epFactor_A)
006e73 940e d8e3 	CALL __LSLW2
006e75 0fae      	ADD  R26,R30
006e76 1fbf      	ADC  R27,R31
006e77 940e be05 	CALL SUBOPT_0x4F
006e79 940e da5c 	CALL __EEPROMWRD
                 ; 000D 0164         epFactor_B[prbId]   = tmpB;
006e7b 89e8      	LDD  R30,Y+16
006e7c 89f9      	LDD  R31,Y+16+1
006e7d eaa9      	LDI  R26,LOW(_epFactor_B)
006e7e e0b5      	LDI  R27,HIGH(_epFactor_B)
006e7f 940e d8e3 	CALL __LSLW2
006e81 0fae      	ADD  R26,R30
006e82 1fbf      	ADC  R27,R31
006e83 940e bf8b 	CALL SUBOPT_0x89
006e85 940e da5c 	CALL __EEPROMWRD
                 ; 000D 0165         epFactor_C[prbId]   = tmpC;
006e87 89e8      	LDD  R30,Y+16
006e88 89f9      	LDD  R31,Y+16+1
006e89 ebad      	LDI  R26,LOW(_epFactor_C)
006e8a e0b5      	LDI  R27,HIGH(_epFactor_C)
006e8b 940e c986 	CALL SUBOPT_0x228
                 ; 000D 0166 
                 ; 000D 0167         printDebug("<sensorCalibrate2> --A--> %f\r\n", epFactor_A[prbId]);
                +
006e8d eae6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 398 ) )
006e8e e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 398 ) )
006e8f e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 398 ) )
006e90 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 398 ) )
                 	__POINTD1FN _0x1A0000,398
006e91 940e c1fb 	CALL SUBOPT_0xEB
006e93 940e c8ec 	CALL SUBOPT_0x210
006e95 940e c41d 	CALL SUBOPT_0x14E
                 ; 000D 0168         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
006e97 940e c96c 	CALL SUBOPT_0x222
006e99 940e c918 	CALL SUBOPT_0x217
006e9b 940e c41d 	CALL SUBOPT_0x14E
                 ; 000D 0169         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
006e9d 940e c945 	CALL SUBOPT_0x21D
006e9f 940e c94a 	CALL SUBOPT_0x21E
                 ; 000D 016A 
                 ; 000D 016B 
                 ; 000D 016C 
                 ; 000D 016D         epCalType[prbId]    = CAL_EXTPOLYNOMIAL;
006ea1 940e c940 	CALL SUBOPT_0x21C
006ea3 e0e4      	LDI  R30,LOW(4)
                 _0x1A0097:
006ea4 940e da6c 	CALL __EEPROMWRB
                 ; 000D 016E     }
                 ; 000D 016F 
                 ; 000D 0170     return 0;
                 _0x20E0067:
006ea6 e0e0      	LDI  R30,LOW(0)
006ea7 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
006ea8 9662      	ADIW R28,18
006ea9 9508      	RET
                 ; 000D 0171 }
                 ;/*============================================================*/
                 ;int sensorGetCurrentSetPoint(int ch,int pnt, unsigned char *buf)
                 ; 000D 0174 {
                 _sensorGetCurrentSetPoint:
                 ; 000D 0175     unsigned char   valStr[10];
                 ; 000D 0176     float           valTmp;
                 ; 000D 0177     //signed int      val;
                 ; 000D 0178     int             i;
                 ; 000D 0179 
                 ; 000D 017A     if(pnt == CALPOINT(1)){
006eaa 93ba      	ST   -Y,R27
006eab 93aa      	ST   -Y,R26
006eac 972e      	SBIW R28,14
006ead 931a      	ST   -Y,R17
006eae 930a      	ST   -Y,R16
                 ;	ch -> Y+20
                 ;	pnt -> Y+18
                 ;	*buf -> Y+16
                 ;	valStr -> Y+6
                 ;	valTmp -> Y+2
                 ;	i -> R16,R17
006eaf 89aa      	LDD  R26,Y+18
006eb0 89bb      	LDD  R27,Y+18+1
006eb1 36a5      	CPI  R26,LOW(0x65)
006eb2 e0e0      	LDI  R30,HIGH(0x65)
006eb3 07be      	CPC  R27,R30
006eb4 f551      	BRNE _0x1A0068
                 ; 000D 017B         if(epIsPointSet1[ch] == 1){
006eb5 89ac      	LDD  R26,Y+20
006eb6 89bd      	LDD  R27,Y+20+1
006eb7 52af      	SUBI R26,LOW(-_epIsPointSet1)
006eb8 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
006eb9 940e da50 	CALL __EEPROMRDB
006ebb 30e1      	CPI  R30,LOW(0x1)
006ebc f4b9      	BRNE _0x1A0069
                 ; 000D 017C             valTmp  = epTempRef1[ch];
006ebd 89ec      	LDD  R30,Y+20
006ebe 89fd      	LDD  R31,Y+20+1
006ebf 940e c97d 	CALL SUBOPT_0x225
006ec1 940e c0a4 	CALL SUBOPT_0xB4
                 ; 000D 017D             printDebug("<sensorGetCurrentSetPoint> tempRef1 = [%f][%f]\r\n",epTempRef1[ch],valTmp);
                +
006ec3 ece5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 429 ) )
006ec4 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 429 ) )
006ec5 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 429 ) )
006ec6 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 429 ) )
                 	__POINTD1FN _0x1A0000,429
006ec7 940e c978 	CALL SUBOPT_0x224
006ec9 940e c97d 	CALL SUBOPT_0x225
006ecb 940e be38 	CALL SUBOPT_0x57
006ecd 940e bcbc 	CALL SUBOPT_0x20
                 ; 000D 017E             ftoa(valTmp,2,valStr);
006ecf 940e c221 	CALL SUBOPT_0xF3
006ed1 940e c98f 	CALL SUBOPT_0x229
                 ; 000D 017F             //val = (epTempRef1[ch] * 100);
                 ; 000D 0180         }
                 ; 000D 0181         else{
006ed3 c00a      	RJMP _0x1A006A
                 _0x1A0069:
                 ; 000D 0182             printDebug("<sensorGetCurrentSetPoint> tempRef1 not set [0.00]\r\n");
                +
006ed4 efe6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 478 ) )
006ed5 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 478 ) )
006ed6 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 478 ) )
006ed7 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 478 ) )
                 	__POINTD1FN _0x1A0000,478
006ed8 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 0183             sprintf(valStr,"0.00");                 //val = 0;
006eda 940e be33 	CALL SUBOPT_0x56
006edc 940e c995 	CALL SUBOPT_0x22A
                 ; 000D 0184         }
                 _0x1A006A:
                 ; 000D 0185     }
                 ; 000D 0186     else if(pnt == CALPOINT(2)){
006ede c06d      	RJMP _0x1A006B
                 _0x1A0068:
006edf 89aa      	LDD  R26,Y+18
006ee0 89bb      	LDD  R27,Y+18+1
006ee1 36a6      	CPI  R26,LOW(0x66)
006ee2 e0e0      	LDI  R30,HIGH(0x66)
006ee3 07be      	CPC  R27,R30
006ee4 f551      	BRNE _0x1A006C
                 ; 000D 0187         if(epIsPointSet2[ch] == 1){
006ee5 89ac      	LDD  R26,Y+20
006ee6 89bd      	LDD  R27,Y+20+1
006ee7 50a2      	SUBI R26,LOW(-_epIsPointSet2)
006ee8 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
006ee9 940e da50 	CALL __EEPROMRDB
006eeb 30e1      	CPI  R30,LOW(0x1)
006eec f4b9      	BRNE _0x1A006D
                 ; 000D 0188             valTmp  = epTempRef2[ch];
006eed 89ec      	LDD  R30,Y+20
006eee 89fd      	LDD  R31,Y+20+1
006eef 940e c980 	CALL SUBOPT_0x226
006ef1 940e c0a4 	CALL SUBOPT_0xB4
                 ; 000D 0189             printDebug("<sensorGetCurrentSetPoint> tempRef2 = [%f][%f]\r\n",epTempRef2[ch],valTmp);
                +
006ef3 e3e0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 536 ) )
006ef4 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 536 ) )
006ef5 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 536 ) )
006ef6 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 536 ) )
                 	__POINTD1FN _0x1A0000,536
006ef7 940e c978 	CALL SUBOPT_0x224
006ef9 940e c980 	CALL SUBOPT_0x226
006efb 940e be38 	CALL SUBOPT_0x57
006efd 940e bcbc 	CALL SUBOPT_0x20
                 ; 000D 018A             ftoa(valTmp,2,valStr);
006eff 940e c221 	CALL SUBOPT_0xF3
006f01 940e c98f 	CALL SUBOPT_0x229
                 ; 000D 018B             //val = (epTempRef1[ch] * 100);
                 ; 000D 018C         }
                 ; 000D 018D         else{
006f03 c00a      	RJMP _0x1A006E
                 _0x1A006D:
                 ; 000D 018E             printDebug("<sensorGetCurrentSetPoint> tempRef2 not set [0.00]\r\n");
                +
006f04 e6e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 585 ) )
006f05 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 585 ) )
006f06 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 585 ) )
006f07 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 585 ) )
                 	__POINTD1FN _0x1A0000,585
006f08 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 018F             sprintf(valStr,"0.00");                 //val = 0;
006f0a 940e be33 	CALL SUBOPT_0x56
006f0c 940e c995 	CALL SUBOPT_0x22A
                 ; 000D 0190         }
                 _0x1A006E:
                 ; 000D 0191         /*
                 ; 000D 0192         if(epIsPointSet2[ch] == 1){ val = (epTempRef2[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef2[ch]);}
                 ; 000D 0193         else{                       val = 0;        }
                 ; 000D 0194         */
                 ; 000D 0195     }
                 ; 000D 0196     else if(pnt == CALPOINT(3)){
006f0e c03d      	RJMP _0x1A006F
                 _0x1A006C:
006f0f 89aa      	LDD  R26,Y+18
006f10 89bb      	LDD  R27,Y+18+1
006f11 36a7      	CPI  R26,LOW(0x67)
006f12 e0e0      	LDI  R30,HIGH(0x67)
006f13 07be      	CPC  R27,R30
006f14 f551      	BRNE _0x1A0070
                 ; 000D 0197         if(epIsPointSet3[ch] == 1){
006f15 89ac      	LDD  R26,Y+20
006f16 89bd      	LDD  R27,Y+20+1
006f17 5da5      	SUBI R26,LOW(-_epIsPointSet3)
006f18 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
006f19 940e da50 	CALL __EEPROMRDB
006f1b 30e1      	CPI  R30,LOW(0x1)
006f1c f4b9      	BRNE _0x1A0071
                 ; 000D 0198             valTmp  = epTempRef3[ch];
006f1d 89ec      	LDD  R30,Y+20
006f1e 89fd      	LDD  R31,Y+20+1
006f1f 940e c983 	CALL SUBOPT_0x227
006f21 940e c0a4 	CALL SUBOPT_0xB4
                 ; 000D 0199             printDebug("<sensorGetCurrentSetPoint> tempRef3 = [%f][%f]\r\n",epTempRef3[ch],valTmp);
                +
006f23 e9e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 638 ) )
006f24 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 638 ) )
006f25 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 638 ) )
006f26 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 638 ) )
                 	__POINTD1FN _0x1A0000,638
006f27 940e c978 	CALL SUBOPT_0x224
006f29 940e c983 	CALL SUBOPT_0x227
006f2b 940e be38 	CALL SUBOPT_0x57
006f2d 940e bcbc 	CALL SUBOPT_0x20
                 ; 000D 019A             ftoa(valTmp,2,valStr);
006f2f 940e c221 	CALL SUBOPT_0xF3
006f31 940e c98f 	CALL SUBOPT_0x229
                 ; 000D 019B             //val = (epTempRef1[ch] * 100);
                 ; 000D 019C         }
                 ; 000D 019D         else{
006f33 c00a      	RJMP _0x1A0072
                 _0x1A0071:
                 ; 000D 019E             printDebug("<sensorGetCurrentSetPoint> tempRef3 not set [0.00]\r\n");
                +
006f34 ece7     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 687 ) )
006f35 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 687 ) )
006f36 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 687 ) )
006f37 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 687 ) )
                 	__POINTD1FN _0x1A0000,687
006f38 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 019F             sprintf(valStr,"0.00");                 //val = 0;
006f3a 940e be33 	CALL SUBOPT_0x56
006f3c 940e c995 	CALL SUBOPT_0x22A
                 ; 000D 01A0         }
                 _0x1A0072:
                 ; 000D 01A1         /*
                 ; 000D 01A2         if(epIsPointSet3[ch] == 1){ val = (epTempRef3[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef3[ch]);}
                 ; 000D 01A3         else{                       val = 0;        }
                 ; 000D 01A4         */
                 ; 000D 01A5     }
                 ; 000D 01A6     else{
006f3e c00d      	RJMP _0x1A0073
                 _0x1A0070:
                 ; 000D 01A7         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
006f3f efec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 740 ) )
006f40 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 740 ) )
006f41 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 740 ) )
006f42 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 740 ) )
                 	__POINTD1FN _0x1A0000,740
006f43 940e da29 	CALL __PUTPARD1
006f45 89ee      	LDD  R30,Y+22
006f46 89ff      	LDD  R31,Y+22+1
006f47 940e c200 	CALL SUBOPT_0xEC
                 ; 000D 01A8         return -1;
006f49 efef      	LDI  R30,LOW(65535)
006f4a efff      	LDI  R31,HIGH(65535)
006f4b c0d8      	RJMP _0x20E0066
                 ; 000D 01A9     }
                 _0x1A0073:
                 _0x1A006F:
                 _0x1A006B:
                 ; 000D 01AA     //printDebug("<sensorGetCurrentSetPoint> read val = [%d]\r\n",val);
                 ; 000D 01AB     printDebug("<sensorGetCurrentSetPoint> read val(%d) = [%s]\r\n",strlen(valStr),valStr);
                +
006f4c e3e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 796 ) )
006f4d e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 796 ) )
006f4e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 796 ) )
006f4f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 796 ) )
                 	__POINTD1FN _0x1A0000,796
006f50 940e da29 	CALL __PUTPARD1
006f52 01de      	MOVW R26,R28
006f53 961a      	ADIW R26,10
006f54 940e a19b 	CALL _strlen
006f56 940e bd4a 	CALL SUBOPT_0x34
006f58 01fe      	MOVW R30,R28
006f59 963e      	ADIW R30,14
006f5a 940e c3d2 	CALL SUBOPT_0x141
                 ; 000D 01AC 
                 ; 000D 01AD     if(valStr[0] == '-'){
006f5c 81ae      	LDD  R26,Y+6
006f5d 32ad      	CPI  R26,LOW(0x2D)
006f5e f011      	BREQ PC+3
006f5f 940c 6fb2 	JMP _0x1A0074
                 ; 000D 01AE         buf[0] = 1;
006f61 89a8      	LDD  R26,Y+16
006f62 89b9      	LDD  R27,Y+16+1
006f63 e0e1      	LDI  R30,LOW(1)
006f64 93ec      	ST   X,R30
                 ; 000D 01AF         if(strlen(valStr) == 7){
006f65 940e c9a0 	CALL SUBOPT_0x22B
006f67 30e7      	CPI  R30,LOW(0x7)
006f68 e0a0      	LDI  R26,HIGH(0x7)
006f69 07fa      	CPC  R31,R26
006f6a f499      	BRNE _0x1A0075
                 ; 000D 01B0             buf[1]  = valStr[1] - 0x30;     buf[2]  = valStr[2] - 0x30;     buf[3]  = valStr[3] - 0x30;
006f6b 81ef      	LDD  R30,Y+7
006f6c 53e0      	SUBI R30,LOW(48)
                +
006f6d 89a8     +LDD R26 , Y + 16
006f6e 89b9     +LDD R27 , Y + 16 + 1
006f6f 9611     +ADIW R26 , 1
006f70 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
006f71 85e8      	LDD  R30,Y+8
006f72 940e c9a4 	CALL SUBOPT_0x22C
006f74 85e9      	LDD  R30,Y+9
006f75 940e c9aa 	CALL SUBOPT_0x22D
                 ; 000D 01B1             buf[4]  = valStr[5] - 0x30;     buf[5]  = valStr[6] - 0x30;
006f77 85eb      	LDD  R30,Y+11
006f78 940e c9b0 	CALL SUBOPT_0x22E
006f7a 85ec      	LDD  R30,Y+12
006f7b 940e c9b6 	CALL SUBOPT_0x22F
                 ; 000D 01B2         }
                 ; 000D 01B3         else if(strlen(valStr) == 6){
006f7d c033      	RJMP _0x1A0076
                 _0x1A0075:
006f7e 940e c9a0 	CALL SUBOPT_0x22B
006f80 30e6      	CPI  R30,LOW(0x6)
006f81 e0a0      	LDI  R26,HIGH(0x6)
006f82 07fa      	CPC  R31,R26
006f83 f479      	BRNE _0x1A0077
                 ; 000D 01B4             buf[1]  = 0;                    buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
006f84 940e c9bc 	CALL SUBOPT_0x230
006f86 81ef      	LDD  R30,Y+7
006f87 940e c9a4 	CALL SUBOPT_0x22C
006f89 85e8      	LDD  R30,Y+8
006f8a 940e c9aa 	CALL SUBOPT_0x22D
                 ; 000D 01B5             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
006f8c 85ea      	LDD  R30,Y+10
006f8d 940e c9b0 	CALL SUBOPT_0x22E
006f8f 85eb      	LDD  R30,Y+11
006f90 940e c9b6 	CALL SUBOPT_0x22F
                 ; 000D 01B6         }
                 ; 000D 01B7         else if(strlen(valStr) == 5){
006f92 c01e      	RJMP _0x1A0078
                 _0x1A0077:
006f93 940e c9a0 	CALL SUBOPT_0x22B
006f95 30e5      	CPI  R30,LOW(0x5)
006f96 e0a0      	LDI  R26,HIGH(0x5)
006f97 07fa      	CPC  R31,R26
006f98 f489      	BRNE _0x1A0079
                 ; 000D 01B8             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[1] - 0x30;
006f99 940e c9bc 	CALL SUBOPT_0x230
006f9b 89a8      	LDD  R26,Y+16
006f9c 89b9      	LDD  R27,Y+16+1
006f9d 9612      	ADIW R26,2
006f9e e0e0      	LDI  R30,LOW(0)
006f9f 93ec      	ST   X,R30
006fa0 81ef      	LDD  R30,Y+7
006fa1 940e c9aa 	CALL SUBOPT_0x22D
                 ; 000D 01B9             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
006fa3 85e9      	LDD  R30,Y+9
006fa4 940e c9b0 	CALL SUBOPT_0x22E
006fa6 85ea      	LDD  R30,Y+10
006fa7 940e c9b6 	CALL SUBOPT_0x22F
                 ; 000D 01BA         }
                 ; 000D 01BB         else{
006fa9 c007      	RJMP _0x1A007A
                 _0x1A0079:
                 ; 000D 01BC             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
006faa 940e c9c2 	CALL SUBOPT_0x231
006fac 940e bc5e 	CALL SUBOPT_0x12
                 ; 000D 01BD             return -1;
006fae efef      	LDI  R30,LOW(65535)
006faf efff      	LDI  R31,HIGH(65535)
006fb0 c073      	RJMP _0x20E0066
                 ; 000D 01BE         }
                 _0x1A007A:
                 _0x1A0078:
                 _0x1A0076:
                 ; 000D 01BF     }
                 ; 000D 01C0     else{
006fb1 c050      	RJMP _0x1A007B
                 _0x1A0074:
                 ; 000D 01C1         buf[0] = 0;
006fb2 89a8      	LDD  R26,Y+16
006fb3 89b9      	LDD  R27,Y+16+1
006fb4 e0e0      	LDI  R30,LOW(0)
006fb5 93ec      	ST   X,R30
                 ; 000D 01C2         if(strlen(valStr) == 6){
006fb6 940e c9a0 	CALL SUBOPT_0x22B
006fb8 30e6      	CPI  R30,LOW(0x6)
006fb9 e0a0      	LDI  R26,HIGH(0x6)
006fba 07fa      	CPC  R31,R26
006fbb f499      	BRNE _0x1A007C
                 ; 000D 01C3             buf[1]  = valStr[0] - 0x30;     buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
006fbc 81ee      	LDD  R30,Y+6
006fbd 53e0      	SUBI R30,LOW(48)
                +
006fbe 89a8     +LDD R26 , Y + 16
006fbf 89b9     +LDD R27 , Y + 16 + 1
006fc0 9611     +ADIW R26 , 1
006fc1 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
006fc2 81ef      	LDD  R30,Y+7
006fc3 940e c9a4 	CALL SUBOPT_0x22C
006fc5 85e8      	LDD  R30,Y+8
006fc6 940e c9aa 	CALL SUBOPT_0x22D
                 ; 000D 01C4             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
006fc8 85ea      	LDD  R30,Y+10
006fc9 940e c9b0 	CALL SUBOPT_0x22E
006fcb 85eb      	LDD  R30,Y+11
006fcc 940e c9b6 	CALL SUBOPT_0x22F
                 ; 000D 01C5         }
                 ; 000D 01C6         else if(strlen(valStr) == 5){
006fce c033      	RJMP _0x1A007D
                 _0x1A007C:
006fcf 940e c9a0 	CALL SUBOPT_0x22B
006fd1 30e5      	CPI  R30,LOW(0x5)
006fd2 e0a0      	LDI  R26,HIGH(0x5)
006fd3 07fa      	CPC  R31,R26
006fd4 f479      	BRNE _0x1A007E
                 ; 000D 01C7             buf[1]  = 0;                    buf[2]  = valStr[0] - 0x30;     buf[3]  = valStr[1] - 0x30;
006fd5 940e c9bc 	CALL SUBOPT_0x230
006fd7 81ee      	LDD  R30,Y+6
006fd8 940e c9a4 	CALL SUBOPT_0x22C
006fda 81ef      	LDD  R30,Y+7
006fdb 940e c9aa 	CALL SUBOPT_0x22D
                 ; 000D 01C8             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
006fdd 85e9      	LDD  R30,Y+9
006fde 940e c9b0 	CALL SUBOPT_0x22E
006fe0 85ea      	LDD  R30,Y+10
006fe1 940e c9b6 	CALL SUBOPT_0x22F
                 ; 000D 01C9         }
                 ; 000D 01CA         else if(strlen(valStr) == 4){
006fe3 c01e      	RJMP _0x1A007F
                 _0x1A007E:
006fe4 940e c9a0 	CALL SUBOPT_0x22B
006fe6 30e4      	CPI  R30,LOW(0x4)
006fe7 e0a0      	LDI  R26,HIGH(0x4)
006fe8 07fa      	CPC  R31,R26
006fe9 f489      	BRNE _0x1A0080
                 ; 000D 01CB             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[0] - 0x30;
006fea 940e c9bc 	CALL SUBOPT_0x230
006fec 89a8      	LDD  R26,Y+16
006fed 89b9      	LDD  R27,Y+16+1
006fee 9612      	ADIW R26,2
006fef e0e0      	LDI  R30,LOW(0)
006ff0 93ec      	ST   X,R30
006ff1 81ee      	LDD  R30,Y+6
006ff2 940e c9aa 	CALL SUBOPT_0x22D
                 ; 000D 01CC             buf[4]  = valStr[2] - 0x30;     buf[5]  = valStr[3] - 0x30;
006ff4 85e8      	LDD  R30,Y+8
006ff5 940e c9b0 	CALL SUBOPT_0x22E
006ff7 85e9      	LDD  R30,Y+9
006ff8 940e c9b6 	CALL SUBOPT_0x22F
                 ; 000D 01CD         }
                 ; 000D 01CE         else{
006ffa c007      	RJMP _0x1A0081
                 _0x1A0080:
                 ; 000D 01CF             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
006ffb 940e c9c2 	CALL SUBOPT_0x231
006ffd 940e bc5e 	CALL SUBOPT_0x12
                 ; 000D 01D0             return -1;
006fff efef      	LDI  R30,LOW(65535)
007000 efff      	LDI  R31,HIGH(65535)
007001 c022      	RJMP _0x20E0066
                 ; 000D 01D1         }
                 _0x1A0081:
                 _0x1A007F:
                 _0x1A007D:
                 ; 000D 01D2     }
                 _0x1A007B:
                 ; 000D 01D3 
                 ; 000D 01D4     printDebug("<sensorGetCurrentSetPoint> buf read");
                +
007002 e9ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 903 ) )
007003 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 903 ) )
007004 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 903 ) )
007005 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 903 ) )
                 	__POINTD1FN _0x1A0000,903
007006 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 01D5     for(i=0;i<6;i++){
                +
007008 e000     +LDI R16 , LOW ( 0 )
007009 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A0083:
                +
00700a 3006     +CPI R16 , LOW ( 6 )
00700b e0e0     +LDI R30 , HIGH ( 6 )
00700c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
00700d f474      	BRGE _0x1A0084
                 ; 000D 01D6         printDebug("[%d]",buf[i]);
                +
00700e ece3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 939 ) )
00700f e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 939 ) )
007010 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 939 ) )
007011 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 939 ) )
                 	__POINTD1FN _0x1A0000,939
007012 940e da29 	CALL __PUTPARD1
007014 01f8      	MOVW R30,R16
007015 89ac      	LDD  R26,Y+20
007016 89bd      	LDD  R27,Y+20+1
007017 940e c597 	CALL SUBOPT_0x185
                 ; 000D 01D7     }
                +
007019 5f0f     +SUBI R16 , LOW ( - 1 )
00701a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00701b cfee      	RJMP _0x1A0083
                 _0x1A0084:
                 ; 000D 01D8     printDebug("\r\n");
                +
00701c e3ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 39 ) )
00701d e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 39 ) )
00701e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 39 ) )
00701f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 39 ) )
                 	__POINTD1FN _0x1A0000,39
007020 940e bbec 	CALL SUBOPT_0x3
                 ; 000D 01D9 
                 ; 000D 01DA     return 0;
007022 e0e0      	LDI  R30,LOW(0)
007023 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0066:
007024 8119      	LDD  R17,Y+1
007025 8108      	LDD  R16,Y+0
007026 9666      	ADIW R28,22
007027 9508      	RET
                 ; 000D 01DB }
                 ;/*============================================================*/
                 ;int sensorSetCurrentSetPoint(int ch,int pnt,unsigned char *buf)
                 ; 000D 01DE {
                 _sensorSetCurrentSetPoint:
                 ; 000D 01DF     float   val=0;
                 ; 000D 01E0 
                 ; 000D 01E1     if(operating_config.sensorEnable[ch] != 0x01){
007028 940e c7ab 	CALL SUBOPT_0x1DC
                 ;	ch -> Y+8
                 ;	pnt -> Y+6
                 ;	*buf -> Y+4
                 ;	val -> Y+0
                +
00702a ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00702b e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00702c 85a8      	LDD  R26,Y+8
00702d 85b9      	LDD  R27,Y+8+1
00702e 940e c8f8 	CALL SUBOPT_0x212
007030 f069      	BREQ _0x1A0085
                 ; 000D 01E2         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d is disable\r\n",ch+1);
                +
007031 ece8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 944 ) )
007032 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 944 ) )
007033 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 944 ) )
007034 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 944 ) )
                 	__POINTD1FN _0x1A0000,944
007035 940e c9cc 	CALL SUBOPT_0x232
007037 9631      	ADIW R30,1
007038 940e c200 	CALL SUBOPT_0xEC
                 ; 000D 01E3         return -1;
00703a efef      	LDI  R30,LOW(65535)
00703b efff      	LDI  R31,HIGH(65535)
00703c 962a      	ADIW R28,10
00703d 9508      	RET
                 ; 000D 01E4     }
                 ; 000D 01E5 
                 ; 000D 01E6     if(sensor[ch].status != SENS_NORMAL){
                 _0x1A0085:
00703e 85a8      	LDD  R26,Y+8
00703f 85b9      	LDD  R27,Y+8+1
007040 940e c8fd 	CALL SUBOPT_0x213
007042 30e0      	CPI  R30,0
007043 f091      	BREQ _0x1A0086
                 ; 000D 01E7         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d error(0x%02X)\r\n",ch+1,sensor[ch].status);
                +
007044 e0e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1004 ) )
007045 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1004 ) )
007046 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1004 ) )
007047 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1004 ) )
                 	__POINTD1FN _0x1A0000,1004
007048 940e c9cc 	CALL SUBOPT_0x232
00704a 940e c904 	CALL SUBOPT_0x214
00704c 89a8      	LDD  R26,Y+16
00704d 89b9      	LDD  R27,Y+16+1
00704e 940e c8fd 	CALL SUBOPT_0x213
007050 940e c90a 	CALL SUBOPT_0x215
                 ; 000D 01E8         return -1;
007052 efef      	LDI  R30,LOW(65535)
007053 efff      	LDI  R31,HIGH(65535)
007054 940c 7522 	JMP  _0x20E005C
                 ; 000D 01E9     }
                 ; 000D 01EA 
                 ; 000D 01EB     printDebug("<sensorSetCurrentSetPoint> buf: [%d]/[%d][%d][%d][%d][%d]\r\n",
                 _0x1A0086:
                 ; 000D 01EC                                         buf[0],buf[1],buf[2],buf[3],buf[4],buf[5]);
                +
007056 e4e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1067 ) )
007057 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1067 ) )
007058 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1067 ) )
007059 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1067 ) )
                 	__POINTD1FN _0x1A0000,1067
00705a 940e da29 	CALL __PUTPARD1
00705c 85a8      	LDD  R26,Y+8
00705d 85b9      	LDD  R27,Y+8+1
00705e 91ec      	LD   R30,X
00705f 940e be99 	CALL SUBOPT_0x65
007061 85ec      	LDD  R30,Y+12
007062 85fd      	LDD  R31,Y+12+1
007063 81e1      	LDD  R30,Z+1
007064 940e be99 	CALL SUBOPT_0x65
007066 89e8      	LDD  R30,Y+16
007067 89f9      	LDD  R31,Y+16+1
007068 81e2      	LDD  R30,Z+2
007069 940e be99 	CALL SUBOPT_0x65
00706b 89ec      	LDD  R30,Y+20
00706c 89fd      	LDD  R31,Y+20+1
00706d 81e3      	LDD  R30,Z+3
00706e 940e be99 	CALL SUBOPT_0x65
007070 8de8      	LDD  R30,Y+24
007071 8df9      	LDD  R31,Y+24+1
007072 81e4      	LDD  R30,Z+4
007073 940e be99 	CALL SUBOPT_0x65
007075 8dec      	LDD  R30,Y+28
007076 8dfd      	LDD  R31,Y+28+1
007077 81e5      	LDD  R30,Z+5
007078 940e be99 	CALL SUBOPT_0x65
00707a e188      	LDI  R24,24
00707b 940e 9afc 	CALL _printDebug
00707d 966c      	ADIW R28,28
                 ; 000D 01ED 
                 ; 000D 01EE     val =  (float) (0.0);
00707e e0e0      	LDI  R30,LOW(0)
00707f 940e da24 	CALL __CLRD1S0
                 ; 000D 01EF     val += (float) (buf[1] * 100);
007081 81ec      	LDD  R30,Y+4
007082 81fd      	LDD  R31,Y+4+1
007083 81e1      	LDD  R30,Z+1
007084 e6a4      	LDI  R26,LOW(100)
007085 940e c9d1 	CALL SUBOPT_0x233
                 ; 000D 01F0     val += (float) (buf[2] * 10);
007087 81e2      	LDD  R30,Z+2
007088 e0aa      	LDI  R26,LOW(10)
007089 940e c9d1 	CALL SUBOPT_0x233
                 ; 000D 01F1     val += (float) (buf[3]);
00708b 81e3      	LDD  R30,Z+3
00708c 27ff      	CLR  R31
00708d 2766      	CLR  R22
00708e 2777      	CLR  R23
00708f 940e d753 	CALL __CDF1
007091 940e c9dd 	CALL SUBOPT_0x234
                 ; 000D 01F2     val += (float) (buf[4] * 0.1);
007093 81e4      	LDD  R30,Z+4
007094 e0f0      	LDI  R31,0
007095 940e c89e 	CALL SUBOPT_0x205
007097 940e c030 	CALL SUBOPT_0xA0
007099 940e c9dd 	CALL SUBOPT_0x234
                 ; 000D 01F3     val += (float) (buf[5] * 0.01);
00709b 940e c9e6 	CALL SUBOPT_0x235
00709d 940e c89e 	CALL SUBOPT_0x205
                +
00709f e0aa     +LDI R26 , LOW ( 0x3C23D70A )
0070a0 edb7     +LDI R27 , HIGH ( 0x3C23D70A )
0070a1 e283     +LDI R24 , BYTE3 ( 0x3C23D70A )
0070a2 e39c     +LDI R25 , BYTE4 ( 0x3C23D70A )
                 	__GETD2N 0x3C23D70A
0070a3 940e d7dd 	CALL __MULF12
0070a5 940e bf9e 	CALL SUBOPT_0x8C
0070a7 940e d78d 	CALL __ADDF12
0070a9 940e c18a 	CALL SUBOPT_0xD9
                 ; 000D 01F4     if(buf[0] == 1){    val *= (float) (-1.0);  }
0070ab 81ac      	LDD  R26,Y+4
0070ac 81bd      	LDD  R27,Y+4+1
0070ad 91ac      	LD   R26,X
0070ae 30a1      	CPI  R26,LOW(0x1)
0070af f441      	BRNE _0x1A0087
0070b0 940e bf9e 	CALL SUBOPT_0x8C
                +
0070b2 e0e0     +LDI R30 , LOW ( 0xBF800000 )
0070b3 e0f0     +LDI R31 , HIGH ( 0xBF800000 )
0070b4 e860     +LDI R22 , BYTE3 ( 0xBF800000 )
0070b5 eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
0070b6 940e c042 	CALL SUBOPT_0xA2
                 ; 000D 01F5 
                 ; 000D 01F6     printDebug("<sensorSetCurrentSetPoint> sensor %1d, point %1d, set to [%f]",ch+1,pnt,val);
                 _0x1A0087:
                +
0070b8 e7ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1127 ) )
0070b9 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1127 ) )
0070ba e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1127 ) )
0070bb e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1127 ) )
                 	__POINTD1FN _0x1A0000,1127
0070bc 940e c9cc 	CALL SUBOPT_0x232
0070be 940e c904 	CALL SUBOPT_0x214
0070c0 85ee      	LDD  R30,Y+14
0070c1 85ff      	LDD  R31,Y+14+1
0070c2 940e d919 	CALL __CWD1
0070c4 940e bfa1 	CALL SUBOPT_0x8D
0070c6 940e bfa8 	CALL SUBOPT_0x8E
                 ; 000D 01F7 
                 ; 000D 01F8     if(pnt == CALPOINT(1)){
0070c8 81ae      	LDD  R26,Y+6
0070c9 81bf      	LDD  R27,Y+6+1
0070ca 36a5      	CPI  R26,LOW(0x65)
0070cb e0e0      	LDI  R30,HIGH(0x65)
0070cc 07be      	CPC  R27,R30
0070cd f501      	BRNE _0x1A0088
                 ; 000D 01F9         epTempRef1[ch]      = val;
0070ce 85e8      	LDD  R30,Y+8
0070cf 85f9      	LDD  R31,Y+8+1
0070d0 eeaa      	LDI  R26,LOW(_epTempRef1)
0070d1 e0b5      	LDI  R27,HIGH(_epTempRef1)
0070d2 940e c986 	CALL SUBOPT_0x228
                 ; 000D 01FA         epADCRef1[ch]       = adcData[ch];
0070d4 85e8      	LDD  R30,Y+8
0070d5 85f9      	LDD  R31,Y+8+1
0070d6 eda6      	LDI  R26,LOW(_epADCRef1)
0070d7 e0b5      	LDI  R27,HIGH(_epADCRef1)
0070d8 940e bca8 	CALL SUBOPT_0x1C
0070da 940e c9e9 	CALL SUBOPT_0x236
0070dc 940e c9ee 	CALL SUBOPT_0x237
                 ; 000D 01FB         epIsPointSet1[ch]   = 1;
0070de 52af      	SUBI R26,LOW(-_epIsPointSet1)
0070df 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
0070e0 e0e1      	LDI  R30,LOW(1)
0070e1 940e c9f4 	CALL SUBOPT_0x238
                 ; 000D 01FC         epIsPointSet2[ch]   = 0;                        // -- reset cal_point 2 -- //
0070e3 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0070e4 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0070e5 e0e0      	LDI  R30,LOW(0)
0070e6 940e c9f4 	CALL SUBOPT_0x238
                 ; 000D 01FD         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
0070e8 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0070e9 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0070ea e0e0      	LDI  R30,LOW(0)
0070eb 940e da6c 	CALL __EEPROMWRB
                 ; 000D 01FE     }
                 ; 000D 01FF     else if(pnt == CALPOINT(2)){
0070ed c049      	RJMP _0x1A0089
                 _0x1A0088:
0070ee 81ae      	LDD  R26,Y+6
0070ef 81bf      	LDD  R27,Y+6+1
0070f0 36a6      	CPI  R26,LOW(0x66)
0070f1 e0e0      	LDI  R30,HIGH(0x66)
0070f2 07be      	CPC  R27,R30
0070f3 f4d9      	BRNE _0x1A008A
                 ; 000D 0200         epTempRef2[ch]      = val;
0070f4 85e8      	LDD  R30,Y+8
0070f5 85f9      	LDD  R31,Y+8+1
0070f6 e1a7      	LDI  R26,LOW(_epTempRef2)
0070f7 e0b6      	LDI  R27,HIGH(_epTempRef2)
0070f8 940e c986 	CALL SUBOPT_0x228
                 ; 000D 0201         epADCRef2[ch]       = adcData[ch];
0070fa 85e8      	LDD  R30,Y+8
0070fb 85f9      	LDD  R31,Y+8+1
0070fc e0a3      	LDI  R26,LOW(_epADCRef2)
0070fd e0b6      	LDI  R27,HIGH(_epADCRef2)
0070fe 940e bca8 	CALL SUBOPT_0x1C
007100 940e c9e9 	CALL SUBOPT_0x236
007102 940e c9ee 	CALL SUBOPT_0x237
                 ; 000D 0202         epIsPointSet2[ch]   = 1;
007104 50a2      	SUBI R26,LOW(-_epIsPointSet2)
007105 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
007106 e0e1      	LDI  R30,LOW(1)
007107 940e c9f4 	CALL SUBOPT_0x238
                 ; 000D 0203         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
007109 5da5      	SUBI R26,LOW(-_epIsPointSet3)
00710a 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
00710b e0e0      	LDI  R30,LOW(0)
00710c 940e da6c 	CALL __EEPROMWRB
                 ; 000D 0204     }
                 ; 000D 0205     else if(pnt == CALPOINT(3)){
00710e c028      	RJMP _0x1A008B
                 _0x1A008A:
00710f 81ae      	LDD  R26,Y+6
007110 81bf      	LDD  R27,Y+6+1
007111 36a7      	CPI  R26,LOW(0x67)
007112 e0e0      	LDI  R30,HIGH(0x67)
007113 07be      	CPC  R27,R30
007114 f4b1      	BRNE _0x1A008C
                 ; 000D 0206         epTempRef3[ch]      = val;
007115 85e8      	LDD  R30,Y+8
007116 85f9      	LDD  R31,Y+8+1
007117 e4a4      	LDI  R26,LOW(_epTempRef3)
007118 e0b6      	LDI  R27,HIGH(_epTempRef3)
007119 940e c986 	CALL SUBOPT_0x228
                 ; 000D 0207         epADCRef3[ch]       = adcData[ch];
00711b 85e8      	LDD  R30,Y+8
00711c 85f9      	LDD  R31,Y+8+1
00711d e3a0      	LDI  R26,LOW(_epADCRef3)
00711e e0b6      	LDI  R27,HIGH(_epADCRef3)
00711f 940e bca8 	CALL SUBOPT_0x1C
007121 940e c9e9 	CALL SUBOPT_0x236
007123 940e c9ee 	CALL SUBOPT_0x237
                 ; 000D 0208         epIsPointSet3[ch]   = 1;
007125 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007126 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007127 e0e1      	LDI  R30,LOW(1)
007128 940e da6c 	CALL __EEPROMWRB
                 ; 000D 0209     }
                 ; 000D 020A     else{
00712a c00c      	RJMP _0x1A008D
                 _0x1A008C:
                 ; 000D 020B         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
00712b efec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 740 ) )
00712c e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 740 ) )
00712d e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 740 ) )
00712e e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 740 ) )
                 	__POINTD1FN _0x1A0000,740
00712f 940e c35f 	CALL SUBOPT_0x12A
007131 940e c200 	CALL SUBOPT_0xEC
                 ; 000D 020C         return -1;
007133 efef      	LDI  R30,LOW(65535)
007134 efff      	LDI  R31,HIGH(65535)
007135 940c 7522 	JMP  _0x20E005C
                 ; 000D 020D     }
                 _0x1A008D:
                 _0x1A008B:
                 _0x1A0089:
                 ; 000D 020E 
                 ; 000D 020F     return 0;
007137 e0e0      	LDI  R30,LOW(0)
007138 e0f0      	LDI  R31,HIGH(0)
007139 940c 7522 	JMP  _0x20E005C
                 ; 000D 0210 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
00713b 940e da2e 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
00713d 91a0 15d2 	LDS  R26,_dataQ_len
00713f 91b0 15d3 	LDS  R27,_dataQ_len+1
007141 971a      	SBIW R26,10
007142 f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
007143 efef      	LDI  R30,LOW(65535)
007144 efff      	LDI  R31,HIGH(65535)
007145 940c 7522 	JMP  _0x20E005C
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
007147 940e c9f9 	CALL SUBOPT_0x239
007149 59e2      	SUBI R30,LOW(-_dataQ)
00714a 4efa      	SBCI R31,HIGH(-_dataQ)
00714b 940e c9ff 	CALL SUBOPT_0x23A
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
00714d 940e c9f9 	CALL SUBOPT_0x239
                +
00714f 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
007150 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
007151 81ac      	LDD  R26,Y+4
007152 81bd      	LDD  R27,Y+4+1
007153 83a0      	STD  Z+0,R26
007154 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
007155 940e c9f9 	CALL SUBOPT_0x239
                +
007157 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007158 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007159 940e bf9e 	CALL SUBOPT_0x8C
00715b 940e ca04 	CALL SUBOPT_0x23B
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
00715d 01d5      	MOVW R26,R10
00715e 9611      	ADIW R26,1
00715f 940e ca07 	CALL SUBOPT_0x23C
007161 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
007162 eda2      	LDI  R26,LOW(_dataQ_len)
007163 e1b5      	LDI  R27,HIGH(_dataQ_len)
007164 940e bf3c 	CALL SUBOPT_0x7C
                 ; 000E 0019 
                 ; 000E 001A     return 0;
007166 e0e0      	LDI  R30,LOW(0)
007167 e0f0      	LDI  R31,HIGH(0)
007168 940c 7522 	JMP  _0x20E005C
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
00716a 93ba      	ST   -Y,R27
00716b 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
00716c 91e0 15d2 	LDS  R30,_dataQ_len
00716e 91f0 15d3 	LDS  R31,_dataQ_len+1
007170 9730      	SBIW R30,0
007171 f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
007172 efef      	LDI  R30,LOW(65535)
007173 efff      	LDI  R31,HIGH(65535)
007174 940c 7505 	JMP  _0x20E005D
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
007176 940e ca0c 	CALL SUBOPT_0x23D
007178 59e2      	SUBI R30,LOW(-_dataQ)
007179 4efa      	SBCI R31,HIGH(-_dataQ)
00717a 940e ca12 	CALL SUBOPT_0x23E
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
00717c 940e ca0c 	CALL SUBOPT_0x23D
                +
00717e 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
00717f 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
007180 01df      	MOVW R26,R30
007181 940e d9f0 	CALL __GETW1P
007183 81aa      	LDD  R26,Y+2
007184 81bb      	LDD  R27,Y+2+1
007185 93ed      	ST   X+,R30
007186 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
007187 940e ca0c 	CALL SUBOPT_0x23D
                +
007189 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
00718a 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
00718b 01df      	MOVW R26,R30
00718c 940e d9f4 	CALL __GETD1P
00718e 81a8      	LD   R26,Y
00718f 81b9      	LDD  R27,Y+1
007190 940e d9ff 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
007192 01d6      	MOVW R26,R12
007193 9611      	ADIW R26,1
007194 940e ca07 	CALL SUBOPT_0x23C
007196 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
007197 eda2      	LDI  R26,LOW(_dataQ_len)
007198 e1b5      	LDI  R27,HIGH(_dataQ_len)
007199 940c 74fe 	JMP  _0x20E005F
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
00719b 931a      	ST   -Y,R17
                 ;	current_status -> R17
00719c e010      	LDI  R17,0
00719d 91e0 0103 	LDS  R30,259
00719f 78e0      	ANDI R30,LOW(0x80)
0071a0 e0f0      	LDI  R31,0
0071a1 940e d8ea 	CALL __ASRW3
0071a3 940e d8e8 	CALL __ASRW4
0071a5 9730      	SBIW R30,0
0071a6 f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
0071a7 e0e0      	LDI  R30,LOW(0)
0071a8 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
0071aa 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
0071ac e6e6     +LDI R30 , LOW ( 0x40866666 )
0071ad e6f6     +LDI R31 , HIGH ( 0x40866666 )
0071ae e866     +LDI R22 , BYTE3 ( 0x40866666 )
0071af e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
0071b0 940e ca1a 	CALL SUBOPT_0x23F
                 ; 000F 0035         return 0;
0071b2 c041      	RJMP _0x20E0065
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
0071b3 e0e1      	LDI  R30,LOW(1)
0071b4 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
0071b6 940e 4315 	CALL _readBattery
0071b8 940e ca1a 	CALL SUBOPT_0x23F
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
0071ba 940e ca23 	CALL SUBOPT_0x240
0071bc 940e da7d 	CALL __CPD10
0071be f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
0071bf e0e0      	LDI  R30,LOW(0)
0071c0 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
0071c2 c02e      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
0071c3 940e ca23 	CALL SUBOPT_0x240
0071c5 940e bd11 	CALL SUBOPT_0x2D
0071c7 940e d870 	CALL __CMPF12
0071c9 f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
0071ca e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
0071cb c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
0071cc e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
0071cd 91a0 15d9 	LDS  R26,_lastCheck_S00F0001000
0071cf 171a      	CP   R17,R26
0071d0 f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
0071d1 e0e0      	LDI  R30,LOW(0)
0071d2 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
0071d4 9310 15d9 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
0071d6 91e0 15d8 	LDS  R30,_t_flag_S00F0001000
0071d8 30e0      	CPI  R30,0
0071d9 f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
0071da ede4      	LDI  R30,LOW(_t_S00F0001000)
0071db e1f5      	LDI  R31,HIGH(_t_S00F0001000)
0071dc 940e bced 	CALL SUBOPT_0x27
                 ; 000F 0053                 t_flag              = 1;
0071de e0e1      	LDI  R30,LOW(1)
0071df c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
0071e0 91a0 15d4 	LDS  R26,_t_S00F0001000
0071e2 91b0 15d5 	LDS  R27,_t_S00F0001000+1
0071e4 9180 15d6 	LDS  R24,_t_S00F0001000+2
0071e6 9190 15d7 	LDS  R25,_t_S00F0001000+3
0071e8 940e 405d 	CALL _TIMER_checkTimerExceed
0071ea 9730      	SBIW R30,0
0071eb f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
0071ec 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
0071ee e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
0071ef 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
0071f1 e0e1      	LDI  R30,LOW(1)
0071f2 e0f0      	LDI  R31,HIGH(1)
0071f3 c002      	RJMP _0x20E0064
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0065:
0071f4 e0e0      	LDI  R30,LOW(0)
0071f5 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0064:
0071f6 9119      	LD   R17,Y+
0071f7 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
0071f8 931a      	ST   -Y,R17
0071f9 930a      	ST   -Y,R16
                 ;	res -> R16,R17
0071fa 91e0 0100 	LDS  R30,256
0071fc 940e ca2c 	CALL SUBOPT_0x241
0071fe 9730      	SBIW R30,0
0071ff f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
007200 e0e1      	LDI  R30,LOW(1)
007201 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
007203 efef      	LDI  R30,LOW(255)
007204 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
007206 e0e0      	LDI  R30,LOW(0)
007207 93e0 1421 	STS  _commLostTimer,R30
007209 93e0 1422 	STS  _commLostTimer+1,R30
00720b 93e0 1423 	STS  _commLostTimer+2,R30
00720d 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
00720f e0e1      	LDI  R30,LOW(1)
007210 e0f0      	LDI  R31,HIGH(1)
007211 c047      	RJMP _0x20E0063
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
007212 e0e0      	LDI  R30,LOW(0)
007213 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
007215 940e c511 	CALL SUBOPT_0x172
007217 940e bd70 	CALL SUBOPT_0x3A
007219 f029      	BREQ _0x1E0013
00721a 940e c511 	CALL SUBOPT_0x172
00721c 940e da89 	CALL __CPD02
00721e f409      	BRNE _0x1E0014
                 _0x1E0013:
00721f c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
007220 ecea     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
007221 e4f8     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
007222 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
007223 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
007224 940e c521 	CALL SUBOPT_0x174
007226 940e c521 	CALL SUBOPT_0x174
007228 940e bcbc 	CALL SUBOPT_0x20
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
00722a 940e c511 	CALL SUBOPT_0x172
00722c 940e 405d 	CALL _TIMER_checkTimerExceed
00722e 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
00722f 2311      	TST  R17
007230 f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
007231 efef      	LDI  R30,LOW(255)
007232 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
007234 e0e0      	LDI  R30,LOW(0)
007235 e0f0      	LDI  R31,HIGH(0)
007236 c022      	RJMP _0x20E0063
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
007237 2e00      	MOV  R0,R16
007238 2a01      	OR   R0,R17
007239 f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
00723a 91a0 1480 	LDS  R26,_serverCommStatus
00723c 30a2      	CPI  R26,LOW(0x2)
00723d f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
00723e efee     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
00723f e4f8     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
007240 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
007241 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
007242 940e bbec 	CALL SUBOPT_0x3
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
007244 e0e2      	LDI  R30,LOW(2)
007245 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
007247 e0e1      	LDI  R30,LOW(1)
007248 e0f0      	LDI  R31,HIGH(1)
007249 c00f      	RJMP _0x20E0063
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
00724a 91e0 1480 	LDS  R30,_serverCommStatus
00724c 30e0      	CPI  R30,0
00724d f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
00724e e2e2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
00724f e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
007250 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
007251 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
007252 940e bbec 	CALL SUBOPT_0x3
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
007254 e0e0      	LDI  R30,LOW(0)
007255 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
007257 e0e0      	LDI  R30,LOW(0)
007258 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0063:
007259 9109      	LD   R16,Y+
00725a 9119      	LD   R17,Y+
00725b 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
00725c 940e ca31 	CALL SUBOPT_0x242
00725e f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
00725f e0e2      	LDI  R30,LOW(2)
007260 c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
007261 940e bcf5 	CALL SUBOPT_0x28
                +
007263 e0e0     +LDI R30 , LOW ( 0x400 )
007264 e0f4     +LDI R31 , HIGH ( 0x400 )
007265 e060     +LDI R22 , BYTE3 ( 0x400 )
007266 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
007267 940e d990 	CALL __DIVD21U
007269 01df      	MOVW R26,R30
                +
00726a 91e0 1375+LDS R30 , _env_config + ( 16 )
00726c 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
00726e 17ae      	CP   R26,R30
00726f 07bf      	CPC  R27,R31
007270 f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
007271 e0e1      	LDI  R30,LOW(1)
007272 c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
007273 e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
007274 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
007276 30e0      	CPI  R30,0
007277 f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
007278 e0e1      	LDI  R30,LOW(1)
007279 e0f0      	LDI  R31,HIGH(1)
00727a 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
00727b c1ac      	RJMP _0x20E0060
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
00727c 93ba      	ST   -Y,R27
00727d 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
00727e 81a9      	LDD  R26,Y+1
00727f 23aa      	TST  R26
007280 f022      	BRMI _0x1E0022
007281 81a8      	LD   R26,Y
007282 81b9      	LDD  R27,Y+1
007283 9715      	SBIW R26,5
007284 f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
007285 e4e4     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
007286 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
007287 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
007288 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
007289 940e c37b 	CALL SUBOPT_0x130
00728b 940e c200 	CALL SUBOPT_0xEC
                 ; 000F 00B1         return 0;
00728d e0e0      	LDI  R30,LOW(0)
00728e e0f0      	LDI  R31,HIGH(0)
00728f c01d      	RJMP _0x20E0062
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
007290 940e ca3c 	CALL SUBOPT_0x243
                +
007292 2f7e     +MOV R23 , R30
007293 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
007294 81a8      	LD   R26,Y
007295 81b9      	LDD  R27,Y+1
007296 940e c8fd 	CALL SUBOPT_0x213
                +
007298 2fa7     +MOV R26 , R23
007299 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
00729a 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
00729b 940e ca3c 	CALL SUBOPT_0x243
00729d 81a0      	LD   R26,Z
00729e 3faf      	CPI  R26,LOW(0xFF)
00729f f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
0072a0 e0e0      	LDI  R30,LOW(0)
0072a1 e0f0      	LDI  R31,HIGH(0)
0072a2 c00a      	RJMP _0x20E0062
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
0072a3 940e ca3c 	CALL SUBOPT_0x243
0072a5 81e0      	LD   R30,Z
0072a6 30e0      	CPI  R30,0
0072a7 f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
0072a8 e0e1      	LDI  R30,LOW(1)
0072a9 e0f0      	LDI  R31,HIGH(1)
0072aa c002      	RJMP _0x20E0062
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
0072ab e0e0      	LDI  R30,LOW(0)
0072ac e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0062:
0072ad 9622      	ADIW R28,2
0072ae 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
0072af 940e bf59 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
0072b1 e000     +LDI R16 , LOW ( 0 )
0072b2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0072b3 81ab      	LDD  R26,Y+3
0072b4 23aa      	TST  R26
0072b5 f022      	BRMI _0x1E0029
0072b6 81aa      	LDD  R26,Y+2
0072b7 81bb      	LDD  R27,Y+2+1
0072b8 9715      	SBIW R26,5
0072b9 f05c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
0072ba e7e9     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
0072bb e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
0072bc e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
0072bd e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
0072be 940e c290 	CALL SUBOPT_0x106
0072c0 940e c200 	CALL SUBOPT_0xEC
                 ; 000F 00CC         return 0;
0072c2 e0e0      	LDI  R30,LOW(0)
0072c3 e0f0      	LDI  R31,HIGH(0)
0072c4 c0cf      	RJMP _0x20E0061
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
0072c5 940e c32c 	CALL SUBOPT_0x121
                +
0072c7 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
0072c8 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
0072c9 81e0      	LD   R30,Z
0072ca 30e0      	CPI  R30,0
0072cb f019      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
0072cc e0e0      	LDI  R30,LOW(0)
0072cd e0f0      	LDI  R31,HIGH(0)
0072ce c0c5      	RJMP _0x20E0061
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
0072cf 940e c32c 	CALL SUBOPT_0x121
0072d1 940e bcb6 	CALL SUBOPT_0x1F
0072d3 937f      	PUSH R23
0072d4 936f      	PUSH R22
0072d5 93ff      	PUSH R31
0072d6 93ef      	PUSH R30
0072d7 940e c2b8 	CALL SUBOPT_0x10E
                +
0072d9 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
0072da 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
0072db 01df      	MOVW R26,R30
0072dc 940e d9f4 	CALL __GETD1P
0072de 91af      	POP  R26
0072df 91bf      	POP  R27
0072e0 918f      	POP  R24
0072e1 919f      	POP  R25
0072e2 940e d870 	CALL __CMPF12
0072e4 f508      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
0072e5 940e ca41 	CALL SUBOPT_0x244
0072e7 81e0      	LD   R30,Z
0072e8 30e0      	CPI  R30,0
0072e9 f479      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
0072ea 940e ca46 	CALL SUBOPT_0x245
0072ec 940e bca8 	CALL SUBOPT_0x1C
0072ee 940e ca4b 	CALL SUBOPT_0x246
0072f0 940e ca53 	CALL SUBOPT_0x247
0072f2 940e bcb2 	CALL SUBOPT_0x1E
                 ; 000F 00D9             flag_lower[ch] = 1;
0072f4 940e ca41 	CALL SUBOPT_0x244
0072f6 e0a1      	LDI  R26,LOW(1)
0072f7 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
0072f8 c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
0072f9 940e ca46 	CALL SUBOPT_0x245
0072fb 940e bc9b 	CALL SUBOPT_0x1A
0072fd 940e bca2 	CALL SUBOPT_0x1B
0072ff f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
007300 940e ca58 	CALL SUBOPT_0x248
007302 60e1      	ORI  R30,1
007303 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
007304 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
007305 c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
007306 940e ca41 	CALL SUBOPT_0x244
007308 e0a0      	LDI  R26,LOW(0)
007309 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
00730a 940e ca58 	CALL SUBOPT_0x248
00730c 7fee      	ANDI R30,0xFE
00730d 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
00730e 940e c32c 	CALL SUBOPT_0x121
007310 940e bcb6 	CALL SUBOPT_0x1F
007312 937f      	PUSH R23
007313 936f      	PUSH R22
007314 93ff      	PUSH R31
007315 93ef      	PUSH R30
007316 940e c2b8 	CALL SUBOPT_0x10E
                +
007318 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
007319 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00731a 01df      	MOVW R26,R30
00731b 940e d9f4 	CALL __GETD1P
00731d 91af      	POP  R26
00731e 91bf      	POP  R27
00731f 918f      	POP  R24
007320 919f      	POP  R25
007321 940e d870 	CALL __CMPF12
007323 f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
007324 940e ca58 	CALL SUBOPT_0x248
007326 60e2      	ORI  R30,2
007327 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
007328 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
007329 c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
00732a 940e ca58 	CALL SUBOPT_0x248
00732c 7fed      	ANDI R30,0xFD
00732d 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
00732e 940e c32c 	CALL SUBOPT_0x121
007330 940e bcb6 	CALL SUBOPT_0x1F
007332 937f      	PUSH R23
007333 936f      	PUSH R22
007334 93ff      	PUSH R31
007335 93ef      	PUSH R30
007336 940e c2b8 	CALL SUBOPT_0x10E
                +
007338 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
007339 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00733a 01df      	MOVW R26,R30
00733b 940e d9f4 	CALL __GETD1P
00733d 91af      	POP  R26
00733e 91bf      	POP  R27
00733f 918f      	POP  R24
007340 919f      	POP  R25
007341 940e d870 	CALL __CMPF12
007343 f009      	BREQ PC+2
007344 f410      	BRCC PC+3
007345 940c 7368 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
007347 940e ca5e 	CALL SUBOPT_0x249
007349 81e0      	LD   R30,Z
00734a 30e0      	CPI  R30,0
00734b f479      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
00734c 940e ca46 	CALL SUBOPT_0x245
00734e 940e bca8 	CALL SUBOPT_0x1C
007350 940e ca4b 	CALL SUBOPT_0x246
007352 940e ca63 	CALL SUBOPT_0x24A
007354 940e bcb2 	CALL SUBOPT_0x1E
                 ; 000F 0101             flag_upper[ch] = 1;
007356 940e ca5e 	CALL SUBOPT_0x249
007358 e0a1      	LDI  R26,LOW(1)
007359 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
00735a c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
00735b 940e ca46 	CALL SUBOPT_0x245
00735d 940e bc9b 	CALL SUBOPT_0x1A
00735f 940e bca2 	CALL SUBOPT_0x1B
007361 f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
007362 940e ca58 	CALL SUBOPT_0x248
007364 60e4      	ORI  R30,4
007365 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
007366 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
007367 c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
007368 940e ca5e 	CALL SUBOPT_0x249
00736a e0a0      	LDI  R26,LOW(0)
00736b 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
00736c 940e ca58 	CALL SUBOPT_0x248
00736e 7feb      	ANDI R30,0xFB
00736f 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
007370 940e c32c 	CALL SUBOPT_0x121
007372 940e bcb6 	CALL SUBOPT_0x1F
007374 937f      	PUSH R23
007375 936f      	PUSH R22
007376 93ff      	PUSH R31
007377 93ef      	PUSH R30
007378 940e c2b8 	CALL SUBOPT_0x10E
                +
00737a 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00737b 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00737c 01df      	MOVW R26,R30
00737d 940e d9f4 	CALL __GETD1P
00737f 91af      	POP  R26
007380 91bf      	POP  R27
007381 918f      	POP  R24
007382 919f      	POP  R25
007383 940e d870 	CALL __CMPF12
007385 f009      	BREQ PC+2
007386 f410      	BRCC PC+3
007387 940c 738f 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
007389 940e ca58 	CALL SUBOPT_0x248
00738b 60e8      	ORI  R30,8
00738c 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
00738d 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
00738e c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
00738f 940e ca58 	CALL SUBOPT_0x248
007391 7fe7      	ANDI R30,0XF7
007392 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
007393 01f8      	MOVW R30,R16
                 _0x20E0061:
007394 8119      	LDD  R17,Y+1
007395 8108      	LDD  R16,Y+0
007396 9624      	ADIW R28,4
007397 9508      	RET
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
007398 940e da99 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
00739a ef1f      	LDI  R17,255
00739b 940e bbd8 	CALL SUBOPT_0x0
                +
00739d e020     +LDI R18 , LOW ( 0 )
00739e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
00739f 3022     +CPI R18 , LOW ( 2 )
0073a0 e0e0     +LDI R30 , HIGH ( 2 )
0073a1 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0073a2 f014      	BRLT PC+3
0073a3 940c 7412 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
0073a5 940e bc70 	CALL SUBOPT_0x15
0073a7 81a0      	LD   R26,Z
0073a8 30a1      	CPI  R26,LOW(0x1)
0073a9 f011      	BREQ PC+3
0073aa 940c 740f 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
0073ac 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
0073ad 9730      	SBIW R30,0
0073ae f441      	BRNE _0x1E0042
0073af 91e0 0103 	LDS  R30,259
0073b1 940e ca2c 	CALL SUBOPT_0x241
0073b3 940e d92d 	CALL __LNEGW1
0073b5 2f1e      	MOV  R17,R30
0073b6 c01b      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
0073b7 30e1      	CPI  R30,LOW(0x1)
0073b8 e0a0      	LDI  R26,HIGH(0x1)
0073b9 07fa      	CPC  R31,R26
0073ba f451      	BRNE _0x1E0044
0073bb 91e0 0103 	LDS  R30,259
0073bd 70e8      	ANDI R30,LOW(0x8)
0073be e0f0      	LDI  R31,0
0073bf 940e d8ea 	CALL __ASRW3
0073c1 940e d92d 	CALL __LNEGW1
0073c3 2f1e      	MOV  R17,R30
0073c4 c00d      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
0073c5 ebe6     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
0073c6 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
0073c7 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
0073c8 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
0073c9 940e bc56 	CALL SUBOPT_0x11
0073cb 940e bc5e 	CALL SUBOPT_0x12
0073cd e0e0      	LDI  R30,LOW(0)
0073ce e0f0      	LDI  R31,HIGH(0)
0073cf 940e daa0 	CALL __LOADLOCR6
0073d1 c133      	RJMP _0x20E005D
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
0073d2 e0a0      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
0073d3 e1b6      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
0073d4 0fa2      	ADD  R26,R18
0073d5 1fb3      	ADC  R27,R19
0073d6 91ec      	LD   R30,X
0073d7 17e1      	CP   R30,R17
0073d8 f091      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
0073d9 01f9      	MOVW R30,R18
0073da efa8      	LDI  R26,LOW(_t_S00F0006000)
0073db e1b5      	LDI  R27,HIGH(_t_S00F0006000)
0073dc 940e bca8 	CALL SUBOPT_0x1C
0073de 93fa      	ST   -Y,R31
0073df 93ea      	ST   -Y,R30
                +
0073e0 e0a1     +LDI R26 , LOW ( 0x1 )
0073e1 e0b0     +LDI R27 , HIGH ( 0x1 )
0073e2 e080     +LDI R24 , BYTE3 ( 0x1 )
0073e3 e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
0073e4 940e 4073 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
0073e6 01f9      	MOVW R30,R18
0073e7 50e0      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
0073e8 4efa      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
0073e9 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
0073ea c020      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
0073eb e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0073ec e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0073ed 940e bc48 	CALL SUBOPT_0xF
0073ef f4f9      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
0073f0 01f9      	MOVW R30,R18
0073f1 efa8      	LDI  R26,LOW(_t_S00F0006000)
0073f2 e1b5      	LDI  R27,HIGH(_t_S00F0006000)
0073f3 940e bc9b 	CALL SUBOPT_0x1A
0073f5 940e bca2 	CALL SUBOPT_0x1B
0073f7 f099      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
0073f8 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0073f9 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0073fa 0fa2      	ADD  R26,R18
0073fb 1fb3      	ADC  R27,R19
0073fc e0e1      	LDI  R30,LOW(1)
0073fd 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
0073fe 3010      	CPI  R17,0
0073ff f021      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
007400 940e bd04 	CALL SUBOPT_0x2A
007402 e0e1      	LDI  R30,LOW(1)
007403 c003      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
007404 940e bd04 	CALL SUBOPT_0x2A
007406 e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
007407 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
007408 5f4f     +SUBI R20 , LOW ( - 1 )
007409 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
00740a c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
00740b e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
00740c e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
00740d 940e bc63 	CALL SUBOPT_0x13
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
00740f 5f2f     +SUBI R18 , LOW ( - 1 )
007410 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
007411 cf8d      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
007412 01fa      	MOVW R30,R20
007413 940e daa0 	CALL __LOADLOCR6
007415 c0ef      	RJMP _0x20E005D
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
007416 91e0 1434 	LDS  R30,_d_out
007418 30e0      	CPI  R30,0
007419 f011      	BREQ _0x1E004C
00741a e0e1      	LDI  R30,LOW(1)
00741b c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
00741c e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
00741d 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
00741f 91e0 1435+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
007421 30e0      	CPI  R30,0
007422 f011      	BREQ _0x1E004E
007423 e0e1      	LDI  R30,LOW(1)
007424 c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
007425 e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
007426 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E0060:
007428 e0e0      	LDI  R30,LOW(0)
007429 e0f0      	LDI  R31,HIGH(0)
00742a 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
00742b 940e bf59 	CALL SUBOPT_0x81
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
00742d e000     +LDI R16 , LOW ( 0 )
00742e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00742f 81aa      	LDD  R26,Y+2
007430 81bb      	LDD  R27,Y+2+1
007431 940e c2e2 	CALL SUBOPT_0x115
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
007433 940e 5196 	CALL _isDeviceConfig
007435 9730      	SBIW R30,0
007436 f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
007437 81aa      	LDD  R26,Y+2
007438 81bb      	LDD  R27,Y+2+1
007439 91ed      	LD   R30,X+
00743a 91fd      	LD   R31,X+
00743b 68f0      	ORI  R31,HIGH(0x8000)
00743c c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
00743d 81aa      	LDD  R26,Y+2
00743e 81bb      	LDD  R27,Y+2+1
00743f 91ed      	LD   R30,X+
007440 91fd      	LD   R31,X+
007441 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
007442 93fe      	ST   -X,R31
007443 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
007444 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
007446 30e0      	CPI  R30,0
007447 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
007448 81aa      	LDD  R26,Y+2
007449 81bb      	LDD  R27,Y+2+1
00744a 91ed      	LD   R30,X+
00744b 91fd      	LD   R31,X+
00744c 64f0      	ORI  R31,HIGH(0x4000)
00744d c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
00744e 81aa      	LDD  R26,Y+2
00744f 81bb      	LDD  R27,Y+2+1
007450 91ed      	LD   R30,X+
007451 91fd      	LD   R31,X+
007452 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
007453 93fe      	ST   -X,R31
007454 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
007455 91a0 11b6 	LDS  R26,_operating_config
007457 31a0      	CPI  R26,LOW(0x10)
007458 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
007459 81aa      	LDD  R26,Y+2
00745a 81bb      	LDD  R27,Y+2+1
00745b 91ed      	LD   R30,X+
00745c 91fd      	LD   R31,X+
00745d 60f8      	ORI  R31,HIGH(0x800)
00745e c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
00745f 81aa      	LDD  R26,Y+2
007460 81bb      	LDD  R27,Y+2+1
007461 91ed      	LD   R30,X+
007462 91fd      	LD   R31,X+
007463 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
007464 93fe      	ST   -X,R31
007465 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
007466 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
007468 30e0      	CPI  R30,0
007469 f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
00746a 81aa      	LDD  R26,Y+2
00746b 81bb      	LDD  R27,Y+2+1
00746c 91ed      	LD   R30,X+
00746d 91fd      	LD   R31,X+
00746e 60f2      	ORI  R31,HIGH(0x200)
00746f c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
007470 81aa      	LDD  R26,Y+2
007471 81bb      	LDD  R27,Y+2+1
007472 91ed      	LD   R30,X+
007473 91fd      	LD   R31,X+
007474 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
007475 93fe      	ST   -X,R31
007476 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
007477 e000     +LDI R16 , LOW ( 0 )
007478 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
007479 3005     +CPI R16 , LOW ( 5 )
00747a e0e0     +LDI R30 , HIGH ( 5 )
00747b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00747c f4a4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
00747d 940e ca68 	CALL SUBOPT_0x24B
00747f f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
007480 940e ca6f 	CALL SUBOPT_0x24C
007482 2be6      	OR   R30,R22
007483 2bf7      	OR   R31,R23
007484 c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
007485 940e ca6f 	CALL SUBOPT_0x24C
007487 95e0      	COM  R30
007488 95f0      	COM  R31
007489 23e6      	AND  R30,R22
00748a 23f7      	AND  R31,R23
                 _0x1E0067:
00748b 01dc      	MOVW R26,R24
00748c 93ed      	ST   X+,R30
00748d 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
00748e 5f0f     +SUBI R16 , LOW ( - 1 )
00748f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007490 cfe8      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
007491 eee3     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
007492 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
007493 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
007494 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
007495 940e c3ee 	CALL SUBOPT_0x146
007497 940e bcad 	CALL SUBOPT_0x1D
007499 940e c5c5 	CALL SUBOPT_0x18C
                 ; 000F 0191 
                 ; 000F 0192     return 0;
00749b 940e c185 	CALL SUBOPT_0xD8
00749d 940c 7a11 	JMP  _0x20E0058
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
00749f 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
0074a0 91a0 1680 	LDS  R26,_eventQ_len
0074a2 91b0 1681 	LDS  R27,_eventQ_len+1
0074a4 9754      	SBIW R26,20
0074a5 f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
0074a6 efef      	LDI  R30,LOW(65535)
0074a7 efff      	LDI  R31,HIGH(65535)
0074a8 c05c      	RJMP _0x20E005D
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
0074a9 940e ca7d 	CALL SUBOPT_0x24D
0074ab 5fec      	SUBI R30,LOW(-_eventQ)
0074ac 4ef9      	SBCI R31,HIGH(-_eventQ)
0074ad 940e c0ae 	CALL SUBOPT_0xB6
0074af 940e ca04 	CALL SUBOPT_0x23B
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
0074b1 940e ca7d 	CALL SUBOPT_0x24D
                +
0074b3 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
0074b4 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0074b5 81a9      	LDD  R26,Y+1
0074b6 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
0074b7 940e ca7d 	CALL SUBOPT_0x24D
                +
0074b9 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0074ba 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0074bb 81a8      	LD   R26,Y
0074bc 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
0074bd 91a0 167c 	LDS  R26,_last_wr_eventQ
0074bf 91b0 167d 	LDS  R27,_last_wr_eventQ+1
0074c1 9611      	ADIW R26,1
0074c2 e1e4      	LDI  R30,LOW(20)
0074c3 e0f0      	LDI  R31,HIGH(20)
0074c4 940e d9c4 	CALL __MODW21
0074c6 93e0 167c 	STS  _last_wr_eventQ,R30
0074c8 93f0 167d 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
0074ca e8a0      	LDI  R26,LOW(_eventQ_len)
0074cb e1b6      	LDI  R27,HIGH(_eventQ_len)
0074cc 91ed      	LD   R30,X+
0074cd 91fd      	LD   R31,X+
0074ce 9631      	ADIW R30,1
0074cf c031      	RJMP _0x20E005E
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
0074d0 93ba      	ST   -Y,R27
0074d1 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
0074d2 91e0 1680 	LDS  R30,_eventQ_len
0074d4 91f0 1681 	LDS  R31,_eventQ_len+1
0074d6 9730      	SBIW R30,0
0074d7 f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
0074d8 efef      	LDI  R30,LOW(65535)
0074d9 efff      	LDI  R31,HIGH(65535)
0074da c02a      	RJMP _0x20E005D
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
0074db 940e ca85 	CALL SUBOPT_0x24E
0074dd 5fec      	SUBI R30,LOW(-_eventQ)
0074de 4ef9      	SBCI R31,HIGH(-_eventQ)
0074df 940e ca12 	CALL SUBOPT_0x23E
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
0074e1 940e ca85 	CALL SUBOPT_0x24E
                +
0074e3 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
0074e4 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0074e5 81e0      	LD   R30,Z
0074e6 81aa      	LDD  R26,Y+2
0074e7 81bb      	LDD  R27,Y+2+1
0074e8 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
0074e9 940e ca85 	CALL SUBOPT_0x24E
                +
0074eb 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0074ec 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0074ed 940e ca8d 	CALL SUBOPT_0x24F
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
0074ef 91a0 167e 	LDS  R26,_last_rd_eventQ
0074f1 91b0 167f 	LDS  R27,_last_rd_eventQ+1
0074f3 9611      	ADIW R26,1
0074f4 e1e4      	LDI  R30,LOW(20)
0074f5 e0f0      	LDI  R31,HIGH(20)
0074f6 940e d9c4 	CALL __MODW21
0074f8 93e0 167e 	STS  _last_rd_eventQ,R30
0074fa 93f0 167f 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
0074fc e8a0      	LDI  R26,LOW(_eventQ_len)
0074fd e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E005F:
0074fe 91ed      	LD   R30,X+
0074ff 91fd      	LD   R31,X+
007500 9731      	SBIW R30,1
                 _0x20E005E:
007501 93fe      	ST   -X,R31
007502 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
007503 e0e0      	LDI  R30,LOW(0)
007504 e0f0      	LDI  R31,HIGH(0)
                 _0x20E005D:
007505 9626      	ADIW R28,6
007506 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
007507 93ba      	ST   -Y,R27
007508 93aa      	ST   -Y,R26
007509 940e bd58 	CALL SUBOPT_0x37
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
00750b e000     +LDI R16 , LOW ( 0 )
00750c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
00750d 81ee      	LDD  R30,Y+6
00750e 81ff      	LDD  R31,Y+6+1
00750f 170e      	CP   R16,R30
007510 071f      	CPC  R17,R31
007511 f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
007512 01f8      	MOVW R30,R16
007513 85a8      	LDD  R26,Y+8
007514 85b9      	LDD  R27,Y+8+1
007515 0fae      	ADD  R26,R30
007516 1fbf      	ADC  R27,R31
007517 91ac      	LD   R26,X
007518 d00b      	RCALL _checkAlarmFromSrc
007519 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
00751a 2b24     +OR R18 , R20
00751b 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
00751c 5f0f     +SUBI R16 , LOW ( - 1 )
00751d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00751e cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
00751f 01f9      	MOVW R30,R18
007520 940e daa0 	CALL __LOADLOCR6
                 _0x20E005C:
007522 962a      	ADIW R28,10
007523 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
007524 93aa      	ST   -Y,R26
007525 940e ca92 	CALL SUBOPT_0x250
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
007527 e020     +LDI R18 , LOW ( 0 )
007528 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
007529 81ec      	LDD  R30,Y+4
00752a e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
00752b 3ce0      	CPI  R30,LOW(0xC0)
00752c e0a0      	LDI  R26,HIGH(0xC0)
00752d 07fa      	CPC  R31,R26
00752e f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
00752f 91a0 146f 	LDS  R26,_sensorStatus
007531 30a0      	CPI  R26,LOW(0x0)
007532 f011      	BREQ _0x22000D
007533 3faf      	CPI  R26,LOW(0xFF)
007534 f421      	BRNE _0x22000F
                 _0x22000D:
007535 91a0 1474 	LDS  R26,_dataStatus
007537 30a0      	CPI  R26,LOW(0x0)
007538 f011      	BREQ _0x22000C
                 _0x22000F:
                +
007539 e021     +LDI R18 , LOW ( 1 )
00753a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
00753b c2b5      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
00753c 3ce1      	CPI  R30,LOW(0xC1)
00753d e0a0      	LDI  R26,HIGH(0xC1)
00753e 07fa      	CPC  R31,R26
00753f f439      	BRNE _0x220011
007540 91e0 1474 	LDS  R30,_dataStatus
007542 70e1      	ANDI R30,LOW(0x1)
007543 f011      	BREQ _0x220012
                +
007544 e021     +LDI R18 , LOW ( 1 )
007545 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
007546 c2aa      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
007547 3ce2      	CPI  R30,LOW(0xC2)
007548 e0a0      	LDI  R26,HIGH(0xC2)
007549 07fa      	CPC  R31,R26
00754a f439      	BRNE _0x220013
00754b 91e0 1474 	LDS  R30,_dataStatus
00754d 71e1      	ANDI R30,LOW(0x11)
00754e f011      	BREQ _0x220014
                +
00754f e021     +LDI R18 , LOW ( 1 )
007550 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
007551 c29f      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
007552 3ce3      	CPI  R30,LOW(0xC3)
007553 e0a0      	LDI  R26,HIGH(0xC3)
007554 07fa      	CPC  R31,R26
007555 f439      	BRNE _0x220015
007556 91e0 1474 	LDS  R30,_dataStatus
007558 70e2      	ANDI R30,LOW(0x2)
007559 f011      	BREQ _0x220016
                +
00755a e021     +LDI R18 , LOW ( 1 )
00755b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
00755c c294      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
00755d 3ce4      	CPI  R30,LOW(0xC4)
00755e e0a0      	LDI  R26,HIGH(0xC4)
00755f 07fa      	CPC  R31,R26
007560 f439      	BRNE _0x220017
007561 91e0 1474 	LDS  R30,_dataStatus
007563 70e4      	ANDI R30,LOW(0x4)
007564 f011      	BREQ _0x220018
                +
007565 e021     +LDI R18 , LOW ( 1 )
007566 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
007567 c289      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
007568 3ce5      	CPI  R30,LOW(0xC5)
007569 e0a0      	LDI  R26,HIGH(0xC5)
00756a 07fa      	CPC  R31,R26
00756b f439      	BRNE _0x220019
00756c 91e0 1474 	LDS  R30,_dataStatus
00756e 71e4      	ANDI R30,LOW(0x14)
00756f f011      	BREQ _0x22001A
                +
007570 e021     +LDI R18 , LOW ( 1 )
007571 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
007572 c27e      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
007573 3ce6      	CPI  R30,LOW(0xC6)
007574 e0a0      	LDI  R26,HIGH(0xC6)
007575 07fa      	CPC  R31,R26
007576 f439      	BRNE _0x22001B
007577 91e0 1474 	LDS  R30,_dataStatus
007579 70e8      	ANDI R30,LOW(0x8)
00757a f011      	BREQ _0x22001C
                +
00757b e021     +LDI R18 , LOW ( 1 )
00757c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
00757d c273      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
00757e 3ce7      	CPI  R30,LOW(0xC7)
00757f e0a0      	LDI  R26,HIGH(0xC7)
007580 07fa      	CPC  R31,R26
007581 f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
007582 91a0 146f 	LDS  R26,_sensorStatus
007584 30a0      	CPI  R26,LOW(0x0)
007585 f011      	BREQ _0x22001F
007586 3faf      	CPI  R26,LOW(0xFF)
007587 f409      	BRNE _0x220020
                 _0x22001F:
007588 c002      	RJMP _0x22001E
                 _0x220020:
                +
007589 e021     +LDI R18 , LOW ( 1 )
00758a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
00758b c265      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
00758c 3ce8      	CPI  R30,LOW(0xC8)
00758d e0a0      	LDI  R26,HIGH(0xC8)
00758e 07fa      	CPC  R31,R26
00758f f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
007590 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
007592 30a0      	CPI  R26,LOW(0x0)
007593 f021      	BREQ _0x220023
                +
007594 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
007596 3faf      	CPI  R26,LOW(0xFF)
007597 f421      	BRNE _0x220025
                 _0x220023:
                +
007598 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
00759a 30a0      	CPI  R26,LOW(0x0)
00759b f011      	BREQ _0x220022
                 _0x220025:
                +
00759c e021     +LDI R18 , LOW ( 1 )
00759d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
00759e c252      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
00759f 3ce9      	CPI  R30,LOW(0xC9)
0075a0 e0a0      	LDI  R26,HIGH(0xC9)
0075a1 07fa      	CPC  R31,R26
0075a2 f439      	BRNE _0x220027
                +
0075a3 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075a5 70e1      	ANDI R30,LOW(0x1)
0075a6 f011      	BREQ _0x220028
                +
0075a7 e021     +LDI R18 , LOW ( 1 )
0075a8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
0075a9 c247      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
0075aa 3cea      	CPI  R30,LOW(0xCA)
0075ab e0a0      	LDI  R26,HIGH(0xCA)
0075ac 07fa      	CPC  R31,R26
0075ad f439      	BRNE _0x220029
                +
0075ae 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075b0 71e1      	ANDI R30,LOW(0x11)
0075b1 f011      	BREQ _0x22002A
                +
0075b2 e021     +LDI R18 , LOW ( 1 )
0075b3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
0075b4 c23c      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
0075b5 3ceb      	CPI  R30,LOW(0xCB)
0075b6 e0a0      	LDI  R26,HIGH(0xCB)
0075b7 07fa      	CPC  R31,R26
0075b8 f439      	BRNE _0x22002B
                +
0075b9 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075bb 70e2      	ANDI R30,LOW(0x2)
0075bc f011      	BREQ _0x22002C
                +
0075bd e021     +LDI R18 , LOW ( 1 )
0075be e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
0075bf c231      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
0075c0 3cec      	CPI  R30,LOW(0xCC)
0075c1 e0a0      	LDI  R26,HIGH(0xCC)
0075c2 07fa      	CPC  R31,R26
0075c3 f439      	BRNE _0x22002D
                +
0075c4 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075c6 70e4      	ANDI R30,LOW(0x4)
0075c7 f011      	BREQ _0x22002E
                +
0075c8 e021     +LDI R18 , LOW ( 1 )
0075c9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
0075ca c226      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
0075cb 3ced      	CPI  R30,LOW(0xCD)
0075cc e0a0      	LDI  R26,HIGH(0xCD)
0075cd 07fa      	CPC  R31,R26
0075ce f439      	BRNE _0x22002F
                +
0075cf 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075d1 71e4      	ANDI R30,LOW(0x14)
0075d2 f011      	BREQ _0x220030
                +
0075d3 e021     +LDI R18 , LOW ( 1 )
0075d4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
0075d5 c21b      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
0075d6 3cee      	CPI  R30,LOW(0xCE)
0075d7 e0a0      	LDI  R26,HIGH(0xCE)
0075d8 07fa      	CPC  R31,R26
0075d9 f439      	BRNE _0x220031
                +
0075da 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075dc 70e8      	ANDI R30,LOW(0x8)
0075dd f011      	BREQ _0x220032
                +
0075de e021     +LDI R18 , LOW ( 1 )
0075df e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
0075e0 c210      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
0075e1 3cef      	CPI  R30,LOW(0xCF)
0075e2 e0a0      	LDI  R26,HIGH(0xCF)
0075e3 07fa      	CPC  R31,R26
0075e4 f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0075e5 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0075e7 30a0      	CPI  R26,LOW(0x0)
0075e8 f021      	BREQ _0x220035
                +
0075e9 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0075eb 3faf      	CPI  R26,LOW(0xFF)
0075ec f409      	BRNE _0x220036
                 _0x220035:
0075ed c002      	RJMP _0x220034
                 _0x220036:
                +
0075ee e021     +LDI R18 , LOW ( 1 )
0075ef e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
0075f0 c200      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
0075f1 3de0      	CPI  R30,LOW(0xD0)
0075f2 e0a0      	LDI  R26,HIGH(0xD0)
0075f3 07fa      	CPC  R31,R26
0075f4 f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
0075f5 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0075f7 30a0      	CPI  R26,LOW(0x0)
0075f8 f021      	BREQ _0x220039
                +
0075f9 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0075fb 3faf      	CPI  R26,LOW(0xFF)
0075fc f421      	BRNE _0x22003B
                 _0x220039:
                +
0075fd 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
0075ff 30a0      	CPI  R26,LOW(0x0)
007600 f011      	BREQ _0x220038
                 _0x22003B:
                +
007601 e021     +LDI R18 , LOW ( 1 )
007602 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
007603 c1ed      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
007604 3de1      	CPI  R30,LOW(0xD1)
007605 e0a0      	LDI  R26,HIGH(0xD1)
007606 07fa      	CPC  R31,R26
007607 f439      	BRNE _0x22003D
                +
007608 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00760a 70e1      	ANDI R30,LOW(0x1)
00760b f011      	BREQ _0x22003E
                +
00760c e021     +LDI R18 , LOW ( 1 )
00760d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
00760e c1e2      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
00760f 3de2      	CPI  R30,LOW(0xD2)
007610 e0a0      	LDI  R26,HIGH(0xD2)
007611 07fa      	CPC  R31,R26
007612 f439      	BRNE _0x22003F
                +
007613 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007615 71e1      	ANDI R30,LOW(0x11)
007616 f011      	BREQ _0x220040
                +
007617 e021     +LDI R18 , LOW ( 1 )
007618 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
007619 c1d7      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
00761a 3de3      	CPI  R30,LOW(0xD3)
00761b e0a0      	LDI  R26,HIGH(0xD3)
00761c 07fa      	CPC  R31,R26
00761d f439      	BRNE _0x220041
                +
00761e 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007620 70e2      	ANDI R30,LOW(0x2)
007621 f011      	BREQ _0x220042
                +
007622 e021     +LDI R18 , LOW ( 1 )
007623 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
007624 c1cc      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
007625 3de4      	CPI  R30,LOW(0xD4)
007626 e0a0      	LDI  R26,HIGH(0xD4)
007627 07fa      	CPC  R31,R26
007628 f439      	BRNE _0x220043
                +
007629 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00762b 70e4      	ANDI R30,LOW(0x4)
00762c f011      	BREQ _0x220044
                +
00762d e021     +LDI R18 , LOW ( 1 )
00762e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
00762f c1c1      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
007630 3de5      	CPI  R30,LOW(0xD5)
007631 e0a0      	LDI  R26,HIGH(0xD5)
007632 07fa      	CPC  R31,R26
007633 f439      	BRNE _0x220045
                +
007634 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007636 71e4      	ANDI R30,LOW(0x14)
007637 f011      	BREQ _0x220046
                +
007638 e021     +LDI R18 , LOW ( 1 )
007639 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
00763a c1b6      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
00763b 3de6      	CPI  R30,LOW(0xD6)
00763c e0a0      	LDI  R26,HIGH(0xD6)
00763d 07fa      	CPC  R31,R26
00763e f439      	BRNE _0x220047
                +
00763f 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007641 70e8      	ANDI R30,LOW(0x8)
007642 f011      	BREQ _0x220048
                +
007643 e021     +LDI R18 , LOW ( 1 )
007644 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
007645 c1ab      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
007646 3de7      	CPI  R30,LOW(0xD7)
007647 e0a0      	LDI  R26,HIGH(0xD7)
007648 07fa      	CPC  R31,R26
007649 f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
00764a 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
00764c 30a0      	CPI  R26,LOW(0x0)
00764d f021      	BREQ _0x22004B
                +
00764e 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007650 3faf      	CPI  R26,LOW(0xFF)
007651 f409      	BRNE _0x22004C
                 _0x22004B:
007652 c002      	RJMP _0x22004A
                 _0x22004C:
                +
007653 e021     +LDI R18 , LOW ( 1 )
007654 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
007655 c19b      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
007656 3de8      	CPI  R30,LOW(0xD8)
007657 e0a0      	LDI  R26,HIGH(0xD8)
007658 07fa      	CPC  R31,R26
007659 f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
00765a 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
00765c 30a0      	CPI  R26,LOW(0x0)
00765d f021      	BREQ _0x22004F
                +
00765e 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007660 3faf      	CPI  R26,LOW(0xFF)
007661 f421      	BRNE _0x220051
                 _0x22004F:
                +
007662 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
007664 30a0      	CPI  R26,LOW(0x0)
007665 f011      	BREQ _0x22004E
                 _0x220051:
                +
007666 e021     +LDI R18 , LOW ( 1 )
007667 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
007668 c188      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
007669 3de9      	CPI  R30,LOW(0xD9)
00766a e0a0      	LDI  R26,HIGH(0xD9)
00766b 07fa      	CPC  R31,R26
00766c f439      	BRNE _0x220053
                +
00766d 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00766f 70e1      	ANDI R30,LOW(0x1)
007670 f011      	BREQ _0x220054
                +
007671 e021     +LDI R18 , LOW ( 1 )
007672 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
007673 c17d      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
007674 3dea      	CPI  R30,LOW(0xDA)
007675 e0a0      	LDI  R26,HIGH(0xDA)
007676 07fa      	CPC  R31,R26
007677 f439      	BRNE _0x220055
                +
007678 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00767a 71e1      	ANDI R30,LOW(0x11)
00767b f011      	BREQ _0x220056
                +
00767c e021     +LDI R18 , LOW ( 1 )
00767d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
00767e c172      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
00767f 3deb      	CPI  R30,LOW(0xDB)
007680 e0a0      	LDI  R26,HIGH(0xDB)
007681 07fa      	CPC  R31,R26
007682 f439      	BRNE _0x220057
                +
007683 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007685 70e2      	ANDI R30,LOW(0x2)
007686 f011      	BREQ _0x220058
                +
007687 e021     +LDI R18 , LOW ( 1 )
007688 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
007689 c167      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
00768a 3dec      	CPI  R30,LOW(0xDC)
00768b e0a0      	LDI  R26,HIGH(0xDC)
00768c 07fa      	CPC  R31,R26
00768d f439      	BRNE _0x220059
                +
00768e 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007690 70e4      	ANDI R30,LOW(0x4)
007691 f011      	BREQ _0x22005A
                +
007692 e021     +LDI R18 , LOW ( 1 )
007693 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
007694 c15c      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
007695 3ded      	CPI  R30,LOW(0xDD)
007696 e0a0      	LDI  R26,HIGH(0xDD)
007697 07fa      	CPC  R31,R26
007698 f439      	BRNE _0x22005B
                +
007699 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00769b 71e4      	ANDI R30,LOW(0x14)
00769c f011      	BREQ _0x22005C
                +
00769d e021     +LDI R18 , LOW ( 1 )
00769e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
00769f c151      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
0076a0 3dee      	CPI  R30,LOW(0xDE)
0076a1 e0a0      	LDI  R26,HIGH(0xDE)
0076a2 07fa      	CPC  R31,R26
0076a3 f439      	BRNE _0x22005D
                +
0076a4 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
0076a6 70e8      	ANDI R30,LOW(0x8)
0076a7 f011      	BREQ _0x22005E
                +
0076a8 e021     +LDI R18 , LOW ( 1 )
0076a9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
0076aa c146      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
0076ab 3def      	CPI  R30,LOW(0xDF)
0076ac e0a0      	LDI  R26,HIGH(0xDF)
0076ad 07fa      	CPC  R31,R26
0076ae f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0076af 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
0076b1 30a0      	CPI  R26,LOW(0x0)
0076b2 f021      	BREQ _0x220061
                +
0076b3 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
0076b5 3faf      	CPI  R26,LOW(0xFF)
0076b6 f409      	BRNE _0x220062
                 _0x220061:
0076b7 c002      	RJMP _0x220060
                 _0x220062:
                +
0076b8 e021     +LDI R18 , LOW ( 1 )
0076b9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
0076ba c136      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
0076bb 3ee0      	CPI  R30,LOW(0xE0)
0076bc e0a0      	LDI  R26,HIGH(0xE0)
0076bd 07fa      	CPC  R31,R26
0076be f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
0076bf 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0076c1 30a0      	CPI  R26,LOW(0x0)
0076c2 f021      	BREQ _0x220065
                +
0076c3 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0076c5 3faf      	CPI  R26,LOW(0xFF)
0076c6 f421      	BRNE _0x220067
                 _0x220065:
                +
0076c7 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
0076c9 30a0      	CPI  R26,LOW(0x0)
0076ca f011      	BREQ _0x220064
                 _0x220067:
                +
0076cb e021     +LDI R18 , LOW ( 1 )
0076cc e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
0076cd c123      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
0076ce 3ee1      	CPI  R30,LOW(0xE1)
0076cf e0a0      	LDI  R26,HIGH(0xE1)
0076d0 07fa      	CPC  R31,R26
0076d1 f439      	BRNE _0x220069
                +
0076d2 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076d4 70e1      	ANDI R30,LOW(0x1)
0076d5 f011      	BREQ _0x22006A
                +
0076d6 e021     +LDI R18 , LOW ( 1 )
0076d7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
0076d8 c118      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
0076d9 3ee2      	CPI  R30,LOW(0xE2)
0076da e0a0      	LDI  R26,HIGH(0xE2)
0076db 07fa      	CPC  R31,R26
0076dc f439      	BRNE _0x22006B
                +
0076dd 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076df 71e1      	ANDI R30,LOW(0x11)
0076e0 f011      	BREQ _0x22006C
                +
0076e1 e021     +LDI R18 , LOW ( 1 )
0076e2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
0076e3 c10d      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
0076e4 3ee3      	CPI  R30,LOW(0xE3)
0076e5 e0a0      	LDI  R26,HIGH(0xE3)
0076e6 07fa      	CPC  R31,R26
0076e7 f439      	BRNE _0x22006D
                +
0076e8 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076ea 70e2      	ANDI R30,LOW(0x2)
0076eb f011      	BREQ _0x22006E
                +
0076ec e021     +LDI R18 , LOW ( 1 )
0076ed e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
0076ee c102      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
0076ef 3ee4      	CPI  R30,LOW(0xE4)
0076f0 e0a0      	LDI  R26,HIGH(0xE4)
0076f1 07fa      	CPC  R31,R26
0076f2 f439      	BRNE _0x22006F
                +
0076f3 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076f5 70e4      	ANDI R30,LOW(0x4)
0076f6 f011      	BREQ _0x220070
                +
0076f7 e021     +LDI R18 , LOW ( 1 )
0076f8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
0076f9 c0f7      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
0076fa 3ee5      	CPI  R30,LOW(0xE5)
0076fb e0a0      	LDI  R26,HIGH(0xE5)
0076fc 07fa      	CPC  R31,R26
0076fd f439      	BRNE _0x220071
                +
0076fe 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007700 71e4      	ANDI R30,LOW(0x14)
007701 f011      	BREQ _0x220072
                +
007702 e021     +LDI R18 , LOW ( 1 )
007703 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
007704 c0ec      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
007705 3ee6      	CPI  R30,LOW(0xE6)
007706 e0a0      	LDI  R26,HIGH(0xE6)
007707 07fa      	CPC  R31,R26
007708 f439      	BRNE _0x220073
                +
007709 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
00770b 70e8      	ANDI R30,LOW(0x8)
00770c f011      	BREQ _0x220074
                +
00770d e021     +LDI R18 , LOW ( 1 )
00770e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
00770f c0e1      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
007710 3ee7      	CPI  R30,LOW(0xE7)
007711 e0a0      	LDI  R26,HIGH(0xE7)
007712 07fa      	CPC  R31,R26
007713 f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007714 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007716 30a0      	CPI  R26,LOW(0x0)
007717 f021      	BREQ _0x220077
                +
007718 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
00771a 3faf      	CPI  R26,LOW(0xFF)
00771b f409      	BRNE _0x220078
                 _0x220077:
00771c c002      	RJMP _0x220076
                 _0x220078:
                +
00771d e021     +LDI R18 , LOW ( 1 )
00771e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
00771f c0d1      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
007720 37e1      	CPI  R30,LOW(0x71)
007721 e0a0      	LDI  R26,HIGH(0x71)
007722 07fa      	CPC  R31,R26
007723 f409      	BRNE _0x220079
007724 c0cc      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
007725 37e2      	CPI  R30,LOW(0x72)
007726 e0a0      	LDI  R26,HIGH(0x72)
007727 07fa      	CPC  R31,R26
007728 f481      	BRNE _0x22007A
                +
007729 e000     +LDI R16 , LOW ( 0 )
00772a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00772b 3002     +CPI R16 , LOW ( 2 )
00772c e0e0     +LDI R30 , HIGH ( 2 )
00772d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00772e f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
00772f e7ac      	LDI  R26,LOW(_dinStatus)
007730 e1b4      	LDI  R27,HIGH(_dinStatus)
007731 0fa0      	ADD  R26,R16
007732 1fb1      	ADC  R27,R17
007733 91ac      	LD   R26,X
007734 30a1      	CPI  R26,LOW(0x1)
007735 f411      	BRNE _0x22007E
                +
007736 e021     +LDI R18 , LOW ( 1 )
007737 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
007738 c0b8      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
007739 37e3      	CPI  R30,LOW(0x73)
00773a e0a0      	LDI  R26,HIGH(0x73)
00773b 07fa      	CPC  R31,R26
00773c f471      	BRNE _0x22007F
                +
00773d e000     +LDI R16 , LOW ( 0 )
00773e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00773f 3002     +CPI R16 , LOW ( 2 )
007740 e0e0     +LDI R30 , HIGH ( 2 )
007741 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007742 f43c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
007743 e7ac      	LDI  R26,LOW(_dinStatus)
007744 e1b4      	LDI  R27,HIGH(_dinStatus)
007745 940e ca97 	CALL SUBOPT_0x251
007747 f411      	BRNE _0x220083
                +
007748 e021     +LDI R18 , LOW ( 1 )
007749 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
00774a c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
00774b 34e0      	CPI  R30,LOW(0x40)
00774c e0a0      	LDI  R26,HIGH(0x40)
00774d 07fa      	CPC  R31,R26
00774e f409      	BRNE _0x220084
00774f c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
007750 35e0      	CPI  R30,LOW(0x50)
007751 e0a0      	LDI  R26,HIGH(0x50)
007752 07fa      	CPC  R31,R26
007753 f439      	BRNE _0x220085
007754 91a0 147c 	LDS  R26,_dinStatus
007756 30a1      	CPI  R26,LOW(0x1)
007757 f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
007758 e021     +LDI R18 , LOW ( 1 )
007759 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
00775a c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
00775b 36e0      	CPI  R30,LOW(0x60)
00775c e0a0      	LDI  R26,HIGH(0x60)
00775d 07fa      	CPC  R31,R26
00775e f439      	BRNE _0x220087
00775f 91e0 147c 	LDS  R30,_dinStatus
007761 30e0      	CPI  R30,0
007762 f411      	BRNE _0x220088
                +
007763 e021     +LDI R18 , LOW ( 1 )
007764 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
007765 c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
007766 34e1      	CPI  R30,LOW(0x41)
007767 e0a0      	LDI  R26,HIGH(0x41)
007768 07fa      	CPC  R31,R26
007769 f409      	BRNE _0x220089
00776a c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
00776b 35e1      	CPI  R30,LOW(0x51)
00776c e0a0      	LDI  R26,HIGH(0x51)
00776d 07fa      	CPC  R31,R26
00776e f439      	BRNE _0x22008A
                +
00776f 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
007771 30a1      	CPI  R26,LOW(0x1)
007772 f411      	BRNE _0x22008B
                +
007773 e021     +LDI R18 , LOW ( 1 )
007774 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
007775 c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
007776 36e1      	CPI  R30,LOW(0x61)
007777 e0a0      	LDI  R26,HIGH(0x61)
007778 07fa      	CPC  R31,R26
007779 f439      	BRNE _0x22008C
                +
00777a 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
00777c 30e0      	CPI  R30,0
00777d f411      	BRNE _0x22008D
                +
00777e e021     +LDI R18 , LOW ( 1 )
00777f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
007780 c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
007781 38e0      	CPI  R30,LOW(0x80)
007782 e0a0      	LDI  R26,HIGH(0x80)
007783 07fa      	CPC  R31,R26
007784 f409      	BRNE _0x22008E
007785 c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
007786 38e1      	CPI  R30,LOW(0x81)
007787 e0a0      	LDI  R26,HIGH(0x81)
007788 07fa      	CPC  R31,R26
007789 f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
00778a c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
00778b 38e2      	CPI  R30,LOW(0x82)
00778c e0a0      	LDI  R26,HIGH(0x82)
00778d 07fa      	CPC  R31,R26
00778e f439      	BRNE _0x220090
00778f 91a0 147a 	LDS  R26,_powerSrcStatus
007791 30a1      	CPI  R26,LOW(0x1)
007792 f411      	BRNE _0x220091
                +
007793 e021     +LDI R18 , LOW ( 1 )
007794 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
007795 c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
007796 38e3      	CPI  R30,LOW(0x83)
007797 e0a0      	LDI  R26,HIGH(0x83)
007798 07fa      	CPC  R31,R26
007799 f439      	BRNE _0x220092
00779a 91a0 147b 	LDS  R26,_batteryStatus
00779c 30a1      	CPI  R26,LOW(0x1)
00779d f411      	BRNE _0x220093
                +
00779e e021     +LDI R18 , LOW ( 1 )
00779f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
0077a0 c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
0077a1 38e4      	CPI  R30,LOW(0x84)
0077a2 e0a0      	LDI  R26,HIGH(0x84)
0077a3 07fa      	CPC  R31,R26
0077a4 f409      	BRNE _0x220094
0077a5 c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
0077a6 38e5      	CPI  R30,LOW(0x85)
0077a7 e0a0      	LDI  R26,HIGH(0x85)
0077a8 07fa      	CPC  R31,R26
0077a9 f439      	BRNE _0x220095
0077aa 91a0 14a7 	LDS  R26,_memoryAlarm
0077ac 30a1      	CPI  R26,LOW(0x1)
0077ad f411      	BRNE _0x220096
                +
0077ae e021     +LDI R18 , LOW ( 1 )
0077af e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
0077b0 c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
0077b1 38e6      	CPI  R30,LOW(0x86)
0077b2 e0a0      	LDI  R26,HIGH(0x86)
0077b3 07fa      	CPC  R31,R26
0077b4 f439      	BRNE _0x220097
0077b5 91a0 14a7 	LDS  R26,_memoryAlarm
0077b7 30a2      	CPI  R26,LOW(0x2)
0077b8 f411      	BRNE _0x220098
                +
0077b9 e021     +LDI R18 , LOW ( 1 )
0077ba e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
0077bb c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
0077bc 38e7      	CPI  R30,LOW(0x87)
0077bd e0a0      	LDI  R26,HIGH(0x87)
0077be 07fa      	CPC  R31,R26
0077bf f439      	BRNE _0x220099
0077c0 91a0 1480 	LDS  R26,_serverCommStatus
0077c2 30a2      	CPI  R26,LOW(0x2)
0077c3 f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
0077c4 e021     +LDI R18 , LOW ( 1 )
0077c5 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
0077c6 c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
0077c7 39e0      	CPI  R30,LOW(0x90)
0077c8 e0a0      	LDI  R26,HIGH(0x90)
0077c9 07fa      	CPC  R31,R26
0077ca f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
0077cb 39e1      	CPI  R30,LOW(0x91)
0077cc e0a0      	LDI  R26,HIGH(0x91)
0077cd 07fa      	CPC  R31,R26
0077ce f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
0077cf c004      	RJMP _0x22009E
                 _0x22009D:
0077d0 39e2      	CPI  R30,LOW(0x92)
0077d1 e0a0      	LDI  R26,HIGH(0x92)
0077d2 07fa      	CPC  R31,R26
0077d3 f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
0077d4 c004      	RJMP _0x2200A0
                 _0x22009F:
0077d5 39e3      	CPI  R30,LOW(0x93)
0077d6 e0a0      	LDI  R26,HIGH(0x93)
0077d7 07fa      	CPC  R31,R26
0077d8 f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
0077d9 c004      	RJMP _0x2200A2
                 _0x2200A1:
0077da 39e4      	CPI  R30,LOW(0x94)
0077db e0a0      	LDI  R26,HIGH(0x94)
0077dc 07fa      	CPC  R31,R26
0077dd f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
0077de c004      	RJMP _0x2200A4
                 _0x2200A3:
0077df 39ef      	CPI  R30,LOW(0x9F)
0077e0 e0a0      	LDI  R26,HIGH(0x9F)
0077e1 07fa      	CPC  R31,R26
0077e2 f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
0077e3 e3ea     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
0077e4 e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
0077e5 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
0077e6 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
0077e7 c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
0077e8 e6ed     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
0077e9 e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
0077ea e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
0077eb e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
0077ec 940e da29 	CALL __PUTPARD1
0077ee 85e8      	LDD  R30,Y+8
0077ef 940e bcfe 	CALL SUBOPT_0x29
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
0077f1 01f9      	MOVW R30,R18
0077f2 940e daa2 	CALL __LOADLOCR4
0077f4 940c 7b7a 	JMP  _0x20E0055
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
0077f6 93ba      	ST   -Y,R27
0077f7 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
0077f8 91e0 1692 	LDS  R30,_mtncAlarm
0077fa 91a0 1479 	LDS  R26,_mtncStatus
0077fc 17ea      	CP   R30,R26
0077fd f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
0077fe 91e0 1479 	LDS  R30,_mtncStatus
007800 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
007802 91e0 1479 	LDS  R30,_mtncStatus
007804 81a8      	LD   R26,Y
007805 81b9      	LDD  R27,Y+1
007806 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
007807 e0e1      	LDI  R30,LOW(1)
007808 e0f0      	LDI  R31,HIGH(1)
007809 c0ee      	RJMP _0x20E005A
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
00780a c0eb      	RJMP _0x20E005B
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
00780b 93ba      	ST   -Y,R27
00780c 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
00780d 91e0 1693 	LDS  R30,_powerSrcAlarm
00780f 91a0 147a 	LDS  R26,_powerSrcStatus
007811 17ea      	CP   R30,R26
007812 f1e1      	BREQ _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
007813 91e0 169c 	LDS  R30,_lastCheck_S0110003000
007815 17ea      	CP   R30,R26
007816 f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
007817 e0e0      	LDI  R30,LOW(0)
007818 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
00781a 91e0 147a 	LDS  R30,_powerSrcStatus
00781c 93e0 169c 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
00781e 91e0 169b 	LDS  R30,_t_flag_S0110003000
007820 30e0      	CPI  R30,0
007821 f499      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
007822 91a0 147a 	LDS  R26,_powerSrcStatus
007824 30a1      	CPI  R26,LOW(0x1)
007825 f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
007826 e9e7      	LDI  R30,LOW(_t_S0110003000)
007827 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007828 940e c51a 	CALL SUBOPT_0x173
00782a c004      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
00782b e9e7      	LDI  R30,LOW(_t_S0110003000)
00782c e1f6      	LDI  R31,HIGH(_t_S0110003000)
00782d 940e ca9c 	CALL SUBOPT_0x252
                 _0x2200F2:
00782f 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
007831 e0e1      	LDI  R30,LOW(1)
007832 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
007834 c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
007835 91a0 1697 	LDS  R26,_t_S0110003000
007837 91b0 1698 	LDS  R27,_t_S0110003000+1
007839 9180 1699 	LDS  R24,_t_S0110003000+2
00783b 9190 169a 	LDS  R25,_t_S0110003000+3
00783d 940e 405d 	CALL _TIMER_checkTimerExceed
00783f 9730      	SBIW R30,0
007840 f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
007841 91e0 147a 	LDS  R30,_powerSrcStatus
007843 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
007845 91e0 147a 	LDS  R30,_powerSrcStatus
007847 940e caa3 	CALL SUBOPT_0x253
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
007849 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
00784b e0e1      	LDI  R30,LOW(1)
00784c e0f0      	LDI  R31,HIGH(1)
00784d c0aa      	RJMP _0x20E005A
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
00784e c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
00784f e0e0      	LDI  R30,LOW(0)
007850 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
007852 c0a3      	RJMP _0x20E005B
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
007853 93ba      	ST   -Y,R27
007854 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007855 940e caa8 	CALL SUBOPT_0x254
007857 f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
007858 91e0 14a6 	LDS  R30,_batteryAlarm
00785a 91a0 147b 	LDS  R26,_batteryStatus
00785c 17ea      	CP   R30,R26
00785d f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
00785e 91e0 16a2 	LDS  R30,_lastCheck_S0110004000
007860 17ea      	CP   R30,R26
007861 f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
007862 e0e0      	LDI  R30,LOW(0)
007863 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
007865 91e0 147b 	LDS  R30,_batteryStatus
007867 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
007869 91e0 16a1 	LDS  R30,_t_flag_S0110004000
00786b 30e0      	CPI  R30,0
00786c f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
00786d e9ed      	LDI  R30,LOW(_t_S0110004000)
00786e e1f6      	LDI  R31,HIGH(_t_S0110004000)
00786f 940e bced 	CALL SUBOPT_0x27
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
007871 e0e1      	LDI  R30,LOW(1)
007872 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
007874 c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
007875 91a0 169d 	LDS  R26,_t_S0110004000
007877 91b0 169e 	LDS  R27,_t_S0110004000+1
007879 9180 169f 	LDS  R24,_t_S0110004000+2
00787b 9190 16a0 	LDS  R25,_t_S0110004000+3
00787d 940e 405d 	CALL _TIMER_checkTimerExceed
00787f 9730      	SBIW R30,0
007880 f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
007881 91e0 147b 	LDS  R30,_batteryStatus
007883 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
007885 91e0 147b 	LDS  R30,_batteryStatus
007887 940e caa3 	CALL SUBOPT_0x253
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
007889 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
00788b e0e1      	LDI  R30,LOW(1)
00788c e0f0      	LDI  R31,HIGH(1)
00788d c06a      	RJMP _0x20E005A
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
00788e c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
00788f e0e0      	LDI  R30,LOW(0)
007890 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
007892 c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
007893 e0e0      	LDI  R30,LOW(0)
007894 93e0 169d 	STS  _t_S0110004000,R30
007896 93e0 169e 	STS  _t_S0110004000+1,R30
007898 93e0 169f 	STS  _t_S0110004000+2,R30
00789a 93e0 16a0 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
00789c 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
00789e e6e9      	LDI  R30,LOW(105)
00789f 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
0078a1 91e0 14a6 	LDS  R30,_batteryAlarm
0078a3 30e0      	CPI  R30,0
0078a4 f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
0078a5 e0e0      	LDI  R30,LOW(0)
0078a6 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
0078a8 940e cab3 	CALL SUBOPT_0x255
                 ; 0011 0109             return 1;
0078aa c04d      	RJMP _0x20E005A
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
0078ab c04a      	RJMP _0x20E005B
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
0078ac 93ba      	ST   -Y,R27
0078ad 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
0078ae 940e caba 	CALL SUBOPT_0x256
0078b0 f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
0078b1 91e0 14a7 	LDS  R30,_memoryAlarm
0078b3 91a0 1482 	LDS  R26,_memoryStatus
0078b5 17ea      	CP   R30,R26
0078b6 f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
0078b7 91e0 16a7 	LDS  R30,_t_flag_S0110005000
0078b9 30e0      	CPI  R30,0
0078ba f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
0078bb eae3      	LDI  R30,LOW(_t_S0110005000)
0078bc e1f6      	LDI  R31,HIGH(_t_S0110005000)
0078bd 940e bd78 	CALL SUBOPT_0x3B
                 ; 0011 011B                 t_flag          = 1;
0078bf e0e1      	LDI  R30,LOW(1)
0078c0 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
0078c2 c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
0078c3 91a0 16a3 	LDS  R26,_t_S0110005000
0078c5 91b0 16a4 	LDS  R27,_t_S0110005000+1
0078c7 9180 16a5 	LDS  R24,_t_S0110005000+2
0078c9 9190 16a6 	LDS  R25,_t_S0110005000+3
0078cb 940e 405d 	CALL _TIMER_checkTimerExceed
0078cd 9730      	SBIW R30,0
0078ce f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
0078cf 91e0 1482 	LDS  R30,_memoryStatus
0078d1 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
0078d3 91e0 1482 	LDS  R30,_memoryStatus
0078d5 940e caa3 	CALL SUBOPT_0x253
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
0078d7 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
0078d9 e0e1      	LDI  R30,LOW(1)
0078da e0f0      	LDI  R31,HIGH(1)
0078db c01c      	RJMP _0x20E005A
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
0078dc c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
0078dd e0e0      	LDI  R30,LOW(0)
0078de 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
0078e0 c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
0078e1 e0e0      	LDI  R30,LOW(0)
0078e2 93e0 16a3 	STS  _t_S0110005000,R30
0078e4 93e0 16a4 	STS  _t_S0110005000+1,R30
0078e6 93e0 16a5 	STS  _t_S0110005000+2,R30
0078e8 93e0 16a6 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
0078ea 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
0078ec 91e0 14a6 	LDS  R30,_batteryAlarm
0078ee 30e0      	CPI  R30,0
0078ef f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
0078f0 e0e0      	LDI  R30,LOW(0)
0078f1 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
0078f3 940e cab3 	CALL SUBOPT_0x255
                 ; 0011 0136             return 1;
0078f5 c002      	RJMP _0x20E005A
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E005B:
0078f6 e0e0      	LDI  R30,LOW(0)
0078f7 e0f0      	LDI  R31,HIGH(0)
                 _0x20E005A:
0078f8 9622      	ADIW R28,2
0078f9 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
0078fa 940e c2a4 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*code -> Y+0
0078fc f022      	BRMI _0x2200C7
0078fd 81aa      	LDD  R26,Y+2
0078fe 81bb      	LDD  R27,Y+2+1
0078ff 9712      	SBIW R26,2
007900 f04c      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
007901 e9ed     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
007902 e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
007903 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
007904 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
007905 940e c290 	CALL SUBOPT_0x106
007907 940e c200 	CALL SUBOPT_0xEC
                 ; 0011 0145         return 0;
007909 c105      	RJMP _0x20E0059
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
00790a 940e cac1 	CALL SUBOPT_0x257
00790c 56ea      	SUBI R30,LOW(-_dinAlarm)
00790d 4efb      	SBCI R31,HIGH(-_dinAlarm)
00790e 81e0      	LD   R30,Z
00790f 17ea      	CP   R30,R26
007910 f411      	BRNE PC+3
007911 940c 7953 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
007913 940e cac1 	CALL SUBOPT_0x257
007915 54ee      	SUBI R30,LOW(-_lastCheck_S0110006000)
007916 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
007917 81e0      	LD   R30,Z
007918 17ea      	CP   R30,R26
007919 f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
00791a 940e cac9 	CALL SUBOPT_0x258
00791c e0a0      	LDI  R26,LOW(0)
00791d 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
00791e 81aa      	LDD  R26,Y+2
00791f 81bb      	LDD  R27,Y+2+1
007920 54ae      	SUBI R26,LOW(-_lastCheck_S0110006000)
007921 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
007922 940e cace 	CALL SUBOPT_0x259
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
007924 940e cac9 	CALL SUBOPT_0x258
007926 81e0      	LD   R30,Z
007927 30e0      	CPI  R30,0
007928 f469      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
007929 81ea      	LDD  R30,Y+2
00792a 81fb      	LDD  R31,Y+2+1
00792b eaa8      	LDI  R26,LOW(_t_S0110006000)
00792c e1b6      	LDI  R27,HIGH(_t_S0110006000)
00792d 940e bca8 	CALL SUBOPT_0x1C
00792f 940e c8af 	CALL SUBOPT_0x208
                 ; 0011 0151             t_flag[ch]          = 1;
007931 940e cac9 	CALL SUBOPT_0x258
007933 e0a1      	LDI  R26,LOW(1)
007934 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
007935 c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
007936 81ea      	LDD  R30,Y+2
007937 81fb      	LDD  R31,Y+2+1
007938 eaa8      	LDI  R26,LOW(_t_S0110006000)
007939 e1b6      	LDI  R27,HIGH(_t_S0110006000)
00793a 940e bc9b 	CALL SUBOPT_0x1A
00793c 940e bca2 	CALL SUBOPT_0x1B
00793e f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
00793f 81aa      	LDD  R26,Y+2
007940 81bb      	LDD  R27,Y+2+1
007941 56aa      	SUBI R26,LOW(-_dinAlarm)
007942 4ebb      	SBCI R27,HIGH(-_dinAlarm)
007943 940e cace 	CALL SUBOPT_0x259
                 ; 0011 0157                 *code           = dinStatus[ch];
007945 81ea      	LDD  R30,Y+2
007946 81fb      	LDD  R31,Y+2+1
007947 58e4      	SUBI R30,LOW(-_dinStatus)
007948 4efb      	SBCI R31,HIGH(-_dinStatus)
007949 940e ca8d 	CALL SUBOPT_0x24F
                 ; 0011 0158                 t_flag[ch]      = 0;
00794b 940e cac9 	CALL SUBOPT_0x258
00794d e0a0      	LDI  R26,LOW(0)
00794e 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
00794f e0e1      	LDI  R30,LOW(1)
007950 e0f0      	LDI  R31,HIGH(1)
007951 c0bf      	RJMP _0x20E0058
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
007952 c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
007953 940e cac9 	CALL SUBOPT_0x258
007955 e0a0      	LDI  R26,LOW(0)
007956 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
007957 c0b7      	RJMP _0x20E0059
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
007958 940e cad5 	CALL SUBOPT_0x25A
                 ;	ch -> Y+2
                 ;	*code -> Y+0
00795a 59e1      	SUBI R30,LOW(-_sensorStatus)
00795b 4efb      	SBCI R31,HIGH(-_sensorStatus)
00795c 81a0      	LD   R26,Z
00795d 81ea      	LDD  R30,Y+2
00795e 81fb      	LDD  R31,Y+2+1
00795f 57e4      	SUBI R30,LOW(-_sensorAlarm)
007960 4efb      	SBCI R31,HIGH(-_sensorAlarm)
007961 81e0      	LD   R30,Z
007962 17ea      	CP   R30,R26
007963 f411      	BRNE PC+3
007964 940c 79b3 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
007966 940e cada 	CALL SUBOPT_0x25B
007968 81a0      	LD   R26,Z
007969 81ea      	LDD  R30,Y+2
00796a 81fb      	LDD  R31,Y+2+1
00796b 53e3      	SUBI R30,LOW(-_lastCheck_S0110007000)
00796c 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
00796d 81e0      	LD   R30,Z
00796e 17ea      	CP   R30,R26
00796f f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
007970 940e cadf 	CALL SUBOPT_0x25C
007972 e0a0      	LDI  R26,LOW(0)
007973 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
007974 81aa      	LDD  R26,Y+2
007975 81bb      	LDD  R27,Y+2+1
007976 53a3      	SUBI R26,LOW(-_lastCheck_S0110007000)
007977 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
007978 940e cada 	CALL SUBOPT_0x25B
00797a 81e0      	LD   R30,Z
00797b 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
00797c 940e cadf 	CALL SUBOPT_0x25C
00797e 81e0      	LD   R30,Z
00797f 30e0      	CPI  R30,0
007980 f4a9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007981 940e cada 	CALL SUBOPT_0x25B
007983 81a0      	LD   R26,Z
007984 3faf      	CPI  R26,LOW(0xFF)
007985 f429      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
007986 940e cae4 	CALL SUBOPT_0x25D
007988 940e c51a 	CALL SUBOPT_0x173
00798a c004      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
00798b 940e cae4 	CALL SUBOPT_0x25D
00798d 940e ca9c 	CALL SUBOPT_0x252
                 _0x2200F4:
00798f 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
007991 940e cadf 	CALL SUBOPT_0x25C
007993 e0a1      	LDI  R26,LOW(1)
007994 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
007995 c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
007996 81ea      	LDD  R30,Y+2
007997 81fb      	LDD  R31,Y+2+1
007998 eba4      	LDI  R26,LOW(_t_S0110007000)
007999 e1b6      	LDI  R27,HIGH(_t_S0110007000)
00799a 940e bc9b 	CALL SUBOPT_0x1A
00799c 940e bca2 	CALL SUBOPT_0x1B
00799e f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
00799f 81aa      	LDD  R26,Y+2
0079a0 81bb      	LDD  R27,Y+2+1
0079a1 57a4      	SUBI R26,LOW(-_sensorAlarm)
0079a2 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
0079a3 940e cada 	CALL SUBOPT_0x25B
0079a5 81e0      	LD   R30,Z
0079a6 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
0079a7 940e cada 	CALL SUBOPT_0x25B
0079a9 940e ca8d 	CALL SUBOPT_0x24F
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
0079ab 940e cadf 	CALL SUBOPT_0x25C
0079ad e0a0      	LDI  R26,LOW(0)
0079ae 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
0079af e0e1      	LDI  R30,LOW(1)
0079b0 e0f0      	LDI  R31,HIGH(1)
0079b1 c05f      	RJMP _0x20E0058
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
0079b2 c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
0079b3 940e cadf 	CALL SUBOPT_0x25C
0079b5 e0a0      	LDI  R26,LOW(0)
0079b6 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
0079b7 c057      	RJMP _0x20E0059
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
0079b8 940e cad5 	CALL SUBOPT_0x25A
                 ;	ch -> Y+2
                 ;	*code -> Y+0
0079ba 58ec      	SUBI R30,LOW(-_dataStatus)
0079bb 4efb      	SBCI R31,HIGH(-_dataStatus)
0079bc 81a0      	LD   R26,Z
0079bd 81ea      	LDD  R30,Y+2
0079be 81fb      	LDD  R31,Y+2+1
0079bf 56ef      	SUBI R30,LOW(-_dataAlarm)
0079c0 4efb      	SBCI R31,HIGH(-_dataAlarm)
0079c1 81e0      	LD   R30,Z
0079c2 17ea      	CP   R30,R26
0079c3 f411      	BRNE PC+3
0079c4 940c 7a0b 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
0079c6 940e caea 	CALL SUBOPT_0x25E
0079c8 81e0      	LD   R30,Z
0079c9 30e0      	CPI  R30,0
0079ca f479      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
0079cb 81ea      	LDD  R30,Y+2
0079cc 81fb      	LDD  R31,Y+2+1
0079cd eda2      	LDI  R26,LOW(_t_S0110008000)
0079ce e1b6      	LDI  R27,HIGH(_t_S0110008000)
0079cf 940e bca8 	CALL SUBOPT_0x1C
0079d1 940e ca9c 	CALL SUBOPT_0x252
0079d3 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
0079d5 940e caea 	CALL SUBOPT_0x25E
0079d7 e0a1      	LDI  R26,LOW(1)
0079d8 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
0079d9 c030      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
0079da 81ea      	LDD  R30,Y+2
0079db 81fb      	LDD  R31,Y+2+1
0079dc eda2      	LDI  R26,LOW(_t_S0110008000)
0079dd e1b6      	LDI  R27,HIGH(_t_S0110008000)
0079de 940e bc9b 	CALL SUBOPT_0x1A
0079e0 940e bca2 	CALL SUBOPT_0x1B
0079e2 f139      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
0079e3 81aa      	LDD  R26,Y+2
0079e4 81bb      	LDD  R27,Y+2+1
0079e5 56af      	SUBI R26,LOW(-_dataAlarm)
0079e6 4ebb      	SBCI R27,HIGH(-_dataAlarm)
0079e7 81ea      	LDD  R30,Y+2
0079e8 81fb      	LDD  R31,Y+2+1
0079e9 58ec      	SUBI R30,LOW(-_dataStatus)
0079ea 4efb      	SBCI R31,HIGH(-_dataStatus)
0079eb 81e0      	LD   R30,Z
0079ec 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
0079ed 81ea      	LDD  R30,Y+2
0079ee 81fb      	LDD  R31,Y+2+1
0079ef 58ec      	SUBI R30,LOW(-_dataStatus)
0079f0 4efb      	SBCI R31,HIGH(-_dataStatus)
0079f1 940e ca8d 	CALL SUBOPT_0x24F
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
0079f3 940e caea 	CALL SUBOPT_0x25E
0079f5 e0a0      	LDI  R26,LOW(0)
0079f6 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
0079f7 eced     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
0079f8 e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
0079f9 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
0079fa e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
0079fb 940e c290 	CALL SUBOPT_0x106
0079fd 9631      	ADIW R30,1
0079fe 940e d919 	CALL __CWD1
007a00 940e c35f 	CALL SUBOPT_0x12A
007a02 56ef      	SUBI R30,LOW(-_dataAlarm)
007a03 4efb      	SBCI R31,HIGH(-_dataAlarm)
007a04 81e0      	LD   R30,Z
007a05 940e c90a 	CALL SUBOPT_0x215
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
007a07 e0e1      	LDI  R30,LOW(1)
007a08 e0f0      	LDI  R31,HIGH(1)
007a09 c007      	RJMP _0x20E0058
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
007a0a c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
007a0b 940e caea 	CALL SUBOPT_0x25E
007a0d e0a0      	LDI  R26,LOW(0)
007a0e 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
                 _0x20E0059:
007a0f e0e0      	LDI  R30,LOW(0)
007a10 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0058:
007a11 9624      	ADIW R28,4
007a12 9508      	RET
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
007a13 940e bf78 	CALL SUBOPT_0x86
                 ;	period -> Y+0
007a15 f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
007a16 940e bcd8 	CALL SUBOPT_0x24
007a18 940e bcdd 	CALL SUBOPT_0x25
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
007a1a e0e1      	LDI  R30,LOW(1)
007a1b c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
007a1c e8e7      	LDI  R30,LOW(_muteAlarmExpired)
007a1d e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
007a1e 93fa      	ST   -Y,R31
007a1f 93ea      	ST   -Y,R30
007a20 940e c0ae 	CALL SUBOPT_0xB6
007a22 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
007a24 e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
007a25 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
007a27 e0e0      	LDI  R30,LOW(0)
007a28 e0f0      	LDI  R31,HIGH(0)
007a29 940c 7ec7 	JMP  _0x20E004B
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
007a2b 91e0 148b 	LDS  R30,_muteMode
007a2d 940e c8bc 	CALL SUBOPT_0x20A
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
007a2f f0f1      	BREQ _0x20E0056
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
007a30 30e2      	CPI  R30,LOW(0x2)
007a31 e0a0      	LDI  R26,HIGH(0x2)
007a32 07fa      	CPC  R31,R26
007a33 f469      	BRNE _0x2200E7
007a34 91a0 1487 	LDS  R26,_muteAlarmExpired
007a36 91b0 1488 	LDS  R27,_muteAlarmExpired+1
007a38 9180 1489 	LDS  R24,_muteAlarmExpired+2
007a3a 9190 148a 	LDS  R25,_muteAlarmExpired+3
007a3c 940e 405d 	CALL _TIMER_checkTimerExceed
007a3e 9730      	SBIW R30,0
007a3f f459      	BRNE _0x20E0057
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
007a40 c00d      	RJMP _0x20E0056
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
007a41 efef     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
007a42 e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
007a43 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
007a44 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
007a45 940e da29 	CALL __PUTPARD1
007a47 91e0 148b 	LDS  R30,_muteMode
007a49 940e bcfe 	CALL SUBOPT_0x29
                 ; 0011 01FF                                 return 1;
                 _0x20E0057:
007a4b e0e1      	LDI  R30,LOW(1)
007a4c e0f0      	LDI  R31,HIGH(1)
007a4d 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0056:
007a4e e0e0      	LDI  R30,LOW(0)
007a4f e0f0      	LDI  R31,HIGH(0)
007a50 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
007a51 940e c01a 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x2200E9:
                +
007a53 3005     +CPI R16 , LOW ( 5 )
007a54 e0e0     +LDI R30 , HIGH ( 5 )
007a55 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007a56 f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
007a57 e8ac      	LDI  R26,LOW(_sensorAlarm)
007a58 e1b4      	LDI  R27,HIGH(_sensorAlarm)
007a59 940e c423 	CALL SUBOPT_0x14F
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
007a5b e9a1      	LDI  R26,LOW(_dataAlarm)
007a5c e1b4      	LDI  R27,HIGH(_dataAlarm)
007a5d 940e c423 	CALL SUBOPT_0x14F
                 ; 0011 0210     }
                +
007a5f 5f0f     +SUBI R16 , LOW ( - 1 )
007a60 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007a61 cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
007a62 e000     +LDI R16 , LOW ( 0 )
007a63 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
007a64 3100     +CPI R16 , LOW ( 16 )
007a65 e0e0     +LDI R30 , HIGH ( 16 )
007a66 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007a67 f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
007a68 e9a6      	LDI  R26,LOW(_dinAlarm)
007a69 e1b4      	LDI  R27,HIGH(_dinAlarm)
007a6a 0fa0      	ADD  R26,R16
007a6b 1fb1      	ADC  R27,R17
007a6c efef      	LDI  R30,LOW(255)
007a6d 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
007a6e 5f0f     +SUBI R16 , LOW ( - 1 )
007a6f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007a70 cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
007a71 e000     +LDI R16 , LOW ( 0 )
007a72 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
007a73 3100     +CPI R16 , LOW ( 16 )
007a74 e0e0     +LDI R30 , HIGH ( 16 )
007a75 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007a76 f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
007a77 e8a2      	LDI  R26,LOW(_ainAlarm)
007a78 e1b6      	LDI  R27,HIGH(_ainAlarm)
007a79 0fa0      	ADD  R26,R16
007a7a 1fb1      	ADC  R27,R17
007a7b efef      	LDI  R30,LOW(255)
007a7c 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
007a7d 5f0f     +SUBI R16 , LOW ( - 1 )
007a7e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007a7f cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
007a80 efef      	LDI  R30,LOW(255)
007a81 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
007a82 e0e0      	LDI  R30,LOW(0)
007a83 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
007a85 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
007a87 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
007a89 93e0 1694 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
007a8b 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
007a8d 93e0 1695 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
007a8f 93e0 1696 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
007a91 940c 7f19 	JMP  _0x20E0049
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 _OLED_showDateTime:
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
007a93 93ba      	ST   -Y,R27
007a94 93aa      	ST   -Y,R26
007a95 976a      	SBIW R28,26
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
007a96 940e bc27 	CALL SUBOPT_0x9
007a98 8dac      	LDD  R26,Y+28
007a99 8dbd      	LDD  R27,Y+28+1
007a9a 940e 46fd 	CALL _RTC_getDateTime
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                +
007a9c e3e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 0 ) )
007a9d e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 0 ) )
007a9e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 0 ) )
007a9f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 0 ) )
                 	__POINTD1FN _0x240000,0
007aa0 940e bfa1 	CALL SUBOPT_0x8D
007aa2 940e bfa1 	CALL SUBOPT_0x8D
007aa4 940e bfa1 	CALL SUBOPT_0x8D
007aa6 940e da29 	CALL __PUTPARD1
007aa8 e08c      	LDI  R24,12
007aa9 d1e2      	RCALL _printOLED
007aaa 9660      	ADIW R28,16
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                +
007aab e4e1     +LDI R30 , LOW ( 2 * _0x240000 + ( 17 ) )
007aac e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 17 ) )
007aad e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 17 ) )
007aae e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 17 ) )
                 	__POINTD1FN _0x240000,17
007aaf 940e be5a 	CALL SUBOPT_0x5B
007ab1 940e c22a 	CALL SUBOPT_0xF5
007ab3 940e caef 	CALL SUBOPT_0x25F
                 ; 0012 0019 
                 ; 0012 001A }
007ab5 966c      	ADIW R28,28
007ab6 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 _OLED_showSensorValue:
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
007ab7 940e c01a 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x240004:
                +
007ab9 3005     +CPI R16 , LOW ( 5 )
007aba e0e0     +LDI R30 , HIGH ( 5 )
007abb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007abc f014      	BRLT PC+3
007abd 940c 7b34 	JMP _0x240005
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
007abf 940e ca68 	CALL SUBOPT_0x24B
007ac1 f411      	BRNE PC+3
007ac2 940c 7b29 	JMP _0x240006
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
007ac4 940e caf4 	CALL SUBOPT_0x260
                +
007ac6 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007ac7 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007ac8 81e0      	LD   R30,Z
007ac9 940e bd09 	CALL SUBOPT_0x2B
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
007acb f469      	BRNE _0x24000A
                +
007acc e4ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 29 ) )
007acd e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 29 ) )
007ace e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 29 ) )
007acf e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 29 ) )
                 	__POINTD1FN _0x240000,29
007ad0 940e cafa 	CALL SUBOPT_0x261
007ad2 940e caf4 	CALL SUBOPT_0x260
007ad4 940e bcb6 	CALL SUBOPT_0x1F
007ad6 940e cafe 	CALL SUBOPT_0x262
                 ; 0012 0028                                                 break;
007ad8 c04f      	RJMP _0x240009
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 _0x24000A:
007ad9 38e1      	CPI  R30,LOW(0x81)
007ada e0a0      	LDI  R26,HIGH(0x81)
007adb 07fa      	CPC  R31,R26
007adc f449      	BRNE _0x24000B
                +
007add e5e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 39 ) )
007ade e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 39 ) )
007adf e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 39 ) )
007ae0 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 39 ) )
                 	__POINTD1FN _0x240000,39
007ae1 940e cafa 	CALL SUBOPT_0x261
007ae3 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 002A                                                 break;
007ae5 c042      	RJMP _0x240009
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 _0x24000B:
007ae6 38e2      	CPI  R30,LOW(0x82)
007ae7 e0a0      	LDI  R26,HIGH(0x82)
007ae8 07fa      	CPC  R31,R26
007ae9 f449      	BRNE _0x24000C
                +
007aea e6e2     +LDI R30 , LOW ( 2 * _0x240000 + ( 50 ) )
007aeb e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 50 ) )
007aec e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 50 ) )
007aed e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 50 ) )
                 	__POINTD1FN _0x240000,50
007aee 940e cafa 	CALL SUBOPT_0x261
007af0 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 002C                                                 break;
007af2 c035      	RJMP _0x240009
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 _0x24000C:
007af3 38e4      	CPI  R30,LOW(0x84)
007af4 e0a0      	LDI  R26,HIGH(0x84)
007af5 07fa      	CPC  R31,R26
007af6 f449      	BRNE _0x24000D
                +
007af7 e6ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 61 ) )
007af8 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 61 ) )
007af9 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 61 ) )
007afa e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 61 ) )
                 	__POINTD1FN _0x240000,61
007afb 940e cafa 	CALL SUBOPT_0x261
007afd 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 002E                                                 break;
007aff c028      	RJMP _0x240009
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 _0x24000D:
007b00 39e0      	CPI  R30,LOW(0x90)
007b01 e0a0      	LDI  R26,HIGH(0x90)
007b02 07fa      	CPC  R31,R26
007b03 f449      	BRNE _0x24000E
                +
007b04 e7e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 72 ) )
007b05 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 72 ) )
007b06 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 72 ) )
007b07 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 72 ) )
                 	__POINTD1FN _0x240000,72
007b08 940e cafa 	CALL SUBOPT_0x261
007b0a 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 0030                                                 break;
007b0c c01b      	RJMP _0x240009
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 _0x24000E:
007b0d 3fef      	CPI  R30,LOW(0xFF)
007b0e e0a0      	LDI  R26,HIGH(0xFF)
007b0f 07fa      	CPC  R31,R26
007b10 f449      	BRNE _0x240010
                +
007b11 e8e3     +LDI R30 , LOW ( 2 * _0x240000 + ( 83 ) )
007b12 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 83 ) )
007b13 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 83 ) )
007b14 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 83 ) )
                 	__POINTD1FN _0x240000,83
007b15 940e cafa 	CALL SUBOPT_0x261
007b17 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 0032                                                 break;
007b19 c00e      	RJMP _0x240009
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 _0x240010:
                +
007b1a e9e2     +LDI R30 , LOW ( 2 * _0x240000 + ( 98 ) )
007b1b e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 98 ) )
007b1c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 98 ) )
007b1d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 98 ) )
                 	__POINTD1FN _0x240000,98
007b1e 940e cafa 	CALL SUBOPT_0x261
007b20 940e caf4 	CALL SUBOPT_0x260
                +
007b22 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007b23 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007b24 81e0      	LD   R30,Z
007b25 940e c90a 	CALL SUBOPT_0x215
                 ; 0012 0034                                                 return;
007b27 c3f1      	RJMP _0x20E0049
                 ; 0012 0035             }
                 _0x240009:
                 ; 0012 0036         }
                 ; 0012 0037         else{
007b28 c008      	RJMP _0x240011
                 _0x240006:
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                +
007b29 ecee     +LDI R30 , LOW ( 2 * _0x240000 + ( 158 ) )
007b2a e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 158 ) )
007b2b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 158 ) )
007b2c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 158 ) )
                 	__POINTD1FN _0x240000,158
007b2d 940e cafa 	CALL SUBOPT_0x261
007b2f 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 0039         }
                 _0x240011:
                 ; 0012 003A     }
                +
007b31 5f0f     +SUBI R16 , LOW ( - 1 )
007b32 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007b33 cf85      	RJMP _0x240004
                 _0x240005:
                 ; 0012 003B 
                 ; 0012 003C     return;
007b34 c3e4      	RJMP _0x20E0049
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 _OLED_showPowerStatus:
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
007b35 940e da2e 	CALL __PUTPARD2
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
007b37 81ec      	LDD  R30,Y+4
007b38 30e0      	CPI  R30,0
007b39 f429      	BRNE _0x240012
                 ; 0012 0044         printOLED("CG1");
                +
007b3a ede7     +LDI R30 , LOW ( 2 * _0x240000 + ( 167 ) )
007b3b e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 167 ) )
007b3c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 167 ) )
007b3d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 167 ) )
                 	__POINTD1FN _0x240000,167
007b3e c037      	RJMP _0x240056
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 _0x240012:
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
007b3f 940e c897 	CALL SUBOPT_0x204
007b41 940e d870 	CALL __CMPF12
007b43 f428      	BRSH _0x240014
                 ; 0012 0049             printOLED("BL0");
                +
007b44 edeb     +LDI R30 , LOW ( 2 * _0x240000 + ( 171 ) )
007b45 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 171 ) )
007b46 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 171 ) )
007b47 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 171 ) )
                 	__POINTD1FN _0x240000,171
007b48 c02d      	RJMP _0x240056
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 _0x240014:
007b49 940e c897 	CALL SUBOPT_0x204
007b4b 940e d870 	CALL __CMPF12
007b4d f018      	BRLO _0x240017
007b4e 940e cb06 	CALL SUBOPT_0x264
007b50 f008      	BRLO _0x240018
                 _0x240017:
007b51 c005      	RJMP _0x240016
                 _0x240018:
                 ; 0012 004C             printOLED("BL1");
                +
007b52 edef     +LDI R30 , LOW ( 2 * _0x240000 + ( 175 ) )
007b53 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 175 ) )
007b54 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 175 ) )
007b55 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 175 ) )
                 	__POINTD1FN _0x240000,175
007b56 c01f      	RJMP _0x240056
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 _0x240016:
007b57 940e cb06 	CALL SUBOPT_0x264
007b59 f018      	BRLO _0x24001B
007b5a 940e cb0f 	CALL SUBOPT_0x265
007b5c f008      	BRLO _0x24001C
                 _0x24001B:
007b5d c005      	RJMP _0x24001A
                 _0x24001C:
                 ; 0012 004F             printOLED("BL2");
                +
007b5e eee3     +LDI R30 , LOW ( 2 * _0x240000 + ( 179 ) )
007b5f e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 179 ) )
007b60 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 179 ) )
007b61 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 179 ) )
                 	__POINTD1FN _0x240000,179
007b62 c013      	RJMP _0x240056
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 _0x24001A:
007b63 940e cb0f 	CALL SUBOPT_0x265
007b65 f018      	BRLO _0x24001F
007b66 940e cb18 	CALL SUBOPT_0x266
007b68 f008      	BRLO _0x240020
                 _0x24001F:
007b69 c005      	RJMP _0x24001E
                 _0x240020:
                 ; 0012 0052             printOLED("BL3");
                +
007b6a eee7     +LDI R30 , LOW ( 2 * _0x240000 + ( 183 ) )
007b6b e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 183 ) )
007b6c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 183 ) )
007b6d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 183 ) )
                 	__POINTD1FN _0x240000,183
007b6e c007      	RJMP _0x240056
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 _0x24001E:
007b6f 940e cb18 	CALL SUBOPT_0x266
007b71 f040      	BRLO _0x240022
                 ; 0012 0055             printOLED("BL4");
                +
007b72 eeeb     +LDI R30 , LOW ( 2 * _0x240000 + ( 187 ) )
007b73 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 187 ) )
007b74 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 187 ) )
007b75 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 187 ) )
                 	__POINTD1FN _0x240000,187
                 _0x240056:
007b76 940e da29 	CALL __PUTPARD1
007b78 940e cb21 	CALL SUBOPT_0x267
                 ; 0012 0056         }
                 ; 0012 0057     }
                 _0x240022:
                 ; 0012 0058 }
                 _0x20E0055:
007b7a 9625      	ADIW R28,5
007b7b 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 _OLED_showInputStatus:
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
007b7c 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007b7d 81aa      	LDD  R26,Y+2
007b7e 23aa      	TST  R26
007b7f f022      	BRMI _0x240024
007b80 81a9      	LDD  R26,Y+1
007b81 81ba      	LDD  R27,Y+1+1
007b82 9718      	SBIW R26,8
007b83 f03c      	BRLT _0x240023
                 _0x240024:
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                +
007b84 eeef     +LDI R30 , LOW ( 2 * _0x240000 + ( 191 ) )
007b85 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 191 ) )
007b86 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 191 ) )
007b87 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 191 ) )
                 	__POINTD1FN _0x240000,191
007b88 940e bbec 	CALL SUBOPT_0x3
                 ; 0012 005E         return;
007b8a c045      	RJMP _0x20E0053
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 _0x240023:
007b8b 81a9      	LDD  R26,Y+1
007b8c 81ba      	LDD  R27,Y+1+1
007b8d e0e3      	LDI  R30,LOW(3)
007b8e 940e d95a 	CALL __MULB1W2U
007b90 5be1      	SUBI R30,LOW(-_din_config)
007b91 4efd      	SBCI R31,HIGH(-_din_config)
007b92 81a0      	LD   R26,Z
007b93 30a1      	CPI  R26,LOW(0x1)
007b94 f5d9      	BRNE _0x20E0053
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
007b95 81a8      	LD   R26,Y
007b96 30a0      	CPI  R26,LOW(0x0)
007b97 f011      	BREQ _0x240028
007b98 30a1      	CPI  R26,LOW(0x1)
007b99 f409      	BRNE _0x240029
                 _0x240028:
007b9a c001      	RJMP _0x240027
                 _0x240029:
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
007b9b c034      	RJMP _0x20E0053
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 _0x240027:
                +
007b9c e2e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 246 ) )
007b9d e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 246 ) )
007b9e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 246 ) )
007b9f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 246 ) )
                 	__POINTD1FN _0x240000,246
007ba0 c024      	RJMP _0x20E0054
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 _OLED_showOutputStatus:
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
007ba1 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007ba2 81aa      	LDD  R26,Y+2
007ba3 23aa      	TST  R26
007ba4 f022      	BRMI _0x24002B
007ba5 81a9      	LDD  R26,Y+1
007ba6 81ba      	LDD  R27,Y+1+1
007ba7 9718      	SBIW R26,8
007ba8 f03c      	BRLT _0x24002A
                 _0x24002B:
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                +
007ba9 e2ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 255 ) )
007baa e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 255 ) )
007bab e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 255 ) )
007bac e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 255 ) )
                 	__POINTD1FN _0x240000,255
007bad 940e bbec 	CALL SUBOPT_0x3
                 ; 0012 0071         return;
007baf c020      	RJMP _0x20E0053
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 _0x24002A:
007bb0 81a9      	LDD  R26,Y+1
007bb1 81ba      	LDD  R27,Y+1+1
007bb2 e2e6      	LDI  R30,LOW(38)
007bb3 940e d95a 	CALL __MULB1W2U
007bb5 58e1      	SUBI R30,LOW(-_dout_config)
007bb6 4efd      	SBCI R31,HIGH(-_dout_config)
007bb7 81a0      	LD   R26,Z
007bb8 30a1      	CPI  R26,LOW(0x1)
007bb9 f4b1      	BRNE _0x20E0053
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
007bba 81a8      	LD   R26,Y
007bbb 30a0      	CPI  R26,LOW(0x0)
007bbc f011      	BREQ _0x24002F
007bbd 30a1      	CPI  R26,LOW(0x1)
007bbe f409      	BRNE _0x240030
                 _0x24002F:
007bbf c001      	RJMP _0x24002E
                 _0x240030:
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
007bc0 c00f      	RJMP _0x20E0053
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 _0x24002E:
                +
007bc1 e6e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 311 ) )
007bc2 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 311 ) )
007bc3 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 311 ) )
007bc4 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 311 ) )
                 	__POINTD1FN _0x240000,311
                 _0x20E0054:
007bc5 940e da29 	CALL __PUTPARD1
007bc7 81ed      	LDD  R30,Y+5
007bc8 81fe      	LDD  R31,Y+5+1
007bc9 940e cb26 	CALL SUBOPT_0x268
007bcb 85e8      	LDD  R30,Y+8
007bcc 940e be99 	CALL SUBOPT_0x65
007bce 940e caef 	CALL SUBOPT_0x25F
                 ; 0012 007E }
                 _0x20E0053:
007bd0 9623      	ADIW R28,3
007bd1 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 _OLED_showServerCommStatus:
                 ; 0012 0082     printOLED("SC%1d",state);
007bd2 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007bd3 e7e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 320 ) )
007bd4 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 320 ) )
007bd5 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 320 ) )
007bd6 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 320 ) )
                 	__POINTD1FN _0x240000,320
007bd7 940e cb2b 	CALL SUBOPT_0x269
007bd9 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 0083 }
007bdb c12e      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 _OLED_showLanStatus:
                 ; 0012 0087     printOLED("LC%1d",state);
007bdc 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007bdd e7e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 326 ) )
007bde e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 326 ) )
007bdf e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 326 ) )
007be0 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 326 ) )
                 	__POINTD1FN _0x240000,326
007be1 940e cb2b 	CALL SUBOPT_0x269
007be3 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 0088 }
007be5 c124      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 _OLED_showBuzzerStatus:
                 ; 0012 008C     printOLED("BZ%1d",state);
007be6 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007be7 e7ec     +LDI R30 , LOW ( 2 * _0x240000 + ( 332 ) )
007be8 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 332 ) )
007be9 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 332 ) )
007bea e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 332 ) )
                 	__POINTD1FN _0x240000,332
007beb 940e cb2b 	CALL SUBOPT_0x269
007bed 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 008D }
007bef c11a      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 _OLED_showMemoryStatus:
                 ; 0012 0091     printOLED("MS%1d",state);
007bf0 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007bf1 e8e2     +LDI R30 , LOW ( 2 * _0x240000 + ( 338 ) )
007bf2 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 338 ) )
007bf3 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 338 ) )
007bf4 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 338 ) )
                 	__POINTD1FN _0x240000,338
007bf5 940e cb2b 	CALL SUBOPT_0x269
007bf7 940e cb01 	CALL SUBOPT_0x263
                 ; 0012 0092 }
007bf9 c110      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 _OLED_showAlarmStatus:
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
007bfa 972a      	SBIW R28,10
007bfb 940e ca92 	CALL SUBOPT_0x250
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                +
007bfd e000     +LDI R16 , LOW ( 0 )
007bfe e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x240032:
                +
007bff 3005     +CPI R16 , LOW ( 5 )
007c00 e0e0     +LDI R30 , HIGH ( 5 )
007c01 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007c02 f014      	BRLT PC+3
007c03 940c 7c44 	JMP _0x240033
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
007c05 940e ca68 	CALL SUBOPT_0x24B
007c07 f189      	BREQ _0x240034
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
007c08 01f8      	MOVW R30,R16
007c09 01de      	MOVW R26,R28
007c0a 9619      	ADIW R26,9
007c0b 0fea      	ADD  R30,R26
007c0c 1ffb      	ADC  R31,R27
007c0d 010f      	MOVW R0,R30
007c0e e8ac      	LDI  R26,LOW(_sensorAlarm)
007c0f e1b4      	LDI  R27,HIGH(_sensorAlarm)
007c10 940e ca97 	CALL SUBOPT_0x251
007c12 f011      	BREQ _0x240035
007c13 e0e1      	LDI  R30,LOW(1)
007c14 c001      	RJMP _0x240036
                 _0x240035:
007c15 e0e0      	LDI  R30,LOW(0)
                 _0x240036:
007c16 01d0      	MOVW R26,R0
007c17 93ec      	ST   X,R30
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                +
007c18 e1ad     +LDI R26 , 29
007c19 9fa0     +MUL R26 , R16
007c1a 01f0     +MOVW R30 , R0
007c1b 9fa1     +MUL R26 , R17
007c1c 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
                +
007c1d 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
007c1e 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
007c1f 81e0      	LD   R30,Z
007c20 30e0      	CPI  R30,0
007c21 f081      	BREQ _0x240038
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
007c22 01f8      	MOVW R30,R16
007c23 01de      	MOVW R26,R28
007c24 9614      	ADIW R26,4
007c25 0fea      	ADD  R30,R26
007c26 1ffb      	ADC  R31,R27
007c27 010f      	MOVW R0,R30
007c28 e9a1      	LDI  R26,LOW(_dataAlarm)
007c29 e1b4      	LDI  R27,HIGH(_dataAlarm)
007c2a 940e ca97 	CALL SUBOPT_0x251
007c2c f011      	BREQ _0x240039
007c2d e0e1      	LDI  R30,LOW(1)
007c2e c001      	RJMP _0x24003A
                 _0x240039:
007c2f e0e0      	LDI  R30,LOW(0)
                 _0x24003A:
007c30 01d0      	MOVW R26,R0
007c31 c005      	RJMP _0x240057
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 _0x240038:
                 ; 0012 00A3                 flagData[i]     = 0;
007c32 01de      	MOVW R26,R28
007c33 9614      	ADIW R26,4
007c34 0fa0      	ADD  R26,R16
007c35 1fb1      	ADC  R27,R17
007c36 e0e0      	LDI  R30,LOW(0)
                 _0x240057:
007c37 93ec      	ST   X,R30
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
007c38 c008      	RJMP _0x24003D
                 _0x240034:
                 ; 0012 00A7             flagSens[i]         = 0;
007c39 01de      	MOVW R26,R28
007c3a 9619      	ADIW R26,9
007c3b 940e c423 	CALL SUBOPT_0x14F
                 ; 0012 00A8             flagData[i]         = 0;
007c3d 01de      	MOVW R26,R28
007c3e 9614      	ADIW R26,4
007c3f 940e c423 	CALL SUBOPT_0x14F
                 ; 0012 00A9         }
                 _0x24003D:
                 ; 0012 00AA 
                 ; 0012 00AB     }
                +
007c41 5f0f     +SUBI R16 , LOW ( - 1 )
007c42 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007c43 cfbb      	RJMP _0x240032
                 _0x240033:
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
007c44 940e caa8 	CALL SUBOPT_0x254
007c46 f44c      	BRGE _0x24003E
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
007c47 91e0 14a6 	LDS  R30,_batteryAlarm
007c49 30e0      	CPI  R30,0
007c4a f011      	BREQ _0x24003F
007c4b e0e1      	LDI  R30,LOW(1)
007c4c c001      	RJMP _0x240040
                 _0x24003F:
007c4d e0e0      	LDI  R30,LOW(0)
                 _0x240040:
007c4e 2f3e      	MOV  R19,R30
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
007c4f c001      	RJMP _0x240042
                 _0x24003E:
                 ; 0012 00B1         flagBatt                = 0;
007c50 e030      	LDI  R19,LOW(0)
                 ; 0012 00B2     }
                 _0x240042:
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
007c51 940e caba 	CALL SUBOPT_0x256
007c53 f448      	BRSH _0x240043
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
007c54 91e0 14a7 	LDS  R30,_memoryAlarm
007c56 30e0      	CPI  R30,0
007c57 f011      	BREQ _0x240044
007c58 e0e1      	LDI  R30,LOW(1)
007c59 c001      	RJMP _0x240045
                 _0x240044:
007c5a e0e0      	LDI  R30,LOW(0)
                 _0x240045:
007c5b 2f2e      	MOV  R18,R30
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
007c5c c001      	RJMP _0x240047
                 _0x240043:
                 ; 0012 00B8         flagMemo                = 0;
007c5d e020      	LDI  R18,LOW(0)
                 ; 0012 00B9     }
                 _0x240047:
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                +
007c5e e8e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 344 ) )
007c5f e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 344 ) )
007c60 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 344 ) )
007c61 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 344 ) )
                 	__POINTD1FN _0x240000,344
007c62 940e da29 	CALL __PUTPARD1
007c64 85ed      	LDD  R30,Y+13
007c65 940e be99 	CALL SUBOPT_0x65
007c67 89ea      	LDD  R30,Y+18
007c68 940e be99 	CALL SUBOPT_0x65
007c6a 89ef      	LDD  R30,Y+23
007c6b 940e be99 	CALL SUBOPT_0x65
007c6d 8dec      	LDD  R30,Y+28
007c6e 940e be99 	CALL SUBOPT_0x65
007c70 a1e9      	LDD  R30,Y+33
007c71 940e be99 	CALL SUBOPT_0x65
007c73 8dec      	LDD  R30,Y+28
007c74 940e be99 	CALL SUBOPT_0x65
007c76 a1e9      	LDD  R30,Y+33
007c77 940e be99 	CALL SUBOPT_0x65
007c79 a1ee      	LDD  R30,Y+38
007c7a 940e be99 	CALL SUBOPT_0x65
007c7c a5eb      	LDD  R30,Y+43
007c7d 940e be99 	CALL SUBOPT_0x65
007c7f a9e8      	LDD  R30,Y+48
007c80 940e be99 	CALL SUBOPT_0x65
007c82 2fe3      	MOV  R30,R19
007c83 940e be99 	CALL SUBOPT_0x65
007c85 2fe2      	MOV  R30,R18
007c86 940e be99 	CALL SUBOPT_0x65
007c88 e380      	LDI  R24,48
007c89 d002      	RCALL _printOLED
007c8a 96e4      	ADIW R28,52
                 ; 0012 00BF 
                 ; 0012 00C0     return;
007c8b c129      	RJMP _0x20E0050
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 _printOLED:
007c8c 92ff      	PUSH R15
007c8d 2ef8      	MOV  R15,R24
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
007c8e 97ef      	SBIW R28,63
007c8f 9721      	SBIW R28,1
007c90 931a      	ST   -Y,R17
007c91 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
007c92 01de      	MOVW R26,R28
007c93 96de      	ADIW R26,62
007c94 940e d890 	CALL __ADDW2R15
007c96 018d      	MOVW R16,R26
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
007c97 940e c81e 	CALL SUBOPT_0x1F3
007c99 01de      	MOVW R26,R28
007c9a 5bac      	SUBI R26,LOW(-(68))
007c9b 4fbf      	SBCI R27,HIGH(-(68))
007c9c 940e cb30 	CALL SUBOPT_0x26A
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
007c9e 98f0      	CBI  0x1E,0
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
007c9f e0a1      	LDI  R26,LOW(1)
007ca0 940e 3fa5 	CALL _putchar2
                 ; 0012 00DB     send_uart(2,strcmd);
007ca2 e0e2      	LDI  R30,LOW(2)
007ca3 93ea      	ST   -Y,R30
007ca4 01de      	MOVW R26,R28
007ca5 9613      	ADIW R26,3
007ca6 940e 3fed 	CALL _send_uart
                 ; 0012 00DC     putchar2(0x04);
007ca8 e0a4      	LDI  R26,LOW(4)
007ca9 940e 3fa5 	CALL _putchar2
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
007cab 01fe      	MOVW R30,R28
007cac 96fe      	ADIW R30,62
007cad 940e ca9c 	CALL SUBOPT_0x252
007caf 940e 4073 	CALL _TIMER_setTimer
                 ; 0012 00DF 
                 ; 0012 00E0     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 _0x24004A:
007cb1 99f0      	SBIC 0x1E,0
007cb2 c00c      	RJMP _0x24004D
                +
007cb3 01de     +MOVW R26 , R28
007cb4 5ca2     +SUBI R26 , LOW ( - 62 )
007cb5 4fbf     +SBCI R27 , HIGH ( - 62 )
007cb6 900d     +LD R0 , X +
007cb7 901d     +LD R1 , X +
007cb8 918d     +LD R24 , X +
007cb9 919c     +LD R25 , X
007cba 01d0     +MOVW R26 , R0
                 	__GETD2SX 62
007cbb 940e 405d 	CALL _TIMER_checkTimerExceed
007cbd 9730      	SBIW R30,0
007cbe f009      	BREQ _0x24004E
                 _0x24004D:
007cbf c001      	RJMP _0x24004C
                 _0x24004E:
007cc0 cff0      	RJMP _0x24004A
                 _0x24004C:
                 ; 0012 00E1 
                 ; 0012 00E2     if(!flag_oled_ack){
007cc1 99f0      	SBIC 0x1E,0
007cc2 c006      	RJMP _0x24004F
                 ; 0012 00E3         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                +
007cc3 eaef     +LDI R30 , LOW ( 2 * _0x240000 + ( 383 ) )
007cc4 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 383 ) )
007cc5 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 383 ) )
007cc6 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 383 ) )
                 	__POINTD1FN _0x240000,383
007cc7 940e bbec 	CALL SUBOPT_0x3
                 ; 0012 00E4     }
                 ; 0012 00E5 
                 ; 0012 00E6 }
                 _0x24004F:
007cc9 8119      	LDD  R17,Y+1
007cca 8108      	LDD  R16,Y+0
007ccb 96ef      	ADIW R28,63
007ccc 9623      	ADIW R28,3
007ccd 90ff      	POP  R15
007cce 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00EE {
                 _OLED_reset:
                 ; 0012 00EF     OLED_RESET = 0;            // Active SOLED Reset
007ccf 98a5      	CBI  0x14,5
                 ; 0012 00F0     delay_ms(1);
007cd0 940e bf12 	CALL SUBOPT_0x75
007cd2 940e d6dd 	CALL _delay_ms
                 ; 0012 00F1     OLED_RESET = 1;            // Dective SOLED Reset for start use.
007cd4 9aa5      	SBI  0x14,5
                 ; 0012 00F2     delay_ms(1);
007cd5 940e bf12 	CALL SUBOPT_0x75
007cd7 940e d6dd 	CALL _delay_ms
                 ; 0012 00F3 
                 ; 0012 00F4 }
007cd9 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00F7 {
                 _init_oled:
                 ; 0012 00F8     printDebug("Initializing OLED.. ");
                +
007cda ece8     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
007cdb e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
007cdc e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
007cdd e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
007cde 940e bbec 	CALL SUBOPT_0x3
                 ; 0012 00F9     flag_oled_ack = 0;
007ce0 98f0      	CBI  0x1E,0
                 ; 0012 00FA     OLED_reset();
007ce1 dfed      	RCALL _OLED_reset
                 ; 0012 00FB     printDebug("OK\r\n");
                +
007ce2 eded     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
007ce3 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
007ce4 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
007ce5 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
007ce6 940e da29 	CALL __PUTPARD1
007ce8 e080      	LDI  R24,0
007ce9 940e 9afc 	CALL _printDebug
007ceb c1db      	RJMP _0x20E004B
                 ; 0012 00FC }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
007cec 93aa      	ST   -Y,R26
                 ;	res -> Y+0
007ced 81a8      	LD   R26,Y
007cee 30a1      	CPI  R26,LOW(0x1)
007cef f010      	BRLO _0x260005
007cf0 31a0      	CPI  R26,LOW(0x10)
007cf1 f008      	BRLO _0x260006
                 _0x260005:
007cf2 c017      	RJMP _0x260004
                 _0x260006:
                +
007cf3 ebe5     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
007cf4 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
007cf5 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
007cf6 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
007cf7 940e da29 	CALL __PUTPARD1
007cf9 81ec      	LDD  R30,Y+4
007cfa e6aa      	LDI  R26,LOW(_error_msg*2)
007cfb e0b1      	LDI  R27,HIGH(_error_msg*2)
007cfc e080      	LDI  R24,BYTE3(_error_msg*2)
007cfd 27ff      	CLR  R31
007cfe 2766      	CLR  R22
007cff 2777      	CLR  R23
007d00 940e d8ff 	CALL __LSLD1
007d02 940e d8ff 	CALL __LSLD1
007d04 940e d894 	CALL __ADDD12
007d06 940e da09 	CALL __GETD1PF
007d08 940e c5c5 	CALL SUBOPT_0x18C
                 _0x260004:
                 _0x20E0052:
007d0a 9621      	ADIW R28,1
007d0b 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
007d0c 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
007d0e 940e ca31 	CALL SUBOPT_0x242
007d10 f449      	BRNE _0x260007
                +
007d11 ece1     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
007d12 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
007d13 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
007d14 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
007d15 940e bbec 	CALL SUBOPT_0x3
007d17 efef      	LDI  R30,LOW(65535)
007d18 efff      	LDI  R31,HIGH(65535)
007d19 c09b      	RJMP _0x20E0050
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
007d1a 940e c684 	CALL SUBOPT_0x1B0
007d1c 940e cb39 	CALL SUBOPT_0x26B
                 ; 0013 002F     if(res != FR_OK){
007d1e f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
007d1f eee4     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
007d20 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
007d21 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
007d22 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
007d23 940e bfa1 	CALL SUBOPT_0x8D
007d25 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0013 0031         error(res);
007d27 940e cb40 	CALL SUBOPT_0x26C
                 ; 0013 0032         return -1;
007d29 c08b      	RJMP _0x20E0050
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
007d2a 940e c684 	CALL SUBOPT_0x1B0
007d2c 940e c5ee 	CALL SUBOPT_0x195
007d2e 940e c5ee 	CALL SUBOPT_0x195
007d30 b7ad      	IN   R26,SPL
007d31 b7be      	IN   R27,SPH
007d32 9711      	SBIW R26,1
007d33 933f      	PUSH R19
007d34 932f      	PUSH R18
007d35 940e b30d 	CALL _f_write
007d37 912f      	POP  R18
007d38 913f      	POP  R19
007d39 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
007d3a 3010      	CPI  R17,0
007d3b f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
007d3c e0ea     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
007d3d e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
007d3e e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
007d3f e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
007d40 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0038         print_payload(data,len);
007d42 940e c493 	CALL SUBOPT_0x15D
007d44 81ae      	LDD  R26,Y+6
007d45 81bf      	LDD  R27,Y+6+1
007d46 940e 9b80 	CALL _print_payload
                 ; 0013 0039         error(res);
007d48 2fa1      	MOV  R26,R17
007d49 dfa2      	RCALL _error
                 ; 0013 003A         return -2;
007d4a efee      	LDI  R30,LOW(65534)
007d4b efff      	LDI  R31,HIGH(65534)
007d4c c068      	RJMP _0x20E0050
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
007d4d 81ec      	LDD  R30,Y+4
007d4e 81fd      	LDD  R31,Y+4+1
007d4f 17e2      	CP   R30,R18
007d50 07f3      	CPC  R31,R19
007d51 f081      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
007d52 e2ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
007d53 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
007d54 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
007d55 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
007d56 940e da29 	CALL __PUTPARD1
007d58 01f9      	MOVW R30,R18
007d59 940e bd4a 	CALL SUBOPT_0x34
007d5b 85ec      	LDD  R30,Y+12
007d5c 85fd      	LDD  R31,Y+12+1
007d5d 940e c3d2 	CALL SUBOPT_0x141
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
007d5f efed      	LDI  R30,LOW(65533)
007d60 efff      	LDI  R31,HIGH(65533)
007d61 c053      	RJMP _0x20E0050
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
007d62 c050      	RJMP _0x20E0051
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
007d63 940e bf4d 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
007d65 940e ca31 	CALL SUBOPT_0x242
007d67 f449      	BRNE _0x26000B
                +
007d68 e5e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
007d69 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
007d6a e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
007d6b e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
007d6c 940e bbec 	CALL SUBOPT_0x3
007d6e efef      	LDI  R30,LOW(65535)
007d6f efff      	LDI  R31,HIGH(65535)
007d70 c044      	RJMP _0x20E0050
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
007d71 940e c684 	CALL SUBOPT_0x1B0
007d73 940e cb39 	CALL SUBOPT_0x26B
                 ; 0013 004D     if(res != FR_OK){
007d75 f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
007d76 e7eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
007d77 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
007d78 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
007d79 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
007d7a 940e bfa1 	CALL SUBOPT_0x8D
007d7c 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0013 004F         error(res);
007d7e 940e cb40 	CALL SUBOPT_0x26C
                 ; 0013 0050         return -1;
007d80 c034      	RJMP _0x20E0050
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
007d81 940e c684 	CALL SUBOPT_0x1B0
007d83 940e c5ee 	CALL SUBOPT_0x195
007d85 940e c5ee 	CALL SUBOPT_0x195
007d87 b7ad      	IN   R26,SPL
007d88 b7be      	IN   R27,SPH
007d89 9711      	SBIW R26,1
007d8a 933f      	PUSH R19
007d8b 932f      	PUSH R18
007d8c 940e b1a9 	CALL _f_read
007d8e 912f      	POP  R18
007d8f 913f      	POP  R19
007d90 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
007d91 3010      	CPI  R17,0
007d92 f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
007d93 eae0     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
007d94 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
007d95 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
007d96 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
007d97 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0056         error(res);
007d99 2fa1      	MOV  R26,R17
007d9a df51      	RCALL _error
                 ; 0013 0057         return -2;
007d9b efee      	LDI  R30,LOW(65534)
007d9c efff      	LDI  R31,HIGH(65534)
007d9d c017      	RJMP _0x20E0050
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
007d9e 81ec      	LDD  R30,Y+4
007d9f 81fd      	LDD  R31,Y+4+1
007da0 17e2      	CP   R30,R18
007da1 07f3      	CPC  R31,R19
007da2 f081      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
007da3 ece0     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
007da4 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
007da5 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
007da6 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
007da7 940e da29 	CALL __PUTPARD1
007da9 01f9      	MOVW R30,R18
007daa 940e bd4a 	CALL SUBOPT_0x34
007dac 85ec      	LDD  R30,Y+12
007dad 85fd      	LDD  R31,Y+12+1
007dae 940e c3d2 	CALL SUBOPT_0x141
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
007db0 efed      	LDI  R30,LOW(65533)
007db1 efff      	LDI  R31,HIGH(65533)
007db2 c002      	RJMP _0x20E0050
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0051:
007db3 e0e0      	LDI  R30,LOW(0)
007db4 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0050:
007db5 940e daa2 	CALL __LOADLOCR4
007db7 962e      	ADIW R28,14
007db8 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
007db9 940e c21a 	CALL SUBOPT_0xF1
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
007dbb e1ef      	LDI  R30,LOW(_root_path)
007dbc e1f9      	LDI  R31,HIGH(_root_path)
007dbd 940e cb46 	CALL SUBOPT_0x26D
007dbf e1ad      	LDI  R26,LOW(_pfat)
007dc0 e1b9      	LDI  R27,HIGH(_pfat)
007dc1 940e b6d4 	CALL _f_getfree
007dc3 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
007dc4 3010      	CPI  R17,0
007dc5 f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
007dc6 eeec     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
007dc7 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
007dc8 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
007dc9 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
007dca 940e cb4d 	CALL SUBOPT_0x26E
007dcc 940e bc5e 	CALL SUBOPT_0x12
                 ; 0013 006F        error(res);
007dce 2fa1      	MOV  R26,R17
007dcf 940e cb53 	CALL SUBOPT_0x26F
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
007dd1 c012      	RJMP _0x20E004F
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
007dd2 91e0 191d 	LDS  R30,_pfat
007dd4 91f0 191e 	LDS  R31,_pfat+1
007dd6 940e cb61 	CALL SUBOPT_0x270
007dd8 940e cb64 	CALL SUBOPT_0x271
007dda 940e cb69 	CALL SUBOPT_0x272
007ddc 940e d8fa 	CALL __LSRD1
007dde 81ad      	LDD  R26,Y+5
007ddf 81be      	LDD  R27,Y+5+1
007de0 940e d9ff 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
007de2 e0e0      	LDI  R30,LOW(0)
007de3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004F:
007de4 8118      	LDD  R17,Y+0
007de5 9627      	ADIW R28,7
007de6 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
007de7 931a      	ST   -Y,R17
                 ;	res -> R17
007de8 e0e0      	LDI  R30,LOW(0)
007de9 93ea      	ST   -Y,R30
007dea eeab      	LDI  R26,LOW(_fat)
007deb e1b6      	LDI  R27,HIGH(_fat)
007dec 940e b051 	CALL _f_mount
007dee 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
007def 3010      	CPI  R17,0
007df0 f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
007df1 e1ea     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
007df2 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
007df3 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
007df4 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
007df5 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0082         error(res);
007df7 940e cb40 	CALL SUBOPT_0x26C
                 ; 0013 0083         return -1;
007df9 c008      	RJMP _0x20E004E
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
007dfa e3eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
007dfb e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
007dfc e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
007dfd e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
007dfe 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0087     return 0;
007e00 e0e0      	LDI  R30,LOW(0)
007e01 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
007e02 9119      	LD   R17,Y+
007e03 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
007e04 93aa      	ST   -Y,R26
007e05 97ef      	SBIW R28,63
007e06 9763      	SBIW R28,19
007e07 50d2      	SUBI R29,2
007e08 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
007e09 940e ca31 	CALL SUBOPT_0x242
007e0b f449      	BRNE _0x260014
                +
007e0c eee0     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
007e0d e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
007e0e e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
007e0f e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
007e10 940e bbec 	CALL SUBOPT_0x3
007e12 efef      	LDI  R30,LOW(65535)
007e13 efff      	LDI  R31,HIGH(65535)
007e14 c048      	RJMP _0x20E004D
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
007e15 01fe      	MOVW R30,R28
007e16 9631      	ADIW R30,1
007e17 93fa      	ST   -Y,R31
007e18 93ea      	ST   -Y,R30
007e19 940e cb6e 	CALL SUBOPT_0x273
                +
007e1b 01fe     +MOVW R30 , R28
007e1c 5ae2     +SUBI R30 , LOW ( - 606 )
007e1d 4ffd     +SBCI R31 , HIGH ( - 606 )
007e1e 9001     +LD R0 , Z +
007e1f 81f0     +LD R31 , Z
007e20 2de0     +MOV R30 , R0
                 	__GETW1SX 606
007e21 940e bd4a 	CALL SUBOPT_0x34
007e23 e088      	LDI  R24,8
007e24 940e bb00 	CALL _sprintf
007e26 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
007e27 01de     +MOVW R26 , R28
007e28 5aad     +SUBI R26 , LOW ( - 595 )
007e29 4fbd     +SBCI R27 , HIGH ( - 595 )
007e2a 91ac     +LD R26 , X
                 	__GETB2SX 595
007e2b 30a1      	CPI  R26,LOW(0x1)
007e2c f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
007e2d 01fe      	MOVW R30,R28
007e2e 96f3      	ADIW R30,51
007e2f 940e cb46 	CALL SUBOPT_0x26D
007e31 e0aa      	LDI  R26,LOW(10)
007e32 c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
007e33 01fe      	MOVW R30,R28
007e34 96f3      	ADIW R30,51
007e35 940e cb46 	CALL SUBOPT_0x26D
007e37 e0a6      	LDI  R26,LOW(6)
                 _0x260021:
007e38 940e b07c 	CALL _f_open
007e3a 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
007e3b 3018      	CPI  R17,8
007e3c f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
007e3d e0e0      	LDI  R30,LOW(0)
007e3e e0f0      	LDI  R31,HIGH(0)
007e3f c01d      	RJMP _0x20E004D
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
007e40 3010      	CPI  R17,0
007e41 f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
007e42 e0e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
007e43 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
007e44 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
007e45 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
007e46 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 00DA         error(res);
007e48 940e cb40 	CALL SUBOPT_0x26C
                 ; 0013 00DB         return -1;
007e4a c012      	RJMP _0x20E004D
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
007e4b 01de      	MOVW R26,R28
007e4c 96d3      	ADIW R26,51
007e4d 940e b529 	CALL _f_close
007e4f 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
007e50 3010      	CPI  R17,0
007e51 f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
007e52 e2eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
007e53 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
007e54 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
007e55 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
007e56 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 00E3         error(res);
007e58 940e cb40 	CALL SUBOPT_0x26C
                 ; 0013 00E4         return -1;
007e5a c002      	RJMP _0x20E004D
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
007e5b e0e1      	LDI  R30,LOW(1)
007e5c e0f0      	LDI  R31,HIGH(1)
                 _0x20E004D:
007e5d 8118      	LDD  R17,Y+0
007e5e 96ef      	ADIW R28,63
007e5f 9667      	ADIW R28,23
007e60 5fde      	SUBI R29,-2
007e61 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
007e62 93ba      	ST   -Y,R27
007e63 93aa      	ST   -Y,R26
007e64 97e2      	SBIW R28,50
007e65 931a      	ST   -Y,R17
007e66 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
007e67 940e ca31 	CALL SUBOPT_0x242
007e69 f449      	BRNE _0x26001B
                +
007e6a e4ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
007e6b e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
007e6c e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
007e6d e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
007e6e 940e bbec 	CALL SUBOPT_0x3
007e70 efef      	LDI  R30,LOW(65535)
007e71 efff      	LDI  R31,HIGH(65535)
007e72 c02a      	RJMP _0x20E004C
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
007e73 940e c81e 	CALL SUBOPT_0x1F3
007e75 940e cb6e 	CALL SUBOPT_0x273
007e77 adee      	LDD  R30,Y+62
007e78 adff      	LDD  R31,Y+62+1
007e79 940e bd4a 	CALL SUBOPT_0x34
007e7b e088      	LDI  R24,8
007e7c 940e bb00 	CALL _sprintf
007e7e 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
007e7f a9ee      	LDD  R30,Y+54
007e80 a9ff      	LDD  R31,Y+54+1
007e81 940e cb73 	CALL SUBOPT_0x274
007e83 e0a3      	LDI  R26,LOW(3)
007e84 940e b07c 	CALL _f_open
007e86 2f0e      	MOV  R16,R30
007e87 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
007e88 2e00      	MOV  R0,R16
007e89 2a01      	OR   R0,R17
007e8a f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
007e8b e7e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
007e8c e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
007e8d e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
007e8e e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
007e8f 940e da29 	CALL __PUTPARD1
007e91 ade8      	LDD  R30,Y+56
007e92 adf9      	LDD  R31,Y+56+1
007e93 940e bd4a 	CALL SUBOPT_0x34
007e95 940e bc5e 	CALL SUBOPT_0x12
                 ; 0013 00F6         error(res);
007e97 2fa0      	MOV  R26,R16
007e98 940e cb53 	CALL SUBOPT_0x26F
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
007e9a c002      	RJMP _0x20E004C
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
007e9b e0e0      	LDI  R30,LOW(0)
007e9c e0f0      	LDI  R31,HIGH(0)
                 _0x20E004C:
007e9d 8119      	LDD  R17,Y+1
007e9e 8108      	LDD  R16,Y+0
007e9f 96e8      	ADIW R28,56
007ea0 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
007ea1 940e bf59 	CALL SUBOPT_0x81
                 ;	*file -> Y+2
                 ;	res -> R16,R17
007ea3 940e ca31 	CALL SUBOPT_0x242
007ea5 f449      	BRNE _0x26001D
                +
007ea6 e9e5     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
007ea7 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
007ea8 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
007ea9 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
007eaa 940e bbec 	CALL SUBOPT_0x3
007eac efef      	LDI  R30,LOW(65535)
007ead efff      	LDI  R31,HIGH(65535)
007eae c016      	RJMP _0x20E004A
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
007eaf 81aa      	LDD  R26,Y+2
007eb0 81bb      	LDD  R27,Y+2+1
007eb1 940e b529 	CALL _f_close
007eb3 2f0e      	MOV  R16,R30
007eb4 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
007eb5 2e00      	MOV  R0,R16
007eb6 2a01      	OR   R0,R17
007eb7 f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
007eb8 ebe8     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
007eb9 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
007eba e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
007ebb e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
007ebc 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0107         error(res);
007ebe 2fa0      	MOV  R26,R16
007ebf de2c      	RCALL _error
                 ; 0013 0108         return -1;
007ec0 efef      	LDI  R30,LOW(65535)
007ec1 efff      	LDI  R31,HIGH(65535)
007ec2 c002      	RJMP _0x20E004A
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
007ec3 e0e0      	LDI  R30,LOW(0)
007ec4 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004A:
007ec5 8119      	LDD  R17,Y+1
007ec6 8108      	LDD  R16,Y+0
                 _0x20E004B:
007ec7 9624      	ADIW R28,4
007ec8 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
007ec9 931a      	ST   -Y,R17
007eca 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
007ecb edea     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
007ecc e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
007ecd e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
007ece e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
007ecf 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
007ed1 eeeb      	LDI  R30,LOW(_fat)
007ed2 e1f6      	LDI  R31,HIGH(_fat)
007ed3 93e0 191d 	STS  _pfat,R30
007ed5 93f0 191e 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
007ed7 eea8      	LDI  R26,LOW(1000)
007ed8 e0b3      	LDI  R27,HIGH(1000)
007ed9 940e d6dd 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
007edb e0e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
007edc e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
007edd e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
007ede e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
007edf 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 011A     err = SD_mount();
007ee1 df05      	RCALL _SD_mount
007ee2 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
007ee3 2311      	TST  R17
007ee4 f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
007ee5 e2e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
007ee6 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
007ee7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
007ee8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
007ee9 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 011D         return -1;
007eeb efef      	LDI  R30,LOW(65535)
007eec efff      	LDI  R31,HIGH(65535)
007eed c02b      	RJMP _0x20E0049
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
007eee e3ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
007eef e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
007ef0 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
007ef1 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
007ef2 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
007ef4 eea8      	LDI  R26,LOW(1000)
007ef5 e0b3      	LDI  R27,HIGH(1000)
007ef6 940e d6dd 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
007ef8 e6ab      	LDI  R26,LOW(_sdFreeSpace)
007ef9 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
007efa debe      	RCALL _SD_readMemoryRemain
007efb 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
007efc 2311      	TST  R17
007efd f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
007efe e5ed     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
007eff e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
007f00 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
007f01 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
007f02 940e bbec 	CALL SUBOPT_0x3
                 ; 0013 0128         return -1;
007f04 efef      	LDI  R30,LOW(65535)
007f05 efff      	LDI  R31,HIGH(65535)
007f06 c012      	RJMP _0x20E0049
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
007f07 e8e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
007f08 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
007f09 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
007f0a e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
007f0b 940e da29 	CALL __PUTPARD1
007f0d 91e0 146b 	LDS  R30,_sdFreeSpace
007f0f 91f0 146c 	LDS  R31,_sdFreeSpace+1
007f11 9160 146d 	LDS  R22,_sdFreeSpace+2
007f13 9170 146e 	LDS  R23,_sdFreeSpace+3
007f15 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0013 012D 
                 ; 0013 012E     return 0;
007f17 e0e0      	LDI  R30,LOW(0)
007f18 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0049:
007f19 9109      	LD   R16,Y+
007f1a 9119      	LD   R17,Y+
007f1b 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
007f1c 940e da2e 	CALL __PUTPARD2
007f1e 9728      	SBIW R28,8
007f1f 940e da9b 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
007f21 940e cb7a 	CALL SUBOPT_0x275
007f23 940e cb7f 	CALL SUBOPT_0x276
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
007f25 f44a      	BRPL _0x280009
                +
007f26 efe0     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
007f27 e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
007f28 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
007f29 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
007f2a 940e bbec 	CALL SUBOPT_0x3
007f2c efef      	LDI  R30,LOW(65535)
007f2d efff      	LDI  R31,HIGH(65535)
007f2e c078      	RJMP _0x20E0048
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
007f2f e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
007f30 940e cb86 	CALL SUBOPT_0x277
007f32 940e cb8c 	CALL SUBOPT_0x278
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
007f34 940e cb7a 	CALL SUBOPT_0x275
007f36 940e cb90 	CALL SUBOPT_0x279
007f38 b7ed      	IN   R30,SPL
007f39 b7fe      	IN   R31,SPH
007f3a 9731      	SBIW R30,1
007f3b 93fa      	ST   -Y,R31
007f3c 93ea      	ST   -Y,R30
007f3d 934f      	PUSH R20
007f3e 933f      	PUSH R19
007f3f 940e bf12 	CALL SUBOPT_0x75
007f41 ddca      	RCALL _SD_writeData
007f42 913f      	POP  R19
007f43 914f      	POP  R20
007f44 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
007f45 2311      	TST  R17
007f46 f44a      	BRPL _0x28000A
                +
007f47 e1ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
007f48 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
007f49 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
007f4a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
007f4b 940e bbec 	CALL SUBOPT_0x3
007f4d efef      	LDI  R30,LOW(65535)
007f4e efff      	LDI  R31,HIGH(65535)
007f4f c057      	RJMP _0x20E0048
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
007f50 940e cb7a 	CALL SUBOPT_0x275
007f52 940e cb95 	CALL SUBOPT_0x27A
007f54 940e da29 	CALL __PUTPARD1
007f56 01fe      	MOVW R30,R28
007f57 9678      	ADIW R30,24
007f58 940e cb99 	CALL SUBOPT_0x27B
007f5a 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
007f5c f44a      	BRPL _0x28000B
                +
007f5d e4eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
007f5e e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
007f5f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
007f60 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
007f61 940e bbec 	CALL SUBOPT_0x3
007f63 efef      	LDI  R30,LOW(65535)
007f64 efff      	LDI  R31,HIGH(65535)
007f65 c041      	RJMP _0x20E0048
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
007f66 940e cb7a 	CALL SUBOPT_0x275
007f68 940e cba2 	CALL SUBOPT_0x27D
007f6a 01fe      	MOVW R30,R28
007f6b 9676      	ADIW R30,22
007f6c 93fa      	ST   -Y,R31
007f6d 93ea      	ST   -Y,R30
007f6e 940e bf0b 	CALL SUBOPT_0x73
007f70 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
007f72 f44a      	BRPL _0x28000C
                +
007f73 e7ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
007f74 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
007f75 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
007f76 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
007f77 940e bbec 	CALL SUBOPT_0x3
007f79 efef      	LDI  R30,LOW(65535)
007f7a efff      	LDI  R31,HIGH(65535)
007f7b c02b      	RJMP _0x20E0048
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
007f7c 940e cb7a 	CALL SUBOPT_0x275
007f7e 940e cbab 	CALL SUBOPT_0x27E
007f80 940e da29 	CALL __PUTPARD1
007f82 940e bec3 	CALL SUBOPT_0x6C
007f84 940e bf18 	CALL SUBOPT_0x77
007f86 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
007f88 f44a      	BRPL _0x28000D
                +
007f89 eaed     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
007f8a e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
007f8b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
007f8c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
007f8d 940e bbec 	CALL SUBOPT_0x3
007f8f efef      	LDI  R30,LOW(65535)
007f90 efff      	LDI  R31,HIGH(65535)
007f91 c015      	RJMP _0x20E0048
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
007f92 940e cb7a 	CALL SUBOPT_0x275
007f94 940e cbb2 	CALL SUBOPT_0x27F
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
007f96 f45a      	BRPL _0x28000E
                +
007f97 edeb     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
007f98 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
007f99 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
007f9a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
007f9b 940e bfa1 	CALL SUBOPT_0x8D
007f9d 940e c5c5 	CALL SUBOPT_0x18C
007f9f efef      	LDI  R30,LOW(65535)
007fa0 efff      	LDI  R31,HIGH(65535)
007fa1 c005      	RJMP _0x20E0048
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
007fa2 e0e0      	LDI  R30,LOW(0)
007fa3 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
007fa5 85e8      	LDD  R30,Y+8
007fa6 85f9      	LDD  R31,Y+8+1
                 _0x20E0048:
007fa7 940e daa2 	CALL __LOADLOCR4
007fa9 9668      	ADIW R28,24
007faa 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
007fab 940e c1f5 	CALL SUBOPT_0xEA
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
007fad 940e cbc1 	CALL SUBOPT_0x280
007faf 940e cbc6 	CALL SUBOPT_0x281
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
007fb1 f44a      	BRPL _0x28000F
                +
007fb2 e0ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
007fb3 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
007fb4 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
007fb5 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
007fb6 940e bbec 	CALL SUBOPT_0x3
007fb8 efef      	LDI  R30,LOW(65535)
007fb9 efff      	LDI  R31,HIGH(65535)
007fba c1b9      	RJMP _0x20E0045
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
007fbb 940e cbc1 	CALL SUBOPT_0x280
007fbd 940e cbcd 	CALL SUBOPT_0x282
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
007fbf f44a      	BRPL _0x280010
                +
007fc0 e3e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
007fc1 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
007fc2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
007fc3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
007fc4 940e bbec 	CALL SUBOPT_0x3
007fc6 efef      	LDI  R30,LOW(65535)
007fc7 efff      	LDI  R31,HIGH(65535)
007fc8 c1ab      	RJMP _0x20E0045
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
007fc9 940e cbd4 	CALL SUBOPT_0x283
007fcb 940e cbda 	CALL SUBOPT_0x284
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
007fcd 940e cbe0 	CALL SUBOPT_0x285
007fcf f0b8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
007fd0 e9e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
007fd1 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
007fd2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
007fd3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
007fd4 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
007fd6 940e cbe7 	CALL SUBOPT_0x286
                 ; 0014 0050         if(res < 0)
007fd8 f442      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
007fd9 ebe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
007fda e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
007fdb e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
007fdc e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
007fdd 940e be72 	CALL SUBOPT_0x5F
007fdf 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
007fe1 e0e1      	LDI  R30,LOW(1)
007fe2 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
007fe4 e0e0      	LDI  R30,LOW(0)
007fe5 e0f0      	LDI  R31,HIGH(0)
007fe6 c18d      	RJMP _0x20E0045
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
007fe7 940e cb86 	CALL SUBOPT_0x277
007fe9 940e cb8c 	CALL SUBOPT_0x278
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
007feb 940e cbc1 	CALL SUBOPT_0x280
007fed 940e cb90 	CALL SUBOPT_0x279
007fef b7ed      	IN   R30,SPL
007ff0 b7fe      	IN   R31,SPH
007ff1 9731      	SBIW R30,1
007ff2 93fa      	ST   -Y,R31
007ff3 93ea      	ST   -Y,R30
007ff4 934f      	PUSH R20
007ff5 933f      	PUSH R19
007ff6 940e bf12 	CALL SUBOPT_0x75
007ff8 dd6a      	RCALL _SD_readData
007ff9 913f      	POP  R19
007ffa 914f      	POP  R20
007ffb 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
007ffc 2311      	TST  R17
007ffd f44a      	BRPL _0x280013
                +
007ffe eee5     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
007fff e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
008000 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
008001 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
008002 940e bbec 	CALL SUBOPT_0x3
008004 efef      	LDI  R30,LOW(65535)
008005 efff      	LDI  R31,HIGH(65535)
008006 c16d      	RJMP _0x20E0045
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
008007 940e cbc1 	CALL SUBOPT_0x280
008009 940e cb95 	CALL SUBOPT_0x27A
00800b 940e c225 	CALL SUBOPT_0xF4
00800d 940e cb99 	CALL SUBOPT_0x27B
00800f 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
008011 f44a      	BRPL _0x280014
                +
008012 e0ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
008013 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
008014 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
008015 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
008016 940e bbec 	CALL SUBOPT_0x3
008018 efef      	LDI  R30,LOW(65535)
008019 efff      	LDI  R31,HIGH(65535)
00801a c159      	RJMP _0x20E0045
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
00801b 940e cbc1 	CALL SUBOPT_0x280
00801d 940e cba2 	CALL SUBOPT_0x27D
00801f 8dea      	LDD  R30,Y+26
008020 8dfb      	LDD  R31,Y+26+1
008021 93fa      	ST   -Y,R31
008022 93ea      	ST   -Y,R30
008023 940e bf0b 	CALL SUBOPT_0x73
008025 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
008027 f44a      	BRPL _0x280015
                +
008028 e3ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
008029 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
00802a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
00802b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
00802c 940e bbec 	CALL SUBOPT_0x3
00802e efef      	LDI  R30,LOW(65535)
00802f efff      	LDI  R31,HIGH(65535)
008030 c143      	RJMP _0x20E0045
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
008031 940e cbc1 	CALL SUBOPT_0x280
008033 940e cbab 	CALL SUBOPT_0x27E
008035 940e c978 	CALL SUBOPT_0x224
008037 940e cb99 	CALL SUBOPT_0x27B
008039 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
00803b f44a      	BRPL _0x280016
                +
00803c e6eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
00803d e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
00803e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
00803f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
008040 940e bbec 	CALL SUBOPT_0x3
008042 efef      	LDI  R30,LOW(65535)
008043 efff      	LDI  R31,HIGH(65535)
008044 c12f      	RJMP _0x20E0045
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
008045 c124      	RJMP _0x20E0046
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
008046 93aa      	ST   -Y,R26
008047 9728      	SBIW R28,8
008048 940e da9b 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
00804a 940e cbfd 	CALL SUBOPT_0x288
00804c 940e cb7f 	CALL SUBOPT_0x276
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
00804e f44a      	BRPL _0x280017
                +
00804f e9e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
008050 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
008051 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
008052 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
008053 940e bbec 	CALL SUBOPT_0x3
008055 efef      	LDI  R30,LOW(65535)
008056 efff      	LDI  R31,HIGH(65535)
008057 c076      	RJMP _0x20E0047
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
008058 e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
008059 940e cc02 	CALL SUBOPT_0x289
00805b 940e cb8c 	CALL SUBOPT_0x278
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
00805d 940e cbfd 	CALL SUBOPT_0x288
00805f 940e cb90 	CALL SUBOPT_0x279
008061 b7ed      	IN   R30,SPL
008062 b7fe      	IN   R31,SPH
008063 9731      	SBIW R30,1
008064 93fa      	ST   -Y,R31
008065 93ea      	ST   -Y,R30
008066 934f      	PUSH R20
008067 933f      	PUSH R19
008068 940e bf12 	CALL SUBOPT_0x75
00806a dca1      	RCALL _SD_writeData
00806b 913f      	POP  R19
00806c 914f      	POP  R20
00806d 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
00806e 2311      	TST  R17
00806f f44a      	BRPL _0x280018
                +
008070 ece5     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
008071 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
008072 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
008073 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
008074 940e bbec 	CALL SUBOPT_0x3
008076 efef      	LDI  R30,LOW(65535)
008077 efff      	LDI  R31,HIGH(65535)
008078 c055      	RJMP _0x20E0047
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
008079 940e cbfd 	CALL SUBOPT_0x288
00807b 940e cb95 	CALL SUBOPT_0x27A
00807d 940e da29 	CALL __PUTPARD1
00807f 01fe      	MOVW R30,R28
008080 9674      	ADIW R30,20
008081 940e cb99 	CALL SUBOPT_0x27B
008083 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
008085 f44a      	BRPL _0x280019
                +
008086 efe3     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
008087 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
008088 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
008089 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
00808a 940e bbec 	CALL SUBOPT_0x3
00808c efef      	LDI  R30,LOW(65535)
00808d efff      	LDI  R31,HIGH(65535)
00808e c03f      	RJMP _0x20E0047
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
00808f 940e cbfd 	CALL SUBOPT_0x288
008091 940e cba2 	CALL SUBOPT_0x27D
008093 01fe      	MOVW R30,R28
008094 9673      	ADIW R30,19
008095 940e cc08 	CALL SUBOPT_0x28A
008097 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
008099 f44a      	BRPL _0x28001A
                +
00809a e2e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
00809b e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
00809c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
00809d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
00809e 940e bbec 	CALL SUBOPT_0x3
0080a0 efef      	LDI  R30,LOW(65535)
0080a1 efff      	LDI  R31,HIGH(65535)
0080a2 c02b      	RJMP _0x20E0047
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
0080a3 940e cbfd 	CALL SUBOPT_0x288
0080a5 940e cc0c 	CALL SUBOPT_0x28B
0080a7 940e da29 	CALL __PUTPARD1
0080a9 940e bec3 	CALL SUBOPT_0x6C
0080ab 940e bf12 	CALL SUBOPT_0x75
0080ad 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
0080af f44a      	BRPL _0x28001B
                +
0080b0 e5e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
0080b1 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
0080b2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
0080b3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
0080b4 940e bbec 	CALL SUBOPT_0x3
0080b6 efef      	LDI  R30,LOW(65535)
0080b7 efff      	LDI  R31,HIGH(65535)
0080b8 c015      	RJMP _0x20E0047
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
0080b9 940e cbfd 	CALL SUBOPT_0x288
0080bb 940e cbb2 	CALL SUBOPT_0x27F
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
0080bd f45a      	BRPL _0x28001C
                +
0080be e8e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
0080bf e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
0080c0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
0080c1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
0080c2 940e bfa1 	CALL SUBOPT_0x8D
0080c4 940e c5c5 	CALL SUBOPT_0x18C
0080c6 efef      	LDI  R30,LOW(65535)
0080c7 efff      	LDI  R31,HIGH(65535)
0080c8 c005      	RJMP _0x20E0047
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
0080c9 e0e0      	LDI  R30,LOW(0)
0080ca 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
0080cc 85e8      	LDD  R30,Y+8
0080cd 85f9      	LDD  R31,Y+8+1
                 _0x20E0047:
0080ce 940e daa2 	CALL __LOADLOCR4
0080d0 9664      	ADIW R28,20
0080d1 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
0080d2 940e c1f5 	CALL SUBOPT_0xEA
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0080d4 940e cbc1 	CALL SUBOPT_0x280
0080d6 940e cbc6 	CALL SUBOPT_0x281
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
0080d8 f44a      	BRPL _0x28001D
                +
0080d9 ebe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
0080da e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
0080db e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
0080dc e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
0080dd 940e bbec 	CALL SUBOPT_0x3
0080df efef      	LDI  R30,LOW(65535)
0080e0 efff      	LDI  R31,HIGH(65535)
0080e1 c092      	RJMP _0x20E0045
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
0080e2 940e cbc1 	CALL SUBOPT_0x280
0080e4 940e cbcd 	CALL SUBOPT_0x282
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
0080e6 f44a      	BRPL _0x28001E
                +
0080e7 eee1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
0080e8 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
0080e9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
0080ea e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
0080eb 940e bbec 	CALL SUBOPT_0x3
0080ed efef      	LDI  R30,LOW(65535)
0080ee efff      	LDI  R31,HIGH(65535)
0080ef c084      	RJMP _0x20E0045
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
0080f0 940e cbd4 	CALL SUBOPT_0x283
0080f2 940e cbda 	CALL SUBOPT_0x284
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
0080f4 940e cbe0 	CALL SUBOPT_0x285
0080f6 f0b8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
0080f7 e0ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
0080f8 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
0080f9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
0080fa e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
0080fb 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0080fd 940e cc13 	CALL SUBOPT_0x28C
                 ; 0014 00A9         if(res < 0)
0080ff f442      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
008100 ebe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
008101 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
008102 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
008103 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
008104 940e beb9 	CALL SUBOPT_0x6A
008106 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
008108 e0e1      	LDI  R30,LOW(1)
008109 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
00810b e0e0      	LDI  R30,LOW(0)
00810c e0f0      	LDI  R31,HIGH(0)
00810d c066      	RJMP _0x20E0045
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
00810e 940e cc02 	CALL SUBOPT_0x289
008110 940e cb8c 	CALL SUBOPT_0x278
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
008112 940e cbc1 	CALL SUBOPT_0x280
008114 940e cb90 	CALL SUBOPT_0x279
008116 b7ed      	IN   R30,SPL
008117 b7fe      	IN   R31,SPH
008118 9731      	SBIW R30,1
008119 93fa      	ST   -Y,R31
00811a 93ea      	ST   -Y,R30
00811b 934f      	PUSH R20
00811c 933f      	PUSH R19
00811d 940e bf12 	CALL SUBOPT_0x75
00811f dc43      	RCALL _SD_readData
008120 913f      	POP  R19
008121 914f      	POP  R20
008122 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
008123 2311      	TST  R17
008124 f44a      	BRPL _0x280021
                +
008125 e2ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
008126 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
008127 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
008128 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
008129 940e bbec 	CALL SUBOPT_0x3
00812b efef      	LDI  R30,LOW(65535)
00812c efff      	LDI  R31,HIGH(65535)
00812d c046      	RJMP _0x20E0045
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
00812e 940e cbc1 	CALL SUBOPT_0x280
008130 940e cb95 	CALL SUBOPT_0x27A
008132 940e c225 	CALL SUBOPT_0xF4
008134 940e cb99 	CALL SUBOPT_0x27B
008136 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
008138 f44a      	BRPL _0x280022
                +
008139 e5e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
00813a e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
00813b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
00813c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
00813d 940e bbec 	CALL SUBOPT_0x3
00813f efef      	LDI  R30,LOW(65535)
008140 efff      	LDI  R31,HIGH(65535)
008141 c032      	RJMP _0x20E0045
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
008142 940e cbc1 	CALL SUBOPT_0x280
008144 940e cba2 	CALL SUBOPT_0x27D
008146 8dea      	LDD  R30,Y+26
008147 8dfb      	LDD  R31,Y+26+1
008148 940e cc08 	CALL SUBOPT_0x28A
00814a 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
00814c f44a      	BRPL _0x280023
                +
00814d e8e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
00814e e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
00814f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
008150 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
008151 940e bbec 	CALL SUBOPT_0x3
008153 efef      	LDI  R30,LOW(65535)
008154 efff      	LDI  R31,HIGH(65535)
008155 c01e      	RJMP _0x20E0045
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
008156 940e cbc1 	CALL SUBOPT_0x280
008158 940e cc0c 	CALL SUBOPT_0x28B
00815a 940e c978 	CALL SUBOPT_0x224
00815c 940e cc08 	CALL SUBOPT_0x28A
00815e 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
008160 f44a      	BRPL _0x280024
                +
008161 ebe0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
008162 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
008163 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
008164 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
008165 940e bbec 	CALL SUBOPT_0x3
008167 efef      	LDI  R30,LOW(65535)
008168 efff      	LDI  R31,HIGH(65535)
008169 c00a      	RJMP _0x20E0045
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E0046:
                +
00816a 85e8     +LDD R30 , Y + 8
00816b 85f9     +LDD R31 , Y + 8 + 1
00816c 856a     +LDD R22 , Y + 8 + 2
00816d 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00816e 89a8      	LDD  R26,Y+16
00816f 89b9      	LDD  R27,Y+16+1
008170 940e d9ff 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
008172 e0e1      	LDI  R30,LOW(1)
008173 e0f0      	LDI  R31,HIGH(1)
                 _0x20E0045:
008174 940e daa2 	CALL __LOADLOCR4
008176 966a      	ADIW R28,26
008177 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
008178 940e bf59 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
00817a 940e cc24 	CALL SUBOPT_0x28D
00817c 940e cc29 	CALL SUBOPT_0x28E
00817e 940e c5ee 	CALL SUBOPT_0x195
008180 940e bf18 	CALL SUBOPT_0x77
008182 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 00CE     if(res < 0)
008184 f44a      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
008185 eded     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
008186 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
008187 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
008188 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
008189 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 00D1         return -1;
00818b efef      	LDI  R30,LOW(65535)
00818c efff      	LDI  R31,HIGH(65535)
00818d c048      	RJMP _0x20E0043
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
00818e e0e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
00818f e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
008190 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
008191 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
008192 c03b      	RJMP _0x20E0044
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
008193 940e c82b 	CALL SUBOPT_0x1F6
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
008195 e2e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
008196 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
008197 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
008198 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
008199 940e c827 	CALL SUBOPT_0x1F5
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
00819b 940e c81e 	CALL SUBOPT_0x1F3
00819d 940e bf18 	CALL SUBOPT_0x77
00819f 940e c4c4 	CALL SUBOPT_0x165
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
0081a1 940e cc29 	CALL SUBOPT_0x28E
0081a3 01fe      	MOVW R30,R28
0081a4 9638      	ADIW R30,8
0081a5 940e cb99 	CALL SUBOPT_0x27B
0081a7 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 00E1     if(res < 0)
0081a9 f44a      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
0081aa e4e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
0081ab e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
0081ac e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
0081ad e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
0081ae 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 00E4         return -1;
0081b0 efef      	LDI  R30,LOW(65535)
0081b1 efff      	LDI  R31,HIGH(65535)
0081b2 c049      	RJMP _0x20E0041
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
0081b3 c046      	RJMP _0x20E0042
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
0081b4 940e bf59 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
0081b6 940e cc24 	CALL SUBOPT_0x28D
0081b8 940e cc30 	CALL SUBOPT_0x28F
0081ba 940e c5ee 	CALL SUBOPT_0x195
0081bc 940e bf18 	CALL SUBOPT_0x77
0081be 940e cbf8 	CALL SUBOPT_0x287
                 ; 0014 00EF     if(res < 0)
0081c0 f44a      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
0081c1 e7e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
0081c2 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
0081c3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
0081c4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
0081c5 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 00F2         return -1;
0081c7 efef      	LDI  R30,LOW(65535)
0081c8 efff      	LDI  R31,HIGH(65535)
0081c9 c00c      	RJMP _0x20E0043
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
0081ca e9ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
0081cb e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
0081cc e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
0081cd e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
                 _0x20E0044:
0081ce 940e da29 	CALL __PUTPARD1
0081d0 81ae      	LDD  R26,Y+6
0081d1 81bf      	LDD  R27,Y+6+1
0081d2 940e c373 	CALL SUBOPT_0x12E
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
0081d4 e0e0      	LDI  R30,LOW(0)
0081d5 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0043:
0081d6 8119      	LDD  R17,Y+1
0081d7 8108      	LDD  R16,Y+0
0081d8 9626      	ADIW R28,6
0081d9 9508      	RET
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
0081da 940e c82b 	CALL SUBOPT_0x1F6
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
0081dc ebe8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
0081dd e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
0081de e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
0081df e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
0081e0 940e c827 	CALL SUBOPT_0x1F5
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
0081e2 940e c81e 	CALL SUBOPT_0x1F3
0081e4 940e bf18 	CALL SUBOPT_0x77
0081e6 940e c4c4 	CALL SUBOPT_0x165
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
0081e8 940e cc30 	CALL SUBOPT_0x28F
0081ea 01fe      	MOVW R30,R28
0081eb 9638      	ADIW R30,8
0081ec 940e cb99 	CALL SUBOPT_0x27B
0081ee 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 0102     if(res < 0)
0081f0 f44a      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
0081f1 ede8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
0081f2 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
0081f3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
0081f4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
0081f5 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 0105         return -1;
0081f7 efef      	LDI  R30,LOW(65535)
0081f8 efff      	LDI  R31,HIGH(65535)
0081f9 c002      	RJMP _0x20E0041
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
                 _0x20E0042:
0081fa e0e0      	LDI  R30,LOW(0)
0081fb e0f0      	LDI  R31,HIGH(0)
                 _0x20E0041:
0081fc 8119      	LDD  R17,Y+1
0081fd 8108      	LDD  R16,Y+0
0081fe 9628      	ADIW R28,8
0081ff 9508      	RET
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
008200 940e c7ab 	CALL SUBOPT_0x1DC
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
008202 81ec      	LDD  R30,Y+4
008203 81fd      	LDD  R31,Y+4+1
008204 940e be50 	CALL SUBOPT_0x59
008206 940e cb69 	CALL SUBOPT_0x272
                +
008208 5fe0     +SUBI R30 , LOW ( - 16 )
008209 4fff     +SBCI R31 , HIGH ( - 16 )
00820a 4f6f     +SBCI R22 , BYTE3 ( - 16 )
00820b 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
00820c 940e c18a 	CALL SUBOPT_0xD9
                 ; 0014 0115 
                 ; 0014 0116     return address;
00820e 940e bf7f 	CALL SUBOPT_0x87
008210 962a      	ADIW R28,10
008211 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
008212 93ba      	ST   -Y,R27
008213 93aa      	ST   -Y,R26
008214 97a0      	SBIW R28,32
008215 50d2      	SUBI R29,2
008216 931a      	ST   -Y,R17
008217 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
008218 01fe     +MOVW R30 , R28
008219 5de9     +SUBI R30 , LOW ( - 551 )
00821a 4ffd     +SBCI R31 , HIGH ( - 551 )
00821b 9001     +LD R0 , Z +
00821c 81f0     +LD R31 , Z
00821d 2de0     +MOV R30 , R0
                 	__GETW1SX 551
00821e 93fa      	ST   -Y,R31
00821f 93ea      	ST   -Y,R30
                +
008220 01de     +MOVW R26 , R28
008221 5da8     +SUBI R26 , LOW ( - 552 )
008222 4fbd     +SBCI R27 , HIGH ( - 552 )
008223 91ac     +LD R26 , X
                 	__GETB2SX 552
008224 dbdf      	RCALL _SD_createFile
008225 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
008226 2311      	TST  R17
008227 f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
008228 e0e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
008229 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
00822a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
00822b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
00822c 940e cc37 	CALL SUBOPT_0x290
00822e 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 0121         return -1;
008230 efef      	LDI  R30,LOW(65535)
008231 efff      	LDI  R31,HIGH(65535)
008232 c075      	RJMP _0x20E003F
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
008233 2e00      	MOV  R0,R16
008234 2a01      	OR   R0,R17
008235 f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
008236 e2ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
008237 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
008238 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
008239 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
00823a 940e cc37 	CALL SUBOPT_0x290
00823c 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 0126         return 0;
00823e e0e0      	LDI  R30,LOW(0)
00823f e0f0      	LDI  R31,HIGH(0)
008240 c067      	RJMP _0x20E003F
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
008241 e5e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
008242 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
008243 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
008244 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
008245 940e cc37 	CALL SUBOPT_0x290
008247 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
008249 01fe     +MOVW R30 , R28
00824a 5dee     +SUBI R30 , LOW ( - 546 )
00824b 4ffd     +SBCI R31 , HIGH ( - 546 )
00824c 9001     +LD R0 , Z +
00824d 81f0     +LD R31 , Z
00824e 2de0     +MOV R30 , R0
                 	__GETW1SX 546
00824f 9730      	SBIW R30,0
008250 f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
008251 e6ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
008252 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
008253 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
008254 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
008255 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 012E             return 1;
008257 c04e      	RJMP _0x20E0040
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
008258 940e c81e 	CALL SUBOPT_0x1F3
                +
00825a 01de     +MOVW R26 , R28
00825b 5da7     +SUBI R26 , LOW ( - 553 )
00825c 4fbd     +SBCI R27 , HIGH ( - 553 )
00825d 900d     +LD R0 , X +
00825e 91bc     +LD R27 , X
00825f 2da0     +MOV R26 , R0
                 	__GETW2SX 553
008260 dc01      	RCALL _SD_openFile
008261 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
008262 2311      	TST  R17
008263 f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
008264 e9ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
008265 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
008266 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
008267 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
008268 940e cc37 	CALL SUBOPT_0x290
00826a 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 0136             return -1;
00826c efef      	LDI  R30,LOW(65535)
00826d efff      	LDI  R31,HIGH(65535)
00826e c039      	RJMP _0x20E003F
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
00826f ece9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
008270 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
008271 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
008272 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
008273 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 013B             print_payload(initString,len);
008275 940e cc41 	CALL SUBOPT_0x291
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
008277 940e c81e 	CALL SUBOPT_0x1F3
008279 940e cc29 	CALL SUBOPT_0x28E
                +
00827b 01fe     +MOVW R30 , R28
00827c 5de6     +SUBI R30 , LOW ( - 554 )
00827d 4ffd     +SBCI R31 , HIGH ( - 554 )
00827e 9001     +LD R0 , Z +
00827f 81f0     +LD R31 , Z
008280 2de0     +MOV R30 , R0
                 	__GETW1SX 554
008281 93fa      	ST   -Y,R31
008282 93ea      	ST   -Y,R30
                +
008283 01de     +MOVW R26 , R28
008284 5da6     +SUBI R26 , LOW ( - 554 )
008285 4fbd     +SBCI R27 , HIGH ( - 554 )
008286 900d     +LD R0 , X +
008287 91bc     +LD R27 , X
008288 2da0     +MOV R26 , R0
                 	__GETW2SX 554
008289 940e cb9d 	CALL SUBOPT_0x27C
                 ; 0014 013D             if(res < 0)
00828b f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
00828c efe1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
00828d e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
00828e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
00828f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
008290 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 0140                 print_payload(initString,len);
008292 940e cc41 	CALL SUBOPT_0x291
                 ; 0014 0141                 return -1;
008294 efef      	LDI  R30,LOW(65535)
008295 efff      	LDI  R31,HIGH(65535)
008296 c011      	RJMP _0x20E003F
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
008297 01de      	MOVW R26,R28
008298 9612      	ADIW R26,2
008299 dc07      	RCALL _SD_closeFile
00829a 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
00829b 2311      	TST  R17
00829c f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
00829d e2e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
00829e e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
00829f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
0082a0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
0082a1 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 0148                 return -1;
0082a3 efef      	LDI  R30,LOW(65535)
0082a4 efff      	LDI  R31,HIGH(65535)
0082a5 c002      	RJMP _0x20E003F
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E0040:
0082a6 e0e1      	LDI  R30,LOW(1)
0082a7 e0f0      	LDI  R31,HIGH(1)
                 _0x20E003F:
0082a8 8119      	LDD  R17,Y+1
0082a9 8108      	LDD  R16,Y+0
0082aa 96a9      	ADIW R28,41
0082ab 5fde      	SUBI R29,-2
0082ac 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
0082ad 940e da9b 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
0082af e020     +LDI R18 , LOW ( 0 )
0082b0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0082b1 e4ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
0082b2 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
0082b3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
0082b4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
0082b5 940e bbec 	CALL SUBOPT_0x3
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
0082b7 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
0082b8 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
0082b9 940e c238 	CALL SUBOPT_0xF8
0082bb 940e cc51 	CALL SUBOPT_0x292
                 ; 0014 0159     if(res < 0)
0082bd f442      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
0082be 940e cc5c 	CALL SUBOPT_0x293
0082c0 940e be72 	CALL SUBOPT_0x5F
0082c2 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 015C         ret = ret-1;
                +
0082c4 5021     +SUBI R18 , LOW ( 1 )
0082c5 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
0082c6 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0082c7 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0082c8 940e c238 	CALL SUBOPT_0xF8
0082ca 940e cc51 	CALL SUBOPT_0x292
                 ; 0014 0160     if(res < 0)
0082cc f442      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
0082cd 940e cc5c 	CALL SUBOPT_0x293
0082cf 940e beb9 	CALL SUBOPT_0x6A
0082d1 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 0163         ret = ret-1;
                +
0082d3 5021     +SUBI R18 , LOW ( 1 )
0082d4 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
0082d5 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
0082d6 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
0082d7 940e c238 	CALL SUBOPT_0xF8
0082d9 940e c5f8 	CALL SUBOPT_0x197
0082db df36      	RCALL _LOG_createFile
0082dc 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
0082dd 2311      	TST  R17
0082de f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
0082df 940e cc5c 	CALL SUBOPT_0x293
0082e1 940e cc61 	CALL SUBOPT_0x294
0082e3 940e bc5e 	CALL SUBOPT_0x12
                 ; 0014 016A         ret = ret-1;
                +
0082e5 5021     +SUBI R18 , LOW ( 1 )
0082e6 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
0082e7 01f9      	MOVW R30,R18
0082e8 940e daa2 	CALL __LOADLOCR4
0082ea 9624      	ADIW R28,4
0082eb 9508      	RET
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
0082ec 940e c82b 	CALL SUBOPT_0x1F6
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
0082ee d0b1      	RCALL _findFreeSlotDataLogQueue
0082ef 2f0e      	MOV  R16,R30
0082f0 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
0082f1 2311      	TST  R17
0082f2 f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
0082f3 e9e4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
0082f4 e5f9     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
0082f5 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
0082f6 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
0082f7 940e bbec 	CALL SUBOPT_0x3
                 ; 0015 0017         return -1;
0082f9 efef      	LDI  R30,LOW(65535)
0082fa efff      	LDI  R31,HIGH(65535)
0082fb c038      	RJMP _0x20E003E
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
0082fc 940e c500 	CALL SUBOPT_0x170
0082fe 55e0      	SUBI R30,LOW(-_dataLogQueue)
0082ff 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
008300 85ac      	LDD  R26,Y+12
008301 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
008302 940e c500 	CALL SUBOPT_0x170
                +
008304 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
008305 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
008306 940e c18f 	CALL SUBOPT_0xDB
008308 940e ca04 	CALL SUBOPT_0x23B
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
00830a 940e c500 	CALL SUBOPT_0x170
                +
00830c 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00830d 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00830e 81ae      	LDD  R26,Y+6
00830f 81bf      	LDD  R27,Y+6+1
008310 83a0      	STD  Z+0,R26
008311 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
008312 940e c500 	CALL SUBOPT_0x170
                +
008314 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
008315 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
008316 940e c0ae 	CALL SUBOPT_0xB6
008318 940e ca04 	CALL SUBOPT_0x23B
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
00831a 91e0 1a1e 	LDS  R30,_dataLogQCount
00831c 5fef      	SUBI R30,-LOW(1)
00831d 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
00831f ecea     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
008320 e5f9     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
008321 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
008322 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
008323 940e da29 	CALL __PUTPARD1
008325 89e8      	LDD  R30,Y+16
008326 940e be99 	CALL SUBOPT_0x65
008328 01f8      	MOVW R30,R16
008329 940e cb26 	CALL SUBOPT_0x268
00832b 91e0 1a1e 	LDS  R30,_dataLogQCount
00832d 940e be99 	CALL SUBOPT_0x65
00832f 940e be9f 	CALL SUBOPT_0x66
                 ; 0015 0021     return dataLogQCount;
008331 91e0 1a1e 	LDS  R30,_dataLogQCount
008333 e0f0      	LDI  R31,0
                 _0x20E003E:
008334 8119      	LDD  R17,Y+1
008335 8108      	LDD  R16,Y+0
008336 962d      	ADIW R28,13
008337 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
008338 940e bf59 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
00833a 91e0 1a1e 	LDS  R30,_dataLogQCount
00833c 30e0      	CPI  R30,0
00833d f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
00833e e2e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
00833f e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
008340 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
008341 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
008342 940e bbec 	CALL SUBOPT_0x3
                 ; 0015 002A         return -1;
008344 c0f5      	RJMP _0x20E003C
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
008345 e000     +LDI R16 , LOW ( 0 )
008346 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
008347 300a     +CPI R16 , LOW ( 10 )
008348 e0e0     +LDI R30 , HIGH ( 10 )
008349 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
00834a f54c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
00834b 940e c500 	CALL SUBOPT_0x170
00834d 55e0      	SUBI R30,LOW(-_dataLogQueue)
00834e 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00834f 81e0      	LD   R30,Z
008350 85a8      	LDD  R26,Y+8
008351 17ea      	CP   R30,R26
008352 f4f1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
008353 940e c500 	CALL SUBOPT_0x170
                +
008355 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
008356 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
008357 940e cc67 	CALL SUBOPT_0x295
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
008359 940e c500 	CALL SUBOPT_0x170
                +
00835b 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00835c 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00835d 01df      	MOVW R26,R30
00835e 940e d9f0 	CALL __GETW1P
008360 81ac      	LDD  R26,Y+4
008361 81bd      	LDD  R27,Y+4+1
008362 93ed      	ST   X+,R30
008363 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
008364 940e c500 	CALL SUBOPT_0x170
                +
008366 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
008367 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
008368 01df      	MOVW R26,R30
008369 940e d9f4 	CALL __GETD1P
00836b 81aa      	LDD  R26,Y+2
00836c 81bb      	LDD  R27,Y+2+1
00836d 940e d9ff 	CALL __PUTDP1
                 ; 0015 0034 
                 ; 0015 0035             return i;
00836f 01f8      	MOVW R30,R16
008370 c0cb      	RJMP _0x20E003B
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
008371 5f0f     +SUBI R16 , LOW ( - 1 )
008372 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008373 cfd3      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
008374 e5e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
008375 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
008376 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
008377 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
008378 c0bc      	RJMP _0x20E003D
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
008379 93aa      	ST   -Y,R26
00837a 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
00837b e010      	LDI  R17,LOW(0)
                 _0x2A000A:
00837c 301a      	CPI  R17,10
00837d f4e8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
00837e 940e cc6f 	CALL SUBOPT_0x296
008380 81e0      	LD   R30,Z
008381 81a9      	LDD  R26,Y+1
008382 17ea      	CP   R30,R26
008383 f4a9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
008384 940e cc6f 	CALL SUBOPT_0x296
008386 940e cc75 	CALL SUBOPT_0x297
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
008388 91e0 1a1e 	LDS  R30,_dataLogQCount
00838a 50e1      	SUBI R30,LOW(1)
00838b 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
00838d e9e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
00838e e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
00838f e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
008390 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
008391 940e c86d 	CALL SUBOPT_0x1FD
008393 940e c872 	CALL SUBOPT_0x1FE
                 ; 0015 004B             return dataLogQCount;
008395 91e0 1a1e 	LDS  R30,_dataLogQCount
008397 e0f0      	LDI  R31,0
008398 c0da      	RJMP _0x20E0039
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
008399 5f1f      	SUBI R17,-1
00839a cfe1      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
00839b eeeb     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
00839c e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
00839d e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
00839e e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
00839f c0cc      	RJMP _0x20E003A
                 ; 0015 004F     return -1;
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
0083a0 931a      	ST   -Y,R17
                 ;	i -> R17
0083a1 e010      	LDI  R17,LOW(0)
                 _0x2A000E:
0083a2 301a      	CPI  R17,10
0083a3 f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
0083a4 940e cc6f 	CALL SUBOPT_0x296
0083a6 81e0      	LD   R30,Z
0083a7 30e0      	CPI  R30,0
0083a8 f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
0083a9 2fe1      	MOV  R30,R17
0083aa c0ea      	RJMP _0x20E0038
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
0083ab 5f1f      	SUBI R17,-1
0083ac cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
0083ad efef      	LDI  R30,LOW(255)
0083ae c0e6      	RJMP _0x20E0038
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
0083af 931a      	ST   -Y,R17
                 ;	i -> R17
0083b0 e010      	LDI  R17,LOW(0)
                 _0x2A0012:
0083b1 301a      	CPI  R17,10
0083b2 f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
0083b3 940e cc6f 	CALL SUBOPT_0x296
0083b5 940e cc75 	CALL SUBOPT_0x297
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
0083b7 5f1f      	SUBI R17,-1
0083b8 cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
0083b9 c0db      	RJMP _0x20E0038
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
0083ba 93aa      	ST   -Y,R26
0083bb 931a      	ST   -Y,R17
0083bc 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
0083bd d0b8      	RCALL _findFreeSlotEventLogQueue
0083be 2f0e      	MOV  R16,R30
0083bf 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
0083c0 2311      	TST  R17
0083c1 f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
0083c2 e2ed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
0083c3 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
0083c4 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
0083c5 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
0083c6 940e bbec 	CALL SUBOPT_0x3
                 ; 0015 0076         return -1;
0083c8 c071      	RJMP _0x20E003C
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
0083c9 940e cc90 	CALL SUBOPT_0x298
0083cb 5ded      	SUBI R30,LOW(-_eventLogQueue)
0083cc 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0083cd 85a8      	LDD  R26,Y+8
0083ce 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
0083cf 940e cc90 	CALL SUBOPT_0x298
                +
0083d1 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
0083d2 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
0083d3 940e c075 	CALL SUBOPT_0xAB
0083d5 940e ca04 	CALL SUBOPT_0x23B
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
0083d7 940e cc90 	CALL SUBOPT_0x298
                +
0083d9 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
0083da 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
0083db 81ab      	LDD  R26,Y+3
0083dc 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
0083dd 940e cc90 	CALL SUBOPT_0x298
                +
0083df 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0083e0 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0083e1 81aa      	LDD  R26,Y+2
0083e2 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
0083e3 91e0 19af 	LDS  R30,_eventLogQCount
0083e5 5fef      	SUBI R30,-LOW(1)
0083e6 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
0083e8 e6e5     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
0083e9 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
0083ea e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
0083eb e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
0083ec 940e c835 	CALL SUBOPT_0x1F8
0083ee 01f8      	MOVW R30,R16
0083ef 940e cb26 	CALL SUBOPT_0x268
0083f1 91e0 19af 	LDS  R30,_eventLogQCount
0083f3 940e be99 	CALL SUBOPT_0x65
0083f5 940e be9f 	CALL SUBOPT_0x66
                 ; 0015 0080     return eventLogQCount;
0083f7 91e0 19af 	LDS  R30,_eventLogQCount
0083f9 e0f0      	LDI  R31,0
0083fa c041      	RJMP _0x20E003B
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
0083fb 940e bf59 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
0083fd 91e0 19af 	LDS  R30,_eventLogQCount
0083ff 30e0      	CPI  R30,0
008400 f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
008401 ece1     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
008402 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
008403 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
008404 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
008405 940e bbec 	CALL SUBOPT_0x3
                 ; 0015 0089         return -1;
008407 c032      	RJMP _0x20E003C
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
008408 e000     +LDI R16 , LOW ( 0 )
008409 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
00840a 3104     +CPI R16 , LOW ( 20 )
00840b e0e0     +LDI R30 , HIGH ( 20 )
00840c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00840d f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
00840e 940e cc90 	CALL SUBOPT_0x298
008410 5ded      	SUBI R30,LOW(-_eventLogQueue)
008411 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
008412 81e0      	LD   R30,Z
008413 85a8      	LDD  R26,Y+8
008414 17ea      	CP   R30,R26
008415 f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
008416 940e cc90 	CALL SUBOPT_0x298
                +
008418 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
008419 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00841a 940e cc67 	CALL SUBOPT_0x295
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
00841c 940e cc90 	CALL SUBOPT_0x298
                +
00841e 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00841f 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
008420 81e0      	LD   R30,Z
008421 81ac      	LDD  R26,Y+4
008422 81bd      	LDD  R27,Y+4+1
008423 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
008424 940e cc90 	CALL SUBOPT_0x298
                +
008426 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008427 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008428 81e0      	LD   R30,Z
008429 81aa      	LDD  R26,Y+2
00842a 81bb      	LDD  R27,Y+2+1
00842b 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
00842c 01f8      	MOVW R30,R16
00842d c00e      	RJMP _0x20E003B
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
00842e 5f0f     +SUBI R16 , LOW ( - 1 )
00842f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008430 cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
008431 efe3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
008432 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
008433 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
008434 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E003D:
008435 940e da29 	CALL __PUTPARD1
008437 85ec      	LDD  R30,Y+12
008438 940e bcfe 	CALL SUBOPT_0x29
                 ; 0015 0099     return -1;
                 _0x20E003C:
00843a efef      	LDI  R30,LOW(65535)
00843b efff      	LDI  R31,HIGH(65535)
                 _0x20E003B:
00843c 8119      	LDD  R17,Y+1
00843d 8108      	LDD  R16,Y+0
00843e 9629      	ADIW R28,9
00843f 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
008440 93aa      	ST   -Y,R26
008441 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
008442 e010      	LDI  R17,LOW(0)
                 _0x2A001B:
008443 3114      	CPI  R17,20
008444 f518      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
008445 940e cc96 	CALL SUBOPT_0x299
008447 81e0      	LD   R30,Z
008448 81a9      	LDD  R26,Y+1
008449 17ea      	CP   R30,R26
00844a f4d9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
00844b 940e cc96 	CALL SUBOPT_0x299
00844d 940e cc9c 	CALL SUBOPT_0x29A
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
00844f 940e cca2 	CALL SUBOPT_0x29B
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
008451 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008452 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008453 e0a0      	LDI  R26,LOW(0)
008454 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
008455 91e0 19af 	LDS  R30,_eventLogQCount
008457 50e1      	SUBI R30,LOW(1)
008458 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
00845a e3e5     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
00845b e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
00845c e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
00845d e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
00845e 940e c86d 	CALL SUBOPT_0x1FD
008460 940e c872 	CALL SUBOPT_0x1FE
                 ; 0015 00AA             return eventLogQCount;
008462 91e0 19af 	LDS  R30,_eventLogQCount
008464 e0f0      	LDI  R31,0
008465 c00d      	RJMP _0x20E0039
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
008466 5f1f      	SUBI R17,-1
008467 cfdb      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
008468 e8ea     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
008469 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
00846a e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
00846b e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
                 _0x20E003A:
00846c 940e da29 	CALL __PUTPARD1
00846e 81ed      	LDD  R30,Y+5
00846f 940e bcfe 	CALL SUBOPT_0x29
                 ; 0015 00AE     return -1;
008471 efef      	LDI  R30,LOW(65535)
008472 efff      	LDI  R31,HIGH(65535)
                 _0x20E0039:
008473 8118      	LDD  R17,Y+0
008474 9622      	ADIW R28,2
008475 9508      	RET
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
008476 931a      	ST   -Y,R17
                 ;	i -> R17
008477 e010      	LDI  R17,LOW(0)
                 _0x2A001F:
008478 3114      	CPI  R17,20
008479 f448      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
00847a 940e cc96 	CALL SUBOPT_0x299
00847c 81e0      	LD   R30,Z
00847d 30e0      	CPI  R30,0
00847e f411      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
00847f 2fe1      	MOV  R30,R17
008480 c014      	RJMP _0x20E0038
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
008481 5f1f      	SUBI R17,-1
008482 cff5      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
008483 efef      	LDI  R30,LOW(255)
008484 c010      	RJMP _0x20E0038
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
008485 931a      	ST   -Y,R17
                 ;	i -> R17
008486 e010      	LDI  R17,LOW(0)
                 _0x2A0023:
008487 3114      	CPI  R17,20
008488 f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
008489 940e cc96 	CALL SUBOPT_0x299
00848b 940e cc9c 	CALL SUBOPT_0x29A
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
00848d 940e cca2 	CALL SUBOPT_0x29B
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
00848f 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008490 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008491 e0a0      	LDI  R26,LOW(0)
008492 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
008493 5f1f      	SUBI R17,-1
008494 cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
                 _0x20E0038:
008495 9119      	LD   R17,Y+
008496 9508      	RET
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 _MENU_processKey:
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
008497 93aa      	ST   -Y,R26
008498 97ef      	SBIW R28,63
008499 9761      	SBIW R28,17
00849a e48e      	LDI  R24,78
00849b e0a0      	LDI  R26,LOW(0)
00849c e0b0      	LDI  R27,HIGH(0)
00849d ecee      	LDI  R30,LOW(_0x2C0003*2)
00849e e5fc      	LDI  R31,HIGH(_0x2C0003*2)
00849f e060      	LDI  R22,BYTE3(_0x2C0003*2)
0084a0 940e daa7 	CALL __INITLOCB
0084a2 940e da99 	CALL __SAVELOCR6
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
0084a4 91e0 14df 	LDS  R30,_currentPage
0084a6 30e0      	CPI  R30,0
0084a7 f451      	BRNE _0x2C0004
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                +
0084a8 01de     +MOVW R26 , R28
0084a9 5aaa     +SUBI R26 , LOW ( - 86 )
0084aa 4fbf     +SBCI R27 , HIGH ( - 86 )
0084ab 91ac     +LD R26 , X
                 	__GETB2SX 86
0084ac 30a1      	CPI  R26,LOW(0x1)
0084ad f411      	BRNE _0x2C0005
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
0084ae 940e ccad 	CALL SUBOPT_0x29C
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 _0x2C0005:
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
0084b0 940c 9415 	JMP  _0x2C0006
                 _0x2C0004:
0084b2 91a0 14df 	LDS  R26,_currentPage
0084b4 30a1      	CPI  R26,LOW(0x1)
0084b5 f011      	BREQ PC+3
0084b6 940c 8512 	JMP _0x2C0007
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
0084b8 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
0084ba f409      	BRNE _0x2C000B
0084bb c04b      	RJMP _0x2C02B4
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000B:
0084bc 30e2      	CPI  R30,LOW(0x2)
0084bd e0a0      	LDI  R26,HIGH(0x2)
0084be 07fa      	CPC  R31,R26
0084bf f449      	BRNE _0x2C000C
0084c0 940e ccc5 	CALL SUBOPT_0x29E
0084c2 f41c      	BRGE _0x2C000D
0084c3 e0e3      	LDI  R30,LOW(3)
0084c4 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000D:
0084c6 940e cccc 	CALL SUBOPT_0x29F
0084c8 c047      	RJMP _0x2C000A
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000C:
0084c9 30e3      	CPI  R30,LOW(0x3)
0084ca e0a0      	LDI  R26,HIGH(0x3)
0084cb 07fa      	CPC  R31,R26
0084cc f451      	BRNE _0x2C000E
0084cd 940e ccd9 	CALL SUBOPT_0x2A0
0084cf 30a4      	CPI  R26,LOW(0x4)
0084d0 f01c      	BRLT _0x2C000F
0084d1 e0e0      	LDI  R30,LOW(0)
0084d2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000F:
0084d4 940e cccc 	CALL SUBOPT_0x29F
0084d6 c039      	RJMP _0x2C000A
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 _0x2C000E:
0084d7 30e4      	CPI  R30,LOW(0x4)
0084d8 e0a0      	LDI  R26,HIGH(0x4)
0084d9 07fa      	CPC  R31,R26
0084da f5a9      	BRNE _0x2C000A
0084db 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0084dd 30e0      	CPI  R30,0
0084de f419      	BRNE _0x2C0011
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
0084df 940e ccdf 	CALL SUBOPT_0x2A1
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
0084e1 c02e      	RJMP _0x2C0012
                 _0x2C0011:
0084e2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0084e4 30a1      	CPI  R26,LOW(0x1)
0084e5 f431      	BRNE _0x2C0013
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
0084e6 e0ee      	LDI  R30,LOW(14)
0084e7 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
0084e9 940e ccf8 	CALL SUBOPT_0x2A3
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
0084eb c024      	RJMP _0x2C0014
                 _0x2C0013:
0084ec 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0084ee 30a2      	CPI  R26,LOW(0x2)
0084ef f431      	BRNE _0x2C0015
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
0084f0 e1e1      	LDI  R30,LOW(17)
0084f1 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
0084f3 940e cd05 	CALL SUBOPT_0x2A4
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
0084f5 c01a      	RJMP _0x2C0016
                 _0x2C0015:
0084f6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0084f8 30a3      	CPI  R26,LOW(0x3)
0084f9 f469      	BRNE _0x2C0017
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
0084fa e2e2      	LDI  R30,LOW(34)
0084fb 940e cd12 	CALL SUBOPT_0x2A5
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
0084fd e0e1      	LDI  R30,LOW(1)
0084fe 940e cd18 	CALL SUBOPT_0x2A6
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
008500 940e cd22 	CALL SUBOPT_0x2A7
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                +
008502 e5e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 33 ) )
008503 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 33 ) )
008504 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 33 ) )
008505 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 33 ) )
                 	__POINTD1FN _0x2C0000,33
008506 c005      	RJMP _0x2C02B5
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 _0x2C0017:
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 _0x2C02B4:
008507 e0e0      	LDI  R30,LOW(0)
008508 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
00850a 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02B5:
00850c 940e da29 	CALL __PUTPARD1
00850e 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 0062                             }
                 _0x2C0016:
                 _0x2C0014:
                 _0x2C0012:
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 _0x2C000A:
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
008510 940c 9415 	JMP  _0x2C0019
                 _0x2C0007:
008512 91a0 14df 	LDS  R26,_currentPage
008514 30a2      	CPI  R26,LOW(0x2)
008515 f011      	BREQ PC+3
008516 940c 8561 	JMP _0x2C001A
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
008518 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
00851a f419      	BRNE _0x2C001E
00851b 940e ccad 	CALL SUBOPT_0x29C
00851d c041      	RJMP _0x2C001D
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001E:
00851e 30e2      	CPI  R30,LOW(0x2)
00851f e0a0      	LDI  R26,HIGH(0x2)
008520 07fa      	CPC  R31,R26
008521 f449      	BRNE _0x2C001F
008522 940e ccc5 	CALL SUBOPT_0x29E
008524 f41c      	BRGE _0x2C0020
008525 e0e1      	LDI  R30,LOW(1)
008526 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0020:
008528 940e cccc 	CALL SUBOPT_0x29F
00852a c034      	RJMP _0x2C001D
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001F:
00852b 30e3      	CPI  R30,LOW(0x3)
00852c e0a0      	LDI  R26,HIGH(0x3)
00852d 07fa      	CPC  R31,R26
00852e f451      	BRNE _0x2C0021
00852f 940e ccd9 	CALL SUBOPT_0x2A0
008531 30a2      	CPI  R26,LOW(0x2)
008532 f01c      	BRLT _0x2C0022
008533 e0e0      	LDI  R30,LOW(0)
008534 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0022:
008536 940e cccc 	CALL SUBOPT_0x29F
008538 c026      	RJMP _0x2C001D
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 _0x2C0021:
008539 30e4      	CPI  R30,LOW(0x4)
00853a e0a0      	LDI  R26,HIGH(0x4)
00853b 07fa      	CPC  R31,R26
00853c f511      	BRNE _0x2C001D
00853d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00853f 30e0      	CPI  R30,0
008540 f431      	BRNE _0x2C0024
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
008541 e0e3      	LDI  R30,LOW(3)
008542 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
008544 940e cd2d 	CALL SUBOPT_0x2A9
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
008546 c018      	RJMP _0x2C0025
                 _0x2C0024:
008547 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008549 30a1      	CPI  R26,LOW(0x1)
00854a f459      	BRNE _0x2C0026
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
00854b e2e1      	LDI  R30,LOW(33)
00854c 940e cd3a 	CALL SUBOPT_0x2AA
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
00854e e0e2      	LDI  R30,LOW(2)
00854f 940e cd18 	CALL SUBOPT_0x2A6
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
008551 940e cd22 	CALL SUBOPT_0x2A7
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
008553 940e cd40 	CALL SUBOPT_0x2AB
008555 c005      	RJMP _0x2C02B6
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 _0x2C0026:
                 ; 0016 007A                                 currentPage = P_MONITOR;
008556 e0e0      	LDI  R30,LOW(0)
008557 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
008559 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02B6:
00855b 940e da29 	CALL __PUTPARD1
00855d 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 007D                             }
                 _0x2C0025:
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 _0x2C001D:
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
00855f 940c 9415 	JMP  _0x2C0028
                 _0x2C001A:
008561 91a0 14df 	LDS  R26,_currentPage
008563 30a3      	CPI  R26,LOW(0x3)
008564 f011      	BREQ PC+3
008565 940c 873e 	JMP _0x2C0029
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
008567 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008569 f419      	BRNE _0x2C002D
00856a 940e ccdf 	CALL SUBOPT_0x2A1
00856c c1cf      	RJMP _0x2C002C
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002D:
00856d 30e2      	CPI  R30,LOW(0x2)
00856e e0a0      	LDI  R26,HIGH(0x2)
00856f 07fa      	CPC  R31,R26
008570 f449      	BRNE _0x2C002E
008571 940e ccc5 	CALL SUBOPT_0x29E
008573 f41c      	BRGE _0x2C002F
008574 e0e2      	LDI  R30,LOW(2)
008575 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C002F:
008577 940e cccc 	CALL SUBOPT_0x29F
008579 c1c2      	RJMP _0x2C002C
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002E:
00857a 30e3      	CPI  R30,LOW(0x3)
00857b e0a0      	LDI  R26,HIGH(0x3)
00857c 07fa      	CPC  R31,R26
00857d f451      	BRNE _0x2C0030
00857e 940e ccd9 	CALL SUBOPT_0x2A0
008580 30a3      	CPI  R26,LOW(0x3)
008581 f01c      	BRLT _0x2C0031
008582 e0e0      	LDI  R30,LOW(0)
008583 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0031:
008585 940e cccc 	CALL SUBOPT_0x29F
008587 c1b4      	RJMP _0x2C002C
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 _0x2C0030:
008588 30e4      	CPI  R30,LOW(0x4)
008589 e0a0      	LDI  R26,HIGH(0x4)
00858a 07fa      	CPC  R31,R26
00858b f011      	BREQ PC+3
00858c 940c 873c 	JMP _0x2C002C
00858e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008590 30e0      	CPI  R30,0
008591 f531      	BRNE _0x2C0033
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
008592 e0e4      	LDI  R30,LOW(4)
008593 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                +
008595 e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 45 ) )
008596 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 45 ) )
008597 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 45 ) )
008598 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 45 ) )
                 	__POINTD1FN _0x2C0000,45
008599 940e cd45 	CALL SUBOPT_0x2AC
                +
00859b eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
00859c e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
00859d 940e bd4a 	CALL SUBOPT_0x34
                +
00859f e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
0085a0 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
0085a1 940e bd4a 	CALL SUBOPT_0x34
0085a3 940e be9f 	CALL SUBOPT_0x66
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                +
0085a5 e6ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 63 ) )
0085a6 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 63 ) )
0085a7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 63 ) )
0085a8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 63 ) )
                 	__POINTD1FN _0x2C0000,63
0085a9 940e cd45 	CALL SUBOPT_0x2AC
                +
0085ab eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
0085ac e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
0085ad 940e bd4a 	CALL SUBOPT_0x34
                +
0085af e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
0085b0 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
0085b1 940e bd4a 	CALL SUBOPT_0x34
0085b3 e08c      	LDI  R24,12
0085b4 940e 7c8c 	CALL _printOLED
0085b6 9660      	ADIW R28,16
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
0085b7 c184      	RJMP _0x2C0034
                 _0x2C0033:
0085b8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0085ba 30a1      	CPI  R26,LOW(0x1)
0085bb f011      	BREQ PC+3
0085bc 940c 8662 	JMP _0x2C0035
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
0085be e0e5      	LDI  R30,LOW(5)
0085bf 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
0085c1 01fe      	MOVW R30,R28
0085c2 9638      	ADIW R30,8
0085c3 940e c238 	CALL SUBOPT_0xF8
0085c5 940e cd4b 	CALL SUBOPT_0x2AD
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
0085c7 940e cd5e 	CALL SUBOPT_0x2AE
0085c9 940e cd62 	CALL SUBOPT_0x2AF
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
0085cb 91a0 11b6 	LDS  R26,_operating_config
0085cd 31a0      	CPI  R26,LOW(0x10)
0085ce f439      	BRNE _0x2C0036
0085cf 940e cd66 	CALL SUBOPT_0x2B0
                +
0085d1 e7eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 75 ) )
0085d2 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 75 ) )
0085d3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 75 ) )
0085d4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 75 ) )
                 	__POINTD1FN _0x2C0000,75
0085d5 c011      	RJMP _0x2C02B7
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 _0x2C0036:
0085d6 91a0 11b6 	LDS  R26,_operating_config
0085d8 32a0      	CPI  R26,LOW(0x20)
0085d9 f439      	BRNE _0x2C0038
0085da 940e cd66 	CALL SUBOPT_0x2B0
                +
0085dc e8e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 85 ) )
0085dd e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 85 ) )
0085de e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 85 ) )
0085df e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 85 ) )
                 	__POINTD1FN _0x2C0000,85
0085e0 c006      	RJMP _0x2C02B7
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 _0x2C0038:
0085e1 940e cd66 	CALL SUBOPT_0x2B0
                +
0085e3 e9e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 97 ) )
0085e4 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 97 ) )
0085e5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 97 ) )
0085e6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 97 ) )
                 	__POINTD1FN _0x2C0000,97
                 _0x2C02B7:
0085e7 940e da29 	CALL __PUTPARD1
0085e9 940e cd6b 	CALL SUBOPT_0x2B1
                 ; 0016 00A0                                 strcat(cmd,str);
0085eb 940e cd70 	CALL SUBOPT_0x2B2
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
0085ed 940e cd62 	CALL SUBOPT_0x2AF
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                +
0085ef 91a0 11b7+LDS R26 , _operating_config + ( 1 )
                 	__GETB2MN _operating_config,1
0085f1 30a1      	CPI  R26,LOW(0x1)
0085f2 f439      	BRNE _0x2C003A
0085f3 940e cd66 	CALL SUBOPT_0x2B0
                +
0085f5 e9ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
0085f6 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
0085f7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
0085f8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
0085f9 c006      	RJMP _0x2C02B8
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003A:
0085fa 940e cd66 	CALL SUBOPT_0x2B0
                +
0085fc eae2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
0085fd e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
0085fe e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
0085ff e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B8:
008600 940e da29 	CALL __PUTPARD1
008602 940e cd6b 	CALL SUBOPT_0x2B1
                 ; 0016 00A5                                 strcat(cmd,str);
008604 940e cd70 	CALL SUBOPT_0x2B2
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
008606 940e cd62 	CALL SUBOPT_0x2AF
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                +
008608 91a0 11b8+LDS R26 , _operating_config + ( 2 )
                 	__GETB2MN _operating_config,2
00860a 30a1      	CPI  R26,LOW(0x1)
00860b f439      	BRNE _0x2C003C
00860c 940e cd66 	CALL SUBOPT_0x2B0
                +
00860e e9ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
00860f e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
008610 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
008611 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
008612 c006      	RJMP _0x2C02B9
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003C:
008613 940e cd66 	CALL SUBOPT_0x2B0
                +
008615 eae2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
008616 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
008617 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
008618 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B9:
008619 940e da29 	CALL __PUTPARD1
00861b 940e cd6b 	CALL SUBOPT_0x2B1
                 ; 0016 00AA                                 strcat(cmd,str);
00861d 940e cd70 	CALL SUBOPT_0x2B2
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
00861f 940e cd62 	CALL SUBOPT_0x2AF
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                +
008621 e000     +LDI R16 , LOW ( 0 )
008622 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
008623 e020     +LDI R18 , LOW ( 0 )
008624 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2C003F:
                +
008625 3005     +CPI R16 , LOW ( 5 )
008626 e0e0     +LDI R30 , HIGH ( 5 )
008627 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008628 f4c4      	BRGE _0x2C0040
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
008629 940e cd79 	CALL SUBOPT_0x2B3
00862b 81a0      	LD   R26,Z
00862c 30a1      	CPI  R26,LOW(0x1)
00862d f421      	BRNE _0x2C0041
00862e 940e cd7e 	CALL SUBOPT_0x2B4
008630 e4e5      	LDI  R30,LOW(69)
008631 c003      	RJMP _0x2C02BA
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 _0x2C0041:
008632 940e cd7e 	CALL SUBOPT_0x2B4
008634 e4e4      	LDI  R30,LOW(68)
                 _0x2C02BA:
008635 93ec      	ST   X,R30
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                +
008636 3004     +CPI R16 , LOW ( 4 )
008637 e0e0     +LDI R30 , HIGH ( 4 )
008638 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
008639 f424      	BRGE _0x2C0043
                 ; 0016 00B1                                         str[j++] = '/';
00863a 940e cd7e 	CALL SUBOPT_0x2B4
00863c e2ef      	LDI  R30,LOW(47)
00863d 93ec      	ST   X,R30
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 _0x2C0043:
                +
00863e 5f0f     +SUBI R16 , LOW ( - 1 )
00863f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008640 cfe4      	RJMP _0x2C003F
                 _0x2C0040:
                 ; 0016 00B5                                 str[j++]    = ',';
008641 940e cd7e 	CALL SUBOPT_0x2B4
008643 e2ec      	LDI  R30,LOW(44)
008644 93ec      	ST   X,R30
                 ; 0016 00B6                                 str[j++]    = '\0';
008645 940e cd7e 	CALL SUBOPT_0x2B4
008647 e0e0      	LDI  R30,LOW(0)
008648 93ec      	ST   X,R30
                 ; 0016 00B7                                 strcat(cmd,str);
008649 01fe      	MOVW R30,R28
00864a 9638      	ADIW R30,8
00864b 93fa      	ST   -Y,R31
00864c 93ea      	ST   -Y,R30
00864d 01de      	MOVW R26,R28
00864e 96dc      	ADIW R26,60
00864f 940e a164 	CALL _strcat
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                +
008651 eaeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 123 ) )
008652 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 123 ) )
008653 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 123 ) )
008654 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 123 ) )
                 	__POINTD1FN _0x2C0000,123
008655 940e cd86 	CALL SUBOPT_0x2B5
008657 940e bc5e 	CALL SUBOPT_0x12
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                +
008659 ebed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 141 ) )
00865a e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 141 ) )
00865b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 141 ) )
00865c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 141 ) )
                 	__POINTD1FN _0x2C0000,141
00865d 940e cd86 	CALL SUBOPT_0x2B5
00865f 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
008661 c0da      	RJMP _0x2C0044
                 _0x2C0035:
008662 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008664 30a2      	CPI  R26,LOW(0x2)
008665 f011      	BREQ PC+3
008666 940c 8735 	JMP _0x2C0045
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
008668 01fe      	MOVW R30,R28
008669 9638      	ADIW R30,8
00866a 940e c238 	CALL SUBOPT_0xF8
00866c 940e cd4b 	CALL SUBOPT_0x2AD
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
00866e e4a5      	LDI  R26,LOW(325)
00866f e0b1      	LDI  R27,HIGH(325)
008670 940e a0d2 	CALL _malloc
                +
008672 01de     +MOVW R26 , R28
008673 5aac     +SUBI R26 , LOW ( - 84 )
008674 4fbf     +SBCI R27 , HIGH ( - 84 )
008675 93ed     +ST X + , R30
008676 93fc     +ST X , R31
                 	__PUTW1SX 84
                 ; 0016 00C2                                 if(msg == NULL){
008677 940e cd8c 	CALL SUBOPT_0x2B6
008679 9730      	SBIW R30,0
00867a f449      	BRNE _0x2C0046
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                +
00867b ece2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 146 ) )
00867c e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 146 ) )
00867d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 146 ) )
00867e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 146 ) )
                 	__POINTD1FN _0x2C0000,146
00867f 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008681 940e ccdf 	CALL SUBOPT_0x2A1
008683 c0b8      	RJMP _0x2C002C
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 _0x2C0046:
008684 940e cd8c 	CALL SUBOPT_0x2B6
008686 93fa      	ST   -Y,R31
008687 93ea      	ST   -Y,R30
008688 01de      	MOVW R26,R28
008689 5aac      	SUBI R26,LOW(-(84))
00868a 4fbf      	SBCI R27,HIGH(-(84))
00868b 940e 5d42 	CALL _ETH_getConfig
00868d 01af      	MOVW R20,R30
                 ; 0016 00C8                                 if(res < 0){
00868e 2355      	TST  R21
00868f f42a      	BRPL _0x2C0047
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                +
008690 efe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 198 ) )
008691 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 198 ) )
008692 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 198 ) )
008693 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 198 ) )
                 	__POINTD1FN _0x2C0000,198
008694 c02c      	RJMP _0x2C02BB
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 _0x2C0047:
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                +
008695 e2e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 241 ) )
008696 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 241 ) )
008697 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 241 ) )
008698 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 241 ) )
                 	__POINTD1FN _0x2C0000,241
008699 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                +
00869b e4ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 285 ) )
00869c e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 285 ) )
00869d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 285 ) )
00869e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 285 ) )
                 	__POINTD1FN _0x2C0000,285
00869f 940e da29 	CALL __PUTPARD1
                +
0086a1 01fe     +MOVW R30 , R28
0086a2 5aea     +SUBI R30 , LOW ( - 86 )
0086a3 4fff     +SBCI R31 , HIGH ( - 86 )
0086a4 9001     +LD R0 , Z +
0086a5 81f0     +LD R31 , Z
0086a6 2de0     +MOV R30 , R0
                 	__GETW1SX 86
0086a7 940e bd4a 	CALL SUBOPT_0x34
0086a9 940e bc5e 	CALL SUBOPT_0x12
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                +
0086ab e000     +LDI R16 , LOW ( 0 )
0086ac e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C004A:
0086ad 940e cd93 	CALL SUBOPT_0x2B7
0086af 170e      	CP   R16,R30
0086b0 071f      	CPC  R17,R31
0086b1 f458      	BRSH _0x2C004B
                 ; 0016 00CF                                         putchar3(msg[i]);
0086b2 01f8      	MOVW R30,R16
0086b3 940e cd9a 	CALL SUBOPT_0x2B8
0086b5 0fae      	ADD  R26,R30
0086b6 1fbf      	ADC  R27,R31
0086b7 91ac      	LD   R26,X
0086b8 940e 3fe3 	CALL _putchar3
                 ; 0016 00D0                                     }
                +
0086ba 5f0f     +SUBI R16 , LOW ( - 1 )
0086bb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0086bc cff0      	RJMP _0x2C004A
                 _0x2C004B:
                 ; 0016 00D1                                     printDebug("\r\n");
                +
0086bd efe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
0086be e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
0086bf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
0086c0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
                 _0x2C02BB:
0086c1 940e da29 	CALL __PUTPARD1
0086c3 940e bd53 	CALL SUBOPT_0x36
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
0086c5 940e cd8c 	CALL SUBOPT_0x2B6
0086c7 93fa      	ST   -Y,R31
0086c8 93ea      	ST   -Y,R30
0086c9 940e cda1 	CALL SUBOPT_0x2B9
0086cb 940e 963b 	CALL _getNetworkInfo
0086cd 01af      	MOVW R20,R30
                 ; 0016 00D5                                 if(res<0){
0086ce 2355      	TST  R21
0086cf f45a      	BRPL _0x2C004C
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                +
0086d0 e7e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 322 ) )
0086d1 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 322 ) )
0086d2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 322 ) )
0086d3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 322 ) )
                 	__POINTD1FN _0x2C0000,322
0086d4 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 00D7                                     return;
0086d6 940e daa0 	CALL __LOADLOCR6
0086d8 96ef      	ADIW R28,63
0086d9 9668      	ADIW R28,24
0086da 9508      	RET
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 _0x2C004C:
0086db e0e6      	LDI  R30,LOW(6)
0086dc 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
0086de e9ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 366 ) )
0086df e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 366 ) )
0086e0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 366 ) )
0086e1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 366 ) )
                 	__POINTD1FN _0x2C0000,366
0086e2 940e cdb0 	CALL SUBOPT_0x2BA
0086e4 940e cdc3 	CALL SUBOPT_0x2BB
0086e6 940e cdd4 	CALL SUBOPT_0x2BC
0086e8 940e cde5 	CALL SUBOPT_0x2BD
0086ea 940e cdf6 	CALL SUBOPT_0x2BE
0086ec 940e ce07 	CALL SUBOPT_0x2BF
0086ee 940e ce18 	CALL SUBOPT_0x2C0
0086f0 940e ce29 	CALL SUBOPT_0x2C1
0086f2 940e ce3a 	CALL SUBOPT_0x2C2
0086f4 940e ce4b 	CALL SUBOPT_0x2C3
0086f6 940e ce5c 	CALL SUBOPT_0x2C4
0086f8 940e ce6d 	CALL SUBOPT_0x2C5
0086fa 940e ce7e 	CALL SUBOPT_0x2C6
0086fc 940e ce8f 	CALL SUBOPT_0x2C7
0086fe 940e cea1 	CALL SUBOPT_0x2C8
008700 940e ceb3 	CALL SUBOPT_0x2C9
008702 e480      	LDI  R24,64
008703 940e 9afc 	CALL _printDebug
008705 96ef      	ADIW R28,63
008706 9625      	ADIW R28,5
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008707 eee5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 437 ) )
008708 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 437 ) )
008709 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 437 ) )
00870a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 437 ) )
                 	__POINTD1FN _0x2C0000,437
00870b 940e cdb0 	CALL SUBOPT_0x2BA
00870d 940e cdc3 	CALL SUBOPT_0x2BB
00870f 940e cdd4 	CALL SUBOPT_0x2BC
008711 940e cde5 	CALL SUBOPT_0x2BD
008713 940e cdf6 	CALL SUBOPT_0x2BE
008715 940e ce07 	CALL SUBOPT_0x2BF
008717 940e ce18 	CALL SUBOPT_0x2C0
008719 940e ce29 	CALL SUBOPT_0x2C1
00871b 940e ce3a 	CALL SUBOPT_0x2C2
00871d 940e ce4b 	CALL SUBOPT_0x2C3
00871f 940e ce5c 	CALL SUBOPT_0x2C4
008721 940e ce6d 	CALL SUBOPT_0x2C5
008723 940e ce7e 	CALL SUBOPT_0x2C6
008725 940e ce8f 	CALL SUBOPT_0x2C7
008727 940e cea1 	CALL SUBOPT_0x2C8
008729 940e ceb3 	CALL SUBOPT_0x2C9
00872b e480      	LDI  R24,64
00872c 940e 7c8c 	CALL _printOLED
00872e 96ef      	ADIW R28,63
00872f 9625      	ADIW R28,5
                 ; 0016 0100                                 free( msg );
008730 940e cd9a 	CALL SUBOPT_0x2B8
008732 940e a0ed 	CALL _free
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
008734 c007      	RJMP _0x2C004D
                 _0x2C0045:
                 ; 0016 0103                                 currentPage = P_MONITOR;
008735 e0e0      	LDI  R30,LOW(0)
008736 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
008738 940e cd28 	CALL SUBOPT_0x2A8
00873a 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 0106                             }
                 _0x2C004D:
                 _0x2C0044:
                 _0x2C0034:
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 _0x2C002C:
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
00873c 940c 9415 	JMP  _0x2C004E
                 _0x2C0029:
00873e 91a0 14df 	LDS  R26,_currentPage
008740 30a4      	CPI  R26,LOW(0x4)
008741 f4b1      	BRNE _0x2C004F
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
008742 940e cec8 	CALL SUBOPT_0x2CB
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
008744 f089      	BREQ _0x2C0052
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
008745 30e3      	CPI  R30,LOW(0x3)
008746 e0a0      	LDI  R26,HIGH(0x3)
008747 07fa      	CPC  R31,R26
008748 f069      	BREQ _0x2C0052
                 ; 0016 010F         case KEY_MODE   :
008749 30e1      	CPI  R30,LOW(0x1)
00874a e0a0      	LDI  R26,HIGH(0x1)
00874b 07fa      	CPC  R31,R26
00874c f021      	BREQ _0x2C0056
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
00874d 30e4      	CPI  R30,LOW(0x4)
00874e e0a0      	LDI  R26,HIGH(0x4)
00874f 07fa      	CPC  R31,R26
008750 f429      	BRNE _0x2C0052
                 _0x2C0056:
008751 e0e3      	LDI  R30,LOW(3)
008752 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
008754 940e cd2d 	CALL SUBOPT_0x2A9
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 _0x2C0052:
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
008756 940c 9415 	JMP  _0x2C0058
                 _0x2C004F:
008758 91a0 14df 	LDS  R26,_currentPage
00875a 30a5      	CPI  R26,LOW(0x5)
00875b f4b1      	BRNE _0x2C0059
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
00875c 940e cec8 	CALL SUBOPT_0x2CB
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
00875e f089      	BREQ _0x2C005C
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
00875f 30e3      	CPI  R30,LOW(0x3)
008760 e0a0      	LDI  R26,HIGH(0x3)
008761 07fa      	CPC  R31,R26
008762 f069      	BREQ _0x2C005C
                 ; 0016 011B         case KEY_MODE   :
008763 30e1      	CPI  R30,LOW(0x1)
008764 e0a0      	LDI  R26,HIGH(0x1)
008765 07fa      	CPC  R31,R26
008766 f021      	BREQ _0x2C0060
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008767 30e4      	CPI  R30,LOW(0x4)
008768 e0a0      	LDI  R26,HIGH(0x4)
008769 07fa      	CPC  R31,R26
00876a f429      	BRNE _0x2C005C
                 _0x2C0060:
00876b e0e3      	LDI  R30,LOW(3)
00876c 940e ced1 	CALL SUBOPT_0x2CC
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
00876e 940e cd2d 	CALL SUBOPT_0x2A9
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 _0x2C005C:
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
008770 940c 9415 	JMP  _0x2C0062
                 _0x2C0059:
008772 91a0 14df 	LDS  R26,_currentPage
008774 30a6      	CPI  R26,LOW(0x6)
008775 f4b1      	BRNE _0x2C0063
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
008776 940e cec8 	CALL SUBOPT_0x2CB
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
008778 f089      	BREQ _0x2C0066
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
008779 30e3      	CPI  R30,LOW(0x3)
00877a e0a0      	LDI  R26,HIGH(0x3)
00877b 07fa      	CPC  R31,R26
00877c f069      	BREQ _0x2C0066
                 ; 0016 0127         case KEY_MODE   :
00877d 30e1      	CPI  R30,LOW(0x1)
00877e e0a0      	LDI  R26,HIGH(0x1)
00877f 07fa      	CPC  R31,R26
008780 f021      	BREQ _0x2C006A
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008781 30e4      	CPI  R30,LOW(0x4)
008782 e0a0      	LDI  R26,HIGH(0x4)
008783 07fa      	CPC  R31,R26
008784 f429      	BRNE _0x2C0066
                 _0x2C006A:
008785 e0e3      	LDI  R30,LOW(3)
008786 940e ced7 	CALL SUBOPT_0x2CD
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
008788 940e cd2d 	CALL SUBOPT_0x2A9
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 _0x2C0066:
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
00878a 940c 9415 	JMP  _0x2C006C
                 _0x2C0063:
00878c 91a0 14df 	LDS  R26,_currentPage
00878e 30a7      	CPI  R26,LOW(0x7)
00878f f011      	BREQ PC+3
008790 940c 8816 	JMP _0x2C006D
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
008792 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
008794 f441      	BRNE _0x2C0071
008795 e0e2      	LDI  R30,LOW(2)
008796 940e ced1 	CALL SUBOPT_0x2CC
008798 940e cedd 	CALL SUBOPT_0x2CE
00879a 940e cee2 	CALL SUBOPT_0x2CF
00879c c077      	RJMP _0x2C0070
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0071:
00879d 30e2      	CPI  R30,LOW(0x2)
00879e e0a0      	LDI  R26,HIGH(0x2)
00879f 07fa      	CPC  R31,R26
0087a0 f449      	BRNE _0x2C0072
0087a1 940e ccc5 	CALL SUBOPT_0x29E
0087a3 f41c      	BRGE _0x2C0073
0087a4 e0e1      	LDI  R30,LOW(1)
0087a5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0073:
0087a7 940e cccc 	CALL SUBOPT_0x29F
0087a9 c06a      	RJMP _0x2C0070
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0072:
0087aa 30e3      	CPI  R30,LOW(0x3)
0087ab e0a0      	LDI  R26,HIGH(0x3)
0087ac 07fa      	CPC  R31,R26
0087ad f451      	BRNE _0x2C0074
0087ae 940e ccd9 	CALL SUBOPT_0x2A0
0087b0 30a2      	CPI  R26,LOW(0x2)
0087b1 f01c      	BRLT _0x2C0075
0087b2 e0e0      	LDI  R30,LOW(0)
0087b3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0075:
0087b5 940e cccc 	CALL SUBOPT_0x29F
0087b7 c05c      	RJMP _0x2C0070
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 _0x2C0074:
0087b8 30e4      	CPI  R30,LOW(0x4)
0087b9 e0a0      	LDI  R26,HIGH(0x4)
0087ba 07fa      	CPC  R31,R26
0087bb f011      	BREQ PC+3
0087bc 940c 8814 	JMP _0x2C0070
0087be 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0087c0 30e0      	CPI  R30,0
0087c1 f561      	BRNE _0x2C0077
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
0087c2 e0e8      	LDI  R30,LOW(8)
0087c3 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                +
0087c5 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
0087c7 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                +
0087c9 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0087cb 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                +
0087cd e1e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 488 ) )
0087ce e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 488 ) )
0087cf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 488 ) )
0087d0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 488 ) )
                 	__POINTD1FN _0x2C0000,488
0087d1 940e ceeb 	CALL SUBOPT_0x2D0
0087d3 91e0 1a5f 	LDS  R30,_almEn_S0160000000
0087d5 940e c90a 	CALL SUBOPT_0x215
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
0087d7 940e cef1 	CALL SUBOPT_0x2D1
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                +
0087d9 e4e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 532 ) )
0087da e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 532 ) )
0087db e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 532 ) )
0087dc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 532 ) )
                 	__POINTD1FN _0x2C0000,532
0087dd 940e ceeb 	CALL SUBOPT_0x2D0
0087df 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                +
0087e1 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 539 ) )
0087e2 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 539 ) )
0087e3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 539 ) )
0087e4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 539 ) )
                 	__POINTD1FN _0x2C0000,539
0087e5 940e da29 	CALL __PUTPARD1
0087e7 91e0 1a5f 	LDS  R30,_almEn_S0160000000
0087e9 940e be99 	CALL SUBOPT_0x65
0087eb 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
0087ed c026      	RJMP _0x2C0078
                 _0x2C0077:
0087ee 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0087f0 30a1      	CPI  R26,LOW(0x1)
0087f1 f4d9      	BRNE _0x2C0079
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
0087f2 e0e9      	LDI  R30,LOW(9)
0087f3 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                +
0087f5 e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
0087f6 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
0087f7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
0087f8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
0087f9 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 0146                                 for(i=0;i<12;i++){
                +
0087fb e000     +LDI R16 , LOW ( 0 )
0087fc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C007B:
                +
0087fd 300c     +CPI R16 , LOW ( 12 )
0087fe e0e0     +LDI R30 , HIGH ( 12 )
0087ff 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008800 f45c      	BRGE _0x2C007C
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
008801 940e cef6 	CALL SUBOPT_0x2D2
008803 e2ae      	LDI  R26,LOW(_setIp_S0160000000)
008804 e1ba      	LDI  R27,HIGH(_setIp_S0160000000)
008805 940e cefe 	CALL SUBOPT_0x2D3
008807 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0148                                 }
                +
008809 5f0f     +SUBI R16 , LOW ( - 1 )
00880a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00880b cff1      	RJMP _0x2C007B
                 _0x2C007C:
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
00880c c007      	RJMP _0x2C007D
                 _0x2C0079:
                 ; 0016 014B                                 currentPage = P_MONITOR;
00880d e0e0      	LDI  R30,LOW(0)
00880e 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
008810 940e cd28 	CALL SUBOPT_0x2A8
008812 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 014E                             }
                 _0x2C007D:
                 _0x2C0078:
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 _0x2C0070:
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
008814 940c 9415 	JMP  _0x2C007E
                 _0x2C006D:
008816 91a0 14df 	LDS  R26,_currentPage
008818 30a8      	CPI  R26,LOW(0x8)
008819 f011      	BREQ PC+3
00881a 940c 88ae 	JMP _0x2C007F
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
00881c 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
00881e f431      	BRNE _0x2C0083
00881f e0e7      	LDI  R30,LOW(7)
008820 940e ccf2 	CALL SUBOPT_0x2A2
008822 940e cf03 	CALL SUBOPT_0x2D4
008824 c087      	RJMP _0x2C0082
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0083:
008825 30e2      	CPI  R30,LOW(0x2)
008826 e0a0      	LDI  R26,HIGH(0x2)
008827 07fa      	CPC  R31,R26
008828 f449      	BRNE _0x2C0084
008829 940e ccc5 	CALL SUBOPT_0x29E
00882b f41c      	BRGE _0x2C0085
00882c e0e2      	LDI  R30,LOW(2)
00882d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0085:
00882f 940e cef1 	CALL SUBOPT_0x2D1
008831 c07a      	RJMP _0x2C0082
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0084:
008832 30e3      	CPI  R30,LOW(0x3)
008833 e0a0      	LDI  R26,HIGH(0x3)
008834 07fa      	CPC  R31,R26
008835 f451      	BRNE _0x2C0086
008836 940e ccd9 	CALL SUBOPT_0x2A0
008838 30a3      	CPI  R26,LOW(0x3)
008839 f01c      	BRLT _0x2C0087
00883a e0e0      	LDI  R30,LOW(0)
00883b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0087:
00883d 940e cef1 	CALL SUBOPT_0x2D1
00883f c06c      	RJMP _0x2C0082
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0086:
008840 30e4      	CPI  R30,LOW(0x4)
008841 e0a0      	LDI  R26,HIGH(0x4)
008842 07fa      	CPC  R31,R26
008843 f011      	BREQ PC+3
008844 940c 88ac 	JMP _0x2C0082
008846 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008848 30e0      	CPI  R30,0
008849 f4c9      	BRNE _0x2C0089
                 ; 0016 0159                                 devEn       = !devEn;
00884a 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00884c 940e d928 	CALL __LNEGB1
00884e 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                +
008850 e6e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 564 ) )
008851 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 564 ) )
008852 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 564 ) )
008853 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 564 ) )
                 	__POINTD1FN _0x2C0000,564
008854 940e cf08 	CALL SUBOPT_0x2D5
008856 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008858 940e c90a 	CALL SUBOPT_0x215
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
00885a 940e cf11 	CALL SUBOPT_0x2D6
00885c 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00885e 940e be99 	CALL SUBOPT_0x65
008860 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
008862 c049      	RJMP _0x2C008A
                 _0x2C0089:
008863 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008865 30a1      	CPI  R26,LOW(0x1)
008866 f4c9      	BRNE _0x2C008B
                 ; 0016 015E                                 almEn       = !almEn;
008867 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008869 940e d928 	CALL __LNEGB1
00886b 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                +
00886d e8e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 600 ) )
00886e e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 600 ) )
00886f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 600 ) )
008870 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 600 ) )
                 	__POINTD1FN _0x2C0000,600
008871 940e cf08 	CALL SUBOPT_0x2D5
008873 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008875 940e c90a 	CALL SUBOPT_0x215
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
008877 940e cf11 	CALL SUBOPT_0x2D6
008879 91e0 1a5f 	LDS  R30,_almEn_S0160000000
00887b 940e be99 	CALL SUBOPT_0x65
00887d 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
00887f c02c      	RJMP _0x2C008C
                 _0x2C008B:
008880 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008882 30a2      	CPI  R26,LOW(0x2)
008883 f509      	BRNE _0x2C008D
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
008884 91e0 1a5e 	LDS  R30,_devEn_S0160000000
                +
008886 93e0 11b7+STS _operating_config + ( 1 ) , R30
                 	__PUTB1MN _operating_config,1
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
008888 91e0 1a5f 	LDS  R30,_almEn_S0160000000
                +
00888a 93e0 11b8+STS _operating_config + ( 2 ) , R30
                 	__PUTB1MN _operating_config,2
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
00888c 940e cf16 	CALL SUBOPT_0x2D7
                 ; 0016 0167                                 if(res < 0){
00888e f452      	BRPL _0x2C008E
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
00888f 940e cf1d 	CALL SUBOPT_0x2D8
                 ; 0016 0169                                     currentPage = P_FAILED;
008891 e2e5      	LDI  R30,LOW(37)
008892 940e cd3a 	CALL SUBOPT_0x2AA
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
008894 940e cf23 	CALL SUBOPT_0x2D9
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
008896 940e cf2a 	CALL SUBOPT_0x2DA
008898 c007      	RJMP _0x2C02BC
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 _0x2C008E:
                 ; 0016 0170                                     currentPage = P_FINISH;
008899 e2e4      	LDI  R30,LOW(36)
00889a 940e cd3a 	CALL SUBOPT_0x2AA
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
00889c 940e cf23 	CALL SUBOPT_0x2D9
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
00889e 940e cf2f 	CALL SUBOPT_0x2DB
                 _0x2C02BC:
0088a0 940e da29 	CALL __PUTPARD1
0088a2 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
0088a4 c007      	RJMP _0x2C0090
                 _0x2C008D:
                 ; 0016 0178                                 currentPage = P_MONITOR;
0088a5 e0e0      	LDI  R30,LOW(0)
0088a6 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
0088a8 940e cd28 	CALL SUBOPT_0x2A8
0088aa 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 017B                             }
                 _0x2C0090:
                 _0x2C008C:
                 _0x2C008A:
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 _0x2C0082:
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
0088ac 940c 9415 	JMP  _0x2C0091
                 _0x2C007F:
0088ae 91a0 14df 	LDS  R26,_currentPage
0088b0 30a9      	CPI  R26,LOW(0x9)
0088b1 f011      	BREQ PC+3
0088b2 940c 8927 	JMP _0x2C0092
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
0088b4 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
0088b6 f431      	BRNE _0x2C0096
0088b7 e0e7      	LDI  R30,LOW(7)
0088b8 940e ced1 	CALL SUBOPT_0x2CC
0088ba 940e cf03 	CALL SUBOPT_0x2D4
0088bc c068      	RJMP _0x2C0095
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C0096:
0088bd 30e2      	CPI  R30,LOW(0x2)
0088be e0a0      	LDI  R26,HIGH(0x2)
0088bf 07fa      	CPC  R31,R26
0088c0 f451      	BRNE _0x2C0097
0088c1 940e ccd9 	CALL SUBOPT_0x2A0
0088c3 30ad      	CPI  R26,LOW(0xD)
0088c4 f01c      	BRLT _0x2C0098
0088c5 e0e0      	LDI  R30,LOW(0)
0088c6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0098:
0088c8 940e cf34 	CALL SUBOPT_0x2DC
0088ca c05a      	RJMP _0x2C0095
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C0097:
0088cb 30e3      	CPI  R30,LOW(0x3)
0088cc e0a0      	LDI  R26,HIGH(0x3)
0088cd 07fa      	CPC  R31,R26
0088ce f449      	BRNE _0x2C0099
0088cf 940e ccc5 	CALL SUBOPT_0x29E
0088d1 f41c      	BRGE _0x2C009A
0088d2 e0ec      	LDI  R30,LOW(12)
0088d3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C009A:
0088d5 940e cf34 	CALL SUBOPT_0x2DC
0088d7 c04d      	RJMP _0x2C0095
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 _0x2C0099:
0088d8 30e4      	CPI  R30,LOW(0x4)
0088d9 e0a0      	LDI  R26,HIGH(0x4)
0088da 07fa      	CPC  R31,R26
0088db f011      	BREQ PC+3
0088dc 940c 8925 	JMP _0x2C0095
0088de 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0088e0 30ac      	CPI  R26,LOW(0xC)
0088e1 f4f1      	BRNE _0x2C009C
                 ; 0016 0186                                 cursor = 0;
0088e2 e0e0      	LDI  R30,LOW(0)
0088e3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
0088e5 e0ea      	LDI  R30,LOW(10)
0088e6 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0188                                 printOLED("SM");
                +
0088e8 eee8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
0088e9 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
0088ea e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
0088eb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
0088ec 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 0189                                 for(i=0;i<12;i++){
                +
0088ee e000     +LDI R16 , LOW ( 0 )
0088ef e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C009E:
                +
0088f0 300c     +CPI R16 , LOW ( 12 )
0088f1 e0e0     +LDI R30 , HIGH ( 12 )
0088f2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
0088f3 f45c      	BRGE _0x2C009F
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
0088f4 940e cef6 	CALL SUBOPT_0x2D2
0088f6 e3aa      	LDI  R26,LOW(_setMask_S0160000000)
0088f7 e1ba      	LDI  R27,HIGH(_setMask_S0160000000)
0088f8 940e cefe 	CALL SUBOPT_0x2D3
0088fa 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 018B                                 }
                +
0088fc 5f0f     +SUBI R16 , LOW ( - 1 )
0088fd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0088fe cff1      	RJMP _0x2C009E
                 _0x2C009F:
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
0088ff c025      	RJMP _0x2C00A0
                 _0x2C009C:
008900 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008902 30ac      	CPI  R26,LOW(0xC)
008903 f4d4      	BRGE _0x2C00A1
                 ; 0016 018E                                 if((cursor%3) == 0){
008904 940e cf39 	CALL SUBOPT_0x2DD
008906 f439      	BRNE _0x2C00A2
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
008907 940e cf44 	CALL SUBOPT_0x2DE
008909 30e3      	CPI  R30,LOW(0x3)
00890a f010      	BRLO _0x2C00A3
00890b 940e cf4d 	CALL SUBOPT_0x2DF
                 ; 0016 0190                                 }
                 _0x2C00A3:
                 ; 0016 0191                                 else{
00890d c006      	RJMP _0x2C00A4
                 _0x2C00A2:
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
00890e 940e cf44 	CALL SUBOPT_0x2DE
008910 30ea      	CPI  R30,LOW(0xA)
008911 f010      	BRLO _0x2C00A5
008912 940e cf4d 	CALL SUBOPT_0x2DF
                 ; 0016 0193                                 }
                 _0x2C00A5:
                 _0x2C00A4:
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
008914 940e cf55 	CALL SUBOPT_0x2E0
008916 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
008917 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
008918 81e0      	LD   R30,Z
008919 940e be99 	CALL SUBOPT_0x65
00891b 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
00891d c007      	RJMP _0x2C00A6
                 _0x2C00A1:
                 ; 0016 0198                                 currentPage = P_MONITOR;
00891e e0e0      	LDI  R30,LOW(0)
00891f 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
008921 940e cd28 	CALL SUBOPT_0x2A8
008923 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 019B                             }
                 _0x2C00A6:
                 _0x2C00A0:
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 _0x2C0095:
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
008925 940c 9415 	JMP  _0x2C00A7
                 _0x2C0092:
008927 91a0 14df 	LDS  R26,_currentPage
008929 30aa      	CPI  R26,LOW(0xA)
00892a f011      	BREQ PC+3
00892b 940c 89a4 	JMP _0x2C00A8
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
00892d 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
00892f f441      	BRNE _0x2C00AC
008930 e0e9      	LDI  R30,LOW(9)
008931 940e ccf2 	CALL SUBOPT_0x2A2
                +
008933 e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008934 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008935 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008936 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008937 c066      	RJMP _0x2C02BD
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AC:
008938 30e2      	CPI  R30,LOW(0x2)
008939 e0a0      	LDI  R26,HIGH(0x2)
00893a 07fa      	CPC  R31,R26
00893b f451      	BRNE _0x2C00AD
00893c 940e ccd9 	CALL SUBOPT_0x2A0
00893e 30ad      	CPI  R26,LOW(0xD)
00893f f01c      	BRLT _0x2C00AE
008940 e0e0      	LDI  R30,LOW(0)
008941 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00AE:
008943 940e cf34 	CALL SUBOPT_0x2DC
008945 c05c      	RJMP _0x2C00AB
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AD:
008946 30e3      	CPI  R30,LOW(0x3)
008947 e0a0      	LDI  R26,HIGH(0x3)
008948 07fa      	CPC  R31,R26
008949 f449      	BRNE _0x2C00AF
00894a 940e ccc5 	CALL SUBOPT_0x29E
00894c f41c      	BRGE _0x2C00B0
00894d e0ec      	LDI  R30,LOW(12)
00894e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00B0:
008950 940e cf34 	CALL SUBOPT_0x2DC
008952 c04f      	RJMP _0x2C00AB
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00AF:
008953 30e4      	CPI  R30,LOW(0x4)
008954 e0a0      	LDI  R26,HIGH(0x4)
008955 07fa      	CPC  R31,R26
008956 f011      	BREQ PC+3
008957 940c 89a2 	JMP _0x2C00AB
008959 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00895b 30ac      	CPI  R26,LOW(0xC)
00895c f4f1      	BRNE _0x2C00B2
                 ; 0016 01A6                                 cursor = 0;
00895d e0e0      	LDI  R30,LOW(0)
00895e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
008960 e0eb      	LDI  R30,LOW(11)
008961 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01A8                                 printOLED("SG");
                +
008963 eeeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008964 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008965 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008966 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008967 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                +
008969 e000     +LDI R16 , LOW ( 0 )
00896a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00B4:
                +
00896b 300c     +CPI R16 , LOW ( 12 )
00896c e0e0     +LDI R30 , HIGH ( 12 )
00896d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
00896e f45c      	BRGE _0x2C00B5
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
00896f 940e cef6 	CALL SUBOPT_0x2D2
008971 e4a6      	LDI  R26,LOW(_setGw_S0160000000)
008972 e1ba      	LDI  R27,HIGH(_setGw_S0160000000)
008973 940e cefe 	CALL SUBOPT_0x2D3
008975 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 01AB                                 }
                +
008977 5f0f     +SUBI R16 , LOW ( - 1 )
008978 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008979 cff1      	RJMP _0x2C00B4
                 _0x2C00B5:
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
00897a c027      	RJMP _0x2C00B6
                 _0x2C00B2:
00897b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00897d 30ac      	CPI  R26,LOW(0xC)
00897e f4d4      	BRGE _0x2C00B7
                 ; 0016 01AE                                 if((cursor%3) == 0){
00897f 940e cf39 	CALL SUBOPT_0x2DD
008981 f439      	BRNE _0x2C00B8
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
008982 940e cf65 	CALL SUBOPT_0x2E1
008984 30e3      	CPI  R30,LOW(0x3)
008985 f010      	BRLO _0x2C00B9
008986 940e cf6e 	CALL SUBOPT_0x2E2
                 ; 0016 01B0                                 }
                 _0x2C00B9:
                 ; 0016 01B1                                 else{
008988 c006      	RJMP _0x2C00BA
                 _0x2C00B8:
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
008989 940e cf65 	CALL SUBOPT_0x2E1
00898b 30ea      	CPI  R30,LOW(0xA)
00898c f010      	BRLO _0x2C00BB
00898d 940e cf6e 	CALL SUBOPT_0x2E2
                 ; 0016 01B3                                 }
                 _0x2C00BB:
                 _0x2C00BA:
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
00898f 940e cf55 	CALL SUBOPT_0x2E0
008991 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
008992 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
008993 81e0      	LD   R30,Z
008994 940e be99 	CALL SUBOPT_0x65
008996 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
008998 c009      	RJMP _0x2C00BC
                 _0x2C00B7:
                 ; 0016 01B8                                 currentPage = P_MONITOR;
008999 e0e0      	LDI  R30,LOW(0)
00899a 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
00899c 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02BD:
00899e 940e da29 	CALL __PUTPARD1
0089a0 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 01BB                             }
                 _0x2C00BC:
                 _0x2C00B6:
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 _0x2C00AB:
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
0089a2 940c 9415 	JMP  _0x2C00BD
                 _0x2C00A8:
0089a4 91a0 14df 	LDS  R26,_currentPage
0089a6 30ab      	CPI  R26,LOW(0xB)
0089a7 f011      	BREQ PC+3
0089a8 940c 8a21 	JMP _0x2C00BE
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
0089aa 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
0089ac f441      	BRNE _0x2C00C2
0089ad e0ea      	LDI  R30,LOW(10)
0089ae 940e ccf2 	CALL SUBOPT_0x2A2
                +
0089b0 eee8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
0089b1 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
0089b2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
0089b3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
0089b4 c066      	RJMP _0x2C02BE
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C2:
0089b5 30e2      	CPI  R30,LOW(0x2)
0089b6 e0a0      	LDI  R26,HIGH(0x2)
0089b7 07fa      	CPC  R31,R26
0089b8 f451      	BRNE _0x2C00C3
0089b9 940e ccd9 	CALL SUBOPT_0x2A0
0089bb 30ad      	CPI  R26,LOW(0xD)
0089bc f01c      	BRLT _0x2C00C4
0089bd e0e0      	LDI  R30,LOW(0)
0089be 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C4:
0089c0 940e cf34 	CALL SUBOPT_0x2DC
0089c2 c05c      	RJMP _0x2C00C1
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C3:
0089c3 30e3      	CPI  R30,LOW(0x3)
0089c4 e0a0      	LDI  R26,HIGH(0x3)
0089c5 07fa      	CPC  R31,R26
0089c6 f449      	BRNE _0x2C00C5
0089c7 940e ccc5 	CALL SUBOPT_0x29E
0089c9 f41c      	BRGE _0x2C00C6
0089ca e0ec      	LDI  R30,LOW(12)
0089cb 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C6:
0089cd 940e cf34 	CALL SUBOPT_0x2DC
0089cf c04f      	RJMP _0x2C00C1
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00C5:
0089d0 30e4      	CPI  R30,LOW(0x4)
0089d1 e0a0      	LDI  R26,HIGH(0x4)
0089d2 07fa      	CPC  R31,R26
0089d3 f011      	BREQ PC+3
0089d4 940c 8a1f 	JMP _0x2C00C1
0089d6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0089d8 30ac      	CPI  R26,LOW(0xC)
0089d9 f4f1      	BRNE _0x2C00C8
                 ; 0016 01C6                                 cursor = 0;
0089da e0e0      	LDI  R30,LOW(0)
0089db 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
0089dd e0ec      	LDI  R30,LOW(12)
0089de 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01C8                                 printOLED("SS");
                +
0089e0 eeee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 702 ) )
0089e1 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 702 ) )
0089e2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 702 ) )
0089e3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 702 ) )
                 	__POINTD1FN _0x2C0000,702
0089e4 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                +
0089e6 e000     +LDI R16 , LOW ( 0 )
0089e7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00CA:
                +
0089e8 300c     +CPI R16 , LOW ( 12 )
0089e9 e0e0     +LDI R30 , HIGH ( 12 )
0089ea 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
0089eb f45c      	BRGE _0x2C00CB
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
0089ec 940e cef6 	CALL SUBOPT_0x2D2
0089ee e5a2      	LDI  R26,LOW(_setServer_S0160000000)
0089ef e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
0089f0 940e cefe 	CALL SUBOPT_0x2D3
0089f2 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 01CB                                 }
                +
0089f4 5f0f     +SUBI R16 , LOW ( - 1 )
0089f5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0089f6 cff1      	RJMP _0x2C00CA
                 _0x2C00CB:
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
0089f7 c027      	RJMP _0x2C00CC
                 _0x2C00C8:
0089f8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0089fa 30ac      	CPI  R26,LOW(0xC)
0089fb f4d4      	BRGE _0x2C00CD
                 ; 0016 01CE                                 if((cursor%3) == 0){
0089fc 940e cf39 	CALL SUBOPT_0x2DD
0089fe f439      	BRNE _0x2C00CE
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
0089ff 940e cf76 	CALL SUBOPT_0x2E3
008a01 30e3      	CPI  R30,LOW(0x3)
008a02 f010      	BRLO _0x2C00CF
008a03 940e cf7f 	CALL SUBOPT_0x2E4
                 ; 0016 01D0                                 }
                 _0x2C00CF:
                 ; 0016 01D1                                 else{
008a05 c006      	RJMP _0x2C00D0
                 _0x2C00CE:
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
008a06 940e cf76 	CALL SUBOPT_0x2E3
008a08 30ea      	CPI  R30,LOW(0xA)
008a09 f010      	BRLO _0x2C00D1
008a0a 940e cf7f 	CALL SUBOPT_0x2E4
                 ; 0016 01D3                                 }
                 _0x2C00D1:
                 _0x2C00D0:
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
008a0c 940e cf55 	CALL SUBOPT_0x2E0
008a0e 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
008a0f 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
008a10 81e0      	LD   R30,Z
008a11 940e be99 	CALL SUBOPT_0x65
008a13 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
008a15 c009      	RJMP _0x2C00D2
                 _0x2C00CD:
                 ; 0016 01D8                                 currentPage = P_MONITOR;
008a16 e0e0      	LDI  R30,LOW(0)
008a17 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
008a19 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02BE:
008a1b 940e da29 	CALL __PUTPARD1
008a1d 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 01DB                             }
                 _0x2C00D2:
                 _0x2C00CC:
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 _0x2C00C1:
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
008a1f 940c 9415 	JMP  _0x2C00D3
                 _0x2C00BE:
008a21 91a0 14df 	LDS  R26,_currentPage
008a23 30ac      	CPI  R26,LOW(0xC)
008a24 f011      	BREQ PC+3
008a25 940c 8aad 	JMP _0x2C00D4
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
008a27 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
008a29 f441      	BRNE _0x2C00D8
008a2a e0eb      	LDI  R30,LOW(11)
008a2b 940e ccf2 	CALL SUBOPT_0x2A2
                +
008a2d eeeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008a2e e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008a2f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008a30 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008a31 c075      	RJMP _0x2C02BF
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D8:
008a32 30e2      	CPI  R30,LOW(0x2)
008a33 e0a0      	LDI  R26,HIGH(0x2)
008a34 07fa      	CPC  R31,R26
008a35 f451      	BRNE _0x2C00D9
008a36 940e ccd9 	CALL SUBOPT_0x2A0
008a38 30ad      	CPI  R26,LOW(0xD)
008a39 f01c      	BRLT _0x2C00DA
008a3a e0e0      	LDI  R30,LOW(0)
008a3b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DA:
008a3d 940e cf34 	CALL SUBOPT_0x2DC
008a3f c06b      	RJMP _0x2C00D7
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D9:
008a40 30e3      	CPI  R30,LOW(0x3)
008a41 e0a0      	LDI  R26,HIGH(0x3)
008a42 07fa      	CPC  R31,R26
008a43 f449      	BRNE _0x2C00DB
008a44 940e ccc5 	CALL SUBOPT_0x29E
008a46 f41c      	BRGE _0x2C00DC
008a47 e0ec      	LDI  R30,LOW(12)
008a48 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DC:
008a4a 940e cf34 	CALL SUBOPT_0x2DC
008a4c c05e      	RJMP _0x2C00D7
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00DB:
008a4d 30e4      	CPI  R30,LOW(0x4)
008a4e e0a0      	LDI  R26,HIGH(0x4)
008a4f 07fa      	CPC  R31,R26
008a50 f011      	BREQ PC+3
008a51 940c 8aab 	JMP _0x2C00D7
008a53 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008a55 30ac      	CPI  R26,LOW(0xC)
008a56 f569      	BRNE _0x2C00DE
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
008a57 e0ed      	LDI  R30,LOW(13)
008a58 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008a5a efe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 705 ) )
008a5b e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 705 ) )
008a5c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 705 ) )
008a5d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 705 ) )
                 	__POINTD1FN _0x2C0000,705
008a5e 940e cdb0 	CALL SUBOPT_0x2BA
008a60 940e cdc3 	CALL SUBOPT_0x2BB
008a62 940e cdd4 	CALL SUBOPT_0x2BC
008a64 940e cde5 	CALL SUBOPT_0x2BD
008a66 940e cdf6 	CALL SUBOPT_0x2BE
008a68 940e ce07 	CALL SUBOPT_0x2BF
008a6a 940e ce18 	CALL SUBOPT_0x2C0
008a6c 940e ce29 	CALL SUBOPT_0x2C1
008a6e 940e ce3a 	CALL SUBOPT_0x2C2
008a70 940e ce4b 	CALL SUBOPT_0x2C3
008a72 940e ce5c 	CALL SUBOPT_0x2C4
008a74 940e ce6d 	CALL SUBOPT_0x2C5
008a76 940e ce7e 	CALL SUBOPT_0x2C6
008a78 940e ce8f 	CALL SUBOPT_0x2C7
008a7a 940e cea1 	CALL SUBOPT_0x2C8
008a7c 940e ceb3 	CALL SUBOPT_0x2C9
008a7e e480      	LDI  R24,64
008a7f 940e 7c8c 	CALL _printOLED
008a81 96ef      	ADIW R28,63
008a82 9625      	ADIW R28,5
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
008a83 c027      	RJMP _0x2C00DF
                 _0x2C00DE:
008a84 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008a86 30ac      	CPI  R26,LOW(0xC)
008a87 f4d4      	BRGE _0x2C00E0
                 ; 0016 01FB                                 if((cursor%3) == 0){
008a88 940e cf39 	CALL SUBOPT_0x2DD
008a8a f439      	BRNE _0x2C00E1
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
008a8b 940e cf87 	CALL SUBOPT_0x2E5
008a8d 30e3      	CPI  R30,LOW(0x3)
008a8e f010      	BRLO _0x2C00E2
008a8f 940e cf90 	CALL SUBOPT_0x2E6
                 ; 0016 01FD                                 }
                 _0x2C00E2:
                 ; 0016 01FE                                 else{
008a91 c006      	RJMP _0x2C00E3
                 _0x2C00E1:
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
008a92 940e cf87 	CALL SUBOPT_0x2E5
008a94 30ea      	CPI  R30,LOW(0xA)
008a95 f010      	BRLO _0x2C00E4
008a96 940e cf90 	CALL SUBOPT_0x2E6
                 ; 0016 0200                                 }
                 _0x2C00E4:
                 _0x2C00E3:
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
008a98 940e cf55 	CALL SUBOPT_0x2E0
008a9a 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
008a9b 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
008a9c 81e0      	LD   R30,Z
008a9d 940e be99 	CALL SUBOPT_0x65
008a9f 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
008aa1 c009      	RJMP _0x2C00E5
                 _0x2C00E0:
                 ; 0016 0205                                 currentPage = P_MONITOR;
008aa2 e0e0      	LDI  R30,LOW(0)
008aa3 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
008aa5 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02BF:
008aa7 940e da29 	CALL __PUTPARD1
008aa9 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 0208                             }
                 _0x2C00E5:
                 _0x2C00DF:
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 _0x2C00D7:
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
008aab 940c 9415 	JMP  _0x2C00E6
                 _0x2C00D4:
008aad 91a0 14df 	LDS  R26,_currentPage
008aaf 30ad      	CPI  R26,LOW(0xD)
008ab0 f571      	BRNE _0x2C00E7
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
008ab1 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
008ab3 f431      	BRNE _0x2C00EB
008ab4 e0e7      	LDI  R30,LOW(7)
008ab5 940e ced1 	CALL SUBOPT_0x2CC
008ab7 940e cf03 	CALL SUBOPT_0x2D4
008ab9 c023      	RJMP _0x2C00EA
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 _0x2C00EB:
008aba 30e2      	CPI  R30,LOW(0x2)
008abb e0a0      	LDI  R26,HIGH(0x2)
008abc 07fa      	CPC  R31,R26
008abd f0f9      	BREQ _0x2C00EA
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
008abe 30e3      	CPI  R30,LOW(0x3)
008abf e0a0      	LDI  R26,HIGH(0x3)
008ac0 07fa      	CPC  R31,R26
008ac1 f0d9      	BREQ _0x2C00EA
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
008ac2 30e4      	CPI  R30,LOW(0x4)
008ac3 e0a0      	LDI  R26,HIGH(0x4)
008ac4 07fa      	CPC  R31,R26
008ac5 f4b9      	BRNE _0x2C00EA
008ac6 e2e4      	LDI  R30,LOW(36)
008ac7 940e cd3a 	CALL SUBOPT_0x2AA
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
008ac9 e0ed      	LDI  R30,LOW(13)
008aca 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
008acc 940e cda1 	CALL SUBOPT_0x2B9
008ace 940e 5db0 	CALL _ETH_setConfig
008ad0 01af      	MOVW R20,R30
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
008ad1 2355      	TST  R21
008ad2 f432      	BRPL _0x2C00EF
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                +
008ad3 e2e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 756 ) )
008ad4 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 756 ) )
008ad5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 756 ) )
008ad6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 756 ) )
                 	__POINTD1FN _0x2C0000,756
008ad7 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 _0x2C00EF:
008ad9 940e cf2f 	CALL SUBOPT_0x2DB
008adb 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 _0x2C00EA:
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
008add 940c 9415 	JMP  _0x2C00F0
                 _0x2C00E7:
008adf 91a0 14df 	LDS  R26,_currentPage
008ae1 30ae      	CPI  R26,LOW(0xE)
008ae2 f011      	BREQ PC+3
008ae3 940c 8b34 	JMP _0x2C00F1
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
008ae5 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
008ae7 f431      	BRNE _0x2C00F5
008ae8 e0e1      	LDI  R30,LOW(1)
008ae9 940e ced1 	CALL SUBOPT_0x2CC
008aeb 940e cf9e 	CALL SUBOPT_0x2E8
008aed c044      	RJMP _0x2C00F4
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F5:
008aee 30e2      	CPI  R30,LOW(0x2)
008aef e0a0      	LDI  R26,HIGH(0x2)
008af0 07fa      	CPC  R31,R26
008af1 f449      	BRNE _0x2C00F6
008af2 940e ccc5 	CALL SUBOPT_0x29E
008af4 f41c      	BRGE _0x2C00F7
008af5 e0e1      	LDI  R30,LOW(1)
008af6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F7:
008af8 940e cccc 	CALL SUBOPT_0x29F
008afa c037      	RJMP _0x2C00F4
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F6:
008afb 30e3      	CPI  R30,LOW(0x3)
008afc e0a0      	LDI  R26,HIGH(0x3)
008afd 07fa      	CPC  R31,R26
008afe f451      	BRNE _0x2C00F8
008aff 940e ccd9 	CALL SUBOPT_0x2A0
008b01 30a2      	CPI  R26,LOW(0x2)
008b02 f01c      	BRLT _0x2C00F9
008b03 e0e0      	LDI  R30,LOW(0)
008b04 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F9:
008b06 940e cccc 	CALL SUBOPT_0x29F
008b08 c029      	RJMP _0x2C00F4
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 _0x2C00F8:
008b09 30e4      	CPI  R30,LOW(0x4)
008b0a e0a0      	LDI  R26,HIGH(0x4)
008b0b 07fa      	CPC  R31,R26
008b0c f529      	BRNE _0x2C00F4
008b0d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008b0f 30e0      	CPI  R30,0
008b10 f431      	BRNE _0x2C00FB
                 ; 0016 0229                                 currentPage = P_PRB_V;
008b11 e0ef      	LDI  R30,LOW(15)
008b12 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
008b14 940e cfa3 	CALL SUBOPT_0x2E9
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
008b16 c01b      	RJMP _0x2C00FC
                 _0x2C00FB:
008b17 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b19 30a1      	CPI  R26,LOW(0x1)
008b1a f471      	BRNE _0x2C00FD
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
008b1b e2e1      	LDI  R30,LOW(33)
008b1c 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
008b1e e1e0      	LDI  R30,LOW(16)
008b1f 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
008b21 e0ee      	LDI  R30,LOW(14)
008b22 940e cd18 	CALL SUBOPT_0x2A6
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
008b24 940e cd22 	CALL SUBOPT_0x2A7
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
008b26 940e cd40 	CALL SUBOPT_0x2AB
008b28 c005      	RJMP _0x2C02C0
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 _0x2C00FD:
                 ; 0016 0237                                 currentPage = P_MONITOR;
008b29 e0e0      	LDI  R30,LOW(0)
008b2a 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
008b2c 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02C0:
008b2e 940e da29 	CALL __PUTPARD1
008b30 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 023A                             }
                 _0x2C00FC:
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 _0x2C00F4:
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
008b32 940c 9415 	JMP  _0x2C00FF
                 _0x2C00F1:
008b34 91a0 14df 	LDS  R26,_currentPage
008b36 30af      	CPI  R26,LOW(0xF)
008b37 f549      	BRNE _0x2C0100
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
008b38 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
008b3a f0f9      	BREQ _0x2C02C1
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
008b3b 30e2      	CPI  R30,LOW(0x2)
008b3c e0a0      	LDI  R26,HIGH(0x2)
008b3d 07fa      	CPC  R31,R26
008b3e f451      	BRNE _0x2C0105
008b3f 940e ccd9 	CALL SUBOPT_0x2A0
008b41 30a5      	CPI  R26,LOW(0x5)
008b42 f01c      	BRLT _0x2C0106
008b43 e0e0      	LDI  R30,LOW(0)
008b44 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0106:
008b46 940e cfa3 	CALL SUBOPT_0x2E9
008b48 c016      	RJMP _0x2C0103
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 _0x2C0105:
008b49 30e3      	CPI  R30,LOW(0x3)
008b4a e0a0      	LDI  R26,HIGH(0x3)
008b4b 07fa      	CPC  R31,R26
008b4c f449      	BRNE _0x2C0107
008b4d 940e ccc5 	CALL SUBOPT_0x29E
008b4f f41c      	BRGE _0x2C0108
008b50 e0e4      	LDI  R30,LOW(4)
008b51 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0108:
008b53 940e cfa3 	CALL SUBOPT_0x2E9
008b55 c009      	RJMP _0x2C0103
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 _0x2C0107:
008b56 30e4      	CPI  R30,LOW(0x4)
008b57 e0a0      	LDI  R26,HIGH(0x4)
008b58 07fa      	CPC  R31,R26
008b59 f429      	BRNE _0x2C0103
                 _0x2C02C1:
008b5a e0ee      	LDI  R30,LOW(14)
008b5b 940e ccf2 	CALL SUBOPT_0x2A2
008b5d 940e ccf8 	CALL SUBOPT_0x2A3
                 ; 0016 0245         }
                 _0x2C0103:
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
008b5f 940c 9415 	JMP  _0x2C010A
                 _0x2C0100:
008b61 91a0 14df 	LDS  R26,_currentPage
008b63 31a0      	CPI  R26,LOW(0x10)
008b64 f011      	BREQ PC+3
008b65 940c 8bea 	JMP _0x2C010B
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
008b67 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
008b69 f431      	BRNE _0x2C010F
008b6a e0ee      	LDI  R30,LOW(14)
008b6b 940e ced1 	CALL SUBOPT_0x2CC
008b6d 940e ccf8 	CALL SUBOPT_0x2A3
008b6f c078      	RJMP _0x2C010E
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C010F:
008b70 30e2      	CPI  R30,LOW(0x2)
008b71 e0a0      	LDI  R26,HIGH(0x2)
008b72 07fa      	CPC  R31,R26
008b73 f449      	BRNE _0x2C0110
008b74 940e ccc5 	CALL SUBOPT_0x29E
008b76 f41c      	BRGE _0x2C0111
008b77 e0e5      	LDI  R30,LOW(5)
008b78 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0111:
008b7a 940e cccc 	CALL SUBOPT_0x29F
008b7c c06b      	RJMP _0x2C010E
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0110:
008b7d 30e3      	CPI  R30,LOW(0x3)
008b7e e0a0      	LDI  R26,HIGH(0x3)
008b7f 07fa      	CPC  R31,R26
008b80 f451      	BRNE _0x2C0112
008b81 940e ccd9 	CALL SUBOPT_0x2A0
008b83 30a6      	CPI  R26,LOW(0x6)
008b84 f01c      	BRLT _0x2C0113
008b85 e0e0      	LDI  R30,LOW(0)
008b86 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0113:
008b88 940e cccc 	CALL SUBOPT_0x29F
008b8a c05d      	RJMP _0x2C010E
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 _0x2C0112:
008b8b 30e4      	CPI  R30,LOW(0x4)
008b8c e0a0      	LDI  R26,HIGH(0x4)
008b8d 07fa      	CPC  R31,R26
008b8e f011      	BREQ PC+3
008b8f 940c 8be8 	JMP _0x2C010E
008b91 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b93 30a5      	CPI  R26,LOW(0x5)
008b94 f49c      	BRGE _0x2C0115
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
008b95 940e cfaa 	CALL SUBOPT_0x2EA
008b97 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
008b98 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
008b99 940e cfae 	CALL SUBOPT_0x2EB
008b9b 940e d928 	CALL __LNEGB1
008b9d 940e cfb5 	CALL SUBOPT_0x2EC
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
008b9f 940e cfbd 	CALL SUBOPT_0x2ED
008ba1 940e cfae 	CALL SUBOPT_0x2EB
008ba3 940e be99 	CALL SUBOPT_0x65
008ba5 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
008ba7 c040      	RJMP _0x2C0116
                 _0x2C0115:
008ba8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008baa 30a5      	CPI  R26,LOW(0x5)
008bab f5a9      	BRNE _0x2C0117
                 ; 0016 0252                                 currentPage = P_FINISH;
008bac 940e cfc4 	CALL SUBOPT_0x2EE
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
008bae e0e0      	LDI  R30,LOW(0)
008baf 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
008bb1 e000     +LDI R16 , LOW ( 0 )
008bb2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0119:
                +
008bb3 3005     +CPI R16 , LOW ( 5 )
008bb4 e0e0     +LDI R30 , HIGH ( 5 )
008bb5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008bb6 f46c      	BRGE _0x2C011A
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
008bb7 940e cd79 	CALL SUBOPT_0x2B3
008bb9 010f      	MOVW R0,R30
008bba e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
008bbb e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
008bbc 0fa0      	ADD  R26,R16
008bbd 1fb1      	ADC  R27,R17
008bbe 91ec      	LD   R30,X
008bbf 01d0      	MOVW R26,R0
008bc0 93ec      	ST   X,R30
                 ; 0016 0257                                 }
                +
008bc1 5f0f     +SUBI R16 , LOW ( - 1 )
008bc2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008bc3 cfef      	RJMP _0x2C0119
                 _0x2C011A:
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
008bc4 940e cf16 	CALL SUBOPT_0x2D7
                 ; 0016 025A                                 if(res < 0){
008bc6 f472      	BRPL _0x2C011B
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008bc7 940e cf1d 	CALL SUBOPT_0x2D8
                 ; 0016 025C                                     currentPage = P_FAILED;
008bc9 e2e5      	LDI  R30,LOW(37)
008bca 93e0 14df 	STS  _currentPage,R30
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
008bcc e0ee      	LDI  R30,LOW(14)
008bcd 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
008bcf e1e0      	LDI  R30,LOW(16)
008bd0 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
008bd2 940e cf2a 	CALL SUBOPT_0x2DA
008bd4 c007      	RJMP _0x2C02C2
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 _0x2C011B:
                 ; 0016 0263                                     currentPage = P_FINISH;
008bd5 940e cfc4 	CALL SUBOPT_0x2EE
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
008bd7 e1e0      	LDI  R30,LOW(16)
008bd8 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
008bda 940e cf2f 	CALL SUBOPT_0x2DB
                 _0x2C02C2:
008bdc 940e da29 	CALL __PUTPARD1
008bde 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
008be0 c007      	RJMP _0x2C011D
                 _0x2C0117:
                 ; 0016 026B                                 currentPage = P_MONITOR;
008be1 e0e0      	LDI  R30,LOW(0)
008be2 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
008be4 940e cd28 	CALL SUBOPT_0x2A8
008be6 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 026E                             }
                 _0x2C011D:
                 _0x2C0116:
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 _0x2C010E:
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
008be8 940c 9415 	JMP  _0x2C011E
                 _0x2C010B:
008bea 91a0 14df 	LDS  R26,_currentPage
008bec 31a1      	CPI  R26,LOW(0x11)
008bed f011      	BREQ PC+3
008bee 940c 8c4a 	JMP _0x2C011F
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
008bf0 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
008bf2 f431      	BRNE _0x2C0123
008bf3 e0e1      	LDI  R30,LOW(1)
008bf4 940e ced7 	CALL SUBOPT_0x2CD
008bf6 940e cf9e 	CALL SUBOPT_0x2E8
008bf8 c050      	RJMP _0x2C0122
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0123:
008bf9 30e2      	CPI  R30,LOW(0x2)
008bfa e0a0      	LDI  R26,HIGH(0x2)
008bfb 07fa      	CPC  R31,R26
008bfc f449      	BRNE _0x2C0124
008bfd 940e ccc5 	CALL SUBOPT_0x29E
008bff f41c      	BRGE _0x2C0125
008c00 e0e1      	LDI  R30,LOW(1)
008c01 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0125:
008c03 940e cccc 	CALL SUBOPT_0x29F
008c05 c043      	RJMP _0x2C0122
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0124:
008c06 30e3      	CPI  R30,LOW(0x3)
008c07 e0a0      	LDI  R26,HIGH(0x3)
008c08 07fa      	CPC  R31,R26
008c09 f451      	BRNE _0x2C0126
008c0a 940e ccd9 	CALL SUBOPT_0x2A0
008c0c 30a2      	CPI  R26,LOW(0x2)
008c0d f01c      	BRLT _0x2C0127
008c0e e0e0      	LDI  R30,LOW(0)
008c0f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0127:
008c11 940e cccc 	CALL SUBOPT_0x29F
008c13 c035      	RJMP _0x2C0122
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 _0x2C0126:
008c14 30e4      	CPI  R30,LOW(0x4)
008c15 e0a0      	LDI  R26,HIGH(0x4)
008c16 07fa      	CPC  R31,R26
008c17 f589      	BRNE _0x2C0122
008c18 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008c1a 30e0      	CPI  R30,0
008c1b f491      	BRNE _0x2C0129
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
008c1c e1e2      	LDI  R30,LOW(18)
008c1d 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
008c1f 91e0 148b 	LDS  R30,_muteMode
008c21 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
008c23 940e cfcb 	CALL SUBOPT_0x2EF
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
008c25 940e cf11 	CALL SUBOPT_0x2D6
008c27 91e0 1a65 	LDS  R30,_mute_S0160000000
008c29 940e be99 	CALL SUBOPT_0x65
008c2b 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
008c2d c01b      	RJMP _0x2C012A
                 _0x2C0129:
008c2e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c30 30a1      	CPI  R26,LOW(0x1)
008c31 f471      	BRNE _0x2C012B
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
008c32 e2e1      	LDI  R30,LOW(33)
008c33 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
008c35 e1e3      	LDI  R30,LOW(19)
008c36 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
008c38 e1e1      	LDI  R30,LOW(17)
008c39 940e cd18 	CALL SUBOPT_0x2A6
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
008c3b 940e cd22 	CALL SUBOPT_0x2A7
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
008c3d 940e cd40 	CALL SUBOPT_0x2AB
008c3f c005      	RJMP _0x2C02C3
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 _0x2C012B:
                 ; 0016 0288                                 currentPage = P_MONITOR;
008c40 e0e0      	LDI  R30,LOW(0)
008c41 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
008c43 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02C3:
008c45 940e da29 	CALL __PUTPARD1
008c47 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 028B                             }
                 _0x2C012A:
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 _0x2C0122:
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
008c49 c7cb      	RJMP _0x2C012D
                 _0x2C011F:
008c4a 91a0 14df 	LDS  R26,_currentPage
008c4c 31a2      	CPI  R26,LOW(0x12)
008c4d f011      	BREQ PC+3
008c4e 940c 8ca8 	JMP _0x2C012E
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
008c50 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
008c52 f431      	BRNE _0x2C0132
008c53 e1e1      	LDI  R30,LOW(17)
008c54 940e ccf2 	CALL SUBOPT_0x2A2
008c56 940e cd05 	CALL SUBOPT_0x2A4
008c58 c04e      	RJMP _0x2C0131
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0132:
008c59 30e2      	CPI  R30,LOW(0x2)
008c5a e0a0      	LDI  R26,HIGH(0x2)
008c5b 07fa      	CPC  R31,R26
008c5c f449      	BRNE _0x2C0133
008c5d 940e ccc5 	CALL SUBOPT_0x29E
008c5f f41c      	BRGE _0x2C0134
008c60 e0e1      	LDI  R30,LOW(1)
008c61 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0134:
008c63 940e cfcb 	CALL SUBOPT_0x2EF
008c65 c041      	RJMP _0x2C0131
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0133:
008c66 30e3      	CPI  R30,LOW(0x3)
008c67 e0a0      	LDI  R26,HIGH(0x3)
008c68 07fa      	CPC  R31,R26
008c69 f451      	BRNE _0x2C0135
008c6a 940e ccd9 	CALL SUBOPT_0x2A0
008c6c 30a2      	CPI  R26,LOW(0x2)
008c6d f01c      	BRLT _0x2C0136
008c6e e0e0      	LDI  R30,LOW(0)
008c6f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0136:
008c71 940e cfcb 	CALL SUBOPT_0x2EF
008c73 c033      	RJMP _0x2C0131
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0135:
008c74 30e4      	CPI  R30,LOW(0x4)
008c75 e0a0      	LDI  R26,HIGH(0x4)
008c76 07fa      	CPC  R31,R26
008c77 f579      	BRNE _0x2C0131
008c78 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008c7a 30e0      	CPI  R30,0
008c7b f479      	BRNE _0x2C0138
                 ; 0016 0296                                 mute       = !mute;
008c7c 91e0 1a65 	LDS  R30,_mute_S0160000000
008c7e 940e d928 	CALL __LNEGB1
008c80 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
008c82 940e cf11 	CALL SUBOPT_0x2D6
008c84 91e0 1a65 	LDS  R30,_mute_S0160000000
008c86 940e be99 	CALL SUBOPT_0x65
008c88 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
008c8a c01c      	RJMP _0x2C0139
                 _0x2C0138:
008c8b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c8d 30a1      	CPI  R26,LOW(0x1)
008c8e f479      	BRNE _0x2C013A
                 ; 0016 029A                                 currentPage = P_FINISH;
008c8f 940e cfd0 	CALL SUBOPT_0x2F0
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
008c91 e1e2      	LDI  R30,LOW(18)
008c92 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 029D                                 muteMode    = mute;
008c94 91e0 1a65 	LDS  R30,_mute_S0160000000
008c96 93e0 148b 	STS  _muteMode,R30
                 ; 0016 029E                                 cursor      = 0;
008c98 e0e0      	LDI  R30,LOW(0)
008c99 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 029F                                 printOLED("FI");
008c9b 940e cf2f 	CALL SUBOPT_0x2DB
008c9d c005      	RJMP _0x2C02C4
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 _0x2C013A:
                 ; 0016 02A2                                 currentPage = P_MONITOR;
008c9e e0e0      	LDI  R30,LOW(0)
008c9f 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
008ca1 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02C4:
008ca3 940e da29 	CALL __PUTPARD1
008ca5 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 02A5                             }
                 _0x2C0139:
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 _0x2C0131:
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
008ca7 c76d      	RJMP _0x2C013C
                 _0x2C012E:
008ca8 91a0 14df 	LDS  R26,_currentPage
008caa 31a3      	CPI  R26,LOW(0x13)
008cab f011      	BREQ PC+3
008cac 940c 8d0a 	JMP _0x2C013D
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
008cae 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
008cb0 f431      	BRNE _0x2C0141
008cb1 e1e1      	LDI  R30,LOW(17)
008cb2 940e ced1 	CALL SUBOPT_0x2CC
008cb4 940e cd05 	CALL SUBOPT_0x2A4
008cb6 c052      	RJMP _0x2C0140
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0141:
008cb7 30e2      	CPI  R30,LOW(0x2)
008cb8 e0a0      	LDI  R26,HIGH(0x2)
008cb9 07fa      	CPC  R31,R26
008cba f481      	BRNE _0x2C0142
008cbb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cbd 30a4      	CPI  R26,LOW(0x4)
008cbe f414      	BRGE _0x2C0143
008cbf 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0143:
008cc1 940e ccd9 	CALL SUBOPT_0x2A0
008cc3 30a5      	CPI  R26,LOW(0x5)
008cc4 f01c      	BRLT _0x2C0144
008cc5 e0e0      	LDI  R30,LOW(0)
008cc6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0144:
008cc8 940e cfdc 	CALL SUBOPT_0x2F2
008cca c03e      	RJMP _0x2C0140
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0142:
008ccb 30e3      	CPI  R30,LOW(0x3)
008ccc e0a0      	LDI  R26,HIGH(0x3)
008ccd 07fa      	CPC  R31,R26
008cce f479      	BRNE _0x2C0145
008ccf 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cd1 30a4      	CPI  R26,LOW(0x4)
008cd2 f414      	BRGE _0x2C0146
008cd3 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0146:
008cd5 940e ccc5 	CALL SUBOPT_0x29E
008cd7 f41c      	BRGE _0x2C0147
008cd8 e0e4      	LDI  R30,LOW(4)
008cd9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0147:
008cdb 940e cfdc 	CALL SUBOPT_0x2F2
008cdd c02b      	RJMP _0x2C0140
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 _0x2C0145:
008cde 30e4      	CPI  R30,LOW(0x4)
008cdf e0a0      	LDI  R26,HIGH(0x4)
008ce0 07fa      	CPC  R31,R26
008ce1 f539      	BRNE _0x2C0140
008ce2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ce4 30a4      	CPI  R26,LOW(0x4)
008ce5 f471      	BRNE _0x2C0149
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
008ce6 e1e4      	LDI  R30,LOW(20)
008ce7 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
008ce9 940e cfe1 	CALL SUBOPT_0x2F3
008ceb 940e cd22 	CALL SUBOPT_0x2A7
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                +
008ced e6e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 819 ) )
008cee e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 819 ) )
008cef e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 819 ) )
008cf0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 819 ) )
                 	__POINTD1FN _0x2C0000,819
008cf1 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
008cf3 c015      	RJMP _0x2C014A
                 _0x2C0149:
008cf4 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cf6 30a4      	CPI  R26,LOW(0x4)
008cf7 f48c      	BRGE _0x2C014B
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
008cf8 940e cfaa 	CALL SUBOPT_0x2EA
008cfa 5daa      	SUBI R26,LOW(-_newPwd_S0160000000)
008cfb 4eb5      	SBCI R27,HIGH(-_newPwd_S0160000000)
008cfc 940e cfe9 	CALL SUBOPT_0x2F4
008cfe f024      	BRLT _0x2C014C
008cff 940e cfee 	CALL SUBOPT_0x2F5
008d01 e0a0      	LDI  R26,LOW(0)
008d02 83a0      	STD  Z+0,R26
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 _0x2C014C:
008d03 940e cff4 	CALL SUBOPT_0x2F6
008d05 940e cfee 	CALL SUBOPT_0x2F5
008d07 940e cffb 	CALL SUBOPT_0x2F7
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 _0x2C014B:
                 _0x2C014A:
                 ; 0016 02BC         }
                 _0x2C0140:
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
008d09 c70b      	RJMP _0x2C014D
                 _0x2C013D:
008d0a 91a0 14df 	LDS  R26,_currentPage
008d0c 31a4      	CPI  R26,LOW(0x14)
008d0d f011      	BREQ PC+3
008d0e 940c 8d9a 	JMP _0x2C014E
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
008d10 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
008d12 f431      	BRNE _0x2C0152
008d13 e1e1      	LDI  R30,LOW(17)
008d14 940e ced1 	CALL SUBOPT_0x2CC
008d16 940e cd05 	CALL SUBOPT_0x2A4
008d18 c080      	RJMP _0x2C0151
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0152:
008d19 30e2      	CPI  R30,LOW(0x2)
008d1a e0a0      	LDI  R26,HIGH(0x2)
008d1b 07fa      	CPC  R31,R26
008d1c f481      	BRNE _0x2C0153
008d1d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d1f 30a4      	CPI  R26,LOW(0x4)
008d20 f414      	BRGE _0x2C0154
008d21 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0154:
008d23 940e ccd9 	CALL SUBOPT_0x2A0
008d25 30a5      	CPI  R26,LOW(0x5)
008d26 f01c      	BRLT _0x2C0155
008d27 e0e0      	LDI  R30,LOW(0)
008d28 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0155:
008d2a 940e cfdc 	CALL SUBOPT_0x2F2
008d2c c06c      	RJMP _0x2C0151
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0153:
008d2d 30e3      	CPI  R30,LOW(0x3)
008d2e e0a0      	LDI  R26,HIGH(0x3)
008d2f 07fa      	CPC  R31,R26
008d30 f479      	BRNE _0x2C0156
008d31 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d33 30a4      	CPI  R26,LOW(0x4)
008d34 f414      	BRGE _0x2C0157
008d35 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0157:
008d37 940e ccc5 	CALL SUBOPT_0x29E
008d39 f41c      	BRGE _0x2C0158
008d3a e0e4      	LDI  R30,LOW(4)
008d3b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0158:
008d3d 940e cfdc 	CALL SUBOPT_0x2F2
008d3f c059      	RJMP _0x2C0151
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 _0x2C0156:
008d40 30e4      	CPI  R30,LOW(0x4)
008d41 e0a0      	LDI  R26,HIGH(0x4)
008d42 07fa      	CPC  R31,R26
008d43 f011      	BREQ PC+3
008d44 940c 8d99 	JMP _0x2C0151
008d46 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d48 30a4      	CPI  R26,LOW(0x4)
008d49 f5d1      	BRNE _0x2C015A
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
008d4a 940e cfff 	CALL SUBOPT_0x2F8
008d4c e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
008d4d e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
008d4e 940e cb99 	CALL SUBOPT_0x27B
008d50 940e a0f6 	CALL _memcmp
008d52 30e0      	CPI  R30,0
008d53 f0e1      	BREQ _0x2C015B
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                +
008d54 e6ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 831 ) )
008d55 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 831 ) )
008d56 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 831 ) )
008d57 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 831 ) )
                 	__POINTD1FN _0x2C0000,831
008d58 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
008d5a 940e cfff 	CALL SUBOPT_0x2F8
008d5c 940e d004 	CALL SUBOPT_0x2F9
008d5e 940e a154 	CALL _memset
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
008d60 940e cfe1 	CALL SUBOPT_0x2F3
008d62 940e a154 	CALL _memset
                 ; 0016 02CC                                     currentPage = P_FAILED;
008d64 e2e5      	LDI  R30,LOW(37)
008d65 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
008d67 e1e1      	LDI  R30,LOW(17)
008d68 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
008d6a e1e4      	LDI  R30,LOW(20)
008d6b 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
008d6d 940e cf2a 	CALL SUBOPT_0x2DA
008d6f c00f      	RJMP _0x2C02C5
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 _0x2C015B:
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
008d70 940e d008 	CALL SUBOPT_0x2FA
008d72 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
008d73 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
008d74 940e cb99 	CALL SUBOPT_0x27B
008d76 940e 97c3 	CALL _r2ecpy
                 ; 0016 02D4                                     currentPage = P_FINISH;
008d78 940e cfd0 	CALL SUBOPT_0x2F0
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
008d7a e1e4      	LDI  R30,LOW(20)
008d7b 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
008d7d 940e cf2f 	CALL SUBOPT_0x2DB
                 _0x2C02C5:
008d7f 940e da29 	CALL __PUTPARD1
008d81 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
008d83 c015      	RJMP _0x2C015D
                 _0x2C015A:
008d84 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d86 30a4      	CPI  R26,LOW(0x4)
008d87 f48c      	BRGE _0x2C015E
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
008d88 940e cfaa 	CALL SUBOPT_0x2EA
008d8a 5da6      	SUBI R26,LOW(-_confPwd_S0160000000)
008d8b 4eb5      	SBCI R27,HIGH(-_confPwd_S0160000000)
008d8c 940e cfe9 	CALL SUBOPT_0x2F4
008d8e f024      	BRLT _0x2C015F
008d8f 940e d011 	CALL SUBOPT_0x2FB
008d91 e0a0      	LDI  R26,LOW(0)
008d92 83a0      	STD  Z+0,R26
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 _0x2C015F:
008d93 940e cff4 	CALL SUBOPT_0x2F6
008d95 940e d011 	CALL SUBOPT_0x2FB
008d97 940e cffb 	CALL SUBOPT_0x2F7
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 _0x2C015E:
                 _0x2C015D:
                 ; 0016 02E1         }
                 _0x2C0151:
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
008d99 c67b      	RJMP _0x2C0160
                 _0x2C014E:
008d9a 91a0 14df 	LDS  R26,_currentPage
008d9c 31a5      	CPI  R26,LOW(0x15)
008d9d f011      	BREQ PC+3
008d9e 940c 8e2f 	JMP _0x2C0161
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
008da0 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
008da2 f419      	BRNE _0x2C0165
008da3 940e d017 	CALL SUBOPT_0x2FC
008da5 c088      	RJMP _0x2C0164
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0165:
008da6 30e2      	CPI  R30,LOW(0x2)
008da7 e0a0      	LDI  R26,HIGH(0x2)
008da8 07fa      	CPC  R31,R26
008da9 f449      	BRNE _0x2C0166
008daa 940e ccc5 	CALL SUBOPT_0x29E
008dac f41c      	BRGE _0x2C0167
008dad e0e3      	LDI  R30,LOW(3)
008dae 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0167:
008db0 940e cccc 	CALL SUBOPT_0x29F
008db2 c07b      	RJMP _0x2C0164
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0166:
008db3 30e3      	CPI  R30,LOW(0x3)
008db4 e0a0      	LDI  R26,HIGH(0x3)
008db5 07fa      	CPC  R31,R26
008db6 f451      	BRNE _0x2C0168
008db7 940e ccd9 	CALL SUBOPT_0x2A0
008db9 30a4      	CPI  R26,LOW(0x4)
008dba f01c      	BRLT _0x2C0169
008dbb e0e0      	LDI  R30,LOW(0)
008dbc 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0169:
008dbe 940e cccc 	CALL SUBOPT_0x29F
008dc0 c06d      	RJMP _0x2C0164
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 _0x2C0168:
008dc1 30e4      	CPI  R30,LOW(0x4)
008dc2 e0a0      	LDI  R26,HIGH(0x4)
008dc3 07fa      	CPC  R31,R26
008dc4 f011      	BREQ PC+3
008dc5 940c 8e2e 	JMP _0x2C0164
008dc7 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008dc9 30e0      	CPI  R30,0
008dca f571      	BRNE _0x2C016B
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
008dcb e1e6      	LDI  R30,LOW(22)
008dcc 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
008dce e6a6      	LDI  R26,LOW(_vRef_S0160000000)
008dcf e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
008dd0 940e 95cb 	CALL _get_current_vref
008dd2 01af      	MOVW R20,R30
                 ; 0016 02ED                                 if(res < 0){
008dd3 2355      	TST  R21
008dd4 f44a      	BRPL _0x2C016C
                 ; 0016 02EE                                     vRef[0] = 2;
008dd5 e0e2      	LDI  R30,LOW(2)
008dd6 93e0 1a66 	STS  _vRef_S0160000000,R30
                 ; 0016 02EF                                     vRef[1] = 5;
008dd8 e0e5      	LDI  R30,LOW(5)
                +
008dd9 93e0 1a67+STS _vRef_S0160000000 + ( 1 ) , R30
                 	__PUTB1MN _vRef_S0160000000,1
                 ; 0016 02F0                                     vRef[2] = 6;
008ddb e0e6      	LDI  R30,LOW(6)
                +
008ddc 93e0 1a68+STS _vRef_S0160000000 + ( 2 ) , R30
                 	__PUTB1MN _vRef_S0160000000,2
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 _0x2C016C:
                +
008dde e9ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 878 ) )
008ddf e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 878 ) )
008de0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 878 ) )
008de1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 878 ) )
                 	__POINTD1FN _0x2C0000,878
008de2 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                +
008de4 e000     +LDI R16 , LOW ( 0 )
008de5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C016E:
                +
008de6 3003     +CPI R16 , LOW ( 3 )
008de7 e0e0     +LDI R30 , HIGH ( 3 )
008de8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
008de9 f474      	BRGE _0x2C016F
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
008dea 940e d01e 	CALL SUBOPT_0x2FD
008dec 01f8      	MOVW R30,R16
008ded 940e cb26 	CALL SUBOPT_0x268
008def e6a6      	LDI  R26,LOW(_vRef_S0160000000)
008df0 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
008df1 940e cefe 	CALL SUBOPT_0x2D3
008df3 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 02F5                                 }
                +
008df5 5f0f     +SUBI R16 , LOW ( - 1 )
008df6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008df7 cfee      	RJMP _0x2C016E
                 _0x2C016F:
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
008df8 c035      	RJMP _0x2C0170
                 _0x2C016B:
008df9 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008dfb 30a1      	CPI  R26,LOW(0x1)
008dfc f459      	BRNE _0x2C0171
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
008dfd e1e7      	LDI  R30,LOW(23)
008dfe 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
008e00 e0e0      	LDI  R30,LOW(0)
008e01 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
008e03 940e d025 	CALL SUBOPT_0x2FE
008e05 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
008e07 c026      	RJMP _0x2C0172
                 _0x2C0171:
008e08 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e0a 30a2      	CPI  R26,LOW(0x2)
008e0b f469      	BRNE _0x2C0173
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
008e0c e1ea      	LDI  R30,LOW(26)
008e0d 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
008e0f e0e0      	LDI  R30,LOW(0)
008e10 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
008e12 940e d02f 	CALL SUBOPT_0x2FF
008e14 940e d036 	CALL SUBOPT_0x300
008e16 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
008e18 c015      	RJMP _0x2C0174
                 _0x2C0173:
008e19 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e1b 30a3      	CPI  R26,LOW(0x3)
008e1c f441      	BRNE _0x2C0175
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
008e1d e2e0      	LDI  R30,LOW(32)
008e1e 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                +
008e20 ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 902 ) )
008e21 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 902 ) )
008e22 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 902 ) )
008e23 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 902 ) )
                 	__POINTD1FN _0x2C0000,902
008e24 c005      	RJMP _0x2C02C6
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 _0x2C0175:
                 ; 0016 0309                                 currentPage = P_MONITOR;
008e25 e0e0      	LDI  R30,LOW(0)
008e26 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
008e28 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02C6:
008e2a 940e da29 	CALL __PUTPARD1
008e2c 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 030C                             }
                 _0x2C0174:
                 _0x2C0172:
                 _0x2C0170:
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 _0x2C0164:
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
008e2e c5e6      	RJMP _0x2C0177
                 _0x2C0161:
008e2f 91a0 14df 	LDS  R26,_currentPage
008e31 31a6      	CPI  R26,LOW(0x16)
008e32 f011      	BREQ PC+3
008e33 940c 8e96 	JMP _0x2C0178
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
008e35 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
008e37 f431      	BRNE _0x2C017C
008e38 e1e5      	LDI  R30,LOW(21)
008e39 940e ccf2 	CALL SUBOPT_0x2A2
008e3b 940e d03a 	CALL SUBOPT_0x301
008e3d c057      	RJMP _0x2C017B
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017C:
008e3e 30e2      	CPI  R30,LOW(0x2)
008e3f e0a0      	LDI  R26,HIGH(0x2)
008e40 07fa      	CPC  R31,R26
008e41 f451      	BRNE _0x2C017D
008e42 940e ccd9 	CALL SUBOPT_0x2A0
008e44 30a4      	CPI  R26,LOW(0x4)
008e45 f01c      	BRLT _0x2C017E
008e46 e0e0      	LDI  R30,LOW(0)
008e47 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C017E:
008e49 940e d03f 	CALL SUBOPT_0x302
008e4b c049      	RJMP _0x2C017B
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017D:
008e4c 30e3      	CPI  R30,LOW(0x3)
008e4d e0a0      	LDI  R26,HIGH(0x3)
008e4e 07fa      	CPC  R31,R26
008e4f f449      	BRNE _0x2C017F
008e50 940e ccc5 	CALL SUBOPT_0x29E
008e52 f41c      	BRGE _0x2C0180
008e53 e0e3      	LDI  R30,LOW(3)
008e54 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0180:
008e56 940e d03f 	CALL SUBOPT_0x302
008e58 c03c      	RJMP _0x2C017B
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 _0x2C017F:
008e59 30e4      	CPI  R30,LOW(0x4)
008e5a e0a0      	LDI  R26,HIGH(0x4)
008e5b 07fa      	CPC  R31,R26
008e5c f5c1      	BRNE _0x2C017B
008e5d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e5f 30a3      	CPI  R26,LOW(0x3)
008e60 f481      	BRNE _0x2C0182
                 ; 0016 0317                                 currentPage = P_FINISH;
008e61 e2e4      	LDI  R30,LOW(36)
008e62 940e cd12 	CALL SUBOPT_0x2A5
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
008e64 e1e6      	LDI  R30,LOW(22)
008e65 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 031A                                 set_vref(&vRef[0]);
008e67 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
008e68 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
008e69 940e 975c 	CALL _set_vref
                 ; 0016 031B                                 cursor = 0;
008e6b e0e0      	LDI  R30,LOW(0)
008e6c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 031C                                 printOLED("FI");
008e6e 940e cf2f 	CALL SUBOPT_0x2DB
008e70 c020      	RJMP _0x2C02C7
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 _0x2C0182:
008e71 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e73 30a3      	CPI  R26,LOW(0x3)
008e74 f4bc      	BRGE _0x2C0184
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
008e75 940e cfaa 	CALL SUBOPT_0x2EA
008e77 59aa      	SUBI R26,LOW(-_vRef_S0160000000)
008e78 4eb5      	SBCI R27,HIGH(-_vRef_S0160000000)
008e79 940e cfe9 	CALL SUBOPT_0x2F4
008e7b f020      	BRLO _0x2C0185
008e7c 940e d044 	CALL SUBOPT_0x303
008e7e e0a0      	LDI  R26,LOW(0)
008e7f 83a0      	STD  Z+0,R26
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 _0x2C0185:
008e80 940e d01e 	CALL SUBOPT_0x2FD
008e82 940e cfbd 	CALL SUBOPT_0x2ED
008e84 940e d044 	CALL SUBOPT_0x303
008e86 81e0      	LD   R30,Z
008e87 940e be99 	CALL SUBOPT_0x65
008e89 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
008e8b c009      	RJMP _0x2C0186
                 _0x2C0184:
                 ; 0016 0323                                 currentPage = P_MONITOR;
008e8c e0e0      	LDI  R30,LOW(0)
008e8d 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
008e8f 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02C7:
008e91 940e da29 	CALL __PUTPARD1
008e93 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 0326                             }
                 _0x2C0186:
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 _0x2C017B:
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
008e95 c57f      	RJMP _0x2C0187
                 _0x2C0178:
008e96 91a0 14df 	LDS  R26,_currentPage
008e98 31a7      	CPI  R26,LOW(0x17)
008e99 f011      	BREQ PC+3
008e9a 940c 8ef1 	JMP _0x2C0188
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
008e9c 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
008e9e f449      	BRNE _0x2C018C
008e9f e1e5      	LDI  R30,LOW(21)
008ea0 940e ced1 	CALL SUBOPT_0x2CC
008ea2 e0e0      	LDI  R30,LOW(0)
008ea3 93e0 1a69 	STS  _prb1_S0160000000,R30
008ea5 940e d03a 	CALL SUBOPT_0x301
008ea7 c048      	RJMP _0x2C018B
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018C:
008ea8 30e2      	CPI  R30,LOW(0x2)
008ea9 e0a0      	LDI  R26,HIGH(0x2)
008eaa 07fa      	CPC  R31,R26
008eab f451      	BRNE _0x2C018D
008eac 940e ccd9 	CALL SUBOPT_0x2A0
008eae 30a2      	CPI  R26,LOW(0x2)
008eaf f01c      	BRLT _0x2C018E
008eb0 e0e0      	LDI  R30,LOW(0)
008eb1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C018E:
008eb3 940e d04a 	CALL SUBOPT_0x304
008eb5 c03a      	RJMP _0x2C018B
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018D:
008eb6 30e3      	CPI  R30,LOW(0x3)
008eb7 e0a0      	LDI  R26,HIGH(0x3)
008eb8 07fa      	CPC  R31,R26
008eb9 f449      	BRNE _0x2C018F
008eba 940e ccc5 	CALL SUBOPT_0x29E
008ebc f41c      	BRGE _0x2C0190
008ebd e0e1      	LDI  R30,LOW(1)
008ebe 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0190:
008ec0 940e d04a 	CALL SUBOPT_0x304
008ec2 c02d      	RJMP _0x2C018B
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 _0x2C018F:
008ec3 30e4      	CPI  R30,LOW(0x4)
008ec4 e0a0      	LDI  R26,HIGH(0x4)
008ec5 07fa      	CPC  R31,R26
008ec6 f549      	BRNE _0x2C018B
008ec7 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008ec9 30e0      	CPI  R30,0
008eca f469      	BRNE _0x2C0192
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
008ecb 940e d04f 	CALL SUBOPT_0x305
008ecd f018      	BRLO _0x2C0193
008ece e0e0      	LDI  R30,LOW(0)
008ecf 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 _0x2C0193:
008ed1 940e d056 	CALL SUBOPT_0x306
008ed3 940e d036 	CALL SUBOPT_0x300
008ed5 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
008ed7 c018      	RJMP _0x2C0194
                 _0x2C0192:
008ed8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008eda 30a1      	CPI  R26,LOW(0x1)
008edb f469      	BRNE _0x2C0195
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
008edc e1e8      	LDI  R30,LOW(24)
008edd 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
008edf e0e0      	LDI  R30,LOW(0)
008ee0 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
008ee2 940e d02f 	CALL SUBOPT_0x2FF
008ee4 940e d05d 	CALL SUBOPT_0x307
008ee6 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
008ee8 c007      	RJMP _0x2C0196
                 _0x2C0195:
                 ; 0016 033B                                 currentPage = P_MONITOR;
008ee9 e0e0      	LDI  R30,LOW(0)
008eea 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
008eec 940e cd28 	CALL SUBOPT_0x2A8
008eee 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 033E                             }
                 _0x2C0196:
                 _0x2C0194:
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 _0x2C018B:
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
008ef0 c524      	RJMP _0x2C0197
                 _0x2C0188:
008ef1 91a0 14df 	LDS  R26,_currentPage
008ef3 31a8      	CPI  R26,LOW(0x18)
008ef4 f011      	BREQ PC+3
008ef5 940c 8f4f 	JMP _0x2C0198
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
008ef7 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
008ef9 f459      	BRNE _0x2C019C
008efa e1e7      	LDI  R30,LOW(23)
008efb 940e ccf2 	CALL SUBOPT_0x2A2
008efd e0e0      	LDI  R30,LOW(0)
008efe 93e0 1a6a 	STS  _prb2_S0160000000,R30
008f00 940e d025 	CALL SUBOPT_0x2FE
008f02 940e cb01 	CALL SUBOPT_0x263
008f04 c049      	RJMP _0x2C019B
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019C:
008f05 30e2      	CPI  R30,LOW(0x2)
008f06 e0a0      	LDI  R26,HIGH(0x2)
008f07 07fa      	CPC  R31,R26
008f08 f451      	BRNE _0x2C019D
008f09 940e ccd9 	CALL SUBOPT_0x2A0
008f0b 30a2      	CPI  R26,LOW(0x2)
008f0c f01c      	BRLT _0x2C019E
008f0d e0e0      	LDI  R30,LOW(0)
008f0e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C019E:
008f10 940e d04a 	CALL SUBOPT_0x304
008f12 c03b      	RJMP _0x2C019B
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019D:
008f13 30e3      	CPI  R30,LOW(0x3)
008f14 e0a0      	LDI  R26,HIGH(0x3)
008f15 07fa      	CPC  R31,R26
008f16 f449      	BRNE _0x2C019F
008f17 940e ccc5 	CALL SUBOPT_0x29E
008f19 f41c      	BRGE _0x2C01A0
008f1a e0e1      	LDI  R30,LOW(1)
008f1b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01A0:
008f1d 940e d04a 	CALL SUBOPT_0x304
008f1f c02e      	RJMP _0x2C019B
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 _0x2C019F:
008f20 30e4      	CPI  R30,LOW(0x4)
008f21 e0a0      	LDI  R26,HIGH(0x4)
008f22 07fa      	CPC  R31,R26
008f23 f551      	BRNE _0x2C019B
008f24 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008f26 30e0      	CPI  R30,0
008f27 f489      	BRNE _0x2C01A2
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
008f28 91a0 1a6a 	LDS  R26,_prb2_S0160000000
008f2a 5faf      	SUBI R26,-LOW(1)
008f2b 93a0 1a6a 	STS  _prb2_S0160000000,R26
008f2d 30a5      	CPI  R26,LOW(0x5)
008f2e f018      	BRLO _0x2C01A3
008f2f e0e0      	LDI  R30,LOW(0)
008f30 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 _0x2C01A3:
008f32 940e d056 	CALL SUBOPT_0x306
008f34 940e d05d 	CALL SUBOPT_0x307
008f36 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
008f38 c015      	RJMP _0x2C01A4
                 _0x2C01A2:
008f39 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f3b 30a1      	CPI  R26,LOW(0x1)
008f3c f451      	BRNE _0x2C01A5
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
008f3d e1e9      	LDI  R30,LOW(25)
008f3e 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
008f40 940e d061 	CALL SUBOPT_0x308
008f42 940e d05d 	CALL SUBOPT_0x307
008f44 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
008f46 c007      	RJMP _0x2C01A6
                 _0x2C01A5:
                 ; 0016 0352                                 currentPage = P_MONITOR;
008f47 e0e0      	LDI  R30,LOW(0)
008f48 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
008f4a 940e cd28 	CALL SUBOPT_0x2A8
008f4c 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 0355                             }
                 _0x2C01A6:
                 _0x2C01A4:
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 _0x2C019B:
                 ; 0016 0358     }
                 ; 0016 0359     else if ( currentPage == P_CAL1_CONFIRM )
008f4e c4c6      	RJMP _0x2C01A7
                 _0x2C0198:
008f4f 91a0 14df 	LDS  R26,_currentPage
008f51 31a9      	CPI  R26,LOW(0x19)
008f52 f599      	BRNE _0x2C01A8
                 ; 0016 035A     {
                 ; 0016 035B         switch(key){
008f53 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 035C         case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
008f55 f451      	BRNE _0x2C01AC
008f56 e1e8      	LDI  R30,LOW(24)
008f57 940e ccf2 	CALL SUBOPT_0x2A2
008f59 940e d02f 	CALL SUBOPT_0x2FF
008f5b 940e d05d 	CALL SUBOPT_0x307
008f5d 940e cb01 	CALL SUBOPT_0x263
008f5f c025      	RJMP _0x2C01AB
                 ; 0016 035D         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C01AC:
008f60 30e2      	CPI  R30,LOW(0x2)
008f61 e0a0      	LDI  R26,HIGH(0x2)
008f62 07fa      	CPC  R31,R26
008f63 f109      	BREQ _0x2C01AB
                 ; 0016 035E         case KEY_DOWN   :   /* no operation */                                                                  break;
008f64 30e3      	CPI  R30,LOW(0x3)
008f65 e0a0      	LDI  R26,HIGH(0x3)
008f66 07fa      	CPC  R31,R26
008f67 f0e9      	BREQ _0x2C01AB
                 ; 0016 035F         case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
008f68 30e4      	CPI  R30,LOW(0x4)
008f69 e0a0      	LDI  R26,HIGH(0x4)
008f6a 07fa      	CPC  R31,R26
008f6b f4c9      	BRNE _0x2C01AB
008f6c 940e d068 	CALL SUBOPT_0x309
008f6e 91a0 1a6a 	LDS  R26,_prb2_S0160000000
008f70 27bb      	CLR  R27
008f71 940e 6c67 	CALL _sensorCalibrate1
008f73 01af      	MOVW R20,R30
                 ; 0016 0360                             if(res < 0){
008f74 2355      	TST  R21
008f75 f432      	BRPL _0x2C01B0
                 ; 0016 0361                                 currentPage = P_FAILED;
008f76 e2e5      	LDI  R30,LOW(37)
008f77 940e d06e 	CALL SUBOPT_0x30A
                 ; 0016 0362                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364                                 cursor      = 0;
                 ; 0016 0365                                 printOLED("FL");
008f79 940e cf2a 	CALL SUBOPT_0x2DA
008f7b c005      	RJMP _0x2C02C8
                 ; 0016 0366                             }
                 ; 0016 0367                             else{
                 _0x2C01B0:
                 ; 0016 0368                                 currentPage = P_FINISH;
008f7c e2e4      	LDI  R30,LOW(36)
008f7d 940e d06e 	CALL SUBOPT_0x30A
                 ; 0016 0369                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B                                 cursor      = 0;
                 ; 0016 036C                                 printOLED("FI");
008f7f 940e cf2f 	CALL SUBOPT_0x2DB
                 _0x2C02C8:
008f81 940e da29 	CALL __PUTPARD1
008f83 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 036D                             }
                 ; 0016 036E                             break;
                 ; 0016 036F         }
                 _0x2C01AB:
                 ; 0016 0370     }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
008f85 c48f      	RJMP _0x2C01B2
                 _0x2C01A8:
008f86 91a0 14df 	LDS  R26,_currentPage
008f88 31aa      	CPI  R26,LOW(0x1A)
008f89 f011      	BREQ PC+3
008f8a 940c 8fd7 	JMP _0x2C01B3
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
008f8c 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
008f8e f431      	BRNE _0x2C01B7
008f8f e1e5      	LDI  R30,LOW(21)
008f90 940e ced7 	CALL SUBOPT_0x2CD
008f92 940e d03a 	CALL SUBOPT_0x301
008f94 c041      	RJMP _0x2C01B6
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B7:
008f95 30e2      	CPI  R30,LOW(0x2)
008f96 e0a0      	LDI  R26,HIGH(0x2)
008f97 07fa      	CPC  R31,R26
008f98 f451      	BRNE _0x2C01B8
008f99 940e ccd9 	CALL SUBOPT_0x2A0
008f9b 30a2      	CPI  R26,LOW(0x2)
008f9c f01c      	BRLT _0x2C01B9
008f9d e0e0      	LDI  R30,LOW(0)
008f9e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01B9:
008fa0 940e d04a 	CALL SUBOPT_0x304
008fa2 c033      	RJMP _0x2C01B6
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B8:
008fa3 30e3      	CPI  R30,LOW(0x3)
008fa4 e0a0      	LDI  R26,HIGH(0x3)
008fa5 07fa      	CPC  R31,R26
008fa6 f449      	BRNE _0x2C01BA
008fa7 940e ccc5 	CALL SUBOPT_0x29E
008fa9 f41c      	BRGE _0x2C01BB
008faa e0e1      	LDI  R30,LOW(1)
008fab 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01BB:
008fad 940e d04a 	CALL SUBOPT_0x304
008faf c026      	RJMP _0x2C01B6
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 _0x2C01BA:
008fb0 30e4      	CPI  R30,LOW(0x4)
008fb1 e0a0      	LDI  R26,HIGH(0x4)
008fb2 07fa      	CPC  R31,R26
008fb3 f511      	BRNE _0x2C01B6
008fb4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008fb6 30e0      	CPI  R30,0
008fb7 f469      	BRNE _0x2C01BD
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
008fb8 940e d04f 	CALL SUBOPT_0x305
008fba f018      	BRLO _0x2C01BE
008fbb e0e0      	LDI  R30,LOW(0)
008fbc 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 _0x2C01BE:
008fbe 940e d056 	CALL SUBOPT_0x306
008fc0 940e d036 	CALL SUBOPT_0x300
008fc2 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
008fc4 c011      	RJMP _0x2C01BF
                 _0x2C01BD:
008fc5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fc7 30a1      	CPI  R26,LOW(0x1)
008fc8 f431      	BRNE _0x2C01C0
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
008fc9 e1eb      	LDI  R30,LOW(27)
008fca 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
008fcc 940e d075 	CALL SUBOPT_0x30B
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
008fce c007      	RJMP _0x2C01C1
                 _0x2C01C0:
                 ; 0016 0381                                 currentPage = P_MONITOR;
008fcf e0e0      	LDI  R30,LOW(0)
008fd0 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
008fd2 940e cd28 	CALL SUBOPT_0x2A8
008fd4 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 0384                             }
                 _0x2C01C1:
                 _0x2C01BF:
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 _0x2C01B6:
                 ; 0016 0387     }
                 ; 0016 0388     else if ( currentPage == P_CAL2_MENU )
008fd6 c43e      	RJMP _0x2C01C2
                 _0x2C01B3:
008fd7 91a0 14df 	LDS  R26,_currentPage
008fd9 31ab      	CPI  R26,LOW(0x1B)
008fda f011      	BREQ PC+3
008fdb 940c 908b 	JMP _0x2C01C3
                 ; 0016 0389     {
                 ; 0016 038A         switch(key){
008fdd 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 038B         case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
008fdf f451      	BRNE _0x2C01C7
008fe0 e1ea      	LDI  R30,LOW(26)
008fe1 940e ccf2 	CALL SUBOPT_0x2A2
008fe3 940e d02f 	CALL SUBOPT_0x2FF
008fe5 940e d036 	CALL SUBOPT_0x300
008fe7 940e cb01 	CALL SUBOPT_0x263
008fe9 c0a0      	RJMP _0x2C01C6
                 ; 0016 038C         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C7:
008fea 30e2      	CPI  R30,LOW(0x2)
008feb e0a0      	LDI  R26,HIGH(0x2)
008fec 07fa      	CPC  R31,R26
008fed f449      	BRNE _0x2C01C8
008fee 940e ccc5 	CALL SUBOPT_0x29E
008ff0 f41c      	BRGE _0x2C01C9
008ff1 e0e3      	LDI  R30,LOW(3)
008ff2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01C9:
008ff4 940e cccc 	CALL SUBOPT_0x29F
008ff6 c093      	RJMP _0x2C01C6
                 ; 0016 038D         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C8:
008ff7 30e3      	CPI  R30,LOW(0x3)
008ff8 e0a0      	LDI  R26,HIGH(0x3)
008ff9 07fa      	CPC  R31,R26
008ffa f451      	BRNE _0x2C01CA
008ffb 940e ccd9 	CALL SUBOPT_0x2A0
008ffd 30a4      	CPI  R26,LOW(0x4)
008ffe f01c      	BRLT _0x2C01CB
008fff e0e0      	LDI  R30,LOW(0)
009000 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01CB:
009002 940e cccc 	CALL SUBOPT_0x29F
009004 c085      	RJMP _0x2C01C6
                 ; 0016 038E         case KEY_OK     :   if(cursor < 3){
                 _0x2C01CA:
009005 30e4      	CPI  R30,LOW(0x4)
009006 e0a0      	LDI  R26,HIGH(0x4)
009007 07fa      	CPC  R31,R26
009008 f011      	BREQ PC+3
009009 940c 908a 	JMP _0x2C01C6
00900b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00900d 30a3      	CPI  R26,LOW(0x3)
00900e f014      	BRLT PC+3
00900f 940c 9075 	JMP _0x2C01CD
                 ; 0016 038F                                 if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
009011 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009013 30e0      	CPI  R30,0
009014 f411      	BRNE _0x2C01CE
009015 e1ec      	LDI  R30,LOW(28)
009016 c00b      	RJMP _0x2C02C9
                 ; 0016 0390                                 else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 _0x2C01CE:
009017 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009019 30a1      	CPI  R26,LOW(0x1)
00901a f411      	BRNE _0x2C01D0
00901b e1ed      	LDI  R30,LOW(29)
00901c c005      	RJMP _0x2C02C9
                 ; 0016 0391                                 else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 _0x2C01D0:
00901d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00901f 30a2      	CPI  R26,LOW(0x2)
009020 f419      	BRNE _0x2C01D2
009021 e1ee      	LDI  R30,LOW(30)
                 _0x2C02C9:
009022 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0392 
                 ; 0016 0393                                 printOLED("CP%1d%1d",cursor+1,prb1+1);
                 _0x2C01D2:
                +
009024 eded     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 941 ) )
009025 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 941 ) )
009026 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 941 ) )
009027 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 941 ) )
                 	__POINTD1FN _0x2C0000,941
009028 940e da29 	CALL __PUTPARD1
00902a 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00902c e0f0      	LDI  R31,0
00902d fde7      	SBRC R30,7
00902e efff      	SER  R31
00902f 940e c904 	CALL SUBOPT_0x214
009031 940e d036 	CALL SUBOPT_0x300
009033 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0394 
                 ; 0016 0395                                 res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
009035 940e d068 	CALL SUBOPT_0x309
009037 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009039 e0f0      	LDI  R31,0
00903a fde7      	SBRC R30,7
00903b efff      	SER  R31
00903c 59eb      	SUBI R30,LOW(-101)
00903d 4fff      	SBCI R31,HIGH(-101)
00903e 940e d07a 	CALL SUBOPT_0x30C
009040 940e 6eaa 	CALL _sensorGetCurrentSetPoint
009042 01af      	MOVW R20,R30
                 ; 0016 0396                                 if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
009043 2355      	TST  R21
009044 f442      	BRPL _0x2C01D3
009045 e6eb      	LDI  R30,LOW(_calPnt_S0160000000)
009046 e1fa      	LDI  R31,HIGH(_calPnt_S0160000000)
009047 940e c238 	CALL SUBOPT_0xF8
009049 e0a6      	LDI  R26,LOW(6)
00904a e0b0      	LDI  R27,0
00904b 940e a154 	CALL _memset
                 ; 0016 0397                                 for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 _0x2C01D3:
                +
00904d e000     +LDI R16 , LOW ( 0 )
00904e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C01D5:
                +
00904f 3006     +CPI R16 , LOW ( 6 )
009050 e0e0     +LDI R30 , HIGH ( 6 )
009051 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
009052 f4f4      	BRGE _0x2C01D6
009053 940e d07f 	CALL SUBOPT_0x30D
009055 01f8      	MOVW R30,R16
009056 940e cb26 	CALL SUBOPT_0x268
009058 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
009059 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00905a 940e cefe 	CALL SUBOPT_0x2D3
00905c 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0398                                                     printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                +
00905e eeef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 959 ) )
00905f e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 959 ) )
009060 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 959 ) )
009061 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 959 ) )
                 	__POINTD1FN _0x2C0000,959
009062 940e da29 	CALL __PUTPARD1
009064 01f8      	MOVW R30,R16
009065 940e cb26 	CALL SUBOPT_0x268
009067 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
009068 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
009069 0fa0      	ADD  R26,R16
00906a 1fb1      	ADC  R27,R17
00906b 91ec      	LD   R30,X
00906c 940e c90a 	CALL SUBOPT_0x215
                +
00906e 5f0f     +SUBI R16 , LOW ( - 1 )
00906f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009070 cfde      	RJMP _0x2C01D5
                 _0x2C01D6:
                 ; 0016 0399                                 cursor      = 0;
009071 e0e0      	LDI  R30,LOW(0)
009072 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 039A                             }
                 ; 0016 039B                             else if(cursor == 3){       // -- Calculate
009074 c015      	RJMP _0x2C01D7
                 _0x2C01CD:
009075 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009077 30a3      	CPI  R26,LOW(0x3)
009078 f451      	BRNE _0x2C01D8
                 ; 0016 039C                                 currentPage = P_CAL2_CONFIRM;
009079 e1ef      	LDI  R30,LOW(31)
00907a 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 039D                                 cursor      = 0;
                 ; 0016 039E                                 printOLED("CC%1d",prb1+1);
00907c 940e d061 	CALL SUBOPT_0x308
00907e 940e d036 	CALL SUBOPT_0x300
009080 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 039F                             }
                 ; 0016 03A0                             else{                       // -- Exit -- should not occur
009082 c007      	RJMP _0x2C01D9
                 _0x2C01D8:
                 ; 0016 03A1                                 currentPage = P_MONITOR;
009083 e0e0      	LDI  R30,LOW(0)
009084 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 03A2                                 cursor      = 0;
                 ; 0016 03A3                                 printOLED("M0");
009086 940e cd28 	CALL SUBOPT_0x2A8
009088 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 03A4                             }
                 _0x2C01D9:
                 _0x2C01D7:
                 ; 0016 03A5             break;
                 ; 0016 03A6         }
                 _0x2C01C6:
                 ; 0016 03A7     }
                 ; 0016 03A8     else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
00908a c38a      	RJMP _0x2C01DA
                 _0x2C01C3:
00908b 91a0 14df 	LDS  R26,_currentPage
00908d 31ac      	CPI  R26,LOW(0x1C)
00908e f029      	BREQ _0x2C01DC
00908f 31ad      	CPI  R26,LOW(0x1D)
009090 f019      	BREQ _0x2C01DC
009091 31ae      	CPI  R26,LOW(0x1E)
009092 f009      	BREQ _0x2C01DC
009093 c0c7      	RJMP _0x2C01DB
                 _0x2C01DC:
                 ; 0016 03A9     {
                 ; 0016 03AA         switch(key){
009094 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 03AB         case KEY_MODE   :   currentPage = P_CAL2_MENU;
009096 f4c9      	BRNE _0x2C01E1
009097 e1eb      	LDI  R30,LOW(27)
009098 93e0 14df 	STS  _currentPage,R30
                 ; 0016 03AC                             if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
00909a 91a0 14df 	LDS  R26,_currentPage
00909c 31ac      	CPI  R26,LOW(0x1C)
00909d f411      	BRNE _0x2C01E2
00909e e0e0      	LDI  R30,LOW(0)
00909f c00b      	RJMP _0x2C02CA
                 ; 0016 03AD                             else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 _0x2C01E2:
0090a0 91a0 14df 	LDS  R26,_currentPage
0090a2 31ad      	CPI  R26,LOW(0x1D)
0090a3 f411      	BRNE _0x2C01E4
0090a4 e0e1      	LDI  R30,LOW(1)
0090a5 c005      	RJMP _0x2C02CA
                 ; 0016 03AE                             else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 _0x2C01E4:
0090a6 91a0 14df 	LDS  R26,_currentPage
0090a8 31ae      	CPI  R26,LOW(0x1E)
0090a9 f419      	BRNE _0x2C01E6
0090aa e0e2      	LDI  R30,LOW(2)
                 _0x2C02CA:
0090ab 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 03AF                             printOLED("M8%1d",cursor);                                                                      break;
                 _0x2C01E6:
0090ad 940e d075 	CALL SUBOPT_0x30B
0090af c0aa      	RJMP _0x2C01E0
                 ; 0016 03B0         case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E1:
0090b0 30e2      	CPI  R30,LOW(0x2)
0090b1 e0a0      	LDI  R26,HIGH(0x2)
0090b2 07fa      	CPC  R31,R26
0090b3 f451      	BRNE _0x2C01E7
0090b4 940e ccd9 	CALL SUBOPT_0x2A0
0090b6 30a7      	CPI  R26,LOW(0x7)
0090b7 f01c      	BRLT _0x2C01E8
0090b8 e0e0      	LDI  R30,LOW(0)
0090b9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01E8:
0090bb 940e d086 	CALL SUBOPT_0x30E
0090bd c09c      	RJMP _0x2C01E0
                 ; 0016 03B1         case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E7:
0090be 30e3      	CPI  R30,LOW(0x3)
0090bf e0a0      	LDI  R26,HIGH(0x3)
0090c0 07fa      	CPC  R31,R26
0090c1 f449      	BRNE _0x2C01E9
0090c2 940e ccc5 	CALL SUBOPT_0x29E
0090c4 f41c      	BRGE _0x2C01EA
0090c5 e0e6      	LDI  R30,LOW(6)
0090c6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01EA:
0090c8 940e d086 	CALL SUBOPT_0x30E
0090ca c08f      	RJMP _0x2C01E0
                 ; 0016 03B2         case KEY_OK     :   if(cursor == 6){
                 _0x2C01E9:
0090cb 30e4      	CPI  R30,LOW(0x4)
0090cc e0a0      	LDI  R26,HIGH(0x4)
0090cd 07fa      	CPC  R31,R26
0090ce f011      	BREQ PC+3
0090cf 940c 915a 	JMP _0x2C01E0
0090d1 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090d3 30a6      	CPI  R26,LOW(0x6)
0090d4 f011      	BREQ PC+3
0090d5 940c 911b 	JMP _0x2C01EC
                 ; 0016 03B3 
                 ; 0016 03B4                                 if(currentPage == P_CAL2_SPT1){
0090d7 91a0 14df 	LDS  R26,_currentPage
0090d9 31ac      	CPI  R26,LOW(0x1C)
0090da f451      	BRNE _0x2C01ED
                 ; 0016 03B5                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
0090db 940e d068 	CALL SUBOPT_0x309
0090dd e6e5      	LDI  R30,LOW(101)
0090de e0f0      	LDI  R31,HIGH(101)
0090df 940e d07a 	CALL SUBOPT_0x30C
0090e1 940e 7028 	CALL _sensorSetCurrentSetPoint
0090e3 01af      	MOVW R20,R30
                 ; 0016 03B6                                 }
                 ; 0016 03B7                                 else if(currentPage == P_CAL2_SPT2){
0090e4 c01e      	RJMP _0x2C01EE
                 _0x2C01ED:
0090e5 91a0 14df 	LDS  R26,_currentPage
0090e7 31ad      	CPI  R26,LOW(0x1D)
0090e8 f451      	BRNE _0x2C01EF
                 ; 0016 03B8                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
0090e9 940e d068 	CALL SUBOPT_0x309
0090eb e6e6      	LDI  R30,LOW(102)
0090ec e0f0      	LDI  R31,HIGH(102)
0090ed 940e d07a 	CALL SUBOPT_0x30C
0090ef 940e 7028 	CALL _sensorSetCurrentSetPoint
0090f1 01af      	MOVW R20,R30
                 ; 0016 03B9                                 }
                 ; 0016 03BA                                 else if(currentPage == P_CAL2_SPT3){
0090f2 c010      	RJMP _0x2C01F0
                 _0x2C01EF:
0090f3 91a0 14df 	LDS  R26,_currentPage
0090f5 31ae      	CPI  R26,LOW(0x1E)
0090f6 f451      	BRNE _0x2C01F1
                 ; 0016 03BB                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
0090f7 940e d068 	CALL SUBOPT_0x309
0090f9 e6e7      	LDI  R30,LOW(103)
0090fa e0f0      	LDI  R31,HIGH(103)
0090fb 940e d07a 	CALL SUBOPT_0x30C
0090fd 940e 7028 	CALL _sensorSetCurrentSetPoint
0090ff 01af      	MOVW R20,R30
                 ; 0016 03BC                                 }
                 ; 0016 03BD                                 else{
009100 c002      	RJMP _0x2C01F2
                 _0x2C01F1:
                 ; 0016 03BE                                     // -- should not occur -- //
                 ; 0016 03BF                                     res = -1;
                +
009101 ef4f     +LDI R20 , LOW ( - 1 )
009102 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 ; 0016 03C0                                 }
                 _0x2C01F2:
                 _0x2C01F0:
                 _0x2C01EE:
                 ; 0016 03C1 
                 ; 0016 03C2                                 if(res < 0){
009103 2355      	TST  R21
009104 f44a      	BRPL _0x2C01F3
                 ; 0016 03C3                                     currentPage = P_FAILED;
009105 940e d08b 	CALL SUBOPT_0x30F
                 ; 0016 03C4                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5                                     tmpPrevPage = currentPage;
009107 91e0 14df 	LDS  R30,_currentPage
009109 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 03C6                                     cursor      = 0;
                 ; 0016 03C7                                     printOLED("FL");
00910b 940e cf2a 	CALL SUBOPT_0x2DA
00910d c008      	RJMP _0x2C02CB
                 ; 0016 03C8                                 }
                 ; 0016 03C9                                 else{
                 _0x2C01F3:
                 ; 0016 03CA                                     currentPage = P_FINISH;
00910e 940e d092 	CALL SUBOPT_0x310
                 ; 0016 03CB                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC                                     tmpPrevPage = currentPage;
009110 91e0 14df 	LDS  R30,_currentPage
009112 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 03CD                                     cursor      = 0;
                 ; 0016 03CE                                     printOLED("FI");
009114 940e cf2f 	CALL SUBOPT_0x2DB
                 _0x2C02CB:
009116 940e da29 	CALL __PUTPARD1
009118 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 03CF                                 }
                 ; 0016 03D0                             }
                 ; 0016 03D1                             else if(cursor == 0){   // toggle '+' & '-'
00911a c03f      	RJMP _0x2C01F5
                 _0x2C01EC:
00911b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00911d 30e0      	CPI  R30,0
00911e f4c9      	BRNE _0x2C01F6
                 ; 0016 03D2                                 if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
00911f 940e cfaa 	CALL SUBOPT_0x2EA
009121 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
009122 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
009123 91ec      	LD   R30,X
009124 5fef      	SUBI R30,-LOW(1)
009125 93ec      	ST   X,R30
009126 30e2      	CPI  R30,LOW(0x2)
009127 f020      	BRLO _0x2C01F7
009128 940e d099 	CALL SUBOPT_0x311
00912a e0a0      	LDI  R26,LOW(0)
00912b 83a0      	STD  Z+0,R26
                 ; 0016 03D3                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01F7:
00912c 940e d07f 	CALL SUBOPT_0x30D
00912e 940e cfbd 	CALL SUBOPT_0x2ED
009130 940e d099 	CALL SUBOPT_0x311
009132 81e0      	LD   R30,Z
009133 940e be99 	CALL SUBOPT_0x65
009135 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 03D4                             }
                 ; 0016 03D5                             else if(cursor < 6){
009137 c022      	RJMP _0x2C01F8
                 _0x2C01F6:
009138 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00913a 30a6      	CPI  R26,LOW(0x6)
00913b f4bc      	BRGE _0x2C01F9
                 ; 0016 03D6                                 if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
00913c 940e cfaa 	CALL SUBOPT_0x2EA
00913e 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
00913f 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
009140 940e cfe9 	CALL SUBOPT_0x2F4
009142 f020      	BRLO _0x2C01FA
009143 940e d099 	CALL SUBOPT_0x311
009145 e0a0      	LDI  R26,LOW(0)
009146 83a0      	STD  Z+0,R26
                 ; 0016 03D7                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01FA:
009147 940e d07f 	CALL SUBOPT_0x30D
009149 940e cfbd 	CALL SUBOPT_0x2ED
00914b 940e d099 	CALL SUBOPT_0x311
00914d 81e0      	LD   R30,Z
00914e 940e be99 	CALL SUBOPT_0x65
009150 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 03D8                             }
                 ; 0016 03D9                             else{                       // -- Exit -- should not occur
009152 c007      	RJMP _0x2C01FB
                 _0x2C01F9:
                 ; 0016 03DA                                 currentPage = P_MONITOR;
009153 e0e0      	LDI  R30,LOW(0)
009154 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 03DB                                 cursor      = 0;
                 ; 0016 03DC                                 printOLED("M0");
009156 940e cd28 	CALL SUBOPT_0x2A8
009158 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 03DD                             }
                 _0x2C01FB:
                 _0x2C01F8:
                 _0x2C01F5:
                 ; 0016 03DE             break;
                 ; 0016 03DF         }
                 _0x2C01E0:
                 ; 0016 03E0     }
                 ; 0016 03E1     else if ( currentPage == P_CAL2_CONFIRM )
00915a c2ba      	RJMP _0x2C01FC
                 _0x2C01DB:
00915b 91a0 14df 	LDS  R26,_currentPage
00915d 31af      	CPI  R26,LOW(0x1F)
00915e f589      	BRNE _0x2C01FD
                 ; 0016 03E2     {
                 ; 0016 03E3         switch(key){
00915f 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 03E4         case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
009161 f431      	BRNE _0x2C0201
009162 e1eb      	LDI  R30,LOW(27)
009163 940e ced1 	CALL SUBOPT_0x2CC
009165 940e d075 	CALL SUBOPT_0x30B
009167 c027      	RJMP _0x2C0200
                 ; 0016 03E5         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C0201:
009168 30e2      	CPI  R30,LOW(0x2)
009169 e0a0      	LDI  R26,HIGH(0x2)
00916a 07fa      	CPC  R31,R26
00916b f119      	BREQ _0x2C0200
                 ; 0016 03E6         case KEY_DOWN   :   /* no operation */                                                                  break;
00916c 30e3      	CPI  R30,LOW(0x3)
00916d e0a0      	LDI  R26,HIGH(0x3)
00916e 07fa      	CPC  R31,R26
00916f f0f9      	BREQ _0x2C0200
                 ; 0016 03E7         case KEY_OK     :   res = sensorCalibrate2(prb1);
009170 30e4      	CPI  R30,LOW(0x4)
009171 e0a0      	LDI  R26,HIGH(0x4)
009172 07fa      	CPC  R31,R26
009173 f4d9      	BRNE _0x2C0200
009174 91a0 1a69 	LDS  R26,_prb1_S0160000000
009176 27bb      	CLR  R27
009177 940e 6d2b 	CALL _sensorCalibrate2
009179 01af      	MOVW R20,R30
                 ; 0016 03E8                             if(res < 0){
00917a 2355      	TST  R21
00917b f442      	BRPL _0x2C0205
                 ; 0016 03E9                                 currentPage = P_FAILED;
00917c 940e d08b 	CALL SUBOPT_0x30F
                 ; 0016 03EA                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB                                 tmpPrevPage = P_CAL2_CONFIRM;
00917e e1ef      	LDI  R30,LOW(31)
00917f 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 03EC                                 cursor      = 0;
                 ; 0016 03ED                                 printOLED("FL");
009181 940e cf2a 	CALL SUBOPT_0x2DA
009183 c007      	RJMP _0x2C02CC
                 ; 0016 03EE                             }
                 ; 0016 03EF                             else{
                 _0x2C0205:
                 ; 0016 03F0                                 currentPage = P_FINISH;
009184 940e d092 	CALL SUBOPT_0x310
                 ; 0016 03F1                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2                                 tmpPrevPage = P_CAL2_CONFIRM;
009186 e1ef      	LDI  R30,LOW(31)
009187 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 03F3                                 cursor      = 0;
                 ; 0016 03F4                                 printOLED("FI");
009189 940e cf2f 	CALL SUBOPT_0x2DB
                 _0x2C02CC:
00918b 940e da29 	CALL __PUTPARD1
00918d 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 03F5                             }
                 ; 0016 03F6                             break;
                 ; 0016 03F7         }
                 _0x2C0200:
                 ; 0016 03F8     }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
00918f c285      	RJMP _0x2C0207
                 _0x2C01FD:
009190 91a0 14df 	LDS  R26,_currentPage
009192 32a0      	CPI  R26,LOW(0x20)
009193 f591      	BRNE _0x2C0208
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
009194 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
009196 f449      	BRNE _0x2C020C
009197 e1e5      	LDI  R30,LOW(21)
009198 93e0 14df 	STS  _currentPage,R30
00919a e0e3      	LDI  R30,LOW(3)
00919b 93e0 1a1f 	STS  _cursor_S0160000000,R30
00919d 940e d03a 	CALL SUBOPT_0x301
00919f c025      	RJMP _0x2C020B
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C020C:
0091a0 30e2      	CPI  R30,LOW(0x2)
0091a1 e0a0      	LDI  R26,HIGH(0x2)
0091a2 07fa      	CPC  R31,R26
0091a3 f109      	BREQ _0x2C020B
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
0091a4 30e3      	CPI  R30,LOW(0x3)
0091a5 e0a0      	LDI  R26,HIGH(0x3)
0091a6 07fa      	CPC  R31,R26
0091a7 f0e9      	BREQ _0x2C020B
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
0091a8 30e4      	CPI  R30,LOW(0x4)
0091a9 e0a0      	LDI  R26,HIGH(0x4)
0091aa 07fa      	CPC  R31,R26
0091ab f4c9      	BRNE _0x2C020B
0091ac e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
0091ad e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
0091ae 940e c238 	CALL SUBOPT_0xF8
0091b0 940e bf18 	CALL SUBOPT_0x77
0091b2 940e a154 	CALL _memset
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
0091b4 940e d008 	CALL SUBOPT_0x2FA
0091b6 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
0091b7 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
0091b8 940e cb99 	CALL SUBOPT_0x27B
0091ba d608      	RCALL _r2ecpy
                 ; 0016 0401                             currentPage = P_FINISH;
0091bb e2e4      	LDI  R30,LOW(36)
0091bc 940e cd12 	CALL SUBOPT_0x2A5
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
0091be e2e0      	LDI  R30,LOW(32)
0091bf 940e cf98 	CALL SUBOPT_0x2E7
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
0091c1 940e cf2f 	CALL SUBOPT_0x2DB
0091c3 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 _0x2C020B:
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
0091c5 c24f      	RJMP _0x2C0210
                 _0x2C0208:
0091c6 91a0 14df 	LDS  R26,_currentPage
0091c8 32a1      	CPI  R26,LOW(0x21)
0091c9 f011      	BREQ PC+3
0091ca 940c 92a7 	JMP _0x2C0211
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
0091cc 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
0091ce f569      	BRNE _0x2C0215
0091cf 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
0091d1 e0f0      	LDI  R31,0
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
0091d2 30e2      	CPI  R30,LOW(0x2)
0091d3 e0a0      	LDI  R26,HIGH(0x2)
0091d4 07fa      	CPC  R31,R26
0091d5 f431      	BRNE _0x2C0219
0091d6 e0e2      	LDI  R30,LOW(2)
0091d7 940e ced1 	CALL SUBOPT_0x2CC
0091d9 940e cedd 	CALL SUBOPT_0x2CE
0091db c013      	RJMP _0x2C02CD
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0219:
0091dc 30ee      	CPI  R30,LOW(0xE)
0091dd e0a0      	LDI  R26,HIGH(0xE)
0091de 07fa      	CPC  R31,R26
0091df f431      	BRNE _0x2C021A
0091e0 e0ee      	LDI  R30,LOW(14)
0091e1 940e ced1 	CALL SUBOPT_0x2CC
0091e3 940e d09f 	CALL SUBOPT_0x312
0091e5 c009      	RJMP _0x2C02CD
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C021A:
0091e6 31e1      	CPI  R30,LOW(0x11)
0091e7 e0a0      	LDI  R26,HIGH(0x11)
0091e8 07fa      	CPC  R31,R26
0091e9 f459      	BRNE _0x2C0218
0091ea e1e1      	LDI  R30,LOW(17)
0091eb 940e ced1 	CALL SUBOPT_0x2CC
0091ed 940e d0a4 	CALL SUBOPT_0x313
                 _0x2C02CD:
0091ef 940e da29 	CALL __PUTPARD1
0091f1 940e cfbd 	CALL SUBOPT_0x2ED
0091f3 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0410                             }
                 _0x2C0218:
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
0091f5 940e d0a9 	CALL SUBOPT_0x314
0091f7 940e d004 	CALL SUBOPT_0x2F9
0091f9 940e a154 	CALL _memset
0091fb c0aa      	RJMP _0x2C0214
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0215:
0091fc 30e2      	CPI  R30,LOW(0x2)
0091fd e0a0      	LDI  R26,HIGH(0x2)
0091fe 07fa      	CPC  R31,R26
0091ff f481      	BRNE _0x2C021C
009200 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009202 30a4      	CPI  R26,LOW(0x4)
009203 f414      	BRGE _0x2C021D
009204 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C021D:
009206 940e ccd9 	CALL SUBOPT_0x2A0
009208 30a5      	CPI  R26,LOW(0x5)
009209 f01c      	BRLT _0x2C021E
00920a e0e0      	LDI  R30,LOW(0)
00920b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C021E:
00920d 940e cfdc 	CALL SUBOPT_0x2F2
00920f c096      	RJMP _0x2C0214
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C021C:
009210 30e3      	CPI  R30,LOW(0x3)
009211 e0a0      	LDI  R26,HIGH(0x3)
009212 07fa      	CPC  R31,R26
009213 f479      	BRNE _0x2C021F
009214 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009216 30a4      	CPI  R26,LOW(0x4)
009217 f414      	BRGE _0x2C0220
009218 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C0220:
00921a 940e ccc5 	CALL SUBOPT_0x29E
00921c f41c      	BRGE _0x2C0221
00921d e0e4      	LDI  R30,LOW(4)
00921e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0221:
009220 940e cfdc 	CALL SUBOPT_0x2F2
009222 c083      	RJMP _0x2C0214
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 _0x2C021F:
009223 30e4      	CPI  R30,LOW(0x4)
009224 e0a0      	LDI  R26,HIGH(0x4)
009225 07fa      	CPC  R31,R26
009226 f011      	BREQ PC+3
009227 940c 92a6 	JMP _0x2C0214
009229 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00922b 30a4      	CPI  R26,LOW(0x4)
00922c f011      	BREQ PC+3
00922d 940c 9291 	JMP _0x2C0223
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
00922f 940e d0a9 	CALL SUBOPT_0x314
009231 940e cd93 	CALL SUBOPT_0x2B7
009233 940e cb99 	CALL SUBOPT_0x27B
009235 d5a0      	RCALL _recmp
009236 9730      	SBIW R30,0
009237 f061      	BREQ _0x2C0224
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
009238 e2e3      	LDI  R30,LOW(35)
009239 940e ccf2 	CALL SUBOPT_0x2A2
00923b 940e d0ae 	CALL SUBOPT_0x315
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
00923d 940e d0a9 	CALL SUBOPT_0x314
00923f 940e d004 	CALL SUBOPT_0x2F9
009241 940e a154 	CALL _memset
                 ; 0016 041D                                     break;
009243 c062      	RJMP _0x2C0214
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 _0x2C0224:
009244 940e d0b3 	CALL SUBOPT_0x316
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
009246 f431      	BRNE _0x2C0228
009247 e0e7      	LDI  R30,LOW(7)
009248 940e ccf2 	CALL SUBOPT_0x2A2
00924a 940e cf03 	CALL SUBOPT_0x2D4
00924c c043      	RJMP _0x2C0227
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 _0x2C0228:
00924d 31e0      	CPI  R30,LOW(0x10)
00924e e0a0      	LDI  R26,HIGH(0x10)
00924f 07fa      	CPC  R31,R26
009250 f521      	BRNE _0x2C0229
009251 e1e0      	LDI  R30,LOW(16)
009252 940e ccf2 	CALL SUBOPT_0x2A2
                +
009254 e0ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 988 ) )
009255 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 988 ) )
009256 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 988 ) )
009257 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 988 ) )
                 	__POINTD1FN _0x2C0000,988
009258 940e cec5 	CALL SUBOPT_0x2CA
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
00925a e000     +LDI R16 , LOW ( 0 )
00925b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C022B:
                +
00925c 3005     +CPI R16 , LOW ( 5 )
00925d e0e0     +LDI R30 , HIGH ( 5 )
00925e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00925f f4a4      	BRGE _0x2C022C
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
009260 01d8      	MOVW R26,R16
009261 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
009262 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
009263 940e cd79 	CALL SUBOPT_0x2B3
009265 81e0      	LD   R30,Z
009266 940e cfb5 	CALL SUBOPT_0x2EC
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
009268 01f8      	MOVW R30,R16
009269 940e cb26 	CALL SUBOPT_0x268
00926b e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
00926c e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
00926d 940e cefe 	CALL SUBOPT_0x2D3
00926f 940e caef 	CALL SUBOPT_0x25F
                 ; 0016 0427                                                       }
                +
009271 5f0f     +SUBI R16 , LOW ( - 1 )
009272 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009273 cfe8      	RJMP _0x2C022B
                 _0x2C022C:
                 ; 0016 0428                                                       break;
009274 c01b      	RJMP _0x2C0227
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 _0x2C0229:
009275 31e3      	CPI  R30,LOW(0x13)
009276 e0a0      	LDI  R26,HIGH(0x13)
009277 07fa      	CPC  R31,R26
009278 f471      	BRNE _0x2C022E
009279 e1e3      	LDI  R30,LOW(19)
00927a 93e0 14df 	STS  _currentPage,R30
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
00927c 940e cfff 	CALL SUBOPT_0x2F8
00927e 940e d004 	CALL SUBOPT_0x2F9
009280 940e cd22 	CALL SUBOPT_0x2A7
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                +
009282 e0ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 991 ) )
009283 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 991 ) )
009284 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 991 ) )
009285 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 991 ) )
                 	__POINTD1FN _0x2C0000,991
009286 c005      	RJMP _0x2C02CE
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 _0x2C022E:
                 ; 0016 042F                                                       currentPage = P_MONITOR;
009287 e0e0      	LDI  R30,LOW(0)
009288 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
00928a 940e cd28 	CALL SUBOPT_0x2A8
                 _0x2C02CE:
00928c 940e da29 	CALL __PUTPARD1
00928e 940e cb21 	CALL SUBOPT_0x267
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 _0x2C0227:
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
009290 c015      	RJMP _0x2C022F
                 _0x2C0223:
009291 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009293 30a4      	CPI  R26,LOW(0x4)
009294 f48c      	BRGE _0x2C0230
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
009295 940e cfaa 	CALL SUBOPT_0x2EA
009297 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
009298 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
009299 940e cfe9 	CALL SUBOPT_0x2F4
00929b f024      	BRLT _0x2C0231
00929c 940e d0ba 	CALL SUBOPT_0x317
00929e e0a0      	LDI  R26,LOW(0)
00929f 83a0      	STD  Z+0,R26
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0231:
0092a0 940e cff4 	CALL SUBOPT_0x2F6
0092a2 940e d0ba 	CALL SUBOPT_0x317
0092a4 940e cffb 	CALL SUBOPT_0x2F7
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 _0x2C0230:
                 _0x2C022F:
                 ; 0016 043A         }
                 _0x2C0214:
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
0092a6 c16e      	RJMP _0x2C0232
                 _0x2C0211:
0092a7 91a0 14df 	LDS  R26,_currentPage
0092a9 32a2      	CPI  R26,LOW(0x22)
0092aa f011      	BREQ PC+3
0092ab 940c 9322 	JMP _0x2C0233
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
0092ad 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
0092af f419      	BRNE _0x2C0237
0092b0 940e d017 	CALL SUBOPT_0x2FC
0092b2 c06e      	RJMP _0x2C0236
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0237:
0092b3 30e2      	CPI  R30,LOW(0x2)
0092b4 e0a0      	LDI  R26,HIGH(0x2)
0092b5 07fa      	CPC  R31,R26
0092b6 f481      	BRNE _0x2C0238
0092b7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092b9 30a4      	CPI  R26,LOW(0x4)
0092ba f414      	BRGE _0x2C0239
0092bb 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C0239:
0092bd 940e ccd9 	CALL SUBOPT_0x2A0
0092bf 30a5      	CPI  R26,LOW(0x5)
0092c0 f01c      	BRLT _0x2C023A
0092c1 e0e0      	LDI  R30,LOW(0)
0092c2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023A:
0092c4 940e cfdc 	CALL SUBOPT_0x2F2
0092c6 c05a      	RJMP _0x2C0236
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0238:
0092c7 30e3      	CPI  R30,LOW(0x3)
0092c8 e0a0      	LDI  R26,HIGH(0x3)
0092c9 07fa      	CPC  R31,R26
0092ca f479      	BRNE _0x2C023B
0092cb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092cd 30a4      	CPI  R26,LOW(0x4)
0092ce f414      	BRGE _0x2C023C
0092cf 940e cfd7 	CALL SUBOPT_0x2F1
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C023C:
0092d1 940e ccc5 	CALL SUBOPT_0x29E
0092d3 f41c      	BRGE _0x2C023D
0092d4 e0e4      	LDI  R30,LOW(4)
0092d5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023D:
0092d7 940e cfdc 	CALL SUBOPT_0x2F2
0092d9 c047      	RJMP _0x2C0236
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 _0x2C023B:
0092da 30e4      	CPI  R30,LOW(0x4)
0092db e0a0      	LDI  R26,HIGH(0x4)
0092dc 07fa      	CPC  R31,R26
0092dd f011      	BREQ PC+3
0092de 940c 9321 	JMP _0x2C0236
0092e0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092e2 30a4      	CPI  R26,LOW(0x4)
0092e3 f541      	BRNE _0x2C023F
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
0092e4 940e d0a9 	CALL SUBOPT_0x314
                +
0092e6 01fe     +MOVW R30 , R28
0092e7 5be0     +SUBI R30 , LOW ( - 80 )
0092e8 4fff     +SBCI R31 , HIGH ( - 80 )
0092e9 9001     +LD R0 , Z +
0092ea 81f0     +LD R31 , Z
0092eb 2de0     +MOV R30 , R0
                 	__GETW1SX 80
0092ec 940e cb99 	CALL SUBOPT_0x27B
0092ee d4e7      	RCALL _recmp
0092ef 9730      	SBIW R30,0
0092f0 f079      	BREQ _0x2C0240
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
0092f1 e0e1      	LDI  R30,LOW(1)
0092f2 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
0092f4 e2e3      	LDI  R30,LOW(35)
0092f5 940e ccf2 	CALL SUBOPT_0x2A2
0092f7 940e d0ae 	CALL SUBOPT_0x315
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
0092f9 940e d0a9 	CALL SUBOPT_0x314
0092fb 940e d004 	CALL SUBOPT_0x2F9
0092fd 940e a154 	CALL _memset
                 ; 0016 044B                                     break;
0092ff c021      	RJMP _0x2C0236
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 _0x2C0240:
009300 e1e5      	LDI  R30,LOW(21)
009301 940e ccf2 	CALL SUBOPT_0x2A2
009303 940e d03a 	CALL SUBOPT_0x301
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
009305 940e d0a9 	CALL SUBOPT_0x314
009307 940e d004 	CALL SUBOPT_0x2F9
009309 940e a154 	CALL _memset
                 ; 0016 0451                                 break;
00930b c015      	RJMP _0x2C0236
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 _0x2C023F:
00930c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00930e 30a4      	CPI  R26,LOW(0x4)
00930f f48c      	BRGE _0x2C0242
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
009310 940e cfaa 	CALL SUBOPT_0x2EA
009312 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
009313 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
009314 940e cfe9 	CALL SUBOPT_0x2F4
009316 f024      	BRLT _0x2C0243
009317 940e d0ba 	CALL SUBOPT_0x317
009319 e0a0      	LDI  R26,LOW(0)
00931a 83a0      	STD  Z+0,R26
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0243:
00931b 940e cff4 	CALL SUBOPT_0x2F6
00931d 940e d0ba 	CALL SUBOPT_0x317
00931f 940e cffb 	CALL SUBOPT_0x2F7
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 _0x2C0242:
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 _0x2C0236:
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
009321 c0f3      	RJMP _0x2C0244
                 _0x2C0233:
009322 91a0 14df 	LDS  R26,_currentPage
009324 32a3      	CPI  R26,LOW(0x23)
009325 f011      	BREQ PC+3
009326 940c 936c 	JMP _0x2C0245
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
009328 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
00932a f409      	BRNE _0x2C0249
00932b c03f      	RJMP _0x2C0248
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C0249:
00932c 30e2      	CPI  R30,LOW(0x2)
00932d e0a0      	LDI  R26,HIGH(0x2)
00932e 07fa      	CPC  R31,R26
00932f f1d9      	BREQ _0x2C0248
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
009330 30e3      	CPI  R30,LOW(0x3)
009331 e0a0      	LDI  R26,HIGH(0x3)
009332 07fa      	CPC  R31,R26
009333 f1b9      	BREQ _0x2C0248
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
009334 30e4      	CPI  R30,LOW(0x4)
009335 e0a0      	LDI  R26,HIGH(0x4)
009336 07fa      	CPC  R31,R26
009337 f599      	BRNE _0x2C0248
009338 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
00933a 940e c8bc 	CALL SUBOPT_0x20A
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
00933c f459      	BRNE _0x2C0250
00933d e0e1      	LDI  R30,LOW(1)
00933e 93e0 14df 	STS  _currentPage,R30
009340 e0e3      	LDI  R30,LOW(3)
009341 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
009343 e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
009344 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
009345 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
009346 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
009347 c01d      	RJMP _0x2C02CF
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 _0x2C0250:
009348 30e2      	CPI  R30,LOW(0x2)
009349 e0a0      	LDI  R26,HIGH(0x2)
00934a 07fa      	CPC  R31,R26
00934b f431      	BRNE _0x2C0251
00934c e0e2      	LDI  R30,LOW(2)
00934d 940e ced1 	CALL SUBOPT_0x2CC
00934f 940e cedd 	CALL SUBOPT_0x2CE
009351 c013      	RJMP _0x2C02CF
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0251:
009352 30ee      	CPI  R30,LOW(0xE)
009353 e0a0      	LDI  R26,HIGH(0xE)
009354 07fa      	CPC  R31,R26
009355 f431      	BRNE _0x2C0252
009356 e0ee      	LDI  R30,LOW(14)
009357 940e ced1 	CALL SUBOPT_0x2CC
009359 940e d09f 	CALL SUBOPT_0x312
00935b c009      	RJMP _0x2C02CF
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C0252:
00935c 31e1      	CPI  R30,LOW(0x11)
00935d e0a0      	LDI  R26,HIGH(0x11)
00935e 07fa      	CPC  R31,R26
00935f f459      	BRNE _0x2C024F
009360 e1e1      	LDI  R30,LOW(17)
009361 940e ced1 	CALL SUBOPT_0x2CC
009363 940e d0a4 	CALL SUBOPT_0x313
                 _0x2C02CF:
009365 940e da29 	CALL __PUTPARD1
009367 940e cfbd 	CALL SUBOPT_0x2ED
009369 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 0469                             }
                 _0x2C024F:
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 _0x2C0248:
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
00936b c0a9      	RJMP _0x2C0254
                 _0x2C0245:
00936c 91a0 14df 	LDS  R26,_currentPage
00936e 32a4      	CPI  R26,LOW(0x24)
00936f f019      	BREQ _0x2C0256
009370 32a5      	CPI  R26,LOW(0x25)
009371 f009      	BREQ _0x2C0256
009372 c0a2      	RJMP _0x2C0255
                 _0x2C0256:
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
009373 940e ccc0 	CALL SUBOPT_0x29D
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
009375 f409      	BRNE _0x2C025B
009376 c09e      	RJMP _0x2C025A
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C025B:
009377 30e2      	CPI  R30,LOW(0x2)
009378 e0a0      	LDI  R26,HIGH(0x2)
009379 07fa      	CPC  R31,R26
00937a f409      	BRNE _0x2C025C
00937b c099      	RJMP _0x2C025A
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 _0x2C025C:
00937c 30e3      	CPI  R30,LOW(0x3)
00937d e0a0      	LDI  R26,HIGH(0x3)
00937e 07fa      	CPC  R31,R26
00937f f409      	BRNE _0x2C025D
009380 c094      	RJMP _0x2C025A
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 _0x2C025D:
009381 30e4      	CPI  R30,LOW(0x4)
009382 e0a0      	LDI  R26,HIGH(0x4)
009383 07fa      	CPC  R31,R26
009384 f011      	BREQ PC+3
009385 940c 9415 	JMP _0x2C025A
009387 940e d0b3 	CALL SUBOPT_0x316
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
009389 f499      	BRNE _0x2C0262
00938a e0e7      	LDI  R30,LOW(7)
00938b 940e d0c0 	CALL SUBOPT_0x318
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
00938d 30a8      	CPI  R26,LOW(0x8)
00938e f411      	BRNE _0x2C0263
00938f e0e0      	LDI  R30,LOW(0)
009390 c005      	RJMP _0x2C02D0
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 _0x2C0263:
009391 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009393 30ad      	CPI  R26,LOW(0xD)
009394 f419      	BRNE _0x2C0265
009395 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D0:
009396 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 _0x2C0265:
                +
009398 e5ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
009399 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00939a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00939b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00939c c06e      	RJMP _0x2C02D1
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 _0x2C0262:
00939d 30ee      	CPI  R30,LOW(0xE)
00939e e0a0      	LDI  R26,HIGH(0xE)
00939f 07fa      	CPC  R31,R26
0093a0 f431      	BRNE _0x2C0266
0093a1 e0ee      	LDI  R30,LOW(14)
0093a2 940e ced1 	CALL SUBOPT_0x2CC
0093a4 940e d09f 	CALL SUBOPT_0x312
0093a6 c064      	RJMP _0x2C02D1
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 _0x2C0266:
0093a7 31e1      	CPI  R30,LOW(0x11)
0093a8 e0a0      	LDI  R26,HIGH(0x11)
0093a9 07fa      	CPC  R31,R26
0093aa f489      	BRNE _0x2C0267
0093ab e1e1      	LDI  R30,LOW(17)
0093ac 940e d0c0 	CALL SUBOPT_0x318
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
0093ae 31a2      	CPI  R26,LOW(0x12)
0093af f411      	BRNE _0x2C0268
0093b0 e0e0      	LDI  R30,LOW(0)
0093b1 c005      	RJMP _0x2C02D2
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 _0x2C0268:
0093b2 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093b4 31a4      	CPI  R26,LOW(0x14)
0093b5 f419      	BRNE _0x2C026A
0093b6 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D2:
0093b7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 _0x2C026A:
0093b9 940e d0a4 	CALL SUBOPT_0x313
0093bb c04f      	RJMP _0x2C02D1
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 _0x2C0267:
0093bc 31e5      	CPI  R30,LOW(0x15)
0093bd e0a0      	LDI  R26,HIGH(0x15)
0093be 07fa      	CPC  R31,R26
0093bf f4c9      	BRNE _0x2C026B
0093c0 e1e5      	LDI  R30,LOW(21)
0093c1 940e d0c0 	CALL SUBOPT_0x318
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
0093c3 31a6      	CPI  R26,LOW(0x16)
0093c4 f411      	BRNE _0x2C026C
0093c5 e0e0      	LDI  R30,LOW(0)
0093c6 c00b      	RJMP _0x2C02D3
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 _0x2C026C:
0093c7 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093c9 31ab      	CPI  R26,LOW(0x1B)
0093ca f411      	BRNE _0x2C026E
0093cb e0e2      	LDI  R30,LOW(2)
0093cc c005      	RJMP _0x2C02D3
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 _0x2C026E:
0093cd 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093cf 32a0      	CPI  R26,LOW(0x20)
0093d0 f419      	BRNE _0x2C0270
0093d1 e0e3      	LDI  R30,LOW(3)
                 _0x2C02D3:
0093d2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 _0x2C0270:
                +
0093d4 ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
0093d5 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
0093d6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
0093d7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
0093d8 c032      	RJMP _0x2C02D1
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 _0x2C026B:
0093d9 31e8      	CPI  R30,LOW(0x18)
0093da e0a0      	LDI  R26,HIGH(0x18)
0093db 07fa      	CPC  R31,R26
0093dc f461      	BRNE _0x2C0271
0093dd e1e8      	LDI  R30,LOW(24)
0093de 940e ccf2 	CALL SUBOPT_0x2A2
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
0093e0 940e d02f 	CALL SUBOPT_0x2FF
0093e2 91e0 1a6a 	LDS  R30,_prb2_S0160000000
0093e4 e0f0      	LDI  R31,0
0093e5 9631      	ADIW R30,1
0093e6 940e d919 	CALL __CWD1
0093e8 c028      	RJMP _0x2C02D4
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 _0x2C0271:
0093e9 31eb      	CPI  R30,LOW(0x1B)
0093ea e0a0      	LDI  R26,HIGH(0x1B)
0093eb 07fa      	CPC  R31,R26
0093ec f541      	BRNE _0x2C0261
0093ed e1eb      	LDI  R30,LOW(27)
0093ee 940e d0c0 	CALL SUBOPT_0x318
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
0093f0 31ac      	CPI  R26,LOW(0x1C)
0093f1 f411      	BRNE _0x2C0273
0093f2 e0e0      	LDI  R30,LOW(0)
0093f3 c011      	RJMP _0x2C02D5
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 _0x2C0273:
0093f4 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093f6 31ad      	CPI  R26,LOW(0x1D)
0093f7 f411      	BRNE _0x2C0275
0093f8 e0e1      	LDI  R30,LOW(1)
0093f9 c00b      	RJMP _0x2C02D5
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 _0x2C0275:
0093fa 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093fc 31ae      	CPI  R26,LOW(0x1E)
0093fd f411      	BRNE _0x2C0277
0093fe e0e2      	LDI  R30,LOW(2)
0093ff c005      	RJMP _0x2C02D5
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 _0x2C0277:
009400 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009402 31af      	CPI  R26,LOW(0x1F)
009403 f419      	BRNE _0x2C0279
009404 e0e3      	LDI  R30,LOW(3)
                 _0x2C02D5:
009405 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 _0x2C0279:
                +
009407 ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
009408 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
009409 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
00940a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
                 _0x2C02D1:
00940b 940e da29 	CALL __PUTPARD1
00940d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00940f 940e d913 	CALL __CBD1
                 _0x2C02D4:
009411 940e da29 	CALL __PUTPARD1
009413 940e cb01 	CALL SUBOPT_0x263
                 ; 0016 048D                             }
                 _0x2C0261:
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 _0x2C025A:
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 _0x2C0255:
                 _0x2C0254:
                 _0x2C0244:
                 _0x2C0232:
                 _0x2C0210:
                 _0x2C0207:
                 _0x2C01FC:
                 _0x2C01DA:
                 _0x2C01C2:
                 _0x2C01B2:
                 _0x2C01A7:
                 _0x2C0197:
                 _0x2C0187:
                 _0x2C0177:
                 _0x2C0160:
                 _0x2C014D:
                 _0x2C013C:
                 _0x2C012D:
                 _0x2C011E:
                 _0x2C010A:
                 _0x2C00FF:
                 _0x2C00F0:
                 _0x2C00E6:
                 _0x2C00D3:
                 _0x2C00BD:
                 _0x2C00A7:
                 _0x2C0091:
                 _0x2C007E:
                 _0x2C006C:
                 _0x2C0062:
                 _0x2C0058:
                 _0x2C004E:
                 _0x2C0028:
                 _0x2C0019:
                 _0x2C0006:
009415 940e daa0 	CALL __LOADLOCR6
009417 96ef      	ADIW R28,63
009418 9668      	ADIW R28,24
009419 9508      	RET
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 _showProbeConfig:
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
00941a 93ba      	ST   -Y,R27
00941b 93aa      	ST   -Y,R26
00941c 9764      	SBIW R28,20
00941d e184      	LDI  R24,20
00941e e0a0      	LDI  R26,LOW(0)
00941f e0b0      	LDI  R27,HIGH(0)
009420 e1ec      	LDI  R30,LOW(_0x2C027A*2)
009421 e5fd      	LDI  R31,HIGH(_0x2C027A*2)
009422 e060      	LDI  R22,BYTE3(_0x2C027A*2)
009423 940e daa7 	CALL __INITLOCB
009425 940e ca92 	CALL SUBOPT_0x250
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                +
009427 e020     +LDI R18 , LOW ( 0 )
009428 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
009429 8da8      	LDD  R26,Y+24
00942a 8db9      	LDD  R27,Y+24+1
00942b e1ed      	LDI  R30,LOW(29)
00942c 940e d95a 	CALL __MULB1W2U
00942e 54e2      	SUBI R30,LOW(-_sensor_config)
00942f 4efe      	SBCI R31,HIGH(-_sensor_config)
009430 01df      	MOVW R26,R30
009431 940e d0c5 	CALL SUBOPT_0x319
009433 01de      	MOVW R26,R28
009434 9656      	ADIW R26,22
009435 d0aa      	RCALL _get_current_sampling
009436 018f      	MOVW R16,R30
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
009437 2311      	TST  R17
009438 f42a      	BRPL _0x2C027B
                 ; 0016 04A8         val[0] = 0;
009439 e0e0      	LDI  R30,LOW(0)
00943a 8bec      	STD  Y+20,R30
                 ; 0016 04A9         val[1] = 0;
00943b 8bed      	STD  Y+21,R30
                 ; 0016 04AA         val[2] = 0;
00943c 8bee      	STD  Y+22,R30
                 ; 0016 04AB         val[3] = 0;
00943d 8bef      	STD  Y+23,R30
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 _0x2C027B:
                +
00943e e020     +LDI R18 , LOW ( 0 )
00943f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0016 04AF     sampling += val[0] * 100;
009440 89ac      	LDD  R26,Y+20
009441 e6e4      	LDI  R30,LOW(100)
009442 02ea      	MULS R30,R26
009443 01f0      	MOVW R30,R0
                +
009444 0f2e     +ADD R18 , R30
009445 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B0     sampling += val[1] * 10;
009446 89ad      	LDD  R26,Y+21
009447 e0ea      	LDI  R30,LOW(10)
009448 02ea      	MULS R30,R26
009449 01f0      	MOVW R30,R0
                +
00944a 0f2e     +ADD R18 , R30
00944b 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B1     sampling += val[2];
00944c 89ee      	LDD  R30,Y+22
00944d e0f0      	LDI  R31,0
00944e fde7      	SBRC R30,7
00944f efff      	SER  R31
                +
009450 0f2e     +ADD R18 , R30
009451 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
009452 940e be55 	CALL SUBOPT_0x5A
009454 e0e0      	LDI  R30,LOW(0)
009455 93ea      	ST   -Y,R30
009456 940e c7c1 	CALL SUBOPT_0x1E1
009458 940e a154 	CALL _memset
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                +
00945a ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00945b e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00945c 8da8      	LDD  R26,Y+24
00945d 8db9      	LDD  R27,Y+24+1
00945e 940e c8f8 	CALL SUBOPT_0x212
009460 f439      	BRNE _0x2C027C
009461 940e be55 	CALL SUBOPT_0x5A
                +
009463 e1e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 994 ) )
009464 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 994 ) )
009465 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 994 ) )
009466 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 994 ) )
                 	__POINTD1FN _0x2C0000,994
009467 c006      	RJMP _0x2C02D6
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 _0x2C027C:
009468 940e be55 	CALL SUBOPT_0x5A
                +
00946a e1e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 998 ) )
00946b e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 998 ) )
00946c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 998 ) )
00946d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 998 ) )
                 	__POINTD1FN _0x2C0000,998
                 _0x2C02D6:
00946e 940e da29 	CALL __PUTPARD1
009470 940e cd6b 	CALL SUBOPT_0x2B1
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
009472 01fe      	MOVW R30,R28
009473 9634      	ADIW R30,4
009474 940e c238 	CALL SUBOPT_0xF8
009476 940e c7c1 	CALL SUBOPT_0x1E1
009478 940e a154 	CALL _memset
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
00947a 8da8      	LDD  R26,Y+24
00947b 8db9      	LDD  R27,Y+24+1
00947c e1ed      	LDI  R30,LOW(29)
00947d 940e d95a 	CALL __MULB1W2U
                +
00947f 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
009480 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
009481 81a0      	LD   R26,Z
009482 30a1      	CPI  R26,LOW(0x1)
009483 f449      	BRNE _0x2C027E
009484 01fe      	MOVW R30,R28
009485 9634      	ADIW R30,4
009486 93fa      	ST   -Y,R31
009487 93ea      	ST   -Y,R30
                +
009488 e1ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1002 ) )
009489 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1002 ) )
00948a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1002 ) )
00948b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1002 ) )
                 	__POINTD1FN _0x2C0000,1002
00948c c008      	RJMP _0x2C02D7
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 _0x2C027E:
00948d 01fe      	MOVW R30,R28
00948e 9634      	ADIW R30,4
00948f 93fa      	ST   -Y,R31
009490 93ea      	ST   -Y,R30
                +
009491 e2e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1009 ) )
009492 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1009 ) )
009493 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1009 ) )
009494 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1009 ) )
                 	__POINTD1FN _0x2C0000,1009
                 _0x2C02D7:
009495 940e da29 	CALL __PUTPARD1
009497 940e cd6b 	CALL SUBOPT_0x2B1
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                +
009499 e2e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1017 ) )
00949a e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1017 ) )
00949b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1017 ) )
00949c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1017 ) )
                 	__POINTD1FN _0x2C0000,1017
00949d 940e c225 	CALL SUBOPT_0xF4
00949f 940e cb26 	CALL SUBOPT_0x268
0094a1 940e d0ca 	CALL SUBOPT_0x31A
0094a3 01fe      	MOVW R30,R28
0094a4 967c      	ADIW R30,28
0094a5 940e bd4a 	CALL SUBOPT_0x34
0094a7 01fe      	MOVW R30,R28
0094a8 9678      	ADIW R30,24
0094a9 940e bd4a 	CALL SUBOPT_0x34
0094ab 940e d0cf 	CALL SUBOPT_0x31B
0094ad 940e d0d8 	CALL SUBOPT_0x31C
0094af 940e d0de 	CALL SUBOPT_0x31D
0094b1 940e d0e9 	CALL SUBOPT_0x31E
0094b3 940e d0f2 	CALL SUBOPT_0x31F
0094b5 940e d0fc 	CALL SUBOPT_0x320
0094b7 e28c      	LDI  R24,44
0094b8 940e 9afc 	CALL _printDebug
0094ba 96e0      	ADIW R28,48
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                +
0094bb e3eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1035 ) )
0094bc e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1035 ) )
0094bd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1035 ) )
0094be e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1035 ) )
                 	__POINTD1FN _0x2C0000,1035
0094bf 940e c225 	CALL SUBOPT_0xF4
0094c1 940e cb26 	CALL SUBOPT_0x268
0094c3 940e d0ca 	CALL SUBOPT_0x31A
0094c5 01fe      	MOVW R30,R28
0094c6 967c      	ADIW R30,28
0094c7 940e bd4a 	CALL SUBOPT_0x34
0094c9 01fe      	MOVW R30,R28
0094ca 9678      	ADIW R30,24
0094cb 940e bd4a 	CALL SUBOPT_0x34
0094cd 940e d0cf 	CALL SUBOPT_0x31B
0094cf 940e d0d8 	CALL SUBOPT_0x31C
0094d1 940e d0de 	CALL SUBOPT_0x31D
0094d3 940e d0e9 	CALL SUBOPT_0x31E
0094d5 940e d0f2 	CALL SUBOPT_0x31F
0094d7 940e d0fc 	CALL SUBOPT_0x320
0094d9 e28c      	LDI  R24,44
0094da 940e 7c8c 	CALL _printOLED
0094dc 96e0      	ADIW R28,48
                 ; 0016 04CF 
                 ; 0016 04D0 }
0094dd 940e daa2 	CALL __LOADLOCR4
0094df c159      	RJMP _0x20E0036
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 _get_current_sampling:
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
0094e0 940e d10b 	CALL SUBOPT_0x321
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                +
0094e2 e6e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1078 ) )
0094e3 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1078 ) )
0094e4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1078 ) )
0094e5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1078 ) )
                 	__POINTD1FN _0x2C0000,1078
0094e6 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
0094e8 85aa      	LDD  R26,Y+10
0094e9 85bb      	LDD  R27,Y+10+1
0094ea e1e0      	LDI  R30,LOW(3600)
0094eb e0fe      	LDI  R31,HIGH(3600)
0094ec 940e d978 	CALL __DIVW21U
0094ee 01af      	MOVW R20,R30
                 ; 0016 04DA     hr_c = period % 3600;
0094ef 85aa      	LDD  R26,Y+10
0094f0 85bb      	LDD  R27,Y+10+1
0094f1 e1e0      	LDI  R30,LOW(3600)
0094f2 e0fe      	LDI  R31,HIGH(3600)
0094f3 940e d9c1 	CALL __MODW21U
0094f5 83ee      	STD  Y+6,R30
0094f6 83ff      	STD  Y+6+1,R31
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
0094f7 2400      	CLR  R0
0094f8 1604      	CP   R0,R20
0094f9 0605      	CPC  R0,R21
0094fa f440      	BRSH _0x2C0281
                +
0094fb 3e48     +CPI R20 , LOW ( 1000 )
0094fc e0e3     +LDI R30 , HIGH ( 1000 )
0094fd 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
0094fe f420      	BRSH _0x2C0281
0094ff 81ae      	LDD  R26,Y+6
009500 81bf      	LDD  R27,Y+6+1
009501 9710      	SBIW R26,0
009502 f009      	BREQ _0x2C0282
                 _0x2C0281:
009503 c00b      	RJMP _0x2C0280
                 _0x2C0282:
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                +
009504 e9e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1126 ) )
009505 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1126 ) )
009506 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1126 ) )
009507 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1126 ) )
                 	__POINTD1FN _0x2C0000,1126
009508 940e d111 	CALL SUBOPT_0x322
00950a 940e bc5e 	CALL SUBOPT_0x12
                 ; 0016 04DD         val[0] = hr / 100;
00950c 940e d116 	CALL SUBOPT_0x323
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
00950e c0b8      	RJMP _0x20E0037
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 _0x2C0280:
00950f 85aa      	LDD  R26,Y+10
009510 85bb      	LDD  R27,Y+10+1
009511 e3ec      	LDI  R30,LOW(60)
009512 e0f0      	LDI  R31,HIGH(60)
009513 940e d978 	CALL __DIVW21U
009515 018f      	MOVW R16,R30
                 ; 0016 04E6     min_c = period % 60;
009516 85aa      	LDD  R26,Y+10
009517 85bb      	LDD  R27,Y+10+1
009518 e3ec      	LDI  R30,LOW(60)
009519 e0f0      	LDI  R31,HIGH(60)
00951a 940e d9c1 	CALL __MODW21U
00951c 019f      	MOVW R18,R30
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
00951d 2400      	CLR  R0
00951e 1600      	CP   R0,R16
00951f 0601      	CPC  R0,R17
009520 f440      	BRSH _0x2C0284
                +
009521 3e08     +CPI R16 , LOW ( 1000 )
009522 e0e3     +LDI R30 , HIGH ( 1000 )
009523 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
009524 f420      	BRSH _0x2C0284
009525 2400      	CLR  R0
009526 1602      	CP   R0,R18
009527 0603      	CPC  R0,R19
009528 f009      	BREQ _0x2C0285
                 _0x2C0284:
009529 c00b      	RJMP _0x2C0283
                 _0x2C0285:
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                +
00952a ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1158 ) )
00952b e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1158 ) )
00952c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1158 ) )
00952d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1158 ) )
                 	__POINTD1FN _0x2C0000,1158
00952e 940e d142 	CALL SUBOPT_0x324
009530 940e bc5e 	CALL SUBOPT_0x12
                 ; 0016 04E9         val[0] = min / 100;
009532 940e d147 	CALL SUBOPT_0x325
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
009534 c092      	RJMP _0x20E0037
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 _0x2C0283:
009535 85aa      	LDD  R26,Y+10
009536 85bb      	LDD  R27,Y+10+1
009537 3ea8      	CPI  R26,LOW(0x3E8)
009538 e0e3      	LDI  R30,HIGH(0x3E8)
009539 07be      	CPC  R27,R30
00953a f5a8      	BRSH _0x2C0286
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                +
00953b ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1191 ) )
00953c e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1191 ) )
00953d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1191 ) )
00953e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1191 ) )
                 	__POINTD1FN _0x2C0000,1191
00953f 940e da29 	CALL __PUTPARD1
009541 85ee      	LDD  R30,Y+14
009542 85ff      	LDD  R31,Y+14+1
009543 940e bd4a 	CALL SUBOPT_0x34
009545 940e bc5e 	CALL SUBOPT_0x12
                 ; 0016 04F3         val[0] = period / 100;
009547 940e d173 	CALL SUBOPT_0x326
009549 940e d978 	CALL __DIVW21U
00954b 85a8      	LDD  R26,Y+8
00954c 85b9      	LDD  R27,Y+8+1
00954d 93ec      	ST   X,R30
                 ; 0016 04F4         val[1] = (period % 100) / 10;
00954e 940e d173 	CALL SUBOPT_0x326
009550 940e d9c1 	CALL __MODW21U
009552 01df      	MOVW R26,R30
009553 e0ea      	LDI  R30,LOW(10)
009554 e0f0      	LDI  R31,HIGH(10)
009555 940e d978 	CALL __DIVW21U
                +
009557 85a8     +LDD R26 , Y + 8
009558 85b9     +LDD R27 , Y + 8 + 1
009559 9611     +ADIW R26 , 1
00955a 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
00955b 940e d173 	CALL SUBOPT_0x326
00955d 940e d9c1 	CALL __MODW21U
00955f 01df      	MOVW R26,R30
009560 e0ea      	LDI  R30,LOW(10)
009561 e0f0      	LDI  R31,HIGH(10)
009562 940e d9c1 	CALL __MODW21U
                +
009564 85a8     +LDD R26 , Y + 8
009565 85b9     +LDD R27 , Y + 8 + 1
009566 9612     +ADIW R26 , 2
009567 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
                 ; 0016 04F6         val[3] = 0;
009568 85a8      	LDD  R26,Y+8
009569 85b9      	LDD  R27,Y+8+1
00956a 9613      	ADIW R26,3
00956b e0e0      	LDI  R30,LOW(0)
00956c 93ec      	ST   X,R30
                 ; 0016 04F7         return 0;
00956d e0e0      	LDI  R30,LOW(0)
00956e e0f0      	LDI  R31,HIGH(0)
00956f c057      	RJMP _0x20E0037
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 _0x2C0286:
                +
009570 3e08     +CPI R16 , LOW ( 1000 )
009571 e0e3     +LDI R30 , HIGH ( 1000 )
009572 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
009573 f4d0      	BRSH _0x2C0287
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                +
009574 efe8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1224 ) )
009575 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1224 ) )
009576 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1224 ) )
009577 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1224 ) )
                 	__POINTD1FN _0x2C0000,1224
009578 940e d142 	CALL SUBOPT_0x324
00957a 01f9      	MOVW R30,R18
00957b 940e c3d2 	CALL SUBOPT_0x141
                 ; 0016 04FC         if(min_c > 30){
                +
00957d 312f     +CPI R18 , LOW ( 31 )
00957e e0e0     +LDI R30 , HIGH ( 31 )
00957f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
009580 f010      	BRLO _0x2C0288
                 ; 0016 04FD             min++;
                +
009581 5f0f     +SUBI R16 , LOW ( - 1 )
009582 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 _0x2C0288:
                +
009583 e2e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1264 ) )
009584 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1264 ) )
009585 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1264 ) )
009586 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1264 ) )
                 	__POINTD1FN _0x2C0000,1264
009587 940e d142 	CALL SUBOPT_0x324
009589 940e bc5e 	CALL SUBOPT_0x12
                 ; 0016 0500         val[0] = min / 100;
00958b 940e d147 	CALL SUBOPT_0x325
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
00958d c039      	RJMP _0x20E0037
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 _0x2C0287:
                +
00958e 3e48     +CPI R20 , LOW ( 1000 )
00958f e0e3     +LDI R30 , HIGH ( 1000 )
009590 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
009591 f568      	BRSH _0x2C0289
                 ; 0016 0508         min   = hr_c / 60;
009592 81ae      	LDD  R26,Y+6
009593 81bf      	LDD  R27,Y+6+1
009594 e3ec      	LDI  R30,LOW(60)
009595 e0f0      	LDI  R31,HIGH(60)
009596 940e d978 	CALL __DIVW21U
009598 018f      	MOVW R16,R30
                 ; 0016 0509         min_c = hr_c % 60;
009599 81ae      	LDD  R26,Y+6
00959a 81bf      	LDD  R27,Y+6+1
00959b e3ec      	LDI  R30,LOW(60)
00959c e0f0      	LDI  R31,HIGH(60)
00959d 940e d9c1 	CALL __MODW21U
00959f 019f      	MOVW R18,R30
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                +
0095a0 e2ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1278 ) )
0095a1 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1278 ) )
0095a2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1278 ) )
0095a3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1278 ) )
                 	__POINTD1FN _0x2C0000,1278
0095a4 940e d111 	CALL SUBOPT_0x322
0095a6 01f8      	MOVW R30,R16
0095a7 940e bd4a 	CALL SUBOPT_0x34
0095a9 01f9      	MOVW R30,R18
0095aa 940e bd4a 	CALL SUBOPT_0x34
0095ac 940e be9f 	CALL SUBOPT_0x66
                 ; 0016 050B         if(min > 30){
                +
0095ae 310f     +CPI R16 , LOW ( 31 )
0095af e0e0     +LDI R30 , HIGH ( 31 )
0095b0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,31
0095b1 f010      	BRLO _0x2C028A
                 ; 0016 050C             hr++;
                +
0095b2 5f4f     +SUBI R20 , LOW ( - 1 )
0095b3 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 _0x2C028A:
                +
0095b4 e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1325 ) )
0095b5 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1325 ) )
0095b6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1325 ) )
0095b7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1325 ) )
                 	__POINTD1FN _0x2C0000,1325
0095b8 940e d111 	CALL SUBOPT_0x322
0095ba 940e bc5e 	CALL SUBOPT_0x12
                 ; 0016 050F         val[0] = hr / 100;
0095bc 940e d116 	CALL SUBOPT_0x323
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
0095be c008      	RJMP _0x20E0037
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 _0x2C0289:
                +
0095bf e6ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1338 ) )
0095c0 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1338 ) )
0095c1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1338 ) )
0095c2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1338 ) )
                 	__POINTD1FN _0x2C0000,1338
0095c3 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 0517     return -1;
0095c5 efef      	LDI  R30,LOW(65535)
0095c6 efff      	LDI  R31,HIGH(65535)
                 _0x20E0037:
0095c7 940e daa0 	CALL __LOADLOCR6
0095c9 962c      	ADIW R28,12
0095ca 9508      	RET
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 _get_current_vref:
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
0095cb 93ba      	ST   -Y,R27
0095cc 93aa      	ST   -Y,R26
0095cd 9762      	SBIW R28,18
0095ce 940e da99 	CALL __SAVELOCR6
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
0095d0 940e d178 	CALL SUBOPT_0x327
0095d2 01df      	MOVW R26,R30
0095d3 01cb      	MOVW R24,R22
0095d4 940e c2b3 	CALL SUBOPT_0x10D
0095d6 940e d870 	CALL __CMPF12
0095d8 f009      	BREQ PC+2
0095d9 f410      	BRCC PC+3
0095da 940c 95df 	JMP  _0x2C028B
                 ; 0016 0526         return -1;
0095dc efef      	LDI  R30,LOW(65535)
0095dd efff      	LDI  R31,HIGH(65535)
0095de c058      	RJMP _0x20E0035
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 _0x2C028B:
0095df 940e d178 	CALL SUBOPT_0x327
0095e1 940e d17d 	CALL SUBOPT_0x328
                 ; 0016 052A     ftoa(vref,2,valTmp);
0095e3 940e d182 	CALL SUBOPT_0x329
0095e5 e0e2      	LDI  R30,LOW(2)
0095e6 93ea      	ST   -Y,R30
0095e7 01de      	MOVW R26,R28
0095e8 9653      	ADIW R26,19
0095e9 940e 9e68 	CALL _ftoa
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
0095eb 01de      	MOVW R26,R28
0095ec 961e      	ADIW R26,14
0095ed 940e a19b 	CALL _strlen
0095ef 30e4      	CPI  R30,LOW(0x4)
0095f0 e0a0      	LDI  R26,HIGH(0x4)
0095f1 07fa      	CPC  R31,R26
0095f2 f019      	BREQ _0x2C028C
0095f3 efef      	LDI  R30,LOW(65535)
0095f4 efff      	LDI  R31,HIGH(65535)
0095f5 c041      	RJMP _0x20E0035
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 _0x2C028C:
                +
0095f6 e8ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1375 ) )
0095f7 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1375 ) )
0095f8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1375 ) )
0095f9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1375 ) )
                 	__POINTD1FN _0x2C0000,1375
0095fa 940e da29 	CALL __PUTPARD1
0095fc 940e d178 	CALL SUBOPT_0x327
0095fe 940e da29 	CALL __PUTPARD1
009600 01fe      	MOVW R30,R28
009601 9676      	ADIW R30,22
009602 940e c3d2 	CALL SUBOPT_0x141
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
009604 85ee      	LDD  R30,Y+14
009605 53e0      	SUBI R30,LOW(48)
009606 8da8      	LDD  R26,Y+24
009607 8db9      	LDD  R27,Y+24+1
009608 93ec      	ST   X,R30
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
009609 89e8      	LDD  R30,Y+16
00960a 53e0      	SUBI R30,LOW(48)
                +
00960b 8da8     +LDD R26 , Y + 24
00960c 8db9     +LDD R27 , Y + 24 + 1
00960d 9611     +ADIW R26 , 1
00960e 93ec     +ST X , R30
                 	__PUTB1SNS 24,1
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
00960f 89e9      	LDD  R30,Y+17
009610 53e0      	SUBI R30,LOW(48)
                +
009611 8da8     +LDD R26 , Y + 24
009612 8db9     +LDD R27 , Y + 24 + 1
009613 9612     +ADIW R26 , 2
009614 93ec     +ST X , R30
                 	__PUTB1SNS 24,2
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                +
009615 ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1417 ) )
009616 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1417 ) )
009617 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1417 ) )
009618 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1417 ) )
                 	__POINTD1FN _0x2C0000,1417
009619 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 0540     for(i=0;i<3;i++){
                +
00961b e000     +LDI R16 , LOW ( 0 )
00961c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C028E:
                +
00961d 3003     +CPI R16 , LOW ( 3 )
00961e e0e0     +LDI R30 , HIGH ( 3 )
00961f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
009620 f474      	BRGE _0x2C028F
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                +
009621 ede4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1444 ) )
009622 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1444 ) )
009623 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1444 ) )
009624 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1444 ) )
                 	__POINTD1FN _0x2C0000,1444
009625 940e da29 	CALL __PUTPARD1
009627 01f8      	MOVW R30,R16
009628 8dac      	LDD  R26,Y+28
009629 8dbd      	LDD  R27,Y+28+1
00962a 940e c597 	CALL SUBOPT_0x185
                 ; 0016 0542     }
                +
00962c 5f0f     +SUBI R16 , LOW ( - 1 )
00962d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00962e cfee      	RJMP _0x2C028E
                 _0x2C028F:
                 ; 0016 0543     printDebug("\r\n");
                +
00962f efe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
009630 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
009631 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
009632 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
009633 940e bbec 	CALL SUBOPT_0x3
                 ; 0016 0544 
                 ; 0016 0545     return 0;
009635 e0e0      	LDI  R30,LOW(0)
009636 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0035:
009637 940e daa0 	CALL __LOADLOCR6
                 _0x20E0036:
009639 966a      	ADIW R28,26
00963a 9508      	RET
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 _getNetworkInfo:
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
00963b 93ba      ; 0016 0551     offset = 7;
00963c 93aa      	ST   -Y,R27
00963d 9760      	ST   -Y,R26
00963e 940e da9b 	SBIW R28,16
                 	CALL __SAVELOCR4
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                +
009640 e027     +LDI R18 , LOW ( 7 )
009641 e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
009642 0189      	MOVW R16,R18
                 _0x2C0291:
009643 940e d187 	CALL SUBOPT_0x32A
009645 f554      	BRGE _0x2C0292
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009646 940e d18c 	CALL SUBOPT_0x32B
009648 0fea      	ADD  R30,R26
009649 1ffb      	ADC  R31,R27
00964a 93ff      	PUSH R31
00964b 93ef      	PUSH R30
00964c 940e d192 	CALL SUBOPT_0x32C
00964e 93ef      	PUSH R30
00964f 940e d1a0 	CALL SUBOPT_0x32D
009651 91af      	POP  R26
009652 0fea      	ADD  R30,R26
009653 91af      	POP  R26
009654 91bf      	POP  R27
009655 940e d1ab 	CALL SUBOPT_0x32E
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
009657 940e d1b4 	CALL SUBOPT_0x32F
009659 940e d1ba 	CALL SUBOPT_0x330
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
00965b 9631      	ADIW R30,1
00965c 940e d1b4 	CALL SUBOPT_0x32F
00965e 940e d1c5 	CALL SUBOPT_0x331
009660 940e c878 	CALL SUBOPT_0x1FF
009662 940e d1ca 	CALL SUBOPT_0x332
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
009664 9632      	ADIW R30,2
009665 940e d1b4 	CALL SUBOPT_0x32F
009667 940e d1c5 	CALL SUBOPT_0x331
009669 940e ca07 	CALL SUBOPT_0x23C
00966b 01db      	MOVW R26,R22
00966c 93ec      	ST   X,R30
                 ; 0016 0557     }
                +
00966d 5f0f     +SUBI R16 , LOW ( - 1 )
00966e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00966f cfd3      	RJMP _0x2C0291
                 _0x2C0292:
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                +
009670 e02b     +LDI R18 , LOW ( 11 )
009671 e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
009672 0189      	MOVW R16,R18
                 _0x2C0294:
009673 940e d187 	CALL SUBOPT_0x32A
009675 f554      	BRGE _0x2C0295
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009676 940e d1d1 	CALL SUBOPT_0x333
009678 0fea      	ADD  R30,R26
009679 1ffb      	ADC  R31,R27
00967a 93ff      	PUSH R31
00967b 93ef      	PUSH R30
00967c 940e d192 	CALL SUBOPT_0x32C
00967e 93ef      	PUSH R30
00967f 940e d1a0 	CALL SUBOPT_0x32D
009681 91af      	POP  R26
009682 0fea      	ADD  R30,R26
009683 91af      	POP  R26
009684 91bf      	POP  R27
009685 940e d1ab 	CALL SUBOPT_0x32E
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
009687 940e d1d7 	CALL SUBOPT_0x334
009689 940e d1ba 	CALL SUBOPT_0x330
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
00968b 9631      	ADIW R30,1
00968c 940e d1d7 	CALL SUBOPT_0x334
00968e 940e d1c5 	CALL SUBOPT_0x331
009690 940e c878 	CALL SUBOPT_0x1FF
009692 940e d1ca 	CALL SUBOPT_0x332
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
009694 9632      	ADIW R30,2
009695 940e d1d7 	CALL SUBOPT_0x334
009697 940e d1c5 	CALL SUBOPT_0x331
009699 940e ca07 	CALL SUBOPT_0x23C
00969b 01db      	MOVW R26,R22
00969c 93ec      	ST   X,R30
                 ; 0016 055F     }
                +
00969d 5f0f     +SUBI R16 , LOW ( - 1 )
00969e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00969f cfd3      	RJMP _0x2C0294
                 _0x2C0295:
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                +
0096a0 e02f     +LDI R18 , LOW ( 15 )
0096a1 e030     +LDI R19 , HIGH ( 15 )
                 	__GETWRN 18,19,15
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
0096a2 0189      	MOVW R16,R18
                 _0x2C0297:
0096a3 940e d187 	CALL SUBOPT_0x32A
0096a5 f554      	BRGE _0x2C0298
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0096a6 940e d1dd 	CALL SUBOPT_0x335
0096a8 0fea      	ADD  R30,R26
0096a9 1ffb      	ADC  R31,R27
0096aa 93ff      	PUSH R31
0096ab 93ef      	PUSH R30
0096ac 940e d192 	CALL SUBOPT_0x32C
0096ae 93ef      	PUSH R30
0096af 940e d1a0 	CALL SUBOPT_0x32D
0096b1 91af      	POP  R26
0096b2 0fea      	ADD  R30,R26
0096b3 91af      	POP  R26
0096b4 91bf      	POP  R27
0096b5 940e d1ab 	CALL SUBOPT_0x32E
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
0096b7 940e d1e3 	CALL SUBOPT_0x336
0096b9 940e d1ba 	CALL SUBOPT_0x330
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
0096bb 9631      	ADIW R30,1
0096bc 940e d1e3 	CALL SUBOPT_0x336
0096be 940e d1c5 	CALL SUBOPT_0x331
0096c0 940e c878 	CALL SUBOPT_0x1FF
0096c2 940e d1ca 	CALL SUBOPT_0x332
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
0096c4 9632      	ADIW R30,2
0096c5 940e d1e3 	CALL SUBOPT_0x336
0096c7 940e d1c5 	CALL SUBOPT_0x331
0096c9 940e ca07 	CALL SUBOPT_0x23C
0096cb 01db      	MOVW R26,R22
0096cc 93ec      	ST   X,R30
                 ; 0016 0567     }
                +
0096cd 5f0f     +SUBI R16 , LOW ( - 1 )
0096ce 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0096cf cfd3      	RJMP _0x2C0297
                 _0x2C0298:
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                +
0096d0 e125     +LDI R18 , LOW ( 21 )
0096d1 e030     +LDI R19 , HIGH ( 21 )
                 	__GETWRN 18,19,21
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
0096d2 0189      	MOVW R16,R18
                 _0x2C029A:
0096d3 940e d187 	CALL SUBOPT_0x32A
0096d5 f5ac      	BRGE _0x2C029B
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0096d6 01f8      	MOVW R30,R16
0096d7 1be2      	SUB  R30,R18
0096d8 0bf3      	SBC  R31,R19
0096d9 01de      	MOVW R26,R28
0096da 9614      	ADIW R26,4
0096db 0fea      	ADD  R30,R26
0096dc 1ffb      	ADC  R31,R27
0096dd 93ff      	PUSH R31
0096de 93ef      	PUSH R30
0096df 940e d192 	CALL SUBOPT_0x32C
0096e1 93ef      	PUSH R30
0096e2 940e d1a0 	CALL SUBOPT_0x32D
0096e4 91af      	POP  R26
0096e5 0fea      	ADD  R30,R26
0096e6 91af      	POP  R26
0096e7 91bf      	POP  R27
0096e8 940e d1ab 	CALL SUBOPT_0x32E
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
0096ea 940e d1e9 	CALL SUBOPT_0x337
0096ec 940e d1f3 	CALL SUBOPT_0x338
0096ee 01df      	MOVW R26,R30
0096ef e6e4      	LDI  R30,LOW(100)
0096f0 e0f0      	LDI  R31,HIGH(100)
0096f1 940e d98b 	CALL __DIVW21
0096f3 01db      	MOVW R26,R22
0096f4 940e d1ab 	CALL SUBOPT_0x32E
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
0096f6 9631      	ADIW R30,1
0096f7 940e d1e9 	CALL SUBOPT_0x337
0096f9 91ac      	LD   R26,X
0096fa 27bb      	CLR  R27
0096fb 940e c878 	CALL SUBOPT_0x1FF
0096fd 940e d1ca 	CALL SUBOPT_0x332
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
0096ff 9632      	ADIW R30,2
009700 940e d1e9 	CALL SUBOPT_0x337
009702 91ac      	LD   R26,X
009703 27bb      	CLR  R27
009704 940e ca07 	CALL SUBOPT_0x23C
009706 01db      	MOVW R26,R22
009707 93ec      	ST   X,R30
                 ; 0016 056F     }
                +
009708 5f0f     +SUBI R16 , LOW ( - 1 )
009709 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00970a cfc8      	RJMP _0x2C029A
                 _0x2C029B:
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                +
00970b ede9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1449 ) )
00970c e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1449 ) )
00970d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1449 ) )
00970e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1449 ) )
                 	__POINTD1FN _0x2C0000,1449
00970f 940e da29 	CALL __PUTPARD1
009711 89ec      	LDD  R30,Y+20
009712 940e be99 	CALL SUBOPT_0x65
009714 8de9      	LDD  R30,Y+25
009715 940e be99 	CALL SUBOPT_0x65
009717 8dee      	LDD  R30,Y+30
009718 940e be99 	CALL SUBOPT_0x65
00971a a1eb      	LDD  R30,Y+35
00971b 940e be99 	CALL SUBOPT_0x65
00971d 940e c4b3 	CALL SUBOPT_0x163
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                +
00971f efee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1486 ) )
009720 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1486 ) )
009721 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1486 ) )
009722 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1486 ) )
                 	__POINTD1FN _0x2C0000,1486
009723 940e da29 	CALL __PUTPARD1
009725 89e8      	LDD  R30,Y+16
009726 940e be99 	CALL SUBOPT_0x65
009728 89ed      	LDD  R30,Y+21
009729 940e be99 	CALL SUBOPT_0x65
00972b 8dea      	LDD  R30,Y+26
00972c 940e be99 	CALL SUBOPT_0x65
00972e 8def      	LDD  R30,Y+31
00972f 940e be99 	CALL SUBOPT_0x65
009731 940e c4b3 	CALL SUBOPT_0x163
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                +
009733 e2e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1523 ) )
009734 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1523 ) )
009735 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1523 ) )
009736 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1523 ) )
                 	__POINTD1FN _0x2C0000,1523
009737 940e c835 	CALL SUBOPT_0x1F8
009739 89e9      	LDD  R30,Y+17
00973a 940e be99 	CALL SUBOPT_0x65
00973c 89ee      	LDD  R30,Y+22
00973d 940e be99 	CALL SUBOPT_0x65
00973f 8deb      	LDD  R30,Y+27
009740 940e be99 	CALL SUBOPT_0x65
009742 940e c4b3 	CALL SUBOPT_0x163
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                +
009744 e4e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1560 ) )
009745 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1560 ) )
009746 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1560 ) )
009747 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1560 ) )
                 	__POINTD1FN _0x2C0000,1560
009748 940e da29 	CALL __PUTPARD1
00974a 85e8      	LDD  R30,Y+8
00974b 940e be99 	CALL SUBOPT_0x65
00974d 85ed      	LDD  R30,Y+13
00974e 940e be99 	CALL SUBOPT_0x65
009750 89ea      	LDD  R30,Y+18
009751 940e be99 	CALL SUBOPT_0x65
009753 89ef      	LDD  R30,Y+23
009754 940e be99 	CALL SUBOPT_0x65
009756 940e c4b3 	CALL SUBOPT_0x163
                 ; 0016 0575 
                 ; 0016 0576     return 0;
009758 940e c428 	CALL SUBOPT_0x150
00975a 966e      	ADIW R28,30
00975b 9508      	RET
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 _set_vref:
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
00975c 940e c21a ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
00975e 930a      	CALL SUBOPT_0xF1
                 	ST   -Y,R16
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
00975f 81ae      ;	tmpf -> Y+2
009760 81bf      	LDD  R26,Y+6
009761 940e c69f 	LDD  R27,Y+6+1
009763 81ee      	CALL SUBOPT_0x1B4
009764 81ff      	LDD  R30,Y+6
009765 940e c6a4 	LDD  R31,Y+6+1
009767 81ee      	CALL SUBOPT_0x1B5
009768 81ff      	LDD  R30,Y+6
009769 940e cb61 	LDD  R31,Y+6+1
00976b 0fea      	CALL SUBOPT_0x270
00976c 1ffb      	ADD  R30,R26
00976d 018f      	ADC  R31,R27
                 	MOVW R16,R30
00976e 01f8      ; 0016 05D9     tmpf = (float) (tmp / 100.0);
00976f 940e c89e 	MOVW R30,R16
009771 01df      	CALL SUBOPT_0x205
009772 01cb      	MOVW R26,R30
                +
009773 e0e0     +LDI R30 , LOW ( 0x42C80000 )
009774 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
009775 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
009776 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
009777 940e d82b 	CALL __DIVF21
009779 940e c0a4 	CALL SUBOPT_0xB4
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                +
00977b e6ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1597 ) )
00977c e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1597 ) )
00977d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1597 ) )
00977e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1597 ) )
                 	__POINTD1FN _0x2C0000,1597
00977f 940e c35a 	CALL SUBOPT_0x129
009781 91ec      	LD   R30,X
009782 940e be99 	CALL SUBOPT_0x65
009784 85ee      	LDD  R30,Y+14
009785 85ff      	LDD  R31,Y+14+1
009786 81e1      	LDD  R30,Z+1
009787 940e be99 	CALL SUBOPT_0x65
009789 89ea      	LDD  R30,Y+18
00978a 89fb      	LDD  R31,Y+18+1
00978b 81e2      	LDD  R30,Z+2
00978c 940e be99 	CALL SUBOPT_0x65
00978e 01f8      	MOVW R30,R16
00978f 940e cb26 	CALL SUBOPT_0x268
009791 940e c0fa 	CALL SUBOPT_0xC4
009793 940e da29 	CALL __PUTPARD1
009795 e184      	LDI  R24,20
009796 940e 9afc 	CALL _printDebug
009798 9668      	ADIW R28,24
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
009799 940e c0a9 	CALL SUBOPT_0xB5
00979b e8a9      	LDI  R26,LOW(_eep_vref_val)
00979c e0b5      	LDI  R27,HIGH(_eep_vref_val)
00979d 940e da5c 	CALL __EEPROMWRD
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
00979f c07a      	RJMP _0x20E0034
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 _h2i:
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
0097a0 93aa      	ST   -Y,R26
                 ;	hex -> Y+0
0097a1 81a8      	LD   R26,Y
0097a2 34a1      	CPI  R26,LOW(0x41)
0097a3 f010      	BRLO _0x2C029D
0097a4 34a7      	CPI  R26,LOW(0x47)
0097a5 f008      	BRLO _0x2C029E
                 _0x2C029D:
0097a6 c004      	RJMP _0x2C029C
                 _0x2C029E:
0097a7 940e d1f6 	CALL SUBOPT_0x339
0097a9 97f7      	SBIW R30,55
0097aa c20b      	RJMP _0x20E0031
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 _0x2C029C:
0097ab 81a8      	LD   R26,Y
0097ac 36a1      	CPI  R26,LOW(0x61)
0097ad f010      	BRLO _0x2C02A1
0097ae 36a7      	CPI  R26,LOW(0x67)
0097af f008      	BRLO _0x2C02A2
                 _0x2C02A1:
0097b0 c005      	RJMP _0x2C02A0
                 _0x2C02A2:
0097b1 940e d1f6 	CALL SUBOPT_0x339
0097b3 55e7      	SUBI R30,LOW(87)
0097b4 40f0      	SBCI R31,HIGH(87)
0097b5 c200      	RJMP _0x20E0031
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 _0x2C02A0:
0097b6 81a8      	LD   R26,Y
0097b7 33a0      	CPI  R26,LOW(0x30)
0097b8 f010      	BRLO _0x2C02A5
0097b9 33aa      	CPI  R26,LOW(0x3A)
0097ba f008      	BRLO _0x2C02A6
                 _0x2C02A5:
0097bb c004      	RJMP _0x2C02A4
                 _0x2C02A6:
0097bc 940e d1f6 	CALL SUBOPT_0x339
0097be 97f0      	SBIW R30,48
0097bf c1f6      	RJMP _0x20E0031
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 _0x2C02A4:
0097c0 e0e0      	LDI  R30,LOW(0)
0097c1 e0f0      	LDI  R31,HIGH(0)
0097c2 c1f3      	RJMP _0x20E0031
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 _r2ecpy:
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
0097c3 940e bf59 	CALL SUBOPT_0x81
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
0097c5 e000     +LDI R16 , LOW ( 0 )
0097c6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AB:
0097c7 940e bf5e 	CALL SUBOPT_0x82
0097c9 f45c      	BRGE _0x2C02AC
                 ; 0016 05FE         dest[i] = src[i];
0097ca 01f8      	MOVW R30,R16
0097cb 940e c64f 	CALL SUBOPT_0x1A7
0097cd 010f      	MOVW R0,R30
0097ce 940e bf63 	CALL SUBOPT_0x83
0097d0 940e c393 	CALL SUBOPT_0x134
                 ; 0016 05FF     }
                +
0097d2 5f0f     +SUBI R16 , LOW ( - 1 )
0097d3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0097d4 cff2      	RJMP _0x2C02AB
                 _0x2C02AC:
                 ; 0016 0600     return 0;
0097d5 c044      	RJMP _0x20E0034
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 _recmp:
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
0097d6 940e bf59 	CALL SUBOPT_0x81
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
0097d8 e000     +LDI R16 , LOW ( 0 )
0097d9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AE:
0097da 940e bf5e 	CALL SUBOPT_0x82
0097dc f544      	BRGE _0x2C02AF
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                +
0097dd e9e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1635 ) )
0097de e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1635 ) )
0097df e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1635 ) )
0097e0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1635 ) )
                 	__POINTD1FN _0x2C0000,1635
0097e1 940e da29 	CALL __PUTPARD1
0097e3 01f8      	MOVW R30,R16
0097e4 85aa      	LDD  R26,Y+10
0097e5 85bb      	LDD  R27,Y+10+1
0097e6 0fae      	ADD  R26,R30
0097e7 1fbf      	ADC  R27,R31
0097e8 91ec      	LD   R30,X
0097e9 940e be99 	CALL SUBOPT_0x65
0097eb 01f8      	MOVW R30,R16
0097ec 85ac      	LDD  R26,Y+12
0097ed 85bd      	LDD  R27,Y+12+1
0097ee 0fae      	ADD  R26,R30
0097ef 1fbf      	ADC  R27,R31
0097f0 940e da50 	CALL __EEPROMRDB
0097f2 940e be99 	CALL SUBOPT_0x65
0097f4 e8ad      	LDI  R26,LOW(_userPwd)
0097f5 e0b5      	LDI  R27,HIGH(_userPwd)
0097f6 940e c240 	CALL SUBOPT_0xFA
0097f8 940e be99 	CALL SUBOPT_0x65
0097fa e9a1      	LDI  R26,LOW(_servicePwd)
0097fb e0b5      	LDI  R27,HIGH(_servicePwd)
0097fc 940e c240 	CALL SUBOPT_0xFA
0097fe 940e be99 	CALL SUBOPT_0x65
009800 940e c4b3 	CALL SUBOPT_0x163
                 ; 0016 0609     }
                +
009802 5f0f     +SUBI R16 , LOW ( - 1 )
009803 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009804 cfd5      	RJMP _0x2C02AE
                 _0x2C02AF:
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                +
009805 e000     +LDI R16 , LOW ( 0 )
009806 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02B1:
009807 940e bf5e 	CALL SUBOPT_0x82
009809 f484      	BRGE _0x2C02B2
                 ; 0016 060C         if(src1[i] != src2[i]){
00980a 01f8      	MOVW R30,R16
00980b 940e c8f3 	CALL SUBOPT_0x211
00980d 900c      	LD   R0,X
00980e 940e bf63 	CALL SUBOPT_0x83
009810 940e da50 	CALL __EEPROMRDB
009812 15e0      	CP   R30,R0
009813 f019      	BREQ _0x2C02B3
                 ; 0016 060D             return -1;
009814 efef      	LDI  R30,LOW(65535)
009815 efff      	LDI  R31,HIGH(65535)
009816 c005      	RJMP _0x20E0033
                 ; 0016 060E         }
                 ; 0016 060F     }
                 _0x2C02B3:
                +
009817 5f0f     +SUBI R16 , LOW ( - 1 )
009818 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009819 cfed      	RJMP _0x2C02B1
                 _0x2C02B2:
                 ; 0016 0610     return 0;
                 _0x20E0034:
00981a e0e0      	LDI  R30,LOW(0)
00981b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0033:
00981c 8119      	LDD  R17,Y+1
00981d 8108      	LDD  R16,Y+0
00981e 9628      	ADIW R28,8
00981f 9508      	RET
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 ;#include "adc.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int DEBUG_setDateTime(void)
                 ; 0017 0021 {
                 
                 	.CSEG
                 _DEBUG_setDateTime:
                 ; 0017 0022     unsigned char   i;
                 ; 0017 0023     unsigned char   buffer[32];
                 ; 0017 0024     int             tz;
                 ; 0017 0025 
                 ; 0017 0026     struct rtc_structure rtcSet;
                 ; 0017 0027 
                 ; 0017 0028     for(i=0;i<4;i++)
009820 97ea      	SBIW R28,58
009821 940e da9b 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
009823 e010      	LDI  R17,LOW(0)
                 _0x2E0005:
009824 3014      	CPI  R17,4
009825 f450      	BRSH _0x2E0006
                 ; 0017 0029     {
                 ; 0017 002A         buffer[i] = rxPackage3[i+8];
009826 940e c087 	CALL SUBOPT_0xAE
009828 940e d1f9 	CALL SUBOPT_0x33A
                +
00982a 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
00982b 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
00982c 81e0      	LD   R30,Z
00982d 93ec      	ST   X,R30
                 ; 0017 002B     }
00982e 5f1f      	SUBI R17,-1
00982f cff4      	RJMP _0x2E0005
                 _0x2E0006:
                 ; 0017 002C     buffer[4] = 0;
009830 940e d1fe 	CALL SUBOPT_0x33B
                 ; 0017 002D 
                 ; 0017 002E     rtcSet.year = atol(buffer);
009832 940e c070 	CALL SUBOPT_0xAA
                 ; 0017 002F 
                 ; 0017 0030     printDebug("get year = %d\r\n",rtcSet.year);
                +
009834 ecee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
009835 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
009836 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
009837 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
009838 940e c81a 	CALL SUBOPT_0x1F2
00983a 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0017 0031 
                 ; 0017 0032     for(i=0;i<2;i++)
00983c e010      	LDI  R17,LOW(0)
                 _0x2E0008:
00983d 3012      	CPI  R17,2
00983e f450      	BRSH _0x2E0009
                 ; 0017 0033     {
                 ; 0017 0034         buffer[i] = rxPackage3[i+13];
00983f 940e c087 	CALL SUBOPT_0xAE
009841 940e d1f9 	CALL SUBOPT_0x33A
                +
009843 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
009844 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
009845 81e0      	LD   R30,Z
009846 93ec      	ST   X,R30
                 ; 0017 0035     }
009847 5f1f      	SUBI R17,-1
009848 cff4      	RJMP _0x2E0008
                 _0x2E0009:
                 ; 0017 0036     buffer[2] = 0;
009849 940e d204 	CALL SUBOPT_0x33C
                 ; 0017 0037 
                 ; 0017 0038     rtcSet.month = atol(buffer);
00984b 940e d20a 	CALL SUBOPT_0x33D
                 ; 0017 0039 
                 ; 0017 003A     printDebug("get month = %d\r\n",rtcSet.month);
                +
00984d edee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 16 ) )
00984e e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 16 ) )
00984f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 16 ) )
009850 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 16 ) )
                 	__POINTD1FN _0x2E0000,16
009851 940e bfa1 	CALL SUBOPT_0x8D
009853 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0017 003B 
                 ; 0017 003C     for(i=0;i<2;i++)
009855 e010      	LDI  R17,LOW(0)
                 _0x2E000B:
009856 3012      	CPI  R17,2
009857 f450      	BRSH _0x2E000C
                 ; 0017 003D     {
                 ; 0017 003E         buffer[i] = rxPackage3[i+16];
009858 940e c087 	CALL SUBOPT_0xAE
00985a 940e d1f9 	CALL SUBOPT_0x33A
                +
00985c 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
00985d 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
00985e 81e0      	LD   R30,Z
00985f 93ec      	ST   X,R30
                 ; 0017 003F     }
009860 5f1f      	SUBI R17,-1
009861 cff4      	RJMP _0x2E000B
                 _0x2E000C:
                 ; 0017 0040     buffer[2] = 0;
009862 940e d204 	CALL SUBOPT_0x33C
                 ; 0017 0041 
                 ; 0017 0042     rtcSet.date = atol(buffer);
009864 940e c205 	CALL SUBOPT_0xED
                 ; 0017 0043 
                 ; 0017 0044     printDebug("get date = %d\r\n",rtcSet.date);
                +
009866 eeef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 33 ) )
009867 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 33 ) )
009868 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 33 ) )
009869 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 33 ) )
                 	__POINTD1FN _0x2E0000,33
00986a 940e be5a 	CALL SUBOPT_0x5B
00986c 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 0045 
                 ; 0017 0046     for(i=0;i<2;i++)
00986e e010      	LDI  R17,LOW(0)
                 _0x2E000E:
00986f 3012      	CPI  R17,2
009870 f450      	BRSH _0x2E000F
                 ; 0017 0047     {
                 ; 0017 0048         buffer[i] = rxPackage3[i+19];
009871 940e c087 	CALL SUBOPT_0xAE
009873 940e d1f9 	CALL SUBOPT_0x33A
                +
009875 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
009876 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
009877 81e0      	LD   R30,Z
009878 93ec      	ST   X,R30
                 ; 0017 0049     }
009879 5f1f      	SUBI R17,-1
00987a cff4      	RJMP _0x2E000E
                 _0x2E000F:
                 ; 0017 004A     buffer[2] = 0;
00987b 940e d204 	CALL SUBOPT_0x33C
                 ; 0017 004B 
                 ; 0017 004C     rtcSet.hour = atol(buffer);
00987d 940e d20f 	CALL SUBOPT_0x33E
                 ; 0017 004D 
                 ; 0017 004E     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
00987f efef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 49 ) )
009880 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 49 ) )
009881 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 49 ) )
009882 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 49 ) )
                 	__POINTD1FN _0x2E0000,49
009883 940e da29 	CALL __PUTPARD1
009885 940e c1a6 	CALL SUBOPT_0xDF
009887 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0017 004F 
                 ; 0017 0050     for(i=0;i<2;i++)
009889 e010      	LDI  R17,LOW(0)
                 _0x2E0011:
00988a 3012      	CPI  R17,2
00988b f450      	BRSH _0x2E0012
                 ; 0017 0051     {
                 ; 0017 0052         buffer[i] = rxPackage3[i+22];
00988c 940e c087 	CALL SUBOPT_0xAE
00988e 940e d1f9 	CALL SUBOPT_0x33A
                +
009890 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
009891 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
009892 81e0      	LD   R30,Z
009893 93ec      	ST   X,R30
                 ; 0017 0053     }
009894 5f1f      	SUBI R17,-1
009895 cff4      	RJMP _0x2E0011
                 _0x2E0012:
                 ; 0017 0054     buffer[2] = 0;
009896 940e d204 	CALL SUBOPT_0x33C
                 ; 0017 0055 
                 ; 0017 0056     rtcSet.min = atol(buffer);
009898 940e d214 	CALL SUBOPT_0x33F
                 ; 0017 0057 
                 ; 0017 0058     printDebug("get min = %d\r\n",rtcSet.min);
                +
00989a e0ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 65 ) )
00989b e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 65 ) )
00989c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 65 ) )
00989d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 65 ) )
                 	__POINTD1FN _0x2E0000,65
00989e 940e da29 	CALL __PUTPARD1
0098a0 940e c22a 	CALL SUBOPT_0xF5
0098a2 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 0059 
                 ; 0017 005A     for(i=0;i<2;i++)
0098a4 e010      	LDI  R17,LOW(0)
                 _0x2E0014:
0098a5 3012      	CPI  R17,2
0098a6 f450      	BRSH _0x2E0015
                 ; 0017 005B     {
                 ; 0017 005C         buffer[i] = rxPackage3[i+25];
0098a7 940e c087 	CALL SUBOPT_0xAE
0098a9 940e d1f9 	CALL SUBOPT_0x33A
                +
0098ab 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
0098ac 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
0098ad 81e0      	LD   R30,Z
0098ae 93ec      	ST   X,R30
                 ; 0017 005D     }
0098af 5f1f      	SUBI R17,-1
0098b0 cff4      	RJMP _0x2E0014
                 _0x2E0015:
                 ; 0017 005E     buffer[2] = 0;
0098b1 940e d204 	CALL SUBOPT_0x33C
                 ; 0017 005F 
                 ; 0017 0060     rtcSet.sec = atol(buffer);
                +
0098b3 8fe8     +STD Y + 24 , R30
0098b4 8ff9     +STD Y + 24 + 1 , R31
0098b5 8f6a     +STD Y + 24 + 2 , R22
0098b6 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ; 0017 0061 
                 ; 0017 0062     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
0098b7 e1ee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 80 ) )
0098b8 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 80 ) )
0098b9 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 80 ) )
0098ba e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 80 ) )
                 	__POINTD1FN _0x2E0000,80
0098bb 940e da29 	CALL __PUTPARD1
                +
0098bd 8dec     +LDD R30 , Y + 28
0098be 8dfd     +LDD R31 , Y + 28 + 1
0098bf 8d6e     +LDD R22 , Y + 28 + 2
0098c0 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
0098c1 940e c5c5 	CALL SUBOPT_0x18C
                 ; 0017 0063 
                 ; 0017 0064     for(i=0;i<3;i++)
0098c3 e010      	LDI  R17,LOW(0)
                 _0x2E0017:
0098c4 3013      	CPI  R17,3
0098c5 f450      	BRSH _0x2E0018
                 ; 0017 0065     {
                 ; 0017 0066         buffer[i] = rxPackage3[i+28];
0098c6 940e c087 	CALL SUBOPT_0xAE
0098c8 940e d1f9 	CALL SUBOPT_0x33A
                +
0098ca 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
0098cb 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
0098cc 81e0      	LD   R30,Z
0098cd 93ec      	ST   X,R30
                 ; 0017 0067     }
0098ce 5f1f      	SUBI R17,-1
0098cf cff4      	RJMP _0x2E0017
                 _0x2E0018:
                 ; 0017 0068     buffer[4] = 0;
0098d0 940e d1fe 	CALL SUBOPT_0x33B
                 ; 0017 0069 
                 ; 0017 006A     tz = atol(buffer);
0098d2 019f      	MOVW R18,R30
                 ; 0017 006B 
                 ; 0017 006C     printDebug("get timezone = %+d\r\n",tz);
                +
0098d3 e2ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 95 ) )
0098d4 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 95 ) )
0098d5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 95 ) )
0098d6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 95 ) )
                 	__POINTD1FN _0x2E0000,95
0098d7 940e bc56 	CALL SUBOPT_0x11
0098d9 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 006D 
                 ; 0017 006E     RTC_setDateTime(rtcSet,tz);
0098db 01fe      	MOVW R30,R28
0098dc 9634      	ADIW R30,4
0098dd e1aa      	LDI  R26,26
0098de 940e da33 	CALL __PUTPARL
0098e0 01d9      	MOVW R26,R18
0098e1 940e 4699 	CALL _RTC_setDateTime
                 ; 0017 006F 
                 ; 0017 0070     return 0;
0098e3 940e c428 	CALL SUBOPT_0x150
0098e5 96ee      	ADIW R28,62
0098e6 9508      	RET
                 ; 0017 0071 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 0074 {
                 _DEBUG_resetAlarm:
                 ; 0017 0075     resetAlarm();
0098e7 940e 7a51 	CALL _resetAlarm
                 ; 0017 0076 
                 ; 0017 0077     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
0098e9 e4e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 116 ) )
0098ea e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 116 ) )
0098eb e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 116 ) )
0098ec e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 116 ) )
                 	__POINTD1FN _0x2E0000,116
0098ed 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 0078 }
0098ef 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 007B {
                 _DEBUG_ClearLogFile:
                 ; 0017 007C     int         res;
                 ; 0017 007D 
                 ; 0017 007E     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
0098f0 931a      	ST   -Y,R17
0098f1 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
0098f2 e6e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 151 ) )
0098f3 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 151 ) )
0098f4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 151 ) )
0098f5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 151 ) )
                 	__POINTD1FN _0x2E0000,151
0098f6 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 007F 
                 ; 0017 0080     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0098f8 940e cbe7 	CALL SUBOPT_0x286
                 ; 0017 0081     if(res < 0)
0098fa f432      	BRPL _0x2E0019
                 ; 0017 0082     {
                 ; 0017 0083         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
0098fb 940e d219 	CALL SUBOPT_0x340
0098fd 940e be72 	CALL SUBOPT_0x5F
0098ff 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 0084     }
                 ; 0017 0085 
                 ; 0017 0086     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E0019:
009901 940e cc13 	CALL SUBOPT_0x28C
                 ; 0017 0087     if(res < 0)
009903 f432      	BRPL _0x2E001A
                 ; 0017 0088     {
                 ; 0017 0089         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
009904 940e d219 	CALL SUBOPT_0x340
009906 940e beb9 	CALL SUBOPT_0x6A
009908 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 008A     }
                 ; 0017 008B 
                 ; 0017 008C     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E001A:
00990a ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00990b e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00990c 93fa      	ST   -Y,R31
00990d 93ea      	ST   -Y,R30
00990e e0e1      	LDI  R30,LOW(1)
00990f 93ea      	ST   -Y,R30
009910 940e c5f8 	CALL SUBOPT_0x197
009912 940e 8212 	CALL _LOG_createFile
009914 018f      	MOVW R16,R30
                 ; 0017 008D     if(res < 0)
009915 2311      	TST  R17
009916 f432      	BRPL _0x2E001B
                 ; 0017 008E     {
                 ; 0017 008F         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
009917 940e d219 	CALL SUBOPT_0x340
009919 940e cc61 	CALL SUBOPT_0x294
00991b 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 0090     }
                 ; 0017 0091 
                 ; 0017 0092     return;
                 _0x2E001B:
00991d 9109      	LD   R16,Y+
00991e 9119      	LD   R17,Y+
00991f 9508      	RET
                 ; 0017 0093 }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 0096 {
                 _DEBUG_setRealVref:
                 ; 0017 0097     unsigned char i;
                 ; 0017 0098     unsigned char rxStrSetVREF[6];
                 ; 0017 0099 
                 ; 0017 009A     for(i=0;i<=5;i++)
009920 9726      	SBIW R28,6
009921 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
009922 e010      	LDI  R17,LOW(0)
                 _0x2E001D:
009923 3016      	CPI  R17,6
009924 f450      	BRSH _0x2E001E
                 ; 0017 009B     {
                 ; 0017 009C         rxStrSetVREF[i] = rxPackage3[i+8];
009925 940e c087 	CALL SUBOPT_0xAE
009927 940e d21e 	CALL SUBOPT_0x341
                +
009929 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
00992a 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
00992b 81e0      	LD   R30,Z
00992c 93ec      	ST   X,R30
                 ; 0017 009D     }
00992d 5f1f      	SUBI R17,-1
00992e cff4      	RJMP _0x2E001D
                 _0x2E001E:
                 ; 0017 009E     rxStrSetVREF[5] = '\0';
00992f e0e0      	LDI  R30,LOW(0)
009930 83ee      	STD  Y+6,R30
                 ; 0017 009F     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
009931 ece2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 244 ) )
009932 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 244 ) )
009933 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 244 ) )
009934 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 244 ) )
                 	__POINTD1FN _0x2E0000,244
009935 940e da29 	CALL __PUTPARD1
009937 01fe      	MOVW R30,R28
009938 9635      	ADIW R30,5
009939 940e bd4a 	CALL SUBOPT_0x34
00993b 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 00A0     eep_vref_val = (atof(rxStrSetVREF));
00993d 01de      	MOVW R26,R28
00993e 9611      	ADIW R26,1
00993f 940e 9f2a 	CALL _atof
009941 e8a9      	LDI  R26,LOW(_eep_vref_val)
009942 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009943 940e da5c 	CALL __EEPROMWRD
                 ; 0017 00A1     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
009945 efe0     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 290 ) )
009946 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 290 ) )
009947 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 290 ) )
009948 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 290 ) )
                 	__POINTD1FN _0x2E0000,290
009949 940e da29 	CALL __PUTPARD1
00994b e8a9      	LDI  R26,LOW(_eep_vref_val)
00994c e0b5      	LDI  R27,HIGH(_eep_vref_val)
00994d 940e c41d 	CALL SUBOPT_0x14E
                 ; 0017 00A2 }
00994f 8118      	LDD  R17,Y+0
009950 9627      	ADIW R28,7
009951 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 00A5 {
                 _DEBUG_sensorSelect:
                 ; 0017 00A6     unsigned char ch[2];
                 ; 0017 00A7 
                 ; 0017 00A8     if(TEMP_SEL != TEMP_TYPE_K){
009952 9722      	SBIW R28,2
                 ;	ch -> Y+0
009953 940e bd1a 	CALL SUBOPT_0x2E
009955 f039      	BREQ _0x2E001F
                 ; 0017 00A9         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
009956 e1e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 331 ) )
009957 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 331 ) )
009958 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 331 ) )
009959 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 331 ) )
                 	__POINTD1FN _0x2E0000,331
00995a 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 00AA         return;
00995c c044      	RJMP _0x20E0032
                 ; 0017 00AB     }
                 ; 0017 00AC 
                 ; 0017 00AD     if(rxPackage3[8] == 'N'){
                 _0x2E001F:
                +
00995d 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
00995f 34ae      	CPI  R26,LOW(0x4E)
009960 f449      	BRNE _0x2E0020
                 ; 0017 00AE         hwCalId     = 9;
009961 940e d223 	CALL SUBOPT_0x342
                 ; 0017 00AF         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
009963 e4ec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 382 ) )
009964 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 382 ) )
009965 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 382 ) )
009966 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 382 ) )
                 	__POINTD1FN _0x2E0000,382
009967 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 00B0     }
                 ; 0017 00B1     else if(isdigit(rxPackage3[8])){
009969 c037      	RJMP _0x2E0021
                 _0x2E0020:
                +
00996a 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
00996c 940e bb5c 	CALL _isdigit
00996e 30e0      	CPI  R30,0
00996f f109      	BREQ _0x2E0022
                 ; 0017 00B2         ch[0]       = rxPackage3[8];
                +
009970 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009972 83e8      	ST   Y,R30
                 ; 0017 00B3         ch[1]       = '\0';
009973 e0e0      	LDI  R30,LOW(0)
009974 83e9      	STD  Y+1,R30
                 ; 0017 00B4         hwCalId     = atoi(ch);
009975 01de      	MOVW R26,R28
009976 940e 9deb 	CALL _atoi
009978 93e0 10f4 	STS  _hwCalId,R30
00997a 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 00B5 
                 ; 0017 00B6         SENSOR_SELECT(hwCalId);
00997c 940e c047 	CALL SUBOPT_0xA3
00997e 91e0 10f4 	LDS  R30,_hwCalId
009980 0fee      	LSL  R30
009981 2bea      	OR   R30,R26
009982 2da0      	MOV  R26,R0
009983 93ec      	ST   X,R30
                 ; 0017 00B7         delay_ms(50);           // -- for multiplex stable -- //
009984 940e bf24 	CALL SUBOPT_0x7A
                 ; 0017 00B8 
                 ; 0017 00B9         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
009986 e7e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 423 ) )
009987 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 423 ) )
009988 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 423 ) )
009989 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 423 ) )
                 	__POINTD1FN _0x2E0000,423
00998a 940e bd2c 	CALL SUBOPT_0x30
00998c 940e bd4a 	CALL SUBOPT_0x34
00998e 940e bc5e 	CALL SUBOPT_0x12
                 ; 0017 00BA     }
                 ; 0017 00BB     else{
009990 c010      	RJMP _0x2E0023
                 _0x2E0022:
                 ; 0017 00BC         hwCalId     = 9;
009991 940e d223 	CALL SUBOPT_0x342
                 ; 0017 00BD         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
009993 eae1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 467 ) )
009994 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 467 ) )
009995 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 467 ) )
009996 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 467 ) )
                 	__POINTD1FN _0x2E0000,467
009997 940e da29 	CALL __PUTPARD1
                +
009999 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
00999b 940e be99 	CALL SUBOPT_0x65
                +
00999d 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
00999f 940e c90a 	CALL SUBOPT_0x215
                 ; 0017 00BE     }
                 _0x2E0023:
                 _0x2E0021:
                 ; 0017 00BF 
                 ; 0017 00C0     return;
                 _0x20E0032:
0099a1 9622      	ADIW R28,2
0099a2 9508      	RET
                 ; 0017 00C1 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 00C4 {
                 _DEBUG_setDeviceEnable:
                 ; 0017 00C5     if(flag){
0099a3 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
0099a4 81e8      	LD   R30,Y
0099a5 30e0      	CPI  R30,0
0099a6 f021      	BREQ _0x2E0024
                 ; 0017 00C6         config_oper.deviceEnable        =   0x01;
                +
0099a7 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
0099a8 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
0099a9 e0e1      	LDI  R30,LOW(1)
0099aa c003      	RJMP _0x2E0063
                 ; 0017 00C7     }
                 ; 0017 00C8     else{
                 _0x2E0024:
                 ; 0017 00C9         config_oper.deviceEnable        =   0x00;
                +
0099ab eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
0099ac e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
0099ad e0e0      	LDI  R30,LOW(0)
                 _0x2E0063:
0099ae 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00CA     }
                 ; 0017 00CB 
                 ; 0017 00CC     config_oper_flag                    =   0x01;
0099b0 e4a3      	LDI  R26,LOW(_config_oper_flag)
0099b1 e0b5      	LDI  R27,HIGH(_config_oper_flag)
0099b2 940e c398 	CALL SUBOPT_0x135
                 ; 0017 00CD     is_operating_config_update          =   1;
0099b4 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 00CE 
                 ; 0017 00CF     return;
                 _0x20E0031:
0099b6 9621      	ADIW R28,1
0099b7 9508      	RET
                 ; 0017 00D0 }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 00D3 {
                 _DEBUG_setSerialNumber:
                 ; 0017 00D4     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 00D5     unsigned char i;
                 ; 0017 00D6     unsigned char set_str[24];
                 ; 0017 00D7 
                 ; 0017 00D8     for(i=0;i<24;i++){
0099b8 9768      	SBIW R28,24
0099b9 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
0099ba e010      	LDI  R17,LOW(0)
                 _0x2E0027:
0099bb 3118      	CPI  R17,24
0099bc f598      	BRSH _0x2E0028
                 ; 0017 00D9         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
0099bd 940e c087 	CALL SUBOPT_0xAE
                +
0099bf 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
0099c0 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
0099c1 81a0      	LD   R26,Z
0099c2 32ac      	CPI  R26,LOW(0x2C)
0099c3 f021      	BREQ _0x2E002A
0099c4 940e bb79 	CALL _isxdigit
0099c6 30e0      	CPI  R30,0
0099c7 f009      	BREQ _0x2E002B
                 _0x2E002A:
0099c8 c013      	RJMP _0x2E0029
                 _0x2E002B:
                 ; 0017 00DA             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
0099c9 eee0     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 530 ) )
0099ca e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 530 ) )
0099cb e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 530 ) )
0099cc e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 530 ) )
                 	__POINTD1FN _0x2E0000,530
0099cd 940e d22a 	CALL SUBOPT_0x343
                +
0099cf 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
0099d0 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
0099d1 81e0      	LD   R30,Z
0099d2 940e be99 	CALL SUBOPT_0x65
0099d4 940e c087 	CALL SUBOPT_0xAE
                +
0099d6 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
0099d7 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
0099d8 81e0      	LD   R30,Z
0099d9 940e c90a 	CALL SUBOPT_0x215
                 ; 0017 00DB             return;
0099db c09d      	RJMP _0x20E0030
                 ; 0017 00DC         }
                 ; 0017 00DD         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E0029:
0099dc 940e c087 	CALL SUBOPT_0xAE
0099de 010f      	MOVW R0,R30
0099df 01de      	MOVW R26,R28
0099e0 9611      	ADIW R26,1
0099e1 0fea      	ADD  R30,R26
0099e2 1ffb      	ADC  R31,R27
0099e3 93ff      	PUSH R31
0099e4 93ef      	PUSH R30
0099e5 01f0      	MOVW R30,R0
                +
0099e6 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
0099e7 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
0099e8 81a0      	LD   R26,Z
0099e9 940e bb88 	CALL _tolower
0099eb 91af      	POP  R26
0099ec 91bf      	POP  R27
0099ed 93ec      	ST   X,R30
                 ; 0017 00DE     }
0099ee 5f1f      	SUBI R17,-1
0099ef cfcb      	RJMP _0x2E0027
                 _0x2E0028:
                 ; 0017 00DF 
                 ; 0017 00E0     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
0099f0 e1ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 591 ) )
0099f1 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 591 ) )
0099f2 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 591 ) )
0099f3 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 591 ) )
                 	__POINTD1FN _0x2E0000,591
0099f4 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 00E1 
                 ; 0017 00E2     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
0099f6 e5e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 643 ) )
0099f7 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 643 ) )
0099f8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 643 ) )
0099f9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 643 ) )
                 	__POINTD1FN _0x2E0000,643
0099fa 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 00E3     for(i=0;i<24;i++){
0099fc e010      	LDI  R17,LOW(0)
                 _0x2E002D:
0099fd 3118      	CPI  R17,24
0099fe f010      	BRLO PC+3
0099ff 940c 9a6a 	JMP _0x2E002E
                 ; 0017 00E4         if((i%3) == 0)      {   continue;                       }
009a01 940e d22e 	CALL SUBOPT_0x344
009a03 9730      	SBIW R30,0
009a04 f409      	BRNE _0x2E002F
009a05 c062      	RJMP _0x2E002C
                 ; 0017 00E5         else if((i%3) == 1) {
                 _0x2E002F:
009a06 940e d22e 	CALL SUBOPT_0x344
009a08 30e1      	CPI  R30,LOW(0x1)
009a09 e0a0      	LDI  R26,HIGH(0x1)
009a0a 07fa      	CPC  R31,R26
009a0b f581      	BRNE _0x2E0031
                 ; 0017 00E6 
                 ; 0017 00E7             printDebug("[%c",set_str[i]);
                +
009a0c e7e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 683 ) )
009a0d e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 683 ) )
009a0e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 683 ) )
009a0f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 683 ) )
                 	__POINTD1FN _0x2E0000,683
009a10 940e d22a 	CALL SUBOPT_0x343
009a12 01de      	MOVW R26,R28
009a13 9615      	ADIW R26,5
009a14 940e c597 	CALL SUBOPT_0x185
                 ; 0017 00E8 
                 ; 0017 00E9             DEVICE_SERIAL[i/3]      = 0x00;
009a16 940e d235 	CALL SUBOPT_0x345
009a18 01df      	MOVW R26,R30
009a19 e0e0      	LDI  R30,LOW(0)
009a1a 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00EA 
                 ; 0017 00EB             if(isdigit(set_str[i])){
009a1c 940e c087 	CALL SUBOPT_0xAE
009a1e 940e d21e 	CALL SUBOPT_0x341
009a20 940e d23e 	CALL SUBOPT_0x346
009a22 f051      	BREQ _0x2E0032
                 ; 0017 00EC                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
009a23 940e d235 	CALL SUBOPT_0x345
009a25 010f      	MOVW R0,R30
009a26 940e c087 	CALL SUBOPT_0xAE
009a28 940e d21e 	CALL SUBOPT_0x341
009a2a 91ec      	LD   R30,X
009a2b 53e0      	SUBI R30,LOW(48)
009a2c c009      	RJMP _0x2E0064
                 ; 0017 00ED             }
                 ; 0017 00EE             else{
                 _0x2E0032:
                 ; 0017 00EF                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
009a2d 940e d235 	CALL SUBOPT_0x345
009a2f 010f      	MOVW R0,R30
009a30 940e c087 	CALL SUBOPT_0xAE
009a32 940e d21e 	CALL SUBOPT_0x341
009a34 91ec      	LD   R30,X
009a35 55e7      	SUBI R30,LOW(87)
                 _0x2E0064:
009a36 95e2      	SWAP R30
009a37 7fe0      	ANDI R30,0xF0
009a38 01d0      	MOVW R26,R0
009a39 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00F0             }
                 ; 0017 00F1         }
                 ; 0017 00F2         else if((i%3) == 2) {
009a3b c02c      	RJMP _0x2E0034
                 _0x2E0031:
009a3c 940e d22e 	CALL SUBOPT_0x344
009a3e 30e2      	CPI  R30,LOW(0x2)
009a3f e0a0      	LDI  R26,HIGH(0x2)
009a40 07fa      	CPC  R31,R26
009a41 f531      	BRNE _0x2E0035
                 ; 0017 00F3 
                 ; 0017 00F4             printDebug("%c]",set_str[i]);
                +
009a42 e7ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 687 ) )
009a43 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 687 ) )
009a44 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 687 ) )
009a45 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 687 ) )
                 	__POINTD1FN _0x2E0000,687
009a46 940e d22a 	CALL SUBOPT_0x343
009a48 01de      	MOVW R26,R28
009a49 9615      	ADIW R26,5
009a4a 940e c597 	CALL SUBOPT_0x185
                 ; 0017 00F5 
                 ; 0017 00F6             if(isdigit(set_str[i])){
009a4c 940e c087 	CALL SUBOPT_0xAE
009a4e 940e d21e 	CALL SUBOPT_0x341
009a50 940e d23e 	CALL SUBOPT_0x346
009a52 f049      	BREQ _0x2E0036
                 ; 0017 00F7                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
009a53 940e d235 	CALL SUBOPT_0x345
009a55 940e d243 	CALL SUBOPT_0x347
009a57 940e d21e 	CALL SUBOPT_0x341
009a59 91ec      	LD   R30,X
009a5a 53e0      	SUBI R30,LOW(48)
009a5b c008      	RJMP _0x2E0065
                 ; 0017 00F8             }
                 ; 0017 00F9             else{
                 _0x2E0036:
                 ; 0017 00FA                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
009a5c 940e d235 	CALL SUBOPT_0x345
009a5e 940e d243 	CALL SUBOPT_0x347
009a60 940e d21e 	CALL SUBOPT_0x341
009a62 91ec      	LD   R30,X
009a63 55e7      	SUBI R30,LOW(87)
                 _0x2E0065:
009a64 29e0      	OR   R30,R0
009a65 01db      	MOVW R26,R22
009a66 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00FB             }
                 ; 0017 00FC         }
                 ; 0017 00FD     }
                 _0x2E0035:
                 _0x2E0034:
                 _0x2E002C:
009a68 5f1f      	SUBI R17,-1
009a69 cf93      	RJMP _0x2E002D
                 _0x2E002E:
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
009a6a e8e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 691 ) )
009a6b e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 691 ) )
009a6c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 691 ) )
009a6d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 691 ) )
                 	__POINTD1FN _0x2E0000,691
009a6e 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 0100     for(i=0;i<8;i++){
009a70 e010      	LDI  R17,LOW(0)
                 _0x2E0039:
009a71 3018      	CPI  R17,8
009a72 f420      	BRSH _0x2E003A
                 ; 0017 0101         printDebug("[%02X]",DEVICE_SERIAL[i]);
009a73 940e d24a 	CALL SUBOPT_0x348
                 ; 0017 0102     }
009a75 5f1f      	SUBI R17,-1
009a76 cffa      	RJMP _0x2E0039
                 _0x2E003A:
                 ; 0017 0103     printDebug("\r\n");
009a77 940e d256 	CALL SUBOPT_0x349
                 ; 0017 0104 
                 ; 0017 0105     return;
                 _0x20E0030:
009a79 8118      	LDD  R17,Y+0
009a7a 9669      	ADIW R28,25
009a7b 9508      	RET
                 ; 0017 0106 }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 0109 {
                 _DEBUG_readSerialNumber:
                 ; 0017 010A     unsigned char i;
                 ; 0017 010B 
                 ; 0017 010C     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
009a7c 931a      	ST   -Y,R17
                 ;	i -> R17
                +
009a7d ebea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 748 ) )
009a7e e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 748 ) )
009a7f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 748 ) )
009a80 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 748 ) )
                 	__POINTD1FN _0x2E0000,748
009a81 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 010D     for(i=0;i<8;i++){
009a83 e010      	LDI  R17,LOW(0)
                 _0x2E003C:
009a84 3018      	CPI  R17,8
009a85 f420      	BRSH _0x2E003D
                 ; 0017 010E         printDebug("[%02X]",DEVICE_SERIAL[i]);
009a86 940e d24a 	CALL SUBOPT_0x348
                 ; 0017 010F     }
009a88 5f1f      	SUBI R17,-1
009a89 cffa      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 0110     printDebug("\r\n");
009a8a 940e d256 	CALL SUBOPT_0x349
                 ; 0017 0111 
                 ; 0017 0112     return;
009a8c 9119      	LD   R17,Y+
009a8d 9508      	RET
                 ; 0017 0113 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 011B {
                 _debug_req:
                 ; 0017 011C     flag_PackageTerminate3 = 0;
009a8e e0e0      	LDI  R30,LOW(0)
009a8f 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 011D 
                 ; 0017 011E     printDebug("Get Debug Req.:");
                +
009a91 eee3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 789 ) )
009a92 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 789 ) )
009a93 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 789 ) )
009a94 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 789 ) )
                 	__POINTD1FN _0x2E0000,789
009a95 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 011F 
                 ; 0017 0120 
                 ; 0017 0121     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
009a97 940e d25c 	CALL SUBOPT_0x34A
                +
009a99 eaea     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009a9a e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009a9b e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009a9c e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
009a9d 940e d261 	CALL SUBOPT_0x34B
009a9f f411      	BRNE _0x2E003E
                 ; 0017 0122         DEBUG_setDateTime();
009aa0 dd7f      	RCALL _DEBUG_setDateTime
                 ; 0017 0123     }
                 ; 0017 0124     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
009aa1 c059      	RJMP _0x2E003F
                 _0x2E003E:
009aa2 940e d25c 	CALL SUBOPT_0x34A
                +
009aa4 ebe2     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009aa5 e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009aa6 e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009aa7 e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
009aa8 940e d261 	CALL SUBOPT_0x34B
009aaa f411      	BRNE _0x2E0040
                 ; 0017 0125         DEBUG_resetAlarm();
009aab de3b      	RCALL _DEBUG_resetAlarm
                 ; 0017 0126     }
                 ; 0017 0127     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
009aac c04e      	RJMP _0x2E0041
                 _0x2E0040:
009aad 940e d25c 	CALL SUBOPT_0x34A
                +
009aaf ebea     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
009ab0 e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
009ab1 e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
009ab2 e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
009ab3 940e d261 	CALL SUBOPT_0x34B
009ab5 f411      	BRNE _0x2E0042
                 ; 0017 0128         DEBUG_ClearLogFile();
009ab6 de39      	RCALL _DEBUG_ClearLogFile
                 ; 0017 0129     }
                 ; 0017 012A     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
009ab7 c043      	RJMP _0x2E0043
                 _0x2E0042:
009ab8 940e d25c 	CALL SUBOPT_0x34A
                +
009aba ece2     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
009abb e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
009abc e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
009abd e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
009abe 940e d261 	CALL SUBOPT_0x34B
009ac0 f411      	BRNE _0x2E0044
                 ; 0017 012B         DEBUG_setRealVref();
009ac1 de5e      	RCALL _DEBUG_setRealVref
                 ; 0017 012C     }
                 ; 0017 012D     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
009ac2 c038      	RJMP _0x2E0045
                 _0x2E0044:
009ac3 940e d25c 	CALL SUBOPT_0x34A
                +
009ac5 ecea     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
009ac6 e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
009ac7 e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
009ac8 e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
009ac9 940e d261 	CALL SUBOPT_0x34B
009acb f411      	BRNE _0x2E0046
                 ; 0017 012E         DEBUG_sensorSelect();
009acc de85      	RCALL _DEBUG_sensorSelect
                 ; 0017 012F     }
                 ; 0017 0130     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
009acd c02d      	RJMP _0x2E0047
                 _0x2E0046:
009ace 940e d25c 	CALL SUBOPT_0x34A
                +
009ad0 ede2     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
009ad1 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
009ad2 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
009ad3 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
009ad4 940e d261 	CALL SUBOPT_0x34B
009ad6 f419      	BRNE _0x2E0048
                 ; 0017 0131         DEBUG_setDeviceEnable(1);
009ad7 e0a1      	LDI  R26,LOW(1)
009ad8 deca      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0132     }
                 ; 0017 0133     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
009ad9 c021      	RJMP _0x2E0049
                 _0x2E0048:
009ada 940e d25c 	CALL SUBOPT_0x34A
                +
009adc edea     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
009add e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
009ade e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
009adf e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
009ae0 940e d261 	CALL SUBOPT_0x34B
009ae2 f419      	BRNE _0x2E004A
                 ; 0017 0134         DEBUG_setDeviceEnable(0);
009ae3 e0a0      	LDI  R26,LOW(0)
009ae4 debe      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0135     }
                 ; 0017 0136     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
009ae5 c015      	RJMP _0x2E004B
                 _0x2E004A:
009ae6 940e d25c 	CALL SUBOPT_0x34A
                +
009ae8 eee2     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
009ae9 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
009aea e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
009aeb e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
009aec 940e d261 	CALL SUBOPT_0x34B
009aee f411      	BRNE _0x2E004C
                 ; 0017 0137         DEBUG_setSerialNumber();
009aef dec8      	RCALL _DEBUG_setSerialNumber
                 ; 0017 0138     }
                 ; 0017 0139     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
009af0 c00a      	RJMP _0x2E004D
                 _0x2E004C:
009af1 940e d25c 	CALL SUBOPT_0x34A
                +
009af3 eeea     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
009af4 e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
009af5 e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
009af6 e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
009af7 940e d261 	CALL SUBOPT_0x34B
009af9 f409      	BRNE _0x2E004E
                 ; 0017 013A         DEBUG_readSerialNumber();
009afa df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 013B     }
                 ; 0017 013C 
                 ; 0017 013D     return;
                 _0x2E004E:
                 _0x2E004D:
                 _0x2E004B:
                 _0x2E0049:
                 _0x2E0047:
                 _0x2E0045:
                 _0x2E0043:
                 _0x2E0041:
                 _0x2E003F:
009afb 9508      	RET
                 ; 0017 013E }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 0141 {
                 _printDebug:
009afc 92ff      	PUSH R15
009afd 2ef8      	MOV  R15,R24
                 ; 0017 0142     char textBuffer[256];
                 ; 0017 0143     va_list argptr;
                 ; 0017 0144 
                 ; 0017 0145     va_start(argptr, fmtstr);
009afe 50d1      	SUBI R29,1
009aff 931a      	ST   -Y,R17
009b00 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
009b01 01de      	MOVW R26,R28
009b02 50a2      	SUBI R26,LOW(-(254))
009b03 4fbf      	SBCI R27,HIGH(-(254))
009b04 940e d890 	CALL __ADDW2R15
009b06 018d      	MOVW R16,R26
                 ; 0017 0146     vsprintf(textBuffer,fmtstr,argptr);
009b07 940e c81e 	CALL SUBOPT_0x1F3
009b09 01de      	MOVW R26,R28
009b0a 5fac      	SUBI R26,LOW(-(260))
009b0b 4fbe      	SBCI R27,HIGH(-(260))
009b0c 940e cb30 	CALL SUBOPT_0x26A
                 ; 0017 0147     send_uart(3,textBuffer);
009b0e e0e3      	LDI  R30,LOW(3)
009b0f 93ea      	ST   -Y,R30
009b10 01de      	MOVW R26,R28
009b11 9613      	ADIW R26,3
009b12 940e 3fed 	CALL _send_uart
                 ; 0017 0148     va_end(argptr);
                 ; 0017 0149 
                 ; 0017 014A     return;
009b14 8119      	LDD  R17,Y+1
009b15 8108      	LDD  R16,Y+0
009b16 9622      	ADIW R28,2
009b17 5fdf      	SUBI R29,-1
009b18 90ff      	POP  R15
009b19 9508      	RET
                 ; 0017 014B }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 014E {
                 _print_hex_ascii_line:
                 ; 0017 014F 
                 ; 0017 0150     int i;
                 ; 0017 0151     int gap;
                 ; 0017 0152     const unsigned char *ch;
                 ; 0017 0153 
                 ; 0017 0154     // offset //
                 ; 0017 0155     printDebug("%05d   ", offset);
009b1a 940e c659 	CALL SUBOPT_0x1A9
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
009b1c efe3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 805 ) )
009b1d e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 805 ) )
009b1e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 805 ) )
009b1f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 805 ) )
                 	__POINTD1FN _0x2E0000,805
009b20 940e c35f 	CALL SUBOPT_0x12A
009b22 940e c200 	CALL SUBOPT_0xEC
                 ; 0017 0156 
                 ; 0017 0157 
                 ; 0017 0158     // hex //
                 ; 0017 0159     ch = payload;
                +
009b24 854a     +LDD R20 , Y + 10
009b25 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 015A     for(i = 0; i < len; i++) {
                +
009b26 e000     +LDI R16 , LOW ( 0 )
009b27 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0050:
009b28 85e8      	LDD  R30,Y+8
009b29 85f9      	LDD  R31,Y+8+1
009b2a 170e      	CP   R16,R30
009b2b 071f      	CPC  R17,R31
009b2c f494      	BRGE _0x2E0051
                 ; 0017 015B         printDebug("%02x ", *ch);
                +
009b2d efeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 813 ) )
009b2e e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 813 ) )
009b2f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 813 ) )
009b30 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 813 ) )
                 	__POINTD1FN _0x2E0000,813
009b31 940e d268 	CALL SUBOPT_0x34C
                 ; 0017 015C 
                 ; 0017 015D         ch++;
                +
009b33 5f4f     +SUBI R20 , LOW ( - 1 )
009b34 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 015E         // print extra space after 8th byte for visual aid //
                 ; 0017 015F         if (i == 7){
009b35 e0e7      	LDI  R30,LOW(7)
009b36 e0f0      	LDI  R31,HIGH(7)
009b37 17e0      	CP   R30,R16
009b38 07f1      	CPC  R31,R17
009b39 f411      	BRNE _0x2E0052
                 ; 0017 0160             printDebug(" ");
009b3a 940e d26e 	CALL SUBOPT_0x34D
                 ; 0017 0161 
                 ; 0017 0162         }
                 ; 0017 0163     }
                 _0x2E0052:
                +
009b3c 5f0f     +SUBI R16 , LOW ( - 1 )
009b3d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b3e cfe9      	RJMP _0x2E0050
                 _0x2E0051:
                 ; 0017 0164     // print space to handle line less than 8 bytes //
                 ; 0017 0165     if (len < 8){
009b3f 85a8      	LDD  R26,Y+8
009b40 85b9      	LDD  R27,Y+8+1
009b41 9718      	SBIW R26,8
009b42 f414      	BRGE _0x2E0053
                 ; 0017 0166         printDebug(" ");
009b43 940e d26e 	CALL SUBOPT_0x34D
                 ; 0017 0167 
                 ; 0017 0168     }
                 ; 0017 0169 
                 ; 0017 016A     // fill hex gap with spaces if not full line //
                 ; 0017 016B     if (len < 16) {
                 _0x2E0053:
009b45 85a8      	LDD  R26,Y+8
009b46 85b9      	LDD  R27,Y+8+1
009b47 9750      	SBIW R26,16
009b48 f48c      	BRGE _0x2E0054
                 ; 0017 016C         gap = 16 - len;
009b49 85a8      	LDD  R26,Y+8
009b4a 85b9      	LDD  R27,Y+8+1
009b4b e1e0      	LDI  R30,LOW(16)
009b4c e0f0      	LDI  R31,HIGH(16)
009b4d 1bea      	SUB  R30,R26
009b4e 0bfb      	SBC  R31,R27
009b4f 019f      	MOVW R18,R30
                 ; 0017 016D         for (i = 0; i < gap; i++) {
                +
009b50 e000     +LDI R16 , LOW ( 0 )
009b51 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0056:
                +
009b52 1702     +CP R16 , R18
009b53 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
009b54 f42c      	BRGE _0x2E0057
                 ; 0017 016E             printDebug("   ");
009b55 940e d274 	CALL SUBOPT_0x34E
                 ; 0017 016F 
                 ; 0017 0170         }
                +
009b57 5f0f     +SUBI R16 , LOW ( - 1 )
009b58 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b59 cff8      	RJMP _0x2E0056
                 _0x2E0057:
                 ; 0017 0171     }
                 ; 0017 0172     printDebug("   ");
                 _0x2E0054:
009b5a 940e d274 	CALL SUBOPT_0x34E
                 ; 0017 0173 
                 ; 0017 0174 
                 ; 0017 0175     // ascii (if printable) //
                 ; 0017 0176     ch = payload;
                +
009b5c 854a     +LDD R20 , Y + 10
009b5d 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0177     for(i = 0; i < len; i++) {
                +
009b5e e000     +LDI R16 , LOW ( 0 )
009b5f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0059:
009b60 85e8      	LDD  R30,Y+8
009b61 85f9      	LDD  R31,Y+8+1
009b62 170e      	CP   R16,R30
009b63 071f      	CPC  R17,R31
009b64 f4c4      	BRGE _0x2E005A
                 ; 0017 0178         if (isprint(*ch)){
009b65 01da      	MOVW R26,R20
009b66 91ac      	LD   R26,X
009b67 940e bb65 	CALL _isprint
009b69 30e0      	CPI  R30,0
009b6a f039      	BREQ _0x2E005B
                 ; 0017 0179             printDebug("%c", *ch);
                +
009b6b e7ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 684 ) )
009b6c e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 684 ) )
009b6d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 684 ) )
009b6e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 684 ) )
                 	__POINTD1FN _0x2E0000,684
009b6f 940e d268 	CALL SUBOPT_0x34C
                 ; 0017 017A 
                 ; 0017 017B         }
                 ; 0017 017C         else{
009b71 c006      	RJMP _0x2E005C
                 _0x2E005B:
                 ; 0017 017D             printDebug(".");
                +
009b72 e0e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 819 ) )
009b73 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 819 ) )
009b74 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 819 ) )
009b75 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 819 ) )
                 	__POINTD1FN _0x2E0000,819
009b76 940e bbec 	CALL SUBOPT_0x3
                 ; 0017 017E 
                 ; 0017 017F         }
                 _0x2E005C:
                 ; 0017 0180         ch++;
                +
009b78 5f4f     +SUBI R20 , LOW ( - 1 )
009b79 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 0181     }
                +
009b7a 5f0f     +SUBI R16 , LOW ( - 1 )
009b7b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b7c cfe3      	RJMP _0x2E0059
                 _0x2E005A:
                 ; 0017 0182 
                 ; 0017 0183     printDebug("\r\n");
009b7d 940e d256 	CALL SUBOPT_0x349
                 ; 0017 0184 
                 ; 0017 0185 
                 ; 0017 0186 return;
009b7f c0ea      	RJMP _0x20E002E
                 ; 0017 0187 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 018A {
                 _print_payload:
                 ; 0017 018B 
                 ; 0017 018C     int len_rem = len;
                 ; 0017 018D     int line_width = 16;            // number of bytes per line //
                 ; 0017 018E     int line_len;
                 ; 0017 018F     int offset = 0;                    // zero-based offset counter //
                 ; 0017 0190     const unsigned char *ch = payload;
                 ; 0017 0191 
                 ; 0017 0192     if (len <= 0)
009b80 940e d27a 	CALL SUBOPT_0x34F
009b82 83ea      	STD  Y+2,R30
009b83 e0e0      	LDI  R30,LOW(0)
009b84 83eb      	STD  Y+3,R30
009b85 940e da99 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
009b87 850a     +LDD R16 , Y + 10
009b88 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
009b89 e120     +LDI R18 , LOW ( 16 )
009b8a e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
009b8b 85ec      	LDD  R30,Y+12
009b8c 85fd      	LDD  R31,Y+12+1
009b8d 83ee      	STD  Y+6,R30
009b8e 83ff      	STD  Y+6+1,R31
009b8f 85aa      	LDD  R26,Y+10
009b90 85bb      	LDD  R27,Y+10+1
009b91 940e da81 	CALL __CPW02
009b93 f574      	BRGE _0x20E002F
                 ; 0017 0193         return;
                 ; 0017 0194 
                 ; 0017 0195     // data fits on one line //
                 ; 0017 0196     if (len <= line_width) {
009b94 172a      	CP   R18,R26
009b95 073b      	CPC  R19,R27
009b96 f03c      	BRLT _0x2E005E
                 ; 0017 0197         print_hex_ascii_line(ch, len, offset);
009b97 940e c493 	CALL SUBOPT_0x15D
009b99 940e c684 	CALL SUBOPT_0x1B0
009b9b 940e d27f 	CALL SUBOPT_0x350
                 ; 0017 0198         return;
009b9d c024      	RJMP _0x20E002F
                 ; 0017 0199     }
                 ; 0017 019A     // data spans multiple lines //
                 ; 0017 019B     for ( ;; ) {
                 _0x2E005E:
                 _0x2E0060:
                 ; 0017 019C         // compute current line length //
                 ; 0017 019D         line_len = line_width % len_rem;
009b9e 01f8      	MOVW R30,R16
009b9f 01d9      	MOVW R26,R18
009ba0 940e d9c4 	CALL __MODW21
009ba2 01af      	MOVW R20,R30
                 ; 0017 019E         // print line //
                 ; 0017 019F         print_hex_ascii_line(ch, line_len, offset);
009ba3 940e c493 	CALL SUBOPT_0x15D
009ba5 935a      	ST   -Y,R21
009ba6 934a      	ST   -Y,R20
009ba7 940e d27f 	CALL SUBOPT_0x350
                 ; 0017 01A0         // compute total remaining //
                 ; 0017 01A1         len_rem = len_rem - line_len;
                +
009ba9 1b04     +SUB R16 , R20
009baa 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 01A2         // shift pointer to remaining bytes to print //
                 ; 0017 01A3         ch = ch + line_len;
009bab 01fa      	MOVW R30,R20
009bac 940e c64f 	CALL SUBOPT_0x1A7
009bae 83ee      	STD  Y+6,R30
009baf 83ff      	STD  Y+6+1,R31
                 ; 0017 01A4         // add offset //
                 ; 0017 01A5         offset = offset + line_width;
009bb0 01f9      	MOVW R30,R18
009bb1 85a8      	LDD  R26,Y+8
009bb2 85b9      	LDD  R27,Y+8+1
009bb3 0fea      	ADD  R30,R26
009bb4 1ffb      	ADC  R31,R27
009bb5 87e8      	STD  Y+8,R30
009bb6 87f9      	STD  Y+8+1,R31
                 ; 0017 01A6         // check if we have line width chars or less //
                 ; 0017 01A7         if (len_rem <= line_width) {
                +
009bb7 1720     +CP R18 , R16
009bb8 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009bb9 f03c      	BRLT _0x2E0062
                 ; 0017 01A8             // print last line and get out //
                 ; 0017 01A9             print_hex_ascii_line(ch, len_rem, offset);
009bba 940e c493 	CALL SUBOPT_0x15D
009bbc 931a      	ST   -Y,R17
009bbd 930a      	ST   -Y,R16
009bbe 940e d27f 	CALL SUBOPT_0x350
                 ; 0017 01AA             break;
009bc0 c001      	RJMP _0x2E0061
                 ; 0017 01AB         }
                 ; 0017 01AC     }
                 _0x2E0062:
009bc1 cfdc      	RJMP _0x2E0060
                 _0x2E0061:
                 ; 0017 01AD 
                 ; 0017 01AE     return;
                 _0x20E002F:
009bc2 940e daa0 	CALL __LOADLOCR6
009bc4 962e      	ADIW R28,14
009bc5 9508      	RET
                 ; 0017 01AF }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 _forwardSubstitution:
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
009bc6 9726      	SBIW R28,6
009bc7 940e bdd1 	CALL SUBOPT_0x46
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 _0x300005:
009bc9 940e d283 	CALL SUBOPT_0x351
009bcb 170e      	CP   R16,R30
009bcc 071f      	CPC  R17,R31
009bcd f014      	BRLT PC+3
009bce 940c 9c6a 	JMP _0x300006
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                +
009bd0 870a     +STD Y + 10 , R16
009bd1 871b     +STD Y + 10 + 1 , R17
                 	__PUTWSR 16,17,10
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
009bd2 01f8      	MOVW R30,R16
009bd3 9631      	ADIW R30,1
009bd4 019f      	MOVW R18,R30
                 _0x300008:
009bd5 940e d283 	CALL SUBOPT_0x351
009bd7 172e      	CP   R18,R30
009bd8 073f      	CPC  R19,R31
009bd9 f4dc      	BRGE _0x300009
                 ; 0018 0011             if (a[j][i] > a[max][i])
009bda 940e d288 	CALL SUBOPT_0x352
009bdc 940e d28e 	CALL SUBOPT_0x353
009bde 937f      	PUSH R23
009bdf 936f      	PUSH R22
009be0 93ff      	PUSH R31
009be1 93ef      	PUSH R30
009be2 940e d292 	CALL SUBOPT_0x354
009be4 940e d28e 	CALL SUBOPT_0x353
009be6 91af      	POP  R26
009be7 91bf      	POP  R27
009be8 918f      	POP  R24
009be9 919f      	POP  R25
009bea 940e d870 	CALL __CMPF12
009bec f009      	BREQ PC+2
009bed f410      	BRCC PC+3
009bee 940c 9bf2 	JMP  _0x30000A
                 ; 0018 0012                 max = j;
                +
009bf0 872a     +STD Y + 10 , R18
009bf1 873b     +STD Y + 10 + 1 , R19
                 	__PUTWSR 18,19,10
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 _0x30000A:
                +
009bf2 5f2f     +SUBI R18 , LOW ( - 1 )
009bf3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009bf4 cfe0      	RJMP _0x300008
                 _0x300009:
                +
009bf5 e020     +LDI R18 , LOW ( 0 )
009bf6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30000C:
009bf7 940e d299 	CALL SUBOPT_0x355
009bf9 f4dc      	BRGE _0x30000D
                 ; 0018 0015             t = a[max][j];
009bfa 940e d292 	CALL SUBOPT_0x354
009bfc 940e d29e 	CALL SUBOPT_0x356
009bfe 940e c0b8 	CALL SUBOPT_0xB8
                 ; 0018 0016             a[max][j] = a[i][j];
009c00 940e d292 	CALL SUBOPT_0x354
009c02 940e d2a2 	CALL SUBOPT_0x357
009c04 010f      	MOVW R0,R30
009c05 940e d2a6 	CALL SUBOPT_0x358
009c07 940e d29e 	CALL SUBOPT_0x356
009c09 01d0      	MOVW R26,R0
009c0a 940e d9ff 	CALL __PUTDP1
                 ; 0018 0017             a[i][j] = t;
009c0c 940e d2a6 	CALL SUBOPT_0x358
009c0e 940e d2a2 	CALL SUBOPT_0x357
009c10 940e c9ff 	CALL SUBOPT_0x23A
                 ; 0018 0018         }
                +
009c12 5f2f     +SUBI R18 , LOW ( - 1 )
009c13 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009c14 cfe2      	RJMP _0x30000C
                 _0x30000D:
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                +
009c15 9120 1a71+LDS R18 , 0 + ( _n )
009c17 9130 1a72+LDS R19 , 0 + ( _n ) + 1
                 	__GETWRMN 18,19,0,_n
                 _0x30000F:
                +
009c19 1720     +CP R18 , R16
009c1a 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009c1b f414      	BRGE PC+3
009c1c 940c 9c67 	JMP _0x300010
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
009c1e 01f8      	MOVW R30,R16
009c1f 9631      	ADIW R30,1
009c20 01af      	MOVW R20,R30
                 _0x300012:
009c21 940e d283 	CALL SUBOPT_0x351
009c23 174e      	CP   R20,R30
009c24 075f      	CPC  R21,R31
009c25 f5f4      	BRGE _0x300013
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
009c26 01fa      	MOVW R30,R20
009c27 940e d8df 	CALL __LSLW4
009c29 58ed      	SUBI R30,LOW(-_a)
009c2a 4ef5      	SBCI R31,HIGH(-_a)
009c2b 010f      	MOVW R0,R30
009c2c 940e d2a2 	CALL SUBOPT_0x357
009c2e 93ff      	PUSH R31
009c2f 93ef      	PUSH R30
009c30 01df      	MOVW R26,R30
009c31 940e d9f4 	CALL __GETD1P
009c33 937f      	PUSH R23
009c34 936f      	PUSH R22
009c35 93ff      	PUSH R31
009c36 93ef      	PUSH R30
009c37 01d0      	MOVW R26,R0
009c38 01f8      	MOVW R30,R16
009c39 940e bc9b 	CALL SUBOPT_0x1A
009c3b 937f      	PUSH R23
009c3c 936f      	PUSH R22
009c3d 93ff      	PUSH R31
009c3e 93ef      	PUSH R30
009c3f 940e d2a6 	CALL SUBOPT_0x358
009c41 940e d28e 	CALL SUBOPT_0x353
009c43 91af      	POP  R26
009c44 91bf      	POP  R27
009c45 918f      	POP  R24
009c46 919f      	POP  R25
009c47 940e d82b 	CALL __DIVF21
009c49 937f      	PUSH R23
009c4a 936f      	PUSH R22
009c4b 93ff      	PUSH R31
009c4c 93ef      	PUSH R30
009c4d 940e d2a6 	CALL SUBOPT_0x358
009c4f 940e d29e 	CALL SUBOPT_0x356
009c51 91af      	POP  R26
009c52 91bf      	POP  R27
009c53 918f      	POP  R24
009c54 919f      	POP  R25
009c55 940e d7dd 	CALL __MULF12
009c57 91af      	POP  R26
009c58 91bf      	POP  R27
009c59 918f      	POP  R24
009c5a 919f      	POP  R25
009c5b 940e c95c 	CALL SUBOPT_0x220
009c5d 91af      	POP  R26
009c5e 91bf      	POP  R27
009c5f 940e d9ff 	CALL __PUTDP1
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                +
009c61 5f4f     +SUBI R20 , LOW ( - 1 )
009c62 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
009c63 cfbd      	RJMP _0x300012
                 _0x300013:
                 ; 0018 002B         }
                +
009c64 5021     +SUBI R18 , LOW ( 1 )
009c65 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009c66 cfb2      	RJMP _0x30000F
                 _0x300010:
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                +
009c67 5f0f     +SUBI R16 , LOW ( - 1 )
009c68 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009c69 cf5f      	RJMP _0x300005
                 _0x300006:
                 ; 0018 003A }
                 _0x20E002E:
009c6a 940e daa0 	CALL __LOADLOCR6
009c6c 962c      	ADIW R28,12
009c6d 9508      	RET
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 _reverseElimination:
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
009c6e 940e da99 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
009c70 940e d283 	CALL SUBOPT_0x351
009c72 9731      	SBIW R30,1
009c73 018f      	MOVW R16,R30
                 _0x300015:
009c74 2311      	TST  R17
009c75 f412      	BRPL PC+3
009c76 940c 9ce3 	JMP _0x300016
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
009c78 940e d2a6 	CALL SUBOPT_0x358
009c7a 01df      	MOVW R26,R30
009c7b 940e d283 	CALL SUBOPT_0x351
009c7d 940e bca8 	CALL SUBOPT_0x1C
009c7f 93ff      	PUSH R31
009c80 93ef      	PUSH R30
009c81 940e d2a6 	CALL SUBOPT_0x358
009c83 01df      	MOVW R26,R30
009c84 940e d283 	CALL SUBOPT_0x351
009c86 940e bc9b 	CALL SUBOPT_0x1A
009c88 937f      	PUSH R23
009c89 936f      	PUSH R22
009c8a 93ff      	PUSH R31
009c8b 93ef      	PUSH R30
009c8c 940e d2a6 	CALL SUBOPT_0x358
009c8e 940e d28e 	CALL SUBOPT_0x353
009c90 91af      	POP  R26
009c91 91bf      	POP  R27
009c92 918f      	POP  R24
009c93 919f      	POP  R25
009c94 940e d82b 	CALL __DIVF21
009c96 91af      	POP  R26
009c97 91bf      	POP  R27
009c98 940e d9ff 	CALL __PUTDP1
                 ; 0018 0041         a[i][i] = 1;
009c9a 940e d2a6 	CALL SUBOPT_0x358
009c9c 940e d2ac 	CALL SUBOPT_0x359
009c9e 940e d2b3 	CALL SUBOPT_0x35A
009ca0 940e d9ff 	CALL __PUTDP1
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
009ca2 01f8      	MOVW R30,R16
009ca3 9731      	SBIW R30,1
009ca4 019f      	MOVW R18,R30
                 _0x300018:
009ca5 2333      	TST  R19
009ca6 f1ca      	BRMI _0x300019
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
009ca7 940e d288 	CALL SUBOPT_0x352
009ca9 010f      	MOVW R0,R30
009caa 01df      	MOVW R26,R30
009cab 940e d283 	CALL SUBOPT_0x351
009cad 940e bca8 	CALL SUBOPT_0x1C
009caf 93ff      	PUSH R31
009cb0 93ef      	PUSH R30
009cb1 01df      	MOVW R26,R30
009cb2 940e d9f4 	CALL __GETD1P
009cb4 937f      	PUSH R23
009cb5 936f      	PUSH R22
009cb6 93ff      	PUSH R31
009cb7 93ef      	PUSH R30
009cb8 01d0      	MOVW R26,R0
009cb9 01f8      	MOVW R30,R16
009cba 940e bc9b 	CALL SUBOPT_0x1A
009cbc 937f      	PUSH R23
009cbd 936f      	PUSH R22
009cbe 93ff      	PUSH R31
009cbf 93ef      	PUSH R30
009cc0 940e d2a6 	CALL SUBOPT_0x358
009cc2 01df      	MOVW R26,R30
009cc3 940e d283 	CALL SUBOPT_0x351
009cc5 940e bc9b 	CALL SUBOPT_0x1A
009cc7 91af      	POP  R26
009cc8 91bf      	POP  R27
009cc9 918f      	POP  R24
009cca 919f      	POP  R25
009ccb 940e d7dd 	CALL __MULF12
009ccd 91af      	POP  R26
009cce 91bf      	POP  R27
009ccf 918f      	POP  R24
009cd0 919f      	POP  R25
009cd1 940e c95c 	CALL SUBOPT_0x220
009cd3 91af      	POP  R26
009cd4 91bf      	POP  R27
009cd5 940e d9ff 	CALL __PUTDP1
                 ; 0018 0044             a[j][i] = 0;
009cd7 940e d288 	CALL SUBOPT_0x352
009cd9 940e d2ac 	CALL SUBOPT_0x359
009cdb 940e bfab 	CALL SUBOPT_0x8F
                 ; 0018 0045         }
                +
009cdd 5021     +SUBI R18 , LOW ( 1 )
009cde 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009cdf cfc5      	RJMP _0x300018
                 _0x300019:
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                +
009ce0 5001     +SUBI R16 , LOW ( 1 )
009ce1 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
009ce2 cf91      	RJMP _0x300015
                 _0x300016:
                 ; 0018 0052 }
009ce3 940e daa0 	CALL __LOADLOCR6
009ce5 940c a091 	JMP  _0x20E0029
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 _gaussian:
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
009ce7 940e bf4d 	CALL SUBOPT_0x7F
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
009ce9 940e d2b3 	CALL SUBOPT_0x35A
009ceb 93e0 1a73 	STS  _a,R30
009ced 93f0 1a74 	STS  _a+1,R31
009cef 9360 1a75 	STS  _a+2,R22
009cf1 9370 1a76 	STS  _a+3,R23
009cf3 940e c0d5 	CALL SUBOPT_0xBD
                +
009cf5 93e0 1a77+STS _a + ( 4 ) , R30
009cf7 93f0 1a78+STS _a + ( 4 ) + 1 , R31
009cf9 9360 1a79+STS _a + ( 4 ) + 2 , R22
009cfb 9370 1a7a+STS _a + ( 4 ) + 3 , R23
                 	__PUTD1MN _a,4
009cfd 940e c0d5 	CALL SUBOPT_0xBD
009cff 940e c0df 	CALL SUBOPT_0xBF
009d01 940e d7dd 	CALL __MULF12
                +
009d03 93e0 1a7b+STS _a + ( 8 ) , R30
009d05 93f0 1a7c+STS _a + ( 8 ) + 1 , R31
009d07 9360 1a7d+STS _a + ( 8 ) + 2 , R22
009d09 9370 1a7e+STS _a + ( 8 ) + 3 , R23
                 	__PUTD1MN _a,8
009d0b 940e c17b 	CALL SUBOPT_0xD6
                +
009d0d 93e0 1a7f+STS _a + ( 12 ) , R30
009d0f 93f0 1a80+STS _a + ( 12 ) + 1 , R31
009d11 9360 1a81+STS _a + ( 12 ) + 2 , R22
009d13 9370 1a82+STS _a + ( 12 ) + 3 , R23
                 	__PUTD1MN _a,12
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                +
009d15 e8e3     +LDI R30 , LOW ( _a + ( 16 ) )
009d16 e1fa     +LDI R31 , HIGH ( _a + ( 16 ) )
                 	__POINTW1MN _a,16
009d17 940e d2b8 	CALL SUBOPT_0x35B
009d19 940e c16c 	CALL SUBOPT_0xD3
                +
009d1b 93e0 1a87+STS _a + ( 20 ) , R30
009d1d 93f0 1a88+STS _a + ( 20 ) + 1 , R31
009d1f 9360 1a89+STS _a + ( 20 ) + 2 , R22
009d21 9370 1a8a+STS _a + ( 20 ) + 3 , R23
                 	__PUTD1MN _a,20
009d23 940e c16c 	CALL SUBOPT_0xD3
009d25 940e c0c8 	CALL SUBOPT_0xBB
009d27 940e d7dd 	CALL __MULF12
                +
009d29 93e0 1a8b+STS _a + ( 24 ) , R30
009d2b 93f0 1a8c+STS _a + ( 24 ) + 1 , R31
009d2d 9360 1a8d+STS _a + ( 24 ) + 2 , R22
009d2f 9370 1a8e+STS _a + ( 24 ) + 3 , R23
                 	__PUTD1MN _a,24
009d31 940e be77 	CALL SUBOPT_0x60
                +
009d33 93e0 1a8f+STS _a + ( 28 ) , R30
009d35 93f0 1a90+STS _a + ( 28 ) + 1 , R31
009d37 9360 1a91+STS _a + ( 28 ) + 2 , R22
009d39 9370 1a92+STS _a + ( 28 ) + 3 , R23
                 	__PUTD1MN _a,28
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                +
009d3b e9e3     +LDI R30 , LOW ( _a + ( 32 ) )
009d3c e1fa     +LDI R31 , HIGH ( _a + ( 32 ) )
                 	__POINTW1MN _a,32
009d3d 940e d2b8 	CALL SUBOPT_0x35B
009d3f 940e c0fa 	CALL SUBOPT_0xC4
                +
009d41 93e0 1a97+STS _a + ( 36 ) , R30
009d43 93f0 1a98+STS _a + ( 36 ) + 1 , R31
009d45 9360 1a99+STS _a + ( 36 ) + 2 , R22
009d47 9370 1a9a+STS _a + ( 36 ) + 3 , R23
                 	__PUTD1MN _a,36
009d49 940e c0fa 	CALL SUBOPT_0xC4
009d4b 940e c171 	CALL SUBOPT_0xD4
009d4d 940e d7dd 	CALL __MULF12
                +
009d4f 93e0 1a9b+STS _a + ( 40 ) , R30
009d51 93f0 1a9c+STS _a + ( 40 ) + 1 , R31
009d53 9360 1a9d+STS _a + ( 40 ) + 2 , R22
009d55 9370 1a9e+STS _a + ( 40 ) + 3 , R23
                 	__PUTD1MN _a,40
009d57 940e c180 	CALL SUBOPT_0xD7
                +
009d59 93e0 1a9f+STS _a + ( 44 ) , R30
009d5b 93f0 1aa0+STS _a + ( 44 ) + 1 , R31
009d5d 9360 1aa1+STS _a + ( 44 ) + 2 , R22
009d5f 9370 1aa2+STS _a + ( 44 ) + 3 , R23
                 	__PUTD1MN _a,44
                 ; 0018 005C 
                 ; 0018 005D 
                 ; 0018 005E     printDebug("\r\n<gaussian> --- start ---\r\n");
                +
009d61 e0e6     +LDI R30 , LOW ( 2 * _0x300000 + ( 0 ) )
009d62 e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 0 ) )
009d63 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 0 ) )
009d64 e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 0 ) )
                 	__POINTD1FN _0x300000,0
009d65 940e bbec 	CALL SUBOPT_0x3
                 ; 0018 005F     for (i = 0; i < n; ++i) {
                +
009d67 e000     +LDI R16 , LOW ( 0 )
009d68 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x30001B:
009d69 940e d283 	CALL SUBOPT_0x351
009d6b 170e      	CP   R16,R30
009d6c 071f      	CPC  R17,R31
009d6d f4ac      	BRGE _0x30001C
                 ; 0018 0060         printDebug("\t\t");
009d6e 940e d2be 	CALL SUBOPT_0x35C
                 ; 0018 0061         for (j = 0; j < n + 1; ++j)
                +
009d70 e020     +LDI R18 , LOW ( 0 )
009d71 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30001E:
009d72 940e d299 	CALL SUBOPT_0x355
009d74 f44c      	BRGE _0x30001F
                 ; 0018 0062             printDebug("%.2f\t", a[i][j]);
009d75 940e d2c4 	CALL SUBOPT_0x35D
009d77 940e d29e 	CALL SUBOPT_0x356
009d79 940e c5c5 	CALL SUBOPT_0x18C
                +
009d7b 5f2f     +SUBI R18 , LOW ( - 1 )
009d7c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009d7d cff4      	RJMP _0x30001E
                 _0x30001F:
                 ; 0018 0063 printDebug("\r\n");
009d7e 940e d2cb 	CALL SUBOPT_0x35E
                 ; 0018 0064     }
                +
009d80 5f0f     +SUBI R16 , LOW ( - 1 )
009d81 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009d82 cfe6      	RJMP _0x30001B
                 _0x30001C:
                 ; 0018 0065 
                 ; 0018 0066     forwardSubstitution();
009d83 de42      	RCALL _forwardSubstitution
                 ; 0018 0067     reverseElimination();
009d84 dee9      	RCALL _reverseElimination
                 ; 0018 0068 
                 ; 0018 0069     printDebug("\r\n<gaussian> --- finish ---\r\n");
                +
009d85 e2ec     +LDI R30 , LOW ( 2 * _0x300000 + ( 38 ) )
009d86 e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 38 ) )
009d87 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 38 ) )
009d88 e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 38 ) )
                 	__POINTD1FN _0x300000,38
009d89 940e bbec 	CALL SUBOPT_0x3
                 ; 0018 006A     for (i = 0; i < n; ++i) {
                +
009d8b e000     +LDI R16 , LOW ( 0 )
009d8c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x300021:
009d8d 940e d283 	CALL SUBOPT_0x351
009d8f 170e      	CP   R16,R30
009d90 071f      	CPC  R17,R31
009d91 f4ac      	BRGE _0x300022
                 ; 0018 006B         printDebug("\t\t");
009d92 940e d2be 	CALL SUBOPT_0x35C
                 ; 0018 006C         for (j = 0; j < n + 1; ++j)
                +
009d94 e020     +LDI R18 , LOW ( 0 )
009d95 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x300024:
009d96 940e d299 	CALL SUBOPT_0x355
009d98 f44c      	BRGE _0x300025
                 ; 0018 006D             printDebug("%.2f\t", a[i][j]);
009d99 940e d2c4 	CALL SUBOPT_0x35D
009d9b 940e d29e 	CALL SUBOPT_0x356
009d9d 940e c5c5 	CALL SUBOPT_0x18C
                +
009d9f 5f2f     +SUBI R18 , LOW ( - 1 )
009da0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009da1 cff4      	RJMP _0x300024
                 _0x300025:
                 ; 0018 006E printDebug("\r\n");
009da2 940e d2cb 	CALL SUBOPT_0x35E
                 ; 0018 006F     }
                +
009da4 5f0f     +SUBI R16 , LOW ( - 1 )
009da5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009da6 cfe6      	RJMP _0x300021
                 _0x300022:
                 ; 0018 0070 
                 ; 0018 0071     *resA = a[2][3];
                +
009da7 91e0 1a9f+LDS R30 , _a + ( 44 )
009da9 91f0 1aa0+LDS R31 , _a + ( 44 ) + 1
009dab 9160 1aa1+LDS R22 , _a + ( 44 ) + 2
009dad 9170 1aa2+LDS R23 , _a + ( 44 ) + 3
                 	__GETD1MN _a,44
009daf 85a8      	LDD  R26,Y+8
009db0 85b9      	LDD  R27,Y+8+1
009db1 940e d9ff 	CALL __PUTDP1
                 ; 0018 0072     *resB = a[1][3];
                +
009db3 91e0 1a8f+LDS R30 , _a + ( 28 )
009db5 91f0 1a90+LDS R31 , _a + ( 28 ) + 1
009db7 9160 1a91+LDS R22 , _a + ( 28 ) + 2
009db9 9170 1a92+LDS R23 , _a + ( 28 ) + 3
                 	__GETD1MN _a,28
009dbb 81ae      	LDD  R26,Y+6
009dbc 81bf      	LDD  R27,Y+6+1
009dbd 940e d9ff 	CALL __PUTDP1
                 ; 0018 0073     *resC = a[0][3];
                +
009dbf 91e0 1a7f+LDS R30 , _a + ( 12 )
009dc1 91f0 1a80+LDS R31 , _a + ( 12 ) + 1
009dc3 9160 1a81+LDS R22 , _a + ( 12 ) + 2
009dc5 9170 1a82+LDS R23 , _a + ( 12 ) + 3
                 	__GETD1MN _a,12
009dc7 81ac      	LDD  R26,Y+4
009dc8 81bd      	LDD  R27,Y+4+1
009dc9 940e d9ff 	CALL __PUTDP1
                 ; 0018 0074 
                 ; 0018 0075     printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                +
009dcb e4ea     +LDI R30 , LOW ( 2 * _0x300000 + ( 68 ) )
009dcc e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 68 ) )
009dcd e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 68 ) )
009dce e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 68 ) )
                 	__POINTD1FN _0x300000,68
009dcf 940e da29 	CALL __PUTPARD1
009dd1 85ac      	LDD  R26,Y+12
009dd2 85bd      	LDD  R27,Y+12+1
009dd3 940e d2d1 	CALL SUBOPT_0x35F
009dd5 85ae      	LDD  R26,Y+14
009dd6 85bf      	LDD  R27,Y+14+1
009dd7 940e d2d1 	CALL SUBOPT_0x35F
009dd9 89a8      	LDD  R26,Y+16
009dda 89b9      	LDD  R27,Y+16+1
009ddb 940e d9f4 	CALL __GETD1P
009ddd 940e bfa8 	CALL SUBOPT_0x8E
                 ; 0018 0076 
                 ; 0018 0077     return;
009ddf 940e daa2 	CALL __LOADLOCR4
009de1 96a2      	ADIW R28,34
009de2 9508      	RET
                 ; 0018 0078 }
                 
                 	.CSEG
                 _fabs:
009de3 940e da2e 	CALL __PUTPARD2
009de5 91e9          ld   r30,y+
009de6 91f9          ld   r31,y+
009de7 9169          ld   r22,y+
009de8 9179          ld   r23,y+
009de9 777f          cbr  r23,0x80
009dea 9508          ret
                 _atoi:
009deb 93ba      	ST   -Y,R27
009dec 93aa      	ST   -Y,R26
009ded 81b9         	ldd  r27,y+1
009dee 81a8         	ld   r26,y
                 __atoi0:
009def 91ec         	ld   r30,x
009df0 2f8a              mov  r24,r26
009df1 2fae      	MOV  R26,R30
009df2 940e bb6e 	CALL _isspace
009df4 2fa8              mov  r26,r24
009df5 23ee         	tst  r30
009df6 f011         	breq __atoi1
009df7 9611         	adiw r26,1
009df8 cff6         	rjmp __atoi0
                 __atoi1:
009df9 94e8         	clt
009dfa 91ec         	ld   r30,x
009dfb 32ed         	cpi  r30,'-'
009dfc f411         	brne __atoi2
009dfd 9468         	set
009dfe c002         	rjmp __atoi3
                 __atoi2:
009dff 32eb         	cpi  r30,'+'
009e00 f409         	brne __atoi4
                 __atoi3:
009e01 9611         	adiw r26,1
                 __atoi4:
009e02 2766         	clr  r22
009e03 2777         	clr  r23
                 __atoi5:
009e04 91ec         	ld   r30,x
009e05 2f8a              mov  r24,r26
009e06 2fae      	MOV  R26,R30
009e07 940e bb5c 	CALL _isdigit
009e09 2fa8              mov  r26,r24
009e0a 23ee         	tst  r30
009e0b f079         	breq __atoi6
009e0c 01fb         	movw r30,r22
009e0d 0f66         	lsl  r22
009e0e 1f77         	rol  r23
009e0f 0f66         	lsl  r22
009e10 1f77         	rol  r23
009e11 0f6e         	add  r22,r30
009e12 1f7f         	adc  r23,r31
009e13 0f66         	lsl  r22
009e14 1f77         	rol  r23
009e15 91ed         	ld   r30,x+
009e16 27ff         	clr  r31
009e17 53e0         	subi r30,'0'
009e18 0f6e         	add  r22,r30
009e19 1f7f         	adc  r23,r31
009e1a cfe9         	rjmp __atoi5
                 __atoi6:
009e1b 01fb         	movw r30,r22
009e1c f41e         	brtc __atoi7
009e1d 95e0         	com  r30
009e1e 95f0         	com  r31
009e1f 9631         	adiw r30,1
                 __atoi7:
009e20 9622         	adiw r28,2
009e21 9508         	ret
                 _atol:
009e22 93ba      	ST   -Y,R27
009e23 93aa      	ST   -Y,R26
009e24 81b9          ldd  r27,y+1
009e25 81a8          ld   r26,y
                 __atol0:
009e26 91ec          ld   r30,x
009e27 93af          push r26
009e28 2fae      	MOV  R26,R30
009e29 940e bb6e 	CALL _isspace
009e2b 91af          pop  r26
009e2c 23ee          tst  r30
009e2d f011          breq __atol1
009e2e 9611          adiw r26,1
009e2f cff6          rjmp __atol0
                 __atol1:
009e30 94e8          clt
009e31 91ec          ld   r30,x
009e32 32ed          cpi  r30,'-'
009e33 f411          brne __atol2
009e34 9468          set
009e35 c002          rjmp __atol3
                 __atol2:
009e36 32eb          cpi  r30,'+'
009e37 f409          brne __atol4
                 __atol3:
009e38 9611          adiw r26,1
                 __atol4:
009e39 2400          clr  r0
009e3a 2411          clr  r1
009e3b 2788          clr  r24
009e3c 2799          clr  r25
                 __atol5:
009e3d 91ec          ld   r30,x
009e3e 93af          push r26
009e3f 2fae      	MOV  R26,R30
009e40 940e bb5c 	CALL _isdigit
009e42 91af          pop  r26
009e43 23ee          tst  r30
009e44 f089          breq __atol6
009e45 01f0          movw r30,r0
009e46 01bc          movw r22,r24
009e47 d01b          rcall __atol8
009e48 d01a          rcall __atol8
009e49 0e0e          add  r0,r30
009e4a 1e1f          adc  r1,r31
009e4b 1f86          adc  r24,r22
009e4c 1f97          adc  r25,r23
009e4d d015          rcall __atol8
009e4e 91ed          ld   r30,x+
009e4f 27ff          clr  r31
009e50 53e0          subi r30,'0'
009e51 0e0e          add  r0,r30
009e52 1e1f          adc  r1,r31
009e53 1f8f          adc  r24,r31
009e54 1f9f          adc  r25,r31
009e55 cfe7          rjmp __atol5
                 __atol6:
009e56 01f0          movw r30,r0
009e57 01bc          movw r22,r24
009e58 f446          brtc __atol7
009e59 95e0          com  r30
009e5a 95f0          com  r31
009e5b 9560          com  r22
009e5c 9570          com  r23
009e5d 2788          clr  r24
009e5e 9631          adiw r30,1
009e5f 1f68          adc  r22,r24
009e60 1f78          adc  r23,r24
                 __atol7:
009e61 9622          adiw r28,2
009e62 9508          ret
                 
                 __atol8:
009e63 0c00          lsl  r0
009e64 1c11          rol  r1
009e65 1f88          rol  r24
009e66 1f99          rol  r25
009e67 9508          ret
                 _ftoa:
009e68 940e d27a 	CALL SUBOPT_0x34F
009e6a 83e8      	ST   Y,R30
009e6b e0e0      	LDI  R30,LOW(0)
009e6c 83e9      	STD  Y+1,R30
009e6d 83ea      	STD  Y+2,R30
009e6e e3ef      	LDI  R30,LOW(63)
009e6f 83eb      	STD  Y+3,R30
009e70 931a      	ST   -Y,R17
009e71 930a      	ST   -Y,R16
009e72 85eb      	LDD  R30,Y+11
009e73 85fc      	LDD  R31,Y+11+1
009e74 3fef      	CPI  R30,LOW(0xFFFF)
009e75 efaf      	LDI  R26,HIGH(0xFFFF)
009e76 07fa      	CPC  R31,R26
009e77 f449      	BRNE _0x200000D
009e78 940e c493 	CALL SUBOPT_0x15D
                +
009e7a e7a4     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
009e7b e6b7     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
009e7c e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
009e7d e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
009e7e 940e a175 	CALL _strcpyf
009e80 c0a5      	RJMP _0x20E002D
                 _0x200000D:
009e81 3fef      	CPI  R30,LOW(0x7FFF)
009e82 e7af      	LDI  R26,HIGH(0x7FFF)
009e83 07fa      	CPC  R31,R26
009e84 f449      	BRNE _0x200000C
009e85 940e c493 	CALL SUBOPT_0x15D
                +
009e87 e7a5     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
009e88 e6b7     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
009e89 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
009e8a e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
009e8b 940e a175 	CALL _strcpyf
009e8d c098      	RJMP _0x20E002D
                 _0x200000C:
009e8e 85ac      	LDD  R26,Y+12
009e8f 23aa      	TST  R26
009e90 f452      	BRPL _0x200000F
009e91 940e bebe 	CALL SUBOPT_0x6B
009e93 940e d6e7 	CALL __ANEGF1
009e95 940e d2d6 	CALL SUBOPT_0x360
009e97 940e d2db 	CALL SUBOPT_0x361
009e99 e2ed      	LDI  R30,LOW(45)
009e9a 93ec      	ST   X,R30
                 _0x200000F:
009e9b 85a8      	LDD  R26,Y+8
009e9c 30a7      	CPI  R26,LOW(0x7)
009e9d f010      	BRLO _0x2000010
009e9e e0e6      	LDI  R30,LOW(6)
009e9f 87e8      	STD  Y+8,R30
                 _0x2000010:
009ea0 8518      	LDD  R17,Y+8
                 _0x2000011:
009ea1 2fe1      	MOV  R30,R17
009ea2 5011      	SUBI R17,1
009ea3 30e0      	CPI  R30,0
009ea4 f039      	BREQ _0x2000013
009ea5 940e c0ae 	CALL SUBOPT_0xB6
009ea7 940e c890 	CALL SUBOPT_0x203
009ea9 940e c0a4 	CALL SUBOPT_0xB4
009eab cff5      	RJMP _0x2000011
                 _0x2000013:
009eac 940e d2e2 	CALL SUBOPT_0x362
009eae 940e d78d 	CALL __ADDF12
009eb0 940e d2d6 	CALL SUBOPT_0x360
009eb2 e010      	LDI  R17,LOW(0)
009eb3 940e d2b3 	CALL SUBOPT_0x35A
009eb5 940e c0a4 	CALL SUBOPT_0xB4
                 _0x2000014:
009eb7 940e d2e2 	CALL SUBOPT_0x362
009eb9 940e d870 	CALL __CMPF12
009ebb f098      	BRLO _0x2000016
009ebc 940e c0ae 	CALL SUBOPT_0xB6
009ebe 940e d2e9 	CALL SUBOPT_0x363
009ec0 940e c0a4 	CALL SUBOPT_0xB4
009ec2 5f1f      	SUBI R17,-LOW(1)
009ec3 3217      	CPI  R17,39
009ec4 f048      	BRLO _0x2000017
009ec5 940e c493 	CALL SUBOPT_0x15D
                +
009ec7 e7a9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
009ec8 e6b7     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
009ec9 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
009eca e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
009ecb 940e a175 	CALL _strcpyf
009ecd c058      	RJMP _0x20E002D
                 _0x2000017:
009ece cfe8      	RJMP _0x2000014
                 _0x2000016:
009ecf 3010      	CPI  R17,0
009ed0 f429      	BRNE _0x2000018
009ed1 940e d2db 	CALL SUBOPT_0x361
009ed3 e3e0      	LDI  R30,LOW(48)
009ed4 93ec      	ST   X,R30
009ed5 c028      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
009ed6 2fe1      	MOV  R30,R17
009ed7 5011      	SUBI R17,1
009ed8 30e0      	CPI  R30,0
009ed9 f121      	BREQ _0x200001C
009eda 940e c0ae 	CALL SUBOPT_0xB6
009edc 940e c890 	CALL SUBOPT_0x203
009ede 940e d2ee 	CALL SUBOPT_0x364
009ee0 01df      	MOVW R26,R30
009ee1 01cb      	MOVW R24,R22
009ee2 940e bbc1 	CALL _floor
009ee4 940e c0a4 	CALL SUBOPT_0xB4
009ee6 940e d2e2 	CALL SUBOPT_0x362
009ee8 940e d82b 	CALL __DIVF21
009eea 940e d71a 	CALL __CFD1U
009eec 2f0e      	MOV  R16,R30
009eed 940e d2db 	CALL SUBOPT_0x361
009eef 940e d2f5 	CALL SUBOPT_0x365
009ef1 940e c0ae 	CALL SUBOPT_0xB6
009ef3 940e c89e 	CALL SUBOPT_0x205
009ef5 940e d7dd 	CALL __MULF12
009ef7 940e d2fb 	CALL SUBOPT_0x366
009ef9 940e c95c 	CALL SUBOPT_0x220
009efb 940e d2d6 	CALL SUBOPT_0x360
009efd cfd8      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
009efe 85e8      	LDD  R30,Y+8
009eff 30e0      	CPI  R30,0
009f00 f109      	BREQ _0x20E002C
009f01 940e d2db 	CALL SUBOPT_0x361
009f03 e2ee      	LDI  R30,LOW(46)
009f04 93ec      	ST   X,R30
                 _0x200001E:
009f05 85e8      	LDD  R30,Y+8
009f06 50e1      	SUBI R30,LOW(1)
009f07 87e8      	STD  Y+8,R30
009f08 5fef      	SUBI R30,-LOW(1)
009f09 f0c1      	BREQ _0x2000020
009f0a 940e d2fb 	CALL SUBOPT_0x366
009f0c 940e d2e9 	CALL SUBOPT_0x363
009f0e 940e d2d6 	CALL SUBOPT_0x360
009f10 940e bebe 	CALL SUBOPT_0x6B
009f12 940e d71a 	CALL __CFD1U
009f14 2f0e      	MOV  R16,R30
009f15 940e d2db 	CALL SUBOPT_0x361
009f17 940e d2f5 	CALL SUBOPT_0x365
009f19 940e d2fb 	CALL SUBOPT_0x366
009f1b 940e c89e 	CALL SUBOPT_0x205
009f1d 940e c95c 	CALL SUBOPT_0x220
009f1f 940e d2d6 	CALL SUBOPT_0x360
009f21 cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002C:
009f22 81ae      	LDD  R26,Y+6
009f23 81bf      	LDD  R27,Y+6+1
009f24 e0e0      	LDI  R30,LOW(0)
009f25 93ec      	ST   X,R30
                 _0x20E002D:
009f26 8119      	LDD  R17,Y+1
009f27 8108      	LDD  R16,Y+0
009f28 962d      	ADIW R28,13
009f29 9508      	RET
                 _atof:
009f2a 93ba      	ST   -Y,R27
009f2b 93aa      	ST   -Y,R26
009f2c 972a      	SBIW R28,10
009f2d 940e da99 	CALL __SAVELOCR6
009f2f e0e0      	LDI  R30,LOW(0)
                +
009f30 87e8     +STD Y + 8 , R30
009f31 87e9     +STD Y + 8 + 1 , R30
009f32 87ea     +STD Y + 8 + 2 , R30
009f33 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
009f34 89a8      	LDD  R26,Y+16
009f35 89b9      	LDD  R27,Y+16+1
009f36 91ec      	LD   R30,X
009f37 2f5e      	MOV  R21,R30
009f38 2fae      	MOV  R26,R30
009f39 940e bb6e 	CALL _isspace
009f3b 30e0      	CPI  R30,0
009f3c f019      	BREQ _0x200003E
009f3d 940e d300 	CALL SUBOPT_0x367
009f3f cff4      	RJMP _0x200003C
                 _0x200003E:
009f40 e0e0      	LDI  R30,LOW(0)
009f41 83ef      	STD  Y+7,R30
009f42 325b      	CPI  R21,43
009f43 f021      	BREQ _0x2000073
009f44 325d      	CPI  R21,45
009f45 f439      	BRNE _0x2000041
009f46 e0e1      	LDI  R30,LOW(1)
009f47 83ef      	STD  Y+7,R30
                 _0x2000073:
009f48 89e8      	LDD  R30,Y+16
009f49 89f9      	LDD  R31,Y+16+1
009f4a 9631      	ADIW R30,1
009f4b 8be8      	STD  Y+16,R30
009f4c 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
009f4d e0e0      	LDI  R30,LOW(0)
009f4e 2f4e      	MOV  R20,R30
009f4f 2f5e      	MOV  R21,R30
                +
009f50 8908     +LDD R16 , Y + 16
009f51 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
009f52 89a8      	LDD  R26,Y+16
009f53 89b9      	LDD  R27,Y+16+1
009f54 940e d23e 	CALL SUBOPT_0x346
009f56 f449      	BRNE _0x2000045
009f57 89a8      	LDD  R26,Y+16
009f58 89b9      	LDD  R27,Y+16+1
009f59 91ac      	LD   R26,X
009f5a e2ee      	LDI  R30,LOW(46)
009f5b 940e d923 	CALL __EQB12
009f5d 2f5e      	MOV  R21,R30
009f5e 30e0      	CPI  R30,0
009f5f f021      	BREQ _0x2000044
                 _0x2000045:
009f60 2b45      	OR   R20,R21
009f61 940e d300 	CALL SUBOPT_0x367
009f63 cfee      	RJMP _0x2000042
                 _0x2000044:
                +
009f64 8928     +LDD R18 , Y + 16
009f65 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
009f66 3040      	CPI  R20,0
009f67 f0e9      	BREQ _0x2000047
009f68 89e8      	LDD  R30,Y+16
009f69 89f9      	LDD  R31,Y+16+1
009f6a 9731      	SBIW R30,1
009f6b 8be8      	STD  Y+16,R30
009f6c 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
009f6d 89a8      	LDD  R26,Y+16
009f6e 89b9      	LDD  R27,Y+16+1
009f6f 91ac      	LD   R26,X
009f70 32ae      	CPI  R26,LOW(0x2E)
009f71 f099      	BREQ _0x200004A
009f72 89a8      	LDD  R26,Y+16
009f73 89b9      	LDD  R27,Y+16+1
009f74 940e d1f3 	CALL SUBOPT_0x338
009f76 97f0      	SBIW R30,48
009f77 940e c18f 	CALL SUBOPT_0xDB
009f79 940e c89e 	CALL SUBOPT_0x205
009f7b 940e c037 	CALL SUBOPT_0xA1
009f7d 940e d20a 	CALL SUBOPT_0x33D
009f7f 89e8      	LDD  R30,Y+16
009f80 89f9      	LDD  R31,Y+16+1
009f81 9731      	SBIW R30,1
009f82 8be8      	STD  Y+16,R30
009f83 8bf9      	STD  Y+16+1,R31
009f84 cfe8      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
009f85 940e d2b3 	CALL SUBOPT_0x35A
009f87 940e c205 	CALL SUBOPT_0xED
                 _0x200004B:
009f89 89a8      	LDD  R26,Y+16
009f8a 89b9      	LDD  R27,Y+16+1
009f8b 9711      	SBIW R26,1
009f8c 8ba8      	STD  Y+16,R26
009f8d 8bb9      	STD  Y+16+1,R27
009f8e 17a0      	CP   R26,R16
009f8f 07b1      	CPC  R27,R17
009f90 f0a0      	BRLO _0x200004D
009f91 940e d1f3 	CALL SUBOPT_0x338
009f93 97f0      	SBIW R30,48
009f94 940e bc2e 	CALL SUBOPT_0xB
009f96 940e c89e 	CALL SUBOPT_0x205
009f98 940e d7dd 	CALL __MULF12
009f9a 940e c18f 	CALL SUBOPT_0xDB
009f9c 940e d78d 	CALL __ADDF12
009f9e 940e d20a 	CALL SUBOPT_0x33D
009fa0 940e d306 	CALL SUBOPT_0x368
009fa2 940e c205 	CALL SUBOPT_0xED
009fa4 cfe4      	RJMP _0x200004B
                 _0x200004D:
009fa5 01d9      	MOVW R26,R18
                +
009fa6 5f2f     +SUBI R18 , LOW ( - 1 )
009fa7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009fa8 915c      	LD   R21,X
009fa9 3655      	CPI  R21,101
009faa f019      	BREQ _0x200004F
009fab 3455      	CPI  R21,69
009fac f009      	BREQ _0x200004F
009fad c059      	RJMP _0x200004E
                 _0x200004F:
009fae e0e0      	LDI  R30,LOW(0)
009faf 2f4e      	MOV  R20,R30
009fb0 83ee      	STD  Y+6,R30
009fb1 01d9      	MOVW R26,R18
009fb2 915c      	LD   R21,X
009fb3 325b      	CPI  R21,43
009fb4 f021      	BREQ _0x2000074
009fb5 325d      	CPI  R21,45
009fb6 f421      	BRNE _0x2000053
009fb7 e0e1      	LDI  R30,LOW(1)
009fb8 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
009fb9 5f2f     +SUBI R18 , LOW ( - 1 )
009fba 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
009fbb 01d9      	MOVW R26,R18
                +
009fbc 5f2f     +SUBI R18 , LOW ( - 1 )
009fbd 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009fbe 91ec      	LD   R30,X
009fbf 2f5e      	MOV  R21,R30
009fc0 2fae      	MOV  R26,R30
009fc1 940e bb5c 	CALL _isdigit
009fc3 30e0      	CPI  R30,0
009fc4 f039      	BREQ _0x2000056
009fc5 e0aa      	LDI  R26,LOW(10)
009fc6 024a      	MULS R20,R26
009fc7 01f0      	MOVW R30,R0
009fc8 0fe5      	ADD  R30,R21
009fc9 53e0      	SUBI R30,LOW(48)
009fca 2f4e      	MOV  R20,R30
009fcb cfef      	RJMP _0x2000054
                 _0x2000056:
009fcc 3247      	CPI  R20,39
009fcd f068      	BRLO _0x2000057
009fce 81ef      	LDD  R30,Y+7
009fcf 30e0      	CPI  R30,0
009fd0 f029      	BREQ _0x2000058
                +
009fd1 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
009fd2 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
009fd3 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
009fd4 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
009fd5 c03c      	RJMP _0x20E002B
                 _0x2000058:
                +
009fd6 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
009fd7 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
009fd8 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
009fd9 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
009fda c037      	RJMP _0x20E002B
                 _0x2000057:
009fdb e250      	LDI  R21,LOW(32)
009fdc 940e d2b3 	CALL SUBOPT_0x35A
009fde 940e c205 	CALL SUBOPT_0xED
                 _0x2000059:
009fe0 3050      	CPI  R21,0
009fe1 f089      	BREQ _0x200005B
009fe2 940e c194 	CALL SUBOPT_0xDC
009fe4 940e bc2e 	CALL SUBOPT_0xB
009fe6 940e d7dd 	CALL __MULF12
009fe8 940e c205 	CALL SUBOPT_0xED
009fea 2fe4      	MOV  R30,R20
009feb 23e5      	AND  R30,R21
009fec f021      	BREQ _0x200005C
009fed 940e d306 	CALL SUBOPT_0x368
009fef 940e c205 	CALL SUBOPT_0xED
                 _0x200005C:
009ff1 9556      	LSR  R21
009ff2 cfed      	RJMP _0x2000059
                 _0x200005B:
009ff3 81ee      	LDD  R30,Y+6
009ff4 30e0      	CPI  R30,0
009ff5 f039      	BREQ _0x200005D
009ff6 940e c194 	CALL SUBOPT_0xDC
009ff8 940e c18f 	CALL SUBOPT_0xDB
009ffa 940e d82b 	CALL __DIVF21
009ffc c006      	RJMP _0x2000075
                 _0x200005D:
009ffd 940e c194 	CALL SUBOPT_0xDC
009fff 940e c18f 	CALL SUBOPT_0xDB
00a001 940e d7dd 	CALL __MULF12
                 _0x2000075:
                +
00a003 87e8     +STD Y + 8 , R30
00a004 87f9     +STD Y + 8 + 1 , R31
00a005 876a     +STD Y + 8 + 2 , R22
00a006 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
00a007 81ef      	LDD  R30,Y+7
00a008 30e0      	CPI  R30,0
00a009 f031      	BREQ _0x200005F
00a00a 940e be05 	CALL SUBOPT_0x4F
00a00c 940e d6e7 	CALL __ANEGF1
00a00e 940e d20a 	CALL SUBOPT_0x33D
                 _0x200005F:
00a010 940e be05 	CALL SUBOPT_0x4F
                 _0x20E002B:
00a012 940e daa0 	CALL __LOADLOCR6
00a014 9662      	ADIW R28,18
00a015 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
00a016 940e bfe2 	CALL SUBOPT_0x95
00a018 940e d919 	CALL __CWD1
00a01a 940e d309 	CALL SUBOPT_0x369
00a01c c0d7      	RJMP _0x20E0027
                 _rand:
00a01d 91e0 1aa3 	LDS  R30,__seed_G100
00a01f 91f0 1aa4 	LDS  R31,__seed_G100+1
00a021 9160 1aa5 	LDS  R22,__seed_G100+2
00a023 9170 1aa6 	LDS  R23,__seed_G100+3
                +
00a025 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
00a026 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
00a027 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
00a028 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
00a029 940e d93a 	CALL __MULD12U
                +
00a02b 59ee     +SUBI R30 , LOW ( - 30562 )
00a02c 48f8     +SBCI R31 , HIGH ( - 30562 )
00a02d 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
00a02e 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
00a02f 940e d309 	CALL SUBOPT_0x369
00a031 01fb      	movw r30,r22
00a032 77ff      	andi r31,0x7F
00a033 9508      	RET
                 _allocate_block_G100:
00a034 940e d10b 	CALL SUBOPT_0x321
                +
00a036 e80a     +LDI R16 , LOW ( 7562 )
00a037 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
00a038 01d8      	MOVW R26,R16
00a039 940e c2e2 	CALL SUBOPT_0x115
                 _0x2000061:
00a03b 2e00      	MOV  R0,R16
00a03c 2a01      	OR   R0,R17
00a03d f199      	BREQ _0x2000063
00a03e 01d8      	MOVW R26,R16
00a03f 940e d9f0 	CALL __GETW1P
00a041 0fe0      	ADD  R30,R16
00a042 1ff1      	ADC  R31,R17
00a043 9634      	ADIW R30,4
00a044 01af      	MOVW R20,R30
00a045 9612      	ADIW R26,2
00a046 940e d9f0 	CALL __GETW1P
00a048 019f      	MOVW R18,R30
00a049 9730      	SBIW R30,0
00a04a f019      	BREQ _0x2000064
                +
00a04b 832e     +STD Y + 6 , R18
00a04c 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
00a04d c004      	RJMP _0x2000065
                 _0x2000064:
00a04e e0e0      	LDI  R30,LOW(8704)
00a04f e2f2      	LDI  R31,HIGH(8704)
00a050 83ee      	STD  Y+6,R30
00a051 83ff      	STD  Y+6+1,R31
                 _0x2000065:
00a052 81ae      	LDD  R26,Y+6
00a053 81bf      	LDD  R27,Y+6+1
00a054 1ba4      	SUB  R26,R20
00a055 0bb5      	SBC  R27,R21
00a056 85e8      	LDD  R30,Y+8
00a057 85f9      	LDD  R31,Y+8+1
00a058 9634      	ADIW R30,4
00a059 17ae      	CP   R26,R30
00a05a 07bf      	CPC  R27,R31
00a05b f098      	BRLO _0x2000066
00a05c 01fa      	MOVW R30,R20
                +
00a05d 01d8     +MOVW R26 , R16
00a05e 9612     +ADIW R26 , 2
00a05f 93ed     +ST X + , R30
00a060 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
00a061 01f9      	MOVW R30,R18
                +
00a062 01da     +MOVW R26 , R20
00a063 9612     +ADIW R26 , 2
00a064 93ed     +ST X + , R30
00a065 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
00a066 85e8      	LDD  R30,Y+8
00a067 85f9      	LDD  R31,Y+8+1
00a068 01da      	MOVW R26,R20
00a069 93ed      	ST   X+,R30
00a06a 93fc      	ST   X,R31
                +
00a06b 5f4c     +SUBI R20 , LOW ( - 4 )
00a06c 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
00a06d 01fa      	MOVW R30,R20
00a06e c004      	RJMP _0x20E002A
                 _0x2000066:
00a06f 0189      	MOVW R16,R18
00a070 cfca      	RJMP _0x2000061
                 _0x2000063:
00a071 e0e0      	LDI  R30,LOW(0)
00a072 e0f0      	LDI  R31,HIGH(0)
                 _0x20E002A:
00a073 940e daa0 	CALL __LOADLOCR6
00a075 962a      	ADIW R28,10
00a076 9508      	RET
                 _find_prev_block_G100:
00a077 940e bf4d 	CALL SUBOPT_0x7F
                +
00a079 e80a     +LDI R16 , LOW ( 7562 )
00a07a e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
00a07b 2e00      	MOV  R0,R16
00a07c 2a01      	OR   R0,R17
00a07d f079      	BREQ _0x2000069
00a07e 01d8      	MOVW R26,R16
00a07f 9612      	ADIW R26,2
00a080 940e d9f0 	CALL __GETW1P
00a082 019f      	MOVW R18,R30
00a083 01df      	MOVW R26,R30
00a084 81ec      	LDD  R30,Y+4
00a085 81fd      	LDD  R31,Y+4+1
00a086 17ea      	CP   R30,R26
00a087 07fb      	CPC  R31,R27
00a088 f411      	BRNE _0x200006A
00a089 01f8      	MOVW R30,R16
00a08a c004      	RJMP _0x20E0028
                 _0x200006A:
00a08b 0189      	MOVW R16,R18
00a08c cfee      	RJMP _0x2000067
                 _0x2000069:
00a08d e0e0      	LDI  R30,LOW(0)
00a08e e0f0      	LDI  R31,HIGH(0)
                 _0x20E0028:
00a08f 940e daa2 	CALL __LOADLOCR4
                 _0x20E0029:
00a091 9626      	ADIW R28,6
00a092 9508      	RET
                 _realloc:
00a093 940e d10b 	CALL SUBOPT_0x321
00a095 85ea      	LDD  R30,Y+10
00a096 85fb      	LDD  R31,Y+10+1
00a097 9730      	SBIW R30,0
00a098 f1a9      	BREQ _0x200006B
00a099 9734      	SBIW R30,4
00a09a 018f      	MOVW R16,R30
00a09b 01d8      	MOVW R26,R16
00a09c dfda      	RCALL _find_prev_block_G100
00a09d 019f      	MOVW R18,R30
00a09e 9730      	SBIW R30,0
00a09f f171      	BREQ _0x200006C
00a0a0 01d8      	MOVW R26,R16
00a0a1 9612      	ADIW R26,2
00a0a2 940e d9f0 	CALL __GETW1P
                +
00a0a4 01d9     +MOVW R26 , R18
00a0a5 9612     +ADIW R26 , 2
00a0a6 93ed     +ST X + , R30
00a0a7 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
00a0a8 85e8      	LDD  R30,Y+8
00a0a9 85f9      	LDD  R31,Y+8+1
00a0aa 9730      	SBIW R30,0
00a0ab f111      	BREQ _0x200006D
00a0ac 85a8      	LDD  R26,Y+8
00a0ad 85b9      	LDD  R27,Y+8+1
00a0ae df85      	RCALL _allocate_block_G100
00a0af 01af      	MOVW R20,R30
00a0b0 9730      	SBIW R30,0
00a0b1 f0b9      	BREQ _0x200006E
00a0b2 01d8      	MOVW R26,R16
00a0b3 940e d312 	CALL SUBOPT_0x36A
00a0b5 01df      	MOVW R26,R30
00a0b6 85e8      	LDD  R30,Y+8
00a0b7 85f9      	LDD  R31,Y+8+1
00a0b8 17ae      	CP   R26,R30
00a0b9 07bf      	CPC  R27,R31
00a0ba f420      	BRSH _0x200006F
00a0bb 81ee      	LDD  R30,Y+6
00a0bc 81ff      	LDD  R31,Y+6+1
00a0bd 87e8      	STD  Y+8,R30
00a0be 87f9      	STD  Y+8+1,R31
                 _0x200006F:
00a0bf 935a      	ST   -Y,R21
00a0c0 934a      	ST   -Y,R20
00a0c1 940e c684 	CALL SUBOPT_0x1B0
00a0c3 85ac      	LDD  R26,Y+12
00a0c4 85bd      	LDD  R27,Y+12+1
00a0c5 940e a135 	CALL _memmove
00a0c7 940c a76d 	JMP  _0x20E001F
                 _0x200006E:
00a0c9 01f8      	MOVW R30,R16
                +
00a0ca 01d9     +MOVW R26 , R18
00a0cb 9612     +ADIW R26 , 2
00a0cc 93ed     +ST X + , R30
00a0cd 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
00a0ce e0e0      	LDI  R30,LOW(0)
00a0cf e0f0      	LDI  R31,HIGH(0)
00a0d0 940c a76e 	JMP  _0x20E001E
                 _malloc:
00a0d2 940e bf59 	CALL SUBOPT_0x81
                +
00a0d4 e000     +LDI R16 , LOW ( 0 )
00a0d5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a0d6 81ea      	LDD  R30,Y+2
00a0d7 81fb      	LDD  R31,Y+2+1
00a0d8 9730      	SBIW R30,0
00a0d9 f071      	BREQ _0x2000070
00a0da 81aa      	LDD  R26,Y+2
00a0db 81bb      	LDD  R27,Y+2+1
00a0dc df57      	RCALL _allocate_block_G100
00a0dd 018f      	MOVW R16,R30
00a0de 9730      	SBIW R30,0
00a0df f041      	BREQ _0x2000071
00a0e0 931a      	ST   -Y,R17
00a0e1 930a      	ST   -Y,R16
00a0e2 e0e0      	LDI  R30,LOW(0)
00a0e3 93ea      	ST   -Y,R30
00a0e4 81ad      	LDD  R26,Y+5
00a0e5 81be      	LDD  R27,Y+5+1
00a0e6 940e a154 	CALL _memset
                 _0x2000071:
                 _0x2000070:
00a0e8 01f8      	MOVW R30,R16
00a0e9 8119      	LDD  R17,Y+1
00a0ea 8108      	LDD  R16,Y+0
00a0eb 940c a199 	JMP  _0x20E0026
                 _free:
00a0ed 940e bfe2 	CALL SUBOPT_0x95
00a0ef 93fa      	ST   -Y,R31
00a0f0 93ea      	ST   -Y,R30
00a0f1 940e c235 	CALL SUBOPT_0xF7
00a0f3 df9f      	RCALL _realloc
                 _0x20E0027:
00a0f4 9622      	ADIW R28,2
00a0f5 9508      	RET
                 
                 	.CSEG
                 _memcmp:
00a0f6 93ba      	ST   -Y,R27
00a0f7 93aa      	ST   -Y,R26
00a0f8 2766          clr  r22
00a0f9 2777          clr  r23
00a0fa 9189          ld   r24,y+
00a0fb 9199          ld   r25,y+
00a0fc 91e9          ld   r30,y+
00a0fd 91f9          ld   r31,y+
00a0fe 91a9          ld   r26,y+
00a0ff 91b9          ld   r27,y+
                 memcmp0:
00a100 9600          adiw r24,0
00a101 f029          breq memcmp1
00a102 9701          sbiw r24,1
00a103 916d          ld   r22,x+
00a104 9171          ld   r23,z+
00a105 1767          cp   r22,r23
00a106 f3c9          breq memcmp0
                 memcmp1:
00a107 1b67          sub  r22,r23
00a108 f410          brcc memcmp2
00a109 efef          ldi  r30,-1
00a10a 9508          ret
                 memcmp2:
00a10b e0e0          ldi  r30,0
00a10c f009          breq memcmp3
00a10d 95e3          inc  r30
                 memcmp3:
00a10e 9508          ret
                 _memcpy:
00a10f 93ba      	ST   -Y,R27
00a110 93aa      	ST   -Y,R26
00a111 8199          ldd  r25,y+1
00a112 8188          ld   r24,y
00a113 9600          adiw r24,0
00a114 f041          breq memcpy1
00a115 81bd          ldd  r27,y+5
00a116 81ac          ldd  r26,y+4
00a117 81fb          ldd  r31,y+3
00a118 81ea          ldd  r30,y+2
                 memcpy0:
00a119 9161          ld   r22,z+
00a11a 936d          st   x+,r22
00a11b 9701          sbiw r24,1
00a11c f7e1          brne memcpy0
                 memcpy1:
00a11d 81fd          ldd  r31,y+5
00a11e 81ec          ldd  r30,y+4
00a11f 940c a78f 	JMP  _0x20E001D
                 _memcpyf:
00a121 93ba      	ST   -Y,R27
00a122 93aa      	ST   -Y,R26
00a123 8199          ldd  r25,y+1
00a124 8188          ld   r24,y
00a125 9600          adiw r24,0
00a126 f051          breq memcpyf1
00a127 81bf          ldd  r27,y+7
00a128 81ae          ldd  r26,y+6
00a129 816c          ldd  r22,y+4
00a12a 81fb          ldd  r31,y+3
00a12b 81ea          ldd  r30,y+2
00a12c bf6b          out  rampz,r22
                 memcpyf0:
00a12d 9007          elpm r0,z+
00a12e 920d          st   x+,r0
00a12f 9701          sbiw r24,1
00a130 f7e1          brne memcpyf0
                 memcpyf1:
00a131 81ff          ldd  r31,y+7
00a132 81ee          ldd  r30,y+6
00a133 940c a74a 	JMP  _0x20E0020
                 _memmove:
00a135 93ba      	ST   -Y,R27
00a136 93aa      	ST   -Y,R26
00a137 8199          ldd  r25,y+1
00a138 8188          ld   r24,y
00a139 9600          adiw r24,0
00a13a f0a9          breq memmove3
00a13b 81bd          ldd  r27,y+5
00a13c 81ac          ldd  r26,y+4
00a13d 81fb          ldd  r31,y+3
00a13e 81ea          ldd  r30,y+2
00a13f 17ea          cp   r30,r26
00a140 07fb          cpc  r31,r27
00a141 f071          breq memmove3
00a142 f02c          brlt memmove1
                 memmove0:
00a143 9161          ld   r22,z+
00a144 936d          st   x+,r22
00a145 9701          sbiw r24,1
00a146 f7e1          brne memmove0
00a147 c008          rjmp memmove3
                 memmove1:
00a148 0fa8          add  r26,r24
00a149 1fb9          adc  r27,r25
00a14a 0fe8          add  r30,r24
00a14b 1ff9          adc  r31,r25
                 memmove2:
00a14c 9162          ld   r22,-z
00a14d 936e          st   -x,r22
00a14e 9701          sbiw r24,1
00a14f f7e1          brne memmove2
                 memmove3:
00a150 81fd          ldd  r31,y+5
00a151 81ec          ldd  r30,y+4
00a152 940c a78f 	JMP  _0x20E001D
                 _memset:
00a154 93ba      	ST   -Y,R27
00a155 93aa      	ST   -Y,R26
00a156 81b9          ldd  r27,y+1
00a157 81a8          ld   r26,y
00a158 9610          adiw r26,0
00a159 f031          breq memset1
00a15a 81fc          ldd  r31,y+4
00a15b 81eb          ldd  r30,y+3
00a15c 816a          ldd  r22,y+2
                 memset0:
00a15d 9361          st   z+,r22
00a15e 9711          sbiw r26,1
00a15f f7e9          brne memset0
                 memset1:
00a160 81eb          ldd  r30,y+3
00a161 81fc          ldd  r31,y+4
00a162 9625      	ADIW R28,5
00a163 9508      	RET
                 _strcat:
00a164 93ba      	ST   -Y,R27
00a165 93aa      	ST   -Y,R26
00a166 91e9          ld   r30,y+
00a167 91f9          ld   r31,y+
00a168 91a9          ld   r26,y+
00a169 91b9          ld   r27,y+
00a16a 01cd          movw r24,r26
                 strcat0:
00a16b 916d          ld   r22,x+
00a16c 2366          tst  r22
00a16d f7e9          brne strcat0
00a16e 9711          sbiw r26,1
                 strcat1:
00a16f 9161          ld   r22,z+
00a170 936d          st   x+,r22
00a171 2366          tst  r22
00a172 f7e1          brne strcat1
00a173 01fc          movw r30,r24
00a174 9508          ret
                 _strcpyf:
00a175 940e da2e 	CALL __PUTPARD2
00a177 91e9          ld   r30,y+
00a178 91f9          ld   r31,y+
00a179 9169          ld   r22,y+
00a17a 9179          ld   r23,y+
00a17b 91a9          ld   r26,y+
00a17c 91b9          ld   r27,y+
00a17d 01cd          movw r24,r26
00a17e bf6b          out  rampz,r22
                 strcpyf0:
00a17f 9007          elpm r0,z+
00a180 920d          st   x+,r0
00a181 2000          tst  r0
00a182 f7e1          brne strcpyf0
00a183 01fc          movw r30,r24
00a184 9508          ret
                 _strcspn:
00a185 93ba      	ST   -Y,R27
00a186 93aa      	ST   -Y,R26
00a187 81bb          ldd  r27,y+3
00a188 81aa          ldd  r26,y+2
00a189 2788          clr  r24
00a18a 2799          clr  r25
                 strcspn0:
00a18b 916d          ld   r22,x+
00a18c 2366          tst  r22
00a18d f051          breq strcspn2
00a18e 81f9          ldd  r31,y+1
00a18f 81e8          ld   r30,y
                 strcspn1:
00a190 9171          ld   r23,z+
00a191 2377          tst  r23
00a192 f019          breq strcspn3
00a193 1767          cp   r22,r23
00a194 f019          breq strcspn2
00a195 cffa          rjmp strcspn1
                 strcspn3:
00a196 9601          adiw r24,1
00a197 cff3          rjmp strcspn0
                 strcspn2:
00a198 01fc          movw r30,r24
                 _0x20E0026:
00a199 9624      	ADIW R28,4
00a19a 9508      	RET
                 _strlen:
00a19b 93ba      	ST   -Y,R27
00a19c 93aa      	ST   -Y,R26
00a19d 91a9          ld   r26,y+
00a19e 91b9          ld   r27,y+
00a19f 27ee          clr  r30
00a1a0 27ff          clr  r31
                 strlen0:
00a1a1 916d          ld   r22,x+
00a1a2 2366          tst  r22
00a1a3 f011          breq strlen1
00a1a4 9631          adiw r30,1
00a1a5 cffb          rjmp strlen0
                 strlen1:
00a1a6 9508          ret
                 _strlenf:
00a1a7 940e da2e 	CALL __PUTPARD2
00a1a9 27aa          clr  r26
00a1aa 27bb          clr  r27
00a1ab 91e9          ld   r30,y+
00a1ac 91f9          ld   r31,y+
00a1ad 9169          ld   r22,y+
00a1ae 9179          ld   r23,y+
00a1af bf6b          out  rampz,r22
                 strlenf0:
00a1b0 9007          elpm r0,z+
00a1b1 2000          tst  r0
00a1b2 f011          breq strlenf1
00a1b3 9611          adiw r26,1
00a1b4 cffb          rjmp strlenf0
                 strlenf1:
00a1b5 01fd          movw r30,r26
00a1b6 9508          ret
                 _strncmpf:
00a1b7 93aa      	ST   -Y,R26
00a1b8 9179          ld   r23,y+
00a1b9 91e9          ld   r30,y+
00a1ba 91f9          ld   r31,y+
00a1bb 9169          ld   r22,y+
00a1bc 9009          ld   r0,y+
00a1bd 91a9          ld   r26,y+
00a1be 91b9          ld   r27,y+
00a1bf 2400          clr  r0
00a1c0 2411          clr  r1
00a1c1 bf6b          out  rampz,r22
                 strncmpf0:
00a1c2 2377          tst  r23
00a1c3 f049          breq strncmpf1
00a1c4 957a          dec  r23
00a1c5 901d          ld   r1,x+
00a1c6 9007          elpm r0,z+
00a1c7 1401          cp   r0,r1
00a1c8 f421          brne strncmpf1
00a1c9 2000          tst  r0
00a1ca f7b9          brne strncmpf0
                 strncmpf3:
00a1cb 27ee          clr  r30
00a1cc c005          rjmp strncmpf2
                 strncmpf1:
00a1cd 1810          sub  r1,r0
00a1ce f3e1          breq strncmpf3
00a1cf e0e1          ldi  r30,1
00a1d0 f408          brcc strncmpf2
00a1d1 50e2          subi r30,2
                 strncmpf2:
00a1d2 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
00a1d3 931a      	ST   -Y,R17
00a1d4 e3e2      	LDI  R30,LOW(50)
00a1d5 93e0 1aa9 	STS  _timer2_G102,R30
00a1d7 efef      	LDI  R30,LOW(255)
00a1d8 bdee      	OUT  0x2E,R30
                 _0x2040004:
00a1d9 b5ed      	IN   R30,0x2D
00a1da ffe7      	SBRS R30,7
00a1db cffd      	RJMP _0x2040004
                 _0x2040008:
00a1dc efef      	LDI  R30,LOW(255)
00a1dd bdee      	OUT  0x2E,R30
                 _0x204000A:
00a1de b5ed      	IN   R30,0x2D
00a1df ffe7      	SBRS R30,7
00a1e0 cffd      	RJMP _0x204000A
00a1e1 b51e      	IN   R17,46
00a1e2 3f1f      	CPI  R17,255
00a1e3 f021      	BREQ _0x204000D
00a1e4 91e0 1aa9 	LDS  R30,_timer2_G102
00a1e6 30e0      	CPI  R30,0
00a1e7 f409      	BRNE _0x204000E
                 _0x204000D:
00a1e8 c001      	RJMP _0x2040009
                 _0x204000E:
00a1e9 cff2      	RJMP _0x2040008
                 _0x2040009:
00a1ea 2fe1      	MOV  R30,R17
00a1eb 9119      	LD   R17,Y+
00a1ec 9508      	RET
                 _release_spi_G102:
00a1ed 9a28      	SBI  0x5,0
00a1ee efef      	LDI  R30,LOW(255)
00a1ef bdee      	OUT  0x2E,R30
                 _0x204000F:
00a1f0 b5ed      	IN   R30,0x2D
00a1f1 ffe7      	SBRS R30,7
00a1f2 cffd      	RJMP _0x204000F
00a1f3 9508      	RET
                 _rx_datablock_G102:
00a1f4 93ba      	ST   -Y,R27
00a1f5 93aa      	ST   -Y,R26
00a1f6 940e da9b 	CALL __SAVELOCR4
00a1f8 e0ea      	LDI  R30,LOW(10)
00a1f9 93e0 1aa8 	STS  _timer1_G102,R30
                 _0x2040013:
00a1fb efef      	LDI  R30,LOW(255)
00a1fc bdee      	OUT  0x2E,R30
                 _0x2040015:
00a1fd b5ed      	IN   R30,0x2D
00a1fe ffe7      	SBRS R30,7
00a1ff cffd      	RJMP _0x2040015
00a200 b51e      	IN   R17,46
00a201 3f1f      	CPI  R17,255
00a202 f421      	BRNE _0x2040018
00a203 91e0 1aa8 	LDS  R30,_timer1_G102
00a205 30e0      	CPI  R30,0
00a206 f409      	BRNE _0x2040019
                 _0x2040018:
00a207 c001      	RJMP _0x2040014
                 _0x2040019:
00a208 cff2      	RJMP _0x2040013
                 _0x2040014:
00a209 3f1e      	CPI  R17,254
00a20a f021      	BREQ _0x204001A
00a20b e0e0      	LDI  R30,LOW(0)
00a20c 940e daa2 	CALL __LOADLOCR4
00a20e c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
00a20f 812e     +LDD R18 , Y + 6
00a210 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
00a211 efef      	LDI  R30,LOW(255)
00a212 bdee      	OUT  0x2E,R30
                 _0x204001E:
00a213 b5ed      	IN   R30,0x2D
00a214 ffe7      	SBRS R30,7
00a215 cffd      	RJMP _0x204001E
00a216 933f      	PUSH R19
00a217 932f      	PUSH R18
                +
00a218 5f2f     +SUBI R18 , LOW ( - 1 )
00a219 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a21a b5ee      	IN   R30,0x2E
00a21b 91af      	POP  R26
00a21c 91bf      	POP  R27
00a21d 93ec      	ST   X,R30
00a21e efef      	LDI  R30,LOW(255)
00a21f bdee      	OUT  0x2E,R30
                 _0x2040021:
00a220 b5ed      	IN   R30,0x2D
00a221 ffe7      	SBRS R30,7
00a222 cffd      	RJMP _0x2040021
00a223 933f      	PUSH R19
00a224 932f      	PUSH R18
                +
00a225 5f2f     +SUBI R18 , LOW ( - 1 )
00a226 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a227 b5ee      	IN   R30,0x2E
00a228 91af      	POP  R26
00a229 91bf      	POP  R27
00a22a 93ec      	ST   X,R30
00a22b efef      	LDI  R30,LOW(255)
00a22c bdee      	OUT  0x2E,R30
                 _0x2040024:
00a22d b5ed      	IN   R30,0x2D
00a22e ffe7      	SBRS R30,7
00a22f cffd      	RJMP _0x2040024
00a230 933f      	PUSH R19
00a231 932f      	PUSH R18
                +
00a232 5f2f     +SUBI R18 , LOW ( - 1 )
00a233 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a234 b5ee      	IN   R30,0x2E
00a235 91af      	POP  R26
00a236 91bf      	POP  R27
00a237 93ec      	ST   X,R30
00a238 efef      	LDI  R30,LOW(255)
00a239 bdee      	OUT  0x2E,R30
                 _0x2040027:
00a23a b5ed      	IN   R30,0x2D
00a23b ffe7      	SBRS R30,7
00a23c cffd      	RJMP _0x2040027
00a23d 933f      	PUSH R19
00a23e 932f      	PUSH R18
                +
00a23f 5f2f     +SUBI R18 , LOW ( - 1 )
00a240 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a241 b5ee      	IN   R30,0x2E
00a242 91af      	POP  R26
00a243 91bf      	POP  R27
00a244 93ec      	ST   X,R30
00a245 81ec      	LDD  R30,Y+4
00a246 81fd      	LDD  R31,Y+4+1
00a247 9734      	SBIW R30,4
00a248 83ec      	STD  Y+4,R30
00a249 83fd      	STD  Y+4+1,R31
00a24a f631      	BRNE _0x204001C
00a24b efef      	LDI  R30,LOW(255)
00a24c bdee      	OUT  0x2E,R30
                 _0x204002A:
00a24d b5ed      	IN   R30,0x2D
00a24e ffe7      	SBRS R30,7
00a24f cffd      	RJMP _0x204002A
00a250 efef      	LDI  R30,LOW(255)
00a251 bdee      	OUT  0x2E,R30
                 _0x204002D:
00a252 b5ed      	IN   R30,0x2D
00a253 ffe7      	SBRS R30,7
00a254 cffd      	RJMP _0x204002D
00a255 e0e1      	LDI  R30,LOW(1)
00a256 940e daa2 	CALL __LOADLOCR4
00a258 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
00a259 93aa      	ST   -Y,R26
00a25a 940e da9b 	CALL __SAVELOCR4
00a25c df76      	RCALL _wait_ready_G102
00a25d 3fef      	CPI  R30,LOW(0xFF)
00a25e f021      	BREQ _0x2040030
00a25f e0e0      	LDI  R30,LOW(0)
00a260 940e daa2 	CALL __LOADLOCR4
00a262 c4b3      	RJMP _0x20E0021
                 _0x2040030:
00a263 81ec      	LDD  R30,Y+4
00a264 bdee      	OUT  0x2E,R30
                 _0x2040031:
00a265 b5ed      	IN   R30,0x2D
00a266 ffe7      	SBRS R30,7
00a267 cffd      	RJMP _0x2040031
00a268 81ac      	LDD  R26,Y+4
00a269 3fad      	CPI  R26,LOW(0xFD)
00a26a f171      	BREQ _0x2040034
00a26b e000      	LDI  R16,LOW(0)
                +
00a26c 812d     +LDD R18 , Y + 5
00a26d 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
00a26e 01d9      	MOVW R26,R18
                +
00a26f 5f2f     +SUBI R18 , LOW ( - 1 )
00a270 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a271 91ec      	LD   R30,X
00a272 bdee      	OUT  0x2E,R30
                 _0x2040038:
00a273 b5ed      	IN   R30,0x2D
00a274 ffe7      	SBRS R30,7
00a275 cffd      	RJMP _0x2040038
00a276 01d9      	MOVW R26,R18
                +
00a277 5f2f     +SUBI R18 , LOW ( - 1 )
00a278 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a279 91ec      	LD   R30,X
00a27a bdee      	OUT  0x2E,R30
                 _0x204003B:
00a27b b5ed      	IN   R30,0x2D
00a27c ffe7      	SBRS R30,7
00a27d cffd      	RJMP _0x204003B
00a27e 5001      	SUBI R16,LOW(1)
00a27f 3000      	CPI  R16,0
00a280 f769      	BRNE _0x2040036
00a281 efef      	LDI  R30,LOW(255)
00a282 bdee      	OUT  0x2E,R30
                 _0x204003E:
00a283 b5ed      	IN   R30,0x2D
00a284 ffe7      	SBRS R30,7
00a285 cffd      	RJMP _0x204003E
00a286 efef      	LDI  R30,LOW(255)
00a287 bdee      	OUT  0x2E,R30
                 _0x2040041:
00a288 b5ed      	IN   R30,0x2D
00a289 ffe7      	SBRS R30,7
00a28a cffd      	RJMP _0x2040041
00a28b efef      	LDI  R30,LOW(255)
00a28c bdee      	OUT  0x2E,R30
                 _0x2040044:
00a28d b5ed      	IN   R30,0x2D
00a28e ffe7      	SBRS R30,7
00a28f cffd      	RJMP _0x2040044
00a290 b51e      	IN   R17,46
00a291 2fe1      	MOV  R30,R17
00a292 71ef      	ANDI R30,LOW(0x1F)
00a293 30e5      	CPI  R30,LOW(0x5)
00a294 f021      	BREQ _0x2040047
00a295 e0e0      	LDI  R30,LOW(0)
00a296 940e daa2 	CALL __LOADLOCR4
00a298 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
00a299 e0e1      	LDI  R30,LOW(1)
00a29a 940e daa2 	CALL __LOADLOCR4
00a29c c479      	RJMP _0x20E0021
                 _send_cmd_G102:
00a29d 940e da2e 	CALL __PUTPARD2
00a29f 931a      	ST   -Y,R17
00a2a0 930a      	ST   -Y,R16
00a2a1 81ee      	LDD  R30,Y+6
00a2a2 78e0      	ANDI R30,LOW(0x80)
00a2a3 f089      	BREQ _0x2040048
00a2a4 81ee      	LDD  R30,Y+6
00a2a5 77ef      	ANDI R30,0x7F
00a2a6 83ee      	STD  Y+6,R30
00a2a7 e7e7      	LDI  R30,LOW(119)
00a2a8 93ea      	ST   -Y,R30
                +
00a2a9 e0a0     +LDI R26 , LOW ( 0x0 )
00a2aa e0b0     +LDI R27 , HIGH ( 0x0 )
00a2ab e080     +LDI R24 , BYTE3 ( 0x0 )
00a2ac e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a2ad dfef      	RCALL _send_cmd_G102
00a2ae 2f0e      	MOV  R16,R30
00a2af 3002      	CPI  R16,2
00a2b0 f020      	BRLO _0x2040049
00a2b1 2fe0      	MOV  R30,R16
00a2b2 8119      	LDD  R17,Y+1
00a2b3 8108      	LDD  R16,Y+0
00a2b4 c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
00a2b5 9a28      	SBI  0x5,0
00a2b6 9828      	CBI  0x5,0
00a2b7 df1b      	RCALL _wait_ready_G102
00a2b8 3fef      	CPI  R30,LOW(0xFF)
00a2b9 f021      	BREQ _0x204004A
00a2ba efef      	LDI  R30,LOW(255)
00a2bb 8119      	LDD  R17,Y+1
00a2bc 8108      	LDD  R16,Y+0
00a2bd c458      	RJMP _0x20E0021
                 _0x204004A:
00a2be 81ee      	LDD  R30,Y+6
00a2bf bdee      	OUT  0x2E,R30
                 _0x204004B:
00a2c0 b5ed      	IN   R30,0x2D
00a2c1 ffe7      	SBRS R30,7
00a2c2 cffd      	RJMP _0x204004B
00a2c3 81ed      	LDD  R30,Y+5
00a2c4 bdee      	OUT  0x2E,R30
                 _0x204004E:
00a2c5 b5ed      	IN   R30,0x2D
00a2c6 ffe7      	SBRS R30,7
00a2c7 cffd      	RJMP _0x204004E
00a2c8 81ec      	LDD  R30,Y+4
00a2c9 bdee      	OUT  0x2E,R30
                 _0x2040051:
00a2ca b5ed      	IN   R30,0x2D
00a2cb ffe7      	SBRS R30,7
00a2cc cffd      	RJMP _0x2040051
00a2cd 81eb      	LDD  R30,Y+3
00a2ce bdee      	OUT  0x2E,R30
                 _0x2040054:
00a2cf b5ed      	IN   R30,0x2D
00a2d0 ffe7      	SBRS R30,7
00a2d1 cffd      	RJMP _0x2040054
00a2d2 81ea      	LDD  R30,Y+2
00a2d3 bdee      	OUT  0x2E,R30
                 _0x2040057:
00a2d4 b5ed      	IN   R30,0x2D
00a2d5 ffe7      	SBRS R30,7
00a2d6 cffd      	RJMP _0x2040057
00a2d7 e011      	LDI  R17,LOW(1)
00a2d8 81ae      	LDD  R26,Y+6
00a2d9 34a0      	CPI  R26,LOW(0x40)
00a2da f411      	BRNE _0x204005A
00a2db e915      	LDI  R17,LOW(149)
00a2dc c004      	RJMP _0x204005B
                 _0x204005A:
00a2dd 81ae      	LDD  R26,Y+6
00a2de 34a8      	CPI  R26,LOW(0x48)
00a2df f409      	BRNE _0x204005C
00a2e0 e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
00a2e1 bd1e      	OUT  0x2E,R17
                 _0x204005D:
00a2e2 b5ed      	IN   R30,0x2D
00a2e3 ffe7      	SBRS R30,7
00a2e4 cffd      	RJMP _0x204005D
00a2e5 81ae      	LDD  R26,Y+6
00a2e6 34ac      	CPI  R26,LOW(0x4C)
00a2e7 f429      	BRNE _0x2040060
00a2e8 efef      	LDI  R30,LOW(255)
00a2e9 bdee      	OUT  0x2E,R30
                 _0x2040061:
00a2ea b5ed      	IN   R30,0x2D
00a2eb ffe7      	SBRS R30,7
00a2ec cffd      	RJMP _0x2040061
                 _0x2040060:
00a2ed ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
00a2ee efef      	LDI  R30,LOW(255)
00a2ef bdee      	OUT  0x2E,R30
                 _0x2040067:
00a2f0 b5ed      	IN   R30,0x2D
00a2f1 ffe7      	SBRS R30,7
00a2f2 cffd      	RJMP _0x2040067
00a2f3 b50e      	IN   R16,46
00a2f4 ff07      	SBRS R16,7
00a2f5 c003      	RJMP _0x204006A
00a2f6 5011      	SUBI R17,LOW(1)
00a2f7 3010      	CPI  R17,0
00a2f8 f409      	BRNE _0x204006B
                 _0x204006A:
00a2f9 c001      	RJMP _0x2040066
                 _0x204006B:
00a2fa cff3      	RJMP _0x2040065
                 _0x2040066:
00a2fb 2fe0      	MOV  R30,R16
00a2fc 8119      	LDD  R17,Y+1
00a2fd 8108      	LDD  R16,Y+0
00a2fe c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
00a2ff 93ba      	ST   -Y,R27
00a300 93aa      	ST   -Y,R26
00a301 931a      	ST   -Y,R17
00a302 e014      	LDI  R17,4
                 _0x204006D:
00a303 efef      	LDI  R30,LOW(255)
00a304 bdee      	OUT  0x2E,R30
                 _0x204006F:
00a305 b5ed      	IN   R30,0x2D
00a306 ffe7      	SBRS R30,7
00a307 cffd      	RJMP _0x204006F
00a308 81a9      	LDD  R26,Y+1
00a309 81ba      	LDD  R27,Y+1+1
00a30a 9611      	ADIW R26,1
00a30b 83a9      	STD  Y+1,R26
00a30c 83ba      	STD  Y+1+1,R27
00a30d 9711      	SBIW R26,1
00a30e b5ee      	IN   R30,0x2E
00a30f 93ec      	ST   X,R30
00a310 5011      	SUBI R17,LOW(1)
00a311 3010      	CPI  R17,0
00a312 f781      	BRNE _0x204006D
00a313 c554      	RJMP _0x20E001B
                 _disk_initialize:
00a314 93aa      	ST   -Y,R26
00a315 9724      	SBIW R28,4
00a316 940e da9b 	CALL __SAVELOCR4
00a318 85e8      	LDD  R30,Y+8
00a319 30e0      	CPI  R30,0
00a31a f011      	BREQ _0x2040072
00a31b e0e1      	LDI  R30,LOW(1)
00a31c c0c4      	RJMP _0x20E0025
                 _0x2040072:
00a31d 9808      	CBI  0x1,0
00a31e 9809      	CBI  0x1,1
00a31f e0ea      	LDI  R30,LOW(10)
00a320 93e0 1aa8 	STS  _timer1_G102,R30
                 _0x2040073:
00a322 91e0 1aa8 	LDS  R30,_timer1_G102
00a324 30e0      	CPI  R30,0
00a325 f7e1      	BRNE _0x2040073
00a326 91e0 1aa7 	LDS  R30,_status_G102
00a328 70e2      	ANDI R30,LOW(0x2)
00a329 f009      	BREQ _0x2040076
00a32a c0b4      	RJMP _0x20E0024
                 _0x2040076:
00a32b 9a20      	SBI  0x4,0
00a32c 9a28      	SBI  0x5,0
00a32d b1e5      	IN   R30,0x5
00a32e 7fe9      	ANDI R30,LOW(0xF9)
00a32f b9e5      	OUT  0x5,R30
00a330 9a2b      	SBI  0x5,3
00a331 9823      	CBI  0x4,3
00a332 b1e4      	IN   R30,0x4
00a333 60e7      	ORI  R30,LOW(0x7)
00a334 b9e4      	OUT  0x4,R30
00a335 e5e2      	LDI  R30,LOW(82)
00a336 bdec      	OUT  0x2C,R30
00a337 e0e0      	LDI  R30,LOW(0)
00a338 bded      	OUT  0x2D,R30
00a339 ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
00a33a e01a      	LDI  R17,LOW(10)
                 _0x204007B:
00a33b efef      	LDI  R30,LOW(255)
00a33c bdee      	OUT  0x2E,R30
                 _0x204007D:
00a33d b5ed      	IN   R30,0x2D
00a33e ffe7      	SBRS R30,7
00a33f cffd      	RJMP _0x204007D
00a340 5011      	SUBI R17,LOW(1)
00a341 3010      	CPI  R17,0
00a342 f7c1      	BRNE _0x204007B
00a343 e4e0      	LDI  R30,LOW(64)
00a344 93ea      	ST   -Y,R30
                +
00a345 e0a0     +LDI R26 , LOW ( 0x0 )
00a346 e0b0     +LDI R27 , HIGH ( 0x0 )
00a347 e080     +LDI R24 , BYTE3 ( 0x0 )
00a348 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a349 df53      	RCALL _send_cmd_G102
00a34a 2f0e      	MOV  R16,R30
00a34b 5031      	SUBI R19,LOW(1)
00a34c 3001      	CPI  R16,1
00a34d f011      	BREQ _0x2040080
00a34e 3030      	CPI  R19,0
00a34f f409      	BRNE _0x2040081
                 _0x2040080:
00a350 c001      	RJMP _0x2040079
                 _0x2040081:
00a351 cfe8      	RJMP _0x2040078
                 _0x2040079:
00a352 e030      	LDI  R19,LOW(0)
00a353 3001      	CPI  R16,1
00a354 f011      	BREQ PC+3
00a355 940c a3bf 	JMP _0x2040082
00a357 e6e4      	LDI  R30,LOW(100)
00a358 93e0 1aa8 	STS  _timer1_G102,R30
00a35a e4e8      	LDI  R30,LOW(72)
00a35b 93ea      	ST   -Y,R30
                +
00a35c eaaa     +LDI R26 , LOW ( 0x1AA )
00a35d e0b1     +LDI R27 , HIGH ( 0x1AA )
00a35e e080     +LDI R24 , BYTE3 ( 0x1AA )
00a35f e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
00a360 df3c      	RCALL _send_cmd_G102
00a361 30e1      	CPI  R30,LOW(0x1)
00a362 f591      	BRNE _0x2040083
00a363 01de      	MOVW R26,R28
00a364 9614      	ADIW R26,4
00a365 df99      	RCALL _rx_spi4_G102
00a366 81ae      	LDD  R26,Y+6
00a367 30a1      	CPI  R26,LOW(0x1)
00a368 f419      	BRNE _0x2040085
00a369 81af      	LDD  R26,Y+7
00a36a 3aaa      	CPI  R26,LOW(0xAA)
00a36b f009      	BREQ _0x2040086
                 _0x2040085:
00a36c c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
00a36d 91e0 1aa8 	LDS  R30,_timer1_G102
00a36f 30e0      	CPI  R30,0
00a370 f049      	BREQ _0x204008A
00a371 eee9      	LDI  R30,LOW(233)
00a372 93ea      	ST   -Y,R30
                +
00a373 e0a0     +LDI R26 , LOW ( 0x40000000 )
00a374 e0b0     +LDI R27 , HIGH ( 0x40000000 )
00a375 e080     +LDI R24 , BYTE3 ( 0x40000000 )
00a376 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00a377 df25      	RCALL _send_cmd_G102
00a378 30e0      	CPI  R30,0
00a379 f409      	BRNE _0x204008B
                 _0x204008A:
00a37a c001      	RJMP _0x2040089
                 _0x204008B:
00a37b cff1      	RJMP _0x2040087
                 _0x2040089:
00a37c 91e0 1aa8 	LDS  R30,_timer1_G102
00a37e 30e0      	CPI  R30,0
00a37f f049      	BREQ _0x204008D
00a380 e7ea      	LDI  R30,LOW(122)
00a381 93ea      	ST   -Y,R30
                +
00a382 e0a0     +LDI R26 , LOW ( 0x0 )
00a383 e0b0     +LDI R27 , HIGH ( 0x0 )
00a384 e080     +LDI R24 , BYTE3 ( 0x0 )
00a385 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a386 df16      	RCALL _send_cmd_G102
00a387 30e0      	CPI  R30,0
00a388 f009      	BREQ _0x204008E
                 _0x204008D:
00a389 c00a      	RJMP _0x204008C
                 _0x204008E:
00a38a 01de      	MOVW R26,R28
00a38b 9614      	ADIW R26,4
00a38c df72      	RCALL _rx_spi4_G102
00a38d 81ec      	LDD  R30,Y+4
00a38e 74e0      	ANDI R30,LOW(0x40)
00a38f f011      	BREQ _0x204008F
00a390 e0ec      	LDI  R30,LOW(12)
00a391 c001      	RJMP _0x2040090
                 _0x204008F:
00a392 e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
00a393 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
00a394 c02a      	RJMP _0x2040092
                 _0x2040083:
00a395 eee9      	LDI  R30,LOW(233)
00a396 93ea      	ST   -Y,R30
                +
00a397 e0a0     +LDI R26 , LOW ( 0x0 )
00a398 e0b0     +LDI R27 , HIGH ( 0x0 )
00a399 e080     +LDI R24 , BYTE3 ( 0x0 )
00a39a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a39b df01      	RCALL _send_cmd_G102
00a39c 30e2      	CPI  R30,LOW(0x2)
00a39d f418      	BRSH _0x2040093
00a39e e032      	LDI  R19,LOW(2)
00a39f ee09      	LDI  R16,LOW(233)
00a3a0 c002      	RJMP _0x2040094
                 _0x2040093:
00a3a1 e031      	LDI  R19,LOW(1)
00a3a2 e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
00a3a3 91e0 1aa8 	LDS  R30,_timer1_G102
00a3a5 30e0      	CPI  R30,0
00a3a6 f041      	BREQ _0x2040098
00a3a7 930a      	ST   -Y,R16
                +
00a3a8 e0a0     +LDI R26 , LOW ( 0x0 )
00a3a9 e0b0     +LDI R27 , HIGH ( 0x0 )
00a3aa e080     +LDI R24 , BYTE3 ( 0x0 )
00a3ab e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a3ac def0      	RCALL _send_cmd_G102
00a3ad 30e0      	CPI  R30,0
00a3ae f409      	BRNE _0x2040099
                 _0x2040098:
00a3af c001      	RJMP _0x2040097
                 _0x2040099:
00a3b0 cff2      	RJMP _0x2040095
                 _0x2040097:
00a3b1 91e0 1aa8 	LDS  R30,_timer1_G102
00a3b3 30e0      	CPI  R30,0
00a3b4 f049      	BREQ _0x204009B
00a3b5 e5e0      	LDI  R30,LOW(80)
00a3b6 93ea      	ST   -Y,R30
                +
00a3b7 e0a0     +LDI R26 , LOW ( 0x200 )
00a3b8 e0b2     +LDI R27 , HIGH ( 0x200 )
00a3b9 e080     +LDI R24 , BYTE3 ( 0x200 )
00a3ba e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a3bb dee1      	RCALL _send_cmd_G102
00a3bc 30e0      	CPI  R30,0
00a3bd f009      	BREQ _0x204009A
                 _0x204009B:
00a3be e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
00a3bf 9330 1aaa 	STS  _card_type_G102,R19
00a3c1 de2b      	RCALL _release_spi_G102
00a3c2 3030      	CPI  R19,0
00a3c3 f051      	BREQ _0x204009D
00a3c4 91e0 1aa7 	LDS  R30,_status_G102
00a3c6 7fee      	ANDI R30,0xFE
00a3c7 93e0 1aa7 	STS  _status_G102,R30
00a3c9 e5e0      	LDI  R30,LOW(80)
00a3ca bdec      	OUT  0x2C,R30
00a3cb e0e1      	LDI  R30,LOW(1)
00a3cc bded      	OUT  0x2D,R30
00a3cd c011      	RJMP _0x204009E
                 _0x204009D:
00a3ce 9828      	CBI  0x5,0
00a3cf de03      	RCALL _wait_ready_G102
00a3d0 de1c      	RCALL _release_spi_G102
00a3d1 e0e0      	LDI  R30,LOW(0)
00a3d2 bdec      	OUT  0x2C,R30
00a3d3 b1e4      	IN   R30,0x4
00a3d4 7fe0      	ANDI R30,LOW(0xF0)
00a3d5 b9e4      	OUT  0x4,R30
00a3d6 b1e5      	IN   R30,0x5
00a3d7 7fe0      	ANDI R30,LOW(0xF0)
00a3d8 b9e5      	OUT  0x5,R30
00a3d9 9820      	CBI  0x4,0
00a3da 91e0 1aa7 	LDS  R30,_status_G102
00a3dc 60e1      	ORI  R30,1
00a3dd 93e0 1aa7 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
00a3df 91e0 1aa7 	LDS  R30,_status_G102
                 _0x20E0025:
00a3e1 940e daa2 	CALL __LOADLOCR4
00a3e3 9629      	ADIW R28,9
00a3e4 9508      	RET
                 _disk_status:
00a3e5 93aa      	ST   -Y,R26
00a3e6 81e8      	LD   R30,Y
00a3e7 30e0      	CPI  R30,0
00a3e8 f011      	BREQ _0x204009F
00a3e9 e0e1      	LDI  R30,LOW(1)
00a3ea c002      	RJMP _0x20E0023
                 _0x204009F:
00a3eb 91e0 1aa7 	LDS  R30,_status_G102
                 _0x20E0023:
00a3ed 9621      	ADIW R28,1
00a3ee 9508      	RET
                 _disk_read:
00a3ef 93aa      	ST   -Y,R26
00a3f0 81ef      	LDD  R30,Y+7
00a3f1 30e0      	CPI  R30,0
00a3f2 f419      	BRNE _0x20400A1
00a3f3 81e8      	LD   R30,Y
00a3f4 30e0      	CPI  R30,0
00a3f5 f411      	BRNE _0x20400A0
                 _0x20400A1:
00a3f6 e0e4      	LDI  R30,LOW(4)
00a3f7 c352      	RJMP _0x20E0020
                 _0x20400A0:
00a3f8 91e0 1aa7 	LDS  R30,_status_G102
00a3fa 70e1      	ANDI R30,LOW(0x1)
00a3fb f011      	BREQ _0x20400A3
00a3fc e0e3      	LDI  R30,LOW(3)
00a3fd c34c      	RJMP _0x20E0020
                 _0x20400A3:
00a3fe 91e0 1aaa 	LDS  R30,_card_type_G102
00a400 70e8      	ANDI R30,LOW(0x8)
00a401 f471      	BRNE _0x20400A4
                +
00a402 81e9     +LDD R30 , Y + 1
00a403 81fa     +LDD R31 , Y + 1 + 1
00a404 816b     +LDD R22 , Y + 1 + 2
00a405 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a406 e0a0     +LDI R26 , LOW ( 0x200 )
00a407 e0b2     +LDI R27 , HIGH ( 0x200 )
00a408 e080     +LDI R24 , BYTE3 ( 0x200 )
00a409 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a40a 940e d93a 	CALL __MULD12U
                +
00a40c 83e9     +STD Y + 1 , R30
00a40d 83fa     +STD Y + 1 + 1 , R31
00a40e 836b     +STD Y + 1 + 2 , R22
00a40f 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
00a410 81a8      	LD   R26,Y
00a411 30a1      	CPI  R26,LOW(0x1)
00a412 f4b1      	BRNE _0x20400A5
00a413 e5e1      	LDI  R30,LOW(81)
00a414 93ea      	ST   -Y,R30
                +
00a415 81aa     +LDD R26 , Y + 2
00a416 81bb     +LDD R27 , Y + 2 + 1
00a417 818c     +LDD R24 , Y + 2 + 2
00a418 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a419 de83      	RCALL _send_cmd_G102
00a41a 30e0      	CPI  R30,0
00a41b f449      	BRNE _0x20400A7
00a41c 81ed      	LDD  R30,Y+5
00a41d 81fe      	LDD  R31,Y+5+1
00a41e 93fa      	ST   -Y,R31
00a41f 93ea      	ST   -Y,R30
00a420 e0a0      	LDI  R26,LOW(512)
00a421 e0b2      	LDI  R27,HIGH(512)
00a422 ddd1      	RCALL _rx_datablock_G102
00a423 30e0      	CPI  R30,0
00a424 f409      	BRNE _0x20400A8
                 _0x20400A7:
00a425 c002      	RJMP _0x20400A6
                 _0x20400A8:
00a426 e0e0      	LDI  R30,LOW(0)
00a427 83e8      	ST   Y,R30
                 _0x20400A6:
00a428 c023      	RJMP _0x20400A9
                 _0x20400A5:
00a429 e5e2      	LDI  R30,LOW(82)
00a42a 93ea      	ST   -Y,R30
                +
00a42b 81aa     +LDD R26 , Y + 2
00a42c 81bb     +LDD R27 , Y + 2 + 1
00a42d 818c     +LDD R24 , Y + 2 + 2
00a42e 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a42f de6d      	RCALL _send_cmd_G102
00a430 30e0      	CPI  R30,0
00a431 f4d1      	BRNE _0x20400AA
                 _0x20400AC:
00a432 81ed      	LDD  R30,Y+5
00a433 81fe      	LDD  R31,Y+5+1
00a434 93fa      	ST   -Y,R31
00a435 93ea      	ST   -Y,R30
00a436 e0a0      	LDI  R26,LOW(512)
00a437 e0b2      	LDI  R27,HIGH(512)
00a438 ddbb      	RCALL _rx_datablock_G102
00a439 30e0      	CPI  R30,0
00a43a f051      	BREQ _0x20400AD
00a43b 81ed      	LDD  R30,Y+5
00a43c 81fe      	LDD  R31,Y+5+1
00a43d 50e0      	SUBI R30,LOW(-512)
00a43e 4ffe      	SBCI R31,HIGH(-512)
00a43f 83ed      	STD  Y+5,R30
00a440 83fe      	STD  Y+5+1,R31
00a441 81e8      	LD   R30,Y
00a442 50e1      	SUBI R30,LOW(1)
00a443 83e8      	ST   Y,R30
00a444 f769      	BRNE _0x20400AC
                 _0x20400AD:
00a445 e4ec      	LDI  R30,LOW(76)
00a446 93ea      	ST   -Y,R30
                +
00a447 e0a0     +LDI R26 , LOW ( 0x0 )
00a448 e0b0     +LDI R27 , HIGH ( 0x0 )
00a449 e080     +LDI R24 , BYTE3 ( 0x0 )
00a44a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a44b de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
00a44c dda0      	RCALL _release_spi_G102
00a44d 81e8      	LD   R30,Y
00a44e 30e0      	CPI  R30,0
00a44f f011      	BREQ _0x20400AF
00a450 e0e1      	LDI  R30,LOW(1)
00a451 c001      	RJMP _0x20400B0
                 _0x20400AF:
00a452 e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
00a453 c2f6      	RJMP _0x20E0020
                 _disk_write:
00a454 93aa      	ST   -Y,R26
00a455 81ef      	LDD  R30,Y+7
00a456 30e0      	CPI  R30,0
00a457 f419      	BRNE _0x20400B3
00a458 81e8      	LD   R30,Y
00a459 30e0      	CPI  R30,0
00a45a f411      	BRNE _0x20400B2
                 _0x20400B3:
00a45b e0e4      	LDI  R30,LOW(4)
00a45c c2ed      	RJMP _0x20E0020
                 _0x20400B2:
00a45d 91e0 1aa7 	LDS  R30,_status_G102
00a45f 70e1      	ANDI R30,LOW(0x1)
00a460 f011      	BREQ _0x20400B5
00a461 e0e3      	LDI  R30,LOW(3)
00a462 c2e7      	RJMP _0x20E0020
                 _0x20400B5:
00a463 91e0 1aa7 	LDS  R30,_status_G102
00a465 70e4      	ANDI R30,LOW(0x4)
00a466 f011      	BREQ _0x20400B6
00a467 e0e2      	LDI  R30,LOW(2)
00a468 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
00a469 91e0 1aaa 	LDS  R30,_card_type_G102
00a46b 70e8      	ANDI R30,LOW(0x8)
00a46c f471      	BRNE _0x20400B7
                +
00a46d 81e9     +LDD R30 , Y + 1
00a46e 81fa     +LDD R31 , Y + 1 + 1
00a46f 816b     +LDD R22 , Y + 1 + 2
00a470 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a471 e0a0     +LDI R26 , LOW ( 0x200 )
00a472 e0b2     +LDI R27 , HIGH ( 0x200 )
00a473 e080     +LDI R24 , BYTE3 ( 0x200 )
00a474 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a475 940e d93a 	CALL __MULD12U
                +
00a477 83e9     +STD Y + 1 , R30
00a478 83fa     +STD Y + 1 + 1 , R31
00a479 836b     +STD Y + 1 + 2 , R22
00a47a 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
00a47b 81a8      	LD   R26,Y
00a47c 30a1      	CPI  R26,LOW(0x1)
00a47d f4a9      	BRNE _0x20400B8
00a47e e5e8      	LDI  R30,LOW(88)
00a47f 93ea      	ST   -Y,R30
                +
00a480 81aa     +LDD R26 , Y + 2
00a481 81bb     +LDD R27 , Y + 2 + 1
00a482 818c     +LDD R24 , Y + 2 + 2
00a483 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a484 de18      	RCALL _send_cmd_G102
00a485 30e0      	CPI  R30,0
00a486 f441      	BRNE _0x20400BA
00a487 81ed      	LDD  R30,Y+5
00a488 81fe      	LDD  R31,Y+5+1
00a489 93fa      	ST   -Y,R31
00a48a 93ea      	ST   -Y,R30
00a48b efae      	LDI  R26,LOW(254)
00a48c ddcc      	RCALL _tx_datablock_G102
00a48d 30e0      	CPI  R30,0
00a48e f409      	BRNE _0x20400BB
                 _0x20400BA:
00a48f c002      	RJMP _0x20400B9
                 _0x20400BB:
00a490 e0e0      	LDI  R30,LOW(0)
00a491 83e8      	ST   Y,R30
                 _0x20400B9:
00a492 c030      	RJMP _0x20400BC
                 _0x20400B8:
00a493 91e0 1aaa 	LDS  R30,_card_type_G102
00a495 70e6      	ANDI R30,LOW(0x6)
00a496 f039      	BREQ _0x20400BD
00a497 ede7      	LDI  R30,LOW(215)
00a498 93ea      	ST   -Y,R30
00a499 81a9      	LDD  R26,Y+1
00a49a 27bb      	CLR  R27
00a49b 2788      	CLR  R24
00a49c 2799      	CLR  R25
00a49d ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
00a49e e5e9      	LDI  R30,LOW(89)
00a49f 93ea      	ST   -Y,R30
                +
00a4a0 81aa     +LDD R26 , Y + 2
00a4a1 81bb     +LDD R27 , Y + 2 + 1
00a4a2 818c     +LDD R24 , Y + 2 + 2
00a4a3 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a4a4 ddf8      	RCALL _send_cmd_G102
00a4a5 30e0      	CPI  R30,0
00a4a6 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
00a4a7 81ed      	LDD  R30,Y+5
00a4a8 81fe      	LDD  R31,Y+5+1
00a4a9 93fa      	ST   -Y,R31
00a4aa 93ea      	ST   -Y,R30
00a4ab efac      	LDI  R26,LOW(252)
00a4ac ddac      	RCALL _tx_datablock_G102
00a4ad 30e0      	CPI  R30,0
00a4ae f051      	BREQ _0x20400C1
00a4af 81ed      	LDD  R30,Y+5
00a4b0 81fe      	LDD  R31,Y+5+1
00a4b1 50e0      	SUBI R30,LOW(-512)
00a4b2 4ffe      	SBCI R31,HIGH(-512)
00a4b3 83ed      	STD  Y+5,R30
00a4b4 83fe      	STD  Y+5+1,R31
00a4b5 81e8      	LD   R30,Y
00a4b6 50e1      	SUBI R30,LOW(1)
00a4b7 83e8      	ST   Y,R30
00a4b8 f771      	BRNE _0x20400C0
                 _0x20400C1:
00a4b9 e0e0      	LDI  R30,LOW(0)
00a4ba e0f0      	LDI  R31,HIGH(0)
00a4bb 93fa      	ST   -Y,R31
00a4bc 93ea      	ST   -Y,R30
00a4bd efad      	LDI  R26,LOW(253)
00a4be dd9a      	RCALL _tx_datablock_G102
00a4bf 30e0      	CPI  R30,0
00a4c0 f411      	BRNE _0x20400C3
00a4c1 e0e1      	LDI  R30,LOW(1)
00a4c2 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
00a4c3 dd29      	RCALL _release_spi_G102
00a4c4 81e8      	LD   R30,Y
00a4c5 30e0      	CPI  R30,0
00a4c6 f011      	BREQ _0x20400C4
00a4c7 e0e1      	LDI  R30,LOW(1)
00a4c8 c001      	RJMP _0x20400C5
                 _0x20400C4:
00a4c9 e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
00a4ca c27f      	RJMP _0x20E0020
                 _disk_ioctl:
00a4cb 93ba      	ST   -Y,R27
00a4cc 93aa      	ST   -Y,R26
00a4cd 9760      	SBIW R28,16
00a4ce 940e da99 	CALL __SAVELOCR6
00a4d0 8de9      	LDD  R30,Y+25
00a4d1 30e0      	CPI  R30,0
00a4d2 f011      	BREQ _0x20400C7
00a4d3 e0e4      	LDI  R30,LOW(4)
00a4d4 c182      	RJMP _0x20E0022
                 _0x20400C7:
00a4d5 e011      	LDI  R17,LOW(1)
00a4d6 91e0 1aa7 	LDS  R30,_status_G102
00a4d8 70e1      	ANDI R30,LOW(0x1)
00a4d9 f011      	BREQ _0x20400C8
00a4da e0e3      	LDI  R30,LOW(3)
00a4db c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
00a4dc 894e     +LDD R20 , Y + 22
00a4dd 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
00a4de 8de8      	LDD  R30,Y+24
00a4df 30e0      	CPI  R30,0
00a4e0 f431      	BRNE _0x20400CC
00a4e1 9828      	CBI  0x5,0
00a4e2 dcf0      	RCALL _wait_ready_G102
00a4e3 3fef      	CPI  R30,LOW(0xFF)
00a4e4 f409      	BRNE _0x20400CD
00a4e5 e010      	LDI  R17,LOW(0)
                 _0x20400CD:
00a4e6 c16e      	RJMP _0x20400CB
                 _0x20400CC:
00a4e7 30e1      	CPI  R30,LOW(0x1)
00a4e8 f011      	BREQ PC+3
00a4e9 940c a545 	JMP _0x20400CE
00a4eb e4e9      	LDI  R30,LOW(73)
00a4ec 93ea      	ST   -Y,R30
                +
00a4ed e0a0     +LDI R26 , LOW ( 0x0 )
00a4ee e0b0     +LDI R27 , HIGH ( 0x0 )
00a4ef e080     +LDI R24 , BYTE3 ( 0x0 )
00a4f0 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a4f1 ddab      	RCALL _send_cmd_G102
00a4f2 30e0      	CPI  R30,0
00a4f3 f449      	BRNE _0x20400D0
00a4f4 01fe      	MOVW R30,R28
00a4f5 9636      	ADIW R30,6
00a4f6 93fa      	ST   -Y,R31
00a4f7 93ea      	ST   -Y,R30
00a4f8 e1a0      	LDI  R26,LOW(16)
00a4f9 e0b0      	LDI  R27,0
00a4fa dcf9      	RCALL _rx_datablock_G102
00a4fb 30e0      	CPI  R30,0
00a4fc f409      	BRNE _0x20400D1
                 _0x20400D0:
00a4fd c046      	RJMP _0x20400CF
                 _0x20400D1:
00a4fe 81ee      	LDD  R30,Y+6
00a4ff 95e2      	SWAP R30
00a500 70ef      	ANDI R30,0xF
00a501 95e6      	LSR  R30
00a502 95e6      	LSR  R30
00a503 30e1      	CPI  R30,LOW(0x1)
00a504 f469      	BRNE _0x20400D2
00a505 e0e0      	LDI  R30,0
00a506 85fe      	LDD  R31,Y+14
00a507 85af      	LDD  R26,Y+15
00a508 e0b0      	LDI  R27,0
00a509 0fea      	ADD  R30,R26
00a50a 1ffb      	ADC  R31,R27
00a50b 9631      	ADIW R30,1
00a50c 019f      	MOVW R18,R30
00a50d 01d9      	MOVW R26,R18
00a50e 2788      	CLR  R24
00a50f 2799      	CLR  R25
00a510 e0ea      	LDI  R30,LOW(10)
00a511 c02c      	RJMP _0x2040101
                 _0x20400D2:
00a512 85eb      	LDD  R30,Y+11
00a513 70ef      	ANDI R30,LOW(0xF)
00a514 2fae      	MOV  R26,R30
00a515 89e8      	LDD  R30,Y+16
00a516 78e0      	ANDI R30,LOW(0x80)
00a517 1fee      	ROL  R30
00a518 e0e0      	LDI  R30,0
00a519 1fee      	ROL  R30
00a51a 0fae      	ADD  R26,R30
00a51b 85ef      	LDD  R30,Y+15
00a51c 70e3      	ANDI R30,LOW(0x3)
00a51d 0fee      	LSL  R30
00a51e 0fea      	ADD  R30,R26
00a51f 5fee      	SUBI R30,-LOW(2)
00a520 2f0e      	MOV  R16,R30
00a521 85ee      	LDD  R30,Y+14
00a522 95e2      	SWAP R30
00a523 70ef      	ANDI R30,0xF
00a524 95e6      	LSR  R30
00a525 95e6      	LSR  R30
00a526 2fae      	MOV  R26,R30
00a527 85ed      	LDD  R30,Y+13
00a528 e0f0      	LDI  R31,0
00a529 940e d8e3 	CALL __LSLW2
00a52b e0b0      	LDI  R27,0
00a52c 0fae      	ADD  R26,R30
00a52d 1fbf      	ADC  R27,R31
00a52e 85ec      	LDD  R30,Y+12
00a52f 70e3      	ANDI R30,LOW(0x3)
00a530 e0f0      	LDI  R31,0
00a531 940e d8e3 	CALL __LSLW2
00a533 2ffe      	MOV  R31,R30
00a534 e0e0      	LDI  R30,0
00a535 0fea      	ADD  R30,R26
00a536 1ffb      	ADC  R31,R27
00a537 9631      	ADIW R30,1
00a538 019f      	MOVW R18,R30
00a539 01d9      	MOVW R26,R18
00a53a 2788      	CLR  R24
00a53b 2799      	CLR  R25
00a53c 2fe0      	MOV  R30,R16
00a53d 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
00a53e 940e d8c7 	CALL __LSLD12
00a540 01da      	MOVW R26,R20
00a541 940e d9ff 	CALL __PUTDP1
00a543 e010      	LDI  R17,LOW(0)
                 _0x20400CF:
00a544 c110      	RJMP _0x20400CB
                 _0x20400CE:
00a545 30e2      	CPI  R30,LOW(0x2)
00a546 f439      	BRNE _0x20400D4
00a547 01da      	MOVW R26,R20
00a548 e0e0      	LDI  R30,LOW(512)
00a549 e0f2      	LDI  R31,HIGH(512)
00a54a 93ed      	ST   X+,R30
00a54b 93fc      	ST   X,R31
00a54c e010      	LDI  R17,LOW(0)
00a54d c107      	RJMP _0x20400CB
                 _0x20400D4:
00a54e 30e3      	CPI  R30,LOW(0x3)
00a54f f011      	BREQ PC+3
00a550 940c a5fa 	JMP _0x20400D5
00a552 91e0 1aaa 	LDS  R30,_card_type_G102
00a554 70e4      	ANDI R30,LOW(0x4)
00a555 f179      	BREQ _0x20400D6
00a556 eced      	LDI  R30,LOW(205)
00a557 93ea      	ST   -Y,R30
                +
00a558 e0a0     +LDI R26 , LOW ( 0x0 )
00a559 e0b0     +LDI R27 , HIGH ( 0x0 )
00a55a e080     +LDI R24 , BYTE3 ( 0x0 )
00a55b e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a55c dd40      	RCALL _send_cmd_G102
00a55d 30e0      	CPI  R30,0
00a55e f529      	BRNE _0x20400D7
00a55f efef      	LDI  R30,LOW(255)
00a560 bdee      	OUT  0x2E,R30
                 _0x20400D8:
00a561 b5ed      	IN   R30,0x2D
00a562 ffe7      	SBRS R30,7
00a563 cffd      	RJMP _0x20400D8
00a564 01fe      	MOVW R30,R28
00a565 9636      	ADIW R30,6
00a566 93fa      	ST   -Y,R31
00a567 93ea      	ST   -Y,R30
00a568 e1a0      	LDI  R26,LOW(16)
00a569 e0b0      	LDI  R27,0
00a56a dc89      	RCALL _rx_datablock_G102
00a56b 30e0      	CPI  R30,0
00a56c f0b9      	BREQ _0x20400DB
00a56d e300      	LDI  R16,LOW(48)
                 _0x20400DD:
00a56e 3000      	CPI  R16,0
00a56f f039      	BREQ _0x20400DE
00a570 efef      	LDI  R30,LOW(255)
00a571 bdee      	OUT  0x2E,R30
                 _0x20400DF:
00a572 b5ed      	IN   R30,0x2D
00a573 ffe7      	SBRS R30,7
00a574 cffd      	RJMP _0x20400DF
00a575 5001      	SUBI R16,1
00a576 cff7      	RJMP _0x20400DD
                 _0x20400DE:
00a577 89e8      	LDD  R30,Y+16
00a578 95e2      	SWAP R30
00a579 70ef      	ANDI R30,0xF
                +
00a57a e1a0     +LDI R26 , LOW ( 0x10 )
00a57b e0b0     +LDI R27 , HIGH ( 0x10 )
00a57c e080     +LDI R24 , BYTE3 ( 0x10 )
00a57d e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
00a57e 940e d8c7 	CALL __LSLD12
00a580 01da      	MOVW R26,R20
00a581 940e d9ff 	CALL __PUTDP1
00a583 e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
00a584 c074      	RJMP _0x20400E2
                 _0x20400D6:
00a585 e4e9      	LDI  R30,LOW(73)
00a586 93ea      	ST   -Y,R30
                +
00a587 e0a0     +LDI R26 , LOW ( 0x0 )
00a588 e0b0     +LDI R27 , HIGH ( 0x0 )
00a589 e080     +LDI R24 , BYTE3 ( 0x0 )
00a58a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a58b dd11      	RCALL _send_cmd_G102
00a58c 30e0      	CPI  R30,0
00a58d f449      	BRNE _0x20400E4
00a58e 01fe      	MOVW R30,R28
00a58f 9636      	ADIW R30,6
00a590 93fa      	ST   -Y,R31
00a591 93ea      	ST   -Y,R30
00a592 e1a0      	LDI  R26,LOW(16)
00a593 e0b0      	LDI  R27,0
00a594 dc5f      	RCALL _rx_datablock_G102
00a595 30e0      	CPI  R30,0
00a596 f409      	BRNE _0x20400E5
                 _0x20400E4:
00a597 c061      	RJMP _0x20400E3
                 _0x20400E5:
00a598 91e0 1aaa 	LDS  R30,_card_type_G102
00a59a 70e2      	ANDI R30,LOW(0x2)
00a59b f151      	BREQ _0x20400E6
00a59c 89e8      	LDD  R30,Y+16
00a59d 73ef      	ANDI R30,LOW(0x3F)
00a59e 27ff      	CLR  R31
00a59f 2766      	CLR  R22
00a5a0 2777      	CLR  R23
00a5a1 940e d8ff 	CALL __LSLD1
00a5a3 937f      	PUSH R23
00a5a4 936f      	PUSH R22
00a5a5 93ff      	PUSH R31
00a5a6 93ef      	PUSH R30
00a5a7 89e9      	LDD  R30,Y+17
00a5a8 78e0      	ANDI R30,LOW(0x80)
00a5a9 27ff      	CLR  R31
00a5aa 2766      	CLR  R22
00a5ab 2777      	CLR  R23
00a5ac 01df      	MOVW R26,R30
00a5ad 01cb      	MOVW R24,R22
00a5ae e0e7      	LDI  R30,LOW(7)
00a5af 940e d8d3 	CALL __LSRD12
00a5b1 91af      	POP  R26
00a5b2 91bf      	POP  R27
00a5b3 918f      	POP  R24
00a5b4 919f      	POP  R25
00a5b5 940e d894 	CALL __ADDD12
                +
00a5b7 5fef     +SUBI R30 , LOW ( - 1 )
00a5b8 4fff     +SBCI R31 , HIGH ( - 1 )
00a5b9 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a5ba 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a5bb 01df      	MOVW R26,R30
00a5bc 01cb      	MOVW R24,R22
00a5bd 89eb      	LDD  R30,Y+19
00a5be 95e2      	SWAP R30
00a5bf 70ef      	ANDI R30,0xF
00a5c0 95e6      	LSR  R30
00a5c1 95e6      	LSR  R30
00a5c2 50e1      	SUBI R30,LOW(1)
00a5c3 940e d8c7 	CALL __LSLD12
00a5c5 c02f      	RJMP _0x2040102
                 _0x20400E6:
00a5c6 89e8      	LDD  R30,Y+16
00a5c7 77ec      	ANDI R30,LOW(0x7C)
00a5c8 95e6      	LSR  R30
00a5c9 95e6      	LSR  R30
00a5ca 27ff      	CLR  R31
00a5cb 2766      	CLR  R22
00a5cc 2777      	CLR  R23
                +
00a5cd 5fef     +SUBI R30 , LOW ( - 1 )
00a5ce 4fff     +SBCI R31 , HIGH ( - 1 )
00a5cf 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a5d0 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a5d1 937f      	PUSH R23
00a5d2 936f      	PUSH R22
00a5d3 93ff      	PUSH R31
00a5d4 93ef      	PUSH R30
00a5d5 89e9      	LDD  R30,Y+17
00a5d6 70e3      	ANDI R30,LOW(0x3)
00a5d7 27ff      	CLR  R31
00a5d8 2766      	CLR  R22
00a5d9 2777      	CLR  R23
00a5da 01df      	MOVW R26,R30
00a5db 01cb      	MOVW R24,R22
00a5dc e0e3      	LDI  R30,LOW(3)
00a5dd 940e d8c7 	CALL __LSLD12
00a5df 01df      	MOVW R26,R30
00a5e0 01cb      	MOVW R24,R22
00a5e1 89e9      	LDD  R30,Y+17
00a5e2 7ee0      	ANDI R30,LOW(0xE0)
00a5e3 95e2      	SWAP R30
00a5e4 70ef      	ANDI R30,0xF
00a5e5 95e6      	LSR  R30
00a5e6 27ff      	CLR  R31
00a5e7 2766      	CLR  R22
00a5e8 2777      	CLR  R23
00a5e9 940e d894 	CALL __ADDD12
                +
00a5eb 5fef     +SUBI R30 , LOW ( - 1 )
00a5ec 4fff     +SBCI R31 , HIGH ( - 1 )
00a5ed 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a5ee 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a5ef 91af      	POP  R26
00a5f0 91bf      	POP  R27
00a5f1 918f      	POP  R24
00a5f2 919f      	POP  R25
00a5f3 940e d93a 	CALL __MULD12U
                 _0x2040102:
00a5f5 01da      	MOVW R26,R20
00a5f6 940e d9ff 	CALL __PUTDP1
00a5f8 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
00a5f9 c05b      	RJMP _0x20400CB
                 _0x20400D5:
00a5fa 30ea      	CPI  R30,LOW(0xA)
00a5fb f431      	BRNE _0x20400E8
00a5fc 91e0 1aaa 	LDS  R30,_card_type_G102
00a5fe 01da      	MOVW R26,R20
00a5ff 93ec      	ST   X,R30
00a600 e010      	LDI  R17,LOW(0)
00a601 c053      	RJMP _0x20400CB
                 _0x20400E8:
00a602 30eb      	CPI  R30,LOW(0xB)
00a603 f499      	BRNE _0x20400E9
00a604 e4e9      	LDI  R30,LOW(73)
00a605 93ea      	ST   -Y,R30
                +
00a606 e0a0     +LDI R26 , LOW ( 0x0 )
00a607 e0b0     +LDI R27 , HIGH ( 0x0 )
00a608 e080     +LDI R24 , BYTE3 ( 0x0 )
00a609 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a60a dc92      	RCALL _send_cmd_G102
00a60b 30e0      	CPI  R30,0
00a60c f439      	BRNE _0x20400EB
00a60d 935a      	ST   -Y,R21
00a60e 934a      	ST   -Y,R20
00a60f e1a0      	LDI  R26,LOW(16)
00a610 e0b0      	LDI  R27,0
00a611 dbe2      	RCALL _rx_datablock_G102
00a612 30e0      	CPI  R30,0
00a613 f409      	BRNE _0x20400EC
                 _0x20400EB:
00a614 c001      	RJMP _0x20400EA
                 _0x20400EC:
00a615 e010      	LDI  R17,LOW(0)
                 _0x20400EA:
00a616 c03e      	RJMP _0x20400CB
                 _0x20400E9:
00a617 30ec      	CPI  R30,LOW(0xC)
00a618 f499      	BRNE _0x20400ED
00a619 e4ea      	LDI  R30,LOW(74)
00a61a 93ea      	ST   -Y,R30
                +
00a61b e0a0     +LDI R26 , LOW ( 0x0 )
00a61c e0b0     +LDI R27 , HIGH ( 0x0 )
00a61d e080     +LDI R24 , BYTE3 ( 0x0 )
00a61e e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a61f dc7d      	RCALL _send_cmd_G102
00a620 30e0      	CPI  R30,0
00a621 f439      	BRNE _0x20400EF
00a622 935a      	ST   -Y,R21
00a623 934a      	ST   -Y,R20
00a624 e1a0      	LDI  R26,LOW(16)
00a625 e0b0      	LDI  R27,0
00a626 dbcd      	RCALL _rx_datablock_G102
00a627 30e0      	CPI  R30,0
00a628 f409      	BRNE _0x20400F0
                 _0x20400EF:
00a629 c001      	RJMP _0x20400EE
                 _0x20400F0:
00a62a e010      	LDI  R17,LOW(0)
                 _0x20400EE:
00a62b c029      	RJMP _0x20400CB
                 _0x20400ED:
00a62c 30ed      	CPI  R30,LOW(0xD)
00a62d f469      	BRNE _0x20400F1
00a62e e7ea      	LDI  R30,LOW(122)
00a62f 93ea      	ST   -Y,R30
                +
00a630 e0a0     +LDI R26 , LOW ( 0x0 )
00a631 e0b0     +LDI R27 , HIGH ( 0x0 )
00a632 e080     +LDI R24 , BYTE3 ( 0x0 )
00a633 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a634 dc68      	RCALL _send_cmd_G102
00a635 30e0      	CPI  R30,0
00a636 f419      	BRNE _0x20400F2
00a637 01da      	MOVW R26,R20
00a638 dcc6      	RCALL _rx_spi4_G102
00a639 e010      	LDI  R17,LOW(0)
                 _0x20400F2:
00a63a c01a      	RJMP _0x20400CB
                 _0x20400F1:
00a63b 30ee      	CPI  R30,LOW(0xE)
00a63c f4b9      	BRNE _0x20400F9
00a63d eced      	LDI  R30,LOW(205)
00a63e 93ea      	ST   -Y,R30
                +
00a63f e0a0     +LDI R26 , LOW ( 0x0 )
00a640 e0b0     +LDI R27 , HIGH ( 0x0 )
00a641 e080     +LDI R24 , BYTE3 ( 0x0 )
00a642 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a643 dc59      	RCALL _send_cmd_G102
00a644 30e0      	CPI  R30,0
00a645 f469      	BRNE _0x20400F4
00a646 efef      	LDI  R30,LOW(255)
00a647 bdee      	OUT  0x2E,R30
                 _0x20400F5:
00a648 b5ed      	IN   R30,0x2D
00a649 ffe7      	SBRS R30,7
00a64a cffd      	RJMP _0x20400F5
00a64b 935a      	ST   -Y,R21
00a64c 934a      	ST   -Y,R20
00a64d e4a0      	LDI  R26,LOW(64)
00a64e e0b0      	LDI  R27,0
00a64f dba4      	RCALL _rx_datablock_G102
00a650 30e0      	CPI  R30,0
00a651 f009      	BREQ _0x20400F8
00a652 e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
00a653 c001      	RJMP _0x20400CB
                 _0x20400F9:
00a654 e014      	LDI  R17,LOW(4)
                 _0x20400CB:
00a655 db97      	RCALL _release_spi_G102
00a656 2fe1      	MOV  R30,R17
                 _0x20E0022:
00a657 940e daa0 	CALL __LOADLOCR6
00a659 966a      	ADIW R28,26
00a65a 9508      	RET
                 _disk_timerproc:
00a65b 931a      	ST   -Y,R17
00a65c 930a      	ST   -Y,R16
00a65d 9110 1aa8 	LDS  R17,_timer1_G102
00a65f 3010      	CPI  R17,0
00a660 f019      	BREQ _0x20400FA
00a661 5011      	SUBI R17,LOW(1)
00a662 9310 1aa8 	STS  _timer1_G102,R17
                 _0x20400FA:
00a664 9110 1aa9 	LDS  R17,_timer2_G102
00a666 3010      	CPI  R17,0
00a667 f019      	BREQ _0x20400FB
00a668 5011      	SUBI R17,LOW(1)
00a669 9310 1aa9 	STS  _timer2_G102,R17
                 _0x20400FB:
00a66b 9110 1aab 	LDS  R17,_pv_S102000B000
00a66d b1e0      	IN   R30,0x0
00a66e 70e2      	ANDI R30,LOW(0x2)
00a66f 2fae      	MOV  R26,R30
00a670 b1e0      	IN   R30,0x0
00a671 70e1      	ANDI R30,LOW(0x1)
00a672 2bea      	OR   R30,R26
00a673 93e0 1aab 	STS  _pv_S102000B000,R30
00a675 17e1      	CP   R30,R17
00a676 f481      	BRNE _0x20400FC
00a677 9100 1aa7 	LDS  R16,_status_G102
00a679 70e2      	ANDI R30,LOW(0x2)
00a67a f011      	BREQ _0x20400FD
00a67b 6004      	ORI  R16,LOW(4)
00a67c c001      	RJMP _0x20400FE
                 _0x20400FD:
00a67d 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
00a67e 91e0 1aab 	LDS  R30,_pv_S102000B000
00a680 70e1      	ANDI R30,LOW(0x1)
00a681 f011      	BREQ _0x20400FF
00a682 6003      	ORI  R16,LOW(3)
00a683 c001      	RJMP _0x2040100
                 _0x20400FF:
00a684 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
00a685 9300 1aa7 	STS  _status_G102,R16
                 _0x20400FC:
00a687 9109      	LD   R16,Y+
00a688 9119      	LD   R17,Y+
00a689 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
00a68a 9727      	SBIW R28,7
00a68b 91a0 1463 	LDS  R26,_prtc_get_time
00a68d 91b0 1464 	LDS  R27,_prtc_get_time+1
00a68f 9180 1465 	LDS  R24,_prtc_get_time+2
00a691 9190 1466 	LDS  R25,_prtc_get_time+3
00a693 940e da89 	CALL __CPD02
00a695 f059      	BREQ _0x2060004
00a696 91a0 1467 	LDS  R26,_prtc_get_date
00a698 91b0 1468 	LDS  R27,_prtc_get_date+1
00a69a 9180 1469 	LDS  R24,_prtc_get_date+2
00a69c 9190 146a 	LDS  R25,_prtc_get_date+3
00a69e 940e da89 	CALL __CPD02
00a6a0 f429      	BRNE _0x2060003
                 _0x2060004:
                +
00a6a1 e0e0     +LDI R30 , LOW ( 0x3A210000 )
00a6a2 e0f0     +LDI R31 , HIGH ( 0x3A210000 )
00a6a3 e261     +LDI R22 , BYTE3 ( 0x3A210000 )
00a6a4 e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
00a6a5 c070      	RJMP _0x20E0021
                 _0x2060003:
00a6a6 940e be33 	CALL SUBOPT_0x56
00a6a8 940e be8d 	CALL SUBOPT_0x63
00a6aa 01de      	MOVW R26,R28
00a6ab 9618      	ADIW R26,8
                +
00a6ac 91e0 1463+LDS R30 , _prtc_get_time + ( 0 )
00a6ae 91f0 1464+LDS R31 , _prtc_get_time + ( 0 ) + 1
00a6b0 9160 1465+LDS R22 , _prtc_get_time + ( 0 ) + 2
00a6b2 bf6c     +OUT EIND , R22
00a6b3 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
00a6b4 01fe      	MOVW R30,R28
00a6b5 9633      	ADIW R30,3
00a6b6 940e cb73 	CALL SUBOPT_0x274
00a6b8 01de      	MOVW R26,R28
00a6b9 9614      	ADIW R26,4
                +
00a6ba 91e0 1467+LDS R30 , _prtc_get_date + ( 0 )
00a6bc 91f0 1468+LDS R31 , _prtc_get_date + ( 0 ) + 1
00a6be 9160 1469+LDS R22 , _prtc_get_date + ( 0 ) + 2
00a6c0 bf6c     +OUT EIND , R22
00a6c1 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
00a6c2 81e8      	LD   R30,Y
00a6c3 81f9      	LDD  R31,Y+1
00a6c4 5bec      	SUBI R30,LOW(1980)
00a6c5 40f7      	SBCI R31,HIGH(1980)
00a6c6 2766      	CLR  R22
00a6c7 2777      	CLR  R23
00a6c8 01df      	MOVW R26,R30
00a6c9 01cb      	MOVW R24,R22
00a6ca e1e9      	LDI  R30,LOW(25)
00a6cb 940e d8c7 	CALL __LSLD12
00a6cd 937f      	PUSH R23
00a6ce 936f      	PUSH R22
00a6cf 93ff      	PUSH R31
00a6d0 93ef      	PUSH R30
00a6d1 81ea      	LDD  R30,Y+2
00a6d2 940e d317 	CALL SUBOPT_0x36B
00a6d4 01df      	MOVW R26,R30
00a6d5 01cb      	MOVW R24,R22
00a6d6 e1e5      	LDI  R30,LOW(21)
00a6d7 940e d8c7 	CALL __LSLD12
00a6d9 91af      	POP  R26
00a6da 91bf      	POP  R27
00a6db 918f      	POP  R24
00a6dc 919f      	POP  R25
00a6dd 940e d8ad 	CALL __ORD12
00a6df 01df      	MOVW R26,R30
00a6e0 01cb      	MOVW R24,R22
00a6e1 81eb      	LDD  R30,Y+3
00a6e2 940e d317 	CALL SUBOPT_0x36B
00a6e4 940e d90e 	CALL __LSLD16
00a6e6 940e d8ad 	CALL __ORD12
00a6e8 937f      	PUSH R23
00a6e9 936f      	PUSH R22
00a6ea 93ff      	PUSH R31
00a6eb 93ef      	PUSH R30
00a6ec 81ee      	LDD  R30,Y+6
00a6ed 940e d317 	CALL SUBOPT_0x36B
00a6ef 01df      	MOVW R26,R30
00a6f0 01cb      	MOVW R24,R22
00a6f1 e0eb      	LDI  R30,LOW(11)
00a6f2 940e d8c7 	CALL __LSLD12
00a6f4 91af      	POP  R26
00a6f5 91bf      	POP  R27
00a6f6 918f      	POP  R24
00a6f7 919f      	POP  R25
00a6f8 940e d8ad 	CALL __ORD12
00a6fa 937f      	PUSH R23
00a6fb 936f      	PUSH R22
00a6fc 93ff      	PUSH R31
00a6fd 93ef      	PUSH R30
00a6fe 81ed      	LDD  R30,Y+5
00a6ff 940e d317 	CALL SUBOPT_0x36B
00a701 01df      	MOVW R26,R30
00a702 01cb      	MOVW R24,R22
00a703 e0e5      	LDI  R30,LOW(5)
00a704 940e d8c7 	CALL __LSLD12
00a706 91af      	POP  R26
00a707 91bf      	POP  R27
00a708 918f      	POP  R24
00a709 919f      	POP  R25
00a70a 940e d8ad 	CALL __ORD12
00a70c 01df      	MOVW R26,R30
00a70d 01cb      	MOVW R24,R22
00a70e 81ec      	LDD  R30,Y+4
00a70f e0f0      	LDI  R31,0
00a710 95f5      	ASR  R31
00a711 95e7      	ROR  R30
00a712 940e d919 	CALL __CWD1
00a714 940e d8ad 	CALL __ORD12
                 _0x20E0021:
00a716 9627      	ADIW R28,7
00a717 9508      	RET
                 _mem_cpy_G103:
00a718 940e bf4d 	CALL SUBOPT_0x7F
                +
00a71a 8508     +LDD R16 , Y + 8
00a71b 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
00a71c 812e     +LDD R18 , Y + 6
00a71d 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
00a71e 81ec      	LDD  R30,Y+4
00a71f 81fd      	LDD  R31,Y+4+1
00a720 9731      	SBIW R30,1
00a721 83ec      	STD  Y+4,R30
00a722 83fd      	STD  Y+4+1,R31
00a723 9631      	ADIW R30,1
00a724 f061      	BREQ _0x2060008
00a725 931f      	PUSH R17
00a726 930f      	PUSH R16
                +
00a727 5f0f     +SUBI R16 , LOW ( - 1 )
00a728 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a729 01d9      	MOVW R26,R18
                +
00a72a 5f2f     +SUBI R18 , LOW ( - 1 )
00a72b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a72c 91ec      	LD   R30,X
00a72d 91af      	POP  R26
00a72e 91bf      	POP  R27
00a72f 93ec      	ST   X,R30
00a730 cfed      	RJMP _0x2060006
                 _0x2060008:
00a731 940e daa2 	CALL __LOADLOCR4
00a733 c424      	RJMP _0x20E0018
                 _mem_set_G103:
00a734 940e bf59 	CALL SUBOPT_0x81
                +
00a736 810e     +LDD R16 , Y + 6
00a737 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
00a738 81ea      	LDD  R30,Y+2
00a739 81fb      	LDD  R31,Y+2+1
00a73a 9731      	SBIW R30,1
00a73b 83ea      	STD  Y+2,R30
00a73c 83fb      	STD  Y+2+1,R31
00a73d 9631      	ADIW R30,1
00a73e f049      	BREQ _0x206000E
00a73f 931f      	PUSH R17
00a740 930f      	PUSH R16
                +
00a741 5f0f     +SUBI R16 , LOW ( - 1 )
00a742 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a743 81ec      	LDD  R30,Y+4
00a744 91af      	POP  R26
00a745 91bf      	POP  R27
00a746 93ec      	ST   X,R30
00a747 cff0      	RJMP _0x206000C
                 _0x206000E:
00a748 8119      	LDD  R17,Y+1
00a749 8108      	LDD  R16,Y+0
                 _0x20E0020:
00a74a 9628      	ADIW R28,8
00a74b 9508      	RET
                 _mem_cmp_G103:
00a74c 940e c659 	CALL SUBOPT_0x1A9
                +
00a74e 850a     +LDD R16 , Y + 10
00a74f 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
00a750 8528     +LDD R18 , Y + 8
00a751 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
00a752 e040     +LDI R20 , LOW ( 0 )
00a753 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
00a754 81ee      	LDD  R30,Y+6
00a755 81ff      	LDD  R31,Y+6+1
00a756 9731      	SBIW R30,1
00a757 83ee      	STD  Y+6,R30
00a758 83ff      	STD  Y+6+1,R31
00a759 9631      	ADIW R30,1
00a75a f081      	BREQ _0x2060012
00a75b 01d8      	MOVW R26,R16
                +
00a75c 5f0f     +SUBI R16 , LOW ( - 1 )
00a75d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a75e 900c      	LD   R0,X
00a75f 2411      	CLR  R1
00a760 01d9      	MOVW R26,R18
                +
00a761 5f2f     +SUBI R18 , LOW ( - 1 )
00a762 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a763 91ac      	LD   R26,X
00a764 27bb      	CLR  R27
00a765 01f0      	MOVW R30,R0
00a766 1bea      	SUB  R30,R26
00a767 0bfb      	SBC  R31,R27
00a768 01af      	MOVW R20,R30
00a769 9730      	SBIW R30,0
00a76a f009      	BREQ _0x2060013
                 _0x2060012:
00a76b c001      	RJMP _0x2060011
                 _0x2060013:
00a76c cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
00a76d 01fa      	MOVW R30,R20
                 _0x20E001E:
00a76e 940e daa0 	CALL __LOADLOCR6
00a770 962c      	ADIW R28,12
00a771 9508      	RET
                 _chk_chrf_G103:
00a772 93ba      	ST   -Y,R27
00a773 93aa      	ST   -Y,R26
                 _0x2060014:
00a774 940e c0a9 	CALL SUBOPT_0xB5
                +
00a776 bf6b     +OUT RAMPZ , R22
00a777 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00a778 30e0      	CPI  R30,0
00a779 f051      	BREQ _0x2060017
00a77a 940e c0a9 	CALL SUBOPT_0xB5
                +
00a77c bf6b     +OUT RAMPZ , R22
00a77d 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00a77e 81e8      	LD   R30,Y
00a77f 81f9      	LDD  R31,Y+1
00a780 e0b0      	LDI  R27,0
00a781 17ea      	CP   R30,R26
00a782 07fb      	CPC  R31,R27
00a783 f409      	BRNE _0x2060018
                 _0x2060017:
00a784 c005      	RJMP _0x2060016
                 _0x2060018:
00a785 01de      	MOVW R26,R28
00a786 9612      	ADIW R26,2
00a787 940e d31b 	CALL SUBOPT_0x36C
00a789 cfea      	RJMP _0x2060014
                 _0x2060016:
00a78a 940e c0a9 	CALL SUBOPT_0xB5
                +
00a78c bf6b     +OUT RAMPZ , R22
00a78d 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00a78e e0f0      	LDI  R31,0
                 _0x20E001D:
00a78f 9626      	ADIW R28,6
00a790 9508      	RET
                 _move_window_G103:
00a791 940e da2e 	CALL __PUTPARD2
00a793 9724      	SBIW R28,4
00a794 931a      	ST   -Y,R17
00a795 85a9      	LDD  R26,Y+9
00a796 85ba      	LDD  R27,Y+9+1
00a797 969e      	ADIW R26,46
00a798 940e d323 	CALL SUBOPT_0x36D
00a79a 940e d32a 	CALL SUBOPT_0x36E
00a79c 940e cb64 	CALL SUBOPT_0x271
00a79e 940e da8f 	CALL __CPD12
00a7a0 f411      	BRNE PC+3
00a7a1 940c a7f3 	JMP _0x2060019
00a7a3 85e9      	LDD  R30,Y+9
00a7a4 85fa      	LDD  R31,Y+9+1
00a7a5 81e4      	LDD  R30,Z+4
00a7a6 30e0      	CPI  R30,0
00a7a7 f199      	BREQ _0x206001A
00a7a8 940e d32f 	CALL SUBOPT_0x36F
00a7aa 30e0      	CPI  R30,0
00a7ab f011      	BREQ _0x206001B
00a7ac e0e1      	LDI  R30,LOW(1)
00a7ad c046      	RJMP _0x20E001C
                 _0x206001B:
00a7ae 85a9      	LDD  R26,Y+9
00a7af 85ba      	LDD  R27,Y+9+1
00a7b0 9614      	ADIW R26,4
00a7b1 e0e0      	LDI  R30,LOW(0)
00a7b2 93ec      	ST   X,R30
00a7b3 85e9      	LDD  R30,Y+9
00a7b4 85fa      	LDD  R31,Y+9+1
00a7b5 940e d33f 	CALL SUBOPT_0x370
00a7b7 010d      	MOVW R0,R26
00a7b8 85a9      	LDD  R26,Y+9
00a7b9 85ba      	LDD  R27,Y+9+1
00a7ba 965a      	ADIW R26,26
00a7bb 940e d9f4 	CALL __GETD1P
00a7bd 01d0      	MOVW R26,R0
00a7be 940e d894 	CALL __ADDD12
00a7c0 940e cb64 	CALL SUBOPT_0x271
00a7c2 940e da94 	CALL __CPD21
00a7c4 f4b0      	BRSH _0x206001C
00a7c5 85e9      	LDD  R30,Y+9
00a7c6 85fa      	LDD  R31,Y+9+1
00a7c7 8113      	LDD  R17,Z+3
                 _0x206001E:
00a7c8 3012      	CPI  R17,2
00a7c9 f088      	BRLO _0x206001F
00a7ca 85a9      	LDD  R26,Y+9
00a7cb 85ba      	LDD  R27,Y+9+1
00a7cc 965a      	ADIW R26,26
00a7cd 940e d9f4 	CALL __GETD1P
00a7cf 940e cb64 	CALL SUBOPT_0x271
00a7d1 940e d894 	CALL __ADDD12
                +
00a7d3 83e9     +STD Y + 1 , R30
00a7d4 83fa     +STD Y + 1 + 1 , R31
00a7d5 836b     +STD Y + 1 + 2 , R22
00a7d6 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00a7d7 940e d32f 	CALL SUBOPT_0x36F
00a7d9 5011      	SUBI R17,1
00a7da cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
00a7db 940e d32a 	CALL SUBOPT_0x36E
00a7dd 940e da7d 	CALL __CPD10
00a7df f099      	BREQ _0x2060020
00a7e0 85e9      	LDD  R30,Y+9
00a7e1 85fa      	LDD  R31,Y+9+1
00a7e2 81a1      	LDD  R26,Z+1
00a7e3 93aa      	ST   -Y,R26
00a7e4 85ea      	LDD  R30,Y+10
00a7e5 85fb      	LDD  R31,Y+10+1
00a7e6 96f2      	ADIW R30,50
00a7e7 940e d344 	CALL SUBOPT_0x371
00a7e9 f011      	BREQ _0x2060021
00a7ea e0e1      	LDI  R30,LOW(1)
00a7eb c008      	RJMP _0x20E001C
                 _0x2060021:
00a7ec 940e d32a 	CALL SUBOPT_0x36E
                +
00a7ee 85a9     +LDD R26 , Y + 9
00a7ef 85ba     +LDD R27 , Y + 9 + 1
00a7f0 969e     +ADIW R26 , 46
00a7f1 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
00a7f3 e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
00a7f4 8118      	LDD  R17,Y+0
00a7f5 962b      	ADIW R28,11
00a7f6 9508      	RET
                 _sync_G103:
00a7f7 93ba      	ST   -Y,R27
00a7f8 93aa      	ST   -Y,R26
00a7f9 931a      	ST   -Y,R17
00a7fa 81e9      	LDD  R30,Y+1
00a7fb 81fa      	LDD  R31,Y+1+1
00a7fc 93fa      	ST   -Y,R31
00a7fd 93ea      	ST   -Y,R30
00a7fe 940e d34f 	CALL SUBOPT_0x372
00a800 2f1e      	MOV  R17,R30
00a801 3010      	CPI  R17,0
00a802 f011      	BREQ PC+3
00a803 940c a867 	JMP _0x2060022
00a805 81a9      	LDD  R26,Y+1
00a806 81ba      	LDD  R27,Y+1+1
00a807 91ac      	LD   R26,X
00a808 30a3      	CPI  R26,LOW(0x3)
00a809 f429      	BRNE _0x2060024
00a80a 81e9      	LDD  R30,Y+1
00a80b 81fa      	LDD  R31,Y+1+1
00a80c 81e5      	LDD  R30,Z+5
00a80d 30e0      	CPI  R30,0
00a80e f409      	BRNE _0x2060025
                 _0x2060024:
00a80f c04b      	RJMP _0x2060023
                 _0x2060025:
00a810 81a9      	LDD  R26,Y+1
00a811 81ba      	LDD  R27,Y+1+1
00a812 969e      	ADIW R26,46
00a813 940e bfab 	CALL SUBOPT_0x8F
00a815 81e9      	LDD  R30,Y+1
00a816 81fa      	LDD  R31,Y+1+1
00a817 940e d353 	CALL SUBOPT_0x373
00a819 81e9      	LDD  R30,Y+1
00a81a 81fa      	LDD  R31,Y+1+1
00a81b 96f2      	ADIW R30,50
00a81c 50e2      	SUBI R30,LOW(-510)
00a81d 4ffe      	SBCI R31,HIGH(-510)
00a81e e5a5      	LDI  R26,LOW(43605)
00a81f eaba      	LDI  R27,HIGH(43605)
00a820 83a0      	STD  Z+0,R26
00a821 83b1      	STD  Z+1,R27
00a822 81e9      	LDD  R30,Y+1
00a823 81fa      	LDD  R31,Y+1+1
00a824 96f2      	ADIW R30,50
                +
00a825 e5a2     +LDI R26 , LOW ( 0x41615252 )
00a826 e5b2     +LDI R27 , HIGH ( 0x41615252 )
00a827 e681     +LDI R24 , BYTE3 ( 0x41615252 )
00a828 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
00a829 940e ca04 	CALL SUBOPT_0x23B
00a82b 81e9      	LDD  R30,Y+1
00a82c 81fa      	LDD  R31,Y+1+1
00a82d 96f2      	ADIW R30,50
00a82e 51ec      	SUBI R30,LOW(-484)
00a82f 4ffe      	SBCI R31,HIGH(-484)
                +
00a830 e7a2     +LDI R26 , LOW ( 0x61417272 )
00a831 e7b2     +LDI R27 , HIGH ( 0x61417272 )
00a832 e481     +LDI R24 , BYTE3 ( 0x61417272 )
00a833 e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
00a834 940e ca04 	CALL SUBOPT_0x23B
00a836 81e9      	LDD  R30,Y+1
00a837 81fa      	LDD  R31,Y+1+1
00a838 96f2      	ADIW R30,50
00a839 51e8      	SUBI R30,LOW(-488)
00a83a 4ffe      	SBCI R31,HIGH(-488)
00a83b 010f      	MOVW R0,R30
00a83c 81a9      	LDD  R26,Y+1
00a83d 81ba      	LDD  R27,Y+1+1
00a83e 961e      	ADIW R26,14
00a83f 940e d35e 	CALL SUBOPT_0x374
00a841 96f2      	ADIW R30,50
00a842 51e4      	SUBI R30,LOW(-492)
00a843 4ffe      	SBCI R31,HIGH(-492)
00a844 010f      	MOVW R0,R30
00a845 81a9      	LDD  R26,Y+1
00a846 81ba      	LDD  R27,Y+1+1
00a847 961a      	ADIW R26,10
00a848 940e d35e 	CALL SUBOPT_0x374
00a84a 81a1      	LDD  R26,Z+1
00a84b 93aa      	ST   -Y,R26
00a84c 81ea      	LDD  R30,Y+2
00a84d 81fb      	LDD  R31,Y+2+1
00a84e 96f2      	ADIW R30,50
00a84f 93fa      	ST   -Y,R31
00a850 93ea      	ST   -Y,R30
00a851 81ec      	LDD  R30,Y+4
00a852 81fd      	LDD  R31,Y+4+1
00a853 940e d366 	CALL SUBOPT_0x375
00a855 dbfe      	RCALL _disk_write
00a856 81a9      	LDD  R26,Y+1
00a857 81ba      	LDD  R27,Y+1+1
00a858 9615      	ADIW R26,5
00a859 e0e0      	LDI  R30,LOW(0)
00a85a 93ec      	ST   X,R30
                 _0x2060023:
00a85b 81e9      	LDD  R30,Y+1
00a85c 81fa      	LDD  R31,Y+1+1
00a85d 81a1      	LDD  R26,Z+1
00a85e 93aa      	ST   -Y,R26
00a85f e0e0      	LDI  R30,LOW(0)
00a860 93ea      	ST   -Y,R30
00a861 e0a0      	LDI  R26,LOW(0)
00a862 e0b0      	LDI  R27,HIGH(0)
00a863 dc67      	RCALL _disk_ioctl
00a864 30e0      	CPI  R30,0
00a865 f009      	BREQ _0x2060026
00a866 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
00a867 2fe1      	MOV  R30,R17
                 _0x20E001B:
00a868 8118      	LDD  R17,Y+0
00a869 9623      	ADIW R28,3
00a86a 9508      	RET
                 _get_fat:
00a86b 940e da2e 	CALL __PUTPARD2
00a86d 9724      	SBIW R28,4
00a86e 940e da9b 	CALL __SAVELOCR4
00a870 940e c18f 	CALL SUBOPT_0xDB
00a872 940e d36e 	CALL SUBOPT_0x376
00a874 f050      	BRLO _0x2060028
00a875 85ac      	LDD  R26,Y+12
00a876 85bd      	LDD  R27,Y+12+1
00a877 965e      	ADIW R26,30
00a878 940e d9f4 	CALL __GETD1P
00a87a 940e c18f 	CALL SUBOPT_0xDB
00a87c 940e da94 	CALL __CPD21
00a87e f018      	BRLO _0x2060027
                 _0x2060028:
00a87f 940e d376 	CALL SUBOPT_0x377
00a881 c062      	RJMP _0x20E001A
                 _0x2060027:
00a882 85ac      	LDD  R26,Y+12
00a883 85bd      	LDD  R27,Y+12+1
00a884 9692      	ADIW R26,34
00a885 940e d37b 	CALL SUBOPT_0x378
00a887 85ac      	LDD  R26,Y+12
00a888 85bd      	LDD  R27,Y+12+1
00a889 91ec      	LD   R30,X
00a88a 940e c8bc 	CALL SUBOPT_0x20A
00a88c f559      	BRNE _0x206002D
                +
00a88d 8528     +LDD R18 , Y + 8
00a88e 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
00a88f 01f9      	MOVW R30,R18
00a890 95f6      	LSR  R31
00a891 95e7      	ROR  R30
                +
00a892 0f2e     +ADD R18 , R30
00a893 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
00a894 940e c684 	CALL SUBOPT_0x1B0
00a896 940e d37f 	CALL SUBOPT_0x379
00a898 f009      	BREQ _0x206002E
00a899 c048      	RJMP _0x206002C
                 _0x206002E:
00a89a 940e d38e 	CALL SUBOPT_0x37A
00a89c 910c      	LD   R16,X
00a89d 2711      	CLR  R17
                +
00a89e 5f2f     +SUBI R18 , LOW ( - 1 )
00a89f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a8a0 940e c684 	CALL SUBOPT_0x1B0
00a8a2 940e d37f 	CALL SUBOPT_0x379
00a8a4 f5e9      	BRNE _0x206002C
00a8a5 940e d38e 	CALL SUBOPT_0x37A
00a8a7 91ec      	LD   R30,X
00a8a8 2ffe      	MOV  R31,R30
00a8a9 e0e0      	LDI  R30,0
                +
00a8aa 2b0e     +OR R16 , R30
00a8ab 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
00a8ac 85e8      	LDD  R30,Y+8
00a8ad 70e1      	ANDI R30,LOW(0x1)
00a8ae f021      	BREQ _0x2060030
00a8af 01f8      	MOVW R30,R16
00a8b0 940e d8f1 	CALL __LSRW4
00a8b2 c002      	RJMP _0x206022B
                 _0x2060030:
00a8b3 01f8      	MOVW R30,R16
00a8b4 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
00a8b5 2766      	CLR  R22
00a8b6 2777      	CLR  R23
00a8b7 c02c      	RJMP _0x20E001A
                 _0x206002D:
00a8b8 30e2      	CPI  R30,LOW(0x2)
00a8b9 e0a0      	LDI  R26,HIGH(0x2)
00a8ba 07fa      	CPC  R31,R26
00a8bb f489      	BRNE _0x2060033
00a8bc 940e c684 	CALL SUBOPT_0x1B0
00a8be 940e be1e 	CALL SUBOPT_0x52
00a8c0 940e d396 	CALL SUBOPT_0x37B
00a8c2 940e d39d 	CALL SUBOPT_0x37C
00a8c4 f4e9      	BRNE _0x206002C
00a8c5 85a8      	LDD  R26,Y+8
00a8c6 85b9      	LDD  R27,Y+8+1
00a8c7 e0e2      	LDI  R30,LOW(2)
00a8c8 940e d3a5 	CALL SUBOPT_0x37D
00a8ca 940e bcad 	CALL SUBOPT_0x1D
00a8cc c017      	RJMP _0x20E001A
                 _0x2060033:
00a8cd 30e3      	CPI  R30,LOW(0x3)
00a8ce e0a0      	LDI  R26,HIGH(0x3)
00a8cf 07fa      	CPC  R31,R26
00a8d0 f489      	BRNE _0x206002C
00a8d1 940e c684 	CALL SUBOPT_0x1B0
00a8d3 940e be1e 	CALL SUBOPT_0x52
00a8d5 940e d3ae 	CALL SUBOPT_0x37E
00a8d7 940e d39d 	CALL SUBOPT_0x37C
00a8d9 f441      	BRNE _0x206002C
00a8da 85a8      	LDD  R26,Y+8
00a8db 85b9      	LDD  R27,Y+8+1
00a8dc e0e4      	LDI  R30,LOW(4)
00a8dd 940e d3a5 	CALL SUBOPT_0x37D
00a8df 940e d3b5 	CALL SUBOPT_0x37F
00a8e1 c002      	RJMP _0x20E001A
                 _0x206002C:
00a8e2 940e bcd8 	CALL SUBOPT_0x24
                 _0x20E001A:
00a8e4 940e daa2 	CALL __LOADLOCR4
00a8e6 962e      	ADIW R28,14
00a8e7 9508      	RET
                 _put_fat:
00a8e8 940e da2e 	CALL __PUTPARD2
00a8ea 9724      	SBIW R28,4
00a8eb 940e da99 	CALL __SAVELOCR6
00a8ed 940e d3bc 	CALL SUBOPT_0x380
00a8ef 940e d36e 	CALL SUBOPT_0x376
00a8f1 f050      	BRLO _0x2060038
00a8f2 89aa      	LDD  R26,Y+18
00a8f3 89bb      	LDD  R27,Y+18+1
00a8f4 965e      	ADIW R26,30
00a8f5 940e d9f4 	CALL __GETD1P
00a8f7 940e d3bc 	CALL SUBOPT_0x380
00a8f9 940e da94 	CALL __CPD21
00a8fb f010      	BRLO _0x2060037
                 _0x2060038:
00a8fc e052      	LDI  R21,LOW(2)
00a8fd c08a      	RJMP _0x206003A
                 _0x2060037:
00a8fe 89aa      	LDD  R26,Y+18
00a8ff 89bb      	LDD  R27,Y+18+1
00a900 9692      	ADIW R26,34
00a901 940e d9f4 	CALL __GETD1P
00a903 940e c0b8 	CALL SUBOPT_0xB8
00a905 89aa      	LDD  R26,Y+18
00a906 89bb      	LDD  R27,Y+18+1
00a907 91ec      	LD   R30,X
00a908 940e c8bc 	CALL SUBOPT_0x20A
00a90a f011      	BREQ PC+3
00a90b 940c a954 	JMP _0x206003E
                +
00a90d 850e     +LDD R16 , Y + 14
00a90e 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
00a90f 01f8      	MOVW R30,R16
00a910 95f6      	LSR  R31
00a911 95e7      	ROR  R30
                +
00a912 0f0e     +ADD R16 , R30
00a913 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00a914 940e cbfd 	CALL SUBOPT_0x288
00a916 940e d3c1 	CALL SUBOPT_0x381
00a918 f009      	BREQ _0x206003F
00a919 c069      	RJMP _0x206003D
                 _0x206003F:
00a91a 940e d3d1 	CALL SUBOPT_0x382
00a91c f051      	BREQ _0x2060040
00a91d 01d9      	MOVW R26,R18
00a91e 91ec      	LD   R30,X
00a91f 70ef      	ANDI R30,LOW(0xF)
00a920 2fae      	MOV  R26,R30
00a921 85ea      	LDD  R30,Y+10
00a922 e0f0      	LDI  R31,0
00a923 940e d8df 	CALL __LSLW4
00a925 2bea      	OR   R30,R26
00a926 c001      	RJMP _0x2060041
                 _0x2060040:
00a927 85ea      	LDD  R30,Y+10
                 _0x2060041:
00a928 01d9      	MOVW R26,R18
00a929 93ec      	ST   X,R30
                +
00a92a 5f0f     +SUBI R16 , LOW ( - 1 )
00a92b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a92c 89aa      	LDD  R26,Y+18
00a92d 89bb      	LDD  R27,Y+18+1
00a92e 9614      	ADIW R26,4
00a92f e0e1      	LDI  R30,LOW(1)
00a930 93ec      	ST   X,R30
00a931 940e cbfd 	CALL SUBOPT_0x288
00a933 940e d3c1 	CALL SUBOPT_0x381
00a935 f009      	BREQ _0x2060043
00a936 c04c      	RJMP _0x206003D
                 _0x2060043:
00a937 940e d3d1 	CALL SUBOPT_0x382
00a939 f049      	BREQ _0x2060044
00a93a 940e be1e 	CALL SUBOPT_0x52
00a93c e0e4      	LDI  R30,LOW(4)
00a93d 940e d8d3 	CALL __LSRD12
00a93f 27ff      	CLR  R31
00a940 2766      	CLR  R22
00a941 2777      	CLR  R23
00a942 c00e      	RJMP _0x2060045
                 _0x2060044:
00a943 01d9      	MOVW R26,R18
00a944 91ec      	LD   R30,X
00a945 7fe0      	ANDI R30,LOW(0xF0)
00a946 2e1e      	MOV  R1,R30
00a947 940e be1e 	CALL SUBOPT_0x52
00a949 e0e8      	LDI  R30,LOW(8)
00a94a 940e d8d3 	CALL __LSRD12
00a94c 27ff      	CLR  R31
00a94d 2766      	CLR  R22
00a94e 2777      	CLR  R23
00a94f 70ef      	ANDI R30,LOW(0xF)
00a950 29e1      	OR   R30,R1
                 _0x2060045:
00a951 01d9      	MOVW R26,R18
00a952 93ec      	ST   X,R30
00a953 c02f      	RJMP _0x206003D
                 _0x206003E:
00a954 30e2      	CPI  R30,LOW(0x2)
00a955 e0a0      	LDI  R26,HIGH(0x2)
00a956 07fa      	CPC  R31,R26
00a957 f499      	BRNE _0x2060047
00a958 940e cbfd 	CALL SUBOPT_0x288
00a95a 940e d3dc 	CALL SUBOPT_0x383
00a95c 940e d396 	CALL SUBOPT_0x37B
00a95e 940e d3e1 	CALL SUBOPT_0x384
00a960 f511      	BRNE _0x206003D
00a961 85ae      	LDD  R26,Y+14
00a962 85bf      	LDD  R27,Y+14+1
00a963 e0e2      	LDI  R30,LOW(2)
00a964 940e d3ea 	CALL SUBOPT_0x385
00a966 85aa      	LDD  R26,Y+10
00a967 85bb      	LDD  R27,Y+10+1
00a968 83a0      	STD  Z+0,R26
00a969 83b1      	STD  Z+1,R27
00a96a c018      	RJMP _0x206003D
                 _0x2060047:
00a96b 30e3      	CPI  R30,LOW(0x3)
00a96c e0a0      	LDI  R26,HIGH(0x3)
00a96d 07fa      	CPC  R31,R26
00a96e f499      	BRNE _0x206004B
00a96f 940e cbfd 	CALL SUBOPT_0x288
00a971 940e d3dc 	CALL SUBOPT_0x383
00a973 940e d3ae 	CALL SUBOPT_0x37E
00a975 940e d3e1 	CALL SUBOPT_0x384
00a977 f459      	BRNE _0x206003D
00a978 85ae      	LDD  R26,Y+14
00a979 85bf      	LDD  R27,Y+14+1
00a97a e0e4      	LDI  R30,LOW(4)
00a97b 940e d3ea 	CALL SUBOPT_0x385
00a97d 940e be1e 	CALL SUBOPT_0x52
00a97f 940e ca04 	CALL SUBOPT_0x23B
00a981 c001      	RJMP _0x206003D
                 _0x206004B:
00a982 e052      	LDI  R21,LOW(2)
                 _0x206003D:
00a983 89aa      	LDD  R26,Y+18
00a984 89bb      	LDD  R27,Y+18+1
00a985 9614      	ADIW R26,4
00a986 e0e1      	LDI  R30,LOW(1)
00a987 93ec      	ST   X,R30
                 _0x206003A:
00a988 2fe5      	MOV  R30,R21
00a989 940e daa0 	CALL __LOADLOCR6
00a98b 9664      	ADIW R28,20
00a98c 9508      	RET
                 _remove_chain_G103:
00a98d 940e da2e 	CALL __PUTPARD2
00a98f 9724      	SBIW R28,4
00a990 931a      	ST   -Y,R17
00a991 940e d3f3 	CALL SUBOPT_0x386
00a993 940e d36e 	CALL SUBOPT_0x376
00a995 f018      	BRLO _0x206004D
00a996 940e d3f8 	CALL SUBOPT_0x387
00a998 f010      	BRLO _0x206004C
                 _0x206004D:
00a999 e012      	LDI  R17,LOW(2)
00a99a c03e      	RJMP _0x206004F
                 _0x206004C:
00a99b e010      	LDI  R17,LOW(0)
                 _0x2060050:
00a99c 940e d3f8 	CALL SUBOPT_0x387
00a99e f5d0      	BRSH _0x2060052
00a99f 940e c5f3 	CALL SUBOPT_0x196
00a9a1 940e bea4 	CALL SUBOPT_0x67
00a9a3 dec7      	RCALL _get_fat
                +
00a9a4 83e9     +STD Y + 1 , R30
00a9a5 83fa     +STD Y + 1 + 1 , R31
00a9a6 836b     +STD Y + 1 + 2 , R22
00a9a7 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00a9a8 940e d401 	CALL SUBOPT_0x388
00a9aa 940e da7d 	CALL __CPD10
00a9ac f161      	BREQ _0x2060052
00a9ad 940e cb64 	CALL SUBOPT_0x271
00a9af 940e d406 	CALL SUBOPT_0x389
00a9b1 f411      	BRNE _0x2060054
00a9b2 e012      	LDI  R17,LOW(2)
00a9b3 c025      	RJMP _0x2060052
                 _0x2060054:
00a9b4 940e cb64 	CALL SUBOPT_0x271
00a9b6 940e bd70 	CALL SUBOPT_0x3A
00a9b8 f411      	BRNE _0x2060055
00a9b9 e011      	LDI  R17,LOW(1)
00a9ba c01e      	RJMP _0x2060052
                 _0x2060055:
00a9bb 940e c5f3 	CALL SUBOPT_0x196
00a9bd 940e bda4 	CALL SUBOPT_0x3F
00a9bf 940e bd0c 	CALL SUBOPT_0x2C
00a9c1 df26      	RCALL _put_fat
00a9c2 2f1e      	MOV  R17,R30
00a9c3 3010      	CPI  R17,0
00a9c4 f4a1      	BRNE _0x2060052
00a9c5 85e9      	LDD  R30,Y+9
00a9c6 85fa      	LDD  R31,Y+9+1
00a9c7 940e d40e 	CALL SUBOPT_0x38A
00a9c9 f051      	BREQ _0x2060057
00a9ca 85a9      	LDD  R26,Y+9
00a9cb 85ba      	LDD  R27,Y+9+1
00a9cc 961e      	ADIW R26,14
00a9cd 940e bfd2 	CALL SUBOPT_0x93
00a9cf 85a9      	LDD  R26,Y+9
00a9d0 85ba      	LDD  R27,Y+9+1
00a9d1 9615      	ADIW R26,5
00a9d2 e0e1      	LDI  R30,LOW(1)
00a9d3 93ec      	ST   X,R30
                 _0x2060057:
00a9d4 940e d401 	CALL SUBOPT_0x388
00a9d6 940e d414 	CALL SUBOPT_0x38B
00a9d8 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
00a9d9 2fe1      	MOV  R30,R17
00a9da 8118      	LDD  R17,Y+0
00a9db c26f      	RJMP _0x20E0016
                 _create_chain_G103:
00a9dc 940e da2e 	CALL __PUTPARD2
00a9de 9760      	SBIW R28,16
00a9df 89ac      	LDD  R26,Y+20
00a9e0 89bd      	LDD  R27,Y+20+1
00a9e1 965e      	ADIW R26,30
00a9e2 940e d9f4 	CALL __GETD1P
00a9e4 940e c18a 	CALL SUBOPT_0xD9
00a9e6 940e bc33 	CALL SUBOPT_0xC
00a9e8 940e da7d 	CALL __CPD10
00a9ea f4b1      	BRNE _0x2060058
00a9eb 89ac      	LDD  R26,Y+20
00a9ec 89bd      	LDD  R27,Y+20+1
00a9ed 961a      	ADIW R26,10
00a9ee 940e d37b 	CALL SUBOPT_0x378
00a9f0 940e c075 	CALL SUBOPT_0xAB
00a9f2 940e da89 	CALL __CPD02
00a9f4 f039      	BREQ _0x206005A
00a9f5 940e bf7f 	CALL SUBOPT_0x87
00a9f7 940e c075 	CALL SUBOPT_0xAB
00a9f9 940e da94 	CALL __CPD21
00a9fb f020      	BRLO _0x2060059
                 _0x206005A:
00a9fc 940e d376 	CALL SUBOPT_0x377
00a9fe 940e c070 	CALL SUBOPT_0xAA
                 _0x2060059:
00aa00 c01d      	RJMP _0x206005C
                 _0x2060058:
00aa01 940e d419 	CALL SUBOPT_0x38C
00aa03 940e d41e 	CALL SUBOPT_0x38D
00aa05 de65      	RCALL _get_fat
00aa06 940e c205 	CALL SUBOPT_0xED
00aa08 940e bc2e 	CALL SUBOPT_0xB
00aa0a 940e d36e 	CALL SUBOPT_0x376
00aa0c f418      	BRSH _0x206005D
00aa0d 940e d376 	CALL SUBOPT_0x377
00aa0f c083      	RJMP _0x20E0019
                 _0x206005D:
00aa10 940e bf7f 	CALL SUBOPT_0x87
00aa12 940e bc2e 	CALL SUBOPT_0xB
00aa14 940e da94 	CALL __CPD21
00aa16 f418      	BRSH _0x206005E
00aa17 940e c194 	CALL SUBOPT_0xDC
00aa19 c079      	RJMP _0x20E0019
                 _0x206005E:
00aa1a 940e bc33 	CALL SUBOPT_0xC
00aa1c 940e c070 	CALL SUBOPT_0xAA
                 _0x206005C:
00aa1e 940e bf8b 	CALL SUBOPT_0x89
00aa20 940e d20a 	CALL SUBOPT_0x33D
                 _0x2060060:
00aa22 940e be05 	CALL SUBOPT_0x4F
00aa24 940e c0da 	CALL SUBOPT_0xBE
00aa26 940e d20a 	CALL SUBOPT_0x33D
00aa28 940e bf7f 	CALL SUBOPT_0x87
00aa2a 940e c18f 	CALL SUBOPT_0xDB
00aa2c 940e da94 	CALL __CPD21
00aa2e f050      	BRLO _0x2060062
00aa2f 940e d423 	CALL SUBOPT_0x38E
00aa31 940e d20a 	CALL SUBOPT_0x33D
00aa33 940e d428 	CALL SUBOPT_0x38F
00aa35 f418      	BRSH _0x2060063
00aa36 940e d42f 	CALL SUBOPT_0x390
00aa38 c05a      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
00aa39 940e d419 	CALL SUBOPT_0x38C
00aa3b 940e be1e 	CALL SUBOPT_0x52
00aa3d de2d      	RCALL _get_fat
00aa3e 940e c20f 	CALL SUBOPT_0xEF
00aa40 940e da7d 	CALL __CPD10
00aa42 f091      	BREQ _0x2060061
00aa43 940e be60 	CALL SUBOPT_0x5C
00aa45 f029      	BREQ _0x2060066
00aa46 940e bc2e 	CALL SUBOPT_0xB
00aa48 940e d406 	CALL SUBOPT_0x389
00aa4a f419      	BRNE _0x2060065
                 _0x2060066:
00aa4b 940e c194 	CALL SUBOPT_0xDC
00aa4d c045      	RJMP _0x20E0019
                 _0x2060065:
00aa4e 940e d428 	CALL SUBOPT_0x38F
00aa50 f419      	BRNE _0x2060068
00aa51 940e d42f 	CALL SUBOPT_0x390
00aa53 c03f      	RJMP _0x20E0019
                 _0x2060068:
00aa54 cfcd      	RJMP _0x2060060
                 _0x2060061:
00aa55 940e d419 	CALL SUBOPT_0x38C
00aa57 940e d182 	CALL SUBOPT_0x329
                +
00aa59 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
00aa5a efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
00aa5b ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
00aa5c e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
00aa5d de8a      	RCALL _put_fat
00aa5e 30e0      	CPI  R30,0
00aa5f f019      	BREQ _0x2060069
00aa60 940e bcd8 	CALL SUBOPT_0x24
00aa62 c030      	RJMP _0x20E0019
                 _0x2060069:
00aa63 940e bc33 	CALL SUBOPT_0xC
00aa65 940e da7d 	CALL __CPD10
00aa67 f071      	BREQ _0x206006A
00aa68 940e d419 	CALL SUBOPT_0x38C
00aa6a 940e c17b 	CALL SUBOPT_0xD6
00aa6c 940e da29 	CALL __PUTPARD1
00aa6e 940e d3bc 	CALL SUBOPT_0x380
00aa70 de77      	RCALL _put_fat
00aa71 30e0      	CPI  R30,0
00aa72 f019      	BREQ _0x206006B
00aa73 940e bcd8 	CALL SUBOPT_0x24
00aa75 c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
00aa76 940e be05 	CALL SUBOPT_0x4F
                +
00aa78 89ac     +LDD R26 , Y + 20
00aa79 89bd     +LDD R27 , Y + 20 + 1
00aa7a 961a     +ADIW R26 , 10
00aa7b 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 20,10
00aa7d 89ec      	LDD  R30,Y+20
00aa7e 89fd      	LDD  R31,Y+20+1
00aa7f 940e d40e 	CALL SUBOPT_0x38A
00aa81 f079      	BREQ _0x206006C
00aa82 89ac      	LDD  R26,Y+20
00aa83 89bd      	LDD  R27,Y+20+1
00aa84 961e      	ADIW R26,14
00aa85 940e d9fa 	CALL __GETD1P_INC
00aa87 9731      	SBIW R30,1
00aa88 4060      	SBCI R22,0
00aa89 4070      	SBCI R23,0
00aa8a 940e da04 	CALL __PUTDP1_DEC
00aa8c 89ac      	LDD  R26,Y+20
00aa8d 89bd      	LDD  R27,Y+20+1
00aa8e 9615      	ADIW R26,5
00aa8f e0e1      	LDI  R30,LOW(1)
00aa90 93ec      	ST   X,R30
                 _0x206006C:
00aa91 940e be05 	CALL SUBOPT_0x4F
                 _0x20E0019:
00aa93 9666      	ADIW R28,22
00aa94 9508      	RET
                 _clust2sect:
00aa95 940e da2e 	CALL __PUTPARD2
00aa97 940e bf7f 	CALL SUBOPT_0x87
                +
00aa99 50e2     +SUBI R30 , LOW ( 2 )
00aa9a 40f0     +SBCI R31 , HIGH ( 2 )
00aa9b 4060     +SBCI R22 , BYTE3 ( 2 )
00aa9c 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00aa9d 940e c18a 	CALL SUBOPT_0xD9
00aa9f 81ec      	LDD  R30,Y+4
00aaa0 81fd      	LDD  R31,Y+4+1
                +
00aaa1 8da6     +LDD R26 , Z + 30
00aaa2 8db7     +LDD R27 , Z + 30 + 1
00aaa3 a180     +LDD R24 , Z + 30 + 2
00aaa4 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
00aaa5 940e d423 	CALL SUBOPT_0x38E
00aaa7 940e c0f0 	CALL SUBOPT_0xC2
00aaa9 940e bf9e 	CALL SUBOPT_0x8C
00aaab 940e da94 	CALL __CPD21
00aaad f018      	BRLO _0x206006D
00aaae 940e d42f 	CALL SUBOPT_0x390
00aab0 c38f      	RJMP _0x20E0012
                 _0x206006D:
00aab1 81ec      	LDD  R30,Y+4
00aab2 81fd      	LDD  R31,Y+4+1
00aab3 940e cb61 	CALL SUBOPT_0x270
00aab5 940e bf9e 	CALL SUBOPT_0x8C
00aab7 940e cb69 	CALL SUBOPT_0x272
00aab9 937f      	PUSH R23
00aaba 936f      	PUSH R22
00aabb 93ff      	PUSH R31
00aabc 93ef      	PUSH R30
00aabd 81ac      	LDD  R26,Y+4
00aabe 81bd      	LDD  R27,Y+4+1
00aabf 969a      	ADIW R26,42
00aac0 940e d9f4 	CALL __GETD1P
00aac2 91af      	POP  R26
00aac3 91bf      	POP  R27
00aac4 918f      	POP  R24
00aac5 919f      	POP  R25
00aac6 940e d894 	CALL __ADDD12
00aac8 c377      	RJMP _0x20E0012
                 _dir_seek_G103:
00aac9 940e c21a 	CALL SUBOPT_0xF1
00aacb 930a      	ST   -Y,R16
00aacc 81ee      	LDD  R30,Y+6
00aacd 81ff      	LDD  R31,Y+6+1
                +
00aace 85a8     +LDD R26 , Y + 8
00aacf 85b9     +LDD R27 , Y + 8 + 1
00aad0 9614     +ADIW R26 , 4
00aad1 93ed     +ST X + , R30
00aad2 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00aad3 85a8      	LDD  R26,Y+8
00aad4 85b9      	LDD  R27,Y+8+1
00aad5 9616      	ADIW R26,6
00aad6 940e d9f4 	CALL __GETD1P
00aad8 940e c21f 	CALL SUBOPT_0xF2
00aada 940e d406 	CALL SUBOPT_0x389
00aadc f029      	BREQ _0x206006F
00aadd 940e d434 	CALL SUBOPT_0x391
00aadf 940e d439 	CALL SUBOPT_0x392
00aae1 f010      	BRLO _0x206006E
                 _0x206006F:
00aae2 e0e2      	LDI  R30,LOW(2)
00aae3 c072      	RJMP _0x20E0017
                 _0x206006E:
00aae4 940e c823 	CALL SUBOPT_0x1F4
00aae6 f429      	BRNE _0x2060072
00aae7 940e d434 	CALL SUBOPT_0x391
00aae9 81a0      	LD   R26,Z
00aaea 30a3      	CPI  R26,LOW(0x3)
00aaeb f009      	BREQ _0x2060073
                 _0x2060072:
00aaec c008      	RJMP _0x2060071
                 _0x2060073:
00aaed 940e d434 	CALL SUBOPT_0x391
00aaef 96b6      	ADIW R30,38
00aaf0 01df      	MOVW R26,R30
00aaf1 940e d9f4 	CALL __GETD1P
00aaf3 940e c0a4 	CALL SUBOPT_0xB4
                 _0x2060071:
00aaf5 940e c823 	CALL SUBOPT_0x1F4
00aaf7 f491      	BRNE _0x2060074
00aaf8 940e d442 	CALL SUBOPT_0x393
00aafa 940e d434 	CALL SUBOPT_0x391
00aafc 9638      	ADIW R30,8
00aafd 01df      	MOVW R26,R30
00aafe 940e c590 	CALL SUBOPT_0x184
00ab00 f010      	BRLO _0x2060075
00ab01 e0e2      	LDI  R30,LOW(2)
00ab02 c053      	RJMP _0x20E0017
                 _0x2060075:
00ab03 940e d434 	CALL SUBOPT_0x391
00ab05 96b6      	ADIW R30,38
00ab06 01df      	MOVW R26,R30
00ab07 940e d9f4 	CALL __GETD1P
00ab09 c031      	RJMP _0x206022C
                 _0x2060074:
00ab0a 940e d434 	CALL SUBOPT_0x391
00ab0c 81e2      	LDD  R30,Z+2
00ab0d e1a0      	LDI  R26,LOW(16)
00ab0e 9fea      	MUL  R30,R26
00ab0f 0180      	MOVW R16,R0
                 _0x2060077:
00ab10 81ae      	LDD  R26,Y+6
00ab11 81bf      	LDD  R27,Y+6+1
00ab12 17a0      	CP   R26,R16
00ab13 07b1      	CPC  R27,R17
00ab14 f0f8      	BRLO _0x2060079
00ab15 940e d44a 	CALL SUBOPT_0x394
00ab17 940e c075 	CALL SUBOPT_0xAB
00ab19 dd51      	RCALL _get_fat
00ab1a 940e c21f 	CALL SUBOPT_0xF2
00ab1c 940e bd70 	CALL SUBOPT_0x3A
00ab1e f411      	BRNE _0x206007A
00ab1f e0e1      	LDI  R30,LOW(1)
00ab20 c035      	RJMP _0x20E0017
                 _0x206007A:
00ab21 940e c0ae 	CALL SUBOPT_0xB6
00ab23 940e d36e 	CALL SUBOPT_0x376
00ab25 f028      	BRLO _0x206007C
00ab26 940e d434 	CALL SUBOPT_0x391
00ab28 940e d439 	CALL SUBOPT_0x392
00ab2a f010      	BRLO _0x206007B
                 _0x206007C:
00ab2b e0e2      	LDI  R30,LOW(2)
00ab2c c029      	RJMP _0x20E0017
                 _0x206007B:
00ab2d 81ee      	LDD  R30,Y+6
00ab2e 81ff      	LDD  R31,Y+6+1
00ab2f 1be0      	SUB  R30,R16
00ab30 0bf1      	SBC  R31,R17
00ab31 83ee      	STD  Y+6,R30
00ab32 83ff      	STD  Y+6+1,R31
00ab33 cfdc      	RJMP _0x2060077
                 _0x2060079:
00ab34 940e d442 	CALL SUBOPT_0x393
00ab36 940e d44a 	CALL SUBOPT_0x394
00ab38 940e c075 	CALL SUBOPT_0xAB
00ab3a df5a      	RCALL _clust2sect
                 _0x206022C:
00ab3b 01df      	MOVW R26,R30
00ab3c 01cb      	MOVW R24,R22
00ab3d 81ee      	LDD  R30,Y+6
00ab3e 81ff      	LDD  R31,Y+6+1
00ab3f 940e d8f1 	CALL __LSRW4
00ab41 940e d44d 	CALL SUBOPT_0x395
                +
00ab43 85a8     +LDD R26 , Y + 8
00ab44 85b9     +LDD R27 , Y + 8 + 1
00ab45 961e     +ADIW R26 , 14
00ab46 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 8,14
00ab48 940e d434 	CALL SUBOPT_0x391
00ab4a 96f2      	ADIW R30,50
00ab4b 01df      	MOVW R26,R30
00ab4c 81ee      	LDD  R30,Y+6
00ab4d 81ff      	LDD  R31,Y+6+1
00ab4e 940e d452 	CALL SUBOPT_0x396
                +
00ab50 85a8     +LDD R26 , Y + 8
00ab51 85b9     +LDD R27 , Y + 8 + 1
00ab52 9652     +ADIW R26 , 18
00ab53 93ed     +ST X + , R30
00ab54 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
00ab55 e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
00ab56 8119      	LDD  R17,Y+1
00ab57 8108      	LDD  R16,Y+0
                 _0x20E0018:
00ab58 962a      	ADIW R28,10
00ab59 9508      	RET
                 _dir_next_G103:
00ab5a 93aa      	ST   -Y,R26
00ab5b 9724      	SBIW R28,4
00ab5c 940e da9b 	CALL __SAVELOCR4
00ab5e 85a9      	LDD  R26,Y+9
00ab5f 85ba      	LDD  R27,Y+9+1
00ab60 9614      	ADIW R26,4
00ab61 940e d9f0 	CALL __GETW1P
00ab63 9631      	ADIW R30,1
00ab64 018f      	MOVW R16,R30
00ab65 2e00      	MOV  R0,R16
00ab66 2a01      	OR   R0,R17
00ab67 f031      	BREQ _0x206007F
00ab68 85a9      	LDD  R26,Y+9
00ab69 85ba      	LDD  R27,Y+9+1
00ab6a 961e      	ADIW R26,14
00ab6b 940e d45a 	CALL SUBOPT_0x397
00ab6d f411      	BRNE _0x206007E
                 _0x206007F:
00ab6e e0e4      	LDI  R30,LOW(4)
00ab6f c0d9      	RJMP _0x20E0015
                 _0x206007E:
00ab70 01f8      	MOVW R30,R16
00ab71 70ef      	ANDI R30,LOW(0xF)
00ab72 f011      	BREQ PC+3
00ab73 940c ac36 	JMP _0x2060081
00ab75 85a9      	LDD  R26,Y+9
00ab76 85ba      	LDD  R27,Y+9+1
00ab77 961e      	ADIW R26,14
00ab78 940e bfd2 	CALL SUBOPT_0x93
00ab7a 85a9      	LDD  R26,Y+9
00ab7b 85ba      	LDD  R27,Y+9+1
00ab7c 961a      	ADIW R26,10
00ab7d 940e d45a 	CALL SUBOPT_0x397
00ab7f f451      	BRNE _0x2060082
00ab80 940e d45f 	CALL SUBOPT_0x398
00ab82 9638      	ADIW R30,8
00ab83 01df      	MOVW R26,R30
00ab84 940e c772 	CALL SUBOPT_0x1D3
00ab86 f010      	BRLO _0x2060083
00ab87 e0e4      	LDI  R30,LOW(4)
00ab88 c0c0      	RJMP _0x20E0015
                 _0x2060083:
00ab89 c0ac      	RJMP _0x2060084
                 _0x2060082:
00ab8a 01f8      	MOVW R30,R16
00ab8b 940e d8f1 	CALL __LSRW4
00ab8d 010f      	MOVW R0,R30
00ab8e 940e d45f 	CALL SUBOPT_0x398
00ab90 940e cb61 	CALL SUBOPT_0x270
00ab92 9731      	SBIW R30,1
00ab93 21e0      	AND  R30,R0
00ab94 21f1      	AND  R31,R1
00ab95 9730      	SBIW R30,0
00ab96 f011      	BREQ PC+3
00ab97 940c ac36 	JMP _0x2060085
00ab99 940e d464 	CALL SUBOPT_0x399
00ab9b 940e d467 	CALL SUBOPT_0x39A
00ab9d dccd      	RCALL _get_fat
00ab9e 940e c070 	CALL SUBOPT_0xAA
00aba0 940e c075 	CALL SUBOPT_0xAB
00aba2 940e d36e 	CALL SUBOPT_0x376
00aba4 f410      	BRSH _0x2060086
00aba5 e0e2      	LDI  R30,LOW(2)
00aba6 c0a2      	RJMP _0x20E0015
                 _0x2060086:
00aba7 940e c075 	CALL SUBOPT_0xAB
00aba9 940e bd70 	CALL SUBOPT_0x3A
00abab f411      	BRNE _0x2060087
00abac e0e1      	LDI  R30,LOW(1)
00abad c09b      	RJMP _0x20E0015
                 _0x2060087:
00abae 940e d45f 	CALL SUBOPT_0x398
00abb0 940e d46e 	CALL SUBOPT_0x39B
00abb2 940e c075 	CALL SUBOPT_0xAB
00abb4 940e da94 	CALL __CPD21
00abb6 f410      	BRSH PC+3
00abb7 940c ac25 	JMP _0x2060088
00abb9 85e8      	LDD  R30,Y+8
00abba 30e0      	CPI  R30,0
00abbb f411      	BRNE _0x2060089
00abbc e0e4      	LDI  R30,LOW(4)
00abbd c08b      	RJMP _0x20E0015
                 _0x2060089:
00abbe 940e d464 	CALL SUBOPT_0x399
00abc0 940e d467 	CALL SUBOPT_0x39A
00abc2 de19      	RCALL _create_chain_G103
00abc3 940e c08f 	CALL SUBOPT_0xB0
00abc5 940e da7d 	CALL __CPD10
00abc7 f411      	BRNE _0x206008A
00abc8 e0e7      	LDI  R30,LOW(7)
00abc9 c07f      	RJMP _0x20E0015
                 _0x206008A:
00abca 940e c075 	CALL SUBOPT_0xAB
00abcc 940e d406 	CALL SUBOPT_0x389
00abce f411      	BRNE _0x206008B
00abcf e0e2      	LDI  R30,LOW(2)
00abd0 c078      	RJMP _0x20E0015
                 _0x206008B:
00abd1 940e c075 	CALL SUBOPT_0xAB
00abd3 940e bd70 	CALL SUBOPT_0x3A
00abd5 f411      	BRNE _0x206008C
00abd6 e0e1      	LDI  R30,LOW(1)
00abd7 c071      	RJMP _0x20E0015
                 _0x206008C:
00abd8 940e d464 	CALL SUBOPT_0x399
00abda 940e d34f 	CALL SUBOPT_0x372
00abdc 30e0      	CPI  R30,0
00abdd f011      	BREQ _0x206008D
00abde e0e1      	LDI  R30,LOW(1)
00abdf c069      	RJMP _0x20E0015
                 _0x206008D:
00abe0 940e d45f 	CALL SUBOPT_0x398
00abe2 940e d353 	CALL SUBOPT_0x373
00abe4 940e d45f 	CALL SUBOPT_0x398
00abe6 01df      	MOVW R26,R30
00abe7 96be      	ADIW R30,46
00abe8 93ff      	PUSH R31
00abe9 93ef      	PUSH R30
00abea 01fd      	MOVW R30,R26
00abeb 93fa      	ST   -Y,R31
00abec 93ea      	ST   -Y,R30
00abed 940e be50 	CALL SUBOPT_0x59
00abef dea5      	RCALL _clust2sect
00abf0 91af      	POP  R26
00abf1 91bf      	POP  R27
00abf2 940e d9ff 	CALL __PUTDP1
00abf4 e030      	LDI  R19,LOW(0)
                 _0x206008F:
00abf5 940e d45f 	CALL SUBOPT_0x398
00abf7 81e2      	LDD  R30,Z+2
00abf8 173e      	CP   R19,R30
00abf9 f4c0      	BRSH _0x2060090
00abfa 940e d45f 	CALL SUBOPT_0x398
00abfc 9634      	ADIW R30,4
00abfd e0a1      	LDI  R26,LOW(1)
00abfe 83a0      	STD  Z+0,R26
00abff 940e d464 	CALL SUBOPT_0x399
00ac01 940e d34f 	CALL SUBOPT_0x372
00ac03 30e0      	CPI  R30,0
00ac04 f011      	BREQ _0x2060091
00ac05 e0e1      	LDI  R30,LOW(1)
00ac06 c042      	RJMP _0x20E0015
                 _0x2060091:
00ac07 940e d45f 	CALL SUBOPT_0x398
00ac09 96be      	ADIW R30,46
00ac0a 01df      	MOVW R26,R30
00ac0b 940e bfd2 	CALL SUBOPT_0x93
00ac0d 9731      	SBIW R30,1
00ac0e 4060      	SBCI R22,0
00ac0f 4070      	SBCI R23,0
00ac10 5f3f      	SUBI R19,-1
00ac11 cfe3      	RJMP _0x206008F
                 _0x2060090:
00ac12 940e d45f 	CALL SUBOPT_0x398
00ac14 96be      	ADIW R30,46
00ac15 93ff      	PUSH R31
00ac16 93ef      	PUSH R30
00ac17 01df      	MOVW R26,R30
00ac18 940e d9f4 	CALL __GETD1P
00ac1a 01df      	MOVW R26,R30
00ac1b 01cb      	MOVW R24,R22
00ac1c 2fe3      	MOV  R30,R19
00ac1d 940e d317 	CALL SUBOPT_0x36B
00ac1f 940e c0f0 	CALL SUBOPT_0xC2
00ac21 91af      	POP  R26
00ac22 91bf      	POP  R27
00ac23 940e d9ff 	CALL __PUTDP1
                 _0x2060088:
00ac25 940e bf8b 	CALL SUBOPT_0x89
                +
00ac27 85a9     +LDD R26 , Y + 9
00ac28 85ba     +LDD R27 , Y + 9 + 1
00ac29 961a     +ADIW R26 , 10
00ac2a 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00ac2c 940e d464 	CALL SUBOPT_0x399
00ac2e 940e be50 	CALL SUBOPT_0x59
00ac30 de64      	RCALL _clust2sect
                +
00ac31 85a9     +LDD R26 , Y + 9
00ac32 85ba     +LDD R27 , Y + 9 + 1
00ac33 961e     +ADIW R26 , 14
00ac34 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
00ac36 01f8      	MOVW R30,R16
                +
00ac37 85a9     +LDD R26 , Y + 9
00ac38 85ba     +LDD R27 , Y + 9 + 1
00ac39 9614     +ADIW R26 , 4
00ac3a 93ed     +ST X + , R30
00ac3b 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00ac3c 940e d45f 	CALL SUBOPT_0x398
00ac3e 96f2      	ADIW R30,50
00ac3f 01df      	MOVW R26,R30
00ac40 01f8      	MOVW R30,R16
00ac41 940e d452 	CALL SUBOPT_0x396
                +
00ac43 85a9     +LDD R26 , Y + 9
00ac44 85ba     +LDD R27 , Y + 9 + 1
00ac45 9652     +ADIW R26 , 18
00ac46 93ed     +ST X + , R30
00ac47 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
00ac48 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
00ac49 940e daa2 	CALL __LOADLOCR4
                 _0x20E0016:
00ac4b 962b      	ADIW R28,11
00ac4c 9508      	RET
                 _dir_find_G103:
00ac4d 940e bf4d 	CALL SUBOPT_0x7F
00ac4f 940e cc24 	CALL SUBOPT_0x28D
00ac51 940e c235 	CALL SUBOPT_0xF7
00ac53 de75      	RCALL _dir_seek_G103
00ac54 2f1e      	MOV  R17,R30
00ac55 3010      	CPI  R17,0
00ac56 f021      	BREQ _0x2060092
00ac57 2fe1      	MOV  R30,R17
00ac58 940e daa2 	CALL __LOADLOCR4
00ac5a c1e5      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
00ac5b 940e d473 	CALL SUBOPT_0x39C
00ac5d 940e d476 	CALL SUBOPT_0x39D
00ac5f f4e9      	BRNE _0x2060095
00ac60 81ac      	LDD  R26,Y+4
00ac61 81bd      	LDD  R27,Y+4+1
00ac62 9652      	ADIW R26,18
00ac63 912d      	LD   R18,X+
00ac64 913c      	LD   R19,X
00ac65 01d9      	MOVW R26,R18
00ac66 910c      	LD   R16,X
00ac67 3000      	CPI  R16,0
00ac68 f411      	BRNE _0x2060097
00ac69 e014      	LDI  R17,LOW(4)
00ac6a c012      	RJMP _0x2060095
                 _0x2060097:
00ac6b 01f9      	MOVW R30,R18
00ac6c 85e3      	LDD  R30,Z+11
00ac6d 70e8      	ANDI R30,LOW(0x8)
00ac6e f429      	BRNE _0x2060099
00ac6f 940e d481 	CALL SUBOPT_0x39E
00ac71 dada      	RCALL _mem_cmp_G103
00ac72 9730      	SBIW R30,0
00ac73 f009      	BREQ _0x206009A
                 _0x2060099:
00ac74 c001      	RJMP _0x2060098
                 _0x206009A:
00ac75 c007      	RJMP _0x2060095
                 _0x2060098:
00ac76 940e cc24 	CALL SUBOPT_0x28D
00ac78 e0a0      	LDI  R26,LOW(0)
00ac79 dee0      	RCALL _dir_next_G103
00ac7a 2f1e      	MOV  R17,R30
00ac7b 3010      	CPI  R17,0
00ac7c f2f1      	BREQ _0x2060094
                 _0x2060095:
00ac7d 2fe1      	MOV  R30,R17
00ac7e 940e daa2 	CALL __LOADLOCR4
00ac80 c1bf      	RJMP _0x20E0012
                 _dir_register_G103:
00ac81 940e bf4d 	CALL SUBOPT_0x7F
00ac83 940e cc24 	CALL SUBOPT_0x28D
00ac85 940e c235 	CALL SUBOPT_0xF7
00ac87 de41      	RCALL _dir_seek_G103
00ac88 2f1e      	MOV  R17,R30
00ac89 3010      	CPI  R17,0
00ac8a f4b1      	BRNE _0x20600A7
                 _0x20600A9:
00ac8b 940e d473 	CALL SUBOPT_0x39C
00ac8d 940e d476 	CALL SUBOPT_0x39D
00ac8f f489      	BRNE _0x20600AA
00ac90 81ec      	LDD  R30,Y+4
00ac91 81fd      	LDD  R31,Y+4+1
00ac92 89a2      	LDD  R26,Z+18
00ac93 89b3      	LDD  R27,Z+19
00ac94 910c      	LD   R16,X
00ac95 3e05      	CPI  R16,229
00ac96 f011      	BREQ _0x20600AD
00ac97 3000      	CPI  R16,0
00ac98 f409      	BRNE _0x20600AC
                 _0x20600AD:
00ac99 c007      	RJMP _0x20600AA
                 _0x20600AC:
00ac9a 940e cc24 	CALL SUBOPT_0x28D
00ac9c e0a1      	LDI  R26,LOW(1)
00ac9d debc      	RCALL _dir_next_G103
00ac9e 2f1e      	MOV  R17,R30
00ac9f 3010      	CPI  R17,0
00aca0 f351      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
00aca1 3010      	CPI  R17,0
00aca2 f539      	BRNE _0x20600AF
00aca3 940e d473 	CALL SUBOPT_0x39C
00aca5 940e d476 	CALL SUBOPT_0x39D
00aca7 f511      	BRNE _0x20600B0
00aca8 81ac      	LDD  R26,Y+4
00aca9 81bd      	LDD  R27,Y+4+1
00acaa 9652      	ADIW R26,18
00acab 912d      	LD   R18,X+
00acac 913c      	LD   R19,X
00acad 933a      	ST   -Y,R19
00acae 932a      	ST   -Y,R18
00acaf e0e0      	LDI  R30,LOW(0)
00acb0 e0f0      	LDI  R31,HIGH(0)
00acb1 93fa      	ST   -Y,R31
00acb2 93ea      	ST   -Y,R30
00acb3 e2a0      	LDI  R26,LOW(32)
00acb4 e0b0      	LDI  R27,0
00acb5 da7e      	RCALL _mem_set_G103
00acb6 940e d481 	CALL SUBOPT_0x39E
00acb8 da5f      	RCALL _mem_cpy_G103
00acb9 81ac      	LDD  R26,Y+4
00acba 81bd      	LDD  R27,Y+4+1
00acbb 9654      	ADIW R26,20
00acbc 940e d9f0 	CALL __GETW1P
00acbe 85e3      	LDD  R30,Z+11
00acbf 71e8      	ANDI R30,LOW(0x18)
                +
00acc0 01d9     +MOVW R26 , R18
00acc1 961c     +ADIW R26 , 12
00acc2 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
00acc3 81ac      	LDD  R26,Y+4
00acc4 81bd      	LDD  R27,Y+4+1
00acc5 940e d9f0 	CALL __GETW1P
00acc7 9634      	ADIW R30,4
00acc8 e0a1      	LDI  R26,LOW(1)
00acc9 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00acca 2fe1      	MOV  R30,R17
00accb 940e daa2 	CALL __LOADLOCR4
00accd c172      	RJMP _0x20E0012
                 _create_name_G103:
00acce 93ba      	ST   -Y,R27
00accf 93aa      	ST   -Y,R26
00acd0 9725      	SBIW R28,5
00acd1 940e da99 	CALL __SAVELOCR6
00acd3 85ad      	LDD  R26,Y+13
00acd4 85be      	LDD  R27,Y+13+1
00acd5 9654      	ADIW R26,20
00acd6 914d      	LD   R20,X+
00acd7 915c      	LD   R21,X
00acd8 935a      	ST   -Y,R21
00acd9 934a      	ST   -Y,R20
00acda e2e0      	LDI  R30,LOW(32)
00acdb e0f0      	LDI  R31,HIGH(32)
00acdc 93fa      	ST   -Y,R31
00acdd 93ea      	ST   -Y,R30
00acde 940e bddb 	CALL SUBOPT_0x48
00ace0 da53      	RCALL _mem_set_G103
00ace1 e0e0      	LDI  R30,LOW(0)
00ace2 87e8      	STD  Y+8,R30
00ace3 87e9      	STD  Y+8+1,R30
00ace4 2f1e      	MOV  R17,R30
00ace5 2f2e      	MOV  R18,R30
00ace6 e0e8      	LDI  R30,LOW(8)
00ace7 87ea      	STD  Y+10,R30
00ace8 85ab      	LDD  R26,Y+11
00ace9 85bc      	LDD  R27,Y+11+1
00acea 940e d312 	CALL SUBOPT_0x36A
00acec 85e8      	LDD  R30,Y+8
00aced 85f9      	LDD  R31,Y+8+1
00acee 940e c8f3 	CALL SUBOPT_0x211
00acf0 91ac      	LD   R26,X
00acf1 32ae      	CPI  R26,LOW(0x2E)
00acf2 f549      	BRNE _0x20600B3
                 _0x20600B5:
00acf3 940e bf52 	CALL SUBOPT_0x80
00acf5 940e c8f3 	CALL SUBOPT_0x211
00acf7 910c      	LD   R16,X
00acf8 320e      	CPI  R16,46
00acf9 f421      	BRNE _0x20600B8
00acfa 85a8      	LDD  R26,Y+8
00acfb 85b9      	LDD  R27,Y+8+1
00acfc 9713      	SBIW R26,3
00acfd f00c      	BRLT _0x20600B7
                 _0x20600B8:
00acfe c003      	RJMP _0x20600B6
                 _0x20600B7:
00acff 940e d48b 	CALL SUBOPT_0x39F
00ad01 cff1      	RJMP _0x20600B5
                 _0x20600B6:
00ad02 320f      	CPI  R16,47
00ad03 f021      	BREQ _0x20600BB
00ad04 350c      	CPI  R16,92
00ad05 f011      	BREQ _0x20600BB
00ad06 3201      	CPI  R16,33
00ad07 f408      	BRSH _0x20600BC
                 _0x20600BB:
00ad08 c002      	RJMP _0x20600BA
                 _0x20600BC:
00ad09 e0e6      	LDI  R30,LOW(6)
00ad0a c07d      	RJMP _0x20E0013
                 _0x20600BA:
00ad0b 85e8      	LDD  R30,Y+8
00ad0c 85f9      	LDD  R31,Y+8+1
00ad0d 940e c64f 	CALL SUBOPT_0x1A7
00ad0f 85ab      	LDD  R26,Y+11
00ad10 85bc      	LDD  R27,Y+11+1
00ad11 93ed      	ST   X+,R30
00ad12 93fc      	ST   X,R31
00ad13 3201      	CPI  R16,33
00ad14 f410      	BRSH _0x20600BD
00ad15 e2e4      	LDI  R30,LOW(36)
00ad16 c001      	RJMP _0x20600BE
                 _0x20600BD:
00ad17 e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00ad18 01da     +MOVW R26 , R20
00ad19 961b     +ADIW R26 , 11
00ad1a 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00ad1b c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
00ad1c 940e bf52 	CALL SUBOPT_0x80
00ad1e 940e c8f3 	CALL SUBOPT_0x211
00ad20 910c      	LD   R16,X
00ad21 3201      	CPI  R16,33
00ad22 f020      	BRLO _0x20600C4
00ad23 320f      	CPI  R16,47
00ad24 f011      	BREQ _0x20600C4
00ad25 350c      	CPI  R16,92
00ad26 f409      	BRNE _0x20600C3
                 _0x20600C4:
00ad27 c035      	RJMP _0x20600C2
                 _0x20600C3:
00ad28 320e      	CPI  R16,46
00ad29 f019      	BREQ _0x20600C7
00ad2a 85ea      	LDD  R30,Y+10
00ad2b 172e      	CP   R18,R30
00ad2c f068      	BRLO _0x20600C6
                 _0x20600C7:
00ad2d 85aa      	LDD  R26,Y+10
00ad2e 30a8      	CPI  R26,LOW(0x8)
00ad2f f411      	BRNE _0x20600CA
00ad30 320e      	CPI  R16,46
00ad31 f011      	BREQ _0x20600C9
                 _0x20600CA:
00ad32 e0e6      	LDI  R30,LOW(6)
00ad33 c054      	RJMP _0x20E0013
                 _0x20600C9:
00ad34 e028      	LDI  R18,LOW(8)
00ad35 e0eb      	LDI  R30,LOW(11)
00ad36 87ea      	STD  Y+10,R30
00ad37 0f11      	LSL  R17
00ad38 0f11      	LSL  R17
00ad39 c022      	RJMP _0x20600C0
                 _0x20600C6:
00ad3a 3800      	CPI  R16,128
00ad3b f018      	BRLO _0x20600CC
00ad3c 6013      	ORI  R17,LOW(3)
00ad3d e0e6      	LDI  R30,LOW(6)
00ad3e c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
00ad3f efe2     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
00ad40 e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
00ad41 e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
00ad42 e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
00ad43 940e da29 	CALL __PUTPARD1
00ad45 2fa0      	MOV  R26,R16
00ad46 27bb      	CLR  R27
00ad47 da2a      	RCALL _chk_chrf_G103
00ad48 9730      	SBIW R30,0
00ad49 f011      	BREQ _0x20600D2
00ad4a e0e6      	LDI  R30,LOW(6)
00ad4b c03c      	RJMP _0x20E0013
                 _0x20600D2:
00ad4c 3401      	CPI  R16,65
00ad4d f010      	BRLO _0x20600D4
00ad4e 350b      	CPI  R16,91
00ad4f f008      	BRLO _0x20600D5
                 _0x20600D4:
00ad50 c002      	RJMP _0x20600D3
                 _0x20600D5:
00ad51 6012      	ORI  R17,LOW(2)
00ad52 c007      	RJMP _0x20600D6
                 _0x20600D3:
00ad53 3601      	CPI  R16,97
00ad54 f010      	BRLO _0x20600D8
00ad55 370b      	CPI  R16,123
00ad56 f008      	BRLO _0x20600D9
                 _0x20600D8:
00ad57 c002      	RJMP _0x20600D7
                 _0x20600D9:
00ad58 6011      	ORI  R17,LOW(1)
00ad59 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
00ad5a 940e d48b 	CALL SUBOPT_0x39F
                 _0x20600C0:
00ad5c cfbf      	RJMP _0x20600C1
                 _0x20600C2:
00ad5d 85e8      	LDD  R30,Y+8
00ad5e 85f9      	LDD  R31,Y+8+1
00ad5f 940e c64f 	CALL SUBOPT_0x1A7
00ad61 85ab      	LDD  R26,Y+11
00ad62 85bc      	LDD  R27,Y+11+1
00ad63 93ed      	ST   X+,R30
00ad64 93fc      	ST   X,R31
00ad65 3201      	CPI  R16,33
00ad66 f410      	BRSH _0x20600DA
00ad67 e0e4      	LDI  R30,LOW(4)
00ad68 c001      	RJMP _0x20600DB
                 _0x20600DA:
00ad69 e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
00ad6a 2f0e      	MOV  R16,R30
00ad6b 3020      	CPI  R18,0
00ad6c f411      	BRNE _0x20600DD
00ad6d e0e6      	LDI  R30,LOW(6)
00ad6e c019      	RJMP _0x20E0013
                 _0x20600DD:
00ad6f 01da      	MOVW R26,R20
00ad70 91ac      	LD   R26,X
00ad71 3ea5      	CPI  R26,LOW(0xE5)
00ad72 f419      	BRNE _0x20600DE
00ad73 01da      	MOVW R26,R20
00ad74 e0e5      	LDI  R30,LOW(5)
00ad75 93ec      	ST   X,R30
                 _0x20600DE:
00ad76 85aa      	LDD  R26,Y+10
00ad77 30a8      	CPI  R26,LOW(0x8)
00ad78 f411      	BRNE _0x20600DF
00ad79 0f11      	LSL  R17
00ad7a 0f11      	LSL  R17
                 _0x20600DF:
00ad7b 2fe1      	MOV  R30,R17
00ad7c 70e3      	ANDI R30,LOW(0x3)
00ad7d 30e1      	CPI  R30,LOW(0x1)
00ad7e f409      	BRNE _0x20600E0
00ad7f 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
00ad80 2fe1      	MOV  R30,R17
00ad81 70ec      	ANDI R30,LOW(0xC)
00ad82 30e4      	CPI  R30,LOW(0x4)
00ad83 f409      	BRNE _0x20600E1
00ad84 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
00ad85 01fa      	MOVW R30,R20
                +
00ad86 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
00ad87 e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
00ad88 940e daa0 	CALL __LOADLOCR6
00ad8a 962f      	ADIW R28,15
00ad8b 9508      	RET
                 _follow_path_G103:
00ad8c 940e bf4d 	CALL SUBOPT_0x7F
                 _0x20600F7:
00ad8e e0e1      	LDI  R30,LOW(1)
00ad8f 30e0      	CPI  R30,0
00ad90 f029      	BREQ _0x20600FA
00ad91 81ac      	LDD  R26,Y+4
00ad92 81bd      	LDD  R27,Y+4+1
00ad93 91ac      	LD   R26,X
00ad94 32a0      	CPI  R26,LOW(0x20)
00ad95 f009      	BREQ _0x20600FB
                 _0x20600FA:
00ad96 c006      	RJMP _0x20600F9
                 _0x20600FB:
00ad97 81ec      	LDD  R30,Y+4
00ad98 81fd      	LDD  R31,Y+4+1
00ad99 9631      	ADIW R30,1
00ad9a 83ec      	STD  Y+4,R30
00ad9b 83fd      	STD  Y+4+1,R31
00ad9c cff1      	RJMP _0x20600F7
                 _0x20600F9:
00ad9d 81ac      	LDD  R26,Y+4
00ad9e 81bd      	LDD  R27,Y+4+1
00ad9f 91ac      	LD   R26,X
00ada0 32af      	CPI  R26,LOW(0x2F)
00ada1 f029      	BREQ _0x20600FD
00ada2 81ac      	LDD  R26,Y+4
00ada3 81bd      	LDD  R27,Y+4+1
00ada4 91ac      	LD   R26,X
00ada5 35ac      	CPI  R26,LOW(0x5C)
00ada6 f459      	BRNE _0x20600FC
                 _0x20600FD:
00ada7 81ec      	LDD  R30,Y+4
00ada8 81fd      	LDD  R31,Y+4+1
00ada9 9631      	ADIW R30,1
00adaa 83ec      	STD  Y+4,R30
00adab 83fd      	STD  Y+4+1,R31
00adac 81ae      	LDD  R26,Y+6
00adad 81bf      	LDD  R27,Y+6+1
00adae 9616      	ADIW R26,6
00adaf 940e bfab 	CALL SUBOPT_0x8F
00adb1 c00a      	RJMP _0x20600FF
                 _0x20600FC:
00adb2 81ae      	LDD  R26,Y+6
00adb3 81bf      	LDD  R27,Y+6+1
00adb4 940e d9f0 	CALL __GETW1P
00adb6 9676      	ADIW R30,22
00adb7 01df      	MOVW R26,R30
00adb8 940e d9f4 	CALL __GETD1P
00adba 940e d492 	CALL SUBOPT_0x3A0
                 _0x20600FF:
00adbc 81ac      	LDD  R26,Y+4
00adbd 81bd      	LDD  R27,Y+4+1
00adbe 91ac      	LD   R26,X
00adbf 27bb      	CLR  R27
00adc0 9790      	SBIW R26,32
00adc1 f460      	BRSH _0x2060100
00adc2 940e c493 	CALL SUBOPT_0x15D
00adc4 940e c235 	CALL SUBOPT_0xF7
00adc6 dd02      	RCALL _dir_seek_G103
00adc7 2f1e      	MOV  R17,R30
00adc8 81ae      	LDD  R26,Y+6
00adc9 81bf      	LDD  R27,Y+6+1
00adca 9652      	ADIW R26,18
00adcb 940e c2e2 	CALL SUBOPT_0x115
00adcd c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
00adce 940e c493 	CALL SUBOPT_0x15D
00add0 01de      	MOVW R26,R28
00add1 9616      	ADIW R26,6
00add2 defb      	RCALL _create_name_G103
00add3 2f1e      	MOV  R17,R30
00add4 3010      	CPI  R17,0
00add5 f5a9      	BRNE _0x2060104
00add6 81ae      	LDD  R26,Y+6
00add7 81bf      	LDD  R27,Y+6+1
00add8 de74      	RCALL _dir_find_G103
00add9 2f1e      	MOV  R17,R30
00adda 81ae      	LDD  R26,Y+6
00addb 81bf      	LDD  R27,Y+6+1
00addc 9654      	ADIW R26,20
00addd 940e d9f0 	CALL __GETW1P
00addf 85e3      	LDD  R30,Z+11
00ade0 70e4      	ANDI R30,LOW(0x4)
00ade1 2f0e      	MOV  R16,R30
00ade2 3010      	CPI  R17,0
00ade3 f039      	BREQ _0x2060106
00ade4 3014      	CPI  R17,4
00ade5 f411      	BRNE _0x2060108
00ade6 3000      	CPI  R16,0
00ade7 f009      	BREQ _0x2060109
                 _0x2060108:
00ade8 c001      	RJMP _0x2060107
                 _0x2060109:
00ade9 e015      	LDI  R17,LOW(5)
                 _0x2060107:
00adea c020      	RJMP _0x2060104
                 _0x2060106:
00adeb 3000      	CPI  R16,0
00adec f4f1      	BRNE _0x2060104
00aded 81ae      	LDD  R26,Y+6
00adee 81bf      	LDD  R27,Y+6+1
00adef 9652      	ADIW R26,18
00adf0 912d      	LD   R18,X+
00adf1 913c      	LD   R19,X
00adf2 01f9      	MOVW R30,R18
00adf3 85e3      	LDD  R30,Z+11
00adf4 71e0      	ANDI R30,LOW(0x10)
00adf5 f411      	BRNE _0x206010B
00adf6 e015      	LDI  R17,LOW(5)
00adf7 c013      	RJMP _0x2060104
                 _0x206010B:
00adf8 940e d498 	CALL SUBOPT_0x3A1
00adfa 940e d90e 	CALL __LSLD16
00adfc 937f      	PUSH R23
00adfd 936f      	PUSH R22
00adfe 93ff      	PUSH R31
00adff 93ef      	PUSH R30
00ae00 940e d49c 	CALL SUBOPT_0x3A2
00ae02 91af      	POP  R26
00ae03 91bf      	POP  R27
00ae04 918f      	POP  R24
00ae05 919f      	POP  R25
00ae06 940e d4a1 	CALL SUBOPT_0x3A3
00ae08 940e d492 	CALL SUBOPT_0x3A0
00ae0a cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00ae0b 2fe1      	MOV  R30,R17
00ae0c 940e daa2 	CALL __LOADLOCR4
00ae0e 9628      	ADIW R28,8
00ae0f 9508      	RET
                 _check_fs_G103:
00ae10 940e da2e 	CALL __PUTPARD2
00ae12 81ec      	LDD  R30,Y+4
00ae13 81fd      	LDD  R31,Y+4+1
00ae14 81a1      	LDD  R26,Z+1
00ae15 93aa      	ST   -Y,R26
00ae16 81ed      	LDD  R30,Y+5
00ae17 81fe      	LDD  R31,Y+5+1
00ae18 96f2      	ADIW R30,50
00ae19 93fa      	ST   -Y,R31
00ae1a 93ea      	ST   -Y,R30
                +
00ae1b 81eb     +LDD R30 , Y + 3
00ae1c 81fc     +LDD R31 , Y + 3 + 1
00ae1d 816d     +LDD R22 , Y + 3 + 2
00ae1e 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00ae1f 940e d4a6 	CALL SUBOPT_0x3A4
00ae21 f011      	BREQ _0x206010C
00ae22 e0e3      	LDI  R30,LOW(3)
00ae23 c01c      	RJMP _0x20E0012
                 _0x206010C:
00ae24 81ec      	LDD  R30,Y+4
00ae25 81fd      	LDD  R31,Y+4+1
00ae26 940e d4ad 	CALL SUBOPT_0x3A5
00ae28 f011      	BREQ _0x206010D
00ae29 e0e2      	LDI  R30,LOW(2)
00ae2a c015      	RJMP _0x20E0012
                 _0x206010D:
00ae2b 81ac      	LDD  R26,Y+4
00ae2c 81bd      	LDD  R27,Y+4+1
00ae2d 59a8      	SUBI R26,LOW(-104)
00ae2e 4fbf      	SBCI R27,HIGH(-104)
00ae2f 940e d4b7 	CALL SUBOPT_0x3A6
00ae31 f411      	BRNE _0x206010E
00ae32 e0e0      	LDI  R30,LOW(0)
00ae33 c00c      	RJMP _0x20E0012
                 _0x206010E:
00ae34 81ec      	LDD  R30,Y+4
00ae35 81fd      	LDD  R31,Y+4+1
00ae36 96f2      	ADIW R30,50
00ae37 5aee      	SUBI R30,LOW(-82)
00ae38 4fff      	SBCI R31,HIGH(-82)
00ae39 01df      	MOVW R26,R30
00ae3a 940e d4b7 	CALL SUBOPT_0x3A6
00ae3c f411      	BRNE _0x206010F
00ae3d e0e0      	LDI  R30,LOW(0)
00ae3e c001      	RJMP _0x20E0012
                 _0x206010F:
00ae3f e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
00ae40 9626      	ADIW R28,6
00ae41 9508      	RET
                 _chk_mounted:
00ae42 93aa      	ST   -Y,R26
00ae43 9764      	SBIW R28,20
00ae44 940e da99 	CALL __SAVELOCR6
00ae46 8dad      	LDD  R26,Y+29
00ae47 8dbe      	LDD  R27,Y+29+1
00ae48 940e d9f0 	CALL __GETW1P
00ae4a 87e8      	STD  Y+8,R30
00ae4b 87f9      	STD  Y+8+1,R31
00ae4c 85a8      	LDD  R26,Y+8
00ae4d 85b9      	LDD  R27,Y+8+1
00ae4e 91ec      	LD   R30,X
00ae4f 53e0      	SUBI R30,LOW(48)
00ae50 2f0e      	MOV  R16,R30
00ae51 300a      	CPI  R16,10
00ae52 f420      	BRSH _0x2060111
00ae53 9611      	ADIW R26,1
00ae54 91ac      	LD   R26,X
00ae55 33aa      	CPI  R26,LOW(0x3A)
00ae56 f009      	BREQ _0x2060112
                 _0x2060111:
00ae57 c00a      	RJMP _0x2060110
                 _0x2060112:
00ae58 85e8      	LDD  R30,Y+8
00ae59 85f9      	LDD  R31,Y+8+1
00ae5a 9632      	ADIW R30,2
00ae5b 940e c5eb 	CALL SUBOPT_0x194
00ae5d 8dad      	LDD  R26,Y+29
00ae5e 8dbe      	LDD  R27,Y+29+1
00ae5f 93ed      	ST   X+,R30
00ae60 93fc      	ST   X,R31
00ae61 c002      	RJMP _0x2060113
                 _0x2060110:
00ae62 9100 1ab0 	LDS  R16,_Drive_G103
                 _0x2060113:
00ae64 3001      	CPI  R16,1
00ae65 f010      	BRLO _0x2060114
00ae66 e0eb      	LDI  R30,LOW(11)
00ae67 c1c5      	RJMP _0x20E0010
                 _0x2060114:
00ae68 2fe0      	MOV  R30,R16
00ae69 940e d4c5 	CALL SUBOPT_0x3A7
00ae6b 940e d312 	CALL SUBOPT_0x36A
00ae6d 8dab      	LDD  R26,Y+27
00ae6e 8dbc      	LDD  R27,Y+27+1
00ae6f 93ed      	ST   X+,R30
00ae70 93fc      	ST   X,R31
00ae71 81ee      	LDD  R30,Y+6
00ae72 81ff      	LDD  R31,Y+6+1
00ae73 9730      	SBIW R30,0
00ae74 f411      	BRNE _0x2060115
00ae75 e0ec      	LDI  R30,LOW(12)
00ae76 c1b6      	RJMP _0x20E0010
                 _0x2060115:
00ae77 81ae      	LDD  R26,Y+6
00ae78 81bf      	LDD  R27,Y+6+1
00ae79 91ec      	LD   R30,X
00ae7a 30e0      	CPI  R30,0
00ae7b f089      	BREQ _0x2060116
00ae7c 81ee      	LDD  R30,Y+6
00ae7d 81ff      	LDD  R31,Y+6+1
00ae7e 81a1      	LDD  R26,Z+1
00ae7f 940e a3e5 	CALL _disk_status
00ae81 2f5e      	MOV  R21,R30
00ae82 fd50      	SBRC R21,0
00ae83 c009      	RJMP _0x2060117
00ae84 8dea      	LDD  R30,Y+26
00ae85 30e0      	CPI  R30,0
00ae86 f011      	BREQ _0x2060119
00ae87 fd52      	SBRC R21,2
00ae88 c001      	RJMP _0x206011A
                 _0x2060119:
00ae89 c002      	RJMP _0x2060118
                 _0x206011A:
00ae8a e0ea      	LDI  R30,LOW(10)
00ae8b c1a1      	RJMP _0x20E0010
                 _0x2060118:
00ae8c c19f      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
00ae8d 81ae      	LDD  R26,Y+6
00ae8e 81bf      	LDD  R27,Y+6+1
00ae8f e0e0      	LDI  R30,LOW(0)
00ae90 93ec      	ST   X,R30
00ae91 2fe0      	MOV  R30,R16
                +
00ae92 81ae     +LDD R26 , Y + 6
00ae93 81bf     +LDD R27 , Y + 6 + 1
00ae94 9611     +ADIW R26 , 1
00ae95 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
00ae96 81ee      	LDD  R30,Y+6
00ae97 81ff      	LDD  R31,Y+6+1
00ae98 81a1      	LDD  R26,Z+1
00ae99 940e a314 	CALL _disk_initialize
00ae9b 2f5e      	MOV  R21,R30
00ae9c ff50      	SBRS R21,0
00ae9d c002      	RJMP _0x206011B
00ae9e e0e3      	LDI  R30,LOW(3)
00ae9f c18d      	RJMP _0x20E0010
                 _0x206011B:
00aea0 8dea      	LDD  R30,Y+26
00aea1 30e0      	CPI  R30,0
00aea2 f011      	BREQ _0x206011D
00aea3 fd52      	SBRC R21,2
00aea4 c001      	RJMP _0x206011E
                 _0x206011D:
00aea5 c002      	RJMP _0x206011C
                 _0x206011E:
00aea6 e0ea      	LDI  R30,LOW(10)
00aea7 c185      	RJMP _0x20E0010
                 _0x206011C:
00aea8 940e c493 	CALL SUBOPT_0x15D
00aeaa 940e d42f 	CALL SUBOPT_0x390
                +
00aeac 8fe8     +STD Y + 24 , R30
00aead 8ff9     +STD Y + 24 + 1 , R31
00aeae 8f6a     +STD Y + 24 + 2 , R22
00aeaf 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00aeb0 01df      	MOVW R26,R30
00aeb1 01cb      	MOVW R24,R22
00aeb2 df5d      	RCALL _check_fs_G103
00aeb3 2f1e      	MOV  R17,R30
00aeb4 3011      	CPI  R17,1
00aeb5 f4c1      	BRNE _0x206011F
00aeb6 81ee      	LDD  R30,Y+6
00aeb7 81ff      	LDD  R31,Y+6+1
00aeb8 96f2      	ADIW R30,50
00aeb9 54e2      	SUBI R30,LOW(-446)
00aeba 4ffe      	SBCI R31,HIGH(-446)
00aebb 019f      	MOVW R18,R30
00aebc 01f9      	MOVW R30,R18
00aebd 81e4      	LDD  R30,Z+4
00aebe 30e0      	CPI  R30,0
00aebf f071      	BREQ _0x2060120
00aec0 01d9      	MOVW R26,R18
00aec1 9618      	ADIW R26,8
00aec2 940e d9f4 	CALL __GETD1P
00aec4 940e c0f5 	CALL SUBOPT_0xC3
00aec6 940e c493 	CALL SUBOPT_0x15D
                +
00aec8 8da8     +LDD R26 , Y + 24
00aec9 8db9     +LDD R27 , Y + 24 + 1
00aeca 8d8a     +LDD R24 , Y + 24 + 2
00aecb 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00aecc df43      	RCALL _check_fs_G103
00aecd 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
00aece 3013      	CPI  R17,3
00aecf f411      	BRNE _0x2060121
00aed0 e0e1      	LDI  R30,LOW(1)
00aed1 c15b      	RJMP _0x20E0010
                 _0x2060121:
00aed2 3010      	CPI  R17,0
00aed3 f449      	BRNE _0x2060123
00aed4 81ae      	LDD  R26,Y+6
00aed5 81bf      	LDD  R27,Y+6+1
00aed6 96dd      	ADIW R26,61
00aed7 940e d9f0 	CALL __GETW1P
00aed9 30e0      	CPI  R30,LOW(0x200)
00aeda e0a2      	LDI  R26,HIGH(0x200)
00aedb 07fa      	CPC  R31,R26
00aedc f011      	BREQ _0x2060122
                 _0x2060123:
00aedd e0ed      	LDI  R30,LOW(13)
00aede c14e      	RJMP _0x20E0010
                 _0x2060122:
00aedf 81ae      	LDD  R26,Y+6
00aee0 81bf      	LDD  R27,Y+6+1
00aee1 5ba8      	SUBI R26,LOW(-72)
00aee2 4fbf      	SBCI R27,HIGH(-72)
00aee3 940e bcad 	CALL SUBOPT_0x1D
00aee5 940e d4cd 	CALL SUBOPT_0x3A8
00aee7 940e c17b 	CALL SUBOPT_0xD6
00aee9 940e da7d 	CALL __CPD10
00aeeb f441      	BRNE _0x2060125
00aeec 81ae      	LDD  R26,Y+6
00aeed 81bf      	LDD  R27,Y+6+1
00aeee 5aaa      	SUBI R26,LOW(-86)
00aeef 4fbf      	SBCI R27,HIGH(-86)
00aef0 940e d9f4 	CALL __GETD1P
00aef2 940e d4cd 	CALL SUBOPT_0x3A8
                 _0x2060125:
00aef4 940e c17b 	CALL SUBOPT_0xD6
                +
00aef6 81ae     +LDD R26 , Y + 6
00aef7 81bf     +LDD R27 , Y + 6 + 1
00aef8 965a     +ADIW R26 , 26
00aef9 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00aefb 81ee      	LDD  R30,Y+6
00aefc 81ff      	LDD  R31,Y+6+1
00aefd 5bee      	SUBI R30,LOW(-66)
00aefe 4fff      	SBCI R31,HIGH(-66)
00aeff 81e0      	LD   R30,Z
                +
00af00 81ae     +LDD R26 , Y + 6
00af01 81bf     +LDD R27 , Y + 6 + 1
00af02 9613     +ADIW R26 , 3
00af03 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00af04 81ee      	LDD  R30,Y+6
00af05 81ff      	LDD  R31,Y+6+1
00af06 81e3      	LDD  R30,Z+3
00af07 e0f0      	LDI  R31,0
00af08 940e d41e 	CALL SUBOPT_0x38D
00af0a 940e cb69 	CALL SUBOPT_0x272
00af0c 940e d4cd 	CALL SUBOPT_0x3A8
00af0e 940e d4d2 	CALL SUBOPT_0x3A9
00af10 940e c171 	CALL SUBOPT_0xD4
00af12 940e d44d 	CALL SUBOPT_0x395
                +
00af14 81ae     +LDD R26 , Y + 6
00af15 81bf     +LDD R27 , Y + 6 + 1
00af16 9692     +ADIW R26 , 34
00af17 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00af19 81ee      	LDD  R30,Y+6
00af1a 81ff      	LDD  R31,Y+6+1
00af1b ade7      	LDD  R30,Z+63
                +
00af1c 81ae     +LDD R26 , Y + 6
00af1d 81bf     +LDD R27 , Y + 6 + 1
00af1e 9612     +ADIW R26 , 2
00af1f 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00af20 81ae      	LDD  R26,Y+6
00af21 81bf      	LDD  R27,Y+6+1
00af22 5bad      	SUBI R26,LOW(-67)
00af23 4fbf      	SBCI R27,HIGH(-67)
00af24 940e d9f0 	CALL __GETW1P
                +
00af26 81ae     +LDD R26 , Y + 6
00af27 81bf     +LDD R27 , Y + 6 + 1
00af28 9618     +ADIW R26 , 8
00af29 93ed     +ST X + , R30
00af2a 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00af2b 81ae      	LDD  R26,Y+6
00af2c 81bf      	LDD  R27,Y+6+1
00af2d 5bab      	SUBI R26,LOW(-69)
00af2e 4fbf      	SBCI R27,HIGH(-69)
00af2f 940e bcad 	CALL SUBOPT_0x1D
00af31 940e d4d9 	CALL SUBOPT_0x3AA
00af33 940e be77 	CALL SUBOPT_0x60
00af35 940e da7d 	CALL __CPD10
00af37 f441      	BRNE _0x2060126
00af38 81ae      	LDD  R26,Y+6
00af39 81bf      	LDD  R27,Y+6+1
00af3a 5aae      	SUBI R26,LOW(-82)
00af3b 4fbf      	SBCI R27,HIGH(-82)
00af3c 940e d9f4 	CALL __GETD1P
00af3e 940e d4d9 	CALL SUBOPT_0x3AA
                 _0x2060126:
00af40 940e d4d2 	CALL SUBOPT_0x3A9
00af42 940e d3bc 	CALL SUBOPT_0x380
00af44 2766      	CLR  R22
00af45 2777      	CLR  R23
00af46 940e c0f0 	CALL SUBOPT_0xC2
00af48 940e d41e 	CALL SUBOPT_0x38D
00af4a 940e d89e 	CALL __SUBD12
00af4c 937f      	PUSH R23
00af4d 936f      	PUSH R22
00af4e 93ff      	PUSH R31
00af4f 93ef      	PUSH R30
00af50 940e d4de 	CALL SUBOPT_0x3AB
00af52 91af      	POP  R26
00af53 91bf      	POP  R27
00af54 918f      	POP  R24
00af55 919f      	POP  R25
00af56 2766      	CLR  R22
00af57 2777      	CLR  R23
00af58 940e d8a3 	CALL __SUBD21
00af5a 81ee      	LDD  R30,Y+6
00af5b 81ff      	LDD  R31,Y+6+1
00af5c 940e cb61 	CALL SUBOPT_0x270
00af5e 940e d919 	CALL __CWD1
00af60 940e d990 	CALL __DIVD21U
                +
00af62 5fee     +SUBI R30 , LOW ( - 2 )
00af63 4fff     +SBCI R31 , HIGH ( - 2 )
00af64 4f6f     +SBCI R22 , BYTE3 ( - 2 )
00af65 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
00af66 940e d17d 	CALL SUBOPT_0x328
                +
00af68 81ae     +LDD R26 , Y + 6
00af69 81bf     +LDD R27 , Y + 6 + 1
00af6a 965e     +ADIW R26 , 30
00af6b 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,30
00af6d e011      	LDI  R17,LOW(1)
00af6e 940e be1e 	CALL SUBOPT_0x52
                +
00af70 3fa7     +CPI R26 , LOW ( 0xFF7 )
00af71 e0ef     +LDI R30 , HIGH ( 0xFF7 )
00af72 07be     +CPC R27 , R30
00af73 e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
00af74 078e     +CPC R24 , R30
00af75 e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
00af76 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
00af77 f008      	BRLO _0x2060127
00af78 e012      	LDI  R17,LOW(2)
                 _0x2060127:
00af79 940e be1e 	CALL SUBOPT_0x52
                +
00af7b 3fa7     +CPI R26 , LOW ( 0xFFF7 )
00af7c efef     +LDI R30 , HIGH ( 0xFFF7 )
00af7d 07be     +CPC R27 , R30
00af7e e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
00af7f 078e     +CPC R24 , R30
00af80 e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
00af81 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
00af82 f008      	BRLO _0x2060128
00af83 e013      	LDI  R17,LOW(3)
                 _0x2060128:
00af84 3013      	CPI  R17,3
00af85 f439      	BRNE _0x2060129
00af86 81ae      	LDD  R26,Y+6
00af87 81bf      	LDD  R27,Y+6+1
00af88 5aa2      	SUBI R26,LOW(-94)
00af89 4fbf      	SBCI R27,HIGH(-94)
00af8a 940e d9f4 	CALL __GETD1P
00af8c c002      	RJMP _0x206022D
                 _0x2060129:
00af8d 940e d4e6 	CALL SUBOPT_0x3AC
                 _0x206022D:
                +
00af8f 81ae     +LDD R26 , Y + 6
00af90 81bf     +LDD R27 , Y + 6 + 1
00af91 9696     +ADIW R26 , 38
00af92 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,38
00af94 940e d4e6 	CALL SUBOPT_0x3AC
00af96 937f      	PUSH R23
00af97 936f      	PUSH R22
00af98 93ff      	PUSH R31
00af99 93ef      	PUSH R30
00af9a 940e d4de 	CALL SUBOPT_0x3AB
00af9c 91af      	POP  R26
00af9d 91bf      	POP  R27
00af9e 918f      	POP  R24
00af9f 919f      	POP  R25
00afa0 940e d44d 	CALL SUBOPT_0x395
                +
00afa2 81ae     +LDD R26 , Y + 6
00afa3 81bf     +LDD R27 , Y + 6 + 1
00afa4 969a     +ADIW R26 , 42
00afa5 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,42
00afa7 81ae      	LDD  R26,Y+6
00afa8 81bf      	LDD  R27,Y+6+1
00afa9 961e      	ADIW R26,14
00afaa 940e bcd8 	CALL SUBOPT_0x24
00afac 940e d9ff 	CALL __PUTDP1
00afae 81ae      	LDD  R26,Y+6
00afaf 81bf      	LDD  R27,Y+6+1
00afb0 9614      	ADIW R26,4
00afb1 e0e0      	LDI  R30,LOW(0)
00afb2 93ec      	ST   X,R30
00afb3 3013      	CPI  R17,3
00afb4 f011      	BREQ PC+3
00afb5 940c b018 	JMP _0x206012B
00afb7 81ae      	LDD  R26,Y+6
00afb8 81bf      	LDD  R27,Y+6+1
00afb9 9615      	ADIW R26,5
00afba 93ec      	ST   X,R30
00afbb 81ae      	LDD  R26,Y+6
00afbc 81bf      	LDD  R27,Y+6+1
00afbd 59ae      	SUBI R26,LOW(-98)
00afbe 4fbf      	SBCI R27,HIGH(-98)
00afbf 940e d9f0 	CALL __GETW1P
00afc1 940e c171 	CALL SUBOPT_0xD4
00afc3 940e d44d 	CALL SUBOPT_0x395
                +
00afc5 81ae     +LDD R26 , Y + 6
00afc6 81bf     +LDD R27 , Y + 6 + 1
00afc7 9652     +ADIW R26 , 18
00afc8 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00afca 81ee      	LDD  R30,Y+6
00afcb 81ff      	LDD  R31,Y+6+1
00afcc 81a1      	LDD  R26,Z+1
00afcd 93aa      	ST   -Y,R26
00afce 81ef      	LDD  R30,Y+7
00afcf 85f8      	LDD  R31,Y+7+1
00afd0 96f2      	ADIW R30,50
00afd1 93fa      	ST   -Y,R31
00afd2 93ea      	ST   -Y,R30
00afd3 85e9      	LDD  R30,Y+9
00afd4 85fa      	LDD  R31,Y+9+1
00afd5 940e d366 	CALL SUBOPT_0x375
00afd7 940e a3ef 	CALL _disk_read
00afd9 30e0      	CPI  R30,0
00afda f511      	BRNE _0x206012D
00afdb 81ee      	LDD  R30,Y+6
00afdc 81ff      	LDD  R31,Y+6+1
00afdd 940e d4ad 	CALL SUBOPT_0x3A5
00afdf f4e9      	BRNE _0x206012D
00afe0 81ae      	LDD  R26,Y+6
00afe1 81bf      	LDD  R27,Y+6+1
00afe2 96d2      	ADIW R26,50
00afe3 940e d9f4 	CALL __GETD1P
                +
00afe5 35e2     +CPI R30 , LOW ( 0x41615252 )
00afe6 e5a2     +LDI R26 , HIGH ( 0x41615252 )
00afe7 07fa     +CPC R31 , R26
00afe8 e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00afe9 076a     +CPC R22 , R26
00afea e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00afeb 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00afec f481      	BRNE _0x206012D
00afed 81ee      	LDD  R30,Y+6
00afee 81ff      	LDD  R31,Y+6+1
00afef 96f2      	ADIW R30,50
00aff0 51ec      	SUBI R30,LOW(-484)
00aff1 4ffe      	SBCI R31,HIGH(-484)
00aff2 01df      	MOVW R26,R30
00aff3 940e d9f4 	CALL __GETD1P
                +
00aff5 37e2     +CPI R30 , LOW ( 0x61417272 )
00aff6 e7a2     +LDI R26 , HIGH ( 0x61417272 )
00aff7 07fa     +CPC R31 , R26
00aff8 e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00aff9 076a     +CPC R22 , R26
00affa e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00affb 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00affc f009      	BREQ _0x206012E
                 _0x206012D:
00affd c01a      	RJMP _0x206012C
                 _0x206012E:
00affe 81ee      	LDD  R30,Y+6
00afff 81ff      	LDD  R31,Y+6+1
00b000 96f2      	ADIW R30,50
00b001 51e4      	SUBI R30,LOW(-492)
00b002 4ffe      	SBCI R31,HIGH(-492)
00b003 01df      	MOVW R26,R30
00b004 940e d9f4 	CALL __GETD1P
                +
00b006 81ae     +LDD R26 , Y + 6
00b007 81bf     +LDD R27 , Y + 6 + 1
00b008 961a     +ADIW R26 , 10
00b009 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00b00b 81ee      	LDD  R30,Y+6
00b00c 81ff      	LDD  R31,Y+6+1
00b00d 96f2      	ADIW R30,50
00b00e 51e8      	SUBI R30,LOW(-488)
00b00f 4ffe      	SBCI R31,HIGH(-488)
00b010 01df      	MOVW R26,R30
00b011 940e d9f4 	CALL __GETD1P
                +
00b013 81ae     +LDD R26 , Y + 6
00b014 81bf     +LDD R27 , Y + 6 + 1
00b015 961e     +ADIW R26 , 14
00b016 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00b018 81ae      	LDD  R26,Y+6
00b019 81bf      	LDD  R27,Y+6+1
00b01a 931c      	ST   X,R17
00b01b 969e      	ADIW R26,46
00b01c 940e bfab 	CALL SUBOPT_0x8F
00b01e 81ae      	LDD  R26,Y+6
00b01f 81bf      	LDD  R27,Y+6+1
00b020 9656      	ADIW R26,22
00b021 940e bfab 	CALL SUBOPT_0x8F
00b023 eaae      	LDI  R26,LOW(_Fsid_G103)
00b024 e1ba      	LDI  R27,HIGH(_Fsid_G103)
00b025 940e bf3c 	CALL SUBOPT_0x7C
                +
00b027 81ae     +LDD R26 , Y + 6
00b028 81bf     +LDD R27 , Y + 6 + 1
00b029 9616     +ADIW R26 , 6
00b02a 93ed     +ST X + , R30
00b02b 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00b02c e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00b02d 940e daa0 	CALL __LOADLOCR6
00b02f 966f      	ADIW R28,31
00b030 9508      	RET
                 _validate_G103:
00b031 940e cad5 	CALL SUBOPT_0x25A
00b033 9730      	SBIW R30,0
00b034 f071      	BREQ _0x2060130
00b035 81aa      	LDD  R26,Y+2
00b036 81bb      	LDD  R27,Y+2+1
00b037 91ec      	LD   R30,X
00b038 30e0      	CPI  R30,0
00b039 f049      	BREQ _0x2060130
00b03a 81ea      	LDD  R30,Y+2
00b03b 81fb      	LDD  R31,Y+2+1
00b03c 81a6      	LDD  R26,Z+6
00b03d 81b7      	LDD  R27,Z+7
00b03e 81e8      	LD   R30,Y
00b03f 81f9      	LDD  R31,Y+1
00b040 17ea      	CP   R30,R26
00b041 07fb      	CPC  R31,R27
00b042 f011      	BREQ _0x206012F
                 _0x2060130:
00b043 e0e9      	LDI  R30,LOW(9)
00b044 c00a      	RJMP _0x20E000F
                 _0x206012F:
00b045 81ea      	LDD  R30,Y+2
00b046 81fb      	LDD  R31,Y+2+1
00b047 81a1      	LDD  R26,Z+1
00b048 940e a3e5 	CALL _disk_status
00b04a 70e1      	ANDI R30,LOW(0x1)
00b04b f011      	BREQ _0x2060132
00b04c e0e3      	LDI  R30,LOW(3)
00b04d c001      	RJMP _0x20E000F
                 _0x2060132:
00b04e e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
00b04f 9624      	ADIW R28,4
00b050 9508      	RET
                 _f_mount:
00b051 940e bf59 	CALL SUBOPT_0x81
00b053 81ac      	LDD  R26,Y+4
00b054 30a1      	CPI  R26,LOW(0x1)
00b055 f010      	BRLO _0x2060133
00b056 e0eb      	LDI  R30,LOW(11)
00b057 c020      	RJMP _0x20E000E
                 _0x2060133:
00b058 81ec      	LDD  R30,Y+4
00b059 940e d4c5 	CALL SUBOPT_0x3A7
00b05b 910d      	LD   R16,X+
00b05c 911c      	LD   R17,X
00b05d 2e00      	MOV  R0,R16
00b05e 2a01      	OR   R0,R17
00b05f f019      	BREQ _0x2060134
00b060 01d8      	MOVW R26,R16
00b061 e0e0      	LDI  R30,LOW(0)
00b062 93ec      	ST   X,R30
                 _0x2060134:
00b063 81ea      	LDD  R30,Y+2
00b064 81fb      	LDD  R31,Y+2+1
00b065 9730      	SBIW R30,0
00b066 f021      	BREQ _0x2060135
00b067 81aa      	LDD  R26,Y+2
00b068 81bb      	LDD  R27,Y+2+1
00b069 e0e0      	LDI  R30,LOW(0)
00b06a 93ec      	ST   X,R30
                 _0x2060135:
00b06b 81ec      	LDD  R30,Y+4
00b06c eaac      	LDI  R26,LOW(_FatFs_G103)
00b06d e1ba      	LDI  R27,HIGH(_FatFs_G103)
00b06e e0f0      	LDI  R31,0
00b06f 0fee      	LSL  R30
00b070 1fff      	ROL  R31
00b071 0fea      	ADD  R30,R26
00b072 1ffb      	ADC  R31,R27
00b073 81aa      	LDD  R26,Y+2
00b074 81bb      	LDD  R27,Y+2+1
00b075 83a0      	STD  Z+0,R26
00b076 83b1      	STD  Z+1,R27
00b077 e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
00b078 8119      	LDD  R17,Y+1
00b079 8108      	LDD  R16,Y+0
00b07a 9625      	ADIW R28,5
00b07b 9508      	RET
                 _f_open:
00b07c 93aa      	ST   -Y,R26
00b07d 97a2      	SBIW R28,34
00b07e 940e da9b 	CALL __SAVELOCR4
00b080 a5a9      	LDD  R26,Y+41
00b081 a5ba      	LDD  R27,Y+41+1
00b082 940e c2e2 	CALL SUBOPT_0x115
00b084 a1ee      	LDD  R30,Y+38
00b085 71ef      	ANDI R30,LOW(0x1F)
00b086 a3ee      	STD  Y+38,R30
00b087 01fe      	MOVW R30,R28
00b088 96b7      	ADIW R30,39
00b089 93fa      	ST   -Y,R31
00b08a 93ea      	ST   -Y,R30
00b08b 940e bec3 	CALL SUBOPT_0x6C
00b08d a5ea      	LDD  R30,Y+42
00b08e 71ee      	ANDI R30,LOW(0x1E)
00b08f 2fae      	MOV  R26,R30
00b090 ddb1      	RCALL _chk_mounted
00b091 2f1e      	MOV  R17,R30
00b092 3010      	CPI  R17,0
00b093 f011      	BREQ _0x2060136
00b094 2fe1      	MOV  R30,R17
00b095 c10f      	RJMP _0x20E000D
                 _0x2060136:
00b096 01fe      	MOVW R30,R28
00b097 9634      	ADIW R30,4
00b098 a3ec      	STD  Y+36,R30
00b099 a3fd      	STD  Y+36+1,R31
00b09a 940e be62 	CALL SUBOPT_0x5D
00b09c a5a9      	LDD  R26,Y+41
00b09d a5ba      	LDD  R27,Y+41+1
00b09e dced      	RCALL _follow_path_G103
00b09f 2f1e      	MOV  R17,R30
00b0a0 a1ee      	LDD  R30,Y+38
00b0a1 71ec      	ANDI R30,LOW(0x1C)
00b0a2 f411      	BRNE PC+3
00b0a3 940c b138 	JMP _0x2060137
00b0a5 9728      	SBIW R28,8
00b0a6 3010      	CPI  R17,0
00b0a7 f089      	BREQ _0x2060138
00b0a8 3014      	CPI  R17,4
00b0a9 f421      	BRNE _0x2060139
00b0aa 01de      	MOVW R26,R28
00b0ab 9658      	ADIW R26,24
00b0ac dbd4      	RCALL _dir_register_G103
00b0ad 2f1e      	MOV  R17,R30
                 _0x2060139:
00b0ae 3010      	CPI  R17,0
00b0af f019      	BREQ _0x206013A
00b0b0 2fe1      	MOV  R30,R17
00b0b1 9628      	ADIW R28,8
00b0b2 c0f2      	RJMP _0x20E000D
                 _0x206013A:
00b0b3 a5ee      	LDD  R30,Y+46
00b0b4 60e8      	ORI  R30,8
00b0b5 a7ee      	STD  Y+46,R30
                +
00b0b6 a52a     +LDD R18 , Y + 42
00b0b7 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b0b8 c066      	RJMP _0x206013B
                 _0x2060138:
00b0b9 a5ee      	LDD  R30,Y+46
00b0ba 70e4      	ANDI R30,LOW(0x4)
00b0bb f019      	BREQ _0x206013C
00b0bc e0e8      	LDI  R30,LOW(8)
00b0bd 9628      	ADIW R28,8
00b0be c0e6      	RJMP _0x20E000D
                 _0x206013C:
                +
00b0bf a52a     +LDD R18 , Y + 42
00b0c0 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b0c1 2e02      	MOV  R0,R18
00b0c2 2a03      	OR   R0,R19
00b0c3 f021      	BREQ _0x206013E
00b0c4 01f9      	MOVW R30,R18
00b0c5 85e3      	LDD  R30,Z+11
00b0c6 71e1      	ANDI R30,LOW(0x11)
00b0c7 f019      	BREQ _0x206013D
                 _0x206013E:
00b0c8 e0e7      	LDI  R30,LOW(7)
00b0c9 9628      	ADIW R28,8
00b0ca c0da      	RJMP _0x20E000D
                 _0x206013D:
00b0cb a5ee      	LDD  R30,Y+46
00b0cc 70e8      	ANDI R30,LOW(0x8)
00b0cd f411      	BRNE PC+3
00b0ce 940c b11f 	JMP _0x2060140
00b0d0 940e d498 	CALL SUBOPT_0x3A1
00b0d2 940e d90e 	CALL __LSLD16
00b0d4 937f      	PUSH R23
00b0d5 936f      	PUSH R22
00b0d6 93ff      	PUSH R31
00b0d7 93ef      	PUSH R30
00b0d8 940e d49c 	CALL SUBOPT_0x3A2
00b0da 91af      	POP  R26
00b0db 91bf      	POP  R27
00b0dc 918f      	POP  R24
00b0dd 919f      	POP  R25
00b0de 940e d4a1 	CALL SUBOPT_0x3A3
00b0e0 940e c18a 	CALL SUBOPT_0xD9
00b0e2 01f9      	MOVW R30,R18
00b0e3 9674      	ADIW R30,20
00b0e4 e0a0      	LDI  R26,LOW(0)
00b0e5 e0b0      	LDI  R27,HIGH(0)
00b0e6 83a0      	STD  Z+0,R26
00b0e7 83b1      	STD  Z+1,R27
00b0e8 01f9      	MOVW R30,R18
00b0e9 967a      	ADIW R30,26
00b0ea 83a0      	STD  Z+0,R26
00b0eb 83b1      	STD  Z+1,R27
00b0ec 01f9      	MOVW R30,R18
00b0ed 967c      	ADIW R30,28
00b0ee 940e bd0c 	CALL SUBOPT_0x2C
00b0f0 940e ca04 	CALL SUBOPT_0x23B
00b0f2 8da8      	LDD  R26,Y+24
00b0f3 8db9      	LDD  R27,Y+24+1
00b0f4 9614      	ADIW R26,4
00b0f5 e0e1      	LDI  R30,LOW(1)
00b0f6 93ec      	ST   X,R30
00b0f7 8da8      	LDD  R26,Y+24
00b0f8 8db9      	LDD  R27,Y+24+1
00b0f9 969e      	ADIW R26,46
00b0fa 940e d37b 	CALL SUBOPT_0x378
00b0fc 940e bf7f 	CALL SUBOPT_0x87
00b0fe 940e da7d 	CALL __CPD10
00b100 f0a1      	BREQ _0x2060141
00b101 940e cbc1 	CALL SUBOPT_0x280
00b103 940e c0ae 	CALL SUBOPT_0xB6
00b105 d887      	RCALL _remove_chain_G103
00b106 2f1e      	MOV  R17,R30
00b107 3010      	CPI  R17,0
00b108 f019      	BREQ _0x2060142
00b109 2fe1      	MOV  R30,R17
00b10a 9628      	ADIW R28,8
00b10b c099      	RJMP _0x20E000D
                 _0x2060142:
00b10c 940e bf7f 	CALL SUBOPT_0x87
00b10e 940e c199 	CALL SUBOPT_0xDD
                +
00b110 8da8     +LDD R26 , Y + 24
00b111 8db9     +LDD R27 , Y + 24 + 1
00b112 961a     +ADIW R26 , 10
00b113 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
00b115 940e cbc1 	CALL SUBOPT_0x280
00b117 940e be50 	CALL SUBOPT_0x59
00b119 940e d4ee 	CALL SUBOPT_0x3AD
00b11b f019      	BREQ _0x2060143
00b11c 2fe1      	MOV  R30,R17
00b11d 9628      	ADIW R28,8
00b11e c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
00b11f a5ee      	LDD  R30,Y+46
00b120 70e8      	ANDI R30,LOW(0x8)
00b121 f0a1      	BREQ _0x2060144
00b122 01f9      	MOVW R30,R18
00b123 963b      	ADIW R30,11
00b124 e0a0      	LDI  R26,LOW(0)
00b125 83a0      	STD  Z+0,R26
00b126 940e a68a 	CALL _get_fattime
00b128 940e c08f 	CALL SUBOPT_0xB0
                +
00b12a 01d9     +MOVW R26 , R18
00b12b 961e     +ADIW R26 , 14
00b12c 940e d9ff+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00b12e 8da8      	LDD  R26,Y+24
00b12f 8db9      	LDD  R27,Y+24+1
00b130 9614      	ADIW R26,4
00b131 e0e1      	LDI  R30,LOW(1)
00b132 93ec      	ST   X,R30
00b133 a5ee      	LDD  R30,Y+46
00b134 62e0      	ORI  R30,0x20
00b135 a7ee      	STD  Y+46,R30
                 _0x2060144:
00b136 9628      	ADIW R28,8
00b137 c019      	RJMP _0x2060145
                 _0x2060137:
00b138 3010      	CPI  R17,0
00b139 f011      	BREQ _0x2060146
00b13a 2fe1      	MOV  R30,R17
00b13b c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00b13c a12a     +LDD R18 , Y + 34
00b13d a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00b13e 2e02      	MOV  R0,R18
00b13f 2a03      	OR   R0,R19
00b140 f021      	BREQ _0x2060148
00b141 01f9      	MOVW R30,R18
00b142 85e3      	LDD  R30,Z+11
00b143 71e0      	ANDI R30,LOW(0x10)
00b144 f011      	BREQ _0x2060147
                 _0x2060148:
00b145 e0e4      	LDI  R30,LOW(4)
00b146 c05e      	RJMP _0x20E000D
                 _0x2060147:
00b147 a1ee      	LDD  R30,Y+38
00b148 70e2      	ANDI R30,LOW(0x2)
00b149 f021      	BREQ _0x206014B
00b14a 01f9      	MOVW R30,R18
00b14b 85e3      	LDD  R30,Z+11
00b14c 70e1      	ANDI R30,LOW(0x1)
00b14d f409      	BRNE _0x206014C
                 _0x206014B:
00b14e c002      	RJMP _0x206014A
                 _0x206014C:
00b14f e0e7      	LDI  R30,LOW(7)
00b150 c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
00b151 89a8      	LDD  R26,Y+16
00b152 89b9      	LDD  R27,Y+16+1
00b153 969e      	ADIW R26,46
00b154 940e d9f4 	CALL __GETD1P
                +
00b156 a5a9     +LDD R26 , Y + 41
00b157 a5ba     +LDD R27 , Y + 41 + 1
00b158 965a     +ADIW R26 , 26
00b159 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 41,26
00b15b a1ea      	LDD  R30,Y+34
00b15c a1fb      	LDD  R31,Y+34+1
                +
00b15d a5a9     +LDD R26 , Y + 41
00b15e a5ba     +LDD R27 , Y + 41 + 1
00b15f 965e     +ADIW R26 , 30
00b160 93ed     +ST X + , R30
00b161 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
00b162 a1ee      	LDD  R30,Y+38
                +
00b163 a5a9     +LDD R26 , Y + 41
00b164 a5ba     +LDD R27 , Y + 41 + 1
00b165 9614     +ADIW R26 , 4
00b166 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
00b167 940e d498 	CALL SUBOPT_0x3A1
00b169 940e d90e 	CALL __LSLD16
00b16b 937f      	PUSH R23
00b16c 936f      	PUSH R22
00b16d 93ff      	PUSH R31
00b16e 93ef      	PUSH R30
00b16f 940e d49c 	CALL SUBOPT_0x3A2
00b171 91af      	POP  R26
00b172 91bf      	POP  R27
00b173 918f      	POP  R24
00b174 919f      	POP  R25
00b175 940e d4a1 	CALL SUBOPT_0x3A3
                +
00b177 a5a9     +LDD R26 , Y + 41
00b178 a5ba     +LDD R27 , Y + 41 + 1
00b179 961e     +ADIW R26 , 14
00b17a 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 41,14
00b17c 01d9      	MOVW R26,R18
00b17d 965c      	ADIW R26,28
00b17e 940e d9f4 	CALL __GETD1P
                +
00b180 a5a9     +LDD R26 , Y + 41
00b181 a5ba     +LDD R27 , Y + 41 + 1
00b182 961a     +ADIW R26 , 10
00b183 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 41,10
00b185 a5a9      	LDD  R26,Y+41
00b186 a5ba      	LDD  R27,Y+41+1
00b187 9616      	ADIW R26,6
00b188 940e bfab 	CALL SUBOPT_0x8F
00b18a a5a9      	LDD  R26,Y+41
00b18b a5ba      	LDD  R27,Y+41+1
00b18c 9615      	ADIW R26,5
00b18d efef      	LDI  R30,LOW(255)
00b18e 93ec      	ST   X,R30
00b18f a5a9      	LDD  R26,Y+41
00b190 a5ba      	LDD  R27,Y+41+1
00b191 9656      	ADIW R26,22
00b192 940e bfab 	CALL SUBOPT_0x8F
00b194 89e8      	LDD  R30,Y+16
00b195 89f9      	LDD  R31,Y+16+1
00b196 a5a9      	LDD  R26,Y+41
00b197 a5ba      	LDD  R27,Y+41+1
00b198 93ed      	ST   X+,R30
00b199 93fc      	ST   X,R31
00b19a 89a8      	LDD  R26,Y+16
00b19b 89b9      	LDD  R27,Y+16+1
00b19c 9616      	ADIW R26,6
00b19d 940e d9f0 	CALL __GETW1P
                +
00b19f a5a9     +LDD R26 , Y + 41
00b1a0 a5ba     +LDD R27 , Y + 41 + 1
00b1a1 9612     +ADIW R26 , 2
00b1a2 93ed     +ST X + , R30
00b1a3 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
00b1a4 e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
00b1a5 940e daa2 	CALL __LOADLOCR4
00b1a7 96ab      	ADIW R28,43
00b1a8 9508      	RET
                 _f_read:
00b1a9 93ba      	ST   -Y,R27
00b1aa 93aa      	ST   -Y,R26
00b1ab 972e      	SBIW R28,14
00b1ac 940e da99 	CALL __SAVELOCR6
00b1ae 8de8      	LDD  R30,Y+24
00b1af 8df9      	LDD  R31,Y+24+1
00b1b0 83ee      	STD  Y+6,R30
00b1b1 83ff      	STD  Y+6+1,R31
00b1b2 89ac      	LDD  R26,Y+20
00b1b3 89bd      	LDD  R27,Y+20+1
00b1b4 940e c2e2 	CALL SUBOPT_0x115
00b1b6 940e d4f3 	CALL SUBOPT_0x3AE
00b1b8 8dec      	LDD  R30,Y+28
00b1b9 8dfd      	LDD  R31,Y+28+1
00b1ba 940e d4f6 	CALL SUBOPT_0x3AF
00b1bc f011      	BREQ _0x206014D
00b1bd 2fe1      	MOV  R30,R17
00b1be c14a      	RJMP _0x20E000C
                 _0x206014D:
00b1bf 8dea      	LDD  R30,Y+26
00b1c0 8dfb      	LDD  R31,Y+26+1
00b1c1 81a4      	LDD  R26,Z+4
00b1c2 78a0      	ANDI R26,LOW(0x80)
00b1c3 f011      	BREQ _0x206014E
00b1c4 e0e2      	LDI  R30,LOW(2)
00b1c5 c143      	RJMP _0x20E000C
                 _0x206014E:
00b1c6 8dea      	LDD  R30,Y+26
00b1c7 8dfb      	LDD  R31,Y+26+1
00b1c8 81a4      	LDD  R26,Z+4
00b1c9 70a1      	ANDI R26,LOW(0x1)
00b1ca f411      	BRNE _0x206014F
00b1cb e0e7      	LDI  R30,LOW(7)
00b1cc c13c      	RJMP _0x20E000C
                 _0x206014F:
00b1cd 8dea      	LDD  R30,Y+26
00b1ce 8dfb      	LDD  R31,Y+26+1
                +
00b1cf 85a2     +LDD R26 , Z + 10
00b1d0 85b3     +LDD R27 , Z + 10 + 1
00b1d1 8584     +LDD R24 , Z + 10 + 2
00b1d2 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b1d3 939f      	PUSH R25
00b1d4 938f      	PUSH R24
00b1d5 93bf      	PUSH R27
00b1d6 93af      	PUSH R26
00b1d7 940e d4fd 	CALL SUBOPT_0x3B0
00b1d9 91ef      	POP  R30
00b1da 91ff      	POP  R31
00b1db 916f      	POP  R22
00b1dc 917f      	POP  R23
00b1dd 940e d89e 	CALL __SUBD12
00b1df 940e d20a 	CALL SUBOPT_0x33D
00b1e1 940e be05 	CALL SUBOPT_0x4F
00b1e3 89ae      	LDD  R26,Y+22
00b1e4 89bf      	LDD  R27,Y+22+1
00b1e5 2788      	CLR  R24
00b1e6 2799      	CLR  R25
00b1e7 940e da8f 	CALL __CPD12
00b1e9 f420      	BRSH _0x2060150
00b1ea 85e8      	LDD  R30,Y+8
00b1eb 85f9      	LDD  R31,Y+8+1
00b1ec 8bee      	STD  Y+22,R30
00b1ed 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00b1ee 89ee      	LDD  R30,Y+22
00b1ef 89ff      	LDD  R31,Y+22+1
00b1f0 9730      	SBIW R30,0
00b1f1 f411      	BRNE PC+3
00b1f2 940c b308 	JMP _0x2060153
00b1f4 940e d4fd 	CALL SUBOPT_0x3B0
00b1f6 940e d504 	CALL SUBOPT_0x3B1
00b1f8 f011      	BREQ PC+3
00b1f9 940c b2d3 	JMP _0x2060154
00b1fb 8dea      	LDD  R30,Y+26
00b1fc 8dfb      	LDD  R31,Y+26+1
00b1fd 8005      	LDD  R0,Z+5
00b1fe 8daa      	LDD  R26,Y+26
00b1ff 8dbb      	LDD  R27,Y+26+1
00b200 940e d9f0 	CALL __GETW1P
00b202 81e2      	LDD  R30,Z+2
00b203 160e      	CP   R0,R30
00b204 f188      	BRLO _0x2060155
00b205 940e d4fd 	CALL SUBOPT_0x3B0
00b207 940e da89 	CALL __CPD02
00b209 f431      	BRNE _0x2060156
00b20a 8daa      	LDD  R26,Y+26
00b20b 8dbb      	LDD  R27,Y+26+1
00b20c 961e      	ADIW R26,14
00b20d 940e d9f4 	CALL __GETD1P
00b20f c006      	RJMP _0x2060157
                 _0x2060156:
00b210 940e d4f3 	CALL SUBOPT_0x3AE
00b212 940e d509 	CALL SUBOPT_0x3B2
00b214 940e a86b 	CALL _get_fat
                 _0x2060157:
00b216 940e d20f 	CALL SUBOPT_0x33E
00b218 940e d3dc 	CALL SUBOPT_0x383
00b21a 940e d36e 	CALL SUBOPT_0x376
00b21c f420      	BRSH _0x2060159
00b21d 940e d510 	CALL SUBOPT_0x3B3
00b21f e0e2      	LDI  R30,LOW(2)
00b220 c0e8      	RJMP _0x20E000C
                 _0x2060159:
00b221 940e d3dc 	CALL SUBOPT_0x383
00b223 940e bd70 	CALL SUBOPT_0x3A
00b225 f421      	BRNE _0x206015A
00b226 940e d510 	CALL SUBOPT_0x3B3
00b228 e0e1      	LDI  R30,LOW(1)
00b229 c0df      	RJMP _0x20E000C
                 _0x206015A:
00b22a 940e bc33 	CALL SUBOPT_0xC
                +
00b22c 8daa     +LDD R26 , Y + 26
00b22d 8dbb     +LDD R27 , Y + 26 + 1
00b22e 9652     +ADIW R26 , 18
00b22f 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 26,18
00b231 8daa      	LDD  R26,Y+26
00b232 8dbb      	LDD  R27,Y+26+1
00b233 9615      	ADIW R26,5
00b234 e0e0      	LDI  R30,LOW(0)
00b235 93ec      	ST   X,R30
                 _0x2060155:
00b236 940e d4f3 	CALL SUBOPT_0x3AE
00b238 940e d509 	CALL SUBOPT_0x3B2
00b23a d85a      	RCALL _clust2sect
00b23b 940e c20f 	CALL SUBOPT_0xEF
00b23d 940e da7d 	CALL __CPD10
00b23f f421      	BRNE _0x206015B
00b240 940e d510 	CALL SUBOPT_0x3B3
00b242 e0e2      	LDI  R30,LOW(2)
00b243 c0c5      	RJMP _0x20E000C
                 _0x206015B:
00b244 940e d517 	CALL SUBOPT_0x3B4
00b246 940e bc2e 	CALL SUBOPT_0xB
00b248 940e c08a 	CALL SUBOPT_0xAF
00b24a 940e c205 	CALL SUBOPT_0xED
00b24c 89ae      	LDD  R26,Y+22
00b24d 89bf      	LDD  R27,Y+22+1
00b24e 940e d51b 	CALL SUBOPT_0x3B5
00b250 f411      	BRNE PC+3
00b251 940c b29e 	JMP _0x206015C
00b253 940e d517 	CALL SUBOPT_0x3B4
00b255 0fe4      	ADD  R30,R20
00b256 1ff5      	ADC  R31,R21
00b257 010f      	MOVW R0,R30
00b258 940e d523 	CALL SUBOPT_0x3B6
00b25a 81e2      	LDD  R30,Z+2
00b25b 940e c654 	CALL SUBOPT_0x1A8
00b25d f450      	BRSH _0x206015D
00b25e 940e d523 	CALL SUBOPT_0x3B6
00b260 940e cb61 	CALL SUBOPT_0x270
00b262 01df      	MOVW R26,R30
00b263 940e d517 	CALL SUBOPT_0x3B4
00b265 1bae      	SUB  R26,R30
00b266 0bbf      	SBC  R27,R31
00b267 01ad      	MOVW R20,R26
                 _0x206015D:
00b268 940e d523 	CALL SUBOPT_0x3B6
00b26a 940e d528 	CALL SUBOPT_0x3B7
                +
00b26c 85ef     +LDD R30 , Y + 15
00b26d 89f8     +LDD R31 , Y + 15 + 1
00b26e 8969     +LDD R22 , Y + 15 + 2
00b26f 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b270 940e da29 	CALL __PUTPARD1
00b272 2fa4      	MOV  R26,R20
00b273 940e a3ef 	CALL _disk_read
00b275 30e0      	CPI  R30,0
00b276 f021      	BREQ _0x206015E
00b277 940e d510 	CALL SUBOPT_0x3B3
00b279 e0e1      	LDI  R30,LOW(1)
00b27a c08e      	RJMP _0x20E000C
                 _0x206015E:
00b27b 8dea      	LDD  R30,Y+26
00b27c 8dfb      	LDD  R31,Y+26+1
00b27d 81a4      	LDD  R26,Z+4
00b27e 74a0      	ANDI R26,LOW(0x40)
00b27f f029      	BREQ _0x2060160
00b280 940e d52f 	CALL SUBOPT_0x3B8
00b282 940e d537 	CALL SUBOPT_0x3B9
00b284 f008      	BRLO _0x2060161
                 _0x2060160:
00b285 c013      	RJMP _0x206015F
                 _0x2060161:
00b286 940e d52f 	CALL SUBOPT_0x3B8
00b288 940e d53f 	CALL SUBOPT_0x3BA
00b28a 81ae      	LDD  R26,Y+6
00b28b 81bf      	LDD  R27,Y+6+1
00b28c 2788      	CLR  R24
00b28d 2799      	CLR  R25
00b28e 940e c4a7 	CALL SUBOPT_0x161
00b290 8dec      	LDD  R30,Y+28
00b291 8dfd      	LDD  R31,Y+28+1
00b292 96b0      	ADIW R30,32
00b293 93fa      	ST   -Y,R31
00b294 93ea      	ST   -Y,R30
00b295 e0a0      	LDI  R26,LOW(512)
00b296 e0b2      	LDI  R27,HIGH(512)
00b297 940e a718 	CALL _mem_cpy_G103
                 _0x206015F:
00b299 8daa      	LDD  R26,Y+26
00b29a 8dbb      	LDD  R27,Y+26+1
00b29b 940e d548 	CALL SUBOPT_0x3BB
00b29d c053      	RJMP _0x2060151
                 _0x206015C:
00b29e 8dea      	LDD  R30,Y+26
00b29f 8dfb      	LDD  R31,Y+26+1
00b2a0 81a4      	LDD  R26,Z+4
00b2a1 74a0      	ANDI R26,LOW(0x40)
00b2a2 f089      	BREQ _0x2060162
00b2a3 940e d523 	CALL SUBOPT_0x3B6
00b2a5 940e d553 	CALL SUBOPT_0x3BC
00b2a7 8ded      	LDD  R30,Y+29
00b2a8 8dfe      	LDD  R31,Y+29+1
00b2a9 940e d55b 	CALL SUBOPT_0x3BD
00b2ab f021      	BREQ _0x2060163
00b2ac 940e d510 	CALL SUBOPT_0x3B3
00b2ae e0e1      	LDI  R30,LOW(1)
00b2af c059      	RJMP _0x20E000C
                 _0x2060163:
00b2b0 8daa      	LDD  R26,Y+26
00b2b1 8dbb      	LDD  R27,Y+26+1
00b2b2 940e d566 	CALL SUBOPT_0x3BE
                 _0x2060162:
00b2b4 940e d52f 	CALL SUBOPT_0x3B8
00b2b6 940e da8f 	CALL __CPD12
00b2b8 f079      	BREQ _0x2060164
00b2b9 940e d523 	CALL SUBOPT_0x3B6
00b2bb 940e d553 	CALL SUBOPT_0x3BC
                +
00b2bd 85ef     +LDD R30 , Y + 15
00b2be 89f8     +LDD R31 , Y + 15 + 1
00b2bf 8969     +LDD R22 , Y + 15 + 2
00b2c0 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b2c1 940e d4a6 	CALL SUBOPT_0x3A4
00b2c3 f021      	BREQ _0x2060165
00b2c4 940e d510 	CALL SUBOPT_0x3B3
00b2c6 e0e1      	LDI  R30,LOW(1)
00b2c7 c041      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00b2c8 940e c194 	CALL SUBOPT_0xDC
                +
00b2ca 8daa     +LDD R26 , Y + 26
00b2cb 8dbb     +LDD R27 , Y + 26 + 1
00b2cc 9656     +ADIW R26 , 22
00b2cd 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 26,22
00b2cf 8daa      	LDD  R26,Y+26
00b2d0 8dbb      	LDD  R27,Y+26+1
00b2d1 940e d56b 	CALL SUBOPT_0x3BF
                 _0x2060154:
00b2d3 8daa      	LDD  R26,Y+26
00b2d4 8dbb      	LDD  R27,Y+26+1
00b2d5 940e d570 	CALL SUBOPT_0x3C0
00b2d7 e0a0      	LDI  R26,LOW(512)
00b2d8 e0b2      	LDI  R27,HIGH(512)
00b2d9 1bae      	SUB  R26,R30
00b2da 0bbf      	SBC  R27,R31
00b2db 019d      	MOVW R18,R26
00b2dc 89ee      	LDD  R30,Y+22
00b2dd 89ff      	LDD  R31,Y+22+1
00b2de 17e2      	CP   R30,R18
00b2df 07f3      	CPC  R31,R19
00b2e0 f410      	BRSH _0x2060166
                +
00b2e1 892e     +LDD R18 , Y + 22
00b2e2 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
00b2e3 940e c493 	CALL SUBOPT_0x15D
00b2e5 8dac      	LDD  R26,Y+28
00b2e6 8dbd      	LDD  R27,Y+28+1
00b2e7 940e d570 	CALL SUBOPT_0x3C0
00b2e9 8dac      	LDD  R26,Y+28
00b2ea 8dbd      	LDD  R27,Y+28+1
00b2eb 9690      	ADIW R26,32
00b2ec 940e c4a7 	CALL SUBOPT_0x161
00b2ee 01d9      	MOVW R26,R18
00b2ef 940e a718 	CALL _mem_cpy_G103
                 _0x2060151:
00b2f1 01f9      	MOVW R30,R18
00b2f2 940e c64f 	CALL SUBOPT_0x1A7
00b2f4 83ee      	STD  Y+6,R30
00b2f5 83ff      	STD  Y+6+1,R31
00b2f6 8dea      	LDD  R30,Y+26
00b2f7 8dfb      	LDD  R31,Y+26+1
00b2f8 940e d575 	CALL SUBOPT_0x3C1
00b2fa 01d0      	MOVW R26,R0
00b2fb 940e d9ff 	CALL __PUTDP1
00b2fd 89ac      	LDD  R26,Y+20
00b2fe 89bd      	LDD  R27,Y+20+1
00b2ff 940e d57e 	CALL SUBOPT_0x3C2
00b301 89ee      	LDD  R30,Y+22
00b302 89ff      	LDD  R31,Y+22+1
00b303 1be2      	SUB  R30,R18
00b304 0bf3      	SBC  R31,R19
00b305 8bee      	STD  Y+22,R30
00b306 8bff      	STD  Y+22+1,R31
00b307 cee6      	RJMP _0x2060152
                 _0x2060153:
00b308 e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00b309 940e daa0 	CALL __LOADLOCR6
00b30b 966c      	ADIW R28,28
00b30c 9508      	RET
                 _f_write:
00b30d 93ba      	ST   -Y,R27
00b30e 93aa      	ST   -Y,R26
00b30f 972a      	SBIW R28,10
00b310 940e da99 	CALL __SAVELOCR6
00b312 89ec      	LDD  R30,Y+20
00b313 89fd      	LDD  R31,Y+20+1
00b314 83ee      	STD  Y+6,R30
00b315 83ff      	STD  Y+6+1,R31
00b316 89a8      	LDD  R26,Y+16
00b317 89b9      	LDD  R27,Y+16+1
00b318 940e c2e2 	CALL SUBOPT_0x115
00b31a 940e d585 	CALL SUBOPT_0x3C3
00b31c 8de8      	LDD  R30,Y+24
00b31d 8df9      	LDD  R31,Y+24+1
00b31e 940e d4f6 	CALL SUBOPT_0x3AF
00b320 f011      	BREQ _0x2060167
00b321 2fe1      	MOV  R30,R17
00b322 c181      	RJMP _0x20E000B
                 _0x2060167:
00b323 89ee      	LDD  R30,Y+22
00b324 89ff      	LDD  R31,Y+22+1
00b325 81a4      	LDD  R26,Z+4
00b326 78a0      	ANDI R26,LOW(0x80)
00b327 f011      	BREQ _0x2060168
00b328 e0e2      	LDI  R30,LOW(2)
00b329 c17a      	RJMP _0x20E000B
                 _0x2060168:
00b32a 89ee      	LDD  R30,Y+22
00b32b 89ff      	LDD  R31,Y+22+1
00b32c 81a4      	LDD  R26,Z+4
00b32d 70a2      	ANDI R26,LOW(0x2)
00b32e f411      	BRNE _0x2060169
00b32f e0e7      	LDI  R30,LOW(7)
00b330 c173      	RJMP _0x20E000B
                 _0x2060169:
00b331 89ee      	LDD  R30,Y+22
00b332 89ff      	LDD  R31,Y+22+1
                +
00b333 85a2     +LDD R26 , Z + 10
00b334 85b3     +LDD R27 , Z + 10 + 1
00b335 8584     +LDD R24 , Z + 10 + 2
00b336 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b337 89ea      	LDD  R30,Y+18
00b338 89fb      	LDD  R31,Y+18+1
00b339 940e d44d 	CALL SUBOPT_0x395
00b33b 937f      	PUSH R23
00b33c 936f      	PUSH R22
00b33d 93ff      	PUSH R31
00b33e 93ef      	PUSH R30
00b33f 940e d588 	CALL SUBOPT_0x3C4
00b341 91af      	POP  R26
00b342 91bf      	POP  R27
00b343 918f      	POP  R24
00b344 919f      	POP  R25
00b345 940e da94 	CALL __CPD21
00b347 f418      	BRSH _0x206016A
00b348 e0e0      	LDI  R30,LOW(0)
00b349 8bea      	STD  Y+18,R30
00b34a 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
00b34b 89ea      	LDD  R30,Y+18
00b34c 89fb      	LDD  R31,Y+18+1
00b34d 9730      	SBIW R30,0
00b34e f411      	BRNE PC+3
00b34f 940c b48a 	JMP _0x206016D
00b351 940e d58e 	CALL SUBOPT_0x3C5
00b353 940e d504 	CALL SUBOPT_0x3B1
00b355 f011      	BREQ PC+3
00b356 940c b44f 	JMP _0x206016E
00b358 89ee      	LDD  R30,Y+22
00b359 89ff      	LDD  R31,Y+22+1
00b35a 8005      	LDD  R0,Z+5
00b35b 940e d595 	CALL SUBOPT_0x3C6
00b35d 81e2      	LDD  R30,Z+2
00b35e 160e      	CP   R0,R30
00b35f f410      	BRSH PC+3
00b360 940c b3aa 	JMP _0x206016F
00b362 89ae      	LDD  R26,Y+22
00b363 89bf      	LDD  R27,Y+22+1
00b364 9616      	ADIW R26,6
00b365 940e d45a 	CALL SUBOPT_0x397
00b367 f4c1      	BRNE _0x2060170
00b368 89ae      	LDD  R26,Y+22
00b369 89bf      	LDD  R27,Y+22+1
00b36a 961e      	ADIW R26,14
00b36b 940e d9f4 	CALL __GETD1P
00b36d 940e c20f 	CALL SUBOPT_0xEF
00b36f 940e da7d 	CALL __CPD10
00b371 f469      	BRNE _0x2060171
00b372 940e d585 	CALL SUBOPT_0x3C3
00b374 940e bd0c 	CALL SUBOPT_0x2C
00b376 940e a9dc 	CALL _create_chain_G103
00b378 940e c205 	CALL SUBOPT_0xED
                +
00b37a 89ae     +LDD R26 , Y + 22
00b37b 89bf     +LDD R27 , Y + 22 + 1
00b37c 961e     +ADIW R26 , 14
00b37d 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
00b37f c008      	RJMP _0x2060172
                 _0x2060170:
00b380 940e d585 	CALL SUBOPT_0x3C3
00b382 940e d59a 	CALL SUBOPT_0x3C7
00b384 940e a9dc 	CALL _create_chain_G103
00b386 940e c205 	CALL SUBOPT_0xED
                 _0x2060172:
00b388 940e c194 	CALL SUBOPT_0xDC
00b38a 940e da7d 	CALL __CPD10
00b38c f409      	BRNE _0x2060173
00b38d c0fc      	RJMP _0x206016D
                 _0x2060173:
00b38e 940e bc2e 	CALL SUBOPT_0xB
00b390 940e d406 	CALL SUBOPT_0x389
00b392 f421      	BRNE _0x2060174
00b393 940e d5a1 	CALL SUBOPT_0x3C8
00b395 e0e2      	LDI  R30,LOW(2)
00b396 c10d      	RJMP _0x20E000B
                 _0x2060174:
00b397 940e be60 	CALL SUBOPT_0x5C
00b399 f421      	BRNE _0x2060175
00b39a 940e d5a1 	CALL SUBOPT_0x3C8
00b39c e0e1      	LDI  R30,LOW(1)
00b39d c106      	RJMP _0x20E000B
                 _0x2060175:
00b39e 940e c194 	CALL SUBOPT_0xDC
                +
00b3a0 89ae     +LDD R26 , Y + 22
00b3a1 89bf     +LDD R27 , Y + 22 + 1
00b3a2 9652     +ADIW R26 , 18
00b3a3 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,18
00b3a5 89ae      	LDD  R26,Y+22
00b3a6 89bf      	LDD  R27,Y+22+1
00b3a7 9615      	ADIW R26,5
00b3a8 e0e0      	LDI  R30,LOW(0)
00b3a9 93ec      	ST   X,R30
                 _0x206016F:
00b3aa 89ee      	LDD  R30,Y+22
00b3ab 89ff      	LDD  R31,Y+22+1
00b3ac 81a4      	LDD  R26,Z+4
00b3ad 74a0      	ANDI R26,LOW(0x40)
00b3ae f089      	BREQ _0x2060176
00b3af 940e d595 	CALL SUBOPT_0x3C6
00b3b1 940e d5a8 	CALL SUBOPT_0x3C9
00b3b3 8de9      	LDD  R30,Y+25
00b3b4 8dfa      	LDD  R31,Y+25+1
00b3b5 940e d55b 	CALL SUBOPT_0x3BD
00b3b7 f021      	BREQ _0x2060177
00b3b8 940e d5a1 	CALL SUBOPT_0x3C8
00b3ba e0e1      	LDI  R30,LOW(1)
00b3bb c0e8      	RJMP _0x20E000B
                 _0x2060177:
00b3bc 89ae      	LDD  R26,Y+22
00b3bd 89bf      	LDD  R27,Y+22+1
00b3be 940e d566 	CALL SUBOPT_0x3BE
                 _0x2060176:
00b3c0 940e d585 	CALL SUBOPT_0x3C3
00b3c2 940e d59a 	CALL SUBOPT_0x3C7
00b3c4 940e aa95 	CALL _clust2sect
00b3c6 940e d20a 	CALL SUBOPT_0x33D
00b3c8 940e be05 	CALL SUBOPT_0x4F
00b3ca 940e da7d 	CALL __CPD10
00b3cc f421      	BRNE _0x2060178
00b3cd 940e d5a1 	CALL SUBOPT_0x3C8
00b3cf e0e2      	LDI  R30,LOW(2)
00b3d0 c0d3      	RJMP _0x20E000B
                 _0x2060178:
00b3d1 940e d5b0 	CALL SUBOPT_0x3CA
00b3d3 940e c18f 	CALL SUBOPT_0xDB
00b3d5 940e c08a 	CALL SUBOPT_0xAF
00b3d7 940e d20a 	CALL SUBOPT_0x33D
00b3d9 89aa      	LDD  R26,Y+18
00b3da 89bb      	LDD  R27,Y+18+1
00b3db 940e d51b 	CALL SUBOPT_0x3B5
00b3dd f411      	BRNE PC+3
00b3de 940c b426 	JMP _0x2060179
00b3e0 940e d5b0 	CALL SUBOPT_0x3CA
00b3e2 0fe4      	ADD  R30,R20
00b3e3 1ff5      	ADC  R31,R21
00b3e4 010f      	MOVW R0,R30
00b3e5 940e d595 	CALL SUBOPT_0x3C6
00b3e7 81e2      	LDD  R30,Z+2
00b3e8 940e c654 	CALL SUBOPT_0x1A8
00b3ea f450      	BRSH _0x206017A
00b3eb 940e d595 	CALL SUBOPT_0x3C6
00b3ed 940e cb61 	CALL SUBOPT_0x270
00b3ef 01df      	MOVW R26,R30
00b3f0 940e d5b0 	CALL SUBOPT_0x3CA
00b3f2 1bae      	SUB  R26,R30
00b3f3 0bbf      	SBC  R27,R31
00b3f4 01ad      	MOVW R20,R26
                 _0x206017A:
00b3f5 940e d595 	CALL SUBOPT_0x3C6
00b3f7 940e d528 	CALL SUBOPT_0x3B7
00b3f9 940e be92 	CALL SUBOPT_0x64
00b3fb 2fa4      	MOV  R26,R20
00b3fc 940e a454 	CALL _disk_write
00b3fe 30e0      	CPI  R30,0
00b3ff f021      	BREQ _0x206017B
00b400 940e d5a1 	CALL SUBOPT_0x3C8
00b402 e0e1      	LDI  R30,LOW(1)
00b403 c0a0      	RJMP _0x20E000B
                 _0x206017B:
00b404 940e d5b4 	CALL SUBOPT_0x3CB
00b406 940e d537 	CALL SUBOPT_0x3B9
00b408 f4c0      	BRSH _0x206017C
00b409 940e d5bc 	CALL SUBOPT_0x3CC
                +
00b40b 89a6     +LDD R26 , Z + 22
00b40c 89b7     +LDD R27 , Z + 22 + 1
00b40d 8d80     +LDD R24 , Z + 22 + 2
00b40e 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00b40f 940e c180 	CALL SUBOPT_0xD7
00b411 940e d53f 	CALL SUBOPT_0x3BA
00b413 85a8      	LDD  R26,Y+8
00b414 85b9      	LDD  R27,Y+8+1
00b415 2788      	CLR  R24
00b416 2799      	CLR  R25
00b417 940e c4a7 	CALL SUBOPT_0x161
00b419 e0a0      	LDI  R26,LOW(512)
00b41a e0b2      	LDI  R27,HIGH(512)
00b41b 940e a718 	CALL _mem_cpy_G103
00b41d 89ae      	LDD  R26,Y+22
00b41e 89bf      	LDD  R27,Y+22+1
00b41f 940e d566 	CALL SUBOPT_0x3BE
                 _0x206017C:
00b421 89ae      	LDD  R26,Y+22
00b422 89bf      	LDD  R27,Y+22+1
00b423 940e d548 	CALL SUBOPT_0x3BB
00b425 c04d      	RJMP _0x206016B
                 _0x2060179:
00b426 940e d5b4 	CALL SUBOPT_0x3CB
00b428 940e da8f 	CALL __CPD12
00b42a f0c9      	BREQ _0x206017D
00b42b 940e d58e 	CALL SUBOPT_0x3C5
00b42d 010d      	MOVW R0,R26
00b42e 940e d588 	CALL SUBOPT_0x3C4
00b430 01d0      	MOVW R26,R0
00b431 940e da94 	CALL __CPD21
00b433 f458      	BRSH _0x206017F
00b434 940e d595 	CALL SUBOPT_0x3C6
00b436 940e d5a8 	CALL SUBOPT_0x3C9
00b438 940e be92 	CALL SUBOPT_0x64
00b43a e0a1      	LDI  R26,LOW(1)
00b43b 940e a3ef 	CALL _disk_read
00b43d 30e0      	CPI  R30,0
00b43e f409      	BRNE _0x2060180
                 _0x206017F:
00b43f c004      	RJMP _0x206017E
                 _0x2060180:
00b440 940e d5a1 	CALL SUBOPT_0x3C8
00b442 e0e1      	LDI  R30,LOW(1)
00b443 c060      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
00b444 940e be05 	CALL SUBOPT_0x4F
                +
00b446 89ae     +LDD R26 , Y + 22
00b447 89bf     +LDD R27 , Y + 22 + 1
00b448 9656     +ADIW R26 , 22
00b449 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,22
00b44b 89ae      	LDD  R26,Y+22
00b44c 89bf      	LDD  R27,Y+22+1
00b44d 940e d56b 	CALL SUBOPT_0x3BF
                 _0x206016E:
00b44f 89ae      	LDD  R26,Y+22
00b450 89bf      	LDD  R27,Y+22+1
00b451 940e d570 	CALL SUBOPT_0x3C0
00b453 e0a0      	LDI  R26,LOW(512)
00b454 e0b2      	LDI  R27,HIGH(512)
00b455 1bae      	SUB  R26,R30
00b456 0bbf      	SBC  R27,R31
00b457 019d      	MOVW R18,R26
00b458 89ea      	LDD  R30,Y+18
00b459 89fb      	LDD  R31,Y+18+1
00b45a 17e2      	CP   R30,R18
00b45b 07f3      	CPC  R31,R19
00b45c f410      	BRSH _0x2060181
                +
00b45d 892a     +LDD R18 , Y + 18
00b45e 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
00b45f 89ae      	LDD  R26,Y+22
00b460 89bf      	LDD  R27,Y+22+1
00b461 940e d570 	CALL SUBOPT_0x3C0
00b463 89ae      	LDD  R26,Y+22
00b464 89bf      	LDD  R27,Y+22+1
00b465 9690      	ADIW R26,32
00b466 940e c4a7 	CALL SUBOPT_0x161
00b468 940e c5ee 	CALL SUBOPT_0x195
00b46a 01d9      	MOVW R26,R18
00b46b 940e a718 	CALL _mem_cpy_G103
00b46d 89ae      	LDD  R26,Y+22
00b46e 89bf      	LDD  R27,Y+22+1
00b46f 9614      	ADIW R26,4
00b470 91ec      	LD   R30,X
00b471 64e0      	ORI  R30,0x40
00b472 93ec      	ST   X,R30
                 _0x206016B:
00b473 01f9      	MOVW R30,R18
00b474 940e c64f 	CALL SUBOPT_0x1A7
00b476 83ee      	STD  Y+6,R30
00b477 83ff      	STD  Y+6+1,R31
00b478 89ee      	LDD  R30,Y+22
00b479 89ff      	LDD  R31,Y+22+1
00b47a 940e d575 	CALL SUBOPT_0x3C1
00b47c 01d0      	MOVW R26,R0
00b47d 940e d9ff 	CALL __PUTDP1
00b47f 89a8      	LDD  R26,Y+16
00b480 89b9      	LDD  R27,Y+16+1
00b481 940e d57e 	CALL SUBOPT_0x3C2
00b483 89ea      	LDD  R30,Y+18
00b484 89fb      	LDD  R31,Y+18+1
00b485 1be2      	SUB  R30,R18
00b486 0bf3      	SBC  R31,R19
00b487 8bea      	STD  Y+18,R30
00b488 8bfb      	STD  Y+18+1,R31
00b489 cec1      	RJMP _0x206016C
                 _0x206016D:
00b48a 940e d58e 	CALL SUBOPT_0x3C5
00b48c 010d      	MOVW R0,R26
00b48d 940e d588 	CALL SUBOPT_0x3C4
00b48f 01d0      	MOVW R26,R0
00b490 940e da8f 	CALL __CPD12
00b492 f450      	BRSH _0x2060182
00b493 89ae      	LDD  R26,Y+22
00b494 89bf      	LDD  R27,Y+22+1
00b495 9616      	ADIW R26,6
00b496 940e d9f4 	CALL __GETD1P
                +
00b498 89ae     +LDD R26 , Y + 22
00b499 89bf     +LDD R27 , Y + 22 + 1
00b49a 961a     +ADIW R26 , 10
00b49b 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
00b49d 89ae      	LDD  R26,Y+22
00b49e 89bf      	LDD  R27,Y+22+1
00b49f 9614      	ADIW R26,4
00b4a0 91ec      	LD   R30,X
00b4a1 62e0      	ORI  R30,0x20
00b4a2 93ec      	ST   X,R30
00b4a3 e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00b4a4 940e daa0 	CALL __LOADLOCR6
00b4a6 9668      	ADIW R28,24
00b4a7 9508      	RET
                 _f_sync:
00b4a8 93ba      	ST   -Y,R27
00b4a9 93aa      	ST   -Y,R26
00b4aa 9724      	SBIW R28,4
00b4ab 940e da9b 	CALL __SAVELOCR4
00b4ad 940e d44a 	CALL SUBOPT_0x394
00b4af 85ea      	LDD  R30,Y+10
00b4b0 85fb      	LDD  R31,Y+10+1
00b4b1 940e d4f6 	CALL SUBOPT_0x3AF
00b4b3 f011      	BREQ PC+3
00b4b4 940c b524 	JMP _0x2060183
00b4b6 85e8      	LDD  R30,Y+8
00b4b7 85f9      	LDD  R31,Y+8+1
00b4b8 81a4      	LDD  R26,Z+4
00b4b9 72a0      	ANDI R26,LOW(0x20)
00b4ba f411      	BRNE PC+3
00b4bb 940c b524 	JMP _0x2060184
00b4bd 81a4      	LDD  R26,Z+4
00b4be 74a0      	ANDI R26,LOW(0x40)
00b4bf f0a1      	BREQ _0x2060185
00b4c0 940e d434 	CALL SUBOPT_0x391
00b4c2 81e1      	LDD  R30,Z+1
00b4c3 93ea      	ST   -Y,R30
00b4c4 85e9      	LDD  R30,Y+9
00b4c5 85fa      	LDD  R31,Y+9+1
00b4c6 96b0      	ADIW R30,32
00b4c7 93fa      	ST   -Y,R31
00b4c8 93ea      	ST   -Y,R30
00b4c9 85eb      	LDD  R30,Y+11
00b4ca 85fc      	LDD  R31,Y+11+1
00b4cb 940e d55b 	CALL SUBOPT_0x3BD
00b4cd f011      	BREQ _0x2060186
00b4ce e0e1      	LDI  R30,LOW(1)
00b4cf c055      	RJMP _0x20E000A
                 _0x2060186:
00b4d0 85a8      	LDD  R26,Y+8
00b4d1 85b9      	LDD  R27,Y+8+1
00b4d2 940e d566 	CALL SUBOPT_0x3BE
                 _0x2060185:
00b4d4 940e d44a 	CALL SUBOPT_0x394
00b4d6 85ea      	LDD  R30,Y+10
00b4d7 85fb      	LDD  R31,Y+10+1
                +
00b4d8 8da2     +LDD R26 , Z + 26
00b4d9 8db3     +LDD R27 , Z + 26 + 1
00b4da 8d84     +LDD R24 , Z + 26 + 2
00b4db 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
00b4dc 940e d4ee 	CALL SUBOPT_0x3AD
00b4de f011      	BREQ PC+3
00b4df 940c b524 	JMP _0x2060187
00b4e1 85a8      	LDD  R26,Y+8
00b4e2 85b9      	LDD  R27,Y+8+1
00b4e3 965e      	ADIW R26,30
00b4e4 912d      	LD   R18,X+
00b4e5 913c      	LD   R19,X
00b4e6 01d9      	MOVW R26,R18
00b4e7 961b      	ADIW R26,11
00b4e8 91ec      	LD   R30,X
00b4e9 62e0      	ORI  R30,0x20
00b4ea 93ec      	ST   X,R30
00b4eb 85a8      	LDD  R26,Y+8
00b4ec 85b9      	LDD  R27,Y+8+1
00b4ed 961a      	ADIW R26,10
00b4ee 940e d9f4 	CALL __GETD1P
                +
00b4f0 01d9     +MOVW R26 , R18
00b4f1 965c     +ADIW R26 , 28
00b4f2 940e d9ff+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00b4f4 85a8      	LDD  R26,Y+8
00b4f5 85b9      	LDD  R27,Y+8+1
00b4f6 961e      	ADIW R26,14
00b4f7 940e d9f0 	CALL __GETW1P
                +
00b4f9 01d9     +MOVW R26 , R18
00b4fa 965a     +ADIW R26 , 26
00b4fb 93ed     +ST X + , R30
00b4fc 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
00b4fd 85e8      	LDD  R30,Y+8
00b4fe 85f9      	LDD  R31,Y+8+1
                +
00b4ff 85a6     +LDD R26 , Z + 14
00b500 85b7     +LDD R27 , Z + 14 + 1
00b501 8980     +LDD R24 , Z + 14 + 2
00b502 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00b503 01fd      	MOVW R30,R26
00b504 01bc      	MOVW R22,R24
00b505 940e d909 	CALL __LSRD16
                +
00b507 01d9     +MOVW R26 , R18
00b508 9654     +ADIW R26 , 20
00b509 93ed     +ST X + , R30
00b50a 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
00b50b 940e a68a 	CALL _get_fattime
00b50d 940e c08f 	CALL SUBOPT_0xB0
                +
00b50f 01d9     +MOVW R26 , R18
00b510 9656     +ADIW R26 , 22
00b511 940e d9ff+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00b513 85a8      	LDD  R26,Y+8
00b514 85b9      	LDD  R27,Y+8+1
00b515 9614      	ADIW R26,4
00b516 91ec      	LD   R30,X
00b517 7def      	ANDI R30,0xDF
00b518 93ec      	ST   X,R30
00b519 940e d434 	CALL SUBOPT_0x391
00b51b 9634      	ADIW R30,4
00b51c e0a1      	LDI  R26,LOW(1)
00b51d 83a0      	STD  Z+0,R26
00b51e 940e d434 	CALL SUBOPT_0x391
00b520 01df      	MOVW R26,R30
00b521 940e a7f7 	CALL _sync_G103
00b523 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00b524 2fe1      	MOV  R30,R17
                 _0x20E000A:
00b525 940e daa2 	CALL __LOADLOCR4
00b527 962a      	ADIW R28,10
00b528 9508      	RET
                 _f_close:
00b529 93ba      	ST   -Y,R27
00b52a 93aa      	ST   -Y,R26
00b52b 931a      	ST   -Y,R17
00b52c 81a9      	LDD  R26,Y+1
00b52d 81ba      	LDD  R27,Y+1+1
00b52e df79      	RCALL _f_sync
00b52f 2f1e      	MOV  R17,R30
00b530 3010      	CPI  R17,0
00b531 f421      	BRNE _0x2060188
00b532 81a9      	LDD  R26,Y+1
00b533 81ba      	LDD  R27,Y+1+1
00b534 940e c2e2 	CALL SUBOPT_0x115
                 _0x2060188:
00b536 2fe1      	MOV  R30,R17
00b537 c291      	RJMP _0x20E0005
                 _f_lseek:
00b538 940e da2e 	CALL __PUTPARD2
00b53a 9760      	SBIW R28,16
00b53b 931a      	ST   -Y,R17
00b53c 940e d5c4 	CALL SUBOPT_0x3CD
00b53e 89ef      	LDD  R30,Y+23
00b53f 8df8      	LDD  R31,Y+23+1
00b540 940e d4f6 	CALL SUBOPT_0x3AF
00b542 f009      	BREQ _0x2060191
00b543 c18c      	RJMP _0x20E0009
                 _0x2060191:
00b544 89ed      	LDD  R30,Y+21
00b545 89fe      	LDD  R31,Y+21+1
00b546 81a4      	LDD  R26,Z+4
00b547 78a0      	ANDI R26,LOW(0x80)
00b548 f011      	BREQ _0x2060192
00b549 e0e2      	LDI  R30,LOW(2)
00b54a c186      	RJMP _0x20E0008
                 _0x2060192:
00b54b 940e d5c7 	CALL SUBOPT_0x3CE
00b54d 940e d5cd 	CALL SUBOPT_0x3CF
00b54f 940e da8f 	CALL __CPD12
00b551 f428      	BRSH _0x2060194
00b552 89ed      	LDD  R30,Y+21
00b553 89fe      	LDD  R31,Y+21+1
00b554 81a4      	LDD  R26,Z+4
00b555 70a2      	ANDI R26,LOW(0x2)
00b556 f009      	BREQ _0x2060195
                 _0x2060194:
00b557 c004      	RJMP _0x2060193
                 _0x2060195:
00b558 940e d5c7 	CALL SUBOPT_0x3CE
00b55a 940e d5d2 	CALL SUBOPT_0x3D0
                 _0x2060193:
00b55c 89ad      	LDD  R26,Y+21
00b55d 89be      	LDD  R27,Y+21+1
00b55e 9616      	ADIW R26,6
00b55f 940e d323 	CALL SUBOPT_0x36D
00b561 940e d42f 	CALL SUBOPT_0x390
00b563 940e d414 	CALL SUBOPT_0x38B
00b565 940e d5d7 	CALL SUBOPT_0x3D1
00b567 9615      	ADIW R26,5
00b568 efef      	LDI  R30,LOW(255)
00b569 93ec      	ST   X,R30
00b56a 940e d5cd 	CALL SUBOPT_0x3CF
00b56c 940e da89 	CALL __CPD02
00b56e f010      	BRLO PC+3
00b56f 940c b67c 	JMP _0x2060196
00b571 940e d5df 	CALL SUBOPT_0x3D2
00b573 940e cb61 	CALL SUBOPT_0x270
00b575 940e d919 	CALL __CWD1
                +
00b577 e0a0     +LDI R26 , LOW ( 0x200 )
00b578 e0b2     +LDI R27 , HIGH ( 0x200 )
00b579 e080     +LDI R24 , BYTE3 ( 0x200 )
00b57a e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00b57b 940e d93a 	CALL __MULD12U
00b57d 940e d2d6 	CALL SUBOPT_0x360
00b57f 940e cb64 	CALL SUBOPT_0x271
00b581 940e da89 	CALL __CPD02
00b583 f498      	BRSH _0x2060198
00b584 940e d5e4 	CALL SUBOPT_0x3D3
00b586 940e d5e9 	CALL SUBOPT_0x3D4
00b588 937f      	PUSH R23
00b589 936f      	PUSH R22
00b58a 93ff      	PUSH R31
00b58b 93ef      	PUSH R30
00b58c 940e d401 	CALL SUBOPT_0x388
00b58e 940e d5e9 	CALL SUBOPT_0x3D4
00b590 91af      	POP  R26
00b591 91bf      	POP  R27
00b592 918f      	POP  R24
00b593 919f      	POP  R25
00b594 940e da94 	CALL __CPD21
00b596 f408      	BRSH _0x2060199
                 _0x2060198:
00b597 c021      	RJMP _0x2060197
                 _0x2060199:
00b598 940e d401 	CALL SUBOPT_0x388
00b59a 940e c199 	CALL SUBOPT_0xDD
00b59c 01df      	MOVW R26,R30
00b59d 01cb      	MOVW R24,R22
00b59e 940e bebe 	CALL SUBOPT_0x6B
00b5a0 940e c199 	CALL SUBOPT_0xDD
00b5a2 940e d91e 	CALL __COMD1
00b5a4 940e d8a8 	CALL __ANDD12
00b5a6 940e d5d7 	CALL SUBOPT_0x3D1
00b5a8 9616      	ADIW R26,6
00b5a9 940e d9f4 	CALL __GETD1P
00b5ab 940e d5cd 	CALL SUBOPT_0x3CF
00b5ad 940e d8a3 	CALL __SUBD21
                +
00b5af 8ba9     +STD Y + 17 , R26
00b5b0 8bba     +STD Y + 17 + 1 , R27
00b5b1 8b8b     +STD Y + 17 + 2 , R24
00b5b2 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00b5b3 89ad      	LDD  R26,Y+21
00b5b4 89be      	LDD  R27,Y+21+1
00b5b5 9652      	ADIW R26,18
00b5b6 940e d5f2 	CALL SUBOPT_0x3D5
00b5b8 c02b      	RJMP _0x206019A
                 _0x2060197:
00b5b9 89ad      	LDD  R26,Y+21
00b5ba 89be      	LDD  R27,Y+21+1
00b5bb 961e      	ADIW R26,14
00b5bc 940e d5f2 	CALL SUBOPT_0x3D5
00b5be 940e d5f9 	CALL SUBOPT_0x3D6
00b5c0 940e da7d 	CALL __CPD10
00b5c2 f4f9      	BRNE _0x206019B
00b5c3 940e d5c4 	CALL SUBOPT_0x3CD
00b5c5 940e bd0c 	CALL SUBOPT_0x2C
00b5c7 940e d5fe 	CALL SUBOPT_0x3D7
00b5c9 940e d605 	CALL SUBOPT_0x3D8
00b5cb 940e d406 	CALL SUBOPT_0x389
00b5cd f421      	BRNE _0x206019C
00b5ce 940e d60a 	CALL SUBOPT_0x3D9
00b5d0 e0e2      	LDI  R30,LOW(2)
00b5d1 c0ff      	RJMP _0x20E0008
                 _0x206019C:
00b5d2 940e d605 	CALL SUBOPT_0x3D8
00b5d4 940e bd70 	CALL SUBOPT_0x3A
00b5d6 f421      	BRNE _0x206019D
00b5d7 940e d60a 	CALL SUBOPT_0x3D9
00b5d9 e0e1      	LDI  R30,LOW(1)
00b5da c0f6      	RJMP _0x20E0008
                 _0x206019D:
00b5db 940e d5f9 	CALL SUBOPT_0x3D6
                +
00b5dd 89ad     +LDD R26 , Y + 21
00b5de 89be     +LDD R27 , Y + 21 + 1
00b5df 961e     +ADIW R26 , 14
00b5e0 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00b5e2 940e d611 	CALL SUBOPT_0x3DA
                 _0x206019A:
00b5e4 940e d5f9 	CALL SUBOPT_0x3D6
00b5e6 940e da7d 	CALL __CPD10
00b5e8 f411      	BRNE PC+3
00b5e9 940c b67c 	JMP _0x206019E
                 _0x206019F:
00b5eb 940e bebe 	CALL SUBOPT_0x6B
00b5ed 940e d5cd 	CALL SUBOPT_0x3CF
00b5ef 940e da8f 	CALL __CPD12
00b5f1 f010      	BRLO PC+3
00b5f2 940c b643 	JMP _0x20601A1
00b5f4 89ed      	LDD  R30,Y+21
00b5f5 89fe      	LDD  R31,Y+21+1
00b5f6 81a4      	LDD  R26,Z+4
00b5f7 70a2      	ANDI R26,LOW(0x2)
00b5f8 f089      	BREQ _0x20601A2
00b5f9 940e d5c4 	CALL SUBOPT_0x3CD
00b5fb 940e d618 	CALL SUBOPT_0x3DB
00b5fd 940e d5fe 	CALL SUBOPT_0x3D7
00b5ff 940e d5f9 	CALL SUBOPT_0x3D6
00b601 940e da7d 	CALL __CPD10
00b603 f429      	BRNE _0x20601A3
00b604 940e bebe 	CALL SUBOPT_0x6B
00b606 940e d5d2 	CALL SUBOPT_0x3D0
00b608 c03a      	RJMP _0x20601A1
                 _0x20601A3:
00b609 c00a      	RJMP _0x20601A4
                 _0x20601A2:
00b60a 940e d5c4 	CALL SUBOPT_0x3CD
00b60c 940e d618 	CALL SUBOPT_0x3DB
00b60e 940e a86b 	CALL _get_fat
                +
00b610 87ed     +STD Y + 13 , R30
00b611 87fe     +STD Y + 13 + 1 , R31
00b612 876f     +STD Y + 13 + 2 , R22
00b613 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
                 _0x20601A4:
00b614 940e d605 	CALL SUBOPT_0x3D8
00b616 940e bd70 	CALL SUBOPT_0x3A
00b618 f421      	BRNE _0x20601A5
00b619 940e d60a 	CALL SUBOPT_0x3D9
00b61b e0e1      	LDI  R30,LOW(1)
00b61c c0b4      	RJMP _0x20E0008
                 _0x20601A5:
00b61d 940e d605 	CALL SUBOPT_0x3D8
00b61f 940e d36e 	CALL SUBOPT_0x376
00b621 f048      	BRLO _0x20601A7
00b622 940e d5df 	CALL SUBOPT_0x3D2
00b624 940e d46e 	CALL SUBOPT_0x39B
00b626 940e d605 	CALL SUBOPT_0x3D8
00b628 940e da94 	CALL __CPD21
00b62a f020      	BRLO _0x20601A6
                 _0x20601A7:
00b62b 940e d60a 	CALL SUBOPT_0x3D9
00b62d e0e2      	LDI  R30,LOW(2)
00b62e c0a2      	RJMP _0x20E0008
                 _0x20601A6:
00b62f 940e d611 	CALL SUBOPT_0x3DA
00b631 940e d61d 	CALL SUBOPT_0x3DC
00b633 940e d2fb 	CALL SUBOPT_0x366
00b635 940e d894 	CALL __ADDD12
00b637 01d0      	MOVW R26,R0
00b638 940e d9ff 	CALL __PUTDP1
00b63a 940e d2fb 	CALL SUBOPT_0x366
00b63c 940e d5e4 	CALL SUBOPT_0x3D3
00b63e 940e d89e 	CALL __SUBD12
00b640 940e d5d2 	CALL SUBOPT_0x3D0
00b642 cfa8      	RJMP _0x206019F
                 _0x20601A1:
00b643 940e d61d 	CALL SUBOPT_0x3DC
00b645 940e d5cd 	CALL SUBOPT_0x3CF
00b647 940e d894 	CALL __ADDD12
00b649 01d0      	MOVW R26,R0
00b64a 940e d9ff 	CALL __PUTDP1
00b64c 940e d5cd 	CALL SUBOPT_0x3CF
                +
00b64e e0e0     +LDI R30 , LOW ( 0x200 )
00b64f e0f2     +LDI R31 , HIGH ( 0x200 )
00b650 e060     +LDI R22 , BYTE3 ( 0x200 )
00b651 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00b652 940e d990 	CALL __DIVD21U
                +
00b654 89ad     +LDD R26 , Y + 21
00b655 89be     +LDD R27 , Y + 21 + 1
00b656 9615     +ADIW R26 , 5
00b657 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
00b658 940e d5e4 	CALL SUBOPT_0x3D3
00b65a 70f1      	ANDI R31,HIGH(0x1FF)
00b65b 9730      	SBIW R30,0
00b65c f0f9      	BREQ _0x20601A9
00b65d 940e d5c4 	CALL SUBOPT_0x3CD
00b65f 940e d618 	CALL SUBOPT_0x3DB
00b661 940e aa95 	CALL _clust2sect
00b663 940e d414 	CALL SUBOPT_0x38B
00b665 940e d32a 	CALL SUBOPT_0x36E
00b667 940e da7d 	CALL __CPD10
00b669 f421      	BRNE _0x20601AA
00b66a 940e d60a 	CALL SUBOPT_0x3D9
00b66c e0e2      	LDI  R30,LOW(2)
00b66d c063      	RJMP _0x20E0008
                 _0x20601AA:
00b66e 89ed      	LDD  R30,Y+21
00b66f 89fe      	LDD  R31,Y+21+1
00b670 940e c9e6 	CALL SUBOPT_0x235
00b672 940e d3f3 	CALL SUBOPT_0x386
00b674 940e c08a 	CALL SUBOPT_0xAF
00b676 940e d414 	CALL SUBOPT_0x38B
00b678 89ad      	LDD  R26,Y+21
00b679 89be      	LDD  R27,Y+21+1
00b67a 940e d56b 	CALL SUBOPT_0x3BF
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
00b67c 940e d625 	CALL SUBOPT_0x3DD
00b67e 940e d504 	CALL SUBOPT_0x3B1
00b680 f051      	BREQ _0x20601AC
00b681 89ad      	LDD  R26,Y+21
00b682 89be      	LDD  R27,Y+21+1
00b683 9656      	ADIW R26,22
00b684 940e d9f4 	CALL __GETD1P
00b686 940e d3f3 	CALL SUBOPT_0x386
00b688 940e da8f 	CALL __CPD12
00b68a f409      	BRNE _0x20601AD
                 _0x20601AC:
00b68b c02b      	RJMP _0x20601AB
                 _0x20601AD:
00b68c 89ed      	LDD  R30,Y+21
00b68d 89fe      	LDD  R31,Y+21+1
00b68e 81a4      	LDD  R26,Z+4
00b68f 74a0      	ANDI R26,LOW(0x40)
00b690 f089      	BREQ _0x20601AE
00b691 940e d5df 	CALL SUBOPT_0x3D2
00b693 81e1      	LDD  R30,Z+1
00b694 93ea      	ST   -Y,R30
00b695 940e d5bc 	CALL SUBOPT_0x3CC
00b697 940e d55b 	CALL SUBOPT_0x3BD
00b699 f021      	BREQ _0x20601AF
00b69a 940e d60a 	CALL SUBOPT_0x3D9
00b69c e0e1      	LDI  R30,LOW(1)
00b69d c033      	RJMP _0x20E0008
                 _0x20601AF:
00b69e 89ad      	LDD  R26,Y+21
00b69f 89be      	LDD  R27,Y+21+1
00b6a0 940e d566 	CALL SUBOPT_0x3BE
                 _0x20601AE:
00b6a2 940e d5df 	CALL SUBOPT_0x3D2
00b6a4 81e1      	LDD  R30,Z+1
00b6a5 93ea      	ST   -Y,R30
00b6a6 89ee      	LDD  R30,Y+22
00b6a7 89ff      	LDD  R31,Y+22+1
00b6a8 96b0      	ADIW R30,32
00b6a9 940e d344 	CALL SUBOPT_0x371
00b6ab f021      	BREQ _0x20601B0
00b6ac 940e d60a 	CALL SUBOPT_0x3D9
00b6ae e0e1      	LDI  R30,LOW(1)
00b6af c021      	RJMP _0x20E0008
                 _0x20601B0:
00b6b0 940e d32a 	CALL SUBOPT_0x36E
                +
00b6b2 89ad     +LDD R26 , Y + 21
00b6b3 89be     +LDD R27 , Y + 21 + 1
00b6b4 9656     +ADIW R26 , 22
00b6b5 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
00b6b7 940e d625 	CALL SUBOPT_0x3DD
00b6b9 010d      	MOVW R0,R26
00b6ba 940e d5c7 	CALL SUBOPT_0x3CE
00b6bc 01d0      	MOVW R26,R0
00b6bd 940e da8f 	CALL __CPD12
00b6bf f480      	BRSH _0x20601B1
00b6c0 89ad      	LDD  R26,Y+21
00b6c1 89be      	LDD  R27,Y+21+1
00b6c2 9616      	ADIW R26,6
00b6c3 940e d9f4 	CALL __GETD1P
                +
00b6c5 89ad     +LDD R26 , Y + 21
00b6c6 89be     +LDD R27 , Y + 21 + 1
00b6c7 961a     +ADIW R26 , 10
00b6c8 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,10
00b6ca 89ad      	LDD  R26,Y+21
00b6cb 89be      	LDD  R27,Y+21+1
00b6cc 9614      	ADIW R26,4
00b6cd 91ec      	LD   R30,X
00b6ce 62e0      	ORI  R30,0x20
00b6cf 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
00b6d0 2fe1      	MOV  R30,R17
                 _0x20E0008:
00b6d1 8118      	LDD  R17,Y+0
00b6d2 9667      	ADIW R28,23
00b6d3 9508      	RET
                 _f_getfree:
00b6d4 93ba      	ST   -Y,R27
00b6d5 93aa      	ST   -Y,R26
00b6d6 9760      	SBIW R28,16
00b6d7 940e da99 	CALL __SAVELOCR6
00b6d9 01fe      	MOVW R30,R28
00b6da 967a      	ADIW R30,26
00b6db 93fa      	ST   -Y,R31
00b6dc 93ea      	ST   -Y,R30
00b6dd 940e cbc1 	CALL SUBOPT_0x280
00b6df e0a0      	LDI  R26,LOW(0)
00b6e0 940e ae42 	CALL _chk_mounted
00b6e2 2f1e      	MOV  R17,R30
00b6e3 3010      	CPI  R17,0
00b6e4 f011      	BREQ _0x20601C3
00b6e5 2fe1      	MOV  R30,R17
00b6e6 c0c4      	RJMP _0x20E0006
                 _0x20601C3:
00b6e7 940e d595 	CALL SUBOPT_0x3C6
00b6e9 010f      	MOVW R0,R30
00b6ea 963e      	ADIW R30,14
00b6eb 01df      	MOVW R26,R30
00b6ec 940e d9f4 	CALL __GETD1P
00b6ee 937f      	PUSH R23
00b6ef 936f      	PUSH R22
00b6f0 93ff      	PUSH R31
00b6f1 93ef      	PUSH R30
00b6f2 01d0      	MOVW R26,R0
00b6f3 965e      	ADIW R26,30
00b6f4 940e d9f4 	CALL __GETD1P
                +
00b6f6 50e2     +SUBI R30 , LOW ( 2 )
00b6f7 40f0     +SBCI R31 , HIGH ( 2 )
00b6f8 4060     +SBCI R22 , BYTE3 ( 2 )
00b6f9 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00b6fa 91af      	POP  R26
00b6fb 91bf      	POP  R27
00b6fc 918f      	POP  R24
00b6fd 919f      	POP  R25
00b6fe 940e da8f 	CALL __CPD12
00b700 f038      	BRLO _0x20601C4
00b701 940e d595 	CALL SUBOPT_0x3C6
00b703 963e      	ADIW R30,14
00b704 01df      	MOVW R26,R30
00b705 940e d9f4 	CALL __GETD1P
00b707 c09e      	RJMP _0x20E0007
                 _0x20601C4:
00b708 940e d595 	CALL SUBOPT_0x3C6
00b70a 8100      	LD   R16,Z
00b70b e0e0      	LDI  R30,LOW(0)
                +
00b70c 8bea     +STD Y + 18 , R30
00b70d 8beb     +STD Y + 18 + 1 , R30
00b70e 8bec     +STD Y + 18 + 2 , R30
00b70f 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
00b710 3001      	CPI  R16,1
00b711 f5b9      	BRNE _0x20601C5
00b712 940e d423 	CALL SUBOPT_0x38E
00b714 940e d4d9 	CALL SUBOPT_0x3AA
                 _0x20601C7:
00b716 940e d585 	CALL SUBOPT_0x3C3
00b718 940e d3dc 	CALL SUBOPT_0x383
00b71a 940e a86b 	CALL _get_fat
00b71c 940e c0b8 	CALL SUBOPT_0xB8
00b71e 940e be50 	CALL SUBOPT_0x59
00b720 940e bd70 	CALL SUBOPT_0x3A
00b722 f411      	BRNE _0x20601C9
00b723 e0e1      	LDI  R30,LOW(1)
00b724 c086      	RJMP _0x20E0006
                 _0x20601C9:
00b725 940e be50 	CALL SUBOPT_0x59
00b727 940e d406 	CALL SUBOPT_0x389
00b729 f411      	BRNE _0x20601CA
00b72a e0e2      	LDI  R30,LOW(2)
00b72b c07f      	RJMP _0x20E0006
                 _0x20601CA:
00b72c 940e c0b3 	CALL SUBOPT_0xB7
00b72e 940e da7d 	CALL __CPD10
00b730 f411      	BRNE _0x20601CB
00b731 940e d62c 	CALL SUBOPT_0x3DE
                 _0x20601CB:
00b733 940e be77 	CALL SUBOPT_0x60
00b735 940e c0da 	CALL SUBOPT_0xBE
00b737 940e d4d9 	CALL SUBOPT_0x3AA
00b739 937f      	PUSH R23
00b73a 936f      	PUSH R22
00b73b 93ff      	PUSH R31
00b73c 93ef      	PUSH R30
00b73d 940e d595 	CALL SUBOPT_0x3C6
00b73f 940e d46e 	CALL SUBOPT_0x39B
00b741 91af      	POP  R26
00b742 91bf      	POP  R27
00b743 918f      	POP  R24
00b744 919f      	POP  R25
00b745 940e da94 	CALL __CPD21
00b747 f270      	BRLO _0x20601C7
00b748 c04d      	RJMP _0x20601CC
                 _0x20601C5:
00b749 940e d595 	CALL SUBOPT_0x3C6
00b74b 940e d46e 	CALL SUBOPT_0x39B
00b74d 940e d4d9 	CALL SUBOPT_0x3AA
00b74f 940e d595 	CALL SUBOPT_0x3C6
00b751 96b2      	ADIW R30,34
00b752 01df      	MOVW R26,R30
00b753 940e d9f4 	CALL __GETD1P
00b755 940e d17d 	CALL SUBOPT_0x328
00b757 940e bbd8 	CALL SUBOPT_0x0
                 _0x20601CE:
00b759 2e02      	MOV  R0,R18
00b75a 2a03      	OR   R0,R19
00b75b f4c1      	BRNE _0x20601D0
00b75c 940e d585 	CALL SUBOPT_0x3C3
00b75e 940e c194 	CALL SUBOPT_0xDC
00b760 940e c0da 	CALL SUBOPT_0xBE
00b762 940e c205 	CALL SUBOPT_0xED
00b764 9731      	SBIW R30,1
00b765 4060      	SBCI R22,0
00b766 4070      	SBCI R23,0
00b767 01df      	MOVW R26,R30
00b768 01cb      	MOVW R24,R22
00b769 940e d4ee 	CALL SUBOPT_0x3AD
00b76b f011      	BREQ _0x20601D1
00b76c 2fe1      	MOV  R30,R17
00b76d c03d      	RJMP _0x20E0006
                 _0x20601D1:
00b76e 940e d595 	CALL SUBOPT_0x3C6
00b770 96f2      	ADIW R30,50
00b771 01af      	MOVW R20,R30
                +
00b772 e020     +LDI R18 , LOW ( 512 )
00b773 e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
00b774 3002      	CPI  R16,2
00b775 f461      	BRNE _0x20601D2
00b776 01da      	MOVW R26,R20
00b777 940e d9f0 	CALL __GETW1P
00b779 9730      	SBIW R30,0
00b77a f411      	BRNE _0x20601D3
00b77b 940e d62c 	CALL SUBOPT_0x3DE
                 _0x20601D3:
                +
00b77d 5f4e     +SUBI R20 , LOW ( - 2 )
00b77e 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
00b77f 5022     +SUBI R18 , LOW ( 2 )
00b780 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
00b781 c00c      	RJMP _0x20601D4
                 _0x20601D2:
00b782 01da      	MOVW R26,R20
00b783 940e d3b5 	CALL SUBOPT_0x37F
00b785 940e da7d 	CALL __CPD10
00b787 f411      	BRNE _0x20601D5
00b788 940e d62c 	CALL SUBOPT_0x3DE
                 _0x20601D5:
                +
00b78a 5f4c     +SUBI R20 , LOW ( - 4 )
00b78b 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
00b78c 5024     +SUBI R18 , LOW ( 4 )
00b78d 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
00b78e 940e be77 	CALL SUBOPT_0x60
00b790 9731      	SBIW R30,1
00b791 4060      	SBCI R22,0
00b792 4070      	SBCI R23,0
00b793 940e d4d9 	CALL SUBOPT_0x3AA
00b795 f619      	BRNE _0x20601CE
                 _0x20601CC:
00b796 940e d595 	CALL SUBOPT_0x3C6
00b798 963e      	ADIW R30,14
00b799 940e d41e 	CALL SUBOPT_0x38D
00b79b 940e ca04 	CALL SUBOPT_0x23B
00b79d 3003      	CPI  R16,3
00b79e f429      	BRNE _0x20601D6
00b79f 940e d595 	CALL SUBOPT_0x3C6
00b7a1 9635      	ADIW R30,5
00b7a2 e0a1      	LDI  R26,LOW(1)
00b7a3 83a0      	STD  Z+0,R26
                 _0x20601D6:
00b7a4 940e c17b 	CALL SUBOPT_0xD6
                 _0x20E0007:
00b7a6 8da8      	LDD  R26,Y+24
00b7a7 8db9      	LDD  R27,Y+24+1
00b7a8 940e d9ff 	CALL __PUTDP1
00b7aa e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
00b7ab 940e daa0 	CALL __LOADLOCR6
00b7ad 966c      	ADIW R28,28
00b7ae 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00b7af 93aa      	ST   -Y,R26
                 _0x2080003:
00b7b0 91e0 00c0 	LDS  R30,192
00b7b2 72e0      	ANDI R30,LOW(0x20)
00b7b3 f3e1      	BREQ _0x2080003
00b7b4 81e8      	LD   R30,Y
00b7b5 93e0 00c6 	STS  198,R30
00b7b7 9621      	ADIW R28,1
00b7b8 9508      	RET
                 _puts:
00b7b9 93ba      	ST   -Y,R27
00b7ba 93aa      	ST   -Y,R26
00b7bb 931a      	ST   -Y,R17
                 _0x2080006:
00b7bc 81a9      	LDD  R26,Y+1
00b7bd 81ba      	LDD  R27,Y+1+1
00b7be 91ed      	LD   R30,X+
00b7bf 83a9      	STD  Y+1,R26
00b7c0 83ba      	STD  Y+1+1,R27
00b7c1 2f1e      	MOV  R17,R30
00b7c2 30e0      	CPI  R30,0
00b7c3 f019      	BREQ _0x2080008
00b7c4 2fa1      	MOV  R26,R17
00b7c5 dfe9      	RCALL _putchar
00b7c6 cff5      	RJMP _0x2080006
                 _0x2080008:
00b7c7 e0aa      	LDI  R26,LOW(10)
00b7c8 dfe6      	RCALL _putchar
                 _0x20E0005:
00b7c9 8118      	LDD  R17,Y+0
00b7ca 9623      	ADIW R28,3
00b7cb 9508      	RET
                 _put_buff_G104:
00b7cc 940e bf59 	CALL SUBOPT_0x81
00b7ce 81aa      	LDD  R26,Y+2
00b7cf 81bb      	LDD  R27,Y+2+1
00b7d0 9612      	ADIW R26,2
00b7d1 940e d9f0 	CALL __GETW1P
00b7d3 9730      	SBIW R30,0
00b7d4 f129      	BREQ _0x208002A
00b7d5 81aa      	LDD  R26,Y+2
00b7d6 81bb      	LDD  R27,Y+2+1
00b7d7 9614      	ADIW R26,4
00b7d8 940e d9f0 	CALL __GETW1P
00b7da 018f      	MOVW R16,R30
00b7db 9730      	SBIW R30,0
00b7dc f061      	BREQ _0x208002C
                +
00b7dd 3002     +CPI R16 , LOW ( 2 )
00b7de e0e0     +LDI R30 , HIGH ( 2 )
00b7df 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00b7e0 f0c0      	BRLO _0x208002D
00b7e1 01f8      	MOVW R30,R16
00b7e2 9731      	SBIW R30,1
00b7e3 018f      	MOVW R16,R30
                +
00b7e4 81aa     +LDD R26 , Y + 2
00b7e5 81bb     +LDD R27 , Y + 2 + 1
00b7e6 9614     +ADIW R26 , 4
00b7e7 93ed     +ST X + , R30
00b7e8 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
00b7e9 81aa      	LDD  R26,Y+2
00b7ea 81bb      	LDD  R27,Y+2+1
00b7eb 9612      	ADIW R26,2
00b7ec 940e bf3c 	CALL SUBOPT_0x7C
00b7ee 9731      	SBIW R30,1
00b7ef 81ac      	LDD  R26,Y+4
00b7f0 83a0      	STD  Z+0,R26
00b7f1 81aa      	LDD  R26,Y+2
00b7f2 81bb      	LDD  R27,Y+2+1
00b7f3 940e d9f0 	CALL __GETW1P
00b7f5 23ff      	TST  R31
00b7f6 f012      	BRMI _0x208002E
00b7f7 940e bf3c 	CALL SUBOPT_0x7C
                 _0x208002E:
                 _0x208002D:
00b7f9 c006      	RJMP _0x208002F
                 _0x208002A:
00b7fa 81aa      	LDD  R26,Y+2
00b7fb 81bb      	LDD  R27,Y+2+1
00b7fc efef      	LDI  R30,LOW(65535)
00b7fd efff      	LDI  R31,HIGH(65535)
00b7fe 93ed      	ST   X+,R30
00b7ff 93fc      	ST   X,R31
                 _0x208002F:
00b800 8119      	LDD  R17,Y+1
00b801 8108      	LDD  R16,Y+0
00b802 9625      	ADIW R28,5
00b803 9508      	RET
                 __ftoe_G104:
00b804 940e d27a 	CALL SUBOPT_0x34F
00b806 83e8      	ST   Y,R30
00b807 e0e0      	LDI  R30,LOW(0)
00b808 83e9      	STD  Y+1,R30
00b809 e8e0      	LDI  R30,LOW(128)
00b80a 83ea      	STD  Y+2,R30
00b80b e3ef      	LDI  R30,LOW(63)
00b80c 83eb      	STD  Y+3,R30
00b80d 940e da9b 	CALL __SAVELOCR4
00b80f 85ee      	LDD  R30,Y+14
00b810 85ff      	LDD  R31,Y+14+1
00b811 3fef      	CPI  R30,LOW(0xFFFF)
00b812 efaf      	LDI  R26,HIGH(0xFFFF)
00b813 07fa      	CPC  R31,R26
00b814 f459      	BRNE _0x2080037
00b815 940e c5ee 	CALL SUBOPT_0x195
                +
00b817 e8a0     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
00b818 e6b7     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
00b819 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
00b81a e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
00b81b 940e a175 	CALL _strcpyf
00b81d 940e daa2 	CALL __LOADLOCR4
00b81f c33a      	RJMP _0x20E0003
                 _0x2080037:
00b820 3fef      	CPI  R30,LOW(0x7FFF)
00b821 e7af      	LDI  R26,HIGH(0x7FFF)
00b822 07fa      	CPC  R31,R26
00b823 f459      	BRNE _0x2080036
00b824 940e c5ee 	CALL SUBOPT_0x195
                +
00b826 e8a1     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
00b827 e6b7     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
00b828 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
00b829 e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
00b82a 940e a175 	CALL _strcpyf
00b82c 940e daa2 	CALL __LOADLOCR4
00b82e c32b      	RJMP _0x20E0003
                 _0x2080036:
00b82f 85ab      	LDD  R26,Y+11
00b830 30a7      	CPI  R26,LOW(0x7)
00b831 f010      	BRLO _0x2080039
00b832 e0e6      	LDI  R30,LOW(6)
00b833 87eb      	STD  Y+11,R30
                 _0x2080039:
00b834 851b      	LDD  R17,Y+11
                 _0x208003A:
00b835 2fe1      	MOV  R30,R17
00b836 5011      	SUBI R17,1
00b837 30e0      	CPI  R30,0
00b838 f029      	BREQ _0x208003C
00b839 940e d631 	CALL SUBOPT_0x3DF
00b83b 940e c070 	CALL SUBOPT_0xAA
00b83d cff7      	RJMP _0x208003A
                 _0x208003C:
00b83e 940e c194 	CALL SUBOPT_0xDC
00b840 940e da7d 	CALL __CPD10
00b842 f431      	BRNE _0x208003D
00b843 e030      	LDI  R19,LOW(0)
00b844 940e d631 	CALL SUBOPT_0x3DF
00b846 940e c070 	CALL SUBOPT_0xAA
00b848 c034      	RJMP _0x208003E
                 _0x208003D:
00b849 853b      	LDD  R19,Y+11
00b84a 940e d634 	CALL SUBOPT_0x3E0
00b84c f009      	BREQ PC+2
00b84d f410      	BRCC PC+3
00b84e 940c b860 	JMP  _0x208003F
00b850 940e d631 	CALL SUBOPT_0x3DF
00b852 940e c070 	CALL SUBOPT_0xAA
                 _0x2080040:
00b854 940e d634 	CALL SUBOPT_0x3E0
00b856 f040      	BRLO _0x2080042
00b857 940e bc2e 	CALL SUBOPT_0xB
00b859 940e c890 	CALL SUBOPT_0x203
00b85b 940e c205 	CALL SUBOPT_0xED
00b85d 5f3f      	SUBI R19,-LOW(1)
00b85e cff5      	RJMP _0x2080040
                 _0x2080042:
00b85f c00d      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
00b860 940e d634 	CALL SUBOPT_0x3E0
00b862 f430      	BRSH _0x2080046
00b863 940e d306 	CALL SUBOPT_0x368
00b865 940e c205 	CALL SUBOPT_0xED
00b867 5031      	SUBI R19,LOW(1)
00b868 cff7      	RJMP _0x2080044
                 _0x2080046:
00b869 940e d631 	CALL SUBOPT_0x3DF
00b86b 940e c070 	CALL SUBOPT_0xAA
                 _0x2080043:
00b86d 940e c194 	CALL SUBOPT_0xDC
00b86f 940e d2ee 	CALL SUBOPT_0x364
00b871 940e c205 	CALL SUBOPT_0xED
00b873 940e d634 	CALL SUBOPT_0x3E0
00b875 f038      	BRLO _0x2080047
00b876 940e bc2e 	CALL SUBOPT_0xB
00b878 940e c890 	CALL SUBOPT_0x203
00b87a 940e c205 	CALL SUBOPT_0xED
00b87c 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
00b87d e010      	LDI  R17,LOW(0)
                 _0x2080048:
00b87e 85eb      	LDD  R30,Y+11
00b87f 17e1      	CP   R30,R17
00b880 f188      	BRLO _0x208004A
00b881 940e c075 	CALL SUBOPT_0xAB
00b883 940e c890 	CALL SUBOPT_0x203
00b885 940e d2ee 	CALL SUBOPT_0x364
00b887 01df      	MOVW R26,R30
00b888 01cb      	MOVW R24,R22
00b889 940e bbc1 	CALL _floor
00b88b 940e c08f 	CALL SUBOPT_0xB0
00b88d 940e bc2e 	CALL SUBOPT_0xB
00b88f 940e d82b 	CALL __DIVF21
00b891 940e d71a 	CALL __CFD1U
00b893 2f0e      	MOV  R16,R30
00b894 940e d63b 	CALL SUBOPT_0x3E1
00b896 2fe0      	MOV  R30,R16
00b897 5de0      	SUBI R30,-LOW(48)
00b898 93ec      	ST   X,R30
00b899 2fe0      	MOV  R30,R16
00b89a 27ff      	CLR  R31
00b89b 2766      	CLR  R22
00b89c 2777      	CLR  R23
00b89d 940e d753 	CALL __CDF1
00b89f 940e c075 	CALL SUBOPT_0xAB
00b8a1 940e d7dd 	CALL __MULF12
00b8a3 940e bc2e 	CALL SUBOPT_0xB
00b8a5 940e c95c 	CALL SUBOPT_0x220
00b8a7 940e c205 	CALL SUBOPT_0xED
00b8a9 2fe1      	MOV  R30,R17
00b8aa 5f1f      	SUBI R17,-1
00b8ab 30e0      	CPI  R30,0
00b8ac f689      	BRNE _0x2080048
00b8ad 940e d63b 	CALL SUBOPT_0x3E1
00b8af e2ee      	LDI  R30,LOW(46)
00b8b0 93ec      	ST   X,R30
00b8b1 cfcc      	RJMP _0x2080048
                 _0x208004A:
00b8b2 940e bf52 	CALL SUBOPT_0x80
00b8b4 85aa      	LDD  R26,Y+10
00b8b5 83a0      	STD  Z+0,R26
00b8b6 3030      	CPI  R19,0
00b8b7 f42c      	BRGE _0x208004C
00b8b8 9531      	NEG  R19
00b8b9 85a8      	LDD  R26,Y+8
00b8ba 85b9      	LDD  R27,Y+8+1
00b8bb e2ed      	LDI  R30,LOW(45)
00b8bc c003      	RJMP _0x2080137
                 _0x208004C:
00b8bd 85a8      	LDD  R26,Y+8
00b8be 85b9      	LDD  R27,Y+8+1
00b8bf e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
00b8c0 93ec      	ST   X,R30
00b8c1 85e8      	LDD  R30,Y+8
00b8c2 85f9      	LDD  R31,Y+8+1
00b8c3 9631      	ADIW R30,1
00b8c4 940e c5eb 	CALL SUBOPT_0x194
00b8c6 9631      	ADIW R30,1
00b8c7 87e8      	STD  Y+8,R30
00b8c8 87f9      	STD  Y+8+1,R31
00b8c9 9731      	SBIW R30,1
00b8ca 01bf      	MOVW R22,R30
00b8cb 2fa3      	MOV  R26,R19
00b8cc e0ea      	LDI  R30,LOW(10)
00b8cd 940e d973 	CALL __DIVB21
00b8cf 5de0      	SUBI R30,-LOW(48)
00b8d0 01db      	MOVW R26,R22
00b8d1 93ec      	ST   X,R30
00b8d2 940e bf52 	CALL SUBOPT_0x80
00b8d4 01bf      	MOVW R22,R30
00b8d5 2fa3      	MOV  R26,R19
00b8d6 e0ea      	LDI  R30,LOW(10)
00b8d7 940e d9b5 	CALL __MODB21
00b8d9 5de0      	SUBI R30,-LOW(48)
00b8da 01db      	MOVW R26,R22
00b8db 93ec      	ST   X,R30
00b8dc 85a8      	LDD  R26,Y+8
00b8dd 85b9      	LDD  R27,Y+8+1
00b8de e0e0      	LDI  R30,LOW(0)
00b8df 93ec      	ST   X,R30
00b8e0 940e daa2 	CALL __LOADLOCR4
00b8e2 c277      	RJMP _0x20E0003
                 __print_G104:
00b8e3 93ba      	ST   -Y,R27
00b8e4 93aa      	ST   -Y,R26
00b8e5 97ef      	SBIW R28,63
00b8e6 9765      	SBIW R28,21
00b8e7 940e da99 	CALL __SAVELOCR6
00b8e9 e010      	LDI  R17,0
                +
00b8ea 01fe     +MOVW R30 , R28
00b8eb 5ae4     +SUBI R30 , LOW ( - 92 )
00b8ec 4fff     +SBCI R31 , HIGH ( - 92 )
00b8ed 9001     +LD R0 , Z +
00b8ee 9011     +LD R1 , Z +
00b8ef 9161     +LD R22 , Z +
00b8f0 8170     +LD R23 , Z
00b8f1 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00b8f2 940e d20a 	CALL SUBOPT_0x33D
                +
00b8f4 01fe     +MOVW R30 , R28
00b8f5 5ae6     +SUBI R30 , LOW ( - 90 )
00b8f6 4fff     +SBCI R31 , HIGH ( - 90 )
00b8f7 9001     +LD R0 , Z +
00b8f8 81f0     +LD R31 , Z
00b8f9 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00b8fa 83ee      	STD  Y+6,R30
00b8fb 83ff      	STD  Y+6+1,R31
00b8fc 81ae      	LDD  R26,Y+6
00b8fd 81bf      	LDD  R27,Y+6+1
00b8fe 940e c2e2 	CALL SUBOPT_0x115
                 _0x208004E:
00b900 01de      	MOVW R26,R28
00b901 59ae      	SUBI R26,LOW(-(98))
00b902 4fbf      	SBCI R27,HIGH(-(98))
00b903 940e d31b 	CALL SUBOPT_0x36C
                +
00b905 bf6b     +OUT RAMPZ , R22
00b906 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00b907 2f2e      	MOV  R18,R30
00b908 30e0      	CPI  R30,0
00b909 f411      	BRNE PC+3
00b90a 940c baf7 	JMP _0x2080050
00b90c 2fe1      	MOV  R30,R17
00b90d 30e0      	CPI  R30,0
00b90e f439      	BRNE _0x2080054
00b90f 3225      	CPI  R18,37
00b910 f411      	BRNE _0x2080055
00b911 e011      	LDI  R17,LOW(1)
00b912 c002      	RJMP _0x2080056
                 _0x2080055:
00b913 940e d642 	CALL SUBOPT_0x3E2
                 _0x2080056:
00b915 c1e0      	RJMP _0x2080053
                 _0x2080054:
00b916 30e1      	CPI  R30,LOW(0x1)
00b917 f4c1      	BRNE _0x2080057
00b918 3225      	CPI  R18,37
00b919 f419      	BRNE _0x2080058
00b91a 940e d642 	CALL SUBOPT_0x3E2
00b91c c1d8      	RJMP _0x2080138
                 _0x2080058:
00b91d e012      	LDI  R17,LOW(2)
00b91e e0e0      	LDI  R30,LOW(0)
00b91f 8fe9      	STD  Y+25,R30
00b920 e000      	LDI  R16,LOW(0)
00b921 322d      	CPI  R18,45
00b922 f411      	BRNE _0x2080059
00b923 e001      	LDI  R16,LOW(1)
00b924 c1d1      	RJMP _0x2080053
                 _0x2080059:
00b925 322b      	CPI  R18,43
00b926 f419      	BRNE _0x208005A
00b927 e2eb      	LDI  R30,LOW(43)
00b928 8fe9      	STD  Y+25,R30
00b929 c1cc      	RJMP _0x2080053
                 _0x208005A:
00b92a 3220      	CPI  R18,32
00b92b f419      	BRNE _0x208005B
00b92c e2e0      	LDI  R30,LOW(32)
00b92d 8fe9      	STD  Y+25,R30
00b92e c1c7      	RJMP _0x2080053
                 _0x208005B:
00b92f c002      	RJMP _0x208005C
                 _0x2080057:
00b930 30e2      	CPI  R30,LOW(0x2)
00b931 f439      	BRNE _0x208005D
                 _0x208005C:
00b932 e050      	LDI  R21,LOW(0)
00b933 e013      	LDI  R17,LOW(3)
00b934 3320      	CPI  R18,48
00b935 f411      	BRNE _0x208005E
00b936 6800      	ORI  R16,LOW(128)
00b937 c1be      	RJMP _0x2080053
                 _0x208005E:
00b938 c002      	RJMP _0x208005F
                 _0x208005D:
00b939 30e3      	CPI  R30,LOW(0x3)
00b93a f491      	BRNE _0x2080060
                 _0x208005F:
00b93b 3320      	CPI  R18,48
00b93c f010      	BRLO _0x2080062
00b93d 332a      	CPI  R18,58
00b93e f008      	BRLO _0x2080063
                 _0x2080062:
00b93f c007      	RJMP _0x2080061
                 _0x2080063:
00b940 e0aa      	LDI  R26,LOW(10)
00b941 9f5a      	MUL  R21,R26
00b942 2d50      	MOV  R21,R0
00b943 2fe2      	MOV  R30,R18
00b944 53e0      	SUBI R30,LOW(48)
00b945 0f5e      	ADD  R21,R30
00b946 c1af      	RJMP _0x2080053
                 _0x2080061:
00b947 e040      	LDI  R20,LOW(0)
00b948 322e      	CPI  R18,46
00b949 f411      	BRNE _0x2080064
00b94a e014      	LDI  R17,LOW(4)
00b94b c1aa      	RJMP _0x2080053
                 _0x2080064:
00b94c c00f      	RJMP _0x2080065
                 _0x2080060:
00b94d 30e4      	CPI  R30,LOW(0x4)
00b94e f499      	BRNE _0x2080067
00b94f 3320      	CPI  R18,48
00b950 f010      	BRLO _0x2080069
00b951 332a      	CPI  R18,58
00b952 f008      	BRLO _0x208006A
                 _0x2080069:
00b953 c008      	RJMP _0x2080068
                 _0x208006A:
00b954 6200      	ORI  R16,LOW(32)
00b955 e0aa      	LDI  R26,LOW(10)
00b956 9f4a      	MUL  R20,R26
00b957 2d40      	MOV  R20,R0
00b958 2fe2      	MOV  R30,R18
00b959 53e0      	SUBI R30,LOW(48)
00b95a 0f4e      	ADD  R20,R30
00b95b c19a      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
00b95c 362c      	CPI  R18,108
00b95d f419      	BRNE _0x208006B
00b95e 6002      	ORI  R16,LOW(2)
00b95f e015      	LDI  R17,LOW(5)
00b960 c195      	RJMP _0x2080053
                 _0x208006B:
00b961 c004      	RJMP _0x208006C
                 _0x2080067:
00b962 30e5      	CPI  R30,LOW(0x5)
00b963 f011      	BREQ PC+3
00b964 940c baf6 	JMP _0x2080053
                 _0x208006C:
00b966 2fe2      	MOV  R30,R18
00b967 36e3      	CPI  R30,LOW(0x63)
00b968 f459      	BRNE _0x2080071
00b969 940e d64a 	CALL SUBOPT_0x3E3
00b96b 940e d651 	CALL SUBOPT_0x3E4
00b96d 940e d64a 	CALL SUBOPT_0x3E3
00b96f 81a4      	LDD  R26,Z+4
00b970 93aa      	ST   -Y,R26
00b971 940e d658 	CALL SUBOPT_0x3E5
00b973 c181      	RJMP _0x2080072
                 _0x2080071:
00b974 34e5      	CPI  R30,LOW(0x45)
00b975 f011      	BREQ _0x2080075
00b976 36e5      	CPI  R30,LOW(0x65)
00b977 f409      	BRNE _0x2080076
                 _0x2080075:
00b978 c004      	RJMP _0x2080077
                 _0x2080076:
00b979 36e6      	CPI  R30,LOW(0x66)
00b97a f011      	BREQ PC+3
00b97b 940c b9bc 	JMP _0x2080078
                 _0x2080077:
00b97d 01fe      	MOVW R30,R28
00b97e 967a      	ADIW R30,26
00b97f 8be8      	STD  Y+16,R30
00b980 8bf9      	STD  Y+16+1,R31
00b981 940e d65f 	CALL SUBOPT_0x3E6
00b983 940e d9f4 	CALL __GETD1P
00b985 940e c205 	CALL SUBOPT_0xED
00b987 940e d666 	CALL SUBOPT_0x3E7
00b989 85af      	LDD  R26,Y+15
00b98a 23aa      	TST  R26
00b98b f022      	BRMI _0x2080079
00b98c 8da9      	LDD  R26,Y+25
00b98d 32ab      	CPI  R26,LOW(0x2B)
00b98e f049      	BREQ _0x208007B
00b98f c014      	RJMP _0x208007C
                 _0x2080079:
00b990 940e c194 	CALL SUBOPT_0xDC
00b992 940e d6e7 	CALL __ANEGF1
00b994 940e c205 	CALL SUBOPT_0xED
00b996 e2ed      	LDI  R30,LOW(45)
00b997 8fe9      	STD  Y+25,R30
                 _0x208007B:
00b998 ff07      	SBRS R16,7
00b999 c005      	RJMP _0x208007D
00b99a 8de9      	LDD  R30,Y+25
00b99b 93ea      	ST   -Y,R30
00b99c 940e d658 	CALL SUBOPT_0x3E5
00b99e c005      	RJMP _0x208007E
                 _0x208007D:
00b99f 940e d300 	CALL SUBOPT_0x367
00b9a1 9731      	SBIW R30,1
00b9a2 8da9      	LDD  R26,Y+25
00b9a3 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
00b9a4 ff05      	SBRS R16,5
00b9a5 e046      	LDI  R20,LOW(6)
00b9a6 3626      	CPI  R18,102
00b9a7 f441      	BRNE _0x2080080
00b9a8 940e c4e3 	CALL SUBOPT_0x16C
00b9aa 934a      	ST   -Y,R20
00b9ab 89ad      	LDD  R26,Y+21
00b9ac 89be      	LDD  R27,Y+21+1
00b9ad 940e 9e68 	CALL _ftoa
00b9af c007      	RJMP _0x2080081
                 _0x2080080:
00b9b0 940e c4e3 	CALL SUBOPT_0x16C
00b9b2 934a      	ST   -Y,R20
00b9b3 932a      	ST   -Y,R18
00b9b4 89ae      	LDD  R26,Y+22
00b9b5 89bf      	LDD  R27,Y+22+1
00b9b6 de4d      	RCALL __ftoe_G104
                 _0x2080081:
00b9b7 01fe      	MOVW R30,R28
00b9b8 967a      	ADIW R30,26
00b9b9 940e d668 	CALL SUBOPT_0x3E8
00b9bb c024      	RJMP _0x2080082
                 _0x2080078:
00b9bc 37e3      	CPI  R30,LOW(0x73)
00b9bd f451      	BRNE _0x2080084
00b9be 940e d666 	CALL SUBOPT_0x3E7
00b9c0 940e d65f 	CALL SUBOPT_0x3E6
00b9c2 9614      	ADIW R26,4
00b9c3 940e d9f0 	CALL __GETW1P
00b9c5 940e d668 	CALL SUBOPT_0x3E8
00b9c7 c011      	RJMP _0x2080085
                 _0x2080084:
00b9c8 37e0      	CPI  R30,LOW(0x70)
00b9c9 f4d9      	BRNE _0x2080087
00b9ca 940e d666 	CALL SUBOPT_0x3E7
00b9cc 940e d65f 	CALL SUBOPT_0x3E6
00b9ce 9614      	ADIW R26,4
00b9cf 940e d9f4 	CALL __GETD1P
00b9d1 940e d20f 	CALL SUBOPT_0x33E
00b9d3 940e d3dc 	CALL SUBOPT_0x383
00b9d5 940e a1a7 	CALL _strlenf
00b9d7 2f1e      	MOV  R17,R30
00b9d8 6008      	ORI  R16,LOW(8)
                 _0x2080085:
00b9d9 770f      	ANDI R16,LOW(127)
00b9da 3040      	CPI  R20,0
00b9db f011      	BREQ _0x2080089
00b9dc 1741      	CP   R20,R17
00b9dd f008      	BRLO _0x208008A
                 _0x2080089:
00b9de c001      	RJMP _0x2080088
                 _0x208008A:
00b9df 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
00b9e0 e040      	LDI  R20,LOW(0)
00b9e1 e0e0      	LDI  R30,LOW(0)
00b9e2 8fe8      	STD  Y+24,R30
00b9e3 e030      	LDI  R19,LOW(0)
00b9e4 c072      	RJMP _0x208008B
                 _0x2080087:
00b9e5 36e4      	CPI  R30,LOW(0x64)
00b9e6 f011      	BREQ _0x208008E
00b9e7 36e9      	CPI  R30,LOW(0x69)
00b9e8 f411      	BRNE _0x208008F
                 _0x208008E:
00b9e9 6004      	ORI  R16,LOW(4)
00b9ea c002      	RJMP _0x2080090
                 _0x208008F:
00b9eb 37e5      	CPI  R30,LOW(0x75)
00b9ec f4a1      	BRNE _0x2080091
                 _0x2080090:
00b9ed e0ea      	LDI  R30,LOW(10)
00b9ee 8fe8      	STD  Y+24,R30
00b9ef ff01      	SBRS R16,1
00b9f0 c008      	RJMP _0x2080092
                +
00b9f1 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00b9f2 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00b9f3 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00b9f4 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00b9f5 940e d214 	CALL SUBOPT_0x33F
00b9f7 e01a      	LDI  R17,LOW(10)
00b9f8 c023      	RJMP _0x2080093
                 _0x2080092:
                +
00b9f9 e1e0     +LDI R30 , LOW ( 0x2710 )
00b9fa e2f7     +LDI R31 , HIGH ( 0x2710 )
00b9fb e060     +LDI R22 , BYTE3 ( 0x2710 )
00b9fc e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00b9fd 940e d214 	CALL SUBOPT_0x33F
00b9ff e015      	LDI  R17,LOW(5)
00ba00 c01b      	RJMP _0x2080093
                 _0x2080091:
00ba01 35e8      	CPI  R30,LOW(0x58)
00ba02 f411      	BRNE _0x2080095
00ba03 6008      	ORI  R16,LOW(8)
00ba04 c004      	RJMP _0x2080096
                 _0x2080095:
00ba05 37e8      	CPI  R30,LOW(0x78)
00ba06 f011      	BREQ PC+3
00ba07 940c baf5 	JMP _0x20800D4
                 _0x2080096:
00ba09 e1e0      	LDI  R30,LOW(16)
00ba0a 8fe8      	STD  Y+24,R30
00ba0b ff01      	SBRS R16,1
00ba0c c008      	RJMP _0x2080098
                +
00ba0d e0e0     +LDI R30 , LOW ( 0x10000000 )
00ba0e e0f0     +LDI R31 , HIGH ( 0x10000000 )
00ba0f e060     +LDI R22 , BYTE3 ( 0x10000000 )
00ba10 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00ba11 940e d214 	CALL SUBOPT_0x33F
00ba13 e018      	LDI  R17,LOW(8)
00ba14 c007      	RJMP _0x2080093
                 _0x2080098:
                +
00ba15 e0e0     +LDI R30 , LOW ( 0x1000 )
00ba16 e1f0     +LDI R31 , HIGH ( 0x1000 )
00ba17 e060     +LDI R22 , BYTE3 ( 0x1000 )
00ba18 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00ba19 940e d214 	CALL SUBOPT_0x33F
00ba1b e014      	LDI  R17,LOW(4)
                 _0x2080093:
00ba1c 3040      	CPI  R20,0
00ba1d f011      	BREQ _0x2080099
00ba1e 770f      	ANDI R16,LOW(127)
00ba1f c001      	RJMP _0x208009A
                 _0x2080099:
00ba20 e041      	LDI  R20,LOW(1)
                 _0x208009A:
00ba21 ff01      	SBRS R16,1
00ba22 c008      	RJMP _0x208009B
00ba23 940e d666 	CALL SUBOPT_0x3E7
00ba25 940e d65f 	CALL SUBOPT_0x3E6
00ba27 9614      	ADIW R26,4
00ba28 940e d9f4 	CALL __GETD1P
00ba2a c013      	RJMP _0x2080139
                 _0x208009B:
00ba2b ff02      	SBRS R16,2
00ba2c c00a      	RJMP _0x208009D
00ba2d 940e d666 	CALL SUBOPT_0x3E7
00ba2f 940e d65f 	CALL SUBOPT_0x3E6
00ba31 9614      	ADIW R26,4
00ba32 940e d9f0 	CALL __GETW1P
00ba34 940e d919 	CALL __CWD1
00ba36 c007      	RJMP _0x2080139
                 _0x208009D:
00ba37 940e d666 	CALL SUBOPT_0x3E7
00ba39 940e d65f 	CALL SUBOPT_0x3E6
00ba3b 9614      	ADIW R26,4
00ba3c 940e bcad 	CALL SUBOPT_0x1D
                 _0x2080139:
                +
00ba3e 87ec     +STD Y + 12 , R30
00ba3f 87fd     +STD Y + 12 + 1 , R31
00ba40 876e     +STD Y + 12 + 2 , R22
00ba41 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00ba42 ff02      	SBRS R16,2
00ba43 c012      	RJMP _0x208009F
00ba44 85af      	LDD  R26,Y+15
00ba45 23aa      	TST  R26
00ba46 f442      	BRPL _0x20800A0
00ba47 940e c194 	CALL SUBOPT_0xDC
00ba49 940e d8b6 	CALL __ANEGD1
00ba4b 940e c205 	CALL SUBOPT_0xED
00ba4d e2ed      	LDI  R30,LOW(45)
00ba4e 8fe9      	STD  Y+25,R30
                 _0x20800A0:
00ba4f 8de9      	LDD  R30,Y+25
00ba50 30e0      	CPI  R30,0
00ba51 f019      	BREQ _0x20800A1
00ba52 5f1f      	SUBI R17,-LOW(1)
00ba53 5f4f      	SUBI R20,-LOW(1)
00ba54 c001      	RJMP _0x20800A2
                 _0x20800A1:
00ba55 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
00ba56 2f34      	MOV  R19,R20
                 _0x208008B:
00ba57 fd00      	SBRC R16,0
00ba58 c014      	RJMP _0x20800A3
                 _0x20800A4:
00ba59 1715      	CP   R17,R21
00ba5a f410      	BRSH _0x20800A7
00ba5b 1735      	CP   R19,R21
00ba5c f008      	BRLO _0x20800A8
                 _0x20800A7:
00ba5d c00f      	RJMP _0x20800A6
                 _0x20800A8:
00ba5e ff07      	SBRS R16,7
00ba5f c008      	RJMP _0x20800A9
00ba60 ff02      	SBRS R16,2
00ba61 c004      	RJMP _0x20800AA
00ba62 7f0b      	ANDI R16,LOW(251)
00ba63 8d29      	LDD  R18,Y+25
00ba64 5011      	SUBI R17,LOW(1)
00ba65 c001      	RJMP _0x20800AB
                 _0x20800AA:
00ba66 e320      	LDI  R18,LOW(48)
                 _0x20800AB:
00ba67 c001      	RJMP _0x20800AC
                 _0x20800A9:
00ba68 e220      	LDI  R18,LOW(32)
                 _0x20800AC:
00ba69 940e d642 	CALL SUBOPT_0x3E2
00ba6b 5051      	SUBI R21,LOW(1)
00ba6c cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
00ba6d 1714      	CP   R17,R20
00ba6e f490      	BRSH _0x20800AF
00ba6f 6100      	ORI  R16,LOW(16)
00ba70 ff02      	SBRS R16,2
00ba71 c006      	RJMP _0x20800B0
00ba72 940e d670 	CALL SUBOPT_0x3E9
00ba74 f009      	BREQ _0x20800B1
00ba75 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
00ba76 5011      	SUBI R17,LOW(1)
00ba77 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
00ba78 e3e0      	LDI  R30,LOW(48)
00ba79 93ea      	ST   -Y,R30
00ba7a 940e d658 	CALL SUBOPT_0x3E5
00ba7c 3050      	CPI  R21,0
00ba7d f009      	BREQ _0x20800B2
00ba7e 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
00ba7f 5041      	SUBI R20,LOW(1)
00ba80 cfec      	RJMP _0x20800AD
                 _0x20800AF:
00ba81 2f31      	MOV  R19,R17
00ba82 8de8      	LDD  R30,Y+24
00ba83 30e0      	CPI  R30,0
00ba84 f4c1      	BRNE _0x20800B3
                 _0x20800B4:
00ba85 3030      	CPI  R19,0
00ba86 f0a9      	BREQ _0x20800B6
00ba87 ff03      	SBRS R16,3
00ba88 c007      	RJMP _0x20800B7
00ba89 01de      	MOVW R26,R28
00ba8a 9650      	ADIW R26,16
00ba8b 940e d31b 	CALL SUBOPT_0x36C
                +
00ba8d bf6b     +OUT RAMPZ , R22
00ba8e 9126     +ELPM R18 , Z
                 	__GETBRPF 18
00ba8f c005      	RJMP _0x20800B8
                 _0x20800B7:
00ba90 89a8      	LDD  R26,Y+16
00ba91 89b9      	LDD  R27,Y+16+1
00ba92 912d      	LD   R18,X+
00ba93 8ba8      	STD  Y+16,R26
00ba94 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
00ba95 940e d642 	CALL SUBOPT_0x3E2
00ba97 3050      	CPI  R21,0
00ba98 f009      	BREQ _0x20800B9
00ba99 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
00ba9a 5031      	SUBI R19,LOW(1)
00ba9b cfe9      	RJMP _0x20800B4
                 _0x20800B6:
00ba9c c04e      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
00ba9d 940e c1a6 	CALL SUBOPT_0xDF
00ba9f 940e bc2e 	CALL SUBOPT_0xB
00baa1 940e d990 	CALL __DIVD21U
00baa3 2f2e      	MOV  R18,R30
00baa4 302a      	CPI  R18,10
00baa5 f030      	BRLO _0x20800BE
00baa6 ff03      	SBRS R16,3
00baa7 c002      	RJMP _0x20800BF
00baa8 5c29      	SUBI R18,-LOW(55)
00baa9 c001      	RJMP _0x20800C0
                 _0x20800BF:
00baaa 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
00baab c001      	RJMP _0x20800C1
                 _0x20800BE:
00baac 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
00baad fd04      	SBRC R16,4
00baae c01c      	RJMP _0x20800C3
00baaf 3321      	CPI  R18,49
00bab0 f438      	BRSH _0x20800C5
                +
00bab1 89ac     +LDD R26 , Y + 20
00bab2 89bd     +LDD R27 , Y + 20 + 1
00bab3 898e     +LDD R24 , Y + 20 + 2
00bab4 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00bab5 940e d406 	CALL SUBOPT_0x389
00bab7 f409      	BRNE _0x20800C4
                 _0x20800C5:
00bab8 c00b      	RJMP _0x20800C7
                 _0x20800C4:
00bab9 1743      	CP   R20,R19
00baba f440      	BRSH _0x208013A
00babb 1753      	CP   R21,R19
00babc f010      	BRLO _0x20800CA
00babd ff00      	SBRS R16,0
00babe c001      	RJMP _0x20800CB
                 _0x20800CA:
00babf c010      	RJMP _0x20800C9
                 _0x20800CB:
00bac0 e220      	LDI  R18,LOW(32)
00bac1 ff07      	SBRS R16,7
00bac2 c008      	RJMP _0x20800CC
                 _0x208013A:
00bac3 e320      	LDI  R18,LOW(48)
                 _0x20800C7:
00bac4 6100      	ORI  R16,LOW(16)
00bac5 ff02      	SBRS R16,2
00bac6 c004      	RJMP _0x20800CD
00bac7 940e d670 	CALL SUBOPT_0x3E9
00bac9 f009      	BREQ _0x20800CE
00baca 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
00bacb 940e d642 	CALL SUBOPT_0x3E2
00bacd 3050      	CPI  R21,0
00bace f009      	BREQ _0x20800CF
00bacf 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
00bad0 5031      	SUBI R19,LOW(1)
00bad1 940e c1a6 	CALL SUBOPT_0xDF
00bad3 940e bc2e 	CALL SUBOPT_0xB
00bad5 940e d9d2 	CALL __MODD21U
00bad7 940e c205 	CALL SUBOPT_0xED
00bad9 8de8      	LDD  R30,Y+24
                +
00bada 89ac     +LDD R26 , Y + 20
00badb 89bd     +LDD R27 , Y + 20 + 1
00badc 898e     +LDD R24 , Y + 20 + 2
00badd 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00bade 27ff      	CLR  R31
00badf 2766      	CLR  R22
00bae0 2777      	CLR  R23
00bae1 940e d990 	CALL __DIVD21U
00bae3 940e d214 	CALL SUBOPT_0x33F
00bae5 940e c1a6 	CALL SUBOPT_0xDF
00bae7 940e da7d 	CALL __CPD10
00bae9 f009      	BREQ _0x20800BD
00baea cfb2      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
00baeb ff00      	SBRS R16,0
00baec c008      	RJMP _0x20800D0
                 _0x20800D1:
00baed 3050      	CPI  R21,0
00baee f031      	BREQ _0x20800D3
00baef 5051      	SUBI R21,LOW(1)
00baf0 e2e0      	LDI  R30,LOW(32)
00baf1 93ea      	ST   -Y,R30
00baf2 940e d658 	CALL SUBOPT_0x3E5
00baf4 cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
00baf5 e010      	LDI  R17,LOW(0)
                 _0x2080053:
00baf6 ce09      	RJMP _0x208004E
                 _0x2080050:
00baf7 81ae      	LDD  R26,Y+6
00baf8 81bf      	LDD  R27,Y+6+1
00baf9 940e d9f0 	CALL __GETW1P
00bafb 940e daa0 	CALL __LOADLOCR6
00bafd 96ef      	ADIW R28,63
00bafe 96a7      	ADIW R28,39
00baff 9508      	RET
                 _sprintf:
00bb00 92ff      	PUSH R15
00bb01 2ef8      	MOV  R15,R24
00bb02 9726      	SBIW R28,6
00bb03 940e da9b 	CALL __SAVELOCR4
00bb05 01de      	MOVW R26,R28
00bb06 961e      	ADIW R26,14
00bb07 940e d890 	CALL __ADDW2R15
00bb09 940e d9f0 	CALL __GETW1P
00bb0b 9730      	SBIW R30,0
00bb0c f419      	BRNE _0x20800D5
00bb0d efef      	LDI  R30,LOW(65535)
00bb0e efff      	LDI  R31,HIGH(65535)
00bb0f c021      	RJMP _0x20E0004
                 _0x20800D5:
00bb10 01de      	MOVW R26,R28
00bb11 9616      	ADIW R26,6
00bb12 940e d890 	CALL __ADDW2R15
00bb14 018d      	MOVW R16,R26
00bb15 01de      	MOVW R26,R28
00bb16 961e      	ADIW R26,14
00bb17 940e d890 	CALL __ADDW2R15
00bb19 940e d312 	CALL SUBOPT_0x36A
00bb1b e0e0      	LDI  R30,LOW(0)
00bb1c 87e8      	STD  Y+8,R30
00bb1d 87e9      	STD  Y+8+1,R30
00bb1e 01de      	MOVW R26,R28
00bb1f 961a      	ADIW R26,10
00bb20 940e d890 	CALL __ADDW2R15
00bb22 940e d2d1 	CALL SUBOPT_0x35F
00bb24 931a      	ST   -Y,R17
00bb25 930a      	ST   -Y,R16
00bb26 940e d685 	CALL SUBOPT_0x3EA
00bb28 01de      	MOVW R26,R28
00bb29 961e      	ADIW R26,14
00bb2a ddb8      	RCALL __print_G104
00bb2b 019f      	MOVW R18,R30
00bb2c 81ae      	LDD  R26,Y+6
00bb2d 81bf      	LDD  R27,Y+6+1
00bb2e e0e0      	LDI  R30,LOW(0)
00bb2f 93ec      	ST   X,R30
00bb30 01f9      	MOVW R30,R18
                 _0x20E0004:
00bb31 940e daa2 	CALL __LOADLOCR4
00bb33 962a      	ADIW R28,10
00bb34 90ff      	POP  R15
00bb35 9508      	RET
                 _vsprintf:
00bb36 93ba      	ST   -Y,R27
00bb37 93aa      	ST   -Y,R26
00bb38 9726      	SBIW R28,6
00bb39 931a      	ST   -Y,R17
00bb3a 930a      	ST   -Y,R16
00bb3b 85ee      	LDD  R30,Y+14
00bb3c 85ff      	LDD  R31,Y+14+1
00bb3d 9730      	SBIW R30,0
00bb3e f419      	BRNE _0x20800D8
00bb3f efef      	LDI  R30,LOW(65535)
00bb40 efff      	LDI  R31,HIGH(65535)
00bb41 c016      	RJMP _0x20E0002
                 _0x20800D8:
00bb42 85ee      	LDD  R30,Y+14
00bb43 85ff      	LDD  R31,Y+14+1
00bb44 83ec      	STD  Y+4,R30
00bb45 83fd      	STD  Y+4+1,R31
00bb46 e0e0      	LDI  R30,LOW(0)
00bb47 83ee      	STD  Y+6,R30
00bb48 83ef      	STD  Y+6+1,R30
00bb49 940e d182 	CALL SUBOPT_0x329
00bb4b 940e c684 	CALL SUBOPT_0x1B0
00bb4d 940e d685 	CALL SUBOPT_0x3EA
00bb4f 01de      	MOVW R26,R28
00bb50 961c      	ADIW R26,12
00bb51 dd91      	RCALL __print_G104
00bb52 018f      	MOVW R16,R30
00bb53 81ac      	LDD  R26,Y+4
00bb54 81bd      	LDD  R27,Y+4+1
00bb55 e0e0      	LDI  R30,LOW(0)
00bb56 93ec      	ST   X,R30
00bb57 01f8      	MOVW R30,R16
                 _0x20E0002:
00bb58 8119      	LDD  R17,Y+1
00bb59 8108      	LDD  R16,Y+0
                 _0x20E0003:
00bb5a 9660      	ADIW R28,16
00bb5b 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00bb5c 93aa      	ST   -Y,R26
00bb5d e0e1          ldi  r30,1
00bb5e 91f9          ld   r31,y+
00bb5f 33f0          cpi  r31,'0'
00bb60 f010          brlo isdigit0
00bb61 33fa          cpi  r31,'9'+1
00bb62 f008          brlo isdigit1
                 isdigit0:
00bb63 27ee          clr  r30
                 isdigit1:
00bb64 9508          ret
                 _isprint:
00bb65 93aa      	ST   -Y,R26
00bb66 e0e1          ldi  r30,1
00bb67 91f9          ld   r31,y+
00bb68 32f0          cpi  r31,32
00bb69 f010          brlo isprint0
00bb6a 38f0          cpi  r31,128
00bb6b f008          brlo isprint1
                 isprint0:
00bb6c 27ee          clr  r30
                 isprint1:
00bb6d 9508          ret
                 _isspace:
00bb6e 93aa      	ST   -Y,R26
00bb6f e0e1          ldi  r30,1
00bb70 91f9          ld   r31,y+
00bb71 32f0          cpi  r31,' '
00bb72 f029          breq isspace1
00bb73 30f9          cpi  r31,9
00bb74 f010          brlo isspace0
00bb75 30fe          cpi  r31,13+1
00bb76 f008          brlo isspace1
                 isspace0:
00bb77 27ee          clr  r30
                 isspace1:
00bb78 9508          ret
                 _isxdigit:
00bb79 93aa      	ST   -Y,R26
00bb7a e0e1          ldi  r30,1
00bb7b 91f9          ld   r31,y+
00bb7c 53f0          subi r31,0x30
00bb7d f040          brcs isxdigit0
00bb7e 30fa          cpi  r31,10
00bb7f f038          brcs isxdigit1
00bb80 75ff          andi r31,0x5f
00bb81 50f7          subi r31,7
00bb82 30fa          cpi  r31,10
00bb83 f010          brcs isxdigit0
00bb84 31f0          cpi  r31,16
00bb85 f008          brcs isxdigit1
                 isxdigit0:
00bb86 27ee          clr  r30
                 isxdigit1:
00bb87 9508          ret
                 _tolower:
00bb88 93aa      	ST   -Y,R26
00bb89 91e9          ld   r30,y+
00bb8a 34e1          cpi  r30,'A'
00bb8b f018          brlo tolower1
00bb8c 35eb          cpi  r30,'Z'+1
00bb8d f408          brcc tolower1
00bb8e 5ee0          subi r30,-32
                 tolower1:
00bb8f 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00bb90 940e da2e 	CALL __PUTPARD2
00bb92 817b         ldd  r23,y+3
00bb93 816a         ldd  r22,y+2
00bb94 81f9         ldd  r31,y+1
00bb95 81e8         ld   r30,y
00bb96 fb77         bst  r23,7
00bb97 0f77         lsl  r23
00bb98 fd67         sbrc r22,7
00bb99 6071         sbr  r23,1
00bb9a 2f97         mov  r25,r23
00bb9b 579e         subi r25,0x7e
00bb9c f081         breq __ftrunc0
00bb9d f078         brcs __ftrunc0
00bb9e 3198         cpi  r25,24
00bb9f f490         brsh __ftrunc1
00bba0 27aa         clr  r26
00bba1 27bb         clr  r27
00bba2 2788         clr  r24
                 __ftrunc2:
00bba3 9408         sec
00bba4 9587         ror  r24
00bba5 95b7         ror  r27
00bba6 95a7         ror  r26
00bba7 959a         dec  r25
00bba8 f7d1         brne __ftrunc2
00bba9 23ea         and  r30,r26
00bbaa 23fb         and  r31,r27
00bbab 2368         and  r22,r24
00bbac c005         rjmp __ftrunc1
                 __ftrunc0:
00bbad 94e8         clt
00bbae 2777         clr  r23
00bbaf 27ee         clr  r30
00bbb0 27ff         clr  r31
00bbb1 2766         clr  r22
                 __ftrunc1:
00bbb2 776f         cbr  r22,0x80
00bbb3 9576         lsr  r23
00bbb4 f408         brcc __ftrunc3
00bbb5 6860         sbr  r22,0x80
                 __ftrunc3:
00bbb6 f977         bld  r23,7
00bbb7 91a9         ld   r26,y+
00bbb8 91b9         ld   r27,y+
00bbb9 9189         ld   r24,y+
00bbba 9199         ld   r25,y+
00bbbb 17ea         cp   r30,r26
00bbbc 07fb         cpc  r31,r27
00bbbd 0768         cpc  r22,r24
00bbbe 0779         cpc  r23,r25
00bbbf fb97         bst  r25,7
00bbc0 9508         ret
                 _floor:
00bbc1 940e da2e 	CALL __PUTPARD2
00bbc3 940e bf9e 	CALL SUBOPT_0x8C
00bbc5 940e bb90 	CALL _ftrunc
00bbc7 940e c18a 	CALL SUBOPT_0xD9
00bbc9 f419          brne __floor1
                 __floor0:
00bbca 940e bf7f 	CALL SUBOPT_0x87
00bbcc c009      	RJMP _0x20E0001
                 __floor1:
00bbcd f7e6          brtc __floor0
00bbce 940e bf7f 	CALL SUBOPT_0x87
                +
00bbd0 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00bbd1 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00bbd2 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00bbd3 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00bbd4 940e d786 	CALL __SUBF12
                 _0x20E0001:
00bbd6 9624      	ADIW R28,4
00bbd7 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 00
000588 01        	.DB  0x0,0x0,0x0,0x1
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _d_out:
001434           	.BYTE 0x2
                 _adcData:
001436           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
00144a           	.BYTE 0x19
                 _prtc_get_time:
001463           	.BYTE 0x4
                 _prtc_get_date:
001467           	.BYTE 0x4
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000591 02
000592 04
000593 07
000594 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
0014df           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014e0           	.BYTE 0x4
                 _flag_hold_MODE_S0040002000:
0014e4           	.BYTE 0x1
                 _flag_hold_UP_S0040002000:
0014e5           	.BYTE 0x1
                 _flag_hold_DOWN_S0040002000:
0014e6           	.BYTE 0x1
                 _flag_hold_OK_S0040002000:
0014e7           	.BYTE 0x1
                 _adcBatt:
0014e8           	.BYTE 0x4
                 _sess_list:
0014ec           	.BYTE 0x64
                 
                 	.ESEG
                 _epFactor_A:
000595 00
000596 00
000597 00
000598 00        	.DB  0x0,0x0,0x0,0x0
000599 00
00059a 00
00059b 00
00059c 00        	.DB  0x0,0x0,0x0,0x0
00059d 00
00059e 00
00059f 00
0005a0 00        	.DB  0x0,0x0,0x0,0x0
0005a1 00
0005a2 00
0005a3 00
0005a4 00        	.DB  0x0,0x0,0x0,0x0
0005a5 00
0005a6 00
0005a7 00
0005a8 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_B:
0005a9 00
0005aa 00
0005ab 00
0005ac 00        	.DB  0x0,0x0,0x0,0x0
0005ad 00
0005ae 00
0005af 00
0005b0 00        	.DB  0x0,0x0,0x0,0x0
0005b1 00
0005b2 00
0005b3 00
0005b4 00        	.DB  0x0,0x0,0x0,0x0
0005b5 00
0005b6 00
0005b7 00
0005b8 00        	.DB  0x0,0x0,0x0,0x0
0005b9 00
0005ba 00
0005bb 00
0005bc 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_C:
0005bd 00
0005be 00
0005bf 00
0005c0 00        	.DB  0x0,0x0,0x0,0x0
0005c1 00
0005c2 00
0005c3 00
0005c4 00        	.DB  0x0,0x0,0x0,0x0
0005c5 00
0005c6 00
0005c7 00
0005c8 00        	.DB  0x0,0x0,0x0,0x0
0005c9 00
0005ca 00
0005cb 00
0005cc 00        	.DB  0x0,0x0,0x0,0x0
0005cd 00
0005ce 00
0005cf 00
0005d0 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet1:
0005d1 00
0005d2 00
0005d3 00
0005d4 00        	.DB  0x0,0x0,0x0,0x0
0005d5 00        	.DB  0x0
                 _epADCRef1:
0005d6 00
0005d7 00
0005d8 00
0005d9 00        	.DB  0x0,0x0,0x0,0x0
0005da 00
0005db 00
0005dc 00
0005dd 00        	.DB  0x0,0x0,0x0,0x0
0005de 00
0005df 00
0005e0 00
0005e1 00        	.DB  0x0,0x0,0x0,0x0
0005e2 00
0005e3 00
0005e4 00
0005e5 00        	.DB  0x0,0x0,0x0,0x0
0005e6 00
0005e7 00
0005e8 00
0005e9 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef1:
0005ea 00
0005eb 00
0005ec 00
0005ed 00        	.DB  0x0,0x0,0x0,0x0
0005ee 00
0005ef 00
0005f0 00
0005f1 00        	.DB  0x0,0x0,0x0,0x0
0005f2 00
0005f3 00
0005f4 00
0005f5 00        	.DB  0x0,0x0,0x0,0x0
0005f6 00
0005f7 00
0005f8 00
0005f9 00        	.DB  0x0,0x0,0x0,0x0
0005fa 00
0005fb 00
0005fc 00
0005fd 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet2:
0005fe 00
0005ff 00
000600 00
000601 00        	.DB  0x0,0x0,0x0,0x0
000602 00        	.DB  0x0
                 _epADCRef2:
000603 00
000604 00
000605 00
000606 00        	.DB  0x0,0x0,0x0,0x0
000607 00
000608 00
000609 00
00060a 00        	.DB  0x0,0x0,0x0,0x0
00060b 00
00060c 00
00060d 00
00060e 00        	.DB  0x0,0x0,0x0,0x0
00060f 00
000610 00
000611 00
000612 00        	.DB  0x0,0x0,0x0,0x0
000613 00
000614 00
000615 00
000616 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef2:
000617 00
000618 00
000619 00
00061a 00        	.DB  0x0,0x0,0x0,0x0
00061b 00
00061c 00
00061d 00
00061e 00        	.DB  0x0,0x0,0x0,0x0
00061f 00
000620 00
000621 00
000622 00        	.DB  0x0,0x0,0x0,0x0
000623 00
000624 00
000625 00
000626 00        	.DB  0x0,0x0,0x0,0x0
000627 00
000628 00
000629 00
00062a 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet3:
00062b 00
00062c 00
00062d 00
00062e 00        	.DB  0x0,0x0,0x0,0x0
00062f 00        	.DB  0x0
                 _epADCRef3:
000630 00
000631 00
000632 00
000633 00        	.DB  0x0,0x0,0x0,0x0
000634 00
000635 00
000636 00
000637 00        	.DB  0x0,0x0,0x0,0x0
000638 00
000639 00
00063a 00
00063b 00        	.DB  0x0,0x0,0x0,0x0
00063c 00
00063d 00
00063e 00
00063f 00        	.DB  0x0,0x0,0x0,0x0
000640 00
000641 00
000642 00
000643 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef3:
000644 00
000645 00
000646 00
000647 00        	.DB  0x0,0x0,0x0,0x0
000648 00
000649 00
00064a 00
00064b 00        	.DB  0x0,0x0,0x0,0x0
00064c 00
00064d 00
00064e 00
00064f 00        	.DB  0x0,0x0,0x0,0x0
000650 00
000651 00
000652 00
000653 00        	.DB  0x0,0x0,0x0,0x0
000654 00
000655 00
000656 00
000657 00        	.DB  0x0,0x0,0x0,0x0
                 _epCalType:
000658 00
000659 00
00065a 00
00065b 00        	.DB  0x0,0x0,0x0,0x0
00065c 00        	.DB  0x0
                 
                 	.DSEG
                 _t_S00D0002000:
001550           	.BYTE 0x14
                 _lastCheck_S00D0002000:
001564           	.BYTE 0x5
                 _steadyState_S00D0002000:
001569           	.BYTE 0x5
                 _dataQ:
00156e           	.BYTE 0x64
                 _dataQ_len:
0015d2           	.BYTE 0x2
                 _t_S00F0001000:
0015d4           	.BYTE 0x4
                 _t_flag_S00F0001000:
0015d8           	.BYTE 0x1
                 _lastCheck_S00F0001000:
0015d9           	.BYTE 0x1
                 _t_S00F0005000:
0015da           	.BYTE 0x14
                 _flag_lower_S00F0005000:
0015ee           	.BYTE 0x5
                 _flag_upper_S00F0005000:
0015f3           	.BYTE 0x5
                 _t_S00F0006000:
0015f8           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
001600           	.BYTE 0x2
                 _steadyState_S00F0006000:
001602           	.BYTE 0x2
                 _eventQ:
001604           	.BYTE 0x78
                 _last_wr_eventQ:
00167c           	.BYTE 0x2
                 _last_rd_eventQ:
00167e           	.BYTE 0x2
                 _eventQ_len:
001680           	.BYTE 0x2
                 _ainAlarm:
001682           	.BYTE 0x10
                 _mtncAlarm:
001692           	.BYTE 0x1
                 _powerSrcAlarm:
001693           	.BYTE 0x1
                 _communicationAlarm:
001694           	.BYTE 0x1
                 _gsmAlarm:
001695           	.BYTE 0x1
                 _gsmBalanceAlarm:
001696           	.BYTE 0x1
                 _t_S0110003000:
001697           	.BYTE 0x4
                 _t_flag_S0110003000:
00169b           	.BYTE 0x1
                 _lastCheck_S0110003000:
00169c           	.BYTE 0x1
                 _t_S0110004000:
00169d           	.BYTE 0x4
                 _t_flag_S0110004000:
0016a1           	.BYTE 0x1
                 _lastCheck_S0110004000:
0016a2           	.BYTE 0x1
                 _t_S0110005000:
0016a3           	.BYTE 0x4
                 _t_flag_S0110005000:
0016a7           	.BYTE 0x1
                 _t_S0110006000:
0016a8           	.BYTE 0x8
                 _t_flag_S0110006000:
0016b0           	.BYTE 0x2
                 _lastCheck_S0110006000:
0016b2           	.BYTE 0x2
                 _t_S0110007000:
0016b4           	.BYTE 0x14
                 _t_flag_S0110007000:
0016c8           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016cd           	.BYTE 0x5
                 _t_S0110008000:
0016d2           	.BYTE 0x14
                 _t_flag_S0110008000:
0016e6           	.BYTE 0x5
                 _fat:
0016eb           	.BYTE 0x232
                 _pfat:
00191d           	.BYTE 0x2
                 _root_path:
00191f           	.BYTE 0x4
                 _eventLogQueue:
001923           	.BYTE 0x8C
                 _eventLogQCount:
0019af           	.BYTE 0x1
                 _dataLogQueue:
0019b0           	.BYTE 0x6E
                 _dataLogQCount:
001a1e           	.BYTE 0x1
                 _cursor_S0160000000:
001a1f           	.BYTE 0x1
                 _tmpNextPage_S0160000000:
001a20           	.BYTE 0x1
                 _tmpPrevPage_S0160000000:
001a21           	.BYTE 0x1
                 _entPwd_S0160000000:
001a22           	.BYTE 0x4
                 _newPwd_S0160000000:
001a26           	.BYTE 0x4
                 _confPwd_S0160000000:
001a2a           	.BYTE 0x4
                 _setIp_S0160000000:
001a2e           	.BYTE 0xC
                 _setMask_S0160000000:
001a3a           	.BYTE 0xC
                 _setGw_S0160000000:
001a46           	.BYTE 0xC
                 _setServer_S0160000000:
001a52           	.BYTE 0xC
                 _devEn_S0160000000:
001a5e           	.BYTE 0x1
                 _almEn_S0160000000:
001a5f           	.BYTE 0x1
                 _prbEn_S0160000000:
001a60           	.BYTE 0x5
                 _mute_S0160000000:
001a65           	.BYTE 0x1
                 _vRef_S0160000000:
001a66           	.BYTE 0x3
                 _prb1_S0160000000:
001a69           	.BYTE 0x1
                 _prb2_S0160000000:
001a6a           	.BYTE 0x1
                 _calPnt_S0160000000:
001a6b           	.BYTE 0x6
                 _n:
001a71           	.BYTE 0x2
                 _a:
001a73           	.BYTE 0x30
                 __seed_G100:
001aa3           	.BYTE 0x4
                 _status_G102:
001aa7           	.BYTE 0x1
                 _timer1_G102:
001aa8           	.BYTE 0x1
                 _timer2_G102:
001aa9           	.BYTE 0x1
                 _card_type_G102:
001aaa           	.BYTE 0x1
                 _pv_S102000B000:
001aab           	.BYTE 0x1
                 _FatFs_G103:
001aac           	.BYTE 0x2
                 _Fsid_G103:
001aae           	.BYTE 0x2
                 _Drive_G103:
001ab0           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x0:
                +
00bbd8 e020     +LDI R18 , LOW ( 0 )
00bbd9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00bbda e040     +LDI R20 , LOW ( 0 )
00bbdb e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00bbdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
00bbdd 935a      	ST   -Y,R21
00bbde 934a      	ST   -Y,R20
                +
00bbdf e2a6     +LDI R26 , 38
00bbe0 9fa4     +MUL R26 , R20
00bbe1 01f0     +MOVW R30 , R0
00bbe2 9fa5     +MUL R26 , R21
00bbe3 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
00bbe4 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
00bbe5 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
00bbe6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00bbe7 81e0      	LD   R30,Z
00bbe8 940e d928 	CALL __LNEGB1
00bbea 2fae      	MOV  R26,R30
00bbeb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 289 TIMES, CODE SIZE REDUCTION:1149 WORDS
                 SUBOPT_0x3:
00bbec 940e da29 	CALL __PUTPARD1
00bbee e080      	LDI  R24,0
00bbef 940e 9afc 	CALL _printDebug
00bbf1 9624      	ADIW R28,4
00bbf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00bbf3 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00bbf4 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00bbf5 0fe2      	ADD  R30,R18
00bbf6 1ff3      	ADC  R31,R19
00bbf7 81e0      	LD   R30,Z
00bbf8 30e0      	CPI  R30,0
00bbf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5:
00bbfa 01f9      	MOVW R30,R18
00bbfb 01de      	MOVW R26,R28
00bbfc 96df      	ADIW R26,63
00bbfd 940e d8e3 	CALL __LSLW2
00bbff 0fea      	ADD  R30,R26
00bc00 1ffb      	ADC  R31,R27
00bc01 93fa      	ST   -Y,R31
00bc02 93ea      	ST   -Y,R30
                +
00bc03 e0a5     +LDI R26 , LOW ( 0x5 )
00bc04 e0b0     +LDI R27 , HIGH ( 0x5 )
00bc05 e080     +LDI R24 , BYTE3 ( 0x5 )
00bc06 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00bc07 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00bc09 01fe      	MOVW R30,R28
00bc0a 96fb      	ADIW R30,59
00bc0b 93fa      	ST   -Y,R31
00bc0c 93ea      	ST   -Y,R30
                +
00bc0d e0a7     +LDI R26 , LOW ( 0x7 )
00bc0e e0b0     +LDI R27 , HIGH ( 0x7 )
00bc0f e080     +LDI R24 , BYTE3 ( 0x7 )
00bc10 e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00bc11 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
00bc13 01fe      	MOVW R30,R28
00bc14 96f7      	ADIW R30,55
00bc15 93fa      	ST   -Y,R31
00bc16 93ea      	ST   -Y,R30
                +
00bc17 e3ac     +LDI R26 , LOW ( 0x3C )
00bc18 e0b0     +LDI R27 , HIGH ( 0x3C )
00bc19 e080     +LDI R24 , BYTE3 ( 0x3C )
00bc1a e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00bc1b 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
00bc1d 01fe      	MOVW R30,R28
00bc1e 96f3      	ADIW R30,51
00bc1f 93fa      	ST   -Y,R31
00bc20 93ea      	ST   -Y,R30
                +
00bc21 e2ac     +LDI R26 , LOW ( 0x12C )
00bc22 e0b1     +LDI R27 , HIGH ( 0x12C )
00bc23 e080     +LDI R24 , BYTE3 ( 0x12C )
00bc24 e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
00bc25 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00bc27 01fe      	MOVW R30,R28
00bc28 93fa      	ST   -Y,R31
00bc29 93ea      	ST   -Y,R30
00bc2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00bc2b e0a7      	LDI  R26,LOW(7)
00bc2c e0b0      	LDI  R27,0
00bc2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:65 WORDS
                 SUBOPT_0xB:
                +
00bc2e 85ac     +LDD R26 , Y + 12
00bc2f 85bd     +LDD R27 , Y + 12 + 1
00bc30 858e     +LDD R24 , Y + 12 + 2
00bc31 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00bc32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xC:
                +
00bc33 89e8     +LDD R30 , Y + 16
00bc34 89f9     +LDD R31 , Y + 16 + 1
00bc35 896a     +LDD R22 , Y + 16 + 2
00bc36 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00bc37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00bc38 e1a5      	LDI  R26,LOW(_properties_config)
00bc39 e1b1      	LDI  R27,HIGH(_properties_config)
00bc3a 940e 47bb 	CALL _getPropertiesConfig
00bc3c e0e0      	LDI  R30,LOW(0)
00bc3d 93e0 10f6 	STS  _is_properties_config_update,R30
00bc3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00bc40 eba6      	LDI  R26,LOW(_operating_config)
00bc41 e1b1      	LDI  R27,HIGH(_operating_config)
00bc42 940e 4850 	CALL _getOperatingConfig
00bc44 e0e0      	LDI  R30,LOW(0)
00bc45 93e0 10f7 	STS  _is_operating_config_update,R30
00bc47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00bc48 0fa2      	ADD  R26,R18
00bc49 1fb3      	ADC  R27,R19
00bc4a 91ec      	LD   R30,X
00bc4b 30e0      	CPI  R30,0
00bc4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
00bc4d e1ad     +LDI R26 , 29
00bc4e 9fa2     +MUL R26 , R18
00bc4f 01f0     +MOVW R30 , R0
00bc50 9fa3     +MUL R26 , R19
00bc51 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
00bc52 54e2      	SUBI R30,LOW(-_sensor_config)
00bc53 4efe      	SBCI R31,HIGH(-_sensor_config)
00bc54 01df      	MOVW R26,R30
00bc55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
00bc56 940e da29 	CALL __PUTPARD1
00bc58 01f9      	MOVW R30,R18
00bc59 940e d919 	CALL __CWD1
00bc5b 940e da29 	CALL __PUTPARD1
00bc5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 303 TIMES, CODE SIZE REDUCTION:601 WORDS
                 SUBOPT_0x12:
00bc5e e084      	LDI  R24,4
00bc5f 940e 9afc 	CALL _printDebug
00bc61 9628      	ADIW R28,8
00bc62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00bc63 0fa2      	ADD  R26,R18
00bc64 1fb3      	ADC  R27,R19
00bc65 e0e0      	LDI  R30,LOW(0)
00bc66 93ec      	ST   X,R30
00bc67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00bc68 e3ad      	LDI  R26,LOW(_buzz_config)
00bc69 e1b3      	LDI  R27,HIGH(_buzz_config)
00bc6a 940e 4b36 	CALL _getBuzzerConfig
00bc6c e0e0      	LDI  R30,LOW(0)
00bc6d 93e0 1112 	STS  _is_buzzer_config_update,R30
00bc6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
                +
00bc70 e0a3     +LDI R26 , 3
00bc71 9fa2     +MUL R26 , R18
00bc72 01f0     +MOVW R30 , R0
00bc73 9fa3     +MUL R26 , R19
00bc74 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
00bc75 5be1      	SUBI R30,LOW(-_din_config)
00bc76 4efd      	SBCI R31,HIGH(-_din_config)
00bc77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00bc78 58e1      	SUBI R30,LOW(-_dout_config)
00bc79 4efd      	SBCI R31,HIGH(-_dout_config)
00bc7a 01df      	MOVW R26,R30
00bc7b 940e 49dc 	CALL _getAuxDoutConfig
00bc7d e0ad      	LDI  R26,LOW(_is_dout_config_update)
00bc7e e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00bc7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00bc80 e6a2      	LDI  R26,LOW(_status_config)
00bc81 e1b3      	LDI  R27,HIGH(_status_config)
00bc82 940e 4c60 	CALL _getStatusReportConfig
00bc84 e0e0      	LDI  R30,LOW(0)
00bc85 93e0 1113 	STS  _is_status_config_update,R30
00bc87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00bc88 e6a5      	LDI  R26,LOW(_env_config)
00bc89 e1b3      	LDI  R27,HIGH(_env_config)
00bc8a 940e 4bcd 	CALL _getEnvAlarmConfig
00bc8c e0e0      	LDI  R30,LOW(0)
00bc8d 93e0 1114 	STS  _is_env_config_update,R30
00bc8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00bc90 933a      	ST   -Y,R19
00bc91 932a      	ST   -Y,R18
                +
00bc92 e0a5     +LDI R26 , 5
00bc93 9fa2     +MUL R26 , R18
00bc94 01f0     +MOVW R30 , R0
00bc95 9fa3     +MUL R26 , R19
00bc96 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00bc97 5be6      	SUBI R30,LOW(-_sensor)
00bc98 4efb      	SBCI R31,HIGH(-_sensor)
00bc99 01df      	MOVW R26,R30
00bc9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:221 WORDS
                 SUBOPT_0x1A:
00bc9b 940e d8e3 	CALL __LSLW2
00bc9d 0fae      	ADD  R26,R30
00bc9e 1fbf      	ADC  R27,R31
00bc9f 940e d9f4 	CALL __GETD1P
00bca1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B:
00bca2 01df      	MOVW R26,R30
00bca3 01cb      	MOVW R24,R22
00bca4 940e 405d 	CALL _TIMER_checkTimerExceed
00bca6 9730      	SBIW R30,0
00bca7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x1C:
00bca8 940e d8e3 	CALL __LSLW2
00bcaa 0fea      	ADD  R30,R26
00bcab 1ffb      	ADC  R31,R27
00bcac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x1D:
00bcad 940e d9f0 	CALL __GETW1P
00bcaf 2766      	CLR  R22
00bcb0 2777      	CLR  R23
00bcb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
00bcb2 01df      	MOVW R26,R30
00bcb3 01cb      	MOVW R24,R22
00bcb4 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
00bcb6 5be6      	SUBI R30,LOW(-_sensor)
00bcb7 4efb      	SBCI R31,HIGH(-_sensor)
00bcb8 01df      	MOVW R26,R30
00bcb9 940e d9f4 	CALL __GETD1P
00bcbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 43 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x20:
00bcbc 940e da29 	CALL __PUTPARD1
00bcbe e088      	LDI  R24,8
00bcbf 940e 9afc 	CALL _printDebug
00bcc1 962c      	ADIW R28,12
00bcc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21:
00bcc3 940e 7507 	CALL _checkAlarm
                +
00bcc5 01de     +MOVW R26 , R28
00bcc6 5aab     +SUBI R26 , LOW ( - 85 )
00bcc7 4fbf     +SBCI R27 , HIGH ( - 85 )
00bcc8 93ed     +ST X + , R30
00bcc9 93fc     +ST X , R31
                 	__PUTW1SX 85
00bcca 9730      	SBIW R30,0
00bccb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
00bccc e2a6     +LDI R26 , 38
00bccd 9fa4     +MUL R26 , R20
00bcce 01f0     +MOVW R30 , R0
00bccf 9fa5     +MUL R26 , R21
00bcd0 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00bcd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00bcd2 01de     +MOVW R26 , R28
00bcd3 5aab     +SUBI R26 , LOW ( - 85 )
00bcd4 4fbf     +SBCI R27 , HIGH ( - 85 )
00bcd5 93ed     +ST X + , R30
00bcd6 93fc     +ST X , R31
                 	__PUTW1SX 85
00bcd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24:
                +
00bcd8 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00bcd9 efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00bcda ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00bcdb ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00bcdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
00bcdd 93e0 1487 	STS  _muteAlarmExpired,R30
00bcdf 93f0 1488 	STS  _muteAlarmExpired+1,R31
00bce1 9360 1489 	STS  _muteAlarmExpired+2,R22
00bce3 9370 148a 	STS  _muteAlarmExpired+3,R23
00bce5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26:
                +
00bce6 01fe     +MOVW R30 , R28
00bce7 5aeb     +SUBI R30 , LOW ( - 85 )
00bce8 4fff     +SBCI R31 , HIGH ( - 85 )
00bce9 9001     +LD R0 , Z +
00bcea 81f0     +LD R31 , Z
00bceb 2de0     +MOV R30 , R0
                 	__GETW1SX 85
00bcec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27:
00bced 93fa      	ST   -Y,R31
00bcee 93ea      	ST   -Y,R30
                +
00bcef e0aa     +LDI R26 , LOW ( 0xA )
00bcf0 e0b0     +LDI R27 , HIGH ( 0xA )
00bcf1 e080     +LDI R24 , BYTE3 ( 0xA )
00bcf2 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00bcf3 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
00bcf5 91a0 146b 	LDS  R26,_sdFreeSpace
00bcf7 91b0 146c 	LDS  R27,_sdFreeSpace+1
00bcf9 9180 146d 	LDS  R24,_sdFreeSpace+2
00bcfb 9190 146e 	LDS  R25,_sdFreeSpace+3
00bcfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x29:
00bcfe 27ff      	CLR  R31
00bcff 2766      	CLR  R22
00bd00 2777      	CLR  R23
00bd01 940e da29 	CALL __PUTPARD1
00bd03 cf5a      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
00bd04 e7ac      	LDI  R26,LOW(_dinStatus)
00bd05 e1b4      	LDI  R27,HIGH(_dinStatus)
00bd06 0fa2      	ADD  R26,R18
00bd07 1fb3      	ADC  R27,R19
00bd08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B:
00bd09 e0f0      	LDI  R31,0
00bd0a 9730      	SBIW R30,0
00bd0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2C:
                +
00bd0c e0a0     +LDI R26 , LOW ( 0x0 )
00bd0d e0b0     +LDI R27 , HIGH ( 0x0 )
00bd0e e080     +LDI R24 , BYTE3 ( 0x0 )
00bd0f e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00bd10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
00bd11 91a0 1483 	LDS  R26,_batteryVolt
00bd13 91b0 1484 	LDS  R27,_batteryVolt+1
00bd15 9180 1485 	LDS  R24,_batteryVolt+2
00bd17 9190 1486 	LDS  R25,_batteryVolt+3
00bd19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 40 TIMES, CODE SIZE REDUCTION:387 WORDS
                 SUBOPT_0x2E:
00bd1a b1e6      	IN   R30,0x6
00bd1b 7ce0      	ANDI R30,LOW(0xC0)
00bd1c e0f0      	LDI  R31,0
00bd1d 940e d8ec 	CALL __ASRW2
00bd1f 940e d8e8 	CALL __ASRW4
00bd21 95e0      	COM  R30
00bd22 95f0      	COM  R31
00bd23 70e3      	ANDI R30,LOW(0x3)
00bd24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
00bd25 91e0 0106 	LDS  R30,262
00bd27 71e0      	ANDI R30,LOW(0x10)
00bd28 e0f0      	LDI  R31,0
00bd29 940e d8e8 	CALL __ASRW4
00bd2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
00bd2c 940e da29 	CALL __PUTPARD1
00bd2e 91e0 10f4 	LDS  R30,_hwCalId
00bd30 91f0 10f5 	LDS  R31,_hwCalId+1
00bd32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x31:
00bd33 e3a6      	LDI  R26,LOW(_adcData)
00bd34 e1b4      	LDI  R27,HIGH(_adcData)
00bd35 cf65      	RJMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x32:
00bd36 e8a9      	LDI  R26,LOW(_eep_vref_val)
00bd37 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00bd38 940e da48 	CALL __EEPROMRDD
00bd3a 01df      	MOVW R26,R30
00bd3b 01cb      	MOVW R24,R22
                +
00bd3c e0e0     +LDI R30 , LOW ( 0x447FC000 )
00bd3d ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00bd3e e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00bd3f e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00bd40 940e d82b 	CALL __DIVF21
00bd42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x33:
                +
00bd43 e0a0     +LDI R26 , LOW ( 0x42C80000 )
00bd44 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
00bd45 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
00bd46 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
00bd47 940e d7dd 	CALL __MULF12
00bd49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 84 TIMES, CODE SIZE REDUCTION:163 WORDS
                 SUBOPT_0x34:
00bd4a 2766      	CLR  R22
00bd4b 2777      	CLR  R23
00bd4c 940e da29 	CALL __PUTPARD1
00bd4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
00bd4f eca8      	LDI  R26,LOW(200)
00bd50 e0b0      	LDI  R27,0
00bd51 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x36:
00bd53 e080      	LDI  R24,0
00bd54 940e 9afc 	CALL _printDebug
00bd56 9624      	ADIW R28,4
00bd57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x37:
00bd58 940e da99 	CALL __SAVELOCR6
                +
00bd5a e000     +LDI R16 , LOW ( 0 )
00bd5b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00bd5c ce7b      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
                +
00bd5d e1ad     +LDI R26 , 29
00bd5e 9fa2     +MUL R26 , R18
00bd5f 01f0     +MOVW R30 , R0
00bd60 9fa3     +MUL R26 , R19
00bd61 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00bd62 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00bd63 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00bd64 81e0      	LD   R30,Z
00bd65 30e0      	CPI  R30,0
00bd66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39:
00bd67 91a0 14e0 	LDS  R26,_ETH_rst_timer_S0000001000
00bd69 91b0 14e1 	LDS  R27,_ETH_rst_timer_S0000001000+1
00bd6b 9180 14e2 	LDS  R24,_ETH_rst_timer_S0000001000+2
00bd6d 9190 14e3 	LDS  R25,_ETH_rst_timer_S0000001000+3
00bd6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x3A:
                +
00bd70 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00bd71 efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00bd72 07be     +CPC R27 , R30
00bd73 efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00bd74 078e     +CPC R24 , R30
00bd75 efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00bd76 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00bd77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00bd78 93fa      	ST   -Y,R31
00bd79 93ea      	ST   -Y,R30
                +
00bd7a e0af     +LDI R26 , LOW ( 0xF )
00bd7b e0b0     +LDI R27 , HIGH ( 0xF )
00bd7c e080     +LDI R24 , BYTE3 ( 0xF )
00bd7d e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00bd7e 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C:
00bd80 940e da29 	CALL __PUTPARD1
00bd82 91a0 1377 	LDS  R26,_baseCounter
00bd84 91b0 1378 	LDS  R27,_baseCounter+1
00bd86 9180 1379 	LDS  R24,_baseCounter+2
00bd88 9190 137a 	LDS  R25,_baseCounter+3
00bd8a 91e0 14e0 	LDS  R30,_ETH_rst_timer_S0000001000
00bd8c 91f0 14e1 	LDS  R31,_ETH_rst_timer_S0000001000+1
00bd8e 9160 14e2 	LDS  R22,_ETH_rst_timer_S0000001000+2
00bd90 9170 14e3 	LDS  R23,_ETH_rst_timer_S0000001000+3
00bd92 940e d89e 	CALL __SUBD12
00bd94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D:
00bd95 01af      	MOVW R20,R30
                +
00bd96 2b04     +OR R16 , R20
00bd97 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00bd98 2e04      	MOV  R0,R20
00bd99 2a05      	OR   R0,R21
00bd9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00bd9b 940e 43d0 	CALL _DS1672_read
                +
00bd9d 83ef     +STD Y + 7 , R30
00bd9e 87f8     +STD Y + 7 + 1 , R31
00bd9f 8769     +STD Y + 7 + 2 , R22
00bda0 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00bda1 81ee      	LDD  R30,Y+6
00bda2 30e0      	CPI  R30,0
00bda3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3F:
                +
00bda4 81ef     +LDD R30 , Y + 7
00bda5 85f8     +LDD R31 , Y + 7 + 1
00bda6 8569     +LDD R22 , Y + 7 + 2
00bda7 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00bda8 940e da29 	CALL __PUTPARD1
00bdaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00bdab 93ea      	ST   -Y,R30
00bdac 85ab      	LDD  R26,Y+11
00bdad 940e 749f 	CALL _addEventQueue
00bdaf 01af      	MOVW R20,R30
00bdb0 2355      	TST  R21
00bdb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41:
                +
00bdb2 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 849 ) )
00bdb3 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 849 ) )
00bdb4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 849 ) )
00bdb5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 849 ) )
                 	__POINTD1FN _0x0,849
00bdb6 ce35      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
00bdb7 933a      	ST   -Y,R19
00bdb8 932a      	ST   -Y,R18
00bdb9 01de      	MOVW R26,R28
00bdba 9618      	ADIW R26,8
00bdbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
00bdbc 01f9      	MOVW R30,R18
00bdbd 9631      	ADIW R30,1
00bdbe 940e d919 	CALL __CWD1
00bdc0 940e da29 	CALL __PUTPARD1
00bdc2 ce9b      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
00bdc3 940e da29 	CALL __PUTPARD1
00bdc5 cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
00bdc6 01f9      	MOVW R30,R18
00bdc7 9631      	ADIW R30,1
00bdc8 940e d919 	CALL __CWD1
00bdca 940e da29 	CALL __PUTPARD1
00bdcc e084      	LDI  R24,4
00bdcd 940e 7c8c 	CALL _printOLED
00bdcf 9628      	ADIW R28,8
00bdd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x46:
00bdd1 940e da99 	CALL __SAVELOCR6
                +
00bdd3 e000     +LDI R16 , LOW ( 0 )
00bdd4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00bdd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
00bdd6 e0f0      	LDI  R31,0
00bdd7 31e0      	CPI  R30,LOW(0x10)
00bdd8 e0a0      	LDI  R26,HIGH(0x10)
00bdd9 07fa      	CPC  R31,R26
00bdda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
00bddb e0ab      	LDI  R26,LOW(11)
00bddc e0b0      	LDI  R27,0
00bddd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x49:
00bdde 940e da29 	CALL __PUTPARD1
00bde0 01fa      	MOVW R30,R20
00bde1 940e d919 	CALL __CWD1
00bde3 940e da29 	CALL __PUTPARD1
00bde5 ce78      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
00bde6 940e a0ed 	CALL _free
00bde8 efef      	LDI  R30,LOW(65535)
00bde9 efff      	LDI  R31,HIGH(65535)
00bdea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
00bdeb 01fa      	MOVW R30,R20
                +
00bdec 5f4f     +SUBI R20 , LOW ( - 1 )
00bded 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00bdee 0fe2      	ADD  R30,R18
00bdef 1ff3      	ADC  R31,R19
00bdf0 01df      	MOVW R26,R30
00bdf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
00bdf2 01fa      	MOVW R30,R20
                +
00bdf3 5f4f     +SUBI R20 , LOW ( - 1 )
00bdf4 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00bdf5 0fe2      	ADD  R30,R18
00bdf6 1ff3      	ADC  R31,R19
00bdf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x4D:
00bdf8 93fa      	ST   -Y,R31
00bdf9 93ea      	ST   -Y,R30
00bdfa e0a4      	LDI  R26,LOW(4)
00bdfb e0b0      	LDI  R27,0
00bdfc 940c a10f 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4E:
00bdfe 940e 43d0 	CALL _DS1672_read
                +
00be00 87e8     +STD Y + 8 , R30
00be01 87f9     +STD Y + 8 + 1 , R31
00be02 876a     +STD Y + 8 + 2 , R22
00be03 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00be04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x4F:
                +
00be05 85e8     +LDD R30 , Y + 8
00be06 85f9     +LDD R31 , Y + 8 + 1
00be07 856a     +LDD R22 , Y + 8 + 2
00be08 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00be09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x50:
00be0a 940e da29 	CALL __PUTPARD1
                +
00be0c 85ee     +LDD R30 , Y + 14
00be0d 85ff     +LDD R31 , Y + 14 + 1
00be0e 8968     +LDD R22 , Y + 14 + 2
00be0f 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00be10 940e da29 	CALL __PUTPARD1
00be12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x51:
                +
00be13 89ea     +LDD R30 , Y + 18
00be14 89fb     +LDD R31 , Y + 18 + 1
00be15 896c     +LDD R22 , Y + 18 + 2
00be16 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00be17 940e da29 	CALL __PUTPARD1
00be19 e08c      	LDI  R24,12
00be1a 940e 9afc 	CALL _printDebug
00be1c 9660      	ADIW R28,16
00be1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x52:
                +
00be1e 85aa     +LDD R26 , Y + 10
00be1f 85bb     +LDD R27 , Y + 10 + 1
00be20 858c     +LDD R24 , Y + 10 + 2
00be21 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00be22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
00be23 dffa      	RCALL SUBOPT_0x52
00be24 cf4b      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x54:
00be25 93ea      	ST   -Y,R30
                +
00be26 85eb     +LDD R30 , Y + 11
00be27 85fc     +LDD R31 , Y + 11 + 1
00be28 856d     +LDD R22 , Y + 11 + 2
00be29 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00be2a 940e da29 	CALL __PUTPARD1
00be2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
00be2d 85ad     +LDD R26 , Y + 13
00be2e 85be     +LDD R27 , Y + 13 + 1
00be2f 858f     +LDD R24 , Y + 13 + 2
00be30 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00be31 940c 541f 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x56:
00be33 01fe      	MOVW R30,R28
00be34 9636      	ADIW R30,6
00be35 93fa      	ST   -Y,R31
00be36 93ea      	ST   -Y,R30
00be37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x57:
00be38 940e da29 	CALL __PUTPARD1
                +
00be3a 85ea     +LDD R30 , Y + 10
00be3b 85fb     +LDD R31 , Y + 10 + 1
00be3c 856c     +LDD R22 , Y + 10 + 2
00be3d 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00be3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x58:
00be3f 2fe5      	MOV  R30,R21
00be40 27ff      	CLR  R31
00be41 2766      	CLR  R22
00be42 2777      	CLR  R23
00be43 940e da29 	CALL __PUTPARD1
00be45 2fe4      	MOV  R30,R20
00be46 27ff      	CLR  R31
00be47 2766      	CLR  R22
00be48 2777      	CLR  R23
00be49 940e da29 	CALL __PUTPARD1
00be4b e08c      	LDI  R24,12
00be4c 940e 9afc 	CALL _printDebug
00be4e 9660      	ADIW R28,16
00be4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x59:
                +
00be50 81ae     +LDD R26 , Y + 6
00be51 81bf     +LDD R27 , Y + 6 + 1
00be52 8588     +LDD R24 , Y + 6 + 2
00be53 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00be54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5A:
00be55 01fe      	MOVW R30,R28
00be56 963c      	ADIW R30,12
00be57 93fa      	ST   -Y,R31
00be58 93ea      	ST   -Y,R30
00be59 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x5B:
00be5a 940e da29 	CALL __PUTPARD1
00be5c ddd6      	RCALL SUBOPT_0xC
00be5d 940e da29 	CALL __PUTPARD1
00be5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
00be60 ddcd      	RCALL SUBOPT_0xB
00be61 cf0e      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
00be62 01fe      	MOVW R30,R28
00be63 9670      	ADIW R30,16
00be64 93fa      	ST   -Y,R31
00be65 93ea      	ST   -Y,R30
00be66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5E:
00be67 eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00be68 e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00be69 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00be6b 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00be6d 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00be6f bf6c     +OUT EIND , R22
00be70 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00be71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5F:
00be72 940e da29 	CALL __PUTPARD1
00be74 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00be75 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00be76 ced3      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x60:
                +
00be77 85ee     +LDD R30 , Y + 14
00be78 85ff     +LDD R31 , Y + 14 + 1
00be79 8968     +LDD R22 , Y + 14 + 2
00be7a 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00be7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
00be7c 85ae     +LDD R26 , Y + 14
00be7d 85bf     +LDD R27 , Y + 14 + 1
00be7e 8988     +LDD R24 , Y + 14 + 2
00be7f 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00be80 940c 7f1c 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
00be82 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00be84 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00be86 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00be88 bf6c     +OUT EIND , R22
00be89 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00be8a 01af      	MOVW R20,R30
00be8b 2355      	TST  R21
00be8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x63:
00be8d 01fe      	MOVW R30,R28
00be8e 9637      	ADIW R30,7
00be8f 93fa      	ST   -Y,R31
00be90 93ea      	ST   -Y,R30
00be91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
00be92 85eb     +LDD R30 , Y + 11
00be93 85fc     +LDD R31 , Y + 11 + 1
00be94 856d     +LDD R22 , Y + 11 + 2
00be95 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00be96 940e da29 	CALL __PUTPARD1
00be98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 90 TIMES, CODE SIZE REDUCTION:264 WORDS
                 SUBOPT_0x65:
00be99 27ff      	CLR  R31
00be9a 2766      	CLR  R22
00be9b 2777      	CLR  R23
00be9c 940e da29 	CALL __PUTPARD1
00be9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x66:
00be9f e08c      	LDI  R24,12
00bea0 940e 9afc 	CALL _printDebug
00bea2 9660      	ADIW R28,16
00bea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
                +
00bea4 81af     +LDD R26 , Y + 7
00bea5 85b8     +LDD R27 , Y + 7 + 1
00bea6 8589     +LDD R24 , Y + 7 + 2
00bea7 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00bea8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
00bea9 01fe      	MOVW R30,R28
00beaa 963b      	ADIW R30,11
00beab 93fa      	ST   -Y,R31
00beac 93ea      	ST   -Y,R30
00bead 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
00beae eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00beaf e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00beb0 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00beb2 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00beb4 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00beb6 bf6c     +OUT EIND , R22
00beb7 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00beb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6A:
00beb9 940e da29 	CALL __PUTPARD1
00bebb ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00bebc e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00bebd ce8c      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
                +
00bebe 85e9     +LDD R30 , Y + 9
00bebf 85fa     +LDD R31 , Y + 9 + 1
00bec0 856b     +LDD R22 , Y + 9 + 2
00bec1 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00bec2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6C:
00bec3 01fe      	MOVW R30,R28
00bec4 9672      	ADIW R30,18
00bec5 93fa      	ST   -Y,R31
00bec6 93ea      	ST   -Y,R30
00bec7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
00bec8 df55      	RCALL SUBOPT_0x52
00bec9 940e da89 	CALL __CPD02
00becb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6E:
00becc e0e0      	LDI  R30,LOW(0)
00becd 93e0 1426 	STS  _logDataWait,R30
                +
00becf e0e0     +LDI R30 , LOW ( 0x0 )
00bed0 e0f0     +LDI R31 , HIGH ( 0x0 )
00bed1 e060     +LDI R22 , BYTE3 ( 0x0 )
00bed2 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00bed3 93e0 1427+STS _logDataWait + ( 1 ) , R30
00bed5 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00bed7 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00bed9 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00bedb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6F:
                +
00bedc 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00bede 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00bee0 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00bee2 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00bee4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x70:
00bee5 01de      	MOVW R26,R28
00bee6 9652      	ADIW R26,18
                +
00bee7 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00bee9 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00beeb 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00beed bf6c     +OUT EIND , R22
00beee 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00beef 018f      	MOVW R16,R30
00bef0 2311      	TST  R17
00bef1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x71:
00bef2 e0e0      	LDI  R30,LOW(0)
00bef3 93e0 142b 	STS  _logEventWait,R30
                +
00bef5 e0e0     +LDI R30 , LOW ( 0x0 )
00bef6 e0f0     +LDI R31 , HIGH ( 0x0 )
00bef7 e060     +LDI R22 , BYTE3 ( 0x0 )
00bef8 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00bef9 93e0 142c+STS _logEventWait + ( 1 ) , R30
00befb 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00befd 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00beff 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00bf01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
00bf02 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00bf04 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00bf06 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00bf08 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00bf0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
00bf0b e0a2      	LDI  R26,LOW(2)
00bf0c e0b0      	LDI  R27,0
00bf0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00bf0e e6a4      	LDI  R26,LOW(100)
00bf0f e0b0      	LDI  R27,0
00bf10 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x75:
00bf12 e0a1      	LDI  R26,LOW(1)
00bf13 e0b0      	LDI  R27,0
00bf14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
00bf15 e0a3      	LDI  R26,LOW(3)
00bf16 e0b0      	LDI  R27,0
00bf17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x77:
00bf18 e0a4      	LDI  R26,LOW(4)
00bf19 e0b0      	LDI  R27,0
00bf1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x78:
00bf1b 01df      	MOVW R26,R30
00bf1c 940e d9f4 	CALL __GETD1P
00bf1e 940e da29 	CALL __PUTPARD1
00bf20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x79:
00bf21 93e0 0102 	STS  258,R30
00bf23 ce2b      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7A:
00bf24 e3a2      	LDI  R26,LOW(50)
00bf25 e0b0      	LDI  R27,0
00bf26 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7B:
00bf28 920a      	ST   -Y,R0
00bf29 921a      	ST   -Y,R1
00bf2a 92fa      	ST   -Y,R15
00bf2b 936a      	ST   -Y,R22
00bf2c 937a      	ST   -Y,R23
00bf2d 938a      	ST   -Y,R24
00bf2e 939a      	ST   -Y,R25
00bf2f 93aa      	ST   -Y,R26
00bf30 93ba      	ST   -Y,R27
00bf31 93ea      	ST   -Y,R30
00bf32 93fa      	ST   -Y,R31
00bf33 b7eb      	IN   R30,RAMPZ
00bf34 93ea      	ST   -Y,R30
00bf35 b7ec      	IN   R30,EIND
00bf36 93ea      	ST   -Y,R30
00bf37 b7ef      	IN   R30,SREG
00bf38 93ea      	ST   -Y,R30
00bf39 931a      	ST   -Y,R17
00bf3a 930a      	ST   -Y,R16
00bf3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7C:
00bf3c 91ed      	LD   R30,X+
00bf3d 91fd      	LD   R31,X+
00bf3e 9631      	ADIW R30,1
00bf3f 93fe      	ST   -X,R31
00bf40 93ee      	ST   -X,R30
00bf41 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
00bf42 91a0 10ee 	LDS  R26,_configLen
00bf44 91b0 10ef 	LDS  R27,_configLen+1
00bf46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7E:
00bf47 e0e0      	LDI  R30,LOW(0)
00bf48 93e0 10ee 	STS  _configLen,R30
00bf4a 93e0 10ef 	STS  _configLen+1,R30
00bf4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x7F:
00bf4d 93ba      	ST   -Y,R27
00bf4e 93aa      	ST   -Y,R26
00bf4f 940e da9b 	CALL __SAVELOCR4
00bf51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x80:
00bf52 85e8      	LDD  R30,Y+8
00bf53 85f9      	LDD  R31,Y+8+1
00bf54 9631      	ADIW R30,1
00bf55 87e8      	STD  Y+8,R30
00bf56 87f9      	STD  Y+8+1,R31
00bf57 9731      	SBIW R30,1
00bf58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x81:
00bf59 93ba      	ST   -Y,R27
00bf5a 93aa      	ST   -Y,R26
00bf5b 931a      	ST   -Y,R17
00bf5c 930a      	ST   -Y,R16
00bf5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00bf5e 81ea      	LDD  R30,Y+2
00bf5f 81fb      	LDD  R31,Y+2+1
00bf60 170e      	CP   R16,R30
00bf61 071f      	CPC  R17,R31
00bf62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
00bf63 01f8      	MOVW R30,R16
00bf64 81ac      	LDD  R26,Y+4
00bf65 81bd      	LDD  R27,Y+4+1
00bf66 0fae      	ADD  R26,R30
00bf67 1fbf      	ADC  R27,R31
00bf68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x84:
00bf69 81a9      	LDD  R26,Y+1
00bf6a 81ba      	LDD  R27,Y+1+1
00bf6b 27ee      	CLR  R30
00bf6c 0fa1      	ADD  R26,R17
00bf6d 1fbe      	ADC  R27,R30
00bf6e 91ec      	LD   R30,X
00bf6f 30e0      	CPI  R30,0
00bf70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00bf71 81a9      	LDD  R26,Y+1
00bf72 81ba      	LDD  R27,Y+1+1
00bf73 27ee      	CLR  R30
00bf74 0fa1      	ADD  R26,R17
00bf75 1fbe      	ADC  R27,R30
00bf76 91ac      	LD   R26,X
00bf77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
00bf78 940e da2e 	CALL __PUTPARD2
00bf7a 940e da10 	CALL __GETD1S0
00bf7c 940e da7d 	CALL __CPD10
00bf7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x87:
00bf7f 940e da10 	CALL __GETD1S0
00bf81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x88:
00bf82 91a0 1377 	LDS  R26,_baseCounter
00bf84 91b0 1378 	LDS  R27,_baseCounter+1
00bf86 9180 1379 	LDS  R24,_baseCounter+2
00bf88 9190 137a 	LDS  R25,_baseCounter+3
00bf8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x89:
                +
00bf8b 81ec     +LDD R30 , Y + 4
00bf8c 81fd     +LDD R31 , Y + 4 + 1
00bf8d 816e     +LDD R22 , Y + 4 + 2
00bf8e 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00bf8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8A:
00bf90 940e d894 	CALL __ADDD12
00bf92 940e da1a 	CALL __PUTD1S0
00bf94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
00bf95 91e0 1377 	LDS  R30,_baseCounter
00bf97 91f0 1378 	LDS  R31,_baseCounter+1
00bf99 9160 1379 	LDS  R22,_baseCounter+2
00bf9b 9170 137a 	LDS  R23,_baseCounter+3
00bf9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x8C:
00bf9e 940e da15 	CALL __GETD2S0
00bfa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x8D:
00bfa1 940e da29 	CALL __PUTPARD1
                +
00bfa3 85ec     +LDD R30 , Y + 12
00bfa4 85fd     +LDD R31 , Y + 12 + 1
00bfa5 856e     +LDD R22 , Y + 12 + 2
00bfa6 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00bfa7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8E:
00bfa8 940e da29 	CALL __PUTPARD1
00bfaa cef4      	RJMP SUBOPT_0x66
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8F:
                +
00bfab e0e0     +LDI R30 , LOW ( 0x0 )
00bfac e0f0     +LDI R31 , HIGH ( 0x0 )
00bfad e060     +LDI R22 , BYTE3 ( 0x0 )
00bfae e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00bfaf 940e d9ff 	CALL __PUTDP1
00bfb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x90:
00bfb2 920a      	ST   -Y,R0
00bfb3 921a      	ST   -Y,R1
00bfb4 92fa      	ST   -Y,R15
00bfb5 936a      	ST   -Y,R22
00bfb6 937a      	ST   -Y,R23
00bfb7 938a      	ST   -Y,R24
00bfb8 939a      	ST   -Y,R25
00bfb9 93aa      	ST   -Y,R26
00bfba 93ba      	ST   -Y,R27
00bfbb 93ea      	ST   -Y,R30
00bfbc 93fa      	ST   -Y,R31
00bfbd b7eb      	IN   R30,RAMPZ
00bfbe 93ea      	ST   -Y,R30
00bfbf b7ec      	IN   R30,EIND
00bfc0 93ea      	ST   -Y,R30
00bfc1 b7ef      	IN   R30,SREG
00bfc2 93ea      	ST   -Y,R30
00bfc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
00bfc4 efee      	LDI  R30,LOW(254)
00bfc5 93e0 0085 	STS  133,R30
00bfc7 e7e9      	LDI  R30,LOW(121)
00bfc8 93e0 0084 	STS  132,R30
00bfca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x92:
00bfcb e8e5      	LDI  R30,LOW(133)
00bfcc 93e0 0095 	STS  149,R30
00bfce eeed      	LDI  R30,LOW(237)
00bfcf 93e0 0094 	STS  148,R30
00bfd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x93:
00bfd2 940e d9fa 	CALL __GETD1P_INC
                +
00bfd4 5fef     +SUBI R30 , LOW ( - 1 )
00bfd5 4fff     +SBCI R31 , HIGH ( - 1 )
00bfd6 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00bfd7 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00bfd8 940e da04 	CALL __PUTDP1_DEC
00bfda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x94:
00bfdb e8e5      	LDI  R30,LOW(133)
00bfdc 93e0 00a5 	STS  165,R30
00bfde eeed      	LDI  R30,LOW(237)
00bfdf 93e0 00a4 	STS  164,R30
00bfe1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x95:
00bfe2 93ba      	ST   -Y,R27
00bfe3 93aa      	ST   -Y,R26
00bfe4 81e8      	LD   R30,Y
00bfe5 81f9      	LDD  R31,Y+1
00bfe6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x96:
00bfe7 b1e6      	IN   R30,0x6
00bfe8 7ce0      	ANDI R30,LOW(0xC0)
00bfe9 e0f0      	LDI  R31,0
00bfea 940e d8ec 	CALL __ASRW2
00bfec 940e d8e8 	CALL __ASRW4
00bfee 95e0      	COM  R30
00bfef 95f0      	COM  R31
00bff0 70e3      	ANDI R30,LOW(0x3)
00bff1 70f0      	ANDI R31,HIGH(0x3)
00bff2 9731      	SBIW R30,1
00bff3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x97:
00bff4 b1e3      	IN   R30,0x3
00bff5 71e0      	ANDI R30,LOW(0x10)
00bff6 e0f0      	LDI  R31,0
00bff7 940e d8e8 	CALL __ASRW4
00bff9 9730      	SBIW R30,0
00bffa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x98:
00bffb e0a5      	LDI  R26,LOW(5)
00bffc e0b0      	LDI  R27,0
00bffd 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x99:
00bfff b1e3      	IN   R30,0x3
00c000 72e0      	ANDI R30,LOW(0x20)
00c001 e0f0      	LDI  R31,0
00c002 95f5      	ASR  R31
00c003 95e7      	ROR  R30
00c004 940e d8e8 	CALL __ASRW4
00c006 9730      	SBIW R30,0
00c007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
00c008 b1e3      	IN   R30,0x3
00c009 74e0      	ANDI R30,LOW(0x40)
00c00a e0f0      	LDI  R31,0
00c00b 940e d8ec 	CALL __ASRW2
00c00d 940e d8e8 	CALL __ASRW4
00c00f 9730      	SBIW R30,0
00c010 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9B:
00c011 b1e3      	IN   R30,0x3
00c012 78e0      	ANDI R30,LOW(0x80)
00c013 e0f0      	LDI  R31,0
00c014 940e d8ea 	CALL __ASRW3
00c016 940e d8e8 	CALL __ASRW4
00c018 9730      	SBIW R30,0
00c019 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9C:
00c01a 931a      	ST   -Y,R17
00c01b 930a      	ST   -Y,R16
                +
00c01c e000     +LDI R16 , LOW ( 0 )
00c01d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c01e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9D:
00c01f e0f0      	LDI  R31,0
00c020 70f0      	ANDI R31,HIGH(0xFF)
00c021 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9E:
00c022 91a0 14e8 	LDS  R26,_adcBatt
00c024 91b0 14e9 	LDS  R27,_adcBatt+1
00c026 9180 14ea 	LDS  R24,_adcBatt+2
00c028 9190 14eb 	LDS  R25,_adcBatt+3
00c02a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9F:
00c02b 2766      	CLR  R22
00c02c 2777      	CLR  R23
00c02d 940e d753 	CALL __CDF1
00c02f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA0:
                +
00c030 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00c031 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00c032 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00c033 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00c034 940e d7dd 	CALL __MULF12
00c036 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xA1:
00c037 940e d78d 	CALL __ADDF12
00c039 01df      	MOVW R26,R30
00c03a 01cb      	MOVW R24,R22
                +
00c03b e0e0     +LDI R30 , LOW ( 0x41200000 )
00c03c e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c03d e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c03e e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c03f 940e d82b 	CALL __DIVF21
00c041 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA2:
00c042 940e d7dd 	CALL __MULF12
00c044 940e da1a 	CALL __PUTD1S0
00c046 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA3:
00c047 91e0 0108 	LDS  R30,264
00c049 7fe1      	ANDI R30,LOW(0xF1)
00c04a 93e0 0108 	STS  264,R30
00c04c e0a8      	LDI  R26,LOW(264)
00c04d e0b1      	LDI  R27,HIGH(264)
00c04e 2e0a      	MOV  R0,R26
00c04f 91ac      	LD   R26,X
00c050 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA4:
00c051 0fee      	LSL  R30
00c052 2bea      	OR   R30,R26
00c053 2da0      	MOV  R26,R0
00c054 93ec      	ST   X,R30
00c055 e1a4      	LDI  R26,LOW(20)
00c056 e0b0      	LDI  R27,0
00c057 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA5:
00c059 e3a6      	LDI  R26,LOW(_adcData)
00c05a e1b4      	LDI  R27,HIGH(_adcData)
00c05b cc4c      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA6:
00c05c dfce      	RCALL SUBOPT_0x9F
00c05d 940e d9ff 	CALL __PUTDP1
00c05f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA7:
00c060 940e d691 	CALL _i2c_start
00c062 eda0      	LDI  R26,LOW(208)
00c063 940c d6c5 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA8:
00c065 940e d6c5 	CALL _i2c_write
00c067 940c d6a0 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA9:
00c069 e0aa      	LDI  R26,LOW(10)
00c06a e0b0      	LDI  R27,0
00c06b 940e d6dd 	CALL _delay_ms
00c06d e0e0      	LDI  R30,LOW(0)
00c06e e0f0      	LDI  R31,HIGH(0)
00c06f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0xAA:
                +
00c070 83ec     +STD Y + 4 , R30
00c071 83fd     +STD Y + 4 + 1 , R31
00c072 836e     +STD Y + 4 + 2 , R22
00c073 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00c074 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0xAB:
                +
00c075 81ac     +LDD R26 , Y + 4
00c076 81bd     +LDD R27 , Y + 4 + 1
00c077 818e     +LDD R24 , Y + 4 + 2
00c078 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00c079 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAC:
00c07a e0e8      	LDI  R30,LOW(8)
00c07b 940e d8c7 	CALL __LSLD12
00c07d cff2      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xAD:
00c07e e0f0      	LDI  R31,0
00c07f dff5      	RCALL SUBOPT_0xAB
00c080 940e d919 	CALL __CWD1
00c082 940e d894 	CALL __ADDD12
00c084 dfeb      	RCALL SUBOPT_0xAA
00c085 dfef      	RCALL SUBOPT_0xAB
00c086 cff3      	RJMP SUBOPT_0xAC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xAE:
00c087 2fe1      	MOV  R30,R17
00c088 e0f0      	LDI  R31,0
00c089 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAF:
00c08a 940e d919 	CALL __CWD1
00c08c 940e d894 	CALL __ADDD12
00c08e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB0:
00c08f dfe0      	RCALL SUBOPT_0xAA
00c090 cefa      	RJMP SUBOPT_0x89
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB1:
                +
00c091 e3ec     +LDI R30 , LOW ( 0x3C )
00c092 e0f0     +LDI R31 , HIGH ( 0x3C )
00c093 e060     +LDI R22 , BYTE3 ( 0x3C )
00c094 e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00c095 940e d990 	CALL __DIVD21U
00c097 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB2:
                +
00c098 83ee     +STD Y + 6 , R30
00c099 83ff     +STD Y + 6 + 1 , R31
00c09a 8768     +STD Y + 6 + 2 , R22
00c09b 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c09c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB3:
                +
00c09d e3ac     +LDI R26 , LOW ( 0x3C )
00c09e e0b0     +LDI R27 , HIGH ( 0x3C )
00c09f e080     +LDI R24 , BYTE3 ( 0x3C )
00c0a0 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c0a1 940e d93a 	CALL __MULD12U
00c0a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xB4:
                +
00c0a4 83ea     +STD Y + 2 , R30
00c0a5 83fb     +STD Y + 2 + 1 , R31
00c0a6 836c     +STD Y + 2 + 2 , R22
00c0a7 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00c0a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0xB5:
                +
00c0a9 81ea     +LDD R30 , Y + 2
00c0aa 81fb     +LDD R31 , Y + 2 + 1
00c0ab 816c     +LDD R22 , Y + 2 + 2
00c0ac 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00c0ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0xB6:
                +
00c0ae 81aa     +LDD R26 , Y + 2
00c0af 81bb     +LDD R27 , Y + 2 + 1
00c0b0 818c     +LDD R24 , Y + 2 + 2
00c0b1 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00c0b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xB7:
                +
00c0b3 81ee     +LDD R30 , Y + 6
00c0b4 81ff     +LDD R31 , Y + 6 + 1
00c0b5 8568     +LDD R22 , Y + 6 + 2
00c0b6 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00c0b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB8:
                +
00c0b8 83ee     +STD Y + 6 , R30
00c0b9 83ff     +STD Y + 6 + 1 , R31
00c0ba 8768     +STD Y + 6 + 2 , R22
00c0bb 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c0bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB9:
00c0bd dd92      	RCALL SUBOPT_0x59
                +
00c0be ebe5     +LDI R30 , LOW ( 0x5B5 )
00c0bf e0f5     +LDI R31 , HIGH ( 0x5B5 )
00c0c0 e060     +LDI R22 , BYTE3 ( 0x5B5 )
00c0c1 e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00c0c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBA:
                +
00c0c3 8fee     +STD Y + 30 , R30
00c0c4 8fff     +STD Y + 30 + 1 , R31
00c0c5 a368     +STD Y + 30 + 2 , R22
00c0c6 a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00c0c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBB:
                +
00c0c8 8daa     +LDD R26 , Y + 26
00c0c9 8dbb     +LDD R27 , Y + 26 + 1
00c0ca 8d8c     +LDD R24 , Y + 26 + 2
00c0cb 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00c0cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBC:
                +
00c0cd 33ac     +CPI R26 , LOW ( 0x3C )
00c0ce e0e0     +LDI R30 , HIGH ( 0x3C )
00c0cf 07be     +CPC R27 , R30
00c0d0 e0e0     +LDI R30 , BYTE3 ( 0x3C )
00c0d1 078e     +CPC R24 , R30
00c0d2 e0e0     +LDI R30 , BYTE4 ( 0x3C )
00c0d3 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00c0d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBD:
                +
00c0d5 8dee     +LDD R30 , Y + 30
00c0d6 8dff     +LDD R31 , Y + 30 + 1
00c0d7 a168     +LDD R22 , Y + 30 + 2
00c0d8 a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00c0d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xBE:
                +
00c0da 5fef     +SUBI R30 , LOW ( - 1 )
00c0db 4fff     +SBCI R31 , HIGH ( - 1 )
00c0dc 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c0dd 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c0de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBF:
                +
00c0df 8dae     +LDD R26 , Y + 30
00c0e0 8dbf     +LDD R27 , Y + 30 + 1
00c0e1 a188     +LDD R24 , Y + 30 + 2
00c0e2 a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
00c0e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC0:
                +
00c0e4 a1ee     +LDD R30 , Y + 38
00c0e5 a1ff     +LDD R31 , Y + 38 + 1
00c0e6 a568     +LDD R22 , Y + 38 + 2
00c0e7 a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00c0e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC1:
                +
00c0e9 e6ad     +LDI R26 , LOW ( 0x16D )
00c0ea e0b1     +LDI R27 , HIGH ( 0x16D )
00c0eb e080     +LDI R24 , BYTE3 ( 0x16D )
00c0ec e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00c0ed 940e d93a 	CALL __MULD12U
00c0ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC2:
00c0f0 940e da3b 	CALL __SWAPD12
00c0f2 940e d89e 	CALL __SUBD12
00c0f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC3:
                +
00c0f5 8bee     +STD Y + 22 , R30
00c0f6 8bff     +STD Y + 22 + 1 , R31
00c0f7 8f68     +STD Y + 22 + 2 , R22
00c0f8 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00c0f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC4:
                +
00c0fa 89ee     +LDD R30 , Y + 22
00c0fb 89ff     +LDD R31 , Y + 22 + 1
00c0fc 8d68     +LDD R22 , Y + 22 + 2
00c0fd 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00c0fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC5:
                +
00c0ff a1ea     +LDD R30 , Y + 34
00c100 a1fb     +LDD R31 , Y + 34 + 1
00c101 a16c     +LDD R22 , Y + 34 + 2
00c102 a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00c103 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC6:
                +
00c104 30e1     +CPI R30 , LOW ( 0x1 )
00c105 e0a0     +LDI R26 , HIGH ( 0x1 )
00c106 07fa     +CPC R31 , R26
00c107 e0a0     +LDI R26 , BYTE3 ( 0x1 )
00c108 076a     +CPC R22 , R26
00c109 e0a0     +LDI R26 , BYTE4 ( 0x1 )
00c10a 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00c10b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC7:
                +
00c10c 30e2     +CPI R30 , LOW ( 0x2 )
00c10d e0a0     +LDI R26 , HIGH ( 0x2 )
00c10e 07fa     +CPC R31 , R26
00c10f e0a0     +LDI R26 , BYTE3 ( 0x2 )
00c110 076a     +CPC R22 , R26
00c111 e0a0     +LDI R26 , BYTE4 ( 0x2 )
00c112 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00c113 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC8:
                +
00c114 30e3     +CPI R30 , LOW ( 0x3 )
00c115 e0a0     +LDI R26 , HIGH ( 0x3 )
00c116 07fa     +CPC R31 , R26
00c117 e0a0     +LDI R26 , BYTE3 ( 0x3 )
00c118 076a     +CPC R22 , R26
00c119 e0a0     +LDI R26 , BYTE4 ( 0x3 )
00c11a 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00c11b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC9:
                +
00c11c 30e4     +CPI R30 , LOW ( 0x4 )
00c11d e0a0     +LDI R26 , HIGH ( 0x4 )
00c11e 07fa     +CPC R31 , R26
00c11f e0a0     +LDI R26 , BYTE3 ( 0x4 )
00c120 076a     +CPC R22 , R26
00c121 e0a0     +LDI R26 , BYTE4 ( 0x4 )
00c122 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00c123 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCA:
                +
00c124 30e5     +CPI R30 , LOW ( 0x5 )
00c125 e0a0     +LDI R26 , HIGH ( 0x5 )
00c126 07fa     +CPC R31 , R26
00c127 e0a0     +LDI R26 , BYTE3 ( 0x5 )
00c128 076a     +CPC R22 , R26
00c129 e0a0     +LDI R26 , BYTE4 ( 0x5 )
00c12a 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00c12b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCB:
                +
00c12c 30e6     +CPI R30 , LOW ( 0x6 )
00c12d e0a0     +LDI R26 , HIGH ( 0x6 )
00c12e 07fa     +CPC R31 , R26
00c12f e0a0     +LDI R26 , BYTE3 ( 0x6 )
00c130 076a     +CPC R22 , R26
00c131 e0a0     +LDI R26 , BYTE4 ( 0x6 )
00c132 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00c133 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCC:
                +
00c134 30e7     +CPI R30 , LOW ( 0x7 )
00c135 e0a0     +LDI R26 , HIGH ( 0x7 )
00c136 07fa     +CPC R31 , R26
00c137 e0a0     +LDI R26 , BYTE3 ( 0x7 )
00c138 076a     +CPC R22 , R26
00c139 e0a0     +LDI R26 , BYTE4 ( 0x7 )
00c13a 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00c13b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCD:
                +
00c13c 30e8     +CPI R30 , LOW ( 0x8 )
00c13d e0a0     +LDI R26 , HIGH ( 0x8 )
00c13e 07fa     +CPC R31 , R26
00c13f e0a0     +LDI R26 , BYTE3 ( 0x8 )
00c140 076a     +CPC R22 , R26
00c141 e0a0     +LDI R26 , BYTE4 ( 0x8 )
00c142 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00c143 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCE:
                +
00c144 30e9     +CPI R30 , LOW ( 0x9 )
00c145 e0a0     +LDI R26 , HIGH ( 0x9 )
00c146 07fa     +CPC R31 , R26
00c147 e0a0     +LDI R26 , BYTE3 ( 0x9 )
00c148 076a     +CPC R22 , R26
00c149 e0a0     +LDI R26 , BYTE4 ( 0x9 )
00c14a 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00c14b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCF:
                +
00c14c 30ea     +CPI R30 , LOW ( 0xA )
00c14d e0a0     +LDI R26 , HIGH ( 0xA )
00c14e 07fa     +CPC R31 , R26
00c14f e0a0     +LDI R26 , BYTE3 ( 0xA )
00c150 076a     +CPC R22 , R26
00c151 e0a0     +LDI R26 , BYTE4 ( 0xA )
00c152 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00c153 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD0:
                +
00c154 30eb     +CPI R30 , LOW ( 0xB )
00c155 e0a0     +LDI R26 , HIGH ( 0xB )
00c156 07fa     +CPC R31 , R26
00c157 e0a0     +LDI R26 , BYTE3 ( 0xB )
00c158 076a     +CPC R22 , R26
00c159 e0a0     +LDI R26 , BYTE4 ( 0xB )
00c15a 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00c15b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD1:
                +
00c15c 30ec     +CPI R30 , LOW ( 0xC )
00c15d e0a0     +LDI R26 , HIGH ( 0xC )
00c15e 07fa     +CPC R31 , R26
00c15f e0a0     +LDI R26 , BYTE3 ( 0xC )
00c160 076a     +CPC R22 , R26
00c161 e0a0     +LDI R26 , BYTE4 ( 0xC )
00c162 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00c163 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD2:
                +
00c164 30a3     +CPI R26 , LOW ( 0x3 )
00c165 e0e0     +LDI R30 , HIGH ( 0x3 )
00c166 07be     +CPC R27 , R30
00c167 e0e0     +LDI R30 , BYTE3 ( 0x3 )
00c168 078e     +CPC R24 , R30
00c169 e0e0     +LDI R30 , BYTE4 ( 0x3 )
00c16a 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00c16b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD3:
                +
00c16c 8dea     +LDD R30 , Y + 26
00c16d 8dfb     +LDD R31 , Y + 26 + 1
00c16e 8d6c     +LDD R22 , Y + 26 + 2
00c16f 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00c170 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD4:
                +
00c171 89ae     +LDD R26 , Y + 22
00c172 89bf     +LDD R27 , Y + 22 + 1
00c173 8d88     +LDD R24 , Y + 22 + 2
00c174 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00c175 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD5:
                +
00c176 5fef     +SUBI R30 , LOW ( - 1 )
00c177 4fff     +SBCI R31 , HIGH ( - 1 )
00c178 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c179 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00c17a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xD6:
                +
00c17b 89ea     +LDD R30 , Y + 18
00c17c 89fb     +LDD R31 , Y + 18 + 1
00c17d 896c     +LDD R22 , Y + 18 + 2
00c17e 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c17f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD7:
                +
00c180 85ea     +LDD R30 , Y + 10
00c181 85fb     +LDD R31 , Y + 10 + 1
00c182 856c     +LDD R22 , Y + 10 + 2
00c183 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c184 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xD8:
00c185 e0e0      	LDI  R30,LOW(0)
00c186 e0f0      	LDI  R31,HIGH(0)
00c187 8119      	LDD  R17,Y+1
00c188 8108      	LDD  R16,Y+0
00c189 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0xD9:
00c18a 940e da1a 	CALL __PUTD1S0
00c18c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xDA:
00c18d de10      	RCALL SUBOPT_0x8C
00c18e ce01      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xDB:
                +
00c18f 85a8     +LDD R26 , Y + 8
00c190 85b9     +LDD R27 , Y + 8 + 1
00c191 858a     +LDD R24 , Y + 8 + 2
00c192 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00c193 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 33 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0xDC:
                +
00c194 85ec     +LDD R30 , Y + 12
00c195 85fd     +LDD R31 , Y + 12 + 1
00c196 856e     +LDD R22 , Y + 12 + 2
00c197 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c198 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDD:
                +
00c199 50e1     +SUBI R30 , LOW ( 1 )
00c19a 40f0     +SBCI R31 , HIGH ( 1 )
00c19b 4060     +SBCI R22 , BYTE3 ( 1 )
00c19c 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00c19d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDE:
00c19e da94      	RCALL SUBOPT_0xC
                +
00c19f e0a8     +LDI R26 , LOW ( 0x708 )
00c1a0 e0b7     +LDI R27 , HIGH ( 0x708 )
00c1a1 e080     +LDI R24 , BYTE3 ( 0x708 )
00c1a2 e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00c1a3 940e d93a 	CALL __MULD12U
00c1a5 cfe7      	RJMP SUBOPT_0xDA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDF:
                +
00c1a6 89ec     +LDD R30 , Y + 20
00c1a7 89fd     +LDD R31 , Y + 20 + 1
00c1a8 896e     +LDD R22 , Y + 20 + 2
00c1a9 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00c1aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE0:
                +
00c1ab 8de8     +LDD R30 , Y + 24
00c1ac 8df9     +LDD R31 , Y + 24 + 1
00c1ad 8d6a     +LDD R22 , Y + 24 + 2
00c1ae 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00c1af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE1:
00c1b0 dfe3      	RCALL SUBOPT_0xDC
00c1b1 dfdd      	RCALL SUBOPT_0xDB
00c1b2 940e da8f 	CALL __CPD12
00c1b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE2:
00c1b5 da78      	RCALL SUBOPT_0xB
00c1b6 dc4e      	RCALL SUBOPT_0x4F
00c1b7 940e d89e 	CALL __SUBD12
00c1b9 ceb6      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE3:
00c1ba dc4a      	RCALL SUBOPT_0x4F
00c1bb da72      	RCALL SUBOPT_0xB
00c1bc 940e da8f 	CALL __CPD12
00c1be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE4:
00c1bf dfcf      	RCALL SUBOPT_0xDB
00c1c0 dfd3      	RCALL SUBOPT_0xDC
00c1c1 940e d89e 	CALL __SUBD12
00c1c3 ceac      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE5:
00c1c4 deb0      	RCALL SUBOPT_0xAB
                +
00c1c5 30aa     +CPI R26 , LOW ( 0xA )
00c1c6 e0e0     +LDI R30 , HIGH ( 0xA )
00c1c7 07be     +CPC R27 , R30
00c1c8 e0e0     +LDI R30 , BYTE3 ( 0xA )
00c1c9 078e     +CPC R24 , R30
00c1ca e0e0     +LDI R30 , BYTE4 ( 0xA )
00c1cb 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00c1cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE6:
                +
00c1cd eee6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00c1ce e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00c1cf e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00c1d0 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00c1d1 cdcf      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE7:
00c1d2 940e da29 	CALL __PUTPARD1
00c1d4 dfd1      	RCALL SUBOPT_0xDF
00c1d5 cc84      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE8:
00c1d6 85ec      	LDD  R30,Y+12
00c1d7 2f1e      	MOV  R17,R30
00c1d8 da55      	RCALL SUBOPT_0xB
00c1d9 e0e8      	LDI  R30,LOW(8)
00c1da 940e d8d3 	CALL __LSRD12
00c1dc 2f0e      	MOV  R16,R30
00c1dd dfb6      	RCALL SUBOPT_0xDC
00c1de 940e d909 	CALL __LSRD16
00c1e0 2f3e      	MOV  R19,R30
00c1e1 da4c      	RCALL SUBOPT_0xB
00c1e2 e1e8      	LDI  R30,LOW(24)
00c1e3 940e d8d3 	CALL __LSRD12
00c1e5 2f2e      	MOV  R18,R30
00c1e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE9:
00c1e7 e0a0      	LDI  R26,LOW(0)
00c1e8 940e d6c5 	CALL _i2c_write
00c1ea 2fa1      	MOV  R26,R17
00c1eb 940e d6c5 	CALL _i2c_write
00c1ed 2fa0      	MOV  R26,R16
00c1ee 940e d6c5 	CALL _i2c_write
00c1f0 2fa3      	MOV  R26,R19
00c1f1 940e d6c5 	CALL _i2c_write
00c1f3 2fa2      	MOV  R26,R18
00c1f4 ce70      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEA:
00c1f5 93ba      	ST   -Y,R27
00c1f6 93aa      	ST   -Y,R26
00c1f7 972c      	SBIW R28,12
00c1f8 940e da9b 	CALL __SAVELOCR4
00c1fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xEB:
00c1fb 940e da29 	CALL __PUTPARD1
00c1fd 89ec      	LDD  R30,Y+20
00c1fe 89fd      	LDD  R31,Y+20+1
00c1ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0xEC:
00c200 940e d919 	CALL __CWD1
00c202 940e da29 	CALL __PUTPARD1
00c204 ca59      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xED:
                +
00c205 87ec     +STD Y + 12 , R30
00c206 87fd     +STD Y + 12 + 1 , R31
00c207 876e     +STD Y + 12 + 2 , R22
00c208 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c209 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEE:
00c20a e3ac      	LDI  R26,LOW(60)
00c20b e0b0      	LDI  R27,HIGH(60)
00c20c 940e d960 	CALL __MULW12
00c20e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEF:
00c20f dff5      	RCALL SUBOPT_0xED
00c210 cf83      	RJMP SUBOPT_0xDC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF0:
00c211 93e0 1430 	STS  _raw_rtc,R30
00c213 93f0 1431 	STS  _raw_rtc+1,R31
00c215 9360 1432 	STS  _raw_rtc+2,R22
00c217 9370 1433 	STS  _raw_rtc+3,R23
00c219 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF1:
00c21a 93ba      	ST   -Y,R27
00c21b 93aa      	ST   -Y,R26
00c21c 9724      	SBIW R28,4
00c21d 931a      	ST   -Y,R17
00c21e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF2:
00c21f de84      	RCALL SUBOPT_0xB4
00c220 ce8d      	RJMP SUBOPT_0xB6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF3:
00c221 de87      	RCALL SUBOPT_0xB5
00c222 940e da29 	CALL __PUTPARD1
00c224 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF4:
00c225 940e da29 	CALL __PUTPARD1
00c227 8dec      	LDD  R30,Y+28
00c228 8dfd      	LDD  R31,Y+28+1
00c229 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF5:
00c22a df80      	RCALL SUBOPT_0xE0
00c22b 940e da29 	CALL __PUTPARD1
00c22d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF6:
                +
00c22e a5e8     +LDD R30 , Y + 40
00c22f a5f9     +LDD R31 , Y + 40 + 1
00c230 a56a     +LDD R22 , Y + 40 + 2
00c231 a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00c232 940e da29 	CALL __PUTPARD1
00c234 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF7:
00c235 e0a0      	LDI  R26,LOW(0)
00c236 e0b0      	LDI  R27,0
00c237 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF8:
00c238 93fa      	ST   -Y,R31
00c239 93ea      	ST   -Y,R30
00c23a e0e0      	LDI  R30,LOW(0)
00c23b 93ea      	ST   -Y,R30
00c23c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF9:
00c23d eaa1      	LDI  R26,LOW(161)
00c23e e0b0      	LDI  R27,0
00c23f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xFA:
00c240 0fa0      	ADD  R26,R16
00c241 1fb1      	ADC  R27,R17
00c242 940e da50 	CALL __EEPROMRDB
00c244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xFB:
00c245 0fe0      	ADD  R30,R16
00c246 1ff1      	ADC  R31,R17
00c247 01df      	MOVW R26,R30
00c248 940e da50 	CALL __EEPROMRDB
00c24a 01d0      	MOVW R26,R0
00c24b 93ec      	ST   X,R30
00c24c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFC:
00c24d 81ea      	LDD  R30,Y+2
00c24e 81fb      	LDD  R31,Y+2+1
00c24f 5be0      	SUBI R30,LOW(-80)
00c250 4fff      	SBCI R31,HIGH(-80)
00c251 0fe0      	ADD  R30,R16
00c252 1ff1      	ADC  R31,R17
00c253 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFD:
00c254 81ea      	LDD  R30,Y+2
00c255 81fb      	LDD  R31,Y+2+1
00c256 59ec      	SUBI R30,LOW(-100)
00c257 4fff      	SBCI R31,HIGH(-100)
00c258 0fe0      	ADD  R30,R16
00c259 1ff1      	ADC  R31,R17
00c25a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFE:
00c25b 81ea      	LDD  R30,Y+2
00c25c 81fb      	LDD  R31,Y+2+1
00c25d 57e4      	SUBI R30,LOW(-140)
00c25e 4fff      	SBCI R31,HIGH(-140)
00c25f 0fe0      	ADD  R30,R16
00c260 1ff1      	ADC  R31,R17
00c261 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFF:
00c262 93ec      	ST   X,R30
00c263 81aa      	LDD  R26,Y+2
00c264 81bb      	LDD  R27,Y+2+1
00c265 9611      	ADIW R26,1
00c266 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x100:
00c267 93ec      	ST   X,R30
00c268 81aa      	LDD  R26,Y+2
00c269 81bb      	LDD  R27,Y+2+1
00c26a 9612      	ADIW R26,2
00c26b e0e0      	LDI  R30,LOW(0)
00c26c 93ec      	ST   X,R30
                +
00c26d e000     +LDI R16 , LOW ( 0 )
00c26e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c26f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x101:
00c270 81ea      	LDD  R30,Y+2
00c271 81fb      	LDD  R31,Y+2+1
00c272 9633      	ADIW R30,3
00c273 0fe0      	ADD  R30,R16
00c274 1ff1      	ADC  R31,R17
00c275 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x102:
00c276 940e da50 	CALL __EEPROMRDB
00c278 81aa      	LDD  R26,Y+2
00c279 81bb      	LDD  R27,Y+2+1
00c27a 93ec      	ST   X,R30
00c27b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x103:
00c27c 940e da50 	CALL __EEPROMRDB
                +
00c27e 81aa     +LDD R26 , Y + 2
00c27f 81bb     +LDD R27 , Y + 2 + 1
00c280 9611     +ADIW R26 , 1
00c281 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00c282 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x104:
00c283 940e da50 	CALL __EEPROMRDB
                +
00c285 81aa     +LDD R26 , Y + 2
00c286 81bb     +LDD R27 , Y + 2 + 1
00c287 9612     +ADIW R26 , 2
00c288 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00c289 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x105:
00c28a 940e da29 	CALL __PUTPARD1
00c28c 81ae      	LDD  R26,Y+6
00c28d 81bf      	LDD  R27,Y+6+1
00c28e 91ec      	LD   R30,X
00c28f ca6e      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x106:
00c290 940e da29 	CALL __PUTPARD1
00c292 81ee      	LDD  R30,Y+6
00c293 81ff      	LDD  R31,Y+6+1
00c294 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x107:
                +
00c295 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c296 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c297 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c298 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c299 cff6      	RJMP SUBOPT_0x106
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x108:
00c29a 9633      	ADIW R30,3
00c29b 0fe0      	ADD  R30,R16
00c29c 1ff1      	ADC  R31,R17
00c29d 81e0      	LD   R30,Z
00c29e ca5f      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x109:
                +
00c29f e2e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00c2a0 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00c2a1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00c2a2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00c2a3 c948      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10A:
00c2a4 93ba      	ST   -Y,R27
00c2a5 93aa      	ST   -Y,R26
00c2a6 81ab      	LDD  R26,Y+3
00c2a7 23aa      	TST  R26
00c2a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x10B:
00c2a9 93ed      	ST   X+,R30
00c2aa 93fc      	ST   X,R31
00c2ab 81a8      	LD   R26,Y
00c2ac 81b9      	LDD  R27,Y+1
00c2ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10C:
00c2ae e0e0      	LDI  R30,LOW(0)
00c2af 93ec      	ST   X,R30
00c2b0 81a8      	LD   R26,Y
00c2b1 81b9      	LDD  R27,Y+1
00c2b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x10D:
                +
00c2b3 e0e0     +LDI R30 , LOW ( 0x41200000 )
00c2b4 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c2b5 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c2b6 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c2b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x10E:
00c2b8 81aa      	LDD  R26,Y+2
00c2b9 81bb      	LDD  R27,Y+2+1
00c2ba e1ed      	LDI  R30,LOW(29)
00c2bb 940e d95a 	CALL __MULB1W2U
00c2bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10F:
                +
00c2be 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00c2bf 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00c2c0 01df      	MOVW R26,R30
00c2c1 940e da48 	CALL __EEPROMRDD
00c2c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x110:
                +
00c2c4 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00c2c5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00c2c6 01df      	MOVW R26,R30
00c2c7 940e da4c 	CALL __EEPROMRDW
00c2c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x111:
                +
00c2ca 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00c2cb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00c2cc 01df      	MOVW R26,R30
00c2cd 940e da48 	CALL __EEPROMRDD
00c2cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x112:
                +
00c2d0 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00c2d1 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00c2d2 01df      	MOVW R26,R30
00c2d3 940e da48 	CALL __EEPROMRDD
00c2d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x113:
                +
00c2d6 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00c2d7 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00c2d8 01df      	MOVW R26,R30
00c2d9 940e da4c 	CALL __EEPROMRDW
00c2db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x114:
                +
00c2dc 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00c2dd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00c2de 01df      	MOVW R26,R30
00c2df 940e da48 	CALL __EEPROMRDD
00c2e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x115:
00c2e2 e0e0      	LDI  R30,LOW(0)
00c2e3 e0f0      	LDI  R31,HIGH(0)
00c2e4 93ed      	ST   X+,R30
00c2e5 93fc      	ST   X,R31
00c2e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x116:
00c2e7 81aa      	LDD  R26,Y+2
00c2e8 81bb      	LDD  R27,Y+2+1
00c2e9 e0e3      	LDI  R30,LOW(3)
00c2ea 940e d95a 	CALL __MULB1W2U
00c2ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x117:
00c2ed 01df      	MOVW R26,R30
00c2ee 940e da50 	CALL __EEPROMRDB
00c2f0 81a8      	LD   R26,Y
00c2f1 81b9      	LDD  R27,Y+1
00c2f2 93ec      	ST   X,R30
00c2f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x118:
00c2f4 940e da4c 	CALL __EEPROMRDW
                +
00c2f6 81a8     +LDD R26 , Y + 0
00c2f7 81b9     +LDD R27 , Y + 0 + 1
00c2f8 9611     +ADIW R26 , 1
00c2f9 93ed     +ST X + , R30
00c2fa 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00c2fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x119:
00c2fc 940e da29 	CALL __PUTPARD1
00c2fe 85e8      	LDD  R30,Y+8
00c2ff 85f9      	LDD  R31,Y+8+1
00c300 ceff      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x11A:
00c301 81ac      	LDD  R26,Y+4
00c302 81bd      	LDD  R27,Y+4+1
00c303 e2e6      	LDI  R30,LOW(38)
00c304 940e d95a 	CALL __MULB1W2U
00c306 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x11B:
00c307 940e da29 	CALL __PUTPARD1
00c309 85a8      	LDD  R26,Y+8
00c30a 85b9      	LDD  R27,Y+8+1
00c30b e2e6      	LDI  R30,LOW(38)
00c30c 940e d95a 	CALL __MULB1W2U
00c30e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11C:
00c30f 59e6      	SUBI R30,LOW(-_config_dout)
00c310 4ffe      	SBCI R31,HIGH(-_config_dout)
00c311 01df      	MOVW R26,R30
00c312 940e da50 	CALL __EEPROMRDB
00c314 c9e9      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11D:
                +
00c315 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00c316 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00c317 01df      	MOVW R26,R30
00c318 940e da50 	CALL __EEPROMRDB
00c31a c9e3      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11E:
                +
00c31b 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00c31c 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00c31d 01df      	MOVW R26,R30
00c31e 940e da50 	CALL __EEPROMRDB
00c320 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x11F:
00c321 01d8      	MOVW R26,R16
00c322 e0f0      	LDI  R31,0
00c323 17ae      	CP   R26,R30
00c324 07bf      	CPC  R27,R31
00c325 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x120:
                +
00c326 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00c327 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00c328 0fe0      	ADD  R30,R16
00c329 1ff1      	ADC  R31,R17
00c32a 01df      	MOVW R26,R30
00c32b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x121:
00c32c 81aa      	LDD  R26,Y+2
00c32d 81bb      	LDD  R27,Y+2+1
00c32e e0e5      	LDI  R30,LOW(5)
00c32f 940e d95a 	CALL __MULB1W2U
00c331 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x122:
00c332 81ea      	LDD  R30,Y+2
00c333 81fb      	LDD  R31,Y+2+1
00c334 9636      	ADIW R30,6
00c335 0fe0      	ADD  R30,R16
00c336 1ff1      	ADC  R31,R17
00c337 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x123:
00c338 81ac      	LDD  R26,Y+4
00c339 81bd      	LDD  R27,Y+4+1
00c33a e2e9      	LDI  R30,LOW(41)
00c33b 940e d95a 	CALL __MULB1W2U
00c33d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x124:
                +
00c33e 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00c33f 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00c340 01df      	MOVW R26,R30
00c341 940e da50 	CALL __EEPROMRDB
00c343 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x125:
                +
00c344 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00c345 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00c346 0fe0      	ADD  R30,R16
00c347 1ff1      	ADC  R31,R17
00c348 01df      	MOVW R26,R30
00c349 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x126:
00c34a 81ee      	LDD  R30,Y+6
00c34b 81ff      	LDD  R31,Y+6+1
00c34c 9632      	ADIW R30,2
00c34d 0fe0      	ADD  R30,R16
00c34e 1ff1      	ADC  R31,R17
00c34f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x127:
00c350 01de      	MOVW R26,R28
00c351 9612      	ADIW R26,2
00c352 0fa0      	ADD  R26,R16
00c353 1fb1      	ADC  R27,R17
00c354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x128:
                +
00c355 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00c356 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00c357 940e da50 	CALL __EEPROMRDB
00c359 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x129:
00c35a 940e da29 	CALL __PUTPARD1
00c35c 85aa      	LDD  R26,Y+10
00c35d 85bb      	LDD  R27,Y+10+1
00c35e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 37 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x12A:
00c35f 940e da29 	CALL __PUTPARD1
00c361 85ea      	LDD  R30,Y+10
00c362 85fb      	LDD  R31,Y+10+1
00c363 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12B:
                +
00c364 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c365 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c366 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c367 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c368 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12C:
00c369 9632      	ADIW R30,2
00c36a 0fe0      	ADD  R30,R16
00c36b 1ff1      	ADC  R31,R17
00c36c 81e0      	LD   R30,Z
00c36d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12D:
00c36e 940e da29 	CALL __PUTPARD1
00c370 81ac      	LDD  R26,Y+4
00c371 81bd      	LDD  R27,Y+4+1
00c372 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12E:
00c373 940e d9f4 	CALL __GETD1P
00c375 940e da29 	CALL __PUTPARD1
00c377 c8e6      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12F:
00c378 940e d9f0 	CALL __GETW1P
00c37a ce85      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x130:
00c37b 940e da29 	CALL __PUTPARD1
00c37d 81ec      	LDD  R30,Y+4
00c37e 81fd      	LDD  R31,Y+4+1
00c37f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x131:
                +
00c380 81a6     +LDD R26 , Z + 6
00c381 81b7     +LDD R27 , Z + 6 + 1
00c382 8580     +LDD R24 , Z + 6 + 2
00c383 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00c384 940e da2e 	CALL __PUTPARD2
00c386 c8d7      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x132:
                +
00c387 85a2     +LDD R26 , Z + 10
00c388 85b3     +LDD R27 , Z + 10 + 1
00c389 8584     +LDD R24 , Z + 10 + 2
00c38a 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00c38b 940e da2e 	CALL __PUTPARD2
00c38d c8d0      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x133:
00c38e 0fae      	ADD  R26,R30
00c38f 1fbf      	ADC  R27,R31
00c390 91ec      	LD   R30,X
00c391 01d0      	MOVW R26,R0
00c392 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x134:
00c393 91ec      	LD   R30,X
00c394 01d0      	MOVW R26,R0
00c395 940e da6c 	CALL __EEPROMWRB
00c397 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x135:
00c398 e0e1      	LDI  R30,LOW(1)
00c399 940e da6c 	CALL __EEPROMWRB
00c39b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x136:
00c39c efef      	LDI  R30,LOW(65535)
00c39d efff      	LDI  R31,HIGH(65535)
00c39e 8119      	LDD  R17,Y+1
00c39f 8108      	LDD  R16,Y+0
00c3a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x137:
00c3a1 940e da50 	CALL __EEPROMRDB
00c3a3 c95a      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x138:
                +
00c3a4 efeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00c3a5 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00c3a6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00c3a7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00c3a8 940e da29 	CALL __PUTPARD1
00c3aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x139:
00c3ab 81a8      	LD   R26,Y
00c3ac 81b9      	LDD  R27,Y+1
00c3ad 940e d9f0 	CALL __GETW1P
00c3af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x13A:
00c3b0 01d0      	MOVW R26,R0
00c3b1 940e da64 	CALL __EEPROMWRW
00c3b3 cf04      	RJMP SUBOPT_0x10E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13B:
00c3b4 940e d9f0 	CALL __GETW1P
00c3b6 cff9      	RJMP SUBOPT_0x13A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13C:
00c3b7 940e da6c 	CALL __EEPROMWRB
00c3b9 cefe      	RJMP SUBOPT_0x10E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13D:
00c3ba 940e d9f4 	CALL __GETD1P
00c3bc 01d0      	MOVW R26,R0
00c3bd 940e da5c 	CALL __EEPROMWRD
00c3bf cef8      	RJMP SUBOPT_0x10E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13E:
00c3c0 940e d9f4 	CALL __GETD1P
00c3c2 01d0      	MOVW R26,R0
00c3c3 940e da5c 	CALL __EEPROMWRD
00c3c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x13F:
00c3c6 940e da29 	CALL __PUTPARD1
00c3c8 81ae      	LDD  R26,Y+6
00c3c9 81bf      	LDD  R27,Y+6+1
00c3ca e1ed      	LDI  R30,LOW(29)
00c3cb 940e d95a 	CALL __MULB1W2U
00c3cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x140:
00c3ce 01df      	MOVW R26,R30
00c3cf 940e da4c 	CALL __EEPROMRDW
00c3d1 c978      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x141:
00c3d2 2766      	CLR  R22
00c3d3 2777      	CLR  R23
00c3d4 c8e7      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x142:
00c3d5 010f      	MOVW R0,R30
00c3d6 81a8      	LD   R26,Y
00c3d7 81b9      	LDD  R27,Y+1
00c3d8 9611      	ADIW R26,1
00c3d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x143:
00c3da 940e d9f0 	CALL __GETW1P
00c3dc 01d0      	MOVW R26,R0
00c3dd 940e da64 	CALL __EEPROMWRW
00c3df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x144:
                +
00c3e0 e0ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00c3e1 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00c3e2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00c3e3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00c3e4 ceab      	RJMP SUBOPT_0x106
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x145:
                +
00c3e5 e2e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00c3e6 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00c3e7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00c3e8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00c3e9 940e da29 	CALL __PUTPARD1
00c3eb 81ae      	LDD  R26,Y+6
00c3ec 81bf      	LDD  R27,Y+6+1
00c3ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x146:
00c3ee 940e da29 	CALL __PUTPARD1
00c3f0 81ae      	LDD  R26,Y+6
00c3f1 81bf      	LDD  R27,Y+6+1
00c3f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x147:
00c3f3 940e da6c 	CALL __EEPROMWRB
00c3f5 cf0b      	RJMP SUBOPT_0x11A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x148:
00c3f6 940e da6c 	CALL __EEPROMWRB
                +
00c3f8 ebee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00c3f9 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00c3fa e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00c3fb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00c3fc ceff      	RJMP SUBOPT_0x119
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x149:
                +
00c3fd e1e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00c3fe e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00c3ff e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00c400 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00c401 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x14A:
                +
00c402 e3e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00c403 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00c404 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00c405 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00c406 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14B:
00c408 01df      	MOVW R26,R30
00c409 940e da48 	CALL __EEPROMRDD
00c40b 940e da29 	CALL __PUTPARD1
00c40d 940c bc5e 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x14C:
00c40f 940e da29 	CALL __PUTPARD1
00c411 85a8      	LDD  R26,Y+8
00c412 85b9      	LDD  R27,Y+8+1
00c413 e2e9      	LDI  R30,LOW(41)
00c414 940e d95a 	CALL __MULB1W2U
00c416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14D:
                +
00c417 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00c418 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00c419 0fe0      	ADD  R30,R16
00c41a 1ff1      	ADC  R31,R17
00c41b 01df      	MOVW R26,R30
00c41c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x14E:
00c41d 940e da48 	CALL __EEPROMRDD
00c41f 940e da29 	CALL __PUTPARD1
00c421 940c bc5e 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x14F:
00c423 0fa0      	ADD  R26,R16
00c424 1fb1      	ADC  R27,R17
00c425 e0e0      	LDI  R30,LOW(0)
00c426 93ec      	ST   X,R30
00c427 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x150:
00c428 e0e0      	LDI  R30,LOW(0)
00c429 e0f0      	LDI  R31,HIGH(0)
00c42a 940e daa2 	CALL __LOADLOCR4
00c42c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x151:
00c42d 972a      	SBIW R28,10
00c42e 940e da9b 	CALL __SAVELOCR4
                +
00c430 e000     +LDI R16 , LOW ( 0 )
00c431 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c432 e020     +LDI R18 , LOW ( 0 )
00c433 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c434 01f8      	MOVW R30,R16
                +
00c435 5f0f     +SUBI R16 , LOW ( - 1 )
00c436 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c437 01de      	MOVW R26,R28
00c438 9614      	ADIW R26,4
00c439 0fae      	ADD  R26,R30
00c43a 1fbf      	ADC  R27,R31
00c43b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x152:
00c43c 01f8      	MOVW R30,R16
                +
00c43d 5f0f     +SUBI R16 , LOW ( - 1 )
00c43e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c43f 01de      	MOVW R26,R28
00c440 9614      	ADIW R26,4
00c441 0fea      	ADD  R30,R26
00c442 1ffb      	ADC  R31,R27
00c443 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x153:
00c444 010f      	MOVW R0,R30
00c445 e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00c446 e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00c447 0fa2      	ADD  R26,R18
00c448 1fb3      	ADC  R27,R19
00c449 940e da50 	CALL __EEPROMRDB
00c44b 01d0      	MOVW R26,R0
00c44c 93ec      	ST   X,R30
00c44d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x154:
00c44e 01fe      	MOVW R30,R28
00c44f 9634      	ADIW R30,4
00c450 93fa      	ST   -Y,R31
00c451 93ea      	ST   -Y,R30
00c452 931a      	ST   -Y,R17
00c453 930a      	ST   -Y,R16
00c454 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x155:
00c455 940e 5c5c 	CALL _ETH_send
00c457 cfd0      	RJMP SUBOPT_0x150
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x156:
00c458 940e da9b 	CALL __SAVELOCR4
                +
00c45a e000     +LDI R16 , LOW ( 0 )
00c45b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c45c e020     +LDI R18 , LOW ( 0 )
00c45d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c45e 01f8      	MOVW R30,R16
                +
00c45f 5f0f     +SUBI R16 , LOW ( - 1 )
00c460 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c461 01de      	MOVW R26,R28
00c462 9614      	ADIW R26,4
00c463 0fae      	ADD  R26,R30
00c464 1fbf      	ADC  R27,R31
00c465 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x157:
00c466 85e8      	LDD  R30,Y+8
00c467 85f9      	LDD  R31,Y+8+1
00c468 963f      	ADIW R30,15
00c469 01af      	MOVW R20,R30
                +
00c46a 3f4b     +CPI R20 , LOW ( 251 )
00c46b e0e0     +LDI R30 , HIGH ( 251 )
00c46c 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00c46d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x158:
00c46e 01da      	MOVW R26,R20
00c46f 940e a0d2 	CALL _malloc
00c471 83ee      	STD  Y+6,R30
00c472 83ff      	STD  Y+6+1,R31
00c473 9730      	SBIW R30,0
00c474 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x159:
00c475 01f8      	MOVW R30,R16
                +
00c476 5f0f     +SUBI R16 , LOW ( - 1 )
00c477 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c478 81ae      	LDD  R26,Y+6
00c479 81bf      	LDD  R27,Y+6+1
00c47a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15A:
00c47b 0fea      	ADD  R30,R26
00c47c 1ffb      	ADC  R31,R27
00c47d cfc6      	RJMP SUBOPT_0x153
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15B:
00c47e 01f8      	MOVW R30,R16
00c47f 81ae      	LDD  R26,Y+6
00c480 81bf      	LDD  R27,Y+6+1
00c481 0fea      	ADD  R30,R26
00c482 1ffb      	ADC  R31,R27
00c483 93fa      	ST   -Y,R31
00c484 93ea      	ST   -Y,R30
00c485 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15C:
00c486 85ec      	LDD  R30,Y+12
00c487 85fd      	LDD  R31,Y+12+1
00c488 93fa      	ST   -Y,R31
00c489 93ea      	ST   -Y,R30
00c48a 85ac      	LDD  R26,Y+12
00c48b 85bd      	LDD  R27,Y+12+1
00c48c 940e a10f 	CALL _memcpy
00c48e 85e8      	LDD  R30,Y+8
00c48f 85f9      	LDD  R31,Y+8+1
                +
00c490 0f0e     +ADD R16 , R30
00c491 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00c492 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x15D:
00c493 81ee      	LDD  R30,Y+6
00c494 81ff      	LDD  R31,Y+6+1
00c495 93fa      	ST   -Y,R31
00c496 93ea      	ST   -Y,R30
00c497 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15E:
00c498 93ea      	ST   -Y,R30
00c499 e0ac      	LDI  R26,LOW(12)
00c49a e0b0      	LDI  R27,0
00c49b 940c 5c5c 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x15F:
00c49d 81ae      	LDD  R26,Y+6
00c49e 81bf      	LDD  R27,Y+6+1
00c49f 940c a0ed 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x160:
00c4a1 01f8      	MOVW R30,R16
                +
00c4a2 5f0f     +SUBI R16 , LOW ( - 1 )
00c4a3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c4a4 01de      	MOVW R26,R28
00c4a5 9616      	ADIW R26,6
00c4a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x161:
00c4a7 0fea      	ADD  R30,R26
00c4a8 1ffb      	ADC  R31,R27
00c4a9 93fa      	ST   -Y,R31
00c4aa 93ea      	ST   -Y,R30
00c4ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x162:
                +
00c4ac a1e9     +LDD R30 , Y + 33
00c4ad a1fa     +LDD R31 , Y + 33 + 1
00c4ae a16b     +LDD R22 , Y + 33 + 2
00c4af a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00c4b0 940e da29 	CALL __PUTPARD1
00c4b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x163:
00c4b3 e180      	LDI  R24,16
00c4b4 940e 9afc 	CALL _printDebug
00c4b6 9664      	ADIW R28,20
00c4b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x164:
00c4b8 85ef      	LDD  R30,Y+15
00c4b9 93ea      	ST   -Y,R30
00c4ba 85ef      	LDD  R30,Y+15
00c4bb 93ea      	ST   -Y,R30
00c4bc 85ef      	LDD  R30,Y+15
00c4bd 93ea      	ST   -Y,R30
00c4be e0a1      	LDI  R26,LOW(1)
00c4bf 940e 538a 	CALL _ETH_sendConfigManageNack
00c4c1 efef      	LDI  R30,LOW(65535)
00c4c2 efff      	LDI  R31,HIGH(65535)
00c4c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x165:
00c4c4 940e 9b80 	CALL _print_payload
00c4c6 cfcc      	RJMP SUBOPT_0x15D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x166:
00c4c7 01f8      	MOVW R30,R16
                +
00c4c8 5f0f     +SUBI R16 , LOW ( - 1 )
00c4c9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c4ca 01de      	MOVW R26,R28
00c4cb 9617      	ADIW R26,7
00c4cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x167:
00c4cd 93aa      	ST   -Y,R26
00c4ce 972b      	SBIW R28,11
00c4cf cf88      	RJMP SUBOPT_0x156
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x168:
00c4d0 89a8      	LDD  R26,Y+16
00c4d1 83a0      	STD  Z+0,R26
00c4d2 cf69      	RJMP SUBOPT_0x152
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x169:
00c4d3 01de      	MOVW R26,R28
00c4d4 9614      	ADIW R26,4
00c4d5 0fae      	ADD  R26,R30
00c4d6 1fbf      	ADC  R27,R31
00c4d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16A:
                +
00c4d8 01fe     +MOVW R30 , R28
00c4d9 5de2     +SUBI R30 , LOW ( - 558 )
00c4da 4ffd     +SBCI R31 , HIGH ( - 558 )
00c4db 81e0     +LD R30 , Z
                 	__GETB1SX 558
00c4dc 93ea      	ST   -Y,R30
00c4dd c9cb      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16B:
00c4de 01fe      	MOVW R30,R28
00c4df 963e      	ADIW R30,14
00c4e0 93fa      	ST   -Y,R31
00c4e1 93ea      	ST   -Y,R30
00c4e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16C:
00c4e3 dcb0      	RCALL SUBOPT_0xDC
00c4e4 940e da29 	CALL __PUTPARD1
00c4e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16D:
                +
00c4e7 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00c4e8 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00c4e9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00c4ea e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00c4eb 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16E:
00c4ed 01de      	MOVW R26,R28
00c4ee 961e      	ADIW R26,14
                +
00c4ef 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c4f1 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c4f3 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c4f5 bf6c     +OUT EIND , R22
00c4f6 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c4f7 018f      	MOVW R16,R30
00c4f8 2311      	TST  R17
00c4f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16F:
                +
00c4fa e9e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00c4fb e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00c4fc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00c4fd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00c4fe 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x170:
                +
00c500 e0ab     +LDI R26 , 11
00c501 9fa0     +MUL R26 , R16
00c502 01f0     +MOVW R30 , R0
00c503 9fa1     +MUL R26 , R17
00c504 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00c505 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x171:
00c506 940e da29 	CALL __PUTPARD1
00c508 91e0 1421 	LDS  R30,_commLostTimer
00c50a 91f0 1422 	LDS  R31,_commLostTimer+1
00c50c 9160 1423 	LDS  R22,_commLostTimer+2
00c50e 9170 1424 	LDS  R23,_commLostTimer+3
00c510 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x172:
00c511 91a0 1421 	LDS  R26,_commLostTimer
00c513 91b0 1422 	LDS  R27,_commLostTimer+1
00c515 9180 1423 	LDS  R24,_commLostTimer+2
00c517 9190 1424 	LDS  R25,_commLostTimer+3
00c519 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x173:
00c51a 93fa      	ST   -Y,R31
00c51b 93ea      	ST   -Y,R30
                +
00c51c e1ae     +LDI R26 , LOW ( 0x1E )
00c51d e0b0     +LDI R27 , HIGH ( 0x1E )
00c51e e080     +LDI R24 , BYTE3 ( 0x1E )
00c51f e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00c520 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x174:
00c521 940e da29 	CALL __PUTPARD1
00c523 da5e      	RCALL SUBOPT_0x88
00c524 91e0 1421 	LDS  R30,_commLostTimer
00c526 91f0 1422 	LDS  R31,_commLostTimer+1
00c528 9160 1423 	LDS  R22,_commLostTimer+2
00c52a 9170 1424 	LDS  R23,_commLostTimer+3
00c52c 940e d89e 	CALL __SUBD12
00c52e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x175:
                +
00c52f 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00c530 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00c531 93fa      	ST   -Y,R31
00c532 93ea      	ST   -Y,R30
00c533 cfcc      	RJMP SUBOPT_0x170
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x176:
                +
00c534 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00c535 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00c536 01df      	MOVW R26,R30
00c537 940e d9f0 	CALL __GETW1P
00c539 940e d919 	CALL __CWD1
00c53b 940c bcb2 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x177:
                +
00c53d 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00c53e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00c53f 01df      	MOVW R26,R30
00c540 940e d9f0 	CALL __GETW1P
00c542 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x178:
                +
00c543 01de     +MOVW R26 , R28
00c544 5da2     +SUBI R26 , LOW ( - 558 )
00c545 4fbd     +SBCI R27 , HIGH ( - 558 )
00c546 900d     +LD R0 , X +
00c547 91bc     +LD R27 , X
00c548 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00c549 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x179:
                +
00c54a 01de     +MOVW R26 , R28
00c54b 5da4     +SUBI R26 , LOW ( - 556 )
00c54c 4fbd     +SBCI R27 , HIGH ( - 556 )
00c54d 900d     +LD R0 , X +
00c54e 91bc     +LD R27 , X
00c54f 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00c550 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x17A:
00c551 940e da29 	CALL __PUTPARD1
                +
00c553 01fe     +MOVW R30 , R28
00c554 5de0     +SUBI R30 , LOW ( - 560 )
00c555 4ffd     +SBCI R31 , HIGH ( - 560 )
00c556 9001     +LD R0 , Z +
00c557 81f0     +LD R31 , Z
00c558 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00c559 cca6      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17B:
00c55a 930a      	ST   -Y,R16
00c55b e1a0      	LDI  R26,LOW(16)
00c55c 940c 5257 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17C:
00c55e 940e a0d2 	CALL _malloc
00c560 01af      	MOVW R20,R30
00c561 2e04      	MOV  R0,R20
00c562 2a05      	OR   R0,R21
00c563 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17D:
00c564 930a      	ST   -Y,R16
00c565 e5a0      	LDI  R26,LOW(80)
00c566 940c 5257 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x17E:
                +
00c568 01fe     +MOVW R30 , R28
00c569 5de2     +SUBI R30 , LOW ( - 558 )
00c56a 4ffd     +SBCI R31 , HIGH ( - 558 )
00c56b 9001     +LD R0 , Z +
00c56c 81f0     +LD R31 , Z
00c56d 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00c56e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17F:
00c56f 9632      	ADIW R30,2
00c570 93fa      	ST   -Y,R31
00c571 93ea      	ST   -Y,R30
00c572 dff5      	RCALL SUBOPT_0x17E
00c573 9732      	SBIW R30,2
00c574 93fa      	ST   -Y,R31
00c575 93ea      	ST   -Y,R30
00c576 01da      	MOVW R26,R20
00c577 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x180:
00c578 01da      	MOVW R26,R20
00c579 940e a0ed 	CALL _free
00c57b 930a      	ST   -Y,R16
00c57c e3a0      	LDI  R26,LOW(48)
00c57d 940c 5257 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x181:
00c57f 940e da29 	CALL __PUTPARD1
00c581 2fe0      	MOV  R30,R16
00c582 940c bcfe 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x182:
00c584 940e da29 	CALL __PUTPARD1
00c586 01fa      	MOVW R30,R20
00c587 85e0      	LDD  R30,Z+8
00c588 940c bcfe 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x183:
00c58a 940e da29 	CALL __PUTPARD1
00c58c 01da      	MOVW R26,R20
00c58d 9619      	ADIW R26,9
00c58e 940c bcad 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x184:
00c590 940e d9f0 	CALL __GETW1P
00c592 81ae      	LDD  R26,Y+6
00c593 81bf      	LDD  R27,Y+6+1
00c594 17ae      	CP   R26,R30
00c595 07bf      	CPC  R27,R31
00c596 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x185:
00c597 0fae      	ADD  R26,R30
00c598 1fbf      	ADC  R27,R31
00c599 91ec      	LD   R30,X
00c59a 940c bcfe 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x186:
00c59c 930a      	ST   -Y,R16
00c59d 01fa      	MOVW R30,R20
00c59e 85a0      	LDD  R26,Z+8
00c59f 93aa      	ST   -Y,R26
00c5a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x187:
00c5a1 dbd4      	RCALL SUBOPT_0xD5
00c5a2 01df      	MOVW R26,R30
00c5a3 01cb      	MOVW R24,R22
00c5a4 940e 81da 	CALL _LOG_setLastSend
00c5a6 019f      	MOVW R18,R30
00c5a7 2333      	TST  R19
00c5a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x188:
                +
00c5a9 e0e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00c5aa e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00c5ab e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00c5ac e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00c5ad 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x189:
00c5af 01de      	MOVW R26,R28
00c5b0 961c      	ADIW R26,12
                +
00c5b1 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c5b3 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c5b5 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c5b7 bf6c     +OUT EIND , R22
00c5b8 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c5b9 019f      	MOVW R18,R30
00c5ba 2333      	TST  R19
00c5bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x18A:
00c5bc e0b0      	LDI  R27,0
00c5bd cfa0      	RJMP SUBOPT_0x17C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x18B:
                +
00c5be eee8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00c5bf e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00c5c0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00c5c1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00c5c2 940e da29 	CALL __PUTPARD1
00c5c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 46 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x18C:
00c5c5 940e da29 	CALL __PUTPARD1
00c5c7 940c bc5e 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18D:
00c5c9 df9e      	RCALL SUBOPT_0x17E
00c5ca cfa4      	RJMP SUBOPT_0x17F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18E:
                +
00c5cb e7e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00c5cc e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00c5cd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00c5ce e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00c5cf cfb4      	RJMP SUBOPT_0x182
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18F:
00c5d0 940e da29 	CALL __PUTPARD1
00c5d2 01fa      	MOVW R30,R20
00c5d3 85e1      	LDD  R30,Z+9
00c5d4 940c bcfe 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x190:
00c5d6 01fa      	MOVW R30,R20
00c5d7 85e0      	LDD  R30,Z+8
00c5d8 940c bdd6 	JMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x191:
00c5da 01fa      	MOVW R30,R20
00c5db 85a1      	LDD  R26,Z+9
00c5dc 93aa      	ST   -Y,R26
00c5dd e0a1      	LDI  R26,LOW(1)
00c5de 940c 538a 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x192:
00c5e0 01fa      	MOVW R30,R20
00c5e1 85a1      	LDD  R26,Z+9
00c5e2 93aa      	ST   -Y,R26
00c5e3 e0e0      	LDI  R30,LOW(0)
00c5e4 93ea      	ST   -Y,R30
00c5e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x193:
00c5e6 940e 53b9 	CALL _ETH_sendConfigManageAck
00c5e8 019f      	MOVW R18,R30
00c5e9 2333      	TST  R19
00c5ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x194:
00c5eb 87e8      	STD  Y+8,R30
00c5ec 87f9      	STD  Y+8+1,R31
00c5ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x195:
00c5ee 85e8      	LDD  R30,Y+8
00c5ef 85f9      	LDD  R31,Y+8+1
00c5f0 93fa      	ST   -Y,R31
00c5f1 93ea      	ST   -Y,R30
00c5f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x196:
00c5f3 85e9      	LDD  R30,Y+9
00c5f4 85fa      	LDD  R31,Y+9+1
00c5f5 93fa      	ST   -Y,R31
00c5f6 93ea      	ST   -Y,R30
00c5f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x197:
00c5f8 e0e0      	LDI  R30,LOW(0)
00c5f9 e0f0      	LDI  R31,HIGH(0)
00c5fa 93fa      	ST   -Y,R31
00c5fb 93ea      	ST   -Y,R30
00c5fc cc38      	RJMP SUBOPT_0xF7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x198:
                +
00c5fd ece3     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00c5fe e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00c5ff e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00c600 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00c601 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x199:
                +
00c603 e3e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00c604 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00c605 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00c606 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00c607 cf7c      	RJMP SUBOPT_0x182
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19A:
                +
00c608 e3e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00c609 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00c60a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00c60b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00c60c 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x19B:
00c60e 940e da29 	CALL __PUTPARD1
00c610 01fa      	MOVW R30,R20
                +
00c611 85a1     +LDD R26 , Z + 9
00c612 85b2     +LDD R27 , Z + 9 + 1
00c613 8583     +LDD R24 , Z + 9 + 2
00c614 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00c615 940e da2e 	CALL __PUTPARD2
00c617 940c bc5e 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19C:
00c619 940e da2e 	CALL __PUTPARD2
00c61b 940c bc5e 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19D:
                +
00c61d 85a1     +LDD R26 , Z + 9
00c61e 85b2     +LDD R27 , Z + 9 + 1
00c61f 8583     +LDD R24 , Z + 9 + 2
00c620 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00c621 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19E:
                +
00c622 e0ea     +LDI R30 , LOW ( 0xA )
00c623 e0f0     +LDI R31 , HIGH ( 0xA )
00c624 e060     +LDI R22 , BYTE3 ( 0xA )
00c625 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00c626 cf9e      	RJMP SUBOPT_0x18C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19F:
00c627 df40      	RCALL SUBOPT_0x17E
00c628 9632      	ADIW R30,2
00c629 93fa      	ST   -Y,R31
00c62a 93ea      	ST   -Y,R30
00c62b 01da      	MOVW R26,R20
00c62c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A0:
                +
00c62d e0ed     +LDI R30 , LOW ( 0xD )
00c62e e0f0     +LDI R31 , HIGH ( 0xD )
00c62f e060     +LDI R22 , BYTE3 ( 0xD )
00c630 e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00c631 cf93      	RJMP SUBOPT_0x18C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A1:
                +
00c632 e2ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00c633 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00c634 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00c635 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00c636 cf4d      	RJMP SUBOPT_0x182
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A2:
00c637 85a1      	LDD  R26,Z+9
00c638 85b2      	LDD  R27,Z+10
00c639 940e da81 	CALL __CPW02
00c63b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A3:
00c63c 930a      	ST   -Y,R16
00c63d e3a0      	LDI  R26,LOW(48)
00c63e 940c 5257 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A4:
00c640 85e0      	LDD  R30,Z+8
00c641 e0f0      	LDI  R31,0
00c642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1A5:
00c643 9724      	SBIW R28,4
00c644 e0e0      	LDI  R30,LOW(0)
00c645 83e8      	ST   Y,R30
00c646 83e9      	STD  Y+1,R30
00c647 83ea      	STD  Y+2,R30
00c648 83eb      	STD  Y+3,R30
00c649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A6:
00c64a 0fe0      	ADD  R30,R16
00c64b 1ff1      	ADC  R31,R17
00c64c 93fa      	ST   -Y,R31
00c64d 93ea      	ST   -Y,R30
00c64e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A7:
00c64f 81ae      	LDD  R26,Y+6
00c650 81bf      	LDD  R27,Y+6+1
00c651 0fea      	ADD  R30,R26
00c652 1ffb      	ADC  R31,R27
00c653 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A8:
00c654 01d0      	MOVW R26,R0
00c655 e0f0      	LDI  R31,0
00c656 17ea      	CP   R30,R26
00c657 07fb      	CPC  R31,R27
00c658 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A9:
00c659 93ba      	ST   -Y,R27
00c65a 93aa      	ST   -Y,R26
00c65b 940e da99 	CALL __SAVELOCR6
00c65d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1AA:
00c65e 81ae      	LDD  R26,Y+6
00c65f 81bf      	LDD  R27,Y+6+1
00c660 0fae      	ADD  R26,R30
00c661 1fbf      	ADC  R27,R31
00c662 91ec      	LD   R30,X
00c663 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AB:
00c664 eaa9      	LDI  R26,LOW(_configRd)
00c665 e0bf      	LDI  R27,HIGH(_configRd)
00c666 cdbc      	RJMP SUBOPT_0x14F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1AC:
00c667 e0e0      	LDI  R30,LOW(0)
00c668 93e0 10f0 	STS  _config_start,R30
00c66a 93e0 10f1 	STS  _config_ready,R30
00c66c 93e0 10f2 	STS  _config_end,R30
00c66e 93e0 10f3 	STS  _config_response,R30
00c670 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AD:
00c671 01de      	MOVW R26,R28
00c672 9612      	ADIW R26,2
00c673 940e a19b 	CALL _strlen
00c675 170e      	CP   R16,R30
00c676 071f      	CPC  R17,R31
00c677 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AE:
                +
00c678 e7e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 24 ) )
00c679 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 24 ) )
00c67a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 24 ) )
00c67b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 24 ) )
                 	__POINTD1FN _0x120000,24
00c67c 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AF:
                +
00c67e e0a7     +LDI R26 , LOW ( 0x7 )
00c67f e0b0     +LDI R27 , HIGH ( 0x7 )
00c680 e080     +LDI R24 , BYTE3 ( 0x7 )
00c681 e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00c682 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1B0:
00c684 85ec      	LDD  R30,Y+12
00c685 85fd      	LDD  R31,Y+12+1
00c686 93fa      	ST   -Y,R31
00c687 93ea      	ST   -Y,R30
00c688 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B1:
00c689 eae9      	LDI  R30,LOW(_configRd)
00c68a e0ff      	LDI  R31,HIGH(_configRd)
00c68b 93fa      	ST   -Y,R31
00c68c 93ea      	ST   -Y,R30
00c68d d8b4      	RCALL SUBOPT_0x7D
00c68e 940c a10f 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B2:
00c690 01de      	MOVW R26,R28
00c691 9697      	ADIW R26,39
00c692 940e a19b 	CALL _strlen
00c694 170e      	CP   R16,R30
00c695 071f      	CPC  R17,R31
00c696 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B3:
                +
00c697 a5ab     +LDD R26 , Y + 43
00c698 a5bc     +LDD R27 , Y + 43 + 1
00c699 a58d     +LDD R24 , Y + 43 + 2
00c69a a59e     +LDD R25 , Y + 43 + 3
                 	__GETD2S 43
00c69b 940e 405d 	CALL _TIMER_checkTimerExceed
00c69d 9730      	SBIW R30,0
00c69e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B4:
00c69f 91ec      	LD   R30,X
00c6a0 e6a4      	LDI  R26,LOW(100)
00c6a1 9fea      	MUL  R30,R26
00c6a2 01b0      	MOVW R22,R0
00c6a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1B5:
00c6a4 81e1      	LDD  R30,Z+1
00c6a5 e0aa      	LDI  R26,LOW(10)
00c6a6 9fea      	MUL  R30,R26
00c6a7 01f0      	MOVW R30,R0
00c6a8 01db      	MOVW R26,R22
00c6a9 0fae      	ADD  R26,R30
00c6aa 1fbf      	ADC  R27,R31
00c6ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B6:
00c6ac 81e2      	LDD  R30,Z+2
00c6ad e0f0      	LDI  R31,0
00c6ae 0fea      	ADD  R30,R26
00c6af 1ffb      	ADC  R31,R27
00c6b0 940e d919 	CALL __CWD1
00c6b2 940e da29 	CALL __PUTPARD1
00c6b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B7:
                +
00c6b5 01fe     +MOVW R30 , R28
00c6b6 5ce1     +SUBI R30 , LOW ( - 63 )
00c6b7 4fff     +SBCI R31 , HIGH ( - 63 )
00c6b8 9001     +LD R0 , Z +
00c6b9 81f0     +LD R31 , Z
00c6ba 2de0     +MOV R30 , R0
                 	__GETW1SX 63
00c6bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B8:
00c6bc 81e3      	LDD  R30,Z+3
00c6bd e6a4      	LDI  R26,LOW(100)
00c6be 9fea      	MUL  R30,R26
00c6bf 01b0      	MOVW R22,R0
00c6c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B9:
00c6c1 81e4      	LDD  R30,Z+4
00c6c2 e0aa      	LDI  R26,LOW(10)
00c6c3 9fea      	MUL  R30,R26
00c6c4 01f0      	MOVW R30,R0
00c6c5 01db      	MOVW R26,R22
00c6c6 0fae      	ADD  R26,R30
00c6c7 1fbf      	ADC  R27,R31
00c6c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1BA:
00c6c9 81e5      	LDD  R30,Z+5
00c6ca e0f0      	LDI  R31,0
00c6cb 0fea      	ADD  R30,R26
00c6cc 1ffb      	ADC  R31,R27
00c6cd 940e d919 	CALL __CWD1
00c6cf 940e da29 	CALL __PUTPARD1
00c6d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BB:
                +
00c6d2 01fe     +MOVW R30 , R28
00c6d3 5bed     +SUBI R30 , LOW ( - 67 )
00c6d4 4fff     +SBCI R31 , HIGH ( - 67 )
00c6d5 9001     +LD R0 , Z +
00c6d6 81f0     +LD R31 , Z
00c6d7 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00c6d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BC:
00c6d9 81e6      	LDD  R30,Z+6
00c6da e6a4      	LDI  R26,LOW(100)
00c6db 9fea      	MUL  R30,R26
00c6dc 01b0      	MOVW R22,R0
00c6dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BD:
00c6de 81e7      	LDD  R30,Z+7
00c6df e0aa      	LDI  R26,LOW(10)
00c6e0 9fea      	MUL  R30,R26
00c6e1 01f0      	MOVW R30,R0
00c6e2 01db      	MOVW R26,R22
00c6e3 0fae      	ADD  R26,R30
00c6e4 1fbf      	ADC  R27,R31
00c6e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 56 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x1BE:
00c6e6 0fea      	ADD  R30,R26
00c6e7 1ffb      	ADC  R31,R27
00c6e8 940e d919 	CALL __CWD1
00c6ea 940e da29 	CALL __PUTPARD1
00c6ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BF:
                +
00c6ed 01fe     +MOVW R30 , R28
00c6ee 5be9     +SUBI R30 , LOW ( - 71 )
00c6ef 4fff     +SBCI R31 , HIGH ( - 71 )
00c6f0 9001     +LD R0 , Z +
00c6f1 81f0     +LD R31 , Z
00c6f2 2de0     +MOV R30 , R0
                 	__GETW1SX 71
00c6f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1C0:
00c6f4 85e1      	LDD  R30,Z+9
00c6f5 e6a4      	LDI  R26,LOW(100)
00c6f6 9fea      	MUL  R30,R26
00c6f7 01b0      	MOVW R22,R0
00c6f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1C1:
00c6f9 85e2      	LDD  R30,Z+10
00c6fa e0aa      	LDI  R26,LOW(10)
00c6fb 9fea      	MUL  R30,R26
00c6fc 01f0      	MOVW R30,R0
00c6fd 01db      	MOVW R26,R22
00c6fe 0fae      	ADD  R26,R30
00c6ff 1fbf      	ADC  R27,R31
00c700 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C2:
00c701 85e3      	LDD  R30,Z+11
00c702 e0f0      	LDI  R31,0
00c703 cfe2      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C3:
                +
00c704 01fe     +MOVW R30 , R28
00c705 5be7     +SUBI R30 , LOW ( - 73 )
00c706 4fff     +SBCI R31 , HIGH ( - 73 )
00c707 9001     +LD R0 , Z +
00c708 81f0     +LD R31 , Z
00c709 2de0     +MOV R30 , R0
                 	__GETW1SX 73
00c70a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C4:
                +
00c70b 01fe     +MOVW R30 , R28
00c70c 5be3     +SUBI R30 , LOW ( - 77 )
00c70d 4fff     +SBCI R31 , HIGH ( - 77 )
00c70e 9001     +LD R0 , Z +
00c70f 81f0     +LD R31 , Z
00c710 2de0     +MOV R30 , R0
                 	__GETW1SX 77
00c711 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C5:
                +
00c712 01fe     +MOVW R30 , R28
00c713 5aef     +SUBI R30 , LOW ( - 81 )
00c714 4fff     +SBCI R31 , HIGH ( - 81 )
00c715 9001     +LD R0 , Z +
00c716 81f0     +LD R31 , Z
00c717 2de0     +MOV R30 , R0
                 	__GETW1SX 81
00c718 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C6:
                +
00c719 01fe     +MOVW R30 , R28
00c71a 5ae9     +SUBI R30 , LOW ( - 87 )
00c71b 4fff     +SBCI R31 , HIGH ( - 87 )
00c71c 9001     +LD R0 , Z +
00c71d 81f0     +LD R31 , Z
00c71e 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00c71f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C7:
                +
00c720 01fe     +MOVW R30 , R28
00c721 5ae5     +SUBI R30 , LOW ( - 91 )
00c722 4fff     +SBCI R31 , HIGH ( - 91 )
00c723 9001     +LD R0 , Z +
00c724 81f0     +LD R31 , Z
00c725 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00c726 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C8:
                +
00c727 01fe     +MOVW R30 , R28
00c728 5ae1     +SUBI R30 , LOW ( - 95 )
00c729 4fff     +SBCI R31 , HIGH ( - 95 )
00c72a 9001     +LD R0 , Z +
00c72b 81f0     +LD R31 , Z
00c72c 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00c72d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C9:
                +
00c72e 01fe     +MOVW R30 , R28
00c72f 59ed     +SUBI R30 , LOW ( - 99 )
00c730 4fff     +SBCI R31 , HIGH ( - 99 )
00c731 9001     +LD R0 , Z +
00c732 81f0     +LD R31 , Z
00c733 2de0     +MOV R30 , R0
                 	__GETW1SX 99
00c734 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CA:
                +
00c735 e4ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5360 ) )
00c736 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5360 ) )
00c737 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5360 ) )
00c738 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5360 ) )
                 	__POINTD1FN _0x120000,5360
00c739 940e da29 	CALL __PUTPARD1
00c73b 01fe      	MOVW R30,R28
00c73c 963a      	ADIW R30,10
00c73d 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CB:
00c73f 93fa      	ST   -Y,R31
00c740 93ea      	ST   -Y,R30
00c741 01fe      	MOVW R30,R28
00c742 9638      	ADIW R30,8
00c743 93fa      	ST   -Y,R31
00c744 93ea      	ST   -Y,R30
00c745 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1CC:
00c746 e0b0      	LDI  R27,0
00c747 940c a10f 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CD:
                +
00c749 01fe     +MOVW R30 , R28
00c74a 5bef     +SUBI R30 , LOW ( - 65 )
00c74b 4fff     +SBCI R31 , HIGH ( - 65 )
00c74c 9001     +LD R0 , Z +
00c74d 81f0     +LD R31 , Z
00c74e 2de0     +MOV R30 , R0
                 	__GETW1SX 65
00c74f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1CE:
                +
00c750 e020     +LDI R18 , LOW ( 0 )
00c751 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00c752 e000     +LDI R16 , LOW ( 0 )
00c753 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c754 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1CF:
00c755 01f9      	MOVW R30,R18
                +
00c756 5f2f     +SUBI R18 , LOW ( - 1 )
00c757 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00c758 85a8      	LDD  R26,Y+8
00c759 85b9      	LDD  R27,Y+8+1
00c75a 0fae      	ADD  R26,R30
00c75b 1fbf      	ADC  R27,R31
00c75c 91ec      	LD   R30,X
00c75d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D0:
                +
00c75e 81ac     +LDD R26 , Y + 4
00c75f 81bd     +LDD R27 , Y + 4 + 1
00c760 9618     +ADIW R26 , 8
00c761 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00c762 cff2      	RJMP SUBOPT_0x1CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D1:
                +
00c763 81ac     +LDD R26 , Y + 4
00c764 81bd     +LDD R27 , Y + 4 + 1
00c765 9619     +ADIW R26 , 9
00c766 93ed     +ST X + , R30
00c767 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00c768 81ec      	LDD  R30,Y+4
00c769 81fd      	LDD  R31,Y+4+1
00c76a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D2:
00c76b e0e1      	LDI  R30,LOW(1)
00c76c e0f0      	LDI  R31,HIGH(1)
00c76d 940e d932 	CALL __MULW12U
00c76f 01df      	MOVW R26,R30
00c770 940c a0d2 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D3:
00c772 940e d9f0 	CALL __GETW1P
00c774 170e      	CP   R16,R30
00c775 071f      	CPC  R17,R31
00c776 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D4:
00c777 01f8      	MOVW R30,R16
00c778 0fea      	ADD  R30,R26
00c779 1ffb      	ADC  R31,R27
00c77a 010f      	MOVW R0,R30
00c77b 01f9      	MOVW R30,R18
00c77c 0fe0      	ADD  R30,R16
00c77d 1ff1      	ADC  R31,R17
00c77e 85a8      	LDD  R26,Y+8
00c77f 85b9      	LDD  R27,Y+8+1
00c780 cc0d      	RJMP SUBOPT_0x133
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D5:
                +
00c781 81ac     +LDD R26 , Y + 4
00c782 81bd     +LDD R27 , Y + 4 + 1
00c783 9618     +ADIW R26 , 8
00c784 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00c785 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x1D6:
00c786 e0f0      	LDI  R31,0
00c787 940e d919 	CALL __CWD1
                +
00c789 7fef     +ANDI R30 , LOW ( 0xFF )
00c78a 70f0     +ANDI R31 , HIGH ( 0xFF )
00c78b 7060     +ANDI R22 , BYTE3 ( 0xFF )
00c78c 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00c78d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D7:
00c78e 01df      	MOVW R26,R30
00c78f 01cb      	MOVW R24,R22
00c790 e1e8      	LDI  R30,LOW(24)
00c791 940e d8c7 	CALL __LSLD12
00c793 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D8:
00c794 01df      	MOVW R26,R30
00c795 01cb      	MOVW R24,R22
00c796 e0e8      	LDI  R30,LOW(8)
00c797 940e d8c7 	CALL __LSLD12
00c799 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D9:
00c79a 940e d8ad 	CALL __ORD12
                +
00c79c 81ac     +LDD R26 , Y + 4
00c79d 81bd     +LDD R27 , Y + 4 + 1
00c79e 9619     +ADIW R26 , 9
00c79f 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00c7a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1DA:
00c7a2 01f9      	MOVW R30,R18
                +
00c7a3 5f2f     +SUBI R18 , LOW ( - 1 )
00c7a4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00c7a5 ceb8      	RJMP SUBOPT_0x1AA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DB:
00c7a6 940e da29 	CALL __PUTPARD1
00c7a8 85e8      	LDD  R30,Y+8
00c7a9 85f9      	LDD  R31,Y+8+1
00c7aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1DC:
00c7ab 93ba      	ST   -Y,R27
00c7ac 93aa      	ST   -Y,R26
00c7ad ce95      	RJMP SUBOPT_0x1A5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1DD:
00c7ae 940e a0d2 	CALL _malloc
00c7b0 83ee      	STD  Y+6,R30
00c7b1 83ff      	STD  Y+6+1,R31
00c7b2 9730      	SBIW R30,0
00c7b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1DE:
                +
00c7b4 e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00c7b5 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00c7b6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00c7b7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00c7b8 cba6      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1DF:
00c7b9 85ea      	LDD  R30,Y+10
00c7ba 85fb      	LDD  R31,Y+10+1
00c7bb 93fa      	ST   -Y,R31
00c7bc 93ea      	ST   -Y,R30
00c7bd ce30      	RJMP SUBOPT_0x195
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E0:
00c7be 940e a10f 	CALL _memcpy
00c7c0 ccdc      	RJMP SUBOPT_0x15F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E1:
00c7c1 e0a8      	LDI  R26,LOW(8)
00c7c2 e0b0      	LDI  R27,0
00c7c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E2:
                +
00c7c4 e4e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00c7c5 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00c7c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00c7c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00c7c8 cb96      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E3:
                +
00c7c9 e6ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00c7ca e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00c7cb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00c7cc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00c7cd cb91      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E4:
                +
00c7ce efea     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00c7cf e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00c7d0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00c7d1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00c7d2 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E5:
00c7d4 85ec      	LDD  R30,Y+12
00c7d5 e0f0      	LDI  R31,0
00c7d6 70ef      	ANDI R30,LOW(0xF)
00c7d7 70f0      	ANDI R31,HIGH(0xF)
00c7d8 87e8      	STD  Y+8,R30
00c7d9 87f9      	STD  Y+8+1,R31
00c7da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E6:
00c7db e0b0      	LDI  R27,0
00c7dc cfd1      	RJMP SUBOPT_0x1DD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1E7:
00c7dd 940e da29 	CALL __PUTPARD1
00c7df 85ec      	LDD  R30,Y+12
00c7e0 85fd      	LDD  R31,Y+12+1
00c7e1 ca1e      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E8:
00c7e2 940e da29 	CALL __PUTPARD1
                +
00c7e4 e0e3     +LDI R30 , LOW ( 0x3 )
00c7e5 e0f0     +LDI R31 , HIGH ( 0x3 )
00c7e6 e060     +LDI R22 , BYTE3 ( 0x3 )
00c7e7 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00c7e8 cddc      	RJMP SUBOPT_0x18C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E9:
                +
00c7e9 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00c7ea e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00c7eb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00c7ec e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00c7ed cb6c      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EA:
                +
00c7ee e3ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00c7ef e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00c7f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00c7f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00c7f2 cb67      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EB:
                +
00c7f3 e7e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00c7f4 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00c7f5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00c7f6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00c7f7 cb67      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EC:
                +
00c7f8 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00c7f9 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00c7fa e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00c7fb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00c7fc 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1ED:
00c7fe e2e2      	LDI  R30,LOW(34)
00c7ff e0f0      	LDI  R31,HIGH(34)
00c800 17e0      	CP   R30,R16
00c801 07f1      	CPC  R31,R17
00c802 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EE:
                +
00c803 81a1     +LDD R26 , Z + 1
00c804 81b2     +LDD R27 , Z + 1 + 1
00c805 8183     +LDD R24 , Z + 1 + 2
00c806 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00c807 ce11      	RJMP SUBOPT_0x19C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EF:
                +
00c808 e2e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00c809 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00c80a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00c80b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00c80c 940e da29 	CALL __PUTPARD1
00c80e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1F0:
00c80f 85ea      	LDD  R30,Y+10
00c810 e0f0      	LDI  R31,0
00c811 70ef      	ANDI R30,LOW(0xF)
00c812 70f0      	ANDI R31,HIGH(0xF)
00c813 01af      	MOVW R20,R30
00c814 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F1:
00c815 935a      	ST   -Y,R21
00c816 934a      	ST   -Y,R20
00c817 85aa      	LDD  R26,Y+10
00c818 85bb      	LDD  R27,Y+10+1
00c819 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F2:
00c81a 940e da29 	CALL __PUTPARD1
00c81c 940c be05 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1F3:
00c81e 01fe      	MOVW R30,R28
00c81f 9632      	ADIW R30,2
00c820 93fa      	ST   -Y,R31
00c821 93ea      	ST   -Y,R30
00c822 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F4:
00c823 d885      	RCALL SUBOPT_0xB5
00c824 940e da7d 	CALL __CPD10
00c826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1F5:
00c827 940e da29 	CALL __PUTPARD1
00c829 d889      	RCALL SUBOPT_0xB7
00c82a cd9a      	RJMP SUBOPT_0x18C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F6:
00c82b 940e da2e 	CALL __PUTPARD2
00c82d 931a      	ST   -Y,R17
00c82e 930a      	ST   -Y,R16
00c82f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F7:
00c830 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00c831 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00c832 e0a0      	LDI  R26,LOW(0)
00c833 83a0      	STD  Z+0,R26
00c834 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F8:
00c835 940e da29 	CALL __PUTPARD1
00c837 85ec      	LDD  R30,Y+12
00c838 940c be99 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F9:
00c83a e0ab      	LDI  R26,LOW(11)
00c83b 9f1a      	MUL  R17,R26
00c83c 01f0      	MOVW R30,R0
                +
00c83d 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00c83e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00c83f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1FA:
00c840 01df      	MOVW R26,R30
00c841 940e a0ed 	CALL _free
00c843 e0ab      	LDI  R26,LOW(11)
00c844 9f1a      	MUL  R17,R26
00c845 01f0      	MOVW R30,R0
                +
00c846 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00c847 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00c848 e0a0      	LDI  R26,LOW(0)
00c849 e0b0      	LDI  R27,HIGH(0)
00c84a 83a0      	STD  Z+0,R26
00c84b 83b1      	STD  Z+1,R27
00c84c e0ab      	LDI  R26,LOW(11)
00c84d 9f1a      	MUL  R17,R26
00c84e 01f0      	MOVW R30,R0
                +
00c84f 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00c850 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00c851 e0a0      	LDI  R26,LOW(0)
00c852 83a0      	STD  Z+0,R26
00c853 cfe6      	RJMP SUBOPT_0x1F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1FB:
00c854 e0a0      	LDI  R26,LOW(0)
00c855 83a0      	STD  Z+0,R26
00c856 e0ab      	LDI  R26,LOW(11)
00c857 9f1a      	MUL  R17,R26
00c858 01f0      	MOVW R30,R0
00c859 cfd6      	RJMP SUBOPT_0x1F7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1FC:
00c85a e0ab      	LDI  R26,LOW(11)
00c85b 9f1a      	MUL  R17,R26
00c85c 01f0      	MOVW R30,R0
                +
00c85d 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00c85e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00c85f e0a0      	LDI  R26,LOW(0)
00c860 e0b0      	LDI  R27,HIGH(0)
00c861 83a0      	STD  Z+0,R26
00c862 83b1      	STD  Z+1,R27
00c863 e0ab      	LDI  R26,LOW(11)
00c864 9f1a      	MUL  R17,R26
00c865 01f0      	MOVW R30,R0
                +
00c866 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00c867 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00c868 940e bd0c 	CALL SUBOPT_0x2C
00c86a 940e da1f 	CALL __PUTDZ20
00c86c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FD:
00c86d 940e da29 	CALL __PUTPARD1
00c86f 81ed      	LDD  R30,Y+5
00c870 940c be99 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FE:
00c872 2fe1      	MOV  R30,R17
00c873 27ff      	CLR  R31
00c874 2766      	CLR  R22
00c875 2777      	CLR  R23
00c876 940c bcbc 	JMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FF:
00c878 e6e4      	LDI  R30,LOW(100)
00c879 e0f0      	LDI  R31,HIGH(100)
00c87a 940e d9c4 	CALL __MODW21
00c87c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x200:
00c87d 81ec      	LDD  R30,Y+4
00c87e 81fd      	LDD  R31,Y+4+1
00c87f 940c bd33 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x201:
00c881 940e bf9e 	CALL SUBOPT_0x8C
00c883 940e d786 	CALL __SUBF12
00c885 01df      	MOVW R26,R30
00c886 01cb      	MOVW R24,R22
00c887 940e 9de3 	CALL _fabs
00c889 01df      	MOVW R26,R30
00c88a 01cb      	MOVW R24,R22
00c88b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x202:
00c88c 81ec      	LDD  R30,Y+4
00c88d 81fd      	LDD  R31,Y+4+1
00c88e 940c c059 	JMP SUBOPT_0xA5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x203:
                +
00c890 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00c891 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00c892 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00c893 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00c894 940e d7dd 	CALL __MULF12
00c896 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x204:
00c897 940e bf9e 	CALL SUBOPT_0x8C
                +
00c899 e0e0     +LDI R30 , LOW ( 0x40400000 )
00c89a e0f0     +LDI R31 , HIGH ( 0x40400000 )
00c89b e460     +LDI R22 , BYTE3 ( 0x40400000 )
00c89c e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
00c89d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x205:
00c89e 940e d919 	CALL __CWD1
00c8a0 940e d753 	CALL __CDF1
00c8a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x206:
00c8a3 89ab      	LDD  R26,Y+19
00c8a4 89bc      	LDD  R27,Y+19+1
00c8a5 940e 6959 	CALL _updateSensorADC
00c8a7 89eb      	LDD  R30,Y+19
00c8a8 89fc      	LDD  R31,Y+19+1
00c8a9 940c bd33 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x207:
00c8ab 89eb      	LDD  R30,Y+19
00c8ac 89fc      	LDD  R31,Y+19+1
00c8ad 940c bd33 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x208:
00c8af 93fa      	ST   -Y,R31
00c8b0 93ea      	ST   -Y,R30
                +
00c8b1 e0a5     +LDI R26 , LOW ( 0x5 )
00c8b2 e0b0     +LDI R27 , HIGH ( 0x5 )
00c8b3 e080     +LDI R24 , BYTE3 ( 0x5 )
00c8b4 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00c8b5 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x209:
00c8b7 89eb      	LDD  R30,Y+19
00c8b8 89fc      	LDD  R31,Y+19+1
00c8b9 59e7      	SUBI R30,LOW(-_steadyState_S00D0002000)
00c8ba 4efa      	SBCI R31,HIGH(-_steadyState_S00D0002000)
00c8bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:137 WORDS
                 SUBOPT_0x20A:
00c8bc e0f0      	LDI  R31,0
00c8bd 30e1      	CPI  R30,LOW(0x1)
00c8be e0a0      	LDI  R26,HIGH(0x1)
00c8bf 07fa      	CPC  R31,R26
00c8c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x20B:
00c8c1 89eb      	LDD  R30,Y+19
00c8c2 89fc      	LDD  R31,Y+19+1
00c8c3 ebad      	LDI  R26,LOW(_epFactor_C)
00c8c4 e0b5      	LDI  R27,HIGH(_epFactor_C)
00c8c5 940e d8e3 	CALL __LSLW2
00c8c7 0fae      	ADD  R26,R30
00c8c8 1fbf      	ADC  R27,R31
00c8c9 940e da48 	CALL __EEPROMRDD
00c8cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20C:
                +
00c8cc eaaf     +LDI R26 , LOW ( 0xBDE425AF )
00c8cd e2b5     +LDI R27 , HIGH ( 0xBDE425AF )
00c8ce ee84     +LDI R24 , BYTE3 ( 0xBDE425AF )
00c8cf eb9d     +LDI R25 , BYTE4 ( 0xBDE425AF )
                 	__GETD2N 0xBDE425AF
00c8d0 940e d7dd 	CALL __MULF12
00c8d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20D:
                +
00c8d3 eea9     +LDI R26 , LOW ( 0x3A25EFE9 )
00c8d4 eebf     +LDI R27 , HIGH ( 0x3A25EFE9 )
00c8d5 e285     +LDI R24 , BYTE3 ( 0x3A25EFE9 )
00c8d6 e39a     +LDI R25 , BYTE4 ( 0x3A25EFE9 )
                 	__GETD2N 0x3A25EFE9
00c8d7 940e d7dd 	CALL __MULF12
00c8d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20E:
                +
00c8da eda5     +LDI R26 , LOW ( 0x3E2603D5 )
00c8db e0b3     +LDI R27 , HIGH ( 0x3E2603D5 )
00c8dc e286     +LDI R24 , BYTE3 ( 0x3E2603D5 )
00c8dd e39e     +LDI R25 , BYTE4 ( 0x3E2603D5 )
                 	__GETD2N 0x3E2603D5
00c8de 940e d7dd 	CALL __MULF12
00c8e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20F:
00c8e1 89eb      	LDD  R30,Y+19
00c8e2 89fc      	LDD  R31,Y+19+1
00c8e3 eaa9      	LDI  R26,LOW(_epFactor_B)
00c8e4 e0b5      	LDI  R27,HIGH(_epFactor_B)
00c8e5 940e d8e3 	CALL __LSLW2
00c8e7 0fae      	ADD  R26,R30
00c8e8 1fbf      	ADC  R27,R31
00c8e9 940e da48 	CALL __EEPROMRDD
00c8eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x210:
00c8ec e9a5      	LDI  R26,LOW(_epFactor_A)
00c8ed e0b5      	LDI  R27,HIGH(_epFactor_A)
00c8ee 940e d8e3 	CALL __LSLW2
00c8f0 0fae      	ADD  R26,R30
00c8f1 1fbf      	ADC  R27,R31
00c8f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x211:
00c8f3 81ae      	LDD  R26,Y+6
00c8f4 81bf      	LDD  R27,Y+6+1
00c8f5 0fae      	ADD  R26,R30
00c8f6 1fbf      	ADC  R27,R31
00c8f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x212:
00c8f8 0fae      	ADD  R26,R30
00c8f9 1fbf      	ADC  R27,R31
00c8fa 91ac      	LD   R26,X
00c8fb 30a1      	CPI  R26,LOW(0x1)
00c8fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x213:
00c8fd e0e5      	LDI  R30,LOW(5)
00c8fe 940e d95a 	CALL __MULB1W2U
                +
00c900 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
00c901 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
00c902 81e0      	LD   R30,Z
00c903 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x214:
00c904 9631      	ADIW R30,1
00c905 940e d919 	CALL __CWD1
00c907 940e da29 	CALL __PUTPARD1
00c909 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x215:
00c90a 27ff      	CLR  R31
00c90b 2766      	CLR  R22
00c90c 2777      	CLR  R23
00c90d 940c bcbc 	JMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x216:
                +
00c90f e0e0     +LDI R30 , LOW ( 0x0 )
00c910 e0f0     +LDI R31 , HIGH ( 0x0 )
00c911 e060     +LDI R22 , BYTE3 ( 0x0 )
00c912 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c913 940e da5c 	CALL __EEPROMWRD
00c915 81ec      	LDD  R30,Y+4
00c916 81fd      	LDD  R31,Y+4+1
00c917 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x217:
00c918 eaa9      	LDI  R26,LOW(_epFactor_B)
00c919 e0b5      	LDI  R27,HIGH(_epFactor_B)
00c91a 940e d8e3 	CALL __LSLW2
00c91c 0fae      	ADD  R26,R30
00c91d 1fbf      	ADC  R27,R31
00c91e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x218:
00c91f ebad      	LDI  R26,LOW(_epFactor_C)
00c920 e0b5      	LDI  R27,HIGH(_epFactor_C)
00c921 940c bca8 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x219:
                +
00c923 e0e0     +LDI R30 , LOW ( 0x0 )
00c924 e0f0     +LDI R31 , HIGH ( 0x0 )
00c925 e060     +LDI R22 , BYTE3 ( 0x0 )
00c926 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c927 940e da5c 	CALL __EEPROMWRD
00c929 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x21A:
00c92a 89e8      	LDD  R30,Y+16
00c92b 89f9      	LDD  R31,Y+16+1
00c92c eda6      	LDI  R26,LOW(_epADCRef1)
00c92d e0b5      	LDI  R27,HIGH(_epADCRef1)
00c92e 940e d8e3 	CALL __LSLW2
00c930 0fae      	ADD  R26,R30
00c931 1fbf      	ADC  R27,R31
00c932 940e da48 	CALL __EEPROMRDD
00c934 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21B:
00c935 89e8      	LDD  R30,Y+16
00c936 89f9      	LDD  R31,Y+16+1
00c937 eeaa      	LDI  R26,LOW(_epTempRef1)
00c938 e0b5      	LDI  R27,HIGH(_epTempRef1)
00c939 940e d8e3 	CALL __LSLW2
00c93b 0fae      	ADD  R26,R30
00c93c 1fbf      	ADC  R27,R31
00c93d 940e da48 	CALL __EEPROMRDD
00c93f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21C:
00c940 89a8      	LDD  R26,Y+16
00c941 89b9      	LDD  R27,Y+16+1
00c942 5aa8      	SUBI R26,LOW(-_epCalType)
00c943 4fb9      	SBCI R27,HIGH(-_epCalType)
00c944 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21D:
                +
00c945 e1e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 250 ) )
00c946 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 250 ) )
00c947 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 250 ) )
00c948 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 250 ) )
                 	__POINTD1FN _0x1A0000,250
00c949 c8b1      	RJMP SUBOPT_0xEB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21E:
00c94a ebad      	LDI  R26,LOW(_epFactor_C)
00c94b e0b5      	LDI  R27,HIGH(_epFactor_C)
00c94c 940e d8e3 	CALL __LSLW2
00c94e 0fae      	ADD  R26,R30
00c94f 1fbf      	ADC  R27,R31
00c950 cacc      	RJMP SUBOPT_0x14E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21F:
00c951 89e8      	LDD  R30,Y+16
00c952 89f9      	LDD  R31,Y+16+1
00c953 e1a7      	LDI  R26,LOW(_epTempRef2)
00c954 e0b6      	LDI  R27,HIGH(_epTempRef2)
00c955 940e d8e3 	CALL __LSLW2
00c957 0fae      	ADD  R26,R30
00c958 1fbf      	ADC  R27,R31
00c959 940e da48 	CALL __EEPROMRDD
00c95b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x220:
00c95c 940e da3b 	CALL __SWAPD12
00c95e 940e d786 	CALL __SUBF12
00c960 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x221:
00c961 89e8      	LDD  R30,Y+16
00c962 89f9      	LDD  R31,Y+16+1
00c963 e0a3      	LDI  R26,LOW(_epADCRef2)
00c964 e0b6      	LDI  R27,HIGH(_epADCRef2)
00c965 940e d8e3 	CALL __LSLW2
00c967 0fae      	ADD  R26,R30
00c968 1fbf      	ADC  R27,R31
00c969 940e da48 	CALL __EEPROMRDD
00c96b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x222:
                +
00c96c e5ea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 322 ) )
00c96d e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 322 ) )
00c96e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 322 ) )
00c96f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 322 ) )
                 	__POINTD1FN _0x1A0000,322
00c970 c88a      	RJMP SUBOPT_0xEB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x223:
00c971 940e d8e3 	CALL __LSLW2
00c973 0fae      	ADD  R26,R30
00c974 1fbf      	ADC  R27,R31
00c975 940e da48 	CALL __EEPROMRDD
00c977 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x224:
00c978 940e da29 	CALL __PUTPARD1
00c97a 8de8      	LDD  R30,Y+24
00c97b 8df9      	LDD  R31,Y+24+1
00c97c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x225:
00c97d eeaa      	LDI  R26,LOW(_epTempRef1)
00c97e e0b5      	LDI  R27,HIGH(_epTempRef1)
00c97f cff1      	RJMP SUBOPT_0x223
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x226:
00c980 e1a7      	LDI  R26,LOW(_epTempRef2)
00c981 e0b6      	LDI  R27,HIGH(_epTempRef2)
00c982 cfee      	RJMP SUBOPT_0x223
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x227:
00c983 e4a4      	LDI  R26,LOW(_epTempRef3)
00c984 e0b6      	LDI  R27,HIGH(_epTempRef3)
00c985 cfeb      	RJMP SUBOPT_0x223
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x228:
00c986 940e d8e3 	CALL __LSLW2
00c988 0fae      	ADD  R26,R30
00c989 1fbf      	ADC  R27,R31
00c98a 940e bf7f 	CALL SUBOPT_0x87
00c98c 940e da5c 	CALL __EEPROMWRD
00c98e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x229:
00c98f e0e2      	LDI  R30,LOW(2)
00c990 93ea      	ST   -Y,R30
00c991 01de      	MOVW R26,R28
00c992 961b      	ADIW R26,11
00c993 940c 9e68 	JMP  _ftoa
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22A:
                +
00c995 e2eb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 531 ) )
00c996 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 531 ) )
00c997 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 531 ) )
00c998 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 531 ) )
                 	__POINTD1FN _0x1A0000,531
00c999 940e da29 	CALL __PUTPARD1
00c99b e080      	LDI  R24,0
00c99c 940e bb00 	CALL _sprintf
00c99e 9626      	ADIW R28,6
00c99f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x22B:
00c9a0 01de      	MOVW R26,R28
00c9a1 9616      	ADIW R26,6
00c9a2 940c a19b 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22C:
00c9a4 53e0      	SUBI R30,LOW(48)
                +
00c9a5 89a8     +LDD R26 , Y + 16
00c9a6 89b9     +LDD R27 , Y + 16 + 1
00c9a7 9612     +ADIW R26 , 2
00c9a8 93ec     +ST X , R30
                 	__PUTB1SNS 16,2
00c9a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22D:
00c9aa 53e0      	SUBI R30,LOW(48)
                +
00c9ab 89a8     +LDD R26 , Y + 16
00c9ac 89b9     +LDD R27 , Y + 16 + 1
00c9ad 9613     +ADIW R26 , 3
00c9ae 93ec     +ST X , R30
                 	__PUTB1SNS 16,3
00c9af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22E:
00c9b0 53e0      	SUBI R30,LOW(48)
                +
00c9b1 89a8     +LDD R26 , Y + 16
00c9b2 89b9     +LDD R27 , Y + 16 + 1
00c9b3 9614     +ADIW R26 , 4
00c9b4 93ec     +ST X , R30
                 	__PUTB1SNS 16,4
00c9b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22F:
00c9b6 53e0      	SUBI R30,LOW(48)
                +
00c9b7 89a8     +LDD R26 , Y + 16
00c9b8 89b9     +LDD R27 , Y + 16 + 1
00c9b9 9615     +ADIW R26 , 5
00c9ba 93ec     +ST X , R30
                 	__PUTB1SNS 16,5
00c9bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x230:
00c9bc 89a8      	LDD  R26,Y+16
00c9bd 89b9      	LDD  R27,Y+16+1
00c9be 9611      	ADIW R26,1
00c9bf e0e0      	LDI  R30,LOW(0)
00c9c0 93ec      	ST   X,R30
00c9c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x231:
                +
00c9c2 e6e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 845 ) )
00c9c3 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 845 ) )
00c9c4 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 845 ) )
00c9c5 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 845 ) )
                 	__POINTD1FN _0x1A0000,845
00c9c6 940e da29 	CALL __PUTPARD1
00c9c8 01fe      	MOVW R30,R28
00c9c9 963a      	ADIW R30,10
00c9ca 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x232:
00c9cc 940e da29 	CALL __PUTPARD1
00c9ce 85ec      	LDD  R30,Y+12
00c9cf 85fd      	LDD  R31,Y+12+1
00c9d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x233:
00c9d1 9fea      	MUL  R30,R26
00c9d2 01f0      	MOVW R30,R0
00c9d3 deca      	RCALL SUBOPT_0x205
00c9d4 940e bf9e 	CALL SUBOPT_0x8C
00c9d6 940e d78d 	CALL __ADDF12
00c9d8 940e c18a 	CALL SUBOPT_0xD9
00c9da 81ec      	LDD  R30,Y+4
00c9db 81fd      	LDD  R31,Y+4+1
00c9dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x234:
00c9dd 940e bf9e 	CALL SUBOPT_0x8C
00c9df 940e d78d 	CALL __ADDF12
00c9e1 940e c18a 	CALL SUBOPT_0xD9
00c9e3 81ec      	LDD  R30,Y+4
00c9e4 81fd      	LDD  R31,Y+4+1
00c9e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x235:
00c9e6 81e5      	LDD  R30,Z+5
00c9e7 e0f0      	LDI  R31,0
00c9e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x236:
00c9e9 010f      	MOVW R0,R30
00c9ea 85e8      	LDD  R30,Y+8
00c9eb 85f9      	LDD  R31,Y+8+1
00c9ec 940c bd33 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x237:
00c9ee 01d0      	MOVW R26,R0
00c9ef 940e da5c 	CALL __EEPROMWRD
00c9f1 85a8      	LDD  R26,Y+8
00c9f2 85b9      	LDD  R27,Y+8+1
00c9f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x238:
00c9f4 940e da6c 	CALL __EEPROMWRB
00c9f6 85a8      	LDD  R26,Y+8
00c9f7 85b9      	LDD  R27,Y+8+1
00c9f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x239:
00c9f9 01f5      	MOVW R30,R10
00c9fa e0aa      	LDI  R26,LOW(10)
00c9fb e0b0      	LDI  R27,HIGH(10)
00c9fc 940e d932 	CALL __MULW12U
00c9fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23A:
00c9ff 940e be50 	CALL SUBOPT_0x59
00ca01 940e da1f 	CALL __PUTDZ20
00ca03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x23B:
00ca04 940e da1f 	CALL __PUTDZ20
00ca06 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x23C:
00ca07 e0ea      	LDI  R30,LOW(10)
00ca08 e0f0      	LDI  R31,HIGH(10)
00ca09 940e d9c4 	CALL __MODW21
00ca0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23D:
00ca0c 01f6      	MOVW R30,R12
00ca0d e0aa      	LDI  R26,LOW(10)
00ca0e e0b0      	LDI  R27,HIGH(10)
00ca0f 940e d932 	CALL __MULW12U
00ca11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23E:
00ca12 01df      	MOVW R26,R30
00ca13 940e d9f4 	CALL __GETD1P
00ca15 81ac      	LDD  R26,Y+4
00ca16 81bd      	LDD  R27,Y+4+1
00ca17 940e d9ff 	CALL __PUTDP1
00ca19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23F:
00ca1a 93e0 1483 	STS  _batteryVolt,R30
00ca1c 93f0 1484 	STS  _batteryVolt+1,R31
00ca1e 9360 1485 	STS  _batteryVolt+2,R22
00ca20 9370 1486 	STS  _batteryVolt+3,R23
00ca22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x240:
                +
00ca23 91e0 136b+LDS R30 , _env_config + ( 6 )
00ca25 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00ca27 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00ca29 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00ca2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x241:
00ca2c 70e4      	ANDI R30,LOW(0x4)
00ca2d e0f0      	LDI  R31,0
00ca2e 940e d8ec 	CALL __ASRW2
00ca30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x242:
00ca31 91e0 146b 	LDS  R30,_sdFreeSpace
00ca33 91f0 146c 	LDS  R31,_sdFreeSpace+1
00ca35 9160 146d 	LDS  R22,_sdFreeSpace+2
00ca37 9170 146e 	LDS  R23,_sdFreeSpace+3
00ca39 940e da7d 	CALL __CPD10
00ca3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x243:
00ca3c 81e8      	LD   R30,Y
00ca3d 81f9      	LDD  R31,Y+1
00ca3e 59e1      	SUBI R30,LOW(-_sensorStatus)
00ca3f 4efb      	SBCI R31,HIGH(-_sensorStatus)
00ca40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x244:
00ca41 81ea      	LDD  R30,Y+2
00ca42 81fb      	LDD  R31,Y+2+1
00ca43 51e2      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00ca44 4efa      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00ca45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x245:
00ca46 81ea      	LDD  R30,Y+2
00ca47 81fb      	LDD  R31,Y+2+1
00ca48 edaa      	LDI  R26,LOW(_t_S00F0005000)
00ca49 e1b5      	LDI  R27,HIGH(_t_S00F0005000)
00ca4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x246:
00ca4b 93fa      	ST   -Y,R31
00ca4c 93ea      	ST   -Y,R30
00ca4d 81ac      	LDD  R26,Y+4
00ca4e 81bd      	LDD  R27,Y+4+1
00ca4f e1ed      	LDI  R30,LOW(29)
00ca50 940e d95a 	CALL __MULB1W2U
00ca52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x247:
                +
00ca53 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
00ca54 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
00ca55 01df      	MOVW R26,R30
00ca56 940c bcad 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x248:
00ca58 81aa      	LDD  R26,Y+2
00ca59 81bb      	LDD  R27,Y+2+1
00ca5a 58ac      	SUBI R26,LOW(-_dataStatus)
00ca5b 4ebb      	SBCI R27,HIGH(-_dataStatus)
00ca5c 91ec      	LD   R30,X
00ca5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x249:
00ca5e 81ea      	LDD  R30,Y+2
00ca5f 81fb      	LDD  R31,Y+2+1
00ca60 50ed      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00ca61 4efa      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00ca62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24A:
                +
00ca63 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00ca64 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
00ca65 01df      	MOVW R26,R30
00ca66 940c bcad 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24B:
                +
00ca68 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00ca69 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00ca6a 0fe0      	ADD  R30,R16
00ca6b 1ff1      	ADC  R31,R17
00ca6c 81e0      	LD   R30,Z
00ca6d 30e0      	CPI  R30,0
00ca6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x24C:
00ca6f 81aa      	LDD  R26,Y+2
00ca70 81bb      	LDD  R27,Y+2+1
00ca71 01cd      	MOVW R24,R26
00ca72 916d      	LD   R22,X+
00ca73 917c      	LD   R23,X
00ca74 e0e4      	LDI  R30,LOW(4)
00ca75 e0f0      	LDI  R31,HIGH(4)
00ca76 1be0      	SUB  R30,R16
00ca77 0bf1      	SBC  R31,R17
00ca78 e0a1      	LDI  R26,LOW(1)
00ca79 e0b0      	LDI  R27,HIGH(1)
00ca7a 940e d8be 	CALL __LSLW12
00ca7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24D:
00ca7d 91a0 167c 	LDS  R26,_last_wr_eventQ
00ca7f 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00ca81 e0e6      	LDI  R30,LOW(6)
00ca82 940e d95a 	CALL __MULB1W2U
00ca84 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24E:
00ca85 91a0 167e 	LDS  R26,_last_rd_eventQ
00ca87 91b0 167f 	LDS  R27,_last_rd_eventQ+1
00ca89 e0e6      	LDI  R30,LOW(6)
00ca8a 940e d95a 	CALL __MULB1W2U
00ca8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24F:
00ca8d 81e0      	LD   R30,Z
00ca8e 81a8      	LD   R26,Y
00ca8f 81b9      	LDD  R27,Y+1
00ca90 93ec      	ST   X,R30
00ca91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x250:
00ca92 940e da9b 	CALL __SAVELOCR4
                +
00ca94 e000     +LDI R16 , LOW ( 0 )
00ca95 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00ca96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x251:
00ca97 0fa0      	ADD  R26,R16
00ca98 1fb1      	ADC  R27,R17
00ca99 91ec      	LD   R30,X
00ca9a 30e0      	CPI  R30,0
00ca9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x252:
00ca9c 93fa      	ST   -Y,R31
00ca9d 93ea      	ST   -Y,R30
                +
00ca9e e0a3     +LDI R26 , LOW ( 0x3 )
00ca9f e0b0     +LDI R27 , HIGH ( 0x3 )
00caa0 e080     +LDI R24 , BYTE3 ( 0x3 )
00caa1 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00caa2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x253:
00caa3 81a8      	LD   R26,Y
00caa4 81b9      	LDD  R27,Y+1
00caa5 93ec      	ST   X,R30
00caa6 e0e0      	LDI  R30,LOW(0)
00caa7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x254:
                +
00caa8 91a0 136b+LDS R26 , _env_config + ( 6 )
00caaa 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
00caac 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
00caae 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
00cab0 940e da89 	CALL __CPD02
00cab2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x255:
00cab3 81a8      	LD   R26,Y
00cab4 81b9      	LDD  R27,Y+1
00cab5 e0e0      	LDI  R30,LOW(0)
00cab6 93ec      	ST   X,R30
00cab7 e0e1      	LDI  R30,LOW(1)
00cab8 e0f0      	LDI  R31,HIGH(1)
00cab9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x256:
                +
00caba 91a0 1375+LDS R26 , _env_config + ( 16 )
00cabc 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
00cabe 940e da81 	CALL __CPW02
00cac0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x257:
00cac1 81ea      	LDD  R30,Y+2
00cac2 81fb      	LDD  R31,Y+2+1
00cac3 58e4      	SUBI R30,LOW(-_dinStatus)
00cac4 4efb      	SBCI R31,HIGH(-_dinStatus)
00cac5 81a0      	LD   R26,Z
00cac6 81ea      	LDD  R30,Y+2
00cac7 81fb      	LDD  R31,Y+2+1
00cac8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x258:
00cac9 81ea      	LDD  R30,Y+2
00caca 81fb      	LDD  R31,Y+2+1
00cacb 55e0      	SUBI R30,LOW(-_t_flag_S0110006000)
00cacc 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00cacd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x259:
00cace 81ea      	LDD  R30,Y+2
00cacf 81fb      	LDD  R31,Y+2+1
00cad0 58e4      	SUBI R30,LOW(-_dinStatus)
00cad1 4efb      	SBCI R31,HIGH(-_dinStatus)
00cad2 81e0      	LD   R30,Z
00cad3 93ec      	ST   X,R30
00cad4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25A:
00cad5 93ba      	ST   -Y,R27
00cad6 93aa      	ST   -Y,R26
00cad7 81ea      	LDD  R30,Y+2
00cad8 81fb      	LDD  R31,Y+2+1
00cad9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25B:
00cada 81ea      	LDD  R30,Y+2
00cadb 81fb      	LDD  R31,Y+2+1
00cadc 59e1      	SUBI R30,LOW(-_sensorStatus)
00cadd 4efb      	SBCI R31,HIGH(-_sensorStatus)
00cade 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25C:
00cadf 81ea      	LDD  R30,Y+2
00cae0 81fb      	LDD  R31,Y+2+1
00cae1 53e8      	SUBI R30,LOW(-_t_flag_S0110007000)
00cae2 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00cae3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25D:
00cae4 81ea      	LDD  R30,Y+2
00cae5 81fb      	LDD  R31,Y+2+1
00cae6 eba4      	LDI  R26,LOW(_t_S0110007000)
00cae7 e1b6      	LDI  R27,HIGH(_t_S0110007000)
00cae8 940c bca8 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25E:
00caea 81ea      	LDD  R30,Y+2
00caeb 81fb      	LDD  R31,Y+2+1
00caec 51ea      	SUBI R30,LOW(-_t_flag_S0110008000)
00caed 4ef9      	SBCI R31,HIGH(-_t_flag_S0110008000)
00caee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x25F:
00caef e088      	LDI  R24,8
00caf0 940e 7c8c 	CALL _printOLED
00caf2 962c      	ADIW R28,12
00caf3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x260:
                +
00caf4 e0a5     +LDI R26 , 5
00caf5 9fa0     +MUL R26 , R16
00caf6 01f0     +MOVW R30 , R0
00caf7 9fa1     +MUL R26 , R17
00caf8 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,5
00caf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x261:
00cafa 940e da29 	CALL __PUTPARD1
00cafc 01f8      	MOVW R30,R16
00cafd ce06      	RJMP SUBOPT_0x214
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x262:
00cafe 940e da29 	CALL __PUTPARD1
00cb00 cfee      	RJMP SUBOPT_0x25F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 118 TIMES, CODE SIZE REDUCTION:231 WORDS
                 SUBOPT_0x263:
00cb01 e084      	LDI  R24,4
00cb02 940e 7c8c 	CALL _printOLED
00cb04 9628      	ADIW R28,8
00cb05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x264:
00cb06 940e bf9e 	CALL SUBOPT_0x8C
                +
00cb08 e3e3     +LDI R30 , LOW ( 0x40533333 )
00cb09 e3f3     +LDI R31 , HIGH ( 0x40533333 )
00cb0a e563     +LDI R22 , BYTE3 ( 0x40533333 )
00cb0b e470     +LDI R23 , BYTE4 ( 0x40533333 )
                 	__GETD1N 0x40533333
00cb0c 940e d870 	CALL __CMPF12
00cb0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x265:
00cb0f 940e bf9e 	CALL SUBOPT_0x8C
                +
00cb11 eced     +LDI R30 , LOW ( 0x406CCCCD )
00cb12 ecfc     +LDI R31 , HIGH ( 0x406CCCCD )
00cb13 e66c     +LDI R22 , BYTE3 ( 0x406CCCCD )
00cb14 e470     +LDI R23 , BYTE4 ( 0x406CCCCD )
                 	__GETD1N 0x406CCCCD
00cb15 940e d870 	CALL __CMPF12
00cb17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x266:
00cb18 940e bf9e 	CALL SUBOPT_0x8C
                +
00cb1a e0e0     +LDI R30 , LOW ( 0x40800000 )
00cb1b e0f0     +LDI R31 , HIGH ( 0x40800000 )
00cb1c e860     +LDI R22 , BYTE3 ( 0x40800000 )
00cb1d e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
00cb1e 940e d870 	CALL __CMPF12
00cb20 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x267:
00cb21 e080      	LDI  R24,0
00cb22 940e 7c8c 	CALL _printOLED
00cb24 9624      	ADIW R28,4
00cb25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x268:
00cb26 940e d919 	CALL __CWD1
00cb28 940e da29 	CALL __PUTPARD1
00cb2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x269:
00cb2b 940e da29 	CALL __PUTPARD1
00cb2d 81ec      	LDD  R30,Y+4
00cb2e 940c be99 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x26A:
00cb30 940e d890 	CALL __ADDW2R15
00cb32 940e d9f4 	CALL __GETD1P
00cb34 940e da29 	CALL __PUTPARD1
00cb36 01d8      	MOVW R26,R16
00cb37 940c bb36 	JMP  _vsprintf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26B:
00cb39 940e be1e 	CALL SUBOPT_0x52
00cb3b 940e b538 	CALL _f_lseek
00cb3d 2f1e      	MOV  R17,R30
00cb3e 3010      	CPI  R17,0
00cb3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26C:
00cb40 2fa1      	MOV  R26,R17
00cb41 940e 7cec 	CALL _error
00cb43 efef      	LDI  R30,LOW(65535)
00cb44 efff      	LDI  R31,HIGH(65535)
00cb45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26D:
00cb46 93fa      	ST   -Y,R31
00cb47 93ea      	ST   -Y,R30
00cb48 01fe      	MOVW R30,R28
00cb49 9633      	ADIW R30,3
00cb4a 93fa      	ST   -Y,R31
00cb4b 93ea      	ST   -Y,R30
00cb4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26E:
00cb4d 940e da29 	CALL __PUTPARD1
00cb4f e1ef      	LDI  R30,LOW(_root_path)
00cb50 e1f9      	LDI  R31,HIGH(_root_path)
00cb51 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x26F:
00cb53 940e 7cec 	CALL _error
00cb55 e0e0      	LDI  R30,LOW(0)
00cb56 93e0 146b 	STS  _sdFreeSpace,R30
00cb58 93e0 146c 	STS  _sdFreeSpace+1,R30
00cb5a 93e0 146d 	STS  _sdFreeSpace+2,R30
00cb5c 93e0 146e 	STS  _sdFreeSpace+3,R30
00cb5e efef      	LDI  R30,LOW(65535)
00cb5f efff      	LDI  R31,HIGH(65535)
00cb60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x270:
00cb61 81e2      	LDD  R30,Z+2
00cb62 e0f0      	LDI  R31,0
00cb63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x271:
                +
00cb64 81a9     +LDD R26 , Y + 1
00cb65 81ba     +LDD R27 , Y + 1 + 1
00cb66 818b     +LDD R24 , Y + 1 + 2
00cb67 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00cb68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x272:
00cb69 940e d919 	CALL __CWD1
00cb6b 940e d93a 	CALL __MULD12U
00cb6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x273:
                +
00cb6e e0e4     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00cb6f e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00cb70 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00cb71 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00cb72 cfda      	RJMP SUBOPT_0x26E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x274:
00cb73 93fa      	ST   -Y,R31
00cb74 93ea      	ST   -Y,R30
00cb75 01fe      	MOVW R30,R28
00cb76 9634      	ADIW R30,4
00cb77 93fa      	ST   -Y,R31
00cb78 93ea      	ST   -Y,R30
00cb79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x275:
00cb7a 89ee      	LDD  R30,Y+22
00cb7b 89ff      	LDD  R31,Y+22+1
00cb7c 93fa      	ST   -Y,R31
00cb7d 93ea      	ST   -Y,R30
00cb7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x276:
00cb7f 01de      	MOVW R26,R28
00cb80 961a      	ADIW R26,10
00cb81 940e 8178 	CALL _LOG_getLastInsert
00cb83 018f      	MOVW R16,R30
00cb84 2311      	TST  R17
00cb85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x277:
00cb86 940e be05 	CALL SUBOPT_0x4F
00cb88 940e da29 	CALL __PUTPARD1
00cb8a 940c bddb 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x278:
00cb8c 940e 8200 	CALL _index2Addr
00cb8e 940c c070 	JMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x279:
00cb90 940e c0b3 	CALL SUBOPT_0xB7
00cb92 940e da29 	CALL __PUTPARD1
00cb94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27A:
00cb95 940e c0b3 	CALL SUBOPT_0xB7
00cb97 940c c176 	JMP SUBOPT_0xD5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x27B:
00cb99 93fa      	ST   -Y,R31
00cb9a 93ea      	ST   -Y,R30
00cb9b 940c bf18 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x27C:
00cb9d 940e 7d0c 	CALL _SD_writeData
00cb9f 018f      	MOVW R16,R30
00cba0 2311      	TST  R17
00cba1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27D:
00cba2 940e c0b3 	CALL SUBOPT_0xB7
                +
00cba4 5feb     +SUBI R30 , LOW ( - 5 )
00cba5 4fff     +SBCI R31 , HIGH ( - 5 )
00cba6 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00cba7 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00cba8 940e da29 	CALL __PUTPARD1
00cbaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27E:
00cbab 940e c0b3 	CALL SUBOPT_0xB7
                +
00cbad 5fe9     +SUBI R30 , LOW ( - 7 )
00cbae 4fff     +SBCI R31 , HIGH ( - 7 )
00cbaf 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00cbb0 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00cbb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x27F:
00cbb2 940e c180 	CALL SUBOPT_0xD7
00cbb4 940e c0da 	CALL SUBOPT_0xBE
                +
00cbb6 87ea     +STD Y + 10 , R30
00cbb7 87fb     +STD Y + 10 + 1 , R31
00cbb8 876c     +STD Y + 10 + 2 , R22
00cbb9 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00cbba 01df      	MOVW R26,R30
00cbbb 01cb      	MOVW R24,R22
00cbbc 940e 8193 	CALL _LOG_setLastInsert
00cbbe 018f      	MOVW R16,R30
00cbbf 2311      	TST  R17
00cbc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x280:
00cbc1 8de8      	LDD  R30,Y+24
00cbc2 8df9      	LDD  R31,Y+24+1
00cbc3 93fa      	ST   -Y,R31
00cbc4 93ea      	ST   -Y,R30
00cbc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x281:
00cbc6 01de      	MOVW R26,R28
00cbc7 961e      	ADIW R26,14
00cbc8 940e 8178 	CALL _LOG_getLastInsert
00cbca 018f      	MOVW R16,R30
00cbcb 2311      	TST  R17
00cbcc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x282:
00cbcd 01de      	MOVW R26,R28
00cbce 961a      	ADIW R26,10
00cbcf 940e 81b4 	CALL _LOG_getLastSend
00cbd1 018f      	MOVW R16,R30
00cbd2 2311      	TST  R17
00cbd3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x283:
                +
00cbd4 e6e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00cbd5 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00cbd6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00cbd7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00cbd8 940c bfa1 	JMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x284:
00cbda 940e da29 	CALL __PUTPARD1
00cbdc 940e c1a6 	CALL SUBOPT_0xDF
00cbde 940c bcbc 	JMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x285:
00cbe0 940e c194 	CALL SUBOPT_0xDC
00cbe2 940e c18f 	CALL SUBOPT_0xDB
00cbe4 940e da94 	CALL __CPD21
00cbe6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x286:
00cbe7 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00cbe8 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00cbe9 93fa      	ST   -Y,R31
00cbea 93ea      	ST   -Y,R30
00cbeb e0e1      	LDI  R30,LOW(1)
00cbec 93ea      	ST   -Y,R30
00cbed ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00cbee e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00cbef 93fa      	ST   -Y,R31
00cbf0 93ea      	ST   -Y,R30
00cbf1 e1a0      	LDI  R26,LOW(16)
00cbf2 e0b0      	LDI  R27,0
00cbf3 940e 8212 	CALL _LOG_createFile
00cbf5 018f      	MOVW R16,R30
00cbf6 2311      	TST  R17
00cbf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x287:
00cbf8 940e 7d63 	CALL _SD_readData
00cbfa 018f      	MOVW R16,R30
00cbfb 2311      	TST  R17
00cbfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x288:
00cbfd 89ea      	LDD  R30,Y+18
00cbfe 89fb      	LDD  R31,Y+18+1
00cbff 93fa      	ST   -Y,R31
00cc00 93ea      	ST   -Y,R30
00cc01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x289:
00cc02 940e be05 	CALL SUBOPT_0x4F
00cc04 940e da29 	CALL __PUTPARD1
00cc06 940c bc2b 	JMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28A:
00cc08 93fa      	ST   -Y,R31
00cc09 93ea      	ST   -Y,R30
00cc0a 940c bf12 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28B:
00cc0c 940e c0b3 	CALL SUBOPT_0xB7
                +
00cc0e 5fe6     +SUBI R30 , LOW ( - 10 )
00cc0f 4fff     +SBCI R31 , HIGH ( - 10 )
00cc10 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00cc11 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00cc12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x28C:
00cc13 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00cc14 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00cc15 93fa      	ST   -Y,R31
00cc16 93ea      	ST   -Y,R30
00cc17 e0e1      	LDI  R30,LOW(1)
00cc18 93ea      	ST   -Y,R30
00cc19 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00cc1a e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00cc1b 93fa      	ST   -Y,R31
00cc1c 93ea      	ST   -Y,R30
00cc1d e1a0      	LDI  R26,LOW(16)
00cc1e e0b0      	LDI  R27,0
00cc1f 940e 8212 	CALL _LOG_createFile
00cc21 018f      	MOVW R16,R30
00cc22 2311      	TST  R17
00cc23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x28D:
00cc24 81ec      	LDD  R30,Y+4
00cc25 81fd      	LDD  R31,Y+4+1
00cc26 93fa      	ST   -Y,R31
00cc27 93ea      	ST   -Y,R30
00cc28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28E:
                +
00cc29 e0e0     +LDI R30 , LOW ( 0x0 )
00cc2a e0f0     +LDI R31 , HIGH ( 0x0 )
00cc2b e060     +LDI R22 , BYTE3 ( 0x0 )
00cc2c e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00cc2d 940e da29 	CALL __PUTPARD1
00cc2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28F:
                +
00cc30 e0e4     +LDI R30 , LOW ( 0x4 )
00cc31 e0f0     +LDI R31 , HIGH ( 0x4 )
00cc32 e060     +LDI R22 , BYTE3 ( 0x4 )
00cc33 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00cc34 940e da29 	CALL __PUTPARD1
00cc36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x290:
00cc37 940e da29 	CALL __PUTPARD1
                +
00cc39 01fe     +MOVW R30 , R28
00cc3a 5de5     +SUBI R30 , LOW ( - 555 )
00cc3b 4ffd     +SBCI R31 , HIGH ( - 555 )
00cc3c 9001     +LD R0 , Z +
00cc3d 81f0     +LD R31 , Z
00cc3e 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00cc3f 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x291:
                +
00cc41 01fe     +MOVW R30 , R28
00cc42 5dec     +SUBI R30 , LOW ( - 548 )
00cc43 4ffd     +SBCI R31 , HIGH ( - 548 )
00cc44 9001     +LD R0 , Z +
00cc45 81f0     +LD R31 , Z
00cc46 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00cc47 93fa      	ST   -Y,R31
00cc48 93ea      	ST   -Y,R30
                +
00cc49 01de     +MOVW R26 , R28
00cc4a 5dac     +SUBI R26 , LOW ( - 548 )
00cc4b 4fbd     +SBCI R27 , HIGH ( - 548 )
00cc4c 900d     +LD R0 , X +
00cc4d 91bc     +LD R27 , X
00cc4e 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00cc4f 940c 9b80 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x292:
00cc51 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00cc52 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00cc53 93fa      	ST   -Y,R31
00cc54 93ea      	ST   -Y,R30
00cc55 e1a0      	LDI  R26,LOW(16)
00cc56 e0b0      	LDI  R27,0
00cc57 940e 8212 	CALL _LOG_createFile
00cc59 018f      	MOVW R16,R30
00cc5a 2311      	TST  R17
00cc5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x293:
                +
00cc5c e6ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00cc5d e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00cc5e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00cc5f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00cc60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x294:
00cc61 940e da29 	CALL __PUTPARD1
00cc63 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00cc64 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00cc65 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x295:
00cc67 01df      	MOVW R26,R30
00cc68 940e d9f4 	CALL __GETD1P
00cc6a 81ae      	LDD  R26,Y+6
00cc6b 81bf      	LDD  R27,Y+6+1
00cc6c 940e d9ff 	CALL __PUTDP1
00cc6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x296:
00cc6f e0ab      	LDI  R26,LOW(11)
00cc70 9f1a      	MUL  R17,R26
00cc71 01f0      	MOVW R30,R0
00cc72 55e0      	SUBI R30,LOW(-_dataLogQueue)
00cc73 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00cc74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x297:
00cc75 e0a0      	LDI  R26,LOW(0)
00cc76 83a0      	STD  Z+0,R26
00cc77 e0ab      	LDI  R26,LOW(11)
00cc78 9f1a      	MUL  R17,R26
00cc79 01f0      	MOVW R30,R0
                +
00cc7a 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00cc7b 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00cc7c 940e bd0c 	CALL SUBOPT_0x2C
00cc7e dd85      	RCALL SUBOPT_0x23B
00cc7f e0ab      	LDI  R26,LOW(11)
00cc80 9f1a      	MUL  R17,R26
00cc81 01f0      	MOVW R30,R0
                +
00cc82 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00cc83 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00cc84 e0a0      	LDI  R26,LOW(0)
00cc85 e0b0      	LDI  R27,HIGH(0)
00cc86 83a0      	STD  Z+0,R26
00cc87 83b1      	STD  Z+1,R27
00cc88 e0ab      	LDI  R26,LOW(11)
00cc89 9f1a      	MUL  R17,R26
00cc8a 01f0      	MOVW R30,R0
                +
00cc8b 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00cc8c 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00cc8d 940e bd0c 	CALL SUBOPT_0x2C
00cc8f cd74      	RJMP SUBOPT_0x23B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x298:
                +
00cc90 e0a7     +LDI R26 , 7
00cc91 9fa0     +MUL R26 , R16
00cc92 01f0     +MOVW R30 , R0
00cc93 9fa1     +MUL R26 , R17
00cc94 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00cc95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x299:
00cc96 e0a7      	LDI  R26,LOW(7)
00cc97 9f1a      	MUL  R17,R26
00cc98 01f0      	MOVW R30,R0
00cc99 5ded      	SUBI R30,LOW(-_eventLogQueue)
00cc9a 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00cc9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x29A:
00cc9c e0a0      	LDI  R26,LOW(0)
00cc9d 83a0      	STD  Z+0,R26
00cc9e e0a7      	LDI  R26,LOW(7)
00cc9f 9f1a      	MUL  R17,R26
00cca0 01f0      	MOVW R30,R0
00cca1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x29B:
                +
00cca2 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00cca3 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00cca4 940e bd0c 	CALL SUBOPT_0x2C
00cca6 dd5d      	RCALL SUBOPT_0x23B
00cca7 e0a7      	LDI  R26,LOW(7)
00cca8 9f1a      	MUL  R17,R26
00cca9 01f0      	MOVW R30,R0
                +
00ccaa 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00ccab 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00ccac cfef      	RJMP SUBOPT_0x29A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x29C:
00ccad e0e1      	LDI  R30,LOW(1)
00ccae 93e0 14df 	STS  _currentPage,R30
00ccb0 e0e0      	LDI  R30,LOW(0)
00ccb1 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00ccb3 e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00ccb4 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00ccb5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00ccb6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00ccb7 940e da29 	CALL __PUTPARD1
00ccb9 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00ccbb 940e d913 	CALL __CBD1
00ccbd 940e da29 	CALL __PUTPARD1
00ccbf ce41      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
                 SUBOPT_0x29D:
                +
00ccc0 01fe     +MOVW R30 , R28
00ccc1 5aea     +SUBI R30 , LOW ( - 86 )
00ccc2 4fff     +SBCI R31 , HIGH ( - 86 )
00ccc3 81e0     +LD R30 , Z
                 	__GETB1SX 86
00ccc4 cbf7      	RJMP SUBOPT_0x20A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:93 WORDS
                 SUBOPT_0x29E:
00ccc5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00ccc7 50a1      	SUBI R26,LOW(1)
00ccc8 93a0 1a1f 	STS  _cursor_S0160000000,R26
00ccca 30a0      	CPI  R26,0
00cccb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:218 WORDS
                 SUBOPT_0x29F:
                +
00cccc e3e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 9 ) )
00cccd e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 9 ) )
00ccce e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 9 ) )
00cccf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 9 ) )
                 	__POINTD1FN _0x2C0000,9
00ccd0 940e da29 	CALL __PUTPARD1
00ccd2 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00ccd4 940e d913 	CALL __CBD1
00ccd6 940e da29 	CALL __PUTPARD1
00ccd8 ce28      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x2A0:
00ccd9 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00ccdb 5faf      	SUBI R26,-LOW(1)
00ccdc 93a0 1a1f 	STS  _cursor_S0160000000,R26
00ccde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x2A1:
00ccdf e0e2      	LDI  R30,LOW(2)
00cce0 93e0 14df 	STS  _currentPage,R30
00cce2 e0e0      	LDI  R30,LOW(0)
00cce3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00cce5 e3ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00cce6 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00cce7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00cce8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00cce9 940e da29 	CALL __PUTPARD1
00cceb 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cced 940e d913 	CALL __CBD1
00ccef 940e da29 	CALL __PUTPARD1
00ccf1 ce0f      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x2A2:
00ccf2 93e0 14df 	STS  _currentPage,R30
00ccf4 e0e0      	LDI  R30,LOW(0)
00ccf5 93e0 1a1f 	STS  _cursor_S0160000000,R30
00ccf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x2A3:
                +
00ccf8 e4e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00ccf9 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00ccfa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00ccfb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00ccfc 940e da29 	CALL __PUTPARD1
00ccfe 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cd00 940e d913 	CALL __CBD1
00cd02 940e da29 	CALL __PUTPARD1
00cd04 cdfc      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2A4:
                +
00cd05 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00cd06 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00cd07 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00cd08 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00cd09 940e da29 	CALL __PUTPARD1
00cd0b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cd0d 940e d913 	CALL __CBD1
00cd0f 940e da29 	CALL __PUTPARD1
00cd11 cdef      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A5:
00cd12 93e0 14df 	STS  _currentPage,R30
00cd14 e1e5      	LDI  R30,LOW(21)
00cd15 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00cd17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2A6:
00cd18 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00cd1a e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00cd1b e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00cd1c 93fa      	ST   -Y,R31
00cd1d 93ea      	ST   -Y,R30
00cd1e efef      	LDI  R30,LOW(255)
00cd1f 93ea      	ST   -Y,R30
00cd20 940c bf18 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2A7:
00cd22 940e a154 	CALL _memset
00cd24 e0e0      	LDI  R30,LOW(0)
00cd25 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cd27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2A8:
                +
00cd28 e3e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 6 ) )
00cd29 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 6 ) )
00cd2a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 6 ) )
00cd2b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 6 ) )
                 	__POINTD1FN _0x2C0000,6
00cd2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2A9:
                +
00cd2d e5e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 36 ) )
00cd2e e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 36 ) )
00cd2f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 36 ) )
00cd30 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 36 ) )
                 	__POINTD1FN _0x2C0000,36
00cd31 940e da29 	CALL __PUTPARD1
00cd33 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cd35 940e d913 	CALL __CBD1
00cd37 940e da29 	CALL __PUTPARD1
00cd39 cdc7      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2AA:
00cd3a 93e0 14df 	STS  _currentPage,R30
00cd3c e0e7      	LDI  R30,LOW(7)
00cd3d 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00cd3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AB:
                +
00cd40 e5ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 42 ) )
00cd41 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 42 ) )
00cd42 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 42 ) )
00cd43 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 42 ) )
                 	__POINTD1FN _0x2C0000,42
00cd44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AC:
00cd45 940e da29 	CALL __PUTPARD1
                +
00cd47 e6e5     +LDI R30 , LOW ( _properties_config + ( 80 ) )
00cd48 e1f1     +LDI R31 , HIGH ( _properties_config + ( 80 ) )
                 	__POINTW1MN _properties_config,80
00cd49 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2AD:
00cd4b e3a2      	LDI  R26,LOW(50)
00cd4c e0b0      	LDI  R27,0
00cd4d 940e a154 	CALL _memset
00cd4f 01fe      	MOVW R30,R28
00cd50 9638      	ADIW R30,8
00cd51 93fa      	ST   -Y,R31
00cd52 93ea      	ST   -Y,R30
                +
00cd53 e3e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 5 ) )
00cd54 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 5 ) )
00cd55 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 5 ) )
00cd56 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 5 ) )
                 	__POINTD1FN _0x2C0000,5
00cd57 940e da29 	CALL __PUTPARD1
00cd59 e080      	LDI  R24,0
00cd5a 940e bb00 	CALL _sprintf
00cd5c 9626      	ADIW R28,6
00cd5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2AE:
00cd5e 01fe      	MOVW R30,R28
00cd5f 96fa      	ADIW R30,58
00cd60 940c c238 	JMP SUBOPT_0xF8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2AF:
00cd62 e1a4      	LDI  R26,LOW(20)
00cd63 e0b0      	LDI  R27,0
00cd64 940c a154 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B0:
00cd66 01fe      	MOVW R30,R28
00cd67 96fa      	ADIW R30,58
00cd68 93fa      	ST   -Y,R31
00cd69 93ea      	ST   -Y,R30
00cd6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B1:
00cd6b e080      	LDI  R24,0
00cd6c 940e bb00 	CALL _sprintf
00cd6e 9626      	ADIW R28,6
00cd6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B2:
00cd70 01fe      	MOVW R30,R28
00cd71 9638      	ADIW R30,8
00cd72 93fa      	ST   -Y,R31
00cd73 93ea      	ST   -Y,R30
00cd74 01de      	MOVW R26,R28
00cd75 96dc      	ADIW R26,60
00cd76 940e a164 	CALL _strcat
00cd78 cfe5      	RJMP SUBOPT_0x2AE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B3:
                +
00cd79 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00cd7a e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00cd7b 0fe0      	ADD  R30,R16
00cd7c 1ff1      	ADC  R31,R17
00cd7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2B4:
00cd7e 01f9      	MOVW R30,R18
                +
00cd7f 5f2f     +SUBI R18 , LOW ( - 1 )
00cd80 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cd81 01de      	MOVW R26,R28
00cd82 96da      	ADIW R26,58
00cd83 0fae      	ADD  R26,R30
00cd84 1fbf      	ADC  R27,R31
00cd85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B5:
00cd86 940e da29 	CALL __PUTPARD1
00cd88 01fe      	MOVW R30,R28
00cd89 963c      	ADIW R30,12
00cd8a 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B6:
                +
00cd8c 01fe     +MOVW R30 , R28
00cd8d 5aec     +SUBI R30 , LOW ( - 84 )
00cd8e 4fff     +SBCI R31 , HIGH ( - 84 )
00cd8f 9001     +LD R0 , Z +
00cd90 81f0     +LD R31 , Z
00cd91 2de0     +MOV R30 , R0
                 	__GETW1SX 84
00cd92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B7:
                +
00cd93 01fe     +MOVW R30 , R28
00cd94 5aee     +SUBI R30 , LOW ( - 82 )
00cd95 4fff     +SBCI R31 , HIGH ( - 82 )
00cd96 9001     +LD R0 , Z +
00cd97 81f0     +LD R31 , Z
00cd98 2de0     +MOV R30 , R0
                 	__GETW1SX 82
00cd99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B8:
                +
00cd9a 01de     +MOVW R26 , R28
00cd9b 5aac     +SUBI R26 , LOW ( - 84 )
00cd9c 4fbf     +SBCI R27 , HIGH ( - 84 )
00cd9d 900d     +LD R0 , X +
00cd9e 91bc     +LD R27 , X
00cd9f 2da0     +MOV R26 , R0
                 	__GETW2SX 84
00cda0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B9:
00cda1 e2ee      	LDI  R30,LOW(_setIp_S0160000000)
00cda2 e1fa      	LDI  R31,HIGH(_setIp_S0160000000)
00cda3 93fa      	ST   -Y,R31
00cda4 93ea      	ST   -Y,R30
00cda5 e3ea      	LDI  R30,LOW(_setMask_S0160000000)
00cda6 e1fa      	LDI  R31,HIGH(_setMask_S0160000000)
00cda7 93fa      	ST   -Y,R31
00cda8 93ea      	ST   -Y,R30
00cda9 e4e6      	LDI  R30,LOW(_setGw_S0160000000)
00cdaa e1fa      	LDI  R31,HIGH(_setGw_S0160000000)
00cdab 93fa      	ST   -Y,R31
00cdac 93ea      	ST   -Y,R30
00cdad e5a2      	LDI  R26,LOW(_setServer_S0160000000)
00cdae e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
00cdaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2BA:
00cdb0 940e da29 	CALL __PUTPARD1
00cdb2 91a0 1a2e 	LDS  R26,_setIp_S0160000000
00cdb4 e6e4      	LDI  R30,LOW(100)
00cdb5 9fea      	MUL  R30,R26
00cdb6 01b0      	MOVW R22,R0
                +
00cdb7 91a0 1a2f+LDS R26 , _setIp_S0160000000 + ( 1 )
                 	__GETB2MN _setIp_S0160000000,1
00cdb9 e0ea      	LDI  R30,LOW(10)
00cdba 9fea      	MUL  R30,R26
00cdbb 01f0      	MOVW R30,R0
00cdbc 01db      	MOVW R26,R22
00cdbd 0fae      	ADD  R26,R30
00cdbe 1fbf      	ADC  R27,R31
                +
00cdbf 91e0 1a30+LDS R30 , _setIp_S0160000000 + ( 2 )
                 	__GETB1MN _setIp_S0160000000,2
00cdc1 e0f0      	LDI  R31,0
00cdc2 c923      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BB:
                +
00cdc3 91a0 1a31+LDS R26 , _setIp_S0160000000 + ( 3 )
                 	__GETB2MN _setIp_S0160000000,3
00cdc5 e6e4      	LDI  R30,LOW(100)
00cdc6 9fea      	MUL  R30,R26
00cdc7 01b0      	MOVW R22,R0
                +
00cdc8 91a0 1a32+LDS R26 , _setIp_S0160000000 + ( 4 )
                 	__GETB2MN _setIp_S0160000000,4
00cdca e0ea      	LDI  R30,LOW(10)
00cdcb 9fea      	MUL  R30,R26
00cdcc 01f0      	MOVW R30,R0
00cdcd 01db      	MOVW R26,R22
00cdce 0fae      	ADD  R26,R30
00cdcf 1fbf      	ADC  R27,R31
                +
00cdd0 91e0 1a33+LDS R30 , _setIp_S0160000000 + ( 5 )
                 	__GETB1MN _setIp_S0160000000,5
00cdd2 e0f0      	LDI  R31,0
00cdd3 c912      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BC:
                +
00cdd4 91a0 1a34+LDS R26 , _setIp_S0160000000 + ( 6 )
                 	__GETB2MN _setIp_S0160000000,6
00cdd6 e6e4      	LDI  R30,LOW(100)
00cdd7 9fea      	MUL  R30,R26
00cdd8 01b0      	MOVW R22,R0
                +
00cdd9 91a0 1a35+LDS R26 , _setIp_S0160000000 + ( 7 )
                 	__GETB2MN _setIp_S0160000000,7
00cddb e0ea      	LDI  R30,LOW(10)
00cddc 9fea      	MUL  R30,R26
00cddd 01f0      	MOVW R30,R0
00cdde 01db      	MOVW R26,R22
00cddf 0fae      	ADD  R26,R30
00cde0 1fbf      	ADC  R27,R31
                +
00cde1 91e0 1a36+LDS R30 , _setIp_S0160000000 + ( 8 )
                 	__GETB1MN _setIp_S0160000000,8
00cde3 e0f0      	LDI  R31,0
00cde4 c901      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BD:
                +
00cde5 91a0 1a37+LDS R26 , _setIp_S0160000000 + ( 9 )
                 	__GETB2MN _setIp_S0160000000,9
00cde7 e6e4      	LDI  R30,LOW(100)
00cde8 9fea      	MUL  R30,R26
00cde9 01b0      	MOVW R22,R0
                +
00cdea 91a0 1a38+LDS R26 , _setIp_S0160000000 + ( 10 )
                 	__GETB2MN _setIp_S0160000000,10
00cdec e0ea      	LDI  R30,LOW(10)
00cded 9fea      	MUL  R30,R26
00cdee 01f0      	MOVW R30,R0
00cdef 01db      	MOVW R26,R22
00cdf0 0fae      	ADD  R26,R30
00cdf1 1fbf      	ADC  R27,R31
                +
00cdf2 91e0 1a39+LDS R30 , _setIp_S0160000000 + ( 11 )
                 	__GETB1MN _setIp_S0160000000,11
00cdf4 e0f0      	LDI  R31,0
00cdf5 c8f0      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BE:
00cdf6 91a0 1a3a 	LDS  R26,_setMask_S0160000000
00cdf8 e6e4      	LDI  R30,LOW(100)
00cdf9 9fea      	MUL  R30,R26
00cdfa 01b0      	MOVW R22,R0
                +
00cdfb 91a0 1a3b+LDS R26 , _setMask_S0160000000 + ( 1 )
                 	__GETB2MN _setMask_S0160000000,1
00cdfd e0ea      	LDI  R30,LOW(10)
00cdfe 9fea      	MUL  R30,R26
00cdff 01f0      	MOVW R30,R0
00ce00 01db      	MOVW R26,R22
00ce01 0fae      	ADD  R26,R30
00ce02 1fbf      	ADC  R27,R31
                +
00ce03 91e0 1a3c+LDS R30 , _setMask_S0160000000 + ( 2 )
                 	__GETB1MN _setMask_S0160000000,2
00ce05 e0f0      	LDI  R31,0
00ce06 c8df      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BF:
                +
00ce07 91a0 1a3d+LDS R26 , _setMask_S0160000000 + ( 3 )
                 	__GETB2MN _setMask_S0160000000,3
00ce09 e6e4      	LDI  R30,LOW(100)
00ce0a 9fea      	MUL  R30,R26
00ce0b 01b0      	MOVW R22,R0
                +
00ce0c 91a0 1a3e+LDS R26 , _setMask_S0160000000 + ( 4 )
                 	__GETB2MN _setMask_S0160000000,4
00ce0e e0ea      	LDI  R30,LOW(10)
00ce0f 9fea      	MUL  R30,R26
00ce10 01f0      	MOVW R30,R0
00ce11 01db      	MOVW R26,R22
00ce12 0fae      	ADD  R26,R30
00ce13 1fbf      	ADC  R27,R31
                +
00ce14 91e0 1a3f+LDS R30 , _setMask_S0160000000 + ( 5 )
                 	__GETB1MN _setMask_S0160000000,5
00ce16 e0f0      	LDI  R31,0
00ce17 c8ce      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C0:
                +
00ce18 91a0 1a40+LDS R26 , _setMask_S0160000000 + ( 6 )
                 	__GETB2MN _setMask_S0160000000,6
00ce1a e6e4      	LDI  R30,LOW(100)
00ce1b 9fea      	MUL  R30,R26
00ce1c 01b0      	MOVW R22,R0
                +
00ce1d 91a0 1a41+LDS R26 , _setMask_S0160000000 + ( 7 )
                 	__GETB2MN _setMask_S0160000000,7
00ce1f e0ea      	LDI  R30,LOW(10)
00ce20 9fea      	MUL  R30,R26
00ce21 01f0      	MOVW R30,R0
00ce22 01db      	MOVW R26,R22
00ce23 0fae      	ADD  R26,R30
00ce24 1fbf      	ADC  R27,R31
                +
00ce25 91e0 1a42+LDS R30 , _setMask_S0160000000 + ( 8 )
                 	__GETB1MN _setMask_S0160000000,8
00ce27 e0f0      	LDI  R31,0
00ce28 c8bd      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C1:
                +
00ce29 91a0 1a43+LDS R26 , _setMask_S0160000000 + ( 9 )
                 	__GETB2MN _setMask_S0160000000,9
00ce2b e6e4      	LDI  R30,LOW(100)
00ce2c 9fea      	MUL  R30,R26
00ce2d 01b0      	MOVW R22,R0
                +
00ce2e 91a0 1a44+LDS R26 , _setMask_S0160000000 + ( 10 )
                 	__GETB2MN _setMask_S0160000000,10
00ce30 e0ea      	LDI  R30,LOW(10)
00ce31 9fea      	MUL  R30,R26
00ce32 01f0      	MOVW R30,R0
00ce33 01db      	MOVW R26,R22
00ce34 0fae      	ADD  R26,R30
00ce35 1fbf      	ADC  R27,R31
                +
00ce36 91e0 1a45+LDS R30 , _setMask_S0160000000 + ( 11 )
                 	__GETB1MN _setMask_S0160000000,11
00ce38 e0f0      	LDI  R31,0
00ce39 c8ac      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C2:
00ce3a 91a0 1a46 	LDS  R26,_setGw_S0160000000
00ce3c e6e4      	LDI  R30,LOW(100)
00ce3d 9fea      	MUL  R30,R26
00ce3e 01b0      	MOVW R22,R0
                +
00ce3f 91a0 1a47+LDS R26 , _setGw_S0160000000 + ( 1 )
                 	__GETB2MN _setGw_S0160000000,1
00ce41 e0ea      	LDI  R30,LOW(10)
00ce42 9fea      	MUL  R30,R26
00ce43 01f0      	MOVW R30,R0
00ce44 01db      	MOVW R26,R22
00ce45 0fae      	ADD  R26,R30
00ce46 1fbf      	ADC  R27,R31
                +
00ce47 91e0 1a48+LDS R30 , _setGw_S0160000000 + ( 2 )
                 	__GETB1MN _setGw_S0160000000,2
00ce49 e0f0      	LDI  R31,0
00ce4a c89b      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C3:
                +
00ce4b 91a0 1a49+LDS R26 , _setGw_S0160000000 + ( 3 )
                 	__GETB2MN _setGw_S0160000000,3
00ce4d e6e4      	LDI  R30,LOW(100)
00ce4e 9fea      	MUL  R30,R26
00ce4f 01b0      	MOVW R22,R0
                +
00ce50 91a0 1a4a+LDS R26 , _setGw_S0160000000 + ( 4 )
                 	__GETB2MN _setGw_S0160000000,4
00ce52 e0ea      	LDI  R30,LOW(10)
00ce53 9fea      	MUL  R30,R26
00ce54 01f0      	MOVW R30,R0
00ce55 01db      	MOVW R26,R22
00ce56 0fae      	ADD  R26,R30
00ce57 1fbf      	ADC  R27,R31
                +
00ce58 91e0 1a4b+LDS R30 , _setGw_S0160000000 + ( 5 )
                 	__GETB1MN _setGw_S0160000000,5
00ce5a e0f0      	LDI  R31,0
00ce5b c88a      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C4:
                +
00ce5c 91a0 1a4c+LDS R26 , _setGw_S0160000000 + ( 6 )
                 	__GETB2MN _setGw_S0160000000,6
00ce5e e6e4      	LDI  R30,LOW(100)
00ce5f 9fea      	MUL  R30,R26
00ce60 01b0      	MOVW R22,R0
                +
00ce61 91a0 1a4d+LDS R26 , _setGw_S0160000000 + ( 7 )
                 	__GETB2MN _setGw_S0160000000,7
00ce63 e0ea      	LDI  R30,LOW(10)
00ce64 9fea      	MUL  R30,R26
00ce65 01f0      	MOVW R30,R0
00ce66 01db      	MOVW R26,R22
00ce67 0fae      	ADD  R26,R30
00ce68 1fbf      	ADC  R27,R31
                +
00ce69 91e0 1a4e+LDS R30 , _setGw_S0160000000 + ( 8 )
                 	__GETB1MN _setGw_S0160000000,8
00ce6b e0f0      	LDI  R31,0
00ce6c c879      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C5:
                +
00ce6d 91a0 1a4f+LDS R26 , _setGw_S0160000000 + ( 9 )
                 	__GETB2MN _setGw_S0160000000,9
00ce6f e6e4      	LDI  R30,LOW(100)
00ce70 9fea      	MUL  R30,R26
00ce71 01b0      	MOVW R22,R0
                +
00ce72 91a0 1a50+LDS R26 , _setGw_S0160000000 + ( 10 )
                 	__GETB2MN _setGw_S0160000000,10
00ce74 e0ea      	LDI  R30,LOW(10)
00ce75 9fea      	MUL  R30,R26
00ce76 01f0      	MOVW R30,R0
00ce77 01db      	MOVW R26,R22
00ce78 0fae      	ADD  R26,R30
00ce79 1fbf      	ADC  R27,R31
                +
00ce7a 91e0 1a51+LDS R30 , _setGw_S0160000000 + ( 11 )
                 	__GETB1MN _setGw_S0160000000,11
00ce7c e0f0      	LDI  R31,0
00ce7d c868      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C6:
00ce7e 91a0 1a52 	LDS  R26,_setServer_S0160000000
00ce80 e6e4      	LDI  R30,LOW(100)
00ce81 9fea      	MUL  R30,R26
00ce82 01b0      	MOVW R22,R0
                +
00ce83 91a0 1a53+LDS R26 , _setServer_S0160000000 + ( 1 )
                 	__GETB2MN _setServer_S0160000000,1
00ce85 e0ea      	LDI  R30,LOW(10)
00ce86 9fea      	MUL  R30,R26
00ce87 01f0      	MOVW R30,R0
00ce88 01db      	MOVW R26,R22
00ce89 0fae      	ADD  R26,R30
00ce8a 1fbf      	ADC  R27,R31
                +
00ce8b 91e0 1a54+LDS R30 , _setServer_S0160000000 + ( 2 )
                 	__GETB1MN _setServer_S0160000000,2
00ce8d e0f0      	LDI  R31,0
00ce8e c857      	RJMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C7:
                +
00ce8f 91a0 1a55+LDS R26 , _setServer_S0160000000 + ( 3 )
                 	__GETB2MN _setServer_S0160000000,3
00ce91 e6e4      	LDI  R30,LOW(100)
00ce92 9fea      	MUL  R30,R26
00ce93 01b0      	MOVW R22,R0
                +
00ce94 91a0 1a56+LDS R26 , _setServer_S0160000000 + ( 4 )
                 	__GETB2MN _setServer_S0160000000,4
00ce96 e0ea      	LDI  R30,LOW(10)
00ce97 9fea      	MUL  R30,R26
00ce98 01f0      	MOVW R30,R0
00ce99 01db      	MOVW R26,R22
00ce9a 0fae      	ADD  R26,R30
00ce9b 1fbf      	ADC  R27,R31
                +
00ce9c 91e0 1a57+LDS R30 , _setServer_S0160000000 + ( 5 )
                 	__GETB1MN _setServer_S0160000000,5
00ce9e e0f0      	LDI  R31,0
00ce9f 940c c6e6 	JMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C8:
                +
00cea1 91a0 1a58+LDS R26 , _setServer_S0160000000 + ( 6 )
                 	__GETB2MN _setServer_S0160000000,6
00cea3 e6e4      	LDI  R30,LOW(100)
00cea4 9fea      	MUL  R30,R26
00cea5 01b0      	MOVW R22,R0
                +
00cea6 91a0 1a59+LDS R26 , _setServer_S0160000000 + ( 7 )
                 	__GETB2MN _setServer_S0160000000,7
00cea8 e0ea      	LDI  R30,LOW(10)
00cea9 9fea      	MUL  R30,R26
00ceaa 01f0      	MOVW R30,R0
00ceab 01db      	MOVW R26,R22
00ceac 0fae      	ADD  R26,R30
00cead 1fbf      	ADC  R27,R31
                +
00ceae 91e0 1a5a+LDS R30 , _setServer_S0160000000 + ( 8 )
                 	__GETB1MN _setServer_S0160000000,8
00ceb0 e0f0      	LDI  R31,0
00ceb1 940c c6e6 	JMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C9:
                +
00ceb3 91a0 1a5b+LDS R26 , _setServer_S0160000000 + ( 9 )
                 	__GETB2MN _setServer_S0160000000,9
00ceb5 e6e4      	LDI  R30,LOW(100)
00ceb6 9fea      	MUL  R30,R26
00ceb7 01b0      	MOVW R22,R0
                +
00ceb8 91a0 1a5c+LDS R26 , _setServer_S0160000000 + ( 10 )
                 	__GETB2MN _setServer_S0160000000,10
00ceba e0ea      	LDI  R30,LOW(10)
00cebb 9fea      	MUL  R30,R26
00cebc 01f0      	MOVW R30,R0
00cebd 01db      	MOVW R26,R22
00cebe 0fae      	ADD  R26,R30
00cebf 1fbf      	ADC  R27,R31
                +
00cec0 91e0 1a5d+LDS R30 , _setServer_S0160000000 + ( 11 )
                 	__GETB1MN _setServer_S0160000000,11
00cec2 e0f0      	LDI  R31,0
00cec3 940c c6e6 	JMP SUBOPT_0x1BE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2CA:
00cec5 940e da29 	CALL __PUTPARD1
00cec7 cc59      	RJMP SUBOPT_0x267
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2CB:
                +
00cec8 01fe     +MOVW R30 , R28
00cec9 5aea     +SUBI R30 , LOW ( - 86 )
00ceca 4fff     +SBCI R31 , HIGH ( - 86 )
00cecb 81e0     +LD R30 , Z
                 	__GETB1SX 86
00cecc e0f0      	LDI  R31,0
00cecd 30e2      	CPI  R30,LOW(0x2)
00cece e0a0      	LDI  R26,HIGH(0x2)
00cecf 07fa      	CPC  R31,R26
00ced0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2CC:
00ced1 93e0 14df 	STS  _currentPage,R30
00ced3 e0e1      	LDI  R30,LOW(1)
00ced4 93e0 1a1f 	STS  _cursor_S0160000000,R30
00ced6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2CD:
00ced7 93e0 14df 	STS  _currentPage,R30
00ced9 e0e2      	LDI  R30,LOW(2)
00ceda 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cedc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CE:
                +
00cedd e3ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00cede e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00cedf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00cee0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00cee1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:501 WORDS
                 SUBOPT_0x2CF:
00cee2 940e da29 	CALL __PUTPARD1
00cee4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cee6 940e d913 	CALL __CBD1
00cee8 940e da29 	CALL __PUTPARD1
00ceea cc16      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D0:
00ceeb 940e da29 	CALL __PUTPARD1
00ceed 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00ceef 940c be99 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D1:
                +
00cef1 e3ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 526 ) )
00cef2 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 526 ) )
00cef3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 526 ) )
00cef4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 526 ) )
                 	__POINTD1FN _0x2C0000,526
00cef5 cfec      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2D2:
                +
00cef6 e5e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00cef7 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00cef8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00cef9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00cefa 940e da29 	CALL __PUTPARD1
00cefc 01f8      	MOVW R30,R16
00cefd cc28      	RJMP SUBOPT_0x268
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2D3:
00cefe 0fa0      	ADD  R26,R16
00ceff 1fb1      	ADC  R27,R17
00cf00 91ec      	LD   R30,X
00cf01 940c be99 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D4:
                +
00cf03 e5ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00cf04 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00cf05 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00cf06 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00cf07 cfda      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2D5:
00cf08 940e da29 	CALL __PUTPARD1
00cf0a 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf0c e0f0      	LDI  R31,0
00cf0d fde7      	SBRC R30,7
00cf0e efff      	SER  R31
00cf0f 9632      	ADIW R30,2
00cf10 cc15      	RJMP SUBOPT_0x268
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D6:
                +
00cf11 e7ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00cf12 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00cf13 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00cf14 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00cf15 cff2      	RJMP SUBOPT_0x2D5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D7:
00cf16 eba6      	LDI  R26,LOW(_operating_config)
00cf17 e1b1      	LDI  R27,HIGH(_operating_config)
00cf18 940e 4d14 	CALL _setOperatingConfig
00cf1a 01af      	MOVW R20,R30
00cf1b 2355      	TST  R21
00cf1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D8:
                +
00cf1d eaec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 636 ) )
00cf1e e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 636 ) )
00cf1f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 636 ) )
00cf20 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 636 ) )
                 	__POINTD1FN _0x2C0000,636
00cf21 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D9:
00cf23 e0e8      	LDI  R30,LOW(8)
00cf24 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00cf26 e0e0      	LDI  R30,LOW(0)
00cf27 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cf29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2DA:
                +
00cf2a edec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 684 ) )
00cf2b e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 684 ) )
00cf2c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 684 ) )
00cf2d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 684 ) )
                 	__POINTD1FN _0x2C0000,684
00cf2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2DB:
                +
00cf2f edef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 687 ) )
00cf30 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 687 ) )
00cf31 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 687 ) )
00cf32 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 687 ) )
                 	__POINTD1FN _0x2C0000,687
00cf33 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2DC:
                +
00cf34 eee2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 690 ) )
00cf35 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 690 ) )
00cf36 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 690 ) )
00cf37 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 690 ) )
                 	__POINTD1FN _0x2C0000,690
00cf38 cfa9      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2DD:
00cf39 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf3b e0b0      	LDI  R27,0
00cf3c fda7      	SBRC R26,7
00cf3d efbf      	SER  R27
00cf3e e0e3      	LDI  R30,LOW(3)
00cf3f e0f0      	LDI  R31,HIGH(3)
00cf40 940e d9c4 	CALL __MODW21
00cf42 9730      	SBIW R30,0
00cf43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2DE:
00cf44 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf46 e0b0      	LDI  R27,0
00cf47 5da2      	SUBI R26,LOW(-_setIp_S0160000000)
00cf48 4eb5      	SBCI R27,HIGH(-_setIp_S0160000000)
00cf49 91ec      	LD   R30,X
00cf4a 5fef      	SUBI R30,-LOW(1)
00cf4b 93ec      	ST   X,R30
00cf4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2DF:
00cf4d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf4f e0f0      	LDI  R31,0
00cf50 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
00cf51 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
00cf52 e0a0      	LDI  R26,LOW(0)
00cf53 83a0      	STD  Z+0,R26
00cf54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2E0:
                +
00cf55 e5e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00cf56 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00cf57 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00cf58 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00cf59 940e da29 	CALL __PUTPARD1
00cf5b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf5d 940e d913 	CALL __CBD1
00cf5f 940e da29 	CALL __PUTPARD1
00cf61 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf63 e0f0      	LDI  R31,0
00cf64 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E1:
00cf65 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf67 e0b0      	LDI  R27,0
00cf68 5ca6      	SUBI R26,LOW(-_setMask_S0160000000)
00cf69 4eb5      	SBCI R27,HIGH(-_setMask_S0160000000)
00cf6a 91ec      	LD   R30,X
00cf6b 5fef      	SUBI R30,-LOW(1)
00cf6c 93ec      	ST   X,R30
00cf6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E2:
00cf6e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf70 e0f0      	LDI  R31,0
00cf71 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
00cf72 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00cf73 e0a0      	LDI  R26,LOW(0)
00cf74 83a0      	STD  Z+0,R26
00cf75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E3:
00cf76 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf78 e0b0      	LDI  R27,0
00cf79 5baa      	SUBI R26,LOW(-_setGw_S0160000000)
00cf7a 4eb5      	SBCI R27,HIGH(-_setGw_S0160000000)
00cf7b 91ec      	LD   R30,X
00cf7c 5fef      	SUBI R30,-LOW(1)
00cf7d 93ec      	ST   X,R30
00cf7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E4:
00cf7f 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf81 e0f0      	LDI  R31,0
00cf82 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
00cf83 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
00cf84 e0a0      	LDI  R26,LOW(0)
00cf85 83a0      	STD  Z+0,R26
00cf86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E5:
00cf87 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf89 e0b0      	LDI  R27,0
00cf8a 5aae      	SUBI R26,LOW(-_setServer_S0160000000)
00cf8b 4eb5      	SBCI R27,HIGH(-_setServer_S0160000000)
00cf8c 91ec      	LD   R30,X
00cf8d 5fef      	SUBI R30,-LOW(1)
00cf8e 93ec      	ST   X,R30
00cf8f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E6:
00cf90 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf92 e0f0      	LDI  R31,0
00cf93 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
00cf94 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
00cf95 e0a0      	LDI  R26,LOW(0)
00cf96 83a0      	STD  Z+0,R26
00cf97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2E7:
00cf98 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00cf9a e0e0      	LDI  R30,LOW(0)
00cf9b 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cf9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2E8:
                +
00cf9e e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00cf9f e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00cfa0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00cfa1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00cfa2 cf3f      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2E9:
00cfa3 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cfa5 e0b0      	LDI  R27,0
00cfa6 fda7      	SBRC R26,7
00cfa7 efbf      	SER  R27
00cfa8 940c 941a 	JMP  _showProbeConfig
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2EA:
00cfaa 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cfac e0b0      	LDI  R27,0
00cfad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EB:
00cfae 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cfb0 e0f0      	LDI  R31,0
00cfb1 5ae0      	SUBI R30,LOW(-_prbEn_S0160000000)
00cfb2 4ef5      	SBCI R31,HIGH(-_prbEn_S0160000000)
00cfb3 81e0      	LD   R30,Z
00cfb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2EC:
00cfb5 93ec      	ST   X,R30
                +
00cfb6 e7ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00cfb7 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00cfb8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00cfb9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00cfba 940e da29 	CALL __PUTPARD1
00cfbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x2ED:
00cfbd 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cfbf 940e d913 	CALL __CBD1
00cfc1 940e da29 	CALL __PUTPARD1
00cfc3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2EE:
00cfc4 e2e4      	LDI  R30,LOW(36)
00cfc5 93e0 14df 	STS  _currentPage,R30
00cfc7 e0ee      	LDI  R30,LOW(14)
00cfc8 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00cfca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2EF:
                +
00cfcb e5e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 800 ) )
00cfcc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 800 ) )
00cfcd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 800 ) )
00cfce e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 800 ) )
                 	__POINTD1FN _0x2C0000,800
00cfcf cf12      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F0:
00cfd0 e2e4      	LDI  R30,LOW(36)
00cfd1 93e0 14df 	STS  _currentPage,R30
00cfd3 e1e1      	LDI  R30,LOW(17)
00cfd4 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00cfd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F1:
                +
00cfd7 e5e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 806 ) )
00cfd8 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 806 ) )
00cfd9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 806 ) )
00cfda e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 806 ) )
                 	__POINTD1FN _0x2C0000,806
00cfdb cf06      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F2:
                +
00cfdc e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 813 ) )
00cfdd e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 813 ) )
00cfde e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 813 ) )
00cfdf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 813 ) )
                 	__POINTD1FN _0x2C0000,813
00cfe0 cf01      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F3:
00cfe1 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
00cfe2 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00cfe3 93fa      	ST   -Y,R31
00cfe4 93ea      	ST   -Y,R30
00cfe5 efef      	LDI  R30,LOW(255)
00cfe6 93ea      	ST   -Y,R30
00cfe7 940c bf18 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2F4:
00cfe9 91ec      	LD   R30,X
00cfea 5fef      	SUBI R30,-LOW(1)
00cfeb 93ec      	ST   X,R30
00cfec 30ea      	CPI  R30,LOW(0xA)
00cfed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2F5:
00cfee 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cff0 e0f0      	LDI  R31,0
00cff1 5dea      	SUBI R30,LOW(-_newPwd_S0160000000)
00cff2 4ef5      	SBCI R31,HIGH(-_newPwd_S0160000000)
00cff3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2F6:
                +
00cff4 e6e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 822 ) )
00cff5 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 822 ) )
00cff6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 822 ) )
00cff7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 822 ) )
                 	__POINTD1FN _0x2C0000,822
00cff8 940e da29 	CALL __PUTPARD1
00cffa cfc2      	RJMP SUBOPT_0x2ED
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F7:
00cffb 81e0      	LD   R30,Z
00cffc 940e d913 	CALL __CBD1
00cffe caff      	RJMP SUBOPT_0x262
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F8:
00cfff e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00d000 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00d001 93fa      	ST   -Y,R31
00d002 93ea      	ST   -Y,R30
00d003 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2F9:
00d004 efef      	LDI  R30,LOW(255)
00d005 93ea      	ST   -Y,R30
00d006 940c bf18 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2FA:
                +
00d008 01fe     +MOVW R30 , R28
00d009 5be0     +SUBI R30 , LOW ( - 80 )
00d00a 4fff     +SBCI R31 , HIGH ( - 80 )
00d00b 9001     +LD R0 , Z +
00d00c 81f0     +LD R31 , Z
00d00d 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00d00e 93fa      	ST   -Y,R31
00d00f 93ea      	ST   -Y,R30
00d010 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2FB:
00d011 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d013 e0f0      	LDI  R31,0
00d014 5de6      	SUBI R30,LOW(-_confPwd_S0160000000)
00d015 4ef5      	SBCI R31,HIGH(-_confPwd_S0160000000)
00d016 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2FC:
00d017 e0e1      	LDI  R30,LOW(1)
00d018 93e0 14df 	STS  _currentPage,R30
00d01a e0e3      	LDI  R30,LOW(3)
00d01b 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d01d cf80      	RJMP SUBOPT_0x2E8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FD:
                +
00d01e eae1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 881 ) )
00d01f e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 881 ) )
00d020 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 881 ) )
00d021 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 881 ) )
                 	__POINTD1FN _0x2C0000,881
00d022 940e da29 	CALL __PUTPARD1
00d024 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2FE:
                +
00d025 eaea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 890 ) )
00d026 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 890 ) )
00d027 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 890 ) )
00d028 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 890 ) )
                 	__POINTD1FN _0x2C0000,890
00d029 940e da29 	CALL __PUTPARD1
00d02b 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d02d e0f0      	LDI  R31,0
00d02e c8d5      	RJMP SUBOPT_0x214
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2FF:
                +
00d02f ebe0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 896 ) )
00d030 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 896 ) )
00d031 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 896 ) )
00d032 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 896 ) )
                 	__POINTD1FN _0x2C0000,896
00d033 940e da29 	CALL __PUTPARD1
00d035 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x300:
00d036 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d038 e0f0      	LDI  R31,0
00d039 c8ca      	RJMP SUBOPT_0x214
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x301:
                +
00d03a ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
00d03b e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
00d03c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
00d03d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
00d03e cea3      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x302:
                +
00d03f ebef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 911 ) )
00d040 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 911 ) )
00d041 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 911 ) )
00d042 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 911 ) )
                 	__POINTD1FN _0x2C0000,911
00d043 ce9e      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x303:
00d044 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d046 e0f0      	LDI  R31,0
00d047 59ea      	SUBI R30,LOW(-_vRef_S0160000000)
00d048 4ef5      	SBCI R31,HIGH(-_vRef_S0160000000)
00d049 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x304:
                +
00d04a ece5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 917 ) )
00d04b e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 917 ) )
00d04c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 917 ) )
00d04d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 917 ) )
                 	__POINTD1FN _0x2C0000,917
00d04e ce93      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x305:
00d04f 91a0 1a69 	LDS  R26,_prb1_S0160000000
00d051 5faf      	SUBI R26,-LOW(1)
00d052 93a0 1a69 	STS  _prb1_S0160000000,R26
00d054 30a5      	CPI  R26,LOW(0x5)
00d055 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x306:
                +
00d056 eceb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 923 ) )
00d057 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 923 ) )
00d058 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 923 ) )
00d059 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 923 ) )
                 	__POINTD1FN _0x2C0000,923
00d05a 940e da29 	CALL __PUTPARD1
00d05c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x307:
00d05d 91e0 1a6a 	LDS  R30,_prb2_S0160000000
00d05f e0f0      	LDI  R31,0
00d060 c8a3      	RJMP SUBOPT_0x214
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x308:
                +
00d061 ede1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 929 ) )
00d062 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 929 ) )
00d063 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 929 ) )
00d064 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 929 ) )
                 	__POINTD1FN _0x2C0000,929
00d065 940e da29 	CALL __PUTPARD1
00d067 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x309:
00d068 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d06a e0f0      	LDI  R31,0
00d06b 93fa      	ST   -Y,R31
00d06c 93ea      	ST   -Y,R30
00d06d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30A:
00d06e 93e0 14df 	STS  _currentPage,R30
00d070 e1e8      	LDI  R30,LOW(24)
00d071 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d073 e1e9      	LDI  R30,LOW(25)
00d074 cf23      	RJMP SUBOPT_0x2E7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30B:
                +
00d075 ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
00d076 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
00d077 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
00d078 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
00d079 ce68      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30C:
00d07a 93fa      	ST   -Y,R31
00d07b 93ea      	ST   -Y,R30
00d07c e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00d07d e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00d07e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30D:
                +
00d07f eee6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 950 ) )
00d080 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 950 ) )
00d081 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 950 ) )
00d082 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 950 ) )
                 	__POINTD1FN _0x2C0000,950
00d083 940e da29 	CALL __PUTPARD1
00d085 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30E:
                +
00d086 e0e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 979 ) )
00d087 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 979 ) )
00d088 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 979 ) )
00d089 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 979 ) )
                 	__POINTD1FN _0x2C0000,979
00d08a ce57      	RJMP SUBOPT_0x2CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30F:
00d08b e2e5      	LDI  R30,LOW(37)
00d08c 93e0 14df 	STS  _currentPage,R30
00d08e e1eb      	LDI  R30,LOW(27)
00d08f 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d091 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x310:
00d092 e2e4      	LDI  R30,LOW(36)
00d093 93e0 14df 	STS  _currentPage,R30
00d095 e1eb      	LDI  R30,LOW(27)
00d096 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d098 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x311:
00d099 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d09b e0f0      	LDI  R31,0
00d09c 59e5      	SUBI R30,LOW(-_calPnt_S0160000000)
00d09d 4ef5      	SBCI R31,HIGH(-_calPnt_S0160000000)
00d09e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x312:
                +
00d09f e4e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d0a0 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d0a1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d0a2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d0a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x313:
                +
00d0a4 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d0a5 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d0a6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d0a7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d0a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x314:
00d0a9 e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d0aa e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d0ab 93fa      	ST   -Y,R31
00d0ac 93ea      	ST   -Y,R30
00d0ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x315:
                +
00d0ae e0e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 985 ) )
00d0af e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 985 ) )
00d0b0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 985 ) )
00d0b1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 985 ) )
                 	__POINTD1FN _0x2C0000,985
00d0b2 ce12      	RJMP SUBOPT_0x2CA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x316:
00d0b3 91e0 1a20 	LDS  R30,_tmpNextPage_S0160000000
00d0b5 e0f0      	LDI  R31,0
00d0b6 30e7      	CPI  R30,LOW(0x7)
00d0b7 e0a0      	LDI  R26,HIGH(0x7)
00d0b8 07fa      	CPC  R31,R26
00d0b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x317:
00d0ba 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d0bc e0f0      	LDI  R31,0
00d0bd 5dee      	SUBI R30,LOW(-_entPwd_S0160000000)
00d0be 4ef5      	SBCI R31,HIGH(-_entPwd_S0160000000)
00d0bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x318:
00d0c0 93e0 14df 	STS  _currentPage,R30
00d0c2 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00d0c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x319:
00d0c5 940e d9f0 	CALL __GETW1P
00d0c7 93fa      	ST   -Y,R31
00d0c8 93ea      	ST   -Y,R30
00d0c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31A:
00d0ca 8def      	LDD  R30,Y+31
00d0cb 940e d913 	CALL __CBD1
00d0cd 940c bc56 	JMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x31B:
00d0cf a9a8      	LDD  R26,Y+48
00d0d0 a9b9      	LDD  R27,Y+48+1
00d0d1 e1ed      	LDI  R30,LOW(29)
00d0d2 940e d95a 	CALL __MULB1W2U
                +
00d0d4 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00d0d5 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00d0d6 940c bf1b 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31C:
00d0d8 a9ac      	LDD  R26,Y+52
00d0d9 a9bd      	LDD  R27,Y+52+1
00d0da e1ed      	LDI  R30,LOW(29)
00d0db 940e d95a 	CALL __MULB1W2U
00d0dd c975      	RJMP SUBOPT_0x247
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x31D:
00d0de 940e da29 	CALL __PUTPARD1
00d0e0 ada8      	LDD  R26,Y+56
00d0e1 adb9      	LDD  R27,Y+56+1
00d0e2 e1ed      	LDI  R30,LOW(29)
00d0e3 940e d95a 	CALL __MULB1W2U
                +
00d0e5 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00d0e6 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00d0e7 940c bf1b 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x31E:
00d0e9 adac      	LDD  R26,Y+60
00d0ea adbd      	LDD  R27,Y+60+1
00d0eb e1ed      	LDI  R30,LOW(29)
00d0ec 940e d95a 	CALL __MULB1W2U
                +
00d0ee 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00d0ef 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00d0f0 940c bf1b 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x31F:
                +
00d0f2 01de     +MOVW R26 , R28
00d0f3 5ca0     +SUBI R26 , LOW ( - 64 )
00d0f4 4fbf     +SBCI R27 , HIGH ( - 64 )
00d0f5 900d     +LD R0 , X +
00d0f6 91bc     +LD R27 , X
00d0f7 2da0     +MOV R26 , R0
                 	__GETW2SX 64
00d0f8 e1ed      	LDI  R30,LOW(29)
00d0f9 940e d95a 	CALL __MULB1W2U
00d0fb c967      	RJMP SUBOPT_0x24A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x320:
00d0fc 940e da29 	CALL __PUTPARD1
                +
00d0fe 01de     +MOVW R26 , R28
00d0ff 5bac     +SUBI R26 , LOW ( - 68 )
00d100 4fbf     +SBCI R27 , HIGH ( - 68 )
00d101 900d     +LD R0 , X +
00d102 91bc     +LD R27 , X
00d103 2da0     +MOV R26 , R0
                 	__GETW2SX 68
00d104 e1ed      	LDI  R30,LOW(29)
00d105 940e d95a 	CALL __MULB1W2U
                +
00d107 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00d108 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00d109 940c bf1b 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x321:
00d10b 93ba      	ST   -Y,R27
00d10c 93aa      	ST   -Y,R26
00d10d 9722      	SBIW R28,2
00d10e 940e da99 	CALL __SAVELOCR6
00d110 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x322:
00d111 940e da29 	CALL __PUTPARD1
00d113 01fa      	MOVW R30,R20
00d114 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x323:
00d116 01da      	MOVW R26,R20
00d117 e6e4      	LDI  R30,LOW(100)
00d118 e0f0      	LDI  R31,HIGH(100)
00d119 940e d978 	CALL __DIVW21U
00d11b 85a8      	LDD  R26,Y+8
00d11c 85b9      	LDD  R27,Y+8+1
00d11d 93ec      	ST   X,R30
00d11e 01da      	MOVW R26,R20
00d11f e6e4      	LDI  R30,LOW(100)
00d120 e0f0      	LDI  R31,HIGH(100)
00d121 940e d9c1 	CALL __MODW21U
00d123 01df      	MOVW R26,R30
00d124 e0ea      	LDI  R30,LOW(10)
00d125 e0f0      	LDI  R31,HIGH(10)
00d126 940e d978 	CALL __DIVW21U
                +
00d128 85a8     +LDD R26 , Y + 8
00d129 85b9     +LDD R27 , Y + 8 + 1
00d12a 9611     +ADIW R26 , 1
00d12b 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d12c 01da      	MOVW R26,R20
00d12d e6e4      	LDI  R30,LOW(100)
00d12e e0f0      	LDI  R31,HIGH(100)
00d12f 940e d9c1 	CALL __MODW21U
00d131 01df      	MOVW R26,R30
00d132 e0ea      	LDI  R30,LOW(10)
00d133 e0f0      	LDI  R31,HIGH(10)
00d134 940e d9c1 	CALL __MODW21U
                +
00d136 85a8     +LDD R26 , Y + 8
00d137 85b9     +LDD R27 , Y + 8 + 1
00d138 9612     +ADIW R26 , 2
00d139 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d13a 85a8      	LDD  R26,Y+8
00d13b 85b9      	LDD  R27,Y+8+1
00d13c 9613      	ADIW R26,3
00d13d e0e2      	LDI  R30,LOW(2)
00d13e 93ec      	ST   X,R30
00d13f e0e0      	LDI  R30,LOW(0)
00d140 e0f0      	LDI  R31,HIGH(0)
00d141 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x324:
00d142 940e da29 	CALL __PUTPARD1
00d144 01f8      	MOVW R30,R16
00d145 940c bd4a 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x325:
00d147 01d8      	MOVW R26,R16
00d148 e6e4      	LDI  R30,LOW(100)
00d149 e0f0      	LDI  R31,HIGH(100)
00d14a 940e d978 	CALL __DIVW21U
00d14c 85a8      	LDD  R26,Y+8
00d14d 85b9      	LDD  R27,Y+8+1
00d14e 93ec      	ST   X,R30
00d14f 01d8      	MOVW R26,R16
00d150 e6e4      	LDI  R30,LOW(100)
00d151 e0f0      	LDI  R31,HIGH(100)
00d152 940e d9c1 	CALL __MODW21U
00d154 01df      	MOVW R26,R30
00d155 e0ea      	LDI  R30,LOW(10)
00d156 e0f0      	LDI  R31,HIGH(10)
00d157 940e d978 	CALL __DIVW21U
                +
00d159 85a8     +LDD R26 , Y + 8
00d15a 85b9     +LDD R27 , Y + 8 + 1
00d15b 9611     +ADIW R26 , 1
00d15c 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d15d 01d8      	MOVW R26,R16
00d15e e6e4      	LDI  R30,LOW(100)
00d15f e0f0      	LDI  R31,HIGH(100)
00d160 940e d9c1 	CALL __MODW21U
00d162 01df      	MOVW R26,R30
00d163 e0ea      	LDI  R30,LOW(10)
00d164 e0f0      	LDI  R31,HIGH(10)
00d165 940e d9c1 	CALL __MODW21U
                +
00d167 85a8     +LDD R26 , Y + 8
00d168 85b9     +LDD R27 , Y + 8 + 1
00d169 9612     +ADIW R26 , 2
00d16a 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d16b 85a8      	LDD  R26,Y+8
00d16c 85b9      	LDD  R27,Y+8+1
00d16d 9613      	ADIW R26,3
00d16e e0e1      	LDI  R30,LOW(1)
00d16f 93ec      	ST   X,R30
00d170 e0e0      	LDI  R30,LOW(0)
00d171 e0f0      	LDI  R31,HIGH(0)
00d172 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x326:
00d173 85aa      	LDD  R26,Y+10
00d174 85bb      	LDD  R27,Y+10+1
00d175 e6e4      	LDI  R30,LOW(100)
00d176 e0f0      	LDI  R31,HIGH(100)
00d177 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x327:
00d178 e8a9      	LDI  R26,LOW(_eep_vref_val)
00d179 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00d17a 940e da48 	CALL __EEPROMRDD
00d17c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x328:
                +
00d17d 87ea     +STD Y + 10 , R30
00d17e 87fb     +STD Y + 10 + 1 , R31
00d17f 876c     +STD Y + 10 + 2 , R22
00d180 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d181 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x329:
00d182 940e c180 	CALL SUBOPT_0xD7
00d184 940e da29 	CALL __PUTPARD1
00d186 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32A:
00d187 01f9      	MOVW R30,R18
00d188 9634      	ADIW R30,4
00d189 170e      	CP   R16,R30
00d18a 071f      	CPC  R17,R31
00d18b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x32B:
00d18c 01f8      	MOVW R30,R16
00d18d 1be2      	SUB  R30,R18
00d18e 0bf3      	SBC  R31,R19
00d18f 01de      	MOVW R26,R28
00d190 9650      	ADIW R26,16
00d191 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x32C:
00d192 01f8      	MOVW R30,R16
00d193 0fee      	LSL  R30
00d194 1fff      	ROL  R31
00d195 8dac      	LDD  R26,Y+28
00d196 8dbd      	LDD  R27,Y+28+1
00d197 0fae      	ADD  R26,R30
00d198 1fbf      	ADC  R27,R31
00d199 91ac      	LD   R26,X
00d19a 940e 97a0 	CALL _h2i
00d19c e1a0      	LDI  R26,LOW(16)
00d19d 02ea      	MULS R30,R26
00d19e 01f0      	MOVW R30,R0
00d19f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x32D:
00d1a0 01f8      	MOVW R30,R16
00d1a1 0fee      	LSL  R30
00d1a2 1fff      	ROL  R31
00d1a3 9631      	ADIW R30,1
00d1a4 8dac      	LDD  R26,Y+28
00d1a5 8dbd      	LDD  R27,Y+28+1
00d1a6 0fae      	ADD  R26,R30
00d1a7 1fbf      	ADC  R27,R31
00d1a8 91ac      	LD   R26,X
00d1a9 940c 97a0 	JMP  _h2i
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x32E:
00d1ab 93ec      	ST   X,R30
00d1ac 01d8      	MOVW R26,R16
00d1ad 1ba2      	SUB  R26,R18
00d1ae 0bb3      	SBC  R27,R19
00d1af e0e3      	LDI  R30,LOW(3)
00d1b0 e0f0      	LDI  R31,HIGH(3)
00d1b1 940e d960 	CALL __MULW12
00d1b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x32F:
00d1b4 8daa      	LDD  R26,Y+26
00d1b5 8dbb      	LDD  R27,Y+26+1
00d1b6 0fea      	ADD  R30,R26
00d1b7 1ffb      	ADC  R31,R27
00d1b8 01bf      	MOVW R22,R30
00d1b9 cfd2      	RJMP SUBOPT_0x32B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x330:
00d1ba 0fae      	ADD  R26,R30
00d1bb 1fbf      	ADC  R27,R31
00d1bc 91ec      	LD   R30,X
00d1bd e0f0      	LDI  R31,0
00d1be 01df      	MOVW R26,R30
00d1bf e6e4      	LDI  R30,LOW(100)
00d1c0 e0f0      	LDI  R31,HIGH(100)
00d1c1 940e d98b 	CALL __DIVW21
00d1c3 01db      	MOVW R26,R22
00d1c4 cfe6      	RJMP SUBOPT_0x32E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x331:
00d1c5 0fae      	ADD  R26,R30
00d1c6 1fbf      	ADC  R27,R31
00d1c7 91ac      	LD   R26,X
00d1c8 27bb      	CLR  R27
00d1c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x332:
00d1ca 01df      	MOVW R26,R30
00d1cb e0ea      	LDI  R30,LOW(10)
00d1cc e0f0      	LDI  R31,HIGH(10)
00d1cd 940e d98b 	CALL __DIVW21
00d1cf 01db      	MOVW R26,R22
00d1d0 cfda      	RJMP SUBOPT_0x32E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x333:
00d1d1 01f8      	MOVW R30,R16
00d1d2 1be2      	SUB  R30,R18
00d1d3 0bf3      	SBC  R31,R19
00d1d4 01de      	MOVW R26,R28
00d1d5 961c      	ADIW R26,12
00d1d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x334:
00d1d7 8da8      	LDD  R26,Y+24
00d1d8 8db9      	LDD  R27,Y+24+1
00d1d9 0fea      	ADD  R30,R26
00d1da 1ffb      	ADC  R31,R27
00d1db 01bf      	MOVW R22,R30
00d1dc cff4      	RJMP SUBOPT_0x333
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x335:
00d1dd 01f8      	MOVW R30,R16
00d1de 1be2      	SUB  R30,R18
00d1df 0bf3      	SBC  R31,R19
00d1e0 01de      	MOVW R26,R28
00d1e1 9618      	ADIW R26,8
00d1e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x336:
00d1e3 89ae      	LDD  R26,Y+22
00d1e4 89bf      	LDD  R27,Y+22+1
00d1e5 0fea      	ADD  R30,R26
00d1e6 1ffb      	ADC  R31,R27
00d1e7 01bf      	MOVW R22,R30
00d1e8 cff4      	RJMP SUBOPT_0x335
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x337:
00d1e9 89ac      	LDD  R26,Y+20
00d1ea 89bd      	LDD  R27,Y+20+1
00d1eb 0fea      	ADD  R30,R26
00d1ec 1ffb      	ADC  R31,R27
00d1ed 01bf      	MOVW R22,R30
00d1ee 01f8      	MOVW R30,R16
00d1ef 1be2      	SUB  R30,R18
00d1f0 0bf3      	SBC  R31,R19
00d1f1 940c c4d3 	JMP SUBOPT_0x169
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x338:
00d1f3 91ec      	LD   R30,X
00d1f4 e0f0      	LDI  R31,0
00d1f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x339:
00d1f6 81e8      	LD   R30,Y
00d1f7 e0f0      	LDI  R31,0
00d1f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x33A:
00d1f9 01de      	MOVW R26,R28
00d1fa 965e      	ADIW R26,30
00d1fb 0fae      	ADD  R26,R30
00d1fc 1fbf      	ADC  R27,R31
00d1fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33B:
00d1fe e0e0      	LDI  R30,LOW(0)
00d1ff a3ea      	STD  Y+34,R30
00d200 01de      	MOVW R26,R28
00d201 965e      	ADIW R26,30
00d202 940c 9e22 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x33C:
00d204 e0e0      	LDI  R30,LOW(0)
00d205 a3e8      	STD  Y+32,R30
00d206 01de      	MOVW R26,R28
00d207 965e      	ADIW R26,30
00d208 940c 9e22 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x33D:
                +
00d20a 87e8     +STD Y + 8 , R30
00d20b 87f9     +STD Y + 8 + 1 , R31
00d20c 876a     +STD Y + 8 + 2 , R22
00d20d 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00d20e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33E:
                +
00d20f 8be8     +STD Y + 16 , R30
00d210 8bf9     +STD Y + 16 + 1 , R31
00d211 8b6a     +STD Y + 16 + 2 , R22
00d212 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00d213 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x33F:
                +
00d214 8bec     +STD Y + 20 , R30
00d215 8bfd     +STD Y + 20 + 1 , R31
00d216 8b6e     +STD Y + 20 + 2 , R22
00d217 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00d218 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x340:
                +
00d219 e9e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 195 ) )
00d21a e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 195 ) )
00d21b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 195 ) )
00d21c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 195 ) )
                 	__POINTD1FN _0x2E0000,195
00d21d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x341:
00d21e 01de      	MOVW R26,R28
00d21f 9611      	ADIW R26,1
00d220 0fae      	ADD  R26,R30
00d221 1fbf      	ADC  R27,R31
00d222 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x342:
00d223 e0e9      	LDI  R30,LOW(9)
00d224 e0f0      	LDI  R31,HIGH(9)
00d225 93e0 10f4 	STS  _hwCalId,R30
00d227 93f0 10f5 	STS  _hwCalId+1,R31
00d229 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x343:
00d22a 940e da29 	CALL __PUTPARD1
00d22c 940c c087 	JMP SUBOPT_0xAE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x344:
00d22e 2fa1      	MOV  R26,R17
00d22f 27bb      	CLR  R27
00d230 e0e3      	LDI  R30,LOW(3)
00d231 e0f0      	LDI  R31,HIGH(3)
00d232 940e d9c4 	CALL __MODW21
00d234 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x345:
00d235 2fa1      	MOV  R26,R17
00d236 e0b0      	LDI  R27,0
00d237 e0e3      	LDI  R30,LOW(3)
00d238 e0f0      	LDI  R31,HIGH(3)
00d239 940e d98b 	CALL __DIVW21
00d23b 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00d23c 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00d23d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x346:
00d23e 91ac      	LD   R26,X
00d23f 940e bb5c 	CALL _isdigit
00d241 30e0      	CPI  R30,0
00d242 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x347:
00d243 01bf      	MOVW R22,R30
00d244 01df      	MOVW R26,R30
00d245 940e da50 	CALL __EEPROMRDB
00d247 2e0e      	MOV  R0,R30
00d248 940c c087 	JMP SUBOPT_0xAE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x348:
                +
00d24a ebe3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 741 ) )
00d24b e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 741 ) )
00d24c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 741 ) )
00d24d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 741 ) )
                 	__POINTD1FN _0x2E0000,741
00d24e 940e da29 	CALL __PUTPARD1
00d250 2fa1      	MOV  R26,R17
00d251 e0b0      	LDI  R27,0
00d252 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00d253 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00d254 940c c3a1 	JMP SUBOPT_0x137
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x349:
                +
00d256 edeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 13 ) )
00d257 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 13 ) )
00d258 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 13 ) )
00d259 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 13 ) )
                 	__POINTD1FN _0x2E0000,13
00d25a 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x34A:
00d25c e6ef      	LDI  R30,LOW(_rxPackage3)
00d25d e0fd      	LDI  R31,HIGH(_rxPackage3)
00d25e 93fa      	ST   -Y,R31
00d25f 93ea      	ST   -Y,R30
00d260 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x34B:
00d261 940e da29 	CALL __PUTPARD1
00d263 e0a7      	LDI  R26,LOW(7)
00d264 940e a1b7 	CALL _strncmpf
00d266 30e0      	CPI  R30,0
00d267 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34C:
00d268 940e da29 	CALL __PUTPARD1
00d26a 01da      	MOVW R26,R20
00d26b 91ec      	LD   R30,X
00d26c 940c bcfe 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34D:
                +
00d26e e7e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 681 ) )
00d26f e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 681 ) )
00d270 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 681 ) )
00d271 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 681 ) )
                 	__POINTD1FN _0x2E0000,681
00d272 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34E:
                +
00d274 efe7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 809 ) )
00d275 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 809 ) )
00d276 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 809 ) )
00d277 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 809 ) )
                 	__POINTD1FN _0x2E0000,809
00d278 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34F:
00d27a 93ba      	ST   -Y,R27
00d27b 93aa      	ST   -Y,R26
00d27c 9724      	SBIW R28,4
00d27d e0e0      	LDI  R30,LOW(0)
00d27e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x350:
00d27f 85ac      	LDD  R26,Y+12
00d280 85bd      	LDD  R27,Y+12+1
00d281 940c 9b1a 	JMP  _print_hex_ascii_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x351:
00d283 91e0 1a71 	LDS  R30,_n
00d285 91f0 1a72 	LDS  R31,_n+1
00d287 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x352:
00d288 01f9      	MOVW R30,R18
00d289 940e d8df 	CALL __LSLW4
00d28b 58ed      	SUBI R30,LOW(-_a)
00d28c 4ef5      	SBCI R31,HIGH(-_a)
00d28d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x353:
00d28e 01df      	MOVW R26,R30
00d28f 01f8      	MOVW R30,R16
00d290 940c bc9b 	JMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x354:
00d292 85ea      	LDD  R30,Y+10
00d293 85fb      	LDD  R31,Y+10+1
00d294 940e d8df 	CALL __LSLW4
00d296 58ed      	SUBI R30,LOW(-_a)
00d297 4ef5      	SBCI R31,HIGH(-_a)
00d298 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x355:
00d299 dfe9      	RCALL SUBOPT_0x351
00d29a 9631      	ADIW R30,1
00d29b 172e      	CP   R18,R30
00d29c 073f      	CPC  R19,R31
00d29d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x356:
00d29e 01df      	MOVW R26,R30
00d29f 01f9      	MOVW R30,R18
00d2a0 940c bc9b 	JMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x357:
00d2a2 01df      	MOVW R26,R30
00d2a3 01f9      	MOVW R30,R18
00d2a4 940c bca8 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x358:
00d2a6 01f8      	MOVW R30,R16
00d2a7 940e d8df 	CALL __LSLW4
00d2a9 58ed      	SUBI R30,LOW(-_a)
00d2aa 4ef5      	SBCI R31,HIGH(-_a)
00d2ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x359:
00d2ac 01df      	MOVW R26,R30
00d2ad 01f8      	MOVW R30,R16
00d2ae 940e d8e3 	CALL __LSLW2
00d2b0 0fae      	ADD  R26,R30
00d2b1 1fbf      	ADC  R27,R31
00d2b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35A:
                +
00d2b3 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00d2b4 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00d2b5 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00d2b6 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00d2b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35B:
                +
00d2b8 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00d2b9 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00d2ba e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00d2bb e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00d2bc 940c ca04 	JMP SUBOPT_0x23B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35C:
                +
00d2be e2e3     +LDI R30 , LOW ( 2 * _0x300000 + ( 29 ) )
00d2bf e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 29 ) )
00d2c0 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 29 ) )
00d2c1 e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 29 ) )
                 	__POINTD1FN _0x300000,29
00d2c2 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35D:
                +
00d2c4 e2e6     +LDI R30 , LOW ( 2 * _0x300000 + ( 32 ) )
00d2c5 e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 32 ) )
00d2c6 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 32 ) )
00d2c7 e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 32 ) )
                 	__POINTD1FN _0x300000,32
00d2c8 940e da29 	CALL __PUTPARD1
00d2ca cfdb      	RJMP SUBOPT_0x358
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35E:
                +
00d2cb e2e0     +LDI R30 , LOW ( 2 * _0x300000 + ( 26 ) )
00d2cc e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 26 ) )
00d2cd e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 26 ) )
00d2ce e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 26 ) )
                 	__POINTD1FN _0x300000,26
00d2cf 940c bbec 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35F:
00d2d1 940e d9f4 	CALL __GETD1P
00d2d3 940e da29 	CALL __PUTPARD1
00d2d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x360:
                +
00d2d6 87e9     +STD Y + 9 , R30
00d2d7 87fa     +STD Y + 9 + 1 , R31
00d2d8 876b     +STD Y + 9 + 2 , R22
00d2d9 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00d2da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x361:
00d2db 81ae      	LDD  R26,Y+6
00d2dc 81bf      	LDD  R27,Y+6+1
00d2dd 9611      	ADIW R26,1
00d2de 83ae      	STD  Y+6,R26
00d2df 83bf      	STD  Y+6+1,R27
00d2e0 9711      	SBIW R26,1
00d2e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x362:
00d2e2 940e c0a9 	CALL SUBOPT_0xB5
                +
00d2e4 85a9     +LDD R26 , Y + 9
00d2e5 85ba     +LDD R27 , Y + 9 + 1
00d2e6 858b     +LDD R24 , Y + 9 + 2
00d2e7 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d2e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x363:
00d2e9 940e c2b3 	CALL SUBOPT_0x10D
00d2eb 940e d7dd 	CALL __MULF12
00d2ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x364:
                +
00d2ee e0a0     +LDI R26 , LOW ( 0x3F000000 )
00d2ef e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00d2f0 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00d2f1 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00d2f2 940e d78d 	CALL __ADDF12
00d2f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x365:
00d2f5 2fe0      	MOV  R30,R16
00d2f6 5de0      	SUBI R30,-LOW(48)
00d2f7 93ec      	ST   X,R30
00d2f8 2fe0      	MOV  R30,R16
00d2f9 e0f0      	LDI  R31,0
00d2fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x366:
                +
00d2fb 85a9     +LDD R26 , Y + 9
00d2fc 85ba     +LDD R27 , Y + 9 + 1
00d2fd 858b     +LDD R24 , Y + 9 + 2
00d2fe 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d2ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x367:
00d300 89e8      	LDD  R30,Y+16
00d301 89f9      	LDD  R31,Y+16+1
00d302 9631      	ADIW R30,1
00d303 8be8      	STD  Y+16,R30
00d304 8bf9      	STD  Y+16+1,R31
00d305 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x368:
00d306 940e bc2e 	CALL SUBOPT_0xB
00d308 cfe0      	RJMP SUBOPT_0x363
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x369:
00d309 93e0 1aa3 	STS  __seed_G100,R30
00d30b 93f0 1aa4 	STS  __seed_G100+1,R31
00d30d 9360 1aa5 	STS  __seed_G100+2,R22
00d30f 9370 1aa6 	STS  __seed_G100+3,R23
00d311 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36A:
00d312 940e d9f0 	CALL __GETW1P
00d314 83ee      	STD  Y+6,R30
00d315 83ff      	STD  Y+6+1,R31
00d316 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36B:
00d317 e0f0      	LDI  R31,0
00d318 940e d919 	CALL __CWD1
00d31a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36C:
00d31b 940e d9fa 	CALL __GETD1P_INC
00d31d 940e c176 	CALL SUBOPT_0xD5
00d31f 940e da04 	CALL __PUTDP1_DEC
00d321 940c c199 	JMP SUBOPT_0xDD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36D:
00d323 940e d9f4 	CALL __GETD1P
                +
00d325 83e9     +STD Y + 1 , R30
00d326 83fa     +STD Y + 1 + 1 , R31
00d327 836b     +STD Y + 1 + 2 , R22
00d328 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00d329 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x36E:
                +
00d32a 81ed     +LDD R30 , Y + 5
00d32b 81fe     +LDD R31 , Y + 5 + 1
00d32c 816f     +LDD R22 , Y + 5 + 2
00d32d 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00d32e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x36F:
00d32f 85e9      	LDD  R30,Y+9
00d330 85fa      	LDD  R31,Y+9+1
00d331 81a1      	LDD  R26,Z+1
00d332 93aa      	ST   -Y,R26
00d333 85ea      	LDD  R30,Y+10
00d334 85fb      	LDD  R31,Y+10+1
00d335 96f2      	ADIW R30,50
00d336 93fa      	ST   -Y,R31
00d337 93ea      	ST   -Y,R30
00d338 940e bf8b 	CALL SUBOPT_0x89
00d33a 940e da29 	CALL __PUTPARD1
00d33c e0a1      	LDI  R26,LOW(1)
00d33d 940c a454 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x370:
                +
00d33f a1a2     +LDD R26 , Z + 34
00d340 a1b3     +LDD R27 , Z + 34 + 1
00d341 a184     +LDD R24 , Z + 34 + 2
00d342 a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00d343 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x371:
00d344 93fa      	ST   -Y,R31
00d345 93ea      	ST   -Y,R30
00d346 940e be05 	CALL SUBOPT_0x4F
00d348 940e da29 	CALL __PUTPARD1
00d34a e0a1      	LDI  R26,LOW(1)
00d34b 940e a3ef 	CALL _disk_read
00d34d 30e0      	CPI  R30,0
00d34e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x372:
00d34f 940e bd0c 	CALL SUBOPT_0x2C
00d351 940c a791 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x373:
00d353 96f2      	ADIW R30,50
00d354 93fa      	ST   -Y,R31
00d355 93ea      	ST   -Y,R30
00d356 e0e0      	LDI  R30,LOW(0)
00d357 e0f0      	LDI  R31,HIGH(0)
00d358 93fa      	ST   -Y,R31
00d359 93ea      	ST   -Y,R30
00d35a e0a0      	LDI  R26,LOW(512)
00d35b e0b2      	LDI  R27,HIGH(512)
00d35c 940c a734 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x374:
00d35e 940e d9f4 	CALL __GETD1P
00d360 01d0      	MOVW R26,R0
00d361 940e d9ff 	CALL __PUTDP1
00d363 81e9      	LDD  R30,Y+1
00d364 81fa      	LDD  R31,Y+1+1
00d365 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x375:
                +
00d366 89a2     +LDD R26 , Z + 18
00d367 89b3     +LDD R27 , Z + 18 + 1
00d368 8984     +LDD R24 , Z + 18 + 2
00d369 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d36a 940e da2e 	CALL __PUTPARD2
00d36c e0a1      	LDI  R26,LOW(1)
00d36d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x376:
                +
00d36e 30a2     +CPI R26 , LOW ( 0x2 )
00d36f e0e0     +LDI R30 , HIGH ( 0x2 )
00d370 07be     +CPC R27 , R30
00d371 e0e0     +LDI R30 , BYTE3 ( 0x2 )
00d372 078e     +CPC R24 , R30
00d373 e0e0     +LDI R30 , BYTE4 ( 0x2 )
00d374 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00d375 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x377:
                +
00d376 e0e1     +LDI R30 , LOW ( 0x1 )
00d377 e0f0     +LDI R31 , HIGH ( 0x1 )
00d378 e060     +LDI R22 , BYTE3 ( 0x1 )
00d379 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00d37a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x378:
00d37b 940e d9f4 	CALL __GETD1P
00d37d 940c c070 	JMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x379:
00d37f 01d9      	MOVW R26,R18
00d380 e0e0      	LDI  R30,LOW(512)
00d381 e0f2      	LDI  R31,HIGH(512)
00d382 940e d978 	CALL __DIVW21U
00d384 940e be50 	CALL SUBOPT_0x59
00d386 2766      	CLR  R22
00d387 2777      	CLR  R23
00d388 940e d899 	CALL __ADDD21
00d38a 940e a791 	CALL _move_window_G103
00d38c 30e0      	CPI  R30,0
00d38d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37A:
00d38e 85ac      	LDD  R26,Y+12
00d38f 85bd      	LDD  R27,Y+12+1
00d390 96d2      	ADIW R26,50
00d391 01f9      	MOVW R30,R18
00d392 70f1      	ANDI R31,HIGH(0x1FF)
00d393 0fae      	ADD  R26,R30
00d394 1fbf      	ADC  R27,R31
00d395 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37B:
                +
00d396 e0e0     +LDI R30 , LOW ( 0x100 )
00d397 e0f1     +LDI R31 , HIGH ( 0x100 )
00d398 e060     +LDI R22 , BYTE3 ( 0x100 )
00d399 e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00d39a 940e d990 	CALL __DIVD21U
00d39c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37C:
00d39d 940e be50 	CALL SUBOPT_0x59
00d39f 940e d899 	CALL __ADDD21
00d3a1 940e a791 	CALL _move_window_G103
00d3a3 30e0      	CPI  R30,0
00d3a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x37D:
00d3a5 940e d95a 	CALL __MULB1W2U
00d3a7 70f1      	ANDI R31,HIGH(0x1FF)
00d3a8 85ac      	LDD  R26,Y+12
00d3a9 85bd      	LDD  R27,Y+12+1
00d3aa 96d2      	ADIW R26,50
00d3ab 0fae      	ADD  R26,R30
00d3ac 1fbf      	ADC  R27,R31
00d3ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37E:
                +
00d3ae e8e0     +LDI R30 , LOW ( 0x80 )
00d3af e0f0     +LDI R31 , HIGH ( 0x80 )
00d3b0 e060     +LDI R22 , BYTE3 ( 0x80 )
00d3b1 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00d3b2 940e d990 	CALL __DIVD21U
00d3b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37F:
00d3b5 940e d9f4 	CALL __GETD1P
                +
00d3b7 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00d3b8 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00d3b9 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00d3ba 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00d3bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x380:
                +
00d3bc 85ae     +LDD R26 , Y + 14
00d3bd 85bf     +LDD R27 , Y + 14 + 1
00d3be 8988     +LDD R24 , Y + 14 + 2
00d3bf 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00d3c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x381:
00d3c1 01d8      	MOVW R26,R16
00d3c2 e0e0      	LDI  R30,LOW(512)
00d3c3 e0f2      	LDI  R31,HIGH(512)
00d3c4 940e d978 	CALL __DIVW21U
00d3c6 940e c18f 	CALL SUBOPT_0xDB
00d3c8 2766      	CLR  R22
00d3c9 2777      	CLR  R23
00d3ca 940e d899 	CALL __ADDD21
00d3cc 940e a791 	CALL _move_window_G103
00d3ce 2f5e      	MOV  R21,R30
00d3cf 3050      	CPI  R21,0
00d3d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x382:
00d3d1 89aa      	LDD  R26,Y+18
00d3d2 89bb      	LDD  R27,Y+18+1
00d3d3 96d2      	ADIW R26,50
00d3d4 01f8      	MOVW R30,R16
00d3d5 70f1      	ANDI R31,HIGH(0x1FF)
00d3d6 0fea      	ADD  R30,R26
00d3d7 1ffb      	ADC  R31,R27
00d3d8 019f      	MOVW R18,R30
00d3d9 85ee      	LDD  R30,Y+14
00d3da 70e1      	ANDI R30,LOW(0x1)
00d3db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x383:
                +
00d3dc 89a8     +LDD R26 , Y + 16
00d3dd 89b9     +LDD R27 , Y + 16 + 1
00d3de 898a     +LDD R24 , Y + 16 + 2
00d3df 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00d3e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x384:
00d3e1 940e c18f 	CALL SUBOPT_0xDB
00d3e3 940e d899 	CALL __ADDD21
00d3e5 940e a791 	CALL _move_window_G103
00d3e7 2f5e      	MOV  R21,R30
00d3e8 3050      	CPI  R21,0
00d3e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x385:
00d3ea 940e d95a 	CALL __MULB1W2U
00d3ec 70f1      	ANDI R31,HIGH(0x1FF)
00d3ed 89aa      	LDD  R26,Y+18
00d3ee 89bb      	LDD  R27,Y+18+1
00d3ef 96d2      	ADIW R26,50
00d3f0 0fea      	ADD  R30,R26
00d3f1 1ffb      	ADC  R31,R27
00d3f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x386:
                +
00d3f3 81ad     +LDD R26 , Y + 5
00d3f4 81be     +LDD R27 , Y + 5 + 1
00d3f5 818f     +LDD R24 , Y + 5 + 2
00d3f6 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00d3f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x387:
00d3f8 85a9      	LDD  R26,Y+9
00d3f9 85ba      	LDD  R27,Y+9+1
00d3fa 965e      	ADIW R26,30
00d3fb 940e d9f4 	CALL __GETD1P
00d3fd dff5      	RCALL SUBOPT_0x386
00d3fe 940e da94 	CALL __CPD21
00d400 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x388:
                +
00d401 81e9     +LDD R30 , Y + 1
00d402 81fa     +LDD R31 , Y + 1 + 1
00d403 816b     +LDD R22 , Y + 1 + 2
00d404 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00d405 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x389:
                +
00d406 30a1     +CPI R26 , LOW ( 0x1 )
00d407 e0e0     +LDI R30 , HIGH ( 0x1 )
00d408 07be     +CPC R27 , R30
00d409 e0e0     +LDI R30 , BYTE3 ( 0x1 )
00d40a 078e     +CPC R24 , R30
00d40b e0e0     +LDI R30 , BYTE4 ( 0x1 )
00d40c 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00d40d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38A:
                +
00d40e 85a6     +LDD R26 , Z + 14
00d40f 85b7     +LDD R27 , Z + 14 + 1
00d410 8980     +LDD R24 , Z + 14 + 2
00d411 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00d412 940c bd70 	JMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38B:
                +
00d414 83ed     +STD Y + 5 , R30
00d415 83fe     +STD Y + 5 + 1 , R31
00d416 836f     +STD Y + 5 + 2 , R22
00d417 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00d418 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38C:
00d419 89ec      	LDD  R30,Y+20
00d41a 89fd      	LDD  R31,Y+20+1
00d41b 93fa      	ST   -Y,R31
00d41c 93ea      	ST   -Y,R30
00d41d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38D:
                +
00d41e 89aa     +LDD R26 , Y + 18
00d41f 89bb     +LDD R27 , Y + 18 + 1
00d420 898c     +LDD R24 , Y + 18 + 2
00d421 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00d422 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38E:
                +
00d423 e0e2     +LDI R30 , LOW ( 0x2 )
00d424 e0f0     +LDI R31 , HIGH ( 0x2 )
00d425 e060     +LDI R22 , BYTE3 ( 0x2 )
00d426 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00d427 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38F:
00d428 940e bf8b 	CALL SUBOPT_0x89
00d42a 940e c18f 	CALL SUBOPT_0xDB
00d42c 940e da8f 	CALL __CPD12
00d42e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x390:
                +
00d42f e0e0     +LDI R30 , LOW ( 0x0 )
00d430 e0f0     +LDI R31 , HIGH ( 0x0 )
00d431 e060     +LDI R22 , BYTE3 ( 0x0 )
00d432 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d433 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x391:
00d434 85a8      	LDD  R26,Y+8
00d435 85b9      	LDD  R27,Y+8+1
00d436 940e d9f0 	CALL __GETW1P
00d438 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x392:
00d439 967e      	ADIW R30,30
00d43a 01df      	MOVW R26,R30
00d43b 940e d9f4 	CALL __GETD1P
00d43d 940e c0ae 	CALL SUBOPT_0xB6
00d43f 940e da94 	CALL __CPD21
00d441 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x393:
00d442 940e c0a9 	CALL SUBOPT_0xB5
                +
00d444 85a8     +LDD R26 , Y + 8
00d445 85b9     +LDD R27 , Y + 8 + 1
00d446 961a     +ADIW R26 , 10
00d447 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00d449 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x394:
00d44a 85a8      	LDD  R26,Y+8
00d44b 85b9      	LDD  R27,Y+8+1
00d44c cc78      	RJMP SUBOPT_0x319
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x395:
00d44d 2766      	CLR  R22
00d44e 2777      	CLR  R23
00d44f 940e d894 	CALL __ADDD12
00d451 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x396:
00d452 70ef      	ANDI R30,LOW(0xF)
00d453 70f0      	ANDI R31,HIGH(0xF)
00d454 0fee      	LSL  R30
00d455 940e d8df 	CALL __LSLW4
00d457 0fea      	ADD  R30,R26
00d458 1ffb      	ADC  R31,R27
00d459 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x397:
00d45a 940e d9f4 	CALL __GETD1P
00d45c 940e da7d 	CALL __CPD10
00d45e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x398:
00d45f 85a9      	LDD  R26,Y+9
00d460 85ba      	LDD  R27,Y+9+1
00d461 940e d9f0 	CALL __GETW1P
00d463 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x399:
00d464 85a9      	LDD  R26,Y+9
00d465 85ba      	LDD  R27,Y+9+1
00d466 cc5e      	RJMP SUBOPT_0x319
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39A:
00d467 85eb      	LDD  R30,Y+11
00d468 85fc      	LDD  R31,Y+11+1
                +
00d469 85a2     +LDD R26 , Z + 10
00d46a 85b3     +LDD R27 , Z + 10 + 1
00d46b 8584     +LDD R24 , Z + 10 + 2
00d46c 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00d46d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39B:
00d46e 967e      	ADIW R30,30
00d46f 01df      	MOVW R26,R30
00d470 940e d9f4 	CALL __GETD1P
00d472 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39C:
00d473 81ac      	LDD  R26,Y+4
00d474 81bd      	LDD  R27,Y+4+1
00d475 cc4f      	RJMP SUBOPT_0x319
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x39D:
00d476 81ee      	LDD  R30,Y+6
00d477 81ff      	LDD  R31,Y+6+1
                +
00d478 85a6     +LDD R26 , Z + 14
00d479 85b7     +LDD R27 , Z + 14 + 1
00d47a 8980     +LDD R24 , Z + 14 + 2
00d47b 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00d47c 940e a791 	CALL _move_window_G103
00d47e 2f1e      	MOV  R17,R30
00d47f 3010      	CPI  R17,0
00d480 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39E:
00d481 933a      	ST   -Y,R19
00d482 932a      	ST   -Y,R18
00d483 81ee      	LDD  R30,Y+6
00d484 81ff      	LDD  R31,Y+6+1
00d485 89a4      	LDD  R26,Z+20
00d486 89b5      	LDD  R27,Z+21
00d487 93ba      	ST   -Y,R27
00d488 93aa      	ST   -Y,R26
00d489 940c bddb 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39F:
00d48b 2fe2      	MOV  R30,R18
00d48c 5f2f      	SUBI R18,-1
00d48d e0f0      	LDI  R31,0
00d48e 0fe4      	ADD  R30,R20
00d48f 1ff5      	ADC  R31,R21
00d490 8300      	ST   Z,R16
00d491 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A0:
                +
00d492 81ae     +LDD R26 , Y + 6
00d493 81bf     +LDD R27 , Y + 6 + 1
00d494 9616     +ADIW R26 , 6
00d495 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00d497 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A1:
00d498 01d9      	MOVW R26,R18
00d499 9654      	ADIW R26,20
00d49a 940c bcad 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A2:
00d49c 01d9      	MOVW R26,R18
00d49d 965a      	ADIW R26,26
00d49e 940e d9f0 	CALL __GETW1P
00d4a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A3:
00d4a1 2766      	CLR  R22
00d4a2 2777      	CLR  R23
00d4a3 940e d8ad 	CALL __ORD12
00d4a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A4:
00d4a6 940e da29 	CALL __PUTPARD1
00d4a8 e0a1      	LDI  R26,LOW(1)
00d4a9 940e a3ef 	CALL _disk_read
00d4ab 30e0      	CPI  R30,0
00d4ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3A5:
00d4ad 96f2      	ADIW R30,50
00d4ae 50e2      	SUBI R30,LOW(-510)
00d4af 4ffe      	SBCI R31,HIGH(-510)
00d4b0 01df      	MOVW R26,R30
00d4b1 940e d9f0 	CALL __GETW1P
00d4b3 35e5      	CPI  R30,LOW(0xAA55)
00d4b4 eaaa      	LDI  R26,HIGH(0xAA55)
00d4b5 07fa      	CPC  R31,R26
00d4b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3A6:
00d4b7 940e d9f4 	CALL __GETD1P
                +
00d4b9 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00d4ba 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00d4bb 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00d4bc 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00d4bd 34e6     +CPI R30 , LOW ( 0x544146 )
00d4be e4a1     +LDI R26 , HIGH ( 0x544146 )
00d4bf 07fa     +CPC R31 , R26
00d4c0 e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00d4c1 076a     +CPC R22 , R26
00d4c2 e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00d4c3 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00d4c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3A7:
00d4c5 eaac      	LDI  R26,LOW(_FatFs_G103)
00d4c6 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00d4c7 e0f0      	LDI  R31,0
00d4c8 0fee      	LSL  R30
00d4c9 1fff      	ROL  R31
00d4ca 0fae      	ADD  R26,R30
00d4cb 1fbf      	ADC  R27,R31
00d4cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3A8:
                +
00d4cd 8bea     +STD Y + 18 , R30
00d4ce 8bfb     +STD Y + 18 + 1 , R31
00d4cf 8b6c     +STD Y + 18 + 2 , R22
00d4d0 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00d4d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A9:
00d4d2 81ae      	LDD  R26,Y+6
00d4d3 81bf      	LDD  R27,Y+6+1
00d4d4 5ca0      	SUBI R26,LOW(-64)
00d4d5 4fbf      	SBCI R27,HIGH(-64)
00d4d6 940e d9f0 	CALL __GETW1P
00d4d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3AA:
                +
00d4d9 87ee     +STD Y + 14 , R30
00d4da 87ff     +STD Y + 14 + 1 , R31
00d4db 8b68     +STD Y + 14 + 2 , R22
00d4dc 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00d4dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3AB:
00d4de 81ee      	LDD  R30,Y+6
00d4df 81ff      	LDD  R31,Y+6+1
00d4e0 85a0      	LDD  R26,Z+8
00d4e1 85b1      	LDD  R27,Z+9
00d4e2 01fd      	MOVW R30,R26
00d4e3 940e d8f1 	CALL __LSRW4
00d4e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AC:
00d4e6 81ee      	LDD  R30,Y+6
00d4e7 81ff      	LDD  R31,Y+6+1
00d4e8 de56      	RCALL SUBOPT_0x370
00d4e9 940e c17b 	CALL SUBOPT_0xD6
00d4eb 940e d894 	CALL __ADDD12
00d4ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AD:
00d4ee 940e a791 	CALL _move_window_G103
00d4f0 2f1e      	MOV  R17,R30
00d4f1 3010      	CPI  R17,0
00d4f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AE:
00d4f3 8daa      	LDD  R26,Y+26
00d4f4 8dbb      	LDD  R27,Y+26+1
00d4f5 cbcf      	RJMP SUBOPT_0x319
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3AF:
00d4f6 81a2      	LDD  R26,Z+2
00d4f7 81b3      	LDD  R27,Z+3
00d4f8 940e b031 	CALL _validate_G103
00d4fa 2f1e      	MOV  R17,R30
00d4fb 3010      	CPI  R17,0
00d4fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B0:
00d4fd 8dea      	LDD  R30,Y+26
00d4fe 8dfb      	LDD  R31,Y+26+1
                +
00d4ff 81a6     +LDD R26 , Z + 6
00d500 81b7     +LDD R27 , Z + 6 + 1
00d501 8580     +LDD R24 , Z + 6 + 2
00d502 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00d503 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B1:
00d504 01fd      	MOVW R30,R26
00d505 01bc      	MOVW R22,R24
00d506 70f1      	ANDI R31,HIGH(0x1FF)
00d507 9730      	SBIW R30,0
00d508 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B2:
00d509 8dec      	LDD  R30,Y+28
00d50a 8dfd      	LDD  R31,Y+28+1
                +
00d50b 89a2     +LDD R26 , Z + 18
00d50c 89b3     +LDD R27 , Z + 18 + 1
00d50d 8984     +LDD R24 , Z + 18 + 2
00d50e 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d50f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3B3:
00d510 8daa      	LDD  R26,Y+26
00d511 8dbb      	LDD  R27,Y+26+1
00d512 9614      	ADIW R26,4
00d513 91ec      	LD   R30,X
00d514 68e0      	ORI  R30,0x80
00d515 93ec      	ST   X,R30
00d516 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B4:
00d517 8dea      	LDD  R30,Y+26
00d518 8dfb      	LDD  R31,Y+26+1
00d519 940c c9e6 	JMP SUBOPT_0x235
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B5:
00d51b e0e0      	LDI  R30,LOW(512)
00d51c e0f2      	LDI  R31,HIGH(512)
00d51d 940e d978 	CALL __DIVW21U
00d51f 01af      	MOVW R20,R30
00d520 2e04      	MOV  R0,R20
00d521 2a05      	OR   R0,R21
00d522 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B6:
00d523 8daa      	LDD  R26,Y+26
00d524 8dbb      	LDD  R27,Y+26+1
00d525 940e d9f0 	CALL __GETW1P
00d527 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B7:
00d528 81e1      	LDD  R30,Z+1
00d529 93ea      	ST   -Y,R30
00d52a 81ef      	LDD  R30,Y+7
00d52b 85f8      	LDD  R31,Y+7+1
00d52c 93fa      	ST   -Y,R31
00d52d 93ea      	ST   -Y,R30
00d52e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3B8:
00d52f 8dea      	LDD  R30,Y+26
00d530 8dfb      	LDD  R31,Y+26+1
                +
00d531 89a6     +LDD R26 , Z + 22
00d532 89b7     +LDD R27 , Z + 22 + 1
00d533 8d80     +LDD R24 , Z + 22 + 2
00d534 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00d535 940c c194 	JMP SUBOPT_0xDC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B9:
00d537 940e d8a3 	CALL __SUBD21
00d539 01fa      	MOVW R30,R20
00d53a 2766      	CLR  R22
00d53b 2777      	CLR  R23
00d53c 940e da94 	CALL __CPD21
00d53e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BA:
00d53f 940e d8a3 	CALL __SUBD21
                +
00d541 e0e0     +LDI R30 , LOW ( 0x200 )
00d542 e0f2     +LDI R31 , HIGH ( 0x200 )
00d543 e060     +LDI R22 , BYTE3 ( 0x200 )
00d544 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00d545 940e d93a 	CALL __MULD12U
00d547 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3BB:
00d548 9615      	ADIW R26,5
00d549 91ec      	LD   R30,X
00d54a 0fe4      	ADD  R30,R20
00d54b 93ec      	ST   X,R30
00d54c 01fa      	MOVW R30,R20
00d54d 0fee      	LSL  R30
00d54e 1fff      	ROL  R31
00d54f 2ffe      	MOV  R31,R30
00d550 e0e0      	LDI  R30,0
00d551 019f      	MOVW R18,R30
00d552 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3BC:
00d553 81e1      	LDD  R30,Z+1
00d554 93ea      	ST   -Y,R30
00d555 8deb      	LDD  R30,Y+27
00d556 8dfc      	LDD  R31,Y+27+1
00d557 96b0      	ADIW R30,32
00d558 93fa      	ST   -Y,R31
00d559 93ea      	ST   -Y,R30
00d55a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3BD:
                +
00d55b 89a6     +LDD R26 , Z + 22
00d55c 89b7     +LDD R27 , Z + 22 + 1
00d55d 8d80     +LDD R24 , Z + 22 + 2
00d55e 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00d55f 940e da2e 	CALL __PUTPARD2
00d561 e0a1      	LDI  R26,LOW(1)
00d562 940e a454 	CALL _disk_write
00d564 30e0      	CPI  R30,0
00d565 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3BE:
00d566 9614      	ADIW R26,4
00d567 91ec      	LD   R30,X
00d568 7bef      	ANDI R30,0xBF
00d569 93ec      	ST   X,R30
00d56a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BF:
00d56b 9615      	ADIW R26,5
00d56c 91ec      	LD   R30,X
00d56d 5fef      	SUBI R30,-LOW(1)
00d56e 93ec      	ST   X,R30
00d56f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C0:
00d570 9616      	ADIW R26,6
00d571 940e d9f0 	CALL __GETW1P
00d573 70f1      	ANDI R31,HIGH(0x1FF)
00d574 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C1:
00d575 9636      	ADIW R30,6
00d576 010f      	MOVW R0,R30
00d577 01df      	MOVW R26,R30
00d578 940e d9f4 	CALL __GETD1P
00d57a 01df      	MOVW R26,R30
00d57b 01cb      	MOVW R24,R22
00d57c 01f9      	MOVW R30,R18
00d57d cecf      	RJMP SUBOPT_0x395
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C2:
00d57e 91ed      	LD   R30,X+
00d57f 91fd      	LD   R31,X+
00d580 0fe2      	ADD  R30,R18
00d581 1ff3      	ADC  R31,R19
00d582 93fe      	ST   -X,R31
00d583 93ee      	ST   -X,R30
00d584 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3C3:
00d585 89ae      	LDD  R26,Y+22
00d586 89bf      	LDD  R27,Y+22+1
00d587 cb3d      	RJMP SUBOPT_0x319
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C4:
00d588 89ae      	LDD  R26,Y+22
00d589 89bf      	LDD  R27,Y+22+1
00d58a 961a      	ADIW R26,10
00d58b 940e d9f4 	CALL __GETD1P
00d58d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C5:
00d58e 89ee      	LDD  R30,Y+22
00d58f 89ff      	LDD  R31,Y+22+1
                +
00d590 81a6     +LDD R26 , Z + 6
00d591 81b7     +LDD R27 , Z + 6 + 1
00d592 8580     +LDD R24 , Z + 6 + 2
00d593 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00d594 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3C6:
00d595 89ae      	LDD  R26,Y+22
00d596 89bf      	LDD  R27,Y+22+1
00d597 940e d9f0 	CALL __GETW1P
00d599 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C7:
00d59a 8de8      	LDD  R30,Y+24
00d59b 8df9      	LDD  R31,Y+24+1
                +
00d59c 89a2     +LDD R26 , Z + 18
00d59d 89b3     +LDD R27 , Z + 18 + 1
00d59e 8984     +LDD R24 , Z + 18 + 2
00d59f 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d5a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3C8:
00d5a1 89ae      	LDD  R26,Y+22
00d5a2 89bf      	LDD  R27,Y+22+1
00d5a3 9614      	ADIW R26,4
00d5a4 91ec      	LD   R30,X
00d5a5 68e0      	ORI  R30,0x80
00d5a6 93ec      	ST   X,R30
00d5a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C9:
00d5a8 81e1      	LDD  R30,Z+1
00d5a9 93ea      	ST   -Y,R30
00d5aa 89ef      	LDD  R30,Y+23
00d5ab 8df8      	LDD  R31,Y+23+1
00d5ac 96b0      	ADIW R30,32
00d5ad 93fa      	ST   -Y,R31
00d5ae 93ea      	ST   -Y,R30
00d5af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CA:
00d5b0 89ee      	LDD  R30,Y+22
00d5b1 89ff      	LDD  R31,Y+22+1
00d5b2 940c c9e6 	JMP SUBOPT_0x235
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CB:
00d5b4 89ee      	LDD  R30,Y+22
00d5b5 89ff      	LDD  R31,Y+22+1
                +
00d5b6 89a6     +LDD R26 , Z + 22
00d5b7 89b7     +LDD R27 , Z + 22 + 1
00d5b8 8d80     +LDD R24 , Z + 22 + 2
00d5b9 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00d5ba 940c be05 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3CC:
00d5bc 89ee      	LDD  R30,Y+22
00d5bd 89ff      	LDD  R31,Y+22+1
00d5be 96b0      	ADIW R30,32
00d5bf 93fa      	ST   -Y,R31
00d5c0 93ea      	ST   -Y,R30
00d5c1 8de8      	LDD  R30,Y+24
00d5c2 8df9      	LDD  R31,Y+24+1
00d5c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3CD:
00d5c4 89ad      	LDD  R26,Y+21
00d5c5 89be      	LDD  R27,Y+21+1
00d5c6 cafe      	RJMP SUBOPT_0x319
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CE:
00d5c7 89ad      	LDD  R26,Y+21
00d5c8 89be      	LDD  R27,Y+21+1
00d5c9 961a      	ADIW R26,10
00d5ca 940e d9f4 	CALL __GETD1P
00d5cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3CF:
                +
00d5cd 89a9     +LDD R26 , Y + 17
00d5ce 89ba     +LDD R27 , Y + 17 + 1
00d5cf 898b     +LDD R24 , Y + 17 + 2
00d5d0 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00d5d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D0:
                +
00d5d2 8be9     +STD Y + 17 , R30
00d5d3 8bfa     +STD Y + 17 + 1 , R31
00d5d4 8b6b     +STD Y + 17 + 2 , R22
00d5d5 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00d5d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D1:
                +
00d5d7 89ad     +LDD R26 , Y + 21
00d5d8 89be     +LDD R27 , Y + 21 + 1
00d5d9 9616     +ADIW R26 , 6
00d5da 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00d5dc 89ad      	LDD  R26,Y+21
00d5dd 89be      	LDD  R27,Y+21+1
00d5de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D2:
00d5df 89ad      	LDD  R26,Y+21
00d5e0 89be      	LDD  R27,Y+21+1
00d5e1 940e d9f0 	CALL __GETW1P
00d5e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D3:
                +
00d5e4 89e9     +LDD R30 , Y + 17
00d5e5 89fa     +LDD R31 , Y + 17 + 1
00d5e6 896b     +LDD R22 , Y + 17 + 2
00d5e7 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00d5e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D4:
00d5e9 940e c199 	CALL SUBOPT_0xDD
00d5eb 01df      	MOVW R26,R30
00d5ec 01cb      	MOVW R24,R22
00d5ed 940e bebe 	CALL SUBOPT_0x6B
00d5ef 940e d990 	CALL __DIVD21U
00d5f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D5:
00d5f2 940e d9f4 	CALL __GETD1P
                +
00d5f4 87ed     +STD Y + 13 , R30
00d5f5 87fe     +STD Y + 13 + 1 , R31
00d5f6 876f     +STD Y + 13 + 2 , R22
00d5f7 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00d5f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D6:
                +
00d5f9 85ed     +LDD R30 , Y + 13
00d5fa 85fe     +LDD R31 , Y + 13 + 1
00d5fb 856f     +LDD R22 , Y + 13 + 2
00d5fc 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00d5fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D7:
00d5fe 940e a9dc 	CALL _create_chain_G103
                +
00d600 87ed     +STD Y + 13 , R30
00d601 87fe     +STD Y + 13 + 1 , R31
00d602 876f     +STD Y + 13 + 2 , R22
00d603 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00d604 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D8:
                +
00d605 85ad     +LDD R26 , Y + 13
00d606 85be     +LDD R27 , Y + 13 + 1
00d607 858f     +LDD R24 , Y + 13 + 2
00d608 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00d609 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3D9:
00d60a 89ad      	LDD  R26,Y+21
00d60b 89be      	LDD  R27,Y+21+1
00d60c 9614      	ADIW R26,4
00d60d 91ec      	LD   R30,X
00d60e 68e0      	ORI  R30,0x80
00d60f 93ec      	ST   X,R30
00d610 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3DA:
00d611 dfe7      	RCALL SUBOPT_0x3D6
                +
00d612 89ad     +LDD R26 , Y + 21
00d613 89be     +LDD R27 , Y + 21 + 1
00d614 9652     +ADIW R26 , 18
00d615 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00d617 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DB:
                +
00d618 85af     +LDD R26 , Y + 15
00d619 89b8     +LDD R27 , Y + 15 + 1
00d61a 8989     +LDD R24 , Y + 15 + 2
00d61b 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00d61c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3DC:
00d61d 89ed      	LDD  R30,Y+21
00d61e 89fe      	LDD  R31,Y+21+1
00d61f 9636      	ADIW R30,6
00d620 010f      	MOVW R0,R30
00d621 01df      	MOVW R26,R30
00d622 940e d9f4 	CALL __GETD1P
00d624 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DD:
00d625 89ed      	LDD  R30,Y+21
00d626 89fe      	LDD  R31,Y+21+1
                +
00d627 81a6     +LDD R26 , Z + 6
00d628 81b7     +LDD R27 , Z + 6 + 1
00d629 8580     +LDD R24 , Z + 6 + 2
00d62a 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00d62b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3DE:
00d62c 940e c17b 	CALL SUBOPT_0xD6
00d62e 940e c0da 	CALL SUBOPT_0xBE
00d630 ce9c      	RJMP SUBOPT_0x3A8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3DF:
00d631 940e c075 	CALL SUBOPT_0xAB
00d633 ccb5      	RJMP SUBOPT_0x363
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3E0:
00d634 940e bf8b 	CALL SUBOPT_0x89
00d636 940e bc2e 	CALL SUBOPT_0xB
00d638 940e d870 	CALL __CMPF12
00d63a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E1:
00d63b 85a8      	LDD  R26,Y+8
00d63c 85b9      	LDD  R27,Y+8+1
00d63d 9611      	ADIW R26,1
00d63e 87a8      	STD  Y+8,R26
00d63f 87b9      	STD  Y+8+1,R27
00d640 9711      	SBIW R26,1
00d641 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3E2:
00d642 932a      	ST   -Y,R18
00d643 81af      	LDD  R26,Y+7
00d644 85b8      	LDD  R27,Y+7+1
00d645 940e bebe 	CALL SUBOPT_0x6B
00d647 bf6c      	OUT  EIND,R22
00d648 9519      	EICALL
00d649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3E3:
                +
00d64a 01fe     +MOVW R30 , R28
00d64b 5ae0     +SUBI R30 , LOW ( - 96 )
00d64c 4fff     +SBCI R31 , HIGH ( - 96 )
00d64d 9001     +LD R0 , Z +
00d64e 81f0     +LD R31 , Z
00d64f 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00d650 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3E4:
00d651 9734      	SBIW R30,4
                +
00d652 01de     +MOVW R26 , R28
00d653 5aa0     +SUBI R26 , LOW ( - 96 )
00d654 4fbf     +SBCI R27 , HIGH ( - 96 )
00d655 93ed     +ST X + , R30
00d656 93fc     +ST X , R31
                 	__PUTW1SX 96
00d657 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3E5:
00d658 81af      	LDD  R26,Y+7
00d659 85b8      	LDD  R27,Y+7+1
00d65a 940e bebe 	CALL SUBOPT_0x6B
00d65c bf6c      	OUT  EIND,R22
00d65d 9519      	EICALL
00d65e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3E6:
                +
00d65f 01de     +MOVW R26 , R28
00d660 5aa0     +SUBI R26 , LOW ( - 96 )
00d661 4fbf     +SBCI R27 , HIGH ( - 96 )
00d662 900d     +LD R0 , X +
00d663 91bc     +LD R27 , X
00d664 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00d665 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3E7:
00d666 dfe3      	RCALL SUBOPT_0x3E3
00d667 cfe9      	RJMP SUBOPT_0x3E4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E8:
00d668 8be8      	STD  Y+16,R30
00d669 8bf9      	STD  Y+16+1,R31
00d66a 89a8      	LDD  R26,Y+16
00d66b 89b9      	LDD  R27,Y+16+1
00d66c 940e a19b 	CALL _strlen
00d66e 2f1e      	MOV  R17,R30
00d66f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3E9:
00d670 7f0b      	ANDI R16,LOW(251)
00d671 8de9      	LDD  R30,Y+25
00d672 93ea      	ST   -Y,R30
                +
00d673 01de     +MOVW R26 , R28
00d674 5aa5     +SUBI R26 , LOW ( - 91 )
00d675 4fbf     +SBCI R27 , HIGH ( - 91 )
00d676 900d     +LD R0 , X +
00d677 91bc     +LD R27 , X
00d678 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00d679 01fe     +MOVW R30 , R28
00d67a 5ae3     +SUBI R30 , LOW ( - 93 )
00d67b 4fff     +SBCI R31 , HIGH ( - 93 )
00d67c 9001     +LD R0 , Z +
00d67d 9011     +LD R1 , Z +
00d67e 9161     +LD R22 , Z +
00d67f 8170     +LD R23 , Z
00d680 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00d681 bf6c      	OUT  EIND,R22
00d682 9519      	EICALL
00d683 3050      	CPI  R21,0
00d684 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EA:
                +
00d685 ecec     +LDI R30 , LOW ( _put_buff_G104 )
00d686 ebf7     +LDI R31 , HIGH ( _put_buff_G104 )
00d687 e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00d688 e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00d689 940e da29 	CALL __PUTPARD1
00d68b 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00d68c 9858      	cbi  __i2c_port,__scl_bit
00d68d 9859      	cbi  __i2c_port,__sda_bit
00d68e 9a50      	sbi  __i2c_dir,__scl_bit
00d68f 9851      	cbi  __i2c_dir,__sda_bit
00d690 c015      	rjmp __i2c_delay2
                 _i2c_start:
00d691 9851      	cbi  __i2c_dir,__sda_bit
00d692 9850      	cbi  __i2c_dir,__scl_bit
00d693 27ee      	clr  r30
00d694 0000      	nop
00d695 9b49      	sbis __i2c_pin,__sda_bit
00d696 9508      	ret
00d697 9b48      	sbis __i2c_pin,__scl_bit
00d698 9508      	ret
00d699 d004      	rcall __i2c_delay1
00d69a 9a51      	sbi  __i2c_dir,__sda_bit
00d69b d002      	rcall __i2c_delay1
00d69c 9a50      	sbi  __i2c_dir,__scl_bit
00d69d e0e1      	ldi  r30,1
                 __i2c_delay1:
00d69e e06d      	ldi  r22,13
00d69f c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00d6a0 9a51      	sbi  __i2c_dir,__sda_bit
00d6a1 9a50      	sbi  __i2c_dir,__scl_bit
00d6a2 d003      	rcall __i2c_delay2
00d6a3 9850      	cbi  __i2c_dir,__scl_bit
00d6a4 dff9      	rcall __i2c_delay1
00d6a5 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00d6a6 e16b      	ldi  r22,27
                 __i2c_delay2l:
00d6a7 956a      	dec  r22
00d6a8 f7f1      	brne __i2c_delay2l
00d6a9 9508      	ret
                 _i2c_read:
00d6aa e078      	ldi  r23,8
                 __i2c_read0:
00d6ab 9850      	cbi  __i2c_dir,__scl_bit
00d6ac dff1      	rcall __i2c_delay1
                 __i2c_read3:
00d6ad 9b48      	sbis __i2c_pin,__scl_bit
00d6ae cffe      	rjmp __i2c_read3
00d6af dfee      	rcall __i2c_delay1
00d6b0 9488      	clc
00d6b1 9949      	sbic __i2c_pin,__sda_bit
00d6b2 9408      	sec
00d6b3 9a50      	sbi  __i2c_dir,__scl_bit
00d6b4 dff1      	rcall __i2c_delay2
00d6b5 1fee      	rol  r30
00d6b6 957a      	dec  r23
00d6b7 f799      	brne __i2c_read0
00d6b8 2f7a      	mov  r23,r26
00d6b9 2377      	tst  r23
00d6ba f411      	brne __i2c_read1
00d6bb 9851      	cbi  __i2c_dir,__sda_bit
00d6bc c001      	rjmp __i2c_read2
                 __i2c_read1:
00d6bd 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00d6be dfdf      	rcall __i2c_delay1
00d6bf 9850      	cbi  __i2c_dir,__scl_bit
00d6c0 dfe5      	rcall __i2c_delay2
00d6c1 9a50      	sbi  __i2c_dir,__scl_bit
00d6c2 dfdb      	rcall __i2c_delay1
00d6c3 9851      	cbi  __i2c_dir,__sda_bit
00d6c4 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00d6c5 e078      	ldi  r23,8
                 __i2c_write0:
00d6c6 0faa      	lsl  r26
00d6c7 f410      	brcc __i2c_write1
00d6c8 9851      	cbi  __i2c_dir,__sda_bit
00d6c9 c001      	rjmp __i2c_write2
                 __i2c_write1:
00d6ca 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00d6cb dfda      	rcall __i2c_delay2
00d6cc 9850      	cbi  __i2c_dir,__scl_bit
00d6cd dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00d6ce 9b48      	sbis __i2c_pin,__scl_bit
00d6cf cffe      	rjmp __i2c_write3
00d6d0 dfcd      	rcall __i2c_delay1
00d6d1 9a50      	sbi  __i2c_dir,__scl_bit
00d6d2 957a      	dec  r23
00d6d3 f791      	brne __i2c_write0
00d6d4 9851      	cbi  __i2c_dir,__sda_bit
00d6d5 dfc8      	rcall __i2c_delay1
00d6d6 9850      	cbi  __i2c_dir,__scl_bit
00d6d7 dfce      	rcall __i2c_delay2
00d6d8 e0e1      	ldi  r30,1
00d6d9 9949      	sbic __i2c_pin,__sda_bit
00d6da 27ee      	clr  r30
00d6db 9a50      	sbi  __i2c_dir,__scl_bit
00d6dc cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00d6dd 9610      	adiw r26,0
00d6de f039      	breq __delay_ms1
                 __delay_ms0:
                +
00d6df ed80     +LDI R24 , LOW ( 0x7D0 )
00d6e0 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00d6e1 9701     +SBIW R24 , 1
00d6e2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00d6e3 95a8      	wdr
00d6e4 9711      	sbiw r26,1
00d6e5 f7c9      	brne __delay_ms0
                 __delay_ms1:
00d6e6 9508      	ret
                 
                 __ANEGF1:
00d6e7 9730      	SBIW R30,0
00d6e8 4060      	SBCI R22,0
00d6e9 4070      	SBCI R23,0
00d6ea f009      	BREQ __ANEGF10
00d6eb 5870      	SUBI R23,0x80
                 __ANEGF10:
00d6ec 9508      	RET
                 
                 __ROUND_REPACK:
00d6ed 2355      	TST  R21
00d6ee f442      	BRPL __REPACK
00d6ef 3850      	CPI  R21,0x80
00d6f0 f411      	BRNE __ROUND_REPACK0
00d6f1 ffe0      	SBRS R30,0
00d6f2 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00d6f3 9631      	ADIW R30,1
00d6f4 1f69      	ADC  R22,R25
00d6f5 1f79      	ADC  R23,R25
00d6f6 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00d6f7 e850      	LDI  R21,0x80
00d6f8 2757      	EOR  R21,R23
00d6f9 f411      	BRNE __REPACK0
00d6fa 935f      	PUSH R21
00d6fb c0cf      	RJMP __ZERORES
                 __REPACK0:
00d6fc 3f5f      	CPI  R21,0xFF
00d6fd f031      	BREQ __REPACK1
00d6fe 0f66      	LSL  R22
00d6ff 0c00      	LSL  R0
00d700 9557      	ROR  R21
00d701 9567      	ROR  R22
00d702 2f75      	MOV  R23,R21
00d703 9508      	RET
                 __REPACK1:
00d704 935f      	PUSH R21
00d705 2000      	TST  R0
00d706 f00a      	BRMI __REPACK2
00d707 c0cf      	RJMP __MAXRES
                 __REPACK2:
00d708 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00d709 e850      	LDI  R21,0x80
00d70a 2e19      	MOV  R1,R25
00d70b 2215      	AND  R1,R21
00d70c 0f88      	LSL  R24
00d70d 1f99      	ROL  R25
00d70e 2795      	EOR  R25,R21
00d70f 0f55      	LSL  R21
00d710 9587      	ROR  R24
                 
                 __UNPACK1:
00d711 e850      	LDI  R21,0x80
00d712 2e07      	MOV  R0,R23
00d713 2205      	AND  R0,R21
00d714 0f66      	LSL  R22
00d715 1f77      	ROL  R23
00d716 2775      	EOR  R23,R21
00d717 0f55      	LSL  R21
00d718 9567      	ROR  R22
00d719 9508      	RET
                 
                 __CFD1U:
00d71a 9468      	SET
00d71b c001      	RJMP __CFD1U0
                 __CFD1:
00d71c 94e8      	CLT
                 __CFD1U0:
00d71d 935f      	PUSH R21
00d71e dff2      	RCALL __UNPACK1
00d71f 3870      	CPI  R23,0x80
00d720 f018      	BRLO __CFD10
00d721 3f7f      	CPI  R23,0xFF
00d722 f408      	BRCC __CFD10
00d723 c0a7      	RJMP __ZERORES
                 __CFD10:
00d724 e156      	LDI  R21,22
00d725 1b57      	SUB  R21,R23
00d726 f4aa      	BRPL __CFD11
00d727 9551      	NEG  R21
00d728 3058      	CPI  R21,8
00d729 f40e      	BRTC __CFD19
00d72a 3059      	CPI  R21,9
                 __CFD19:
00d72b f030      	BRLO __CFD17
00d72c efef      	SER  R30
00d72d efff      	SER  R31
00d72e ef6f      	SER  R22
00d72f e77f      	LDI  R23,0x7F
00d730 f977      	BLD  R23,7
00d731 c01a      	RJMP __CFD15
                 __CFD17:
00d732 2777      	CLR  R23
00d733 2355      	TST  R21
00d734 f0b9      	BREQ __CFD15
                 __CFD18:
00d735 0fee      	LSL  R30
00d736 1fff      	ROL  R31
00d737 1f66      	ROL  R22
00d738 1f77      	ROL  R23
00d739 955a      	DEC  R21
00d73a f7d1      	BRNE __CFD18
00d73b c010      	RJMP __CFD15
                 __CFD11:
00d73c 2777      	CLR  R23
                 __CFD12:
00d73d 3058      	CPI  R21,8
00d73e f028      	BRLO __CFD13
00d73f 2fef      	MOV  R30,R31
00d740 2ff6      	MOV  R31,R22
00d741 2f67      	MOV  R22,R23
00d742 5058      	SUBI R21,8
00d743 cff9      	RJMP __CFD12
                 __CFD13:
00d744 2355      	TST  R21
00d745 f031      	BREQ __CFD15
                 __CFD14:
00d746 9576      	LSR  R23
00d747 9567      	ROR  R22
00d748 95f7      	ROR  R31
00d749 95e7      	ROR  R30
00d74a 955a      	DEC  R21
00d74b f7d1      	BRNE __CFD14
                 __CFD15:
00d74c 2000      	TST  R0
00d74d f40a      	BRPL __CFD16
00d74e d167      	RCALL __ANEGD1
                 __CFD16:
00d74f 915f      	POP  R21
00d750 9508      	RET
                 
                 __CDF1U:
00d751 9468      	SET
00d752 c001      	RJMP __CDF1U0
                 __CDF1:
00d753 94e8      	CLT
                 __CDF1U0:
00d754 9730      	SBIW R30,0
00d755 4060      	SBCI R22,0
00d756 4070      	SBCI R23,0
00d757 f0b1      	BREQ __CDF10
00d758 2400      	CLR  R0
00d759 f026      	BRTS __CDF11
00d75a 2377      	TST  R23
00d75b f412      	BRPL __CDF11
00d75c 9400      	COM  R0
00d75d d158      	RCALL __ANEGD1
                 __CDF11:
00d75e 2e17      	MOV  R1,R23
00d75f e17e      	LDI  R23,30
00d760 2011      	TST  R1
                 __CDF12:
00d761 f032      	BRMI __CDF13
00d762 957a      	DEC  R23
00d763 0fee      	LSL  R30
00d764 1fff      	ROL  R31
00d765 1f66      	ROL  R22
00d766 1c11      	ROL  R1
00d767 cff9      	RJMP __CDF12
                 __CDF13:
00d768 2fef      	MOV  R30,R31
00d769 2ff6      	MOV  R31,R22
00d76a 2d61      	MOV  R22,R1
00d76b 935f      	PUSH R21
00d76c df8a      	RCALL __REPACK
00d76d 915f      	POP  R21
                 __CDF10:
00d76e 9508      	RET
                 
                 __SWAPACC:
00d76f 934f      	PUSH R20
00d770 01af      	MOVW R20,R30
00d771 01fd      	MOVW R30,R26
00d772 01da      	MOVW R26,R20
00d773 01ab      	MOVW R20,R22
00d774 01bc      	MOVW R22,R24
00d775 01ca      	MOVW R24,R20
00d776 2d40      	MOV  R20,R0
00d777 2c01      	MOV  R0,R1
00d778 2e14      	MOV  R1,R20
00d779 914f      	POP  R20
00d77a 9508      	RET
                 
                 __UADD12:
00d77b 0fea      	ADD  R30,R26
00d77c 1ffb      	ADC  R31,R27
00d77d 1f68      	ADC  R22,R24
00d77e 9508      	RET
                 
                 __NEGMAN1:
00d77f 95e0      	COM  R30
00d780 95f0      	COM  R31
00d781 9560      	COM  R22
00d782 5fef      	SUBI R30,-1
00d783 4fff      	SBCI R31,-1
00d784 4f6f      	SBCI R22,-1
00d785 9508      	RET
                 
                 __SUBF12:
00d786 935f      	PUSH R21
00d787 df81      	RCALL __UNPACK
00d788 3890      	CPI  R25,0x80
00d789 f171      	BREQ __ADDF129
00d78a e850      	LDI  R21,0x80
00d78b 2615      	EOR  R1,R21
                 
00d78c c004      	RJMP __ADDF120
                 
                 __ADDF12:
00d78d 935f      	PUSH R21
00d78e df7a      	RCALL __UNPACK
00d78f 3890      	CPI  R25,0x80
00d790 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00d791 3870      	CPI  R23,0x80
00d792 f121      	BREQ __ADDF128
                 __ADDF121:
00d793 2f57      	MOV  R21,R23
00d794 1b59      	SUB  R21,R25
00d795 f12b      	BRVS __ADDF1211
00d796 f412      	BRPL __ADDF122
00d797 dfd7      	RCALL __SWAPACC
00d798 cffa      	RJMP __ADDF121
                 __ADDF122:
00d799 3158      	CPI  R21,24
00d79a f018      	BRLO __ADDF123
00d79b 27aa      	CLR  R26
00d79c 27bb      	CLR  R27
00d79d 2788      	CLR  R24
                 __ADDF123:
00d79e 3058      	CPI  R21,8
00d79f f028      	BRLO __ADDF124
00d7a0 2fab      	MOV  R26,R27
00d7a1 2fb8      	MOV  R27,R24
00d7a2 2788      	CLR  R24
00d7a3 5058      	SUBI R21,8
00d7a4 cff9      	RJMP __ADDF123
                 __ADDF124:
00d7a5 2355      	TST  R21
00d7a6 f029      	BREQ __ADDF126
                 __ADDF125:
00d7a7 9586      	LSR  R24
00d7a8 95b7      	ROR  R27
00d7a9 95a7      	ROR  R26
00d7aa 955a      	DEC  R21
00d7ab f7d9      	BRNE __ADDF125
                 __ADDF126:
00d7ac 2d50      	MOV  R21,R0
00d7ad 2551      	EOR  R21,R1
00d7ae f072      	BRMI __ADDF127
00d7af dfcb      	RCALL __UADD12
00d7b0 f438      	BRCC __ADDF129
00d7b1 9567      	ROR  R22
00d7b2 95f7      	ROR  R31
00d7b3 95e7      	ROR  R30
00d7b4 9573      	INC  R23
00d7b5 f413      	BRVC __ADDF129
00d7b6 c020      	RJMP __MAXRES
                 __ADDF128:
00d7b7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
00d7b8 df3e      	RCALL __REPACK
00d7b9 915f      	POP  R21
00d7ba 9508      	RET
                 __ADDF1211:
00d7bb f7d8      	BRCC __ADDF128
00d7bc cffb      	RJMP __ADDF129
                 __ADDF127:
00d7bd 1bea      	SUB  R30,R26
00d7be 0bfb      	SBC  R31,R27
00d7bf 0b68      	SBC  R22,R24
00d7c0 f051      	BREQ __ZERORES
00d7c1 f410      	BRCC __ADDF1210
00d7c2 9400      	COM  R0
00d7c3 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00d7c4 2366      	TST  R22
00d7c5 f392      	BRMI __ADDF129
00d7c6 0fee      	LSL  R30
00d7c7 1fff      	ROL  R31
00d7c8 1f66      	ROL  R22
00d7c9 957a      	DEC  R23
00d7ca f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00d7cb 27ee      	CLR  R30
00d7cc 27ff      	CLR  R31
00d7cd 2766      	CLR  R22
00d7ce 2777      	CLR  R23
00d7cf 915f      	POP  R21
00d7d0 9508      	RET
                 
                 __MINRES:
00d7d1 efef      	SER  R30
00d7d2 efff      	SER  R31
00d7d3 e76f      	LDI  R22,0x7F
00d7d4 ef7f      	SER  R23
00d7d5 915f      	POP  R21
00d7d6 9508      	RET
                 
                 __MAXRES:
00d7d7 efef      	SER  R30
00d7d8 efff      	SER  R31
00d7d9 e76f      	LDI  R22,0x7F
00d7da e77f      	LDI  R23,0x7F
00d7db 915f      	POP  R21
00d7dc 9508      	RET
                 
                 __MULF12:
00d7dd 935f      	PUSH R21
00d7de df2a      	RCALL __UNPACK
00d7df 3870      	CPI  R23,0x80
00d7e0 f351      	BREQ __ZERORES
00d7e1 3890      	CPI  R25,0x80
00d7e2 f341      	BREQ __ZERORES
00d7e3 2401      	EOR  R0,R1
00d7e4 9408      	SEC
00d7e5 1f79      	ADC  R23,R25
00d7e6 f423      	BRVC __MULF124
00d7e7 f31c      	BRLT __ZERORES
                 __MULF125:
00d7e8 2000      	TST  R0
00d7e9 f33a      	BRMI __MINRES
00d7ea cfec      	RJMP __MAXRES
                 __MULF124:
00d7eb 920f      	PUSH R0
00d7ec 931f      	PUSH R17
00d7ed 932f      	PUSH R18
00d7ee 933f      	PUSH R19
00d7ef 934f      	PUSH R20
00d7f0 2711      	CLR  R17
00d7f1 2722      	CLR  R18
00d7f2 2799      	CLR  R25
00d7f3 9f68      	MUL  R22,R24
00d7f4 01a0      	MOVW R20,R0
00d7f5 9f8f      	MUL  R24,R31
00d7f6 2d30      	MOV  R19,R0
00d7f7 0d41      	ADD  R20,R1
00d7f8 1f59      	ADC  R21,R25
00d7f9 9f6b      	MUL  R22,R27
00d7fa 0d30      	ADD  R19,R0
00d7fb 1d41      	ADC  R20,R1
00d7fc 1f59      	ADC  R21,R25
00d7fd 9f8e      	MUL  R24,R30
00d7fe d027      	RCALL __MULF126
00d7ff 9fbf      	MUL  R27,R31
00d800 d025      	RCALL __MULF126
00d801 9f6a      	MUL  R22,R26
00d802 d023      	RCALL __MULF126
00d803 9fbe      	MUL  R27,R30
00d804 d01d      	RCALL __MULF127
00d805 9faf      	MUL  R26,R31
00d806 d01b      	RCALL __MULF127
00d807 9fae      	MUL  R26,R30
00d808 0d11      	ADD  R17,R1
00d809 1f29      	ADC  R18,R25
00d80a 1f39      	ADC  R19,R25
00d80b 1f49      	ADC  R20,R25
00d80c 1f59      	ADC  R21,R25
00d80d 2fe3      	MOV  R30,R19
00d80e 2ff4      	MOV  R31,R20
00d80f 2f65      	MOV  R22,R21
00d810 2f52      	MOV  R21,R18
00d811 914f      	POP  R20
00d812 913f      	POP  R19
00d813 912f      	POP  R18
00d814 911f      	POP  R17
00d815 900f      	POP  R0
00d816 2366      	TST  R22
00d817 f02a      	BRMI __MULF122
00d818 0f55      	LSL  R21
00d819 1fee      	ROL  R30
00d81a 1fff      	ROL  R31
00d81b 1f66      	ROL  R22
00d81c c002      	RJMP __MULF123
                 __MULF122:
00d81d 9573      	INC  R23
00d81e f24b      	BRVS __MULF125
                 __MULF123:
00d81f decd      	RCALL __ROUND_REPACK
00d820 915f      	POP  R21
00d821 9508      	RET
                 
                 __MULF127:
00d822 0d10      	ADD  R17,R0
00d823 1d21      	ADC  R18,R1
00d824 1f39      	ADC  R19,R25
00d825 c002      	RJMP __MULF128
                 __MULF126:
00d826 0d20      	ADD  R18,R0
00d827 1d31      	ADC  R19,R1
                 __MULF128:
00d828 1f49      	ADC  R20,R25
00d829 1f59      	ADC  R21,R25
00d82a 9508      	RET
                 
                 __DIVF21:
00d82b 935f      	PUSH R21
00d82c dedc      	RCALL __UNPACK
00d82d 3870      	CPI  R23,0x80
00d82e f421      	BRNE __DIVF210
00d82f 2011      	TST  R1
                 __DIVF211:
00d830 f40a      	BRPL __DIVF219
00d831 cf9f      	RJMP __MINRES
                 __DIVF219:
00d832 cfa4      	RJMP __MAXRES
                 __DIVF210:
00d833 3890      	CPI  R25,0x80
00d834 f409      	BRNE __DIVF218
                 __DIVF217:
00d835 cf95      	RJMP __ZERORES
                 __DIVF218:
00d836 2401      	EOR  R0,R1
00d837 9408      	SEC
00d838 0b97      	SBC  R25,R23
00d839 f41b      	BRVC __DIVF216
00d83a f3d4      	BRLT __DIVF217
00d83b 2000      	TST  R0
00d83c cff3      	RJMP __DIVF211
                 __DIVF216:
00d83d 2f79      	MOV  R23,R25
00d83e 931f      	PUSH R17
00d83f 932f      	PUSH R18
00d840 933f      	PUSH R19
00d841 934f      	PUSH R20
00d842 2411      	CLR  R1
00d843 2711      	CLR  R17
00d844 2722      	CLR  R18
00d845 2733      	CLR  R19
00d846 2744      	CLR  R20
00d847 2755      	CLR  R21
00d848 e290      	LDI  R25,32
                 __DIVF212:
00d849 17ae      	CP   R26,R30
00d84a 07bf      	CPC  R27,R31
00d84b 0786      	CPC  R24,R22
00d84c 0741      	CPC  R20,R17
00d84d f030      	BRLO __DIVF213
00d84e 1bae      	SUB  R26,R30
00d84f 0bbf      	SBC  R27,R31
00d850 0b86      	SBC  R24,R22
00d851 0b41      	SBC  R20,R17
00d852 9408      	SEC
00d853 c001      	RJMP __DIVF214
                 __DIVF213:
00d854 9488      	CLC
                 __DIVF214:
00d855 1f55      	ROL  R21
00d856 1f22      	ROL  R18
00d857 1f33      	ROL  R19
00d858 1c11      	ROL  R1
00d859 1faa      	ROL  R26
00d85a 1fbb      	ROL  R27
00d85b 1f88      	ROL  R24
00d85c 1f44      	ROL  R20
00d85d 959a      	DEC  R25
00d85e f751      	BRNE __DIVF212
00d85f 01f9      	MOVW R30,R18
00d860 2d61      	MOV  R22,R1
00d861 914f      	POP  R20
00d862 913f      	POP  R19
00d863 912f      	POP  R18
00d864 911f      	POP  R17
00d865 2366      	TST  R22
00d866 f032      	BRMI __DIVF215
00d867 0f55      	LSL  R21
00d868 1fee      	ROL  R30
00d869 1fff      	ROL  R31
00d86a 1f66      	ROL  R22
00d86b 957a      	DEC  R23
00d86c f243      	BRVS __DIVF217
                 __DIVF215:
00d86d de7f      	RCALL __ROUND_REPACK
00d86e 915f      	POP  R21
00d86f 9508      	RET
                 
                 __CMPF12:
00d870 2399      	TST  R25
00d871 f09a      	BRMI __CMPF120
00d872 2377      	TST  R23
00d873 f042      	BRMI __CMPF121
00d874 1797      	CP   R25,R23
00d875 f048      	BRLO __CMPF122
00d876 f429      	BRNE __CMPF121
00d877 17ae      	CP   R26,R30
00d878 07bf      	CPC  R27,R31
00d879 0786      	CPC  R24,R22
00d87a f020      	BRLO __CMPF122
00d87b f031      	BREQ __CMPF123
                 __CMPF121:
00d87c 9498      	CLZ
00d87d 9488      	CLC
00d87e 9508      	RET
                 __CMPF122:
00d87f 9498      	CLZ
00d880 9408      	SEC
00d881 9508      	RET
                 __CMPF123:
00d882 9418      	SEZ
00d883 9488      	CLC
00d884 9508      	RET
                 __CMPF120:
00d885 2377      	TST  R23
00d886 f7c2      	BRPL __CMPF122
00d887 1797      	CP   R25,R23
00d888 f398      	BRLO __CMPF121
00d889 f7a9      	BRNE __CMPF122
00d88a 17ea      	CP   R30,R26
00d88b 07fb      	CPC  R31,R27
00d88c 0768      	CPC  R22,R24
00d88d f388      	BRLO __CMPF122
00d88e f399      	BREQ __CMPF123
00d88f cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00d890 2400      	CLR  R0
00d891 0daf      	ADD  R26,R15
00d892 1db0      	ADC  R27,R0
00d893 9508      	RET
                 
                 __ADDD12:
00d894 0fea      	ADD  R30,R26
00d895 1ffb      	ADC  R31,R27
00d896 1f68      	ADC  R22,R24
00d897 1f79      	ADC  R23,R25
00d898 9508      	RET
                 
                 __ADDD21:
00d899 0fae      	ADD  R26,R30
00d89a 1fbf      	ADC  R27,R31
00d89b 1f86      	ADC  R24,R22
00d89c 1f97      	ADC  R25,R23
00d89d 9508      	RET
                 
                 __SUBD12:
00d89e 1bea      	SUB  R30,R26
00d89f 0bfb      	SBC  R31,R27
00d8a0 0b68      	SBC  R22,R24
00d8a1 0b79      	SBC  R23,R25
00d8a2 9508      	RET
                 
                 __SUBD21:
00d8a3 1bae      	SUB  R26,R30
00d8a4 0bbf      	SBC  R27,R31
00d8a5 0b86      	SBC  R24,R22
00d8a6 0b97      	SBC  R25,R23
00d8a7 9508      	RET
                 
                 __ANDD12:
00d8a8 23ea      	AND  R30,R26
00d8a9 23fb      	AND  R31,R27
00d8aa 2368      	AND  R22,R24
00d8ab 2379      	AND  R23,R25
00d8ac 9508      	RET
                 
                 __ORD12:
00d8ad 2bea      	OR   R30,R26
00d8ae 2bfb      	OR   R31,R27
00d8af 2b68      	OR   R22,R24
00d8b0 2b79      	OR   R23,R25
00d8b1 9508      	RET
                 
                 __ANEGW1:
00d8b2 95f1      	NEG  R31
00d8b3 95e1      	NEG  R30
00d8b4 40f0      	SBCI R31,0
00d8b5 9508      	RET
                 
                 __ANEGD1:
00d8b6 95f0      	COM  R31
00d8b7 9560      	COM  R22
00d8b8 9570      	COM  R23
00d8b9 95e1      	NEG  R30
00d8ba 4fff      	SBCI R31,-1
00d8bb 4f6f      	SBCI R22,-1
00d8bc 4f7f      	SBCI R23,-1
00d8bd 9508      	RET
                 
                 __LSLW12:
00d8be 23ee      	TST  R30
00d8bf 2e0e      	MOV  R0,R30
00d8c0 01fd      	MOVW R30,R26
00d8c1 f021      	BREQ __LSLW12R
                 __LSLW12L:
00d8c2 0fee      	LSL  R30
00d8c3 1fff      	ROL  R31
00d8c4 940a      	DEC  R0
00d8c5 f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00d8c6 9508      	RET
                 
                 __LSLD12:
00d8c7 23ee      	TST  R30
00d8c8 2e0e      	MOV  R0,R30
00d8c9 01fd      	MOVW R30,R26
00d8ca 01bc      	MOVW R22,R24
00d8cb f031      	BREQ __LSLD12R
                 __LSLD12L:
00d8cc 0fee      	LSL  R30
00d8cd 1fff      	ROL  R31
00d8ce 1f66      	ROL  R22
00d8cf 1f77      	ROL  R23
00d8d0 940a      	DEC  R0
00d8d1 f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00d8d2 9508      	RET
                 
                 __LSRD12:
00d8d3 23ee      	TST  R30
00d8d4 2e0e      	MOV  R0,R30
00d8d5 01fd      	MOVW R30,R26
00d8d6 01bc      	MOVW R22,R24
00d8d7 f031      	BREQ __LSRD12R
                 __LSRD12L:
00d8d8 9576      	LSR  R23
00d8d9 9567      	ROR  R22
00d8da 95f7      	ROR  R31
00d8db 95e7      	ROR  R30
00d8dc 940a      	DEC  R0
00d8dd f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00d8de 9508      	RET
                 
                 __LSLW4:
00d8df 0fee      	LSL  R30
00d8e0 1fff      	ROL  R31
                 __LSLW3:
00d8e1 0fee      	LSL  R30
00d8e2 1fff      	ROL  R31
                 __LSLW2:
00d8e3 0fee      	LSL  R30
00d8e4 1fff      	ROL  R31
00d8e5 0fee      	LSL  R30
00d8e6 1fff      	ROL  R31
00d8e7 9508      	RET
                 
                 __ASRW4:
00d8e8 95f5      	ASR  R31
00d8e9 95e7      	ROR  R30
                 __ASRW3:
00d8ea 95f5      	ASR  R31
00d8eb 95e7      	ROR  R30
                 __ASRW2:
00d8ec 95f5      	ASR  R31
00d8ed 95e7      	ROR  R30
00d8ee 95f5      	ASR  R31
00d8ef 95e7      	ROR  R30
00d8f0 9508      	RET
                 
                 __LSRW4:
00d8f1 95f6      	LSR  R31
00d8f2 95e7      	ROR  R30
                 __LSRW3:
00d8f3 95f6      	LSR  R31
00d8f4 95e7      	ROR  R30
                 __LSRW2:
00d8f5 95f6      	LSR  R31
00d8f6 95e7      	ROR  R30
00d8f7 95f6      	LSR  R31
00d8f8 95e7      	ROR  R30
00d8f9 9508      	RET
                 
                 __LSRD1:
00d8fa 9576      	LSR  R23
00d8fb 9567      	ROR  R22
00d8fc 95f7      	ROR  R31
00d8fd 95e7      	ROR  R30
00d8fe 9508      	RET
                 
                 __LSLD1:
00d8ff 0fee      	LSL  R30
00d900 1fff      	ROL  R31
00d901 1f66      	ROL  R22
00d902 1f77      	ROL  R23
00d903 9508      	RET
                 
                 __ASRW8:
00d904 2fef      	MOV  R30,R31
00d905 27ff      	CLR  R31
00d906 fde7      	SBRC R30,7
00d907 efff      	SER  R31
00d908 9508      	RET
                 
                 __LSRD16:
00d909 2fe6      	MOV  R30,R22
00d90a 2ff7      	MOV  R31,R23
00d90b e060      	LDI  R22,0
00d90c e070      	LDI  R23,0
00d90d 9508      	RET
                 
                 __LSLD16:
00d90e 2f6e      	MOV  R22,R30
00d90f 2f7f      	MOV  R23,R31
00d910 e0e0      	LDI  R30,0
00d911 e0f0      	LDI  R31,0
00d912 9508      	RET
                 
                 __CBD1:
00d913 2ffe      	MOV  R31,R30
00d914 0fff      	ADD  R31,R31
00d915 0bff      	SBC  R31,R31
00d916 2f6f      	MOV  R22,R31
00d917 2f7f      	MOV  R23,R31
00d918 9508      	RET
                 
                 __CWD1:
00d919 2f6f      	MOV  R22,R31
00d91a 0f66      	ADD  R22,R22
00d91b 0b66      	SBC  R22,R22
00d91c 2f76      	MOV  R23,R22
00d91d 9508      	RET
                 
                 __COMD1:
00d91e 95e0      	COM  R30
00d91f 95f0      	COM  R31
00d920 9560      	COM  R22
00d921 9570      	COM  R23
00d922 9508      	RET
                 
                 __EQB12:
00d923 17ea      	CP   R30,R26
00d924 e0e1      	LDI  R30,1
00d925 f009      	BREQ __EQB12T
00d926 27ee      	CLR  R30
                 __EQB12T:
00d927 9508      	RET
                 
                 __LNEGB1:
00d928 23ee      	TST  R30
00d929 e0e1      	LDI  R30,1
00d92a f009      	BREQ __LNEGB1F
00d92b 27ee      	CLR  R30
                 __LNEGB1F:
00d92c 9508      	RET
                 
                 __LNEGW1:
00d92d 2bef      	OR   R30,R31
00d92e e0e1      	LDI  R30,1
00d92f f009      	BREQ __LNEGW1F
00d930 e0e0      	LDI  R30,0
                 __LNEGW1F:
00d931 9508      	RET
                 
                 __MULW12U:
00d932 9ffa      	MUL  R31,R26
00d933 2df0      	MOV  R31,R0
00d934 9feb      	MUL  R30,R27
00d935 0df0      	ADD  R31,R0
00d936 9fea      	MUL  R30,R26
00d937 2de0      	MOV  R30,R0
00d938 0df1      	ADD  R31,R1
00d939 9508      	RET
                 
                 __MULD12U:
00d93a 9f7a      	MUL  R23,R26
00d93b 2d70      	MOV  R23,R0
00d93c 9f6b      	MUL  R22,R27
00d93d 0d70      	ADD  R23,R0
00d93e 9ff8      	MUL  R31,R24
00d93f 0d70      	ADD  R23,R0
00d940 9fe9      	MUL  R30,R25
00d941 0d70      	ADD  R23,R0
00d942 9f6a      	MUL  R22,R26
00d943 2d60      	MOV  R22,R0
00d944 0d71      	ADD  R23,R1
00d945 9ffb      	MUL  R31,R27
00d946 0d60      	ADD  R22,R0
00d947 1d71      	ADC  R23,R1
00d948 9fe8      	MUL  R30,R24
00d949 0d60      	ADD  R22,R0
00d94a 1d71      	ADC  R23,R1
00d94b 2788      	CLR  R24
00d94c 9ffa      	MUL  R31,R26
00d94d 2df0      	MOV  R31,R0
00d94e 0d61      	ADD  R22,R1
00d94f 1f78      	ADC  R23,R24
00d950 9feb      	MUL  R30,R27
00d951 0df0      	ADD  R31,R0
00d952 1d61      	ADC  R22,R1
00d953 1f78      	ADC  R23,R24
00d954 9fea      	MUL  R30,R26
00d955 2de0      	MOV  R30,R0
00d956 0df1      	ADD  R31,R1
00d957 1f68      	ADC  R22,R24
00d958 1f78      	ADC  R23,R24
00d959 9508      	RET
                 
                 __MULB1W2U:
00d95a 2f6e      	MOV  R22,R30
00d95b 9f6a      	MUL  R22,R26
00d95c 01f0      	MOVW R30,R0
00d95d 9f6b      	MUL  R22,R27
00d95e 0df0      	ADD  R31,R0
00d95f 9508      	RET
                 
                 __MULW12:
00d960 d081      	RCALL __CHKSIGNW
00d961 dfd0      	RCALL __MULW12U
00d962 f40e      	BRTC __MULW121
00d963 df4e      	RCALL __ANEGW1
                 __MULW121:
00d964 9508      	RET
                 
                 __DIVB21U:
00d965 2400      	CLR  R0
00d966 e098      	LDI  R25,8
                 __DIVB21U1:
00d967 0faa      	LSL  R26
00d968 1c00      	ROL  R0
00d969 1a0e      	SUB  R0,R30
00d96a f410      	BRCC __DIVB21U2
00d96b 0e0e      	ADD  R0,R30
00d96c c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00d96d 60a1      	SBR  R26,1
                 __DIVB21U3:
00d96e 959a      	DEC  R25
00d96f f7b9      	BRNE __DIVB21U1
00d970 2fea      	MOV  R30,R26
00d971 2da0      	MOV  R26,R0
00d972 9508      	RET
                 
                 __DIVB21:
00d973 d062      	RCALL __CHKSIGNB
00d974 dff0      	RCALL __DIVB21U
00d975 f40e      	BRTC __DIVB211
00d976 95e1      	NEG  R30
                 __DIVB211:
00d977 9508      	RET
                 
                 __DIVW21U:
00d978 2400      	CLR  R0
00d979 2411      	CLR  R1
00d97a e190      	LDI  R25,16
                 __DIVW21U1:
00d97b 0faa      	LSL  R26
00d97c 1fbb      	ROL  R27
00d97d 1c00      	ROL  R0
00d97e 1c11      	ROL  R1
00d97f 1a0e      	SUB  R0,R30
00d980 0a1f      	SBC  R1,R31
00d981 f418      	BRCC __DIVW21U2
00d982 0e0e      	ADD  R0,R30
00d983 1e1f      	ADC  R1,R31
00d984 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00d985 60a1      	SBR  R26,1
                 __DIVW21U3:
00d986 959a      	DEC  R25
00d987 f799      	BRNE __DIVW21U1
00d988 01fd      	MOVW R30,R26
00d989 01d0      	MOVW R26,R0
00d98a 9508      	RET
                 
                 __DIVW21:
00d98b d056      	RCALL __CHKSIGNW
00d98c dfeb      	RCALL __DIVW21U
00d98d f40e      	BRTC __DIVW211
00d98e df23      	RCALL __ANEGW1
                 __DIVW211:
00d98f 9508      	RET
                 
                 __DIVD21U:
00d990 933f      	PUSH R19
00d991 934f      	PUSH R20
00d992 935f      	PUSH R21
00d993 2400      	CLR  R0
00d994 2411      	CLR  R1
00d995 2744      	CLR  R20
00d996 2755      	CLR  R21
00d997 e230      	LDI  R19,32
                 __DIVD21U1:
00d998 0faa      	LSL  R26
00d999 1fbb      	ROL  R27
00d99a 1f88      	ROL  R24
00d99b 1f99      	ROL  R25
00d99c 1c00      	ROL  R0
00d99d 1c11      	ROL  R1
00d99e 1f44      	ROL  R20
00d99f 1f55      	ROL  R21
00d9a0 1a0e      	SUB  R0,R30
00d9a1 0a1f      	SBC  R1,R31
00d9a2 0b46      	SBC  R20,R22
00d9a3 0b57      	SBC  R21,R23
00d9a4 f428      	BRCC __DIVD21U2
00d9a5 0e0e      	ADD  R0,R30
00d9a6 1e1f      	ADC  R1,R31
00d9a7 1f46      	ADC  R20,R22
00d9a8 1f57      	ADC  R21,R23
00d9a9 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00d9aa 60a1      	SBR  R26,1
                 __DIVD21U3:
00d9ab 953a      	DEC  R19
00d9ac f759      	BRNE __DIVD21U1
00d9ad 01fd      	MOVW R30,R26
00d9ae 01bc      	MOVW R22,R24
00d9af 01d0      	MOVW R26,R0
00d9b0 01ca      	MOVW R24,R20
00d9b1 915f      	POP  R21
00d9b2 914f      	POP  R20
00d9b3 913f      	POP  R19
00d9b4 9508      	RET
                 
                 __MODB21:
00d9b5 94e8      	CLT
00d9b6 ffa7      	SBRS R26,7
00d9b7 c002      	RJMP __MODB211
00d9b8 95a1      	NEG  R26
00d9b9 9468      	SET
                 __MODB211:
00d9ba fde7      	SBRC R30,7
00d9bb 95e1      	NEG  R30
00d9bc dfa8      	RCALL __DIVB21U
00d9bd 2fea      	MOV  R30,R26
00d9be f40e      	BRTC __MODB212
00d9bf 95e1      	NEG  R30
                 __MODB212:
00d9c0 9508      	RET
                 
                 __MODW21U:
00d9c1 dfb6      	RCALL __DIVW21U
00d9c2 01fd      	MOVW R30,R26
00d9c3 9508      	RET
                 
                 __MODW21:
00d9c4 94e8      	CLT
00d9c5 ffb7      	SBRS R27,7
00d9c6 c004      	RJMP __MODW211
00d9c7 95a0      	COM  R26
00d9c8 95b0      	COM  R27
00d9c9 9611      	ADIW R26,1
00d9ca 9468      	SET
                 __MODW211:
00d9cb fdf7      	SBRC R31,7
00d9cc dee5      	RCALL __ANEGW1
00d9cd dfaa      	RCALL __DIVW21U
00d9ce 01fd      	MOVW R30,R26
00d9cf f40e      	BRTC __MODW212
00d9d0 dee1      	RCALL __ANEGW1
                 __MODW212:
00d9d1 9508      	RET
                 
                 __MODD21U:
00d9d2 dfbd      	RCALL __DIVD21U
00d9d3 01fd      	MOVW R30,R26
00d9d4 01bc      	MOVW R22,R24
00d9d5 9508      	RET
                 
                 __CHKSIGNB:
00d9d6 94e8      	CLT
00d9d7 ffe7      	SBRS R30,7
00d9d8 c002      	RJMP __CHKSB1
00d9d9 95e1      	NEG  R30
00d9da 9468      	SET
                 __CHKSB1:
00d9db ffa7      	SBRS R26,7
00d9dc c004      	RJMP __CHKSB2
00d9dd 95a1      	NEG  R26
00d9de f800      	BLD  R0,0
00d9df 9403      	INC  R0
00d9e0 fa00      	BST  R0,0
                 __CHKSB2:
00d9e1 9508      	RET
                 
                 __CHKSIGNW:
00d9e2 94e8      	CLT
00d9e3 fff7      	SBRS R31,7
00d9e4 c002      	RJMP __CHKSW1
00d9e5 decc      	RCALL __ANEGW1
00d9e6 9468      	SET
                 __CHKSW1:
00d9e7 ffb7      	SBRS R27,7
00d9e8 c006      	RJMP __CHKSW2
00d9e9 95a0      	COM  R26
00d9ea 95b0      	COM  R27
00d9eb 9611      	ADIW R26,1
00d9ec f800      	BLD  R0,0
00d9ed 9403      	INC  R0
00d9ee fa00      	BST  R0,0
                 __CHKSW2:
00d9ef 9508      	RET
                 
                 __GETW1P:
00d9f0 91ed      	LD   R30,X+
00d9f1 91fc      	LD   R31,X
00d9f2 9711      	SBIW R26,1
00d9f3 9508      	RET
                 
                 __GETD1P:
00d9f4 91ed      	LD   R30,X+
00d9f5 91fd      	LD   R31,X+
00d9f6 916d      	LD   R22,X+
00d9f7 917c      	LD   R23,X
00d9f8 9713      	SBIW R26,3
00d9f9 9508      	RET
                 
                 __GETD1P_INC:
00d9fa 91ed      	LD   R30,X+
00d9fb 91fd      	LD   R31,X+
00d9fc 916d      	LD   R22,X+
00d9fd 917d      	LD   R23,X+
00d9fe 9508      	RET
                 
                 __PUTDP1:
00d9ff 93ed      	ST   X+,R30
00da00 93fd      	ST   X+,R31
00da01 936d      	ST   X+,R22
00da02 937c      	ST   X,R23
00da03 9508      	RET
                 
                 __PUTDP1_DEC:
00da04 937e      	ST   -X,R23
00da05 936e      	ST   -X,R22
00da06 93fe      	ST   -X,R31
00da07 93ee      	ST   -X,R30
00da08 9508      	RET
                 
                 __GETD1PF:
00da09 bf6b      	OUT  RAMPZ,R22
00da0a 9007      	ELPM R0,Z+
00da0b 9017      	ELPM R1,Z+
00da0c 9167      	ELPM R22,Z+
00da0d 9176      	ELPM R23,Z
00da0e 01f0      	MOVW R30,R0
00da0f 9508      	RET
                 
                 __GETD1S0:
00da10 81e8      	LD   R30,Y
00da11 81f9      	LDD  R31,Y+1
00da12 816a      	LDD  R22,Y+2
00da13 817b      	LDD  R23,Y+3
00da14 9508      	RET
                 
                 __GETD2S0:
00da15 81a8      	LD   R26,Y
00da16 81b9      	LDD  R27,Y+1
00da17 818a      	LDD  R24,Y+2
00da18 819b      	LDD  R25,Y+3
00da19 9508      	RET
                 
                 __PUTD1S0:
00da1a 83e8      	ST   Y,R30
00da1b 83f9      	STD  Y+1,R31
00da1c 836a      	STD  Y+2,R22
00da1d 837b      	STD  Y+3,R23
00da1e 9508      	RET
                 
                 __PUTDZ20:
00da1f 83a0      	ST   Z,R26
00da20 83b1      	STD  Z+1,R27
00da21 8382      	STD  Z+2,R24
00da22 8393      	STD  Z+3,R25
00da23 9508      	RET
                 
                 __CLRD1S0:
00da24 83e8      	ST   Y,R30
00da25 83e9      	STD  Y+1,R30
00da26 83ea      	STD  Y+2,R30
00da27 83eb      	STD  Y+3,R30
00da28 9508      	RET
                 
                 __PUTPARD1:
00da29 937a      	ST   -Y,R23
00da2a 936a      	ST   -Y,R22
00da2b 93fa      	ST   -Y,R31
00da2c 93ea      	ST   -Y,R30
00da2d 9508      	RET
                 
                 __PUTPARD2:
00da2e 939a      	ST   -Y,R25
00da2f 938a      	ST   -Y,R24
00da30 93ba      	ST   -Y,R27
00da31 93aa      	ST   -Y,R26
00da32 9508      	RET
                 
                 __PUTPARL:
00da33 27bb      	CLR  R27
                 __PUTPAR:
00da34 0fea      	ADD  R30,R26
00da35 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00da36 9002      	LD   R0,-Z
00da37 920a      	ST   -Y,R0
00da38 9711      	SBIW R26,1
00da39 f7e1      	BRNE __PUTPAR0
00da3a 9508      	RET
                 
                 __SWAPD12:
00da3b 2e18      	MOV  R1,R24
00da3c 2f86      	MOV  R24,R22
00da3d 2d61      	MOV  R22,R1
00da3e 2e19      	MOV  R1,R25
00da3f 2f97      	MOV  R25,R23
00da40 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00da41 2e1b      	MOV  R1,R27
00da42 2fbf      	MOV  R27,R31
00da43 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00da44 2e1a      	MOV  R1,R26
00da45 2fae      	MOV  R26,R30
00da46 2de1      	MOV  R30,R1
00da47 9508      	RET
                 
                 __EEPROMRDD:
00da48 9612      	ADIW R26,2
00da49 d002      	RCALL __EEPROMRDW
00da4a 01bf      	MOVW R22,R30
00da4b 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00da4c 9611      	ADIW R26,1
00da4d d002      	RCALL __EEPROMRDB
00da4e 2ffe      	MOV  R31,R30
00da4f 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00da50 99f9      	SBIC EECR,EEWE
00da51 cffe      	RJMP __EEPROMRDB
00da52 93ff      	PUSH R31
00da53 b7ff      	IN   R31,SREG
00da54 94f8      	CLI
00da55 bda1      	OUT  EEARL,R26
00da56 bdb2      	OUT  EEARH,R27
00da57 9af8      	SBI  EECR,EERE
00da58 b5e0      	IN   R30,EEDR
00da59 bfff      	OUT  SREG,R31
00da5a 91ff      	POP  R31
00da5b 9508      	RET
                 
                 __EEPROMWRD:
00da5c d007      	RCALL __EEPROMWRW
00da5d 9612      	ADIW R26,2
00da5e 010f      	MOVW R0,R30
00da5f 01fb      	MOVW R30,R22
00da60 d003      	RCALL __EEPROMWRW
00da61 01f0      	MOVW R30,R0
00da62 9712      	SBIW R26,2
00da63 9508      	RET
                 
                 __EEPROMWRW:
00da64 d007      	RCALL __EEPROMWRB
00da65 9611      	ADIW R26,1
00da66 93ef      	PUSH R30
00da67 2fef      	MOV  R30,R31
00da68 d003      	RCALL __EEPROMWRB
00da69 91ef      	POP  R30
00da6a 9711      	SBIW R26,1
00da6b 9508      	RET
                 
                 __EEPROMWRB:
00da6c 9bf9      	SBIS EECR,EEWE
00da6d c002      	RJMP __EEPROMWRB1
00da6e 95a8      	WDR
00da6f cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00da70 b79f      	IN   R25,SREG
00da71 94f8      	CLI
00da72 bda1      	OUT  EEARL,R26
00da73 bdb2      	OUT  EEARH,R27
00da74 9af8      	SBI  EECR,EERE
00da75 b580      	IN   R24,EEDR
00da76 17e8      	CP   R30,R24
00da77 f019      	BREQ __EEPROMWRB0
00da78 bde0      	OUT  EEDR,R30
00da79 9afa      	SBI  EECR,EEMWE
00da7a 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00da7b bf9f      	OUT  SREG,R25
00da7c 9508      	RET
                 
                 __CPD10:
00da7d 9730      	SBIW R30,0
00da7e 4060      	SBCI R22,0
00da7f 4070      	SBCI R23,0
00da80 9508      	RET
                 
                 __CPW02:
00da81 2400      	CLR  R0
00da82 160a      	CP   R0,R26
00da83 060b      	CPC  R0,R27
00da84 9508      	RET
                 
                 __CPD20:
00da85 9710      	SBIW R26,0
00da86 4080      	SBCI R24,0
00da87 4090      	SBCI R25,0
00da88 9508      	RET
                 
                 __CPD02:
00da89 2400      	CLR  R0
00da8a 160a      	CP   R0,R26
00da8b 060b      	CPC  R0,R27
00da8c 0608      	CPC  R0,R24
00da8d 0609      	CPC  R0,R25
00da8e 9508      	RET
                 
                 __CPD12:
00da8f 17ea      	CP   R30,R26
00da90 07fb      	CPC  R31,R27
00da91 0768      	CPC  R22,R24
00da92 0779      	CPC  R23,R25
00da93 9508      	RET
                 
                 __CPD21:
00da94 17ae      	CP   R26,R30
00da95 07bf      	CPC  R27,R31
00da96 0786      	CPC  R24,R22
00da97 0797      	CPC  R25,R23
00da98 9508      	RET
                 
                 __SAVELOCR6:
00da99 935a      	ST   -Y,R21
                 __SAVELOCR5:
00da9a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00da9b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00da9c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00da9d 931a      	ST   -Y,R17
00da9e 930a      	ST   -Y,R16
00da9f 9508      	RET
                 
                 __LOADLOCR6:
00daa0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00daa1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00daa2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00daa3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00daa4 8119      	LDD  R17,Y+1
00daa5 8108      	LD   R16,Y
00daa6 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00daa7 0fac      	ADD  R26,R28
00daa8 1fbd      	ADC  R27,R29
00daa9 bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00daaa 9007      	ELPM R0,Z+
00daab 920d      	ST   X+,R0
00daac 958a      	DEC  R24
00daad f7e1      	BRNE __INITLOC0
00daae 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 473 r1 :  67 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  14 
r16: 832 r17: 950 r18: 510 r19: 400 r20: 306 r21: 243 r22:1382 r23:1232 
r24: 433 r25: 316 r26:4436 r27:1608 r28: 513 r29:  23 r30:7909 r31:3275 
x  : 570 y  :3960 z  : 619 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 225 add   : 236 
adiw  : 791 and   :  14 andi  : 195 asr   :   6 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  19 brcs  :   5 break :   0 breq  : 622 
brge  : 186 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 129 
brlt  :  68 brmi  :  32 brne  : 866 brpl  : 157 brsh  : 103 brtc  :   9 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  :6688 
cbi   :  41 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 201 cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :  28 
cp    : 113 cpc   : 555 cpi   :1169 cpse  :   0 dec   :  22 des   :   0 
eicall:  11 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 109 inc   :   7 jmp   : 371 
ld    : 612 ldd   :2847 ldi   :7093 lds   : 682 lpm   :   0 lsl   :  40 
lsr   :  21 mov   : 375 movw  :1180 mul   : 114 muls  :   4 mulsu :   0 
neg   :  11 nop   :   1 or    :  65 ori   :  51 out   : 113 pop   : 394 
push  : 394 rcall : 285 ret   :1001 reti  :   5 rjmp  :1739 rol   :  60 
ror   :  33 sbc   :  39 sbci  : 676 sbi   :  32 sbic  :   5 sbis  :   9 
sbiw  : 263 sbr   :   5 sbrc  :  17 sbrs  :  59 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  17 ses   :   0 set   :   8 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1171 std   : 496 sts   : 506 
sub   :  32 subi  : 730 swap  :   7 tst   : 166 wdr   :  12 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x01b55e  85362  26604 111966  262144  42.7%
[.dseg] 0x000200 0x001ab1      0   3521   3521    8703  40.5%
[.eseg] 0x000000 0x00065d      0   1629   1629    4096  39.8%

Assembly complete, 0 errors, 42 warnings
