
AVRASM ver. 2.1.30  C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm Thu Nov 19 19:08:19 2015

C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 35ea 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 425c 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 426d 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 4269 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 4265 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 4006 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 4286 	JMP  _timer3_ovf_isr
000048 940c 4128 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 42a2 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 4134 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 4152 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 2e30
000077 3432
000078 0062      	.DB  0x30,0x2E,0x32,0x34,0x62,0x0
                 _tempTable:
000079 0000
00007a c2a0
00007b 0000
00007c c28c      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0x8C,0xC2
00007d 0000
00007e c270
00007f 0000
000080 c248      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0x48,0xC2
000081 0000
000082 c220
000083 0000
000084 c1f0      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0xF0,0xC1
000085 0000
000086 c1a0
000087 0000
000088 c120      	.DB  0x0,0x0,0xA0,0xC1,0x0,0x0,0x20,0xC1
000089 0000
00008a 0000
00008b 0000
00008c 4120      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x41
00008d 0000
00008e 41a0
00008f 0000
000090 41f0      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0xF0,0x41
000091 0000
000092 4220
000093 0000
000094 4248      	.DB  0x0,0x0,0x20,0x42,0x0,0x0,0x48,0x42
000095 0000
000096 4270      	.DB  0x0,0x0,0x70,0x42
                 _adcTable:
000097 6333
000098 4391
000099 85fa
00009a 439a      	.DB  0x33,0x63,0x91,0x43,0xFA,0x85,0x9A,0x43
00009b 5c05
00009c 43a3
00009d e979
00009e 43ab      	.DB  0x5,0x5C,0xA3,0x43,0x79,0xE9,0xAB,0x43
00009f 3237
0000a0 43b4
0000a1 39a0
0000a2 43bc      	.DB  0x37,0x32,0xB4,0x43,0xA0,0x39,0xBC,0x43
0000a3 030f
0000a4 43c4
0000a5 917f
0000a6 43cb      	.DB  0xF,0x3,0xC4,0x43,0x7F,0x91,0xCB,0x43
0000a7 e7ab
0000a8 43d2
0000a9 0810
0000aa 43da      	.DB  0xAB,0xE7,0xD2,0x43,0x10,0x8,0xDA,0x43
0000ab f4fb
0000ac 43e0
0000ad b08d
0000ae 43e7      	.DB  0xFB,0xF4,0xE0,0x43,0x8D,0xB0,0xE7,0x43
0000af 3cc6
0000b0 43ee
0000b1 9b99
0000b2 43f4      	.DB  0xC6,0x3C,0xEE,0x43,0x99,0x9B,0xF4,0x43
0000b3 ceb5
0000b4 43fa      	.DB  0xB5,0xCE,0xFA,0x43
                 _error_msg:
0000b5 4e82
0000b6 0000
0000b7 4e83
0000b8 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
0000b9 4e8f
0000ba 0000
0000bb 4e9a
0000bc 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
0000bd 4ea7
0000be 0000
0000bf 4eb2
0000c0 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
0000c1 4ebd
0000c2 0000
0000c3 4ecd
0000c4 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
0000c5 4ed7
0000c6 0000
0000c7 4ee0
0000c8 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
0000c9 4ef2
0000ca 0000
0000cb 4f05
0000cc 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
0000cd 4f16
0000ce 0000
0000cf 4f25
0000d0 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
0000d1 4f36
0000d2 0000
0000d3 4f46
0000d4 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
0000d5 4324
0000d6 444d
0000d7 4453
0000d8 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
0000d9 4324
0000da 444d
0000db 4152
0000dc 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000dd 4324
0000de 444d
0000df 4c43
0000e0 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000e1 4324
0000e2 444d
0000e3 5653
0000e4 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000e5 4324
0000e6 444d
0000e7 4e53
0000e8 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000e9 4324
0000ea 444d
0000eb 4544
0000ec 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000ed 4324
0000ee 444d
0000ef 4444
0000f0 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000f1 4324
0000f2 444d
0000f3 5353
0000f4 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000f5 4324
0000f6 444d
0000f7 5352
0000f8 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _cmdGetADCSensor:
0000f9 4324
0000fa 444d
0000fb 4147
0000fc 0053      	.DB  0x24,0x43,0x4D,0x44,0x47,0x41,0x53,0x0
                 _k1:
0000fd 2220
0000fe 2b2a
0000ff 5b2c
000100 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
000101 7f7c
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1238): warning: .cseg .db misalignment - padding zero byte
000102 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
000103 0000
000104 0000      	.DW  0,0
                 
                 _0x3:
000105 0000
000106 0000
000107 0000
000108 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000109 0000
00010a 0a3d
00010b 3fd7
00010c 0000      	.DB  0x0,0x0,0x3D,0xA,0xD7,0x3F,0x0,0x0
00010d 0000
00010e 0000
00010f 0000
000110 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000111 0000
000112 0000
000113 0000
000114 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000115 0000
000116 0000
000117 0000
000118 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000119 0000
00011a 0000
00011b 0000
00011c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011d 0000
00011e 0000
00011f 0000
000120 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000121 0000
000122 0000
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1252): warning: .cseg .db misalignment - padding zero byte
000123 0000      	.DB  0x0,0x0,0x0,0x0,0x0
                 _0xA5:
000124 ffff
000125 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
000126 0a0d
000127 2d2d
000128 2d2d
000129 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
00012a 4920
00012b 696e
00012c 6974
00012d 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
00012e 4320
00012f 6d6f
000130 6c70
000131 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
000132 2065
000133 2d2d
000134 2d2d
000135 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000136 0a0d
000137 4300
000138 6e6f
000139 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
00013a 7463
00013b 3a20
00013c 6320
00013d 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
00013e 6174
00013f 7463
000140 742e
000141 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
000142 6e61
000143 6740
000144 616d
000145 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
000146 632e
000147 6d6f
000148 0a0d
000149 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
00014a 616d
00014b 6e69
00014c 203e
00014d 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
00014e 5374
00014f 6e65
000150 6f73
000151 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000152 6e6f
000153 6966
000154 2867
000155 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000156 2029
000157 7265
000158 6f72
000159 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
00015a 000a
00015b 6d3c
00015c 6961
00015d 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
00015e 6120
00015f 6464
000160 6553
000161 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
000162 726f
000163 6144
000164 6174
000165 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000166 7565
000167 2865
000168 6425
000169 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
00016a 312e
00016b 2966
00016c 6620
00016d 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
00016e 656c
00016f 0d64
000170 000a
000171 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
000172 6961
000173 3e6e
000174 7520
000175 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000176 7461
000177 5365
000178 6174
000179 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
00017a 2873
00017b 2029
00017c 6166
00017d 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00017e 6465
00017f 0a0d
000180 3c00
000181 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
000182 6e69
000183 203e
000184 706f
000185 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000186 7461
000187 6e69
000188 2067
000189 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
00018a 6564
00018b 6520
00018c 7272
00018d 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
00018e 2121
00018f 5b20
000190 7830
000191 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
000192 5832
000193 0d5d
000194 000a
000195 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000196 6961
000197 3e6e
000198 5320
000199 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
00019a 6572
00019b 6461
00019c 654d
00019d 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
00019e 7972
00019f 6552
0001a0 616d
0001a1 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
0001a2 2928
0001a3 6620
0001a4 6961
0001a5 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0001a6 0d64
0001a7 000a
0001a8 6d3c
0001a9 6961      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6D,0x61,0x69
0001aa 3e6e
0001ab 5b20
0001ac 6544
0001ad 6976      	.DB  0x6E,0x3E,0x20,0x5B,0x44,0x65,0x76,0x69
0001ae 6563
0001af 6420
0001b0 7369
0001b1 6261      	.DB  0x63,0x65,0x20,0x64,0x69,0x73,0x61,0x62
0001b2 656c
0001b3 205d
0001b4 545b
0001b5 5059      	.DB  0x6C,0x65,0x5D,0x20,0x5B,0x54,0x59,0x50
0001b6 2d45
0001b7 5d4b
0001b8 2420
0001b9 4d43      	.DB  0x45,0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D
0001ba 5344
0001bb 534e
0001bc 4e20
0001bd 3a20      	.DB  0x44,0x53,0x4E,0x53,0x20,0x4E,0x20,0x3A
0001be 5820
0001bf 582e
0001c0 2058
0001c1 2020      	.DB  0x20,0x58,0x2E,0x58,0x58,0x20,0x20,0x20
0001c2 2020
0001c3 2020
0001c4 2020
0001c5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001c6 2020
0001c7 2020
0001c8 2020
0001c9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ca 0d20
0001cb 3c00
0001cc 616d
0001cd 6e69      	.DB  0x20,0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E
0001ce 203e
0001cf 445b
0001d0 7665
0001d1 6369      	.DB  0x3E,0x20,0x5B,0x44,0x65,0x76,0x69,0x63
0001d2 2065
0001d3 6964
0001d4 6173
0001d5 6c62      	.DB  0x65,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
0001d6 5d65
0001d7 5b20
0001d8 5954
0001d9 4550      	.DB  0x65,0x5D,0x20,0x5B,0x54,0x59,0x50,0x45
0001da 4b2d
0001db 205d
0001dc 4324
0001dd 444d      	.DB  0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44
0001de 4e53
0001df 2053
0001e0 6425
0001e1 3a20      	.DB  0x53,0x4E,0x53,0x20,0x25,0x64,0x20,0x3A
0001e2 2520
0001e3 2066
0001e4 2020
0001e5 2020      	.DB  0x20,0x25,0x66,0x20,0x20,0x20,0x20,0x20
0001e6 2020
0001e7 2020
0001e8 2020
0001e9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ea 2020
0001eb 2020
0001ec 2020
0001ed 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ee 000d
0001ef 6d3c
0001f0 6961
0001f1 3e6e      	.DB  0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
0001f2 5b20
0001f3 6544
0001f4 6976
0001f5 6563      	.DB  0x20,0x5B,0x44,0x65,0x76,0x69,0x63,0x65
0001f6 6420
0001f7 7369
0001f8 6261
0001f9 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
0001fa 205d
0001fb 545b
0001fc 5059
0001fd 2d45      	.DB  0x5D,0x20,0x5B,0x54,0x59,0x50,0x45,0x2D
0001fe 5d4b
0001ff 2420
000200 4d43
000201 5344      	.DB  0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44,0x53
000202 534e
000203 2520
000204 2064
000205 203a      	.DB  0x4E,0x53,0x20,0x25,0x64,0x20,0x3A,0x20
000206 6964
000207 6373
000208 6e6f
000209 656e      	.DB  0x64,0x69,0x73,0x63,0x6F,0x6E,0x6E,0x65
00020a 7463
00020b 6465
00020c 2020
00020d 2020      	.DB  0x63,0x74,0x65,0x64,0x20,0x20,0x20,0x20
00020e 2020
00020f 2020
000210 2020
000211 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
000212 3c00
000213 616d
000214 6e69
000215 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000216 445b
000217 7665
000218 6369
000219 2065      	.DB  0x5B,0x44,0x65,0x76,0x69,0x63,0x65,0x20
00021a 6964
00021b 6173
00021c 6c62
00021d 5d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x5D
00021e 5b20
00021f 4d54
000220 4345
000221 205d      	.DB  0x20,0x5B,0x54,0x4D,0x45,0x43,0x5D,0x20
000222 2020
000223 2020
000224 2020
000225 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000226 2020
000227 2020
000228 2020
000229 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022a 2020
00022b 2020
00022c 2020
00022d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022e 2020
00022f 2020
000230 2020
000231 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000232 2020
000233 2020
000234 2020
000235 000d      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0xD,0x0
000236 6d3c
000237 6961
000238 3e6e
000239 5b20      	.DB  0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B
00023a 6544
00023b 6976
00023c 6563
00023d 6420      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x20,0x64
00023e 7369
00023f 6261
000240 656c
000241 205d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0x5D,0x20
000242 505b
000243 3154
000244 3030
000245 205d      	.DB  0x5B,0x50,0x54,0x31,0x30,0x30,0x5D,0x20
000246 2020
000247 2020
000248 2020
000249 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024a 2020
00024b 2020
00024c 2020
00024d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024e 2020
00024f 2020
000250 2020
000251 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000252 2020
000253 2020
000254 2020
000255 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000256 2020
000257 2020
000258 0d20
000259 3c00      	.DB  0x20,0x20,0x20,0x20,0x20,0xD,0x0,0x3C
00025a 616d
00025b 6e69
00025c 203e
00025d 445b      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B,0x44
00025e 7665
00025f 6369
000260 2065
000261 6964      	.DB  0x65,0x76,0x69,0x63,0x65,0x20,0x64,0x69
000262 6173
000263 6c62
000264 5d65
000265 5b20      	.DB  0x73,0x61,0x62,0x6C,0x65,0x5D,0x20,0x5B
000266 4552
000267 4553
000268 5652
000269 4445      	.DB  0x52,0x45,0x53,0x45,0x52,0x56,0x45,0x44
00026a 205d
00026b 2020
00026c 2020
00026d 2020      	.DB  0x5D,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00026e 2020
00026f 2020
000270 2020
000271 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000272 2020
000273 2020
000274 2020
000275 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000276 2020
000277 2020
000278 2020
000279 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00027a 2020
00027b 2020
00027c 000d
00027d 753c      	.DB  0x20,0x20,0x20,0x20,0xD,0x0,0x3C,0x75
00027e 6470
00027f 7461
000280 5365
000281 6174      	.DB  0x70,0x64,0x61,0x74,0x65,0x53,0x74,0x61
000282 7574
000283 3e73
000284 4520
000285 4854      	.DB  0x74,0x75,0x73,0x3E,0x20,0x45,0x54,0x48
000286 725f
000287 7473
000288 745f
000289 6d69      	.DB  0x5F,0x72,0x73,0x74,0x5F,0x74,0x69,0x6D
00028a 7265
00028b 7420
00028c 6d69
00028d 2065      	.DB  0x65,0x72,0x20,0x74,0x69,0x6D,0x65,0x20
00028e 656c
00028f 7466
000290 3d20
000291 2520      	.DB  0x6C,0x65,0x66,0x74,0x20,0x3D,0x20,0x25
000292 646c
000293 2528
000294 586c
000295 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
000296 000a
000297 0a0d
000298 653c
000299 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00029a 746e
00029b 6143
00029c 7470
00029d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00029e 3e65
00029f 2120
0002a0 2121
0002a1 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0002a2 2121
0002a3 2121
0002a4 2121
0002a5 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
0002a6 6e6f
0002a7 7469
0002a8 726f
0002a9 4d20      	.DB  0x6F,0x6E,0x69,0x74,0x6F,0x72,0x20,0x4D
0002aa 646f
0002ab 2065
0002ac 2121
0002ad 2121      	.DB  0x6F,0x64,0x65,0x20,0x21,0x21,0x21,0x21
0002ae 0d21
0002af 000a
0002b0 0a0d
0002b1 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
0002b2 6576
0002b3 746e
0002b4 6143
0002b5 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
0002b6 7275
0002b7 3e65
0002b8 2120
0002b9 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
0002ba 2121
0002bb 2121
0002bc 2121
0002bd 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002be 4d20
0002bf 6961
0002c0 746e
0002c1 6e65      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
0002c2 6e61
0002c3 6563
0002c4 4920
0002c5 206e      	.DB  0x61,0x6E,0x63,0x65,0x20,0x49,0x6E,0x20
0002c6 7250
0002c7 676f
0002c8 6572
0002c9 7373      	.DB  0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73
0002ca 2120
0002cb 2121
0002cc 2121
0002cd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002ce 3c00
0002cf 7665
0002d0 6e65
0002d1 4374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0002d2 7061
0002d3 7574
0002d4 6572
0002d5 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0002d6 6461
0002d7 4564
0002d8 6576
0002d9 746e      	.DB  0x61,0x64,0x64,0x45,0x76,0x65,0x6E,0x74
0002da 7551
0002db 7565
0002dc 2865
0002dd 2029      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x29,0x20
0002de 6166
0002df 6c69
0002e0 6465
0002e1 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0002e2 0d00
0002e3 3c0a
0002e4 7665
0002e5 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002e6 4374
0002e7 7061
0002e8 7574
0002e9 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002ea 203e
0002eb 2121
0002ec 2121
0002ed 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002ee 2121
0002ef 2121
0002f0 2021
0002f1 614d      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x4D,0x61
0002f2 6e69
0002f3 5020
0002f4 776f
0002f5 7265      	.DB  0x69,0x6E,0x20,0x50,0x6F,0x77,0x65,0x72
0002f6 4420
0002f7 776f
0002f8 206e
0002f9 2121      	.DB  0x20,0x44,0x6F,0x77,0x6E,0x20,0x21,0x21
0002fa 2121
0002fb 0d21
0002fc 000a
0002fd 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0002fe 653c
0002ff 6576
000300 746e
000301 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
000302 7470
000303 7275
000304 3e65
000305 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
000306 2121
000307 2121
000308 2121
000309 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00030a 2121
00030b 4d20
00030c 6961
00030d 206e      	.DB  0x21,0x21,0x20,0x4D,0x61,0x69,0x6E,0x20
00030e 6f50
00030f 6577
000310 2072
000311 7055      	.DB  0x50,0x6F,0x77,0x65,0x72,0x20,0x55,0x70
000312 2120
000313 2121
000314 2121
000315 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000316 0d00
000317 3c0a
000318 7665
000319 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
00031a 4374
00031b 7061
00031c 7574
00031d 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00031e 203e
00031f 2121
000320 2121
000321 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
000322 2121
000323 2121
000324 2021
000325 6142      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x42,0x61
000326 7474
000327 7265
000328 2079
000329 6f4c      	.DB  0x74,0x74,0x65,0x72,0x79,0x20,0x4C,0x6F
00032a 2077
00032b 2121
00032c 2121
00032d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00032e 000a
00032f 0a0d
000330 653c
000331 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000332 746e
000333 6143
000334 7470
000335 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000336 3e65
000337 2120
000338 2121
000339 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00033a 2121
00033b 2121
00033c 2121
00033d 4220      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x42
00033e 7461
00033f 6574
000340 7972
000341 4f20      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x20,0x4F
000342 204b
000343 2121
000344 2121
000345 0d21      	.DB  0x4B,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000346 000a
000347 0a0d
000348 653c
000349 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00034a 746e
00034b 6143
00034c 7470
00034d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00034e 3e65
00034f 2120
000350 2121
000351 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000352 2121
000353 2121
000354 2121
000355 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000356 6d65
000357 726f
000358 2079
000359 6f4c      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4C,0x6F
00035a 2077
00035b 2121
00035c 2121
00035d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00035e 000a
00035f 0a0d
000360 653c
000361 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000362 746e
000363 6143
000364 7470
000365 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000366 3e65
000367 2120
000368 2121
000369 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00036a 2121
00036b 2121
00036c 2121
00036d 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
00036e 6d65
00036f 726f
000370 2079
000371 7245      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x45,0x72
000372 6f72
000373 2072
000374 2121
000375 2121      	.DB  0x72,0x6F,0x72,0x20,0x21,0x21,0x21,0x21
000376 0d21
000377 000a
000378 0a0d
000379 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
00037a 6576
00037b 746e
00037c 6143
00037d 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
00037e 7275
00037f 3e65
000380 2120
000381 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
000382 2121
000383 2121
000384 2121
000385 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000386 4d20
000387 6d65
000388 726f
000389 2079      	.DB  0x20,0x4D,0x65,0x6D,0x6F,0x72,0x79,0x20
00038a 4b4f
00038b 2120
00038c 2121
00038d 2121      	.DB  0x4F,0x4B,0x20,0x21,0x21,0x21,0x21,0x21
00038e 0a0d
00038f 0d00
000390 3c0a
000391 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000392 6e65
000393 4374
000394 7061
000395 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
000396 6572
000397 203e
000398 2121
000399 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
00039a 2121
00039b 2121
00039c 2121
00039d 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
00039e 6944
00039f 206e
0003a0 6425
0003a1 5220      	.DB  0x44,0x69,0x6E,0x20,0x25,0x64,0x20,0x52
0003a2 7369
0003a3 6e69
0003a4 2067
0003a5 2121      	.DB  0x69,0x73,0x69,0x6E,0x67,0x20,0x21,0x21
0003a6 2121
0003a7 0d21
0003a8 000a
0003a9 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0003aa 653c
0003ab 6576
0003ac 746e
0003ad 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
0003ae 7470
0003af 7275
0003b0 3e65
0003b1 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
0003b2 2121
0003b3 2121
0003b4 2121
0003b5 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0003b6 2121
0003b7 4420
0003b8 6e69
0003b9 2520      	.DB  0x21,0x21,0x20,0x44,0x69,0x6E,0x20,0x25
0003ba 2064
0003bb 6146
0003bc 6c6c
0003bd 6e69      	.DB  0x64,0x20,0x46,0x61,0x6C,0x6C,0x69,0x6E
0003be 2067
0003bf 2121
0003c0 2121
0003c1 0d21      	.DB  0x67,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0003c2 000a
0003c3 0a0d
0003c4 653c
0003c5 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0003c6 746e
0003c7 6143
0003c8 7470
0003c9 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0003ca 3e65
0003cb 2120
0003cc 2121
0003cd 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0003ce 2121
0003cf 2121
0003d0 2121
0003d1 5020      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x50
0003d2 4f52
0003d3 4542
0003d4 2520
0003d5 2064      	.DB  0x52,0x4F,0x42,0x45,0x20,0x25,0x64,0x20
0003d6 4944
0003d7 4353
0003d8 4e4f
0003d9 454e      	.DB  0x44,0x49,0x53,0x43,0x4F,0x4E,0x4E,0x45
0003da 5443
0003db 2120
0003dc 2121
0003dd 2121      	.DB  0x43,0x54,0x20,0x21,0x21,0x21,0x21,0x21
0003de 0a0d
0003df 4100
0003e0 314c
0003e1 2532      	.DB  0xD,0xA,0x0,0x41,0x4C,0x31,0x32,0x25
0003e2 6431
0003e3 0d00
0003e4 3c0a
0003e5 7665      	.DB  0x31,0x64,0x0,0xD,0xA,0x3C,0x65,0x76
0003e6 6e65
0003e7 4374
0003e8 7061
0003e9 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
0003ea 6572
0003eb 203e
0003ec 2121
0003ed 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
0003ee 2121
0003ef 2121
0003f0 2121
0003f1 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
0003f2 5250
0003f3 424f
0003f4 2045
0003f5 6425      	.DB  0x50,0x52,0x4F,0x42,0x45,0x20,0x25,0x64
0003f6 4320
0003f7 4e4f
0003f8 454e
0003f9 5443      	.DB  0x20,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0003fa 2120
0003fb 2121
0003fc 2121
0003fd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003fe 4100
0003ff 304c
000400 2532
000401 6431      	.DB  0x0,0x41,0x4C,0x30,0x32,0x25,0x31,0x64
000402 0d00
000403 3c0a
000404 7665
000405 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000406 4374
000407 7061
000408 7574
000409 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00040a 203e
00040b 2121
00040c 2121
00040d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00040e 2121
00040f 2121
000410 2021
000411 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000412 424f
000413 2045
000414 6425
000415 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000416 6d65
000417 6570
000418 6172
000419 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00041a 6572
00041b 4520
00041c 5252
00041d 524f      	.DB  0x72,0x65,0x20,0x45,0x52,0x52,0x4F,0x52
00041e 2120
00041f 2121
000420 2121
000421 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000422 0d00
000423 3c0a
000424 7665
000425 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000426 4374
000427 7061
000428 7574
000429 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00042a 203e
00042b 2121
00042c 2121
00042d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00042e 2121
00042f 2121
000430 2021
000431 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000432 424f
000433 2045
000434 6425
000435 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000436 6d65
000437 6570
000438 6172
000439 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00043a 6572
00043b 4f20
00043c 204b
00043d 2121      	.DB  0x72,0x65,0x20,0x4F,0x4B,0x20,0x21,0x21
00043e 2121
00043f 0d21
000440 000a
000441 733c      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0x3C,0x73
000442 6174
000443 7574
000444 5273
000445 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000446 726f
000447 3e74
000448 5220
000449 5045      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x52,0x45,0x50
00044a 524f
00044b 5f54
00044c 4953
00044d 474e      	.DB  0x4F,0x52,0x54,0x5F,0x53,0x49,0x4E,0x47
00044e 454c
00044f 6d20
000450 646f
000451 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
000452 6f6e
000453 2074
000454 7573
000455 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000456 726f
000457 6574
000458 2064
000459 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
00045a 0d74
00045b 000a
00045c 733c
00045d 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00045e 7574
00045f 5273
000460 7065
000461 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000462 3e74
000463 5220
000464 5045
000465 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
000466 5f54
000467 554d
000468 544c
000469 5049      	.DB  0x54,0x5F,0x4D,0x55,0x4C,0x54,0x49,0x50
00046a 454c
00046b 6d20
00046c 646f
00046d 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
00046e 6f6e
00046f 2074
000470 7573
000471 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000472 726f
000473 6574
000474 2064
000475 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000476 0d74
000477 000a
000478 733c
000479 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00047a 7574
00047b 5273
00047c 7065
00047d 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00047e 3e74
00047f 6d20
000480 6c61
000481 6f6c      	.DB  0x74,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
000482 2063
000483 6166
000484 6c69
000485 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000486 2820
000487 6425
000488 6220
000489 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
00048a 7365
00048b 0d29
00048c 000a
00048d 733c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x73
00048e 6174
00048f 7574
000490 5273
000491 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000492 726f
000493 3e74
000494 6720
000495 7465      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x67,0x65,0x74
000496 6544
000497 6976
000498 6563
000499 7453      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x53,0x74
00049a 7461
00049b 2865
00049c 2029
00049d 6166      	.DB  0x61,0x74,0x65,0x28,0x29,0x20,0x66,0x61
00049e 6c69
00049f 6465
0004a0 0a0d
0004a1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0004a2 7473
0004a3 7461
0004a4 7375
0004a5 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
0004a6 6f70
0004a7 7472
0004a8 203e
0004a9 7473      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x73,0x74
0004aa 7461
0004ab 7375
0004ac 7220
0004ad 7065      	.DB  0x61,0x74,0x75,0x73,0x20,0x72,0x65,0x70
0004ae 726f
0004af 2074
0004b0 6361
0004b1 6d63      	.DB  0x6F,0x72,0x74,0x20,0x61,0x63,0x63,0x6D
0004b2 7520
0004b3 6b6e
0004b4 6f6e
0004b5 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0004b6 5b20
0004b7 7830
0004b8 3025
0004b9 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0004ba 0d5d
0004bb 000a
0004bc 733c
0004bd 6174      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
0004be 7574
0004bf 5273
0004c0 7065
0004c1 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
0004c2 3e74
0004c3 4520
0004c4 4854
0004c5 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0004c6 6e65
0004c7 5364
0004c8 6174
0004c9 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
0004ca 5273
0004cb 7065
0004cc 726f
0004cd 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0004ce 646d
0004cf 2928
0004d0 6620
0004d1 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
0004d2 656c
0004d3 0d64
0004d4 000a
0004d5 733c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x73
0004d6 6e65
0004d7 6f73
0004d8 4472
0004d9 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0004da 5261
0004db 7065
0004dc 726f
0004dd 3e74      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0004de 5b20
0004df 6c25
0004e0 5d64
0004e1 255b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x25
0004e2 5d64
0004e3 255b
0004e4 322e
0004e5 5d66      	.DB  0x64,0x5D,0x5B,0x25,0x2E,0x32,0x66,0x5D
0004e6 0a0d
0004e7 0d00
0004e8 3c0a
0004e9 6573      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x73,0x65
0004ea 736e
0004eb 726f
0004ec 6144
0004ed 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
0004ee 6552
0004ef 6f70
0004f0 7472
0004f1 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0004f2 3d3d
0004f3 203d
0004f4 5245
0004f5 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0004f6 2052
0004f7 4e49
0004f8 4f46
0004f9 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0004fa 4954
0004fb 4e4f
0004fc 4920
0004fd 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0004fe 4554
0004ff 504d
000500 5120
000501 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
000502 4555
000503 3d20
000504 3d3d
000505 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
000506 3c00
000507 6573
000508 736e
000509 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00050a 6144
00050b 6174
00050c 6552
00050d 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
00050e 7472
00050f 203e
000510 5445
000511 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
000512 6573
000513 646e
000514 6144
000515 6174      	.DB  0x73,0x65,0x6E,0x64,0x44,0x61,0x74,0x61
000516 6552
000517 6f70
000518 7472
000519 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00051a 2864
00051b 2029
00051c 6166
00051d 6c69      	.DB  0x64,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00051e 6465
00051f 0a0d
000520 3c00
000521 7665      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x65,0x76
000522 6e65
000523 5274
000524 7065
000525 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000526 3e74
000527 5b20
000528 6c25
000529 5d64      	.DB  0x74,0x3E,0x20,0x5B,0x25,0x6C,0x64,0x5D
00052a 305b
00052b 2578
00052c 3230
00052d 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00052e 305b
00052f 2578
000530 3230
000531 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000532 0a0d
000533 0d00
000534 3c0a
000535 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000536 6e65
000537 5274
000538 7065
000539 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
00053a 3e74
00053b 3d20
00053c 3d3d
00053d 4520      	.DB  0x74,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
00053e 5252
00053f 524f
000540 4920
000541 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
000542 4d4f
000543 5441
000544 4f49
000545 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
000546 4e49
000547 5420
000548 4d45
000549 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
00054a 5551
00054b 5545
00054c 2045
00054d 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
00054e 0d3d
00054f 000a
000550 653c
000551 6576      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
000552 746e
000553 6552
000554 6f70
000555 7472      	.DB  0x6E,0x74,0x52,0x65,0x70,0x6F,0x72,0x74
000556 203e
000557 5445
000558 5f48
000559 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
00055a 646e
00055b 7645
00055c 6e65
00055d 5274      	.DB  0x6E,0x64,0x45,0x76,0x65,0x6E,0x74,0x52
00055e 7065
00055f 726f
000560 4374
000561 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000562 2928
000563 6620
000564 6961
000565 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000566 0d64
000567 000a
000568 733c
000569 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00056a 6f73
00056b 4472
00056c 7461
00056d 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
00056e 7661
00056f 3e65
000570 7420
000571 6d69      	.DB  0x61,0x76,0x65,0x3E,0x20,0x74,0x69,0x6D
000572 5b65
000573 6c25
000574 5d64
000575 632c      	.DB  0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x63
000576 5b68
000577 6425
000578 2c5d
000579 6176      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76,0x61
00057a 5b6c
00057b 2e25
00057c 6632
00057d 0d5d      	.DB  0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD
00057e 000a
00057f 0a0d
000580 733c
000581 6e65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x73,0x65,0x6E
000582 6f73
000583 4472
000584 7461
000585 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000586 7661
000587 3e65
000588 3d20
000589 3d3d      	.DB  0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D,0x3D
00058a 4520
00058b 5252
00058c 524f
00058d 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
00058e 464e
00058f 4d4f
000590 5441
000591 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
000592 204e
000593 4e49
000594 5420
000595 4d45      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x54,0x45,0x4D
000596 2050
000597 5551
000598 5545
000599 2045      	.DB  0x50,0x20,0x51,0x55,0x45,0x55,0x45,0x20
00059a 3d3d
00059b 0d3d
00059c 000a
00059d 733c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x73
00059e 6e65
00059f 6f73
0005a0 4472
0005a1 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0005a2 5361
0005a3 7661
0005a4 3e65
0005a5 4c20      	.DB  0x61,0x53,0x61,0x76,0x65,0x3E,0x20,0x4C
0005a6 474f
0005a7 6f5f
0005a8 6570
0005a9 466e      	.DB  0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46
0005aa 6c69
0005ab 2865
0005ac 7325
0005ad 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0005ae 6166
0005af 6c69
0005b0 6465
0005b1 202c      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x2C,0x20
0005b2 6f63
0005b3 6c75
0005b4 6e64
0005b5 7427      	.DB  0x63,0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74
0005b6 7320
0005b7 7661
0005b8 2065
0005b9 6f6c      	.DB  0x20,0x73,0x61,0x76,0x65,0x20,0x6C,0x6F
0005ba 0d67
0005bb 000a
0005bc 733c
0005bd 6e65      	.DB  0x67,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0005be 6f73
0005bf 4472
0005c0 7461
0005c1 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
0005c2 7661
0005c3 3e65
0005c4 4c20
0005c5 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
0005c6 695f
0005c7 736e
0005c8 7265
0005c9 4474      	.DB  0x5F,0x69,0x6E,0x73,0x65,0x72,0x74,0x44
0005ca 7461
0005cb 2861
0005cc 2029
0005cd 6166      	.DB  0x61,0x74,0x61,0x28,0x29,0x20,0x66,0x61
0005ce 6c69
0005cf 6465
0005d0 0a0d
0005d1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0005d2 6573
0005d3 736e
0005d4 726f
0005d5 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0005d6 6174
0005d7 6153
0005d8 6576
0005d9 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
0005da 4f4c
0005db 5f47
0005dc 6c63
0005dd 736f      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73
0005de 4665
0005df 6c69
0005e0 2865
0005e1 2029      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x29,0x20
0005e2 6166
0005e3 6c69
0005e4 6465
0005e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0005e6 3c00
0005e7 6573
0005e8 736e
0005e9 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0005ea 6144
0005eb 6174
0005ec 6153
0005ed 6576      	.DB  0x44,0x61,0x74,0x61,0x53,0x61,0x76,0x65
0005ee 203e
0005ef 6144
0005f0 6174
0005f1 4c20      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x20,0x4C
0005f2 676f
0005f3 6920
0005f4 2073
0005f5 6f6e      	.DB  0x6F,0x67,0x20,0x69,0x73,0x20,0x6E,0x6F
0005f6 2074
0005f7 6d65
0005f8 7470
0005f9 0d79      	.DB  0x74,0x20,0x65,0x6D,0x70,0x74,0x79,0xD
0005fa 000a
0005fb 653c
0005fc 6576
0005fd 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005fe 6153
0005ff 6576
000600 203e
000601 6974      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x74,0x69
000602 656d
000603 255b
000604 646c
000605 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000606 6469
000607 305b
000608 2578
000609 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
00060a 5d58
00060b 732c
00060c 6174
00060d 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00060e 7830
00060f 3025
000610 5832
000611 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000612 000a
000613 0a0d
000614 653c
000615 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000616 746e
000617 6153
000618 6576
000619 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
00061a 3d3d
00061b 203d
00061c 5245
00061d 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
00061e 2052
00061f 4e49
000620 4f46
000621 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
000622 4954
000623 4e4f
000624 4920
000625 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
000626 4554
000627 504d
000628 5120
000629 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
00062a 4555
00062b 3d20
00062c 3d3d
00062d 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
00062e 3c00
00062f 7665
000630 6e65
000631 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000632 7661
000633 3e65
000634 4c20
000635 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000636 6f5f
000637 6570
000638 466e
000639 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
00063a 2865
00063b 7325
00063c 2029
00063d 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
00063e 6c69
00063f 6465
000640 202c
000641 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
000642 6c75
000643 6e64
000644 7427
000645 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
000646 7661
000647 2065
000648 6f6c
000649 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
00064a 000a
00064b 653c
00064c 6576
00064d 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
00064e 6153
00064f 6576
000650 203e
000651 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
000652 5f47
000653 6e69
000654 6573
000655 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
000656 7645
000657 6e65
000658 2874
000659 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
00065a 6166
00065b 6c69
00065c 6465
00065d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00065e 3c00
00065f 7665
000660 6e65
000661 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000662 7661
000663 3e65
000664 4c20
000665 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000666 635f
000667 6f6c
000668 6573
000669 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
00066a 656c
00066b 2928
00066c 6620
00066d 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00066e 656c
00066f 0d64
000670 000a
000671 653c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x65
000672 6576
000673 746e
000674 6153
000675 6576      	.DB  0x76,0x65,0x6E,0x74,0x53,0x61,0x76,0x65
000676 203e
000677 7645
000678 6e65
000679 2074      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00067a 6f4c
00067b 2067
00067c 7369
00067d 6e20      	.DB  0x4C,0x6F,0x67,0x20,0x69,0x73,0x20,0x6E
00067e 746f
00067f 6520
000680 706d
000681 7974      	.DB  0x6F,0x74,0x20,0x65,0x6D,0x70,0x74,0x79
000682 0a0d
000683 3c00
000684 6f6c
000685 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000686 7065
000687 726f
000688 3e74
000689 4320      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x43
00068a 6568
00068b 6b63
00068c 4420
00068d 7461      	.DB  0x68,0x65,0x63,0x6B,0x20,0x44,0x61,0x74
00068e 2061
00068f 6f4c
000690 2067
000691 7845      	.DB  0x61,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000692 7369
000693 0d74
000694 000a
000695 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000696 676f
000697 6552
000698 6f70
000699 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00069a 203e
00069b 4f4c
00069c 5f47
00069d 706f      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F,0x70
00069e 6e65
00069f 6946
0006a0 656c
0006a1 2528      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x28,0x25
0006a2 2973
0006a3 6620
0006a4 6961
0006a5 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0006a6 0d64
0006a7 000a
0006a8 6c3c
0006a9 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
0006aa 6552
0006ab 6f70
0006ac 7472
0006ad 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0006ae 4f4c
0006af 5f47
0006b0 6572
0006b1 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0006b2 6144
0006b3 6174
0006b4 2528
0006b5 2973      	.DB  0x44,0x61,0x74,0x61,0x28,0x25,0x73,0x29
0006b6 6620
0006b7 6961
0006b8 656c
0006b9 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0006ba 000a
0006bb 6c3c
0006bc 676f
0006bd 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0006be 6f70
0006bf 7472
0006c0 203e
0006c1 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0006c2 5f47
0006c3 6572
0006c4 6461
0006c5 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0006c6 6174
0006c7 2928
0006c8 4c20
0006c9 676f      	.DB  0x74,0x61,0x28,0x29,0x20,0x4C,0x6F,0x67
0006ca 6520
0006cb 706d
0006cc 7974
0006cd 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
0006ce 0d00
0006cf 3c0a
0006d0 6f6c
0006d1 5267      	.DB  0x0,0xD,0xA,0x3C,0x6C,0x6F,0x67,0x52
0006d2 7065
0006d3 726f
0006d4 3e74
0006d5 3d20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D
0006d6 3d3d
0006d7 4520
0006d8 5252
0006d9 524f      	.DB  0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F,0x52
0006da 4920
0006db 464e
0006dc 4d4f
0006dd 5441      	.DB  0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54
0006de 4f49
0006df 204e
0006e0 4e49
0006e1 2520      	.DB  0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20,0x25
0006e2 2073
0006e3 3d3d
0006e4 0d3d
0006e5 000a      	.DB  0x73,0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0
0006e6 6c3c
0006e7 676f
0006e8 6552
0006e9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0006ea 7472
0006eb 203e
0006ec 6144
0006ed 6174      	.DB  0x72,0x74,0x3E,0x20,0x44,0x61,0x74,0x61
0006ee 6f4c
0006ef 2067
0006f0 6f66
0006f1 6e75      	.DB  0x4C,0x6F,0x67,0x20,0x66,0x6F,0x75,0x6E
0006f2 2064
0006f3 6974
0006f4 656d
0006f5 255b      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0006f6 646c
0006f7 2c5d
0006f8 6863
0006f9 255b      	.DB  0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B,0x25
0006fa 5d64
0006fb 762c
0006fc 6c61
0006fd 255b      	.DB  0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B,0x25
0006fe 322e
0006ff 5d66
000700 0a0d
000701 3c00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x3C
000702 6f6c
000703 5267
000704 7065
000705 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
000706 3e74
000707 4520
000708 4854
000709 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
00070a 6e65
00070b 4464
00070c 7461
00070d 5261      	.DB  0x65,0x6E,0x64,0x44,0x61,0x74,0x61,0x52
00070e 7065
00070f 726f
000710 4374
000711 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000712 2928
000713 6620
000714 6961
000715 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000716 0d64
000717 000a
000718 6c3c
000719 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
00071a 6552
00071b 6f70
00071c 7472
00071d 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
00071e 6144
00071f 6174
000720 6f4c
000721 2067      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x20
000722 6573
000723 746e
000724 6620
000725 6172      	.DB  0x73,0x65,0x6E,0x74,0x20,0x66,0x72,0x61
000726 656d
000727 4449
000728 305b
000729 2578      	.DB  0x6D,0x65,0x49,0x44,0x5B,0x30,0x78,0x25
00072a 3230
00072b 5d58
00072c 6c20
00072d 676f      	.DB  0x30,0x32,0x58,0x5D,0x20,0x6C,0x6F,0x67
00072e 4449
00072f 305b
000730 2578
000731 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
000732 5d58
000733 0a0d
000734 3c00
000735 6f6c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
000736 5267
000737 7065
000738 726f
000739 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
00073a 4c20
00073b 474f
00073c 635f
00073d 6f6c      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F
00073e 6573
00073f 6946
000740 656c
000741 2928      	.DB  0x73,0x65,0x46,0x69,0x6C,0x65,0x28,0x29
000742 6620
000743 6961
000744 656c
000745 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
000746 000a
000747 6c3c
000748 676f
000749 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00074a 6f70
00074b 7472
00074c 203e
00074d 6843      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x43,0x68
00074e 6365
00074f 206b
000750 7645
000751 6e65      	.DB  0x65,0x63,0x6B,0x20,0x45,0x76,0x65,0x6E
000752 2074
000753 6f4c
000754 2067
000755 7845      	.DB  0x74,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000756 7369
000757 0d74
000758 000a
000759 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
00075a 676f
00075b 6552
00075c 6f70
00075d 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00075e 203e
00075f 4f4c
000760 5f47
000761 6572      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x72,0x65
000762 6461
000763 7645
000764 6e65
000765 2874      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x28
000766 2029
000767 6166
000768 6c69
000769 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00076a 0a0d
00076b 3c00
00076c 6f6c
00076d 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00076e 7065
00076f 726f
000770 3e74
000771 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
000772 474f
000773 725f
000774 6165
000775 4564      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x45
000776 6576
000777 746e
000778 2928
000779 4c20      	.DB  0x76,0x65,0x6E,0x74,0x28,0x29,0x20,0x4C
00077a 676f
00077b 6520
00077c 706d
00077d 7974      	.DB  0x6F,0x67,0x20,0x65,0x6D,0x70,0x74,0x79
00077e 0a0d
00077f 3c00
000780 6f6c
000781 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000782 7065
000783 726f
000784 3e74
000785 4520      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x45
000786 6576
000787 746e
000788 6f4c
000789 2067      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x20
00078a 6f66
00078b 6e75
00078c 2064
00078d 6974      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x20,0x74,0x69
00078e 656d
00078f 255b
000790 646c
000791 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000792 6469
000793 305b
000794 2578
000795 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
000796 5d58
000797 732c
000798 6174
000799 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00079a 7830
00079b 3025
00079c 5832
00079d 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00079e 000a
00079f 6c3c
0007a0 676f
0007a1 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007a2 6f70
0007a3 7472
0007a4 203e
0007a5 5445      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x45,0x54
0007a6 5f48
0007a7 6573
0007a8 646e
0007a9 7645      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x45,0x76
0007aa 6e65
0007ab 5274
0007ac 7065
0007ad 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
0007ae 4374
0007af 646d
0007b0 2928
0007b1 6620      	.DB  0x74,0x43,0x6D,0x64,0x28,0x29,0x20,0x66
0007b2 6961
0007b3 656c
0007b4 0d64
0007b5 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0007b6 6c3c
0007b7 676f
0007b8 6552
0007b9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0007ba 7472
0007bb 203e
0007bc 7645
0007bd 6e65      	.DB  0x72,0x74,0x3E,0x20,0x45,0x76,0x65,0x6E
0007be 4c74
0007bf 676f
0007c0 7320
0007c1 6e65      	.DB  0x74,0x4C,0x6F,0x67,0x20,0x73,0x65,0x6E
0007c2 2074
0007c3 7266
0007c4 6d61
0007c5 4965      	.DB  0x74,0x20,0x66,0x72,0x61,0x6D,0x65,0x49
0007c6 5b44
0007c7 7830
0007c8 3025
0007c9 5832      	.DB  0x44,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0007ca 205d
0007cb 6f6c
0007cc 4967
0007cd 5b44      	.DB  0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44,0x5B
0007ce 7830
0007cf 3025
0007d0 5832
0007d1 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0007d2 000a
0007d3 6c3c
0007d4 676f
0007d5 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007d6 6f70
0007d7 7472
0007d8 203e
0007d9 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0007da 5f47
0007db 6c63
0007dc 736f
0007dd 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
0007de 6c69
0007df 2865
0007e0 7325
0007e1 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0007e2 6166
0007e3 6c69
0007e4 6465
0007e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1688): warning: .cseg .db misalignment - padding zero byte
0007e6 0000      	.DB  0x0
                 _0x20000:
0007e7 0a0d
0007e8 6f50
0007e9 6577
0007ea 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
0007eb 6e6f
0007ec 5220
0007ed 7365
0007ee 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0007ef 0a0d
0007f0 0d00
0007f1 450a
0007f2 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0007f3 7265
0007f4 616e
0007f5 206c
0007f6 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0007f7 6573
0007f8 0d74
0007f9 000a
0007fa 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0007fb 7242
0007fc 776f
0007fd 2d6e
0007fe 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0007ff 2074
000800 6552
000801 6573
000802 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
000803 000a
000804 0a0d
000805 6157
000806 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
000807 6468
000808 676f
000809 5220
00080a 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
00080b 7465
00080c 0a0d
00080d 0d00
00080e 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
00080f 4154
000810 2047
000811 6552
000812 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
000813 0d74
000814 000a
000815 693c
000816 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
000817 6974
000818 6c61
000819 735f
00081a 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
00081b 6574
00081c 3e6d
00081d 4c20
00081e 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
00081f 695f
000820 696e
000821 2874
000822 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
000823 6166
000824 6c69
000825 6465
000826 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000827 3c00
000828 6e69
000829 7469
00082a 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
00082b 5f6c
00082c 7973
00082d 7473
00082e 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
00082f 203e
000830 4453
000831 695f
000832 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
000833 2874
000834 2029
000835 6166
000836 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000837 6465
000838 0a0d
000839 4900
00083a 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
00083b 6974
00083c 6c61
00083d 4420
00083e 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
00083f 6369
000840 2065
000841 6f43
000842 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
000843 656c
000844 6574
000845 2064
000846 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
000847 2d20
000848 0020
000849 3025
00084a 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
00084b 252d
00084c 3230
00084d 2d64
00084e 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
00084f 6432
000850 2520
000851 3230
000852 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000853 3025
000854 6432
000855 253a
000856 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000857 0d64
000858 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
000859 0a0d
00085a 2121
00085b 2121
00085c 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
00085d 2121
00085e 2121
00085f 2121
000860 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000861 2121
000862 2121
000863 2121
000864 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000865 2121
000866 2121
000867 2121
000868 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000869 2121
00086a 2121
00086b 2121
00086c 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00086d 0a0d
00086e 2100
00086f 2121
000870 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
000871 2121
000872 4520
000873 6874
000874 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
000875 6675
000876 6566
000877 2072
000878 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
000879 7265
00087a 6c66
00087b 776f
00087c 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
00087d 2121
00087e 2121
00087f 2121
000880 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1730): warning: .cseg .db misalignment - padding zero byte
000881 0000      	.DB  0x0
                 _0x60000:
000882 543c
000883 4d49
000884 5245
000885 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
000886 7465
000887 6954
000888 656d
000889 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
00088a 4520
00088b 5252
00088c 203a
00088d 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
00088e 6972
00088f 646f
000890 3d20
000891 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
000892 0a0d
000893 3c00
000894 4954
000895 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
000896 5f52
000897 6573
000898 5474
000899 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
00089a 7265
00089b 203e
00089c 6162
00089d 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
00089e 6f43
00089f 6e75
0008a0 6574
0008a1 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
0008a2 6c25
0008a3 5d64
0008a4 2b20
0008a5 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
0008a6 7265
0008a7 6f69
0008a8 5b64
0008a9 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
0008aa 5d64
0008ab 3d20
0008ac 2520
0008ad 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
0008ae 4f20
0008af 4556
0008b0 4652
0008b1 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
0008b2 2157
0008b3 0d21
0008b4 000a
0008b5 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
0008b6 5444
0008b7 203e
0008b8 6157
0008b9 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
0008ba 4468
0008bb 676f
0008bc 5420
0008bd 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
0008be 7265
0008bf 5220
0008c0 7365
0008c1 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
0008c2 2121
0008c3 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1748): warning: .cseg .db misalignment - padding zero byte
0008c4 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
0008c5 ffff      	.DB  0xFF,0xFF
                 _0x80000:
0008c6 493c
0008c7 5f4f
0008c8 656b
0008c9 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008ca 6568
0008cb 6b63
0008cc 203e
0008cd 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008ce 2079
0008cf 4f4d
0008d0 4544
0008d1 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
0008d2 3c00
0008d3 4f49
0008d4 6b5f
0008d5 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008d6 6843
0008d7 6365
0008d8 3e6b
0008d9 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008da 7965
0008db 5520
0008dc 0d50
0008dd 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
0008de 493c
0008df 5f4f
0008e0 656b
0008e1 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008e2 6568
0008e3 6b63
0008e4 203e
0008e5 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008e6 2079
0008e7 4f44
0008e8 4e57
0008e9 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
0008ea 3c00
0008eb 4f49
0008ec 6b5f
0008ed 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008ee 6843
0008ef 6365
0008f0 3e6b
0008f1 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008f2 7965
0008f3 4f20
0008f4 0d4b
0008f5 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0008f6 6e49
0008f7 7469
0008f8 6169
0008f9 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0008fa 697a
0008fb 676e
0008fc 4120
0008fd 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0008fe 2e2e
0008ff 0020
000900 4b4f
000901 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1768): warning: .cseg .db misalignment - padding zero byte
000902 0000      	.DB  0x0
                 _0xC0003:
000903 0063
000904 0000
000905 0063
000906 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
000907 0063
000908 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
000909 5f63
00090a 6974
00090b 656d
00090c 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
00090d 646c
00090e 205d
00090f 2026
000910 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
000911 6974
000912 656d
000913 255b
000914 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
000915 205d
000916 3e3d
000917 6420
000918 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
000919 5b66
00091a 6c25
00091b 5d64
00091c 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
00091d 3e00
00091e 203e
00091f 5452
000920 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
000921 6573
000922 4274
000923 6e69
000924 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
000925 2079
000926 5452
000927 2043
000928 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
000929 636e
00092a 0d2e
00092b 000a
00092c 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
00092d 4354
00092e 735f
00092f 7465
000930 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
000931 6574
000932 6954
000933 656d
000934 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
000935 6954
000936 656d
000937 6f7a
000938 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
000939 6f20
00093a 7475
00093b 6f20
00093c 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
00093d 6172
00093e 676e
00093f 2065
000940 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000941 642b
000942 0d29
000943 000a
000944 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
000945 2e6e
000946 0020
000947 7554
000948 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
000949 0020
00094a 6557
00094b 2e64
00094c 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
00094d 6854
00094e 2e75
00094f 0020
000950 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
000951 2e69
000952 0020
000953 6153
000954 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
000955 0020
000956 7553
000957 2e6e
000958 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
000959 255b
00095a 5d64
00095b 3025
00095c 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
00095d 252d
00095e 3230
00095f 2d64
000960 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000961 6432
000962 2520
000963 3230
000964 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000965 3025
000966 6432
000967 253a
000968 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000969 0d64
00096a 000a
00096b 7552
00096c 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
00096d 6e69
00096e 2067
00096f 6977
000970 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
000971 5320
000972 7379
000973 6574
000974 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
000975 6c43
000976 636f
000977 206b
000978 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1801): warning: .cseg .db misalignment - padding zero byte
000979 0000      	.DB  0x0
                 _0xE0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1803): warning: .cseg .db misalignment - padding zero byte
00097a 0001      	.DB  0x1
                 _0xE0004:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1805): warning: .cseg .db misalignment - padding zero byte
00097b 0001      	.DB  0x1
                 _0xE0005:
00097c 0101
00097d 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1807): warning: .cseg .db misalignment - padding zero byte
00097e 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
00097f 0101
000980 0101
000981 0101
000982 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000983 0101
000984 0101
000985 0101
000986 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
000987 0101
000988 0101
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1812): warning: .cseg .db misalignment - padding zero byte
000989 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1814): warning: .cseg .db misalignment - padding zero byte
00098a 0001      	.DB  0x1
                 _0xE0009:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1816): warning: .cseg .db misalignment - padding zero byte
00098b 0001      	.DB  0x1
                 _0xE000A:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(1818): warning: .cseg .db misalignment - padding zero byte
00098c 0001      	.DB  0x1
                 _0xE0000:
00098d 673c
00098e 7465
00098f 7250
000990 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
000991 7265
000992 6974
000993 7365
000994 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
000995 666e
000996 6769
000997 203e
000998 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000999 6320
00099a 6e6f
00099b 6966
00099c 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
00099d 6172
00099e 6974
00099f 6e6f
0009a0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
0009a1 7375
0009a2 2065
0009a3 6564
0009a4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
0009a5 6c75
0009a6 0d74
0009a7 000a
0009a8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
0009a9 7465
0009aa 704f
0009ab 7265
0009ac 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0009ad 6e69
0009ae 4367
0009af 6e6f
0009b0 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0009b1 3e67
0009b2 6e20
0009b3 206f
0009b4 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
0009b5 666e
0009b6 6769
0009b7 7275
0009b8 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
0009b9 6f69
0009ba 2c6e
0009bb 7520
0009bc 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
0009bd 6420
0009be 6665
0009bf 7561
0009c0 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
0009c1 0a0d
0009c2 3c00
0009c3 6567
0009c4 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
0009c5 6570
0009c6 6172
0009c7 6974
0009c8 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
0009c9 6f43
0009ca 666e
0009cb 6769
0009cc 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0009cd 6f6d
0009ce 6564
0009cf 2020
0009d0 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
0009d1 2020
0009d2 2020
0009d3 2020
0009d4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0009d5 3e3e
0009d6 3020
0009d7 2578
0009d8 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
0009d9 0d58
0009da 000a
0009db 673c
0009dc 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
0009dd 704f
0009de 7265
0009df 7461
0009e0 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
0009e1 4367
0009e2 6e6f
0009e3 6966
0009e4 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0009e5 6420
0009e6 7665
0009e7 6369
0009e8 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
0009e9 616e
0009ea 6c62
0009eb 2065
0009ec 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009ed 3e20
0009ee 203e
0009ef 7830
0009f0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0009f1 5832
0009f2 0a0d
0009f3 3c00
0009f4 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0009f5 4f74
0009f6 6570
0009f7 6172
0009f8 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0009f9 676e
0009fa 6f43
0009fb 666e
0009fc 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0009fd 203e
0009fe 6c61
0009ff 7261
000a00 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
000a01 616e
000a02 6c62
000a03 2065
000a04 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000a05 2020
000a06 3e3e
000a07 3020
000a08 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000a09 3230
000a0a 0d58
000a0b 000a
000a0c 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
000a0d 7465
000a0e 704f
000a0f 7265
000a10 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
000a11 6e69
000a12 4367
000a13 6e6f
000a14 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
000a15 3e67
000a16 7320
000a17 6e65
000a18 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
000a19 4572
000a1a 616e
000a1b 6c62
000a1c 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000a1d 2020
000a1e 3e20
000a1f 203e
000a20 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
000a21 7830
000a22 3025
000a23 5832
000a24 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
000a25 673c
000a26 7465
000a27 6553
000a28 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
000a29 726f
000a2a 6f43
000a2b 666e
000a2c 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000a2d 203e
000a2e 6573
000a2f 736e
000a30 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
000a31 6320
000a32 6168
000a33 6e6e
000a34 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000a35 6f20
000a36 7475
000a37 6f20
000a38 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000a39 6172
000a3a 676e
000a3b 2065
000a3c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000a3d 2964
000a3e 0a0d
000a3f 3c00
000a40 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000a41 5374
000a42 6e65
000a43 6f73
000a44 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000a45 6e6f
000a46 6966
000a47 3e67
000a48 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
000a49 206f
000a4a 6f63
000a4b 666e
000a4c 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
000a4d 7275
000a4e 7461
000a4f 6f69
000a50 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000a51 7520
000a52 6573
000a53 6420
000a54 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000a55 7561
000a56 746c
000a57 0a0d
000a58 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
000a59 6567
000a5a 4174
000a5b 7875
000a5c 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000a5d 436e
000a5e 6e6f
000a5f 6966
000a60 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a61 6420
000a62 6769
000a63 7469
000a64 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000a65 6920
000a66 706e
000a67 7475
000a68 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
000a69 6168
000a6a 6e6e
000a6b 6c65
000a6c 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a6d 7475
000a6e 6f20
000a6f 2066
000a70 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a71 676e
000a72 2065
000a73 2528
000a74 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a75 0a0d
000a76 3c00
000a77 6567
000a78 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a79 7875
000a7a 6944
000a7b 436e
000a7c 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000a7d 6966
000a7e 3e67
000a7f 6e20
000a80 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000a81 6f63
000a82 666e
000a83 6769
000a84 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000a85 7461
000a86 6f69
000a87 2c6e
000a88 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
000a89 6573
000a8a 6420
000a8b 6665
000a8c 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000a8d 746c
000a8e 0a0d
000a8f 3c00
000a90 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000a91 4174
000a92 7875
000a93 6f44
000a94 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000a95 6f43
000a96 666e
000a97 6769
000a98 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a99 6964
000a9a 6967
000a9b 6174
000a9c 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000a9d 756f
000a9e 7074
000a9f 7475
000aa0 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000aa1 6168
000aa2 6e6e
000aa3 6c65
000aa4 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000aa5 7475
000aa6 6f20
000aa7 2066
000aa8 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000aa9 676e
000aaa 2065
000aab 2528
000aac 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000aad 0a0d
000aae 3c00
000aaf 6567
000ab0 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000ab1 7875
000ab2 6f44
000ab3 7475
000ab4 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000ab5 666e
000ab6 6769
000ab7 203e
000ab8 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000ab9 6320
000aba 6e6f
000abb 6966
000abc 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000abd 6172
000abe 6974
000abf 6e6f
000ac0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000ac1 7375
000ac2 2065
000ac3 6564
000ac4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000ac5 6c75
000ac6 0d74
000ac7 000a
000ac8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000ac9 7465
000aca 7541
000acb 4478
000acc 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000acd 4374
000ace 6e6f
000acf 6966
000ad0 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000ad1 2d20
000ad2 202d
000ad3 4843
000ad4 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
000ad5 2064
000ad6 2d2d
000ad7 0d20
000ad8 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
000ad9 673c
000ada 7465
000adb 7541
000adc 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
000add 756f
000ade 4374
000adf 6e6f
000ae0 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000ae1 3e67
000ae2 6520
000ae3 616e
000ae4 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
000ae5 2065
000ae6 2020
000ae7 2020
000ae8 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000ae9 2020
000aea 305b
000aeb 2578
000aec 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
000aed 5d58
000aee 0a0d
000aef 3c00
000af0 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
000af1 4174
000af2 7875
000af3 6f44
000af4 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000af5 6f43
000af6 666e
000af7 6769
000af8 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000af9 7473
000afa 7461
000afb 4f65
000afc 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
000afd 6576
000afe 746e
000aff 2020
000b00 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
000b01 7830
000b02 3025
000b03 5832
000b04 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000b05 000a
000b06 673c
000b07 7465
000b08 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
000b09 4478
000b0a 756f
000b0b 4374
000b0c 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
000b0d 6966
000b0e 3e67
000b0f 6e20
000b10 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
000b11 6562
000b12 4572
000b13 5376
000b14 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
000b15 2020
000b16 2020
000b17 255b
000b18 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b19 3e2d
000b1a 3c00
000b1b 6567
000b1c 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000b1d 7875
000b1e 6941
000b1f 436e
000b20 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000b21 6966
000b22 3e67
000b23 6120
000b24 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000b25 6f6c
000b26 2067
000b27 6e69
000b28 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000b29 2074
000b2a 6863
000b2b 6e61
000b2c 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000b2d 206c
000b2e 756f
000b2f 2074
000b30 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000b31 7220
000b32 6e61
000b33 6567
000b34 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000b35 6425
000b36 0d29
000b37 000a
000b38 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000b39 7465
000b3a 7541
000b3b 4178
000b3c 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000b3d 6f43
000b3e 666e
000b3f 6769
000b40 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b41 6f6e
000b42 6320
000b43 6e6f
000b44 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b45 7567
000b46 6172
000b47 6974
000b48 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b49 202c
000b4a 7375
000b4b 2065
000b4c 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b4d 6166
000b4e 6c75
000b4f 0d74
000b50 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b51 673c
000b52 7465
000b53 7541
000b54 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000b55 756f
000b56 4374
000b57 6e6f
000b58 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000b59 3e67
000b5a 6120
000b5b 616e
000b5c 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000b5d 2067
000b5e 756f
000b5f 7074
000b60 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000b61 6320
000b62 6168
000b63 6e6e
000b64 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000b65 6f20
000b66 7475
000b67 6f20
000b68 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000b69 6172
000b6a 676e
000b6b 2065
000b6c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000b6d 2964
000b6e 0a0d
000b6f 3c00
000b70 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000b71 4174
000b72 7875
000b73 6f41
000b74 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000b75 6f43
000b76 666e
000b77 6769
000b78 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b79 6f6e
000b7a 6320
000b7b 6e6f
000b7c 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b7d 7567
000b7e 6172
000b7f 6974
000b80 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b81 202c
000b82 7375
000b83 2065
000b84 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b85 6166
000b86 6c75
000b87 0d74
000b88 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b89 673c
000b8a 7465
000b8b 7542
000b8c 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b8d 7265
000b8e 6f43
000b8f 666e
000b90 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b91 203e
000b92 6f6e
000b93 6320
000b94 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000b95 6966
000b96 7567
000b97 6172
000b98 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000b99 6e6f
000b9a 202c
000b9b 7375
000b9c 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000b9d 6564
000b9e 6166
000b9f 6c75
000ba0 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000ba1 000a
000ba2 673c
000ba3 7465
000ba4 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000ba5 7a7a
000ba6 7265
000ba7 6f43
000ba8 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000ba9 6769
000baa 203e
000bab 6e65
000bac 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000bad 656c
000bae 2020
000baf 2020
000bb0 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000bb1 2020
000bb2 2020
000bb3 2020
000bb4 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000bb5 305b
000bb6 2578
000bb7 3230
000bb8 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000bb9 0a0d
000bba 3c00
000bbb 6567
000bbc 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000bbd 7a75
000bbe 657a
000bbf 4372
000bc0 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000bc1 6966
000bc2 3e67
000bc3 6520
000bc4 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000bc5 746e
000bc6 6f53
000bc7 7275
000bc8 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000bc9 754e
000bca 626d
000bcb 7265
000bcc 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000bcd 5b3e
000bce 6425
000bcf 0d5d
000bd0 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000bd1 673c
000bd2 7465
000bd3 7542
000bd4 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000bd5 7265
000bd6 6f43
000bd7 666e
000bd8 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000bd9 203e
000bda 7665
000bdb 6e65
000bdc 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000bdd 756f
000bde 6372
000bdf 2065
000be0 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000be1 2020
000be2 2020
000be3 3e3e
000be4 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000be5 6567
000be6 4574
000be7 766e
000be8 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000be9 7261
000bea 436d
000beb 6e6f
000bec 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000bed 3e67
000bee 6e20
000bef 206f
000bf0 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000bf1 666e
000bf2 6769
000bf3 7275
000bf4 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000bf5 6f69
000bf6 2c6e
000bf7 7520
000bf8 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000bf9 6420
000bfa 6665
000bfb 7561
000bfc 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000bfd 0a0d
000bfe 3c00
000bff 6567
000c00 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c01 766e
000c02 6c41
000c03 7261
000c04 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c05 6e6f
000c06 6966
000c07 3e67
000c08 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c09 6d73
000c0a 5352
000c0b 4953
000c0c 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000c0d 6576
000c0e 206c
000c0f 2020
000c10 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c11 2020
000c12 2020
000c13 255b
000c14 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c15 0a0d
000c16 3c00
000c17 6567
000c18 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c19 766e
000c1a 6c41
000c1b 7261
000c1c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c1d 6e6f
000c1e 6966
000c1f 3e67
000c20 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c21 6d73
000c22 7243
000c23 6465
000c24 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000c25 6142
000c26 616c
000c27 636e
000c28 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000c29 2020
000c2a 2020
000c2b 255b
000c2c 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c2d 0a0d
000c2e 3c00
000c2f 6567
000c30 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c31 766e
000c32 6c41
000c33 7261
000c34 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c35 6e6f
000c36 6966
000c37 3e67
000c38 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000c39 7461
000c3a 6574
000c3b 7972
000c3c 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000c3d 6576
000c3e 206c
000c3f 2020
000c40 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c41 2020
000c42 2020
000c43 255b
000c44 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c45 0a0d
000c46 3c00
000c47 6567
000c48 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c49 766e
000c4a 6c41
000c4b 7261
000c4c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c4d 6e6f
000c4e 6966
000c4f 3e67
000c50 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c51 6d6f
000c52 536d
000c53 6769
000c54 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000c55 4c6c
000c56 7665
000c57 6c65
000c58 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000c59 2020
000c5a 2020
000c5b 255b
000c5c 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c5d 0a0d
000c5e 3c00
000c5f 6567
000c60 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c61 766e
000c62 6c41
000c63 7261
000c64 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c65 6e6f
000c66 6966
000c67 3e67
000c68 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c69 6d6f
000c6a 4c6d
000c6b 736f
000c6c 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000c6d 6c65
000c6e 7961
000c6f 2020
000c70 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000c71 2020
000c72 2020
000c73 255b
000c74 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c75 0a0d
000c76 3c00
000c77 6567
000c78 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c79 766e
000c7a 6c41
000c7b 7261
000c7c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c7d 6e6f
000c7e 6966
000c7f 3e67
000c80 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000c81 6d65
000c82 726f
000c83 4d79
000c84 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000c85 2020
000c86 2020
000c87 2020
000c88 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000c89 2020
000c8a 2020
000c8b 255b
000c8c 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000c8d 0a0d
000c8e 3c00
000c8f 6567
000c90 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c91 6174
000c92 7574
000c93 5273
000c94 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c95 726f
000c96 4374
000c97 6e6f
000c98 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c99 3e67
000c9a 6e20
000c9b 206f
000c9c 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000c9d 666e
000c9e 6769
000c9f 7275
000ca0 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000ca1 6f69
000ca2 2c6e
000ca3 7520
000ca4 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000ca5 6420
000ca6 6665
000ca7 7561
000ca8 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000ca9 0a0d
000caa 3c00
000cab 6567
000cac 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000cad 6174
000cae 7574
000caf 5273
000cb0 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000cb1 726f
000cb2 4374
000cb3 6e6f
000cb4 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000cb5 3e67
000cb6 6120
000cb7 6363
000cb8 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000cb9 2020
000cba 2020
000cbb 2020
000cbc 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000cbd 7830
000cbe 3025
000cbf 5832
000cc0 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000cc1 000a
000cc2 673c
000cc3 7465
000cc4 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000cc5 7461
000cc6 7375
000cc7 6552
000cc8 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000cc9 7472
000cca 6f43
000ccb 666e
000ccc 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000ccd 203e
000cce 6e69
000ccf 7674
000cd0 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000cd1 2020
000cd2 2020
000cd3 2020
000cd4 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000cd5 5d64
000cd6 0a0d
000cd7 3c00
000cd8 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000cd9 4f74
000cda 6570
000cdb 6172
000cdc 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000cdd 676e
000cde 6f43
000cdf 666e
000ce0 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000ce1 203e
000ce2 7245
000ce3 6f72
000ce4 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000ce5 6f20
000ce6 6570
000ce7 6172
000ce8 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000ce9 676e
000cea 6d20
000ceb 646f
000cec 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000ced 6e69
000cee 6176
000cef 696c
000cf0 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000cf1 305b
000cf2 2578
000cf3 3230
000cf4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000cf5 0a0d
000cf6 0d00
000cf7 200a
000cf8 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000cf9 6564
000cfa 2020
000cfb 2020
000cfc 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000cfd 2020
000cfe 2020
000cff 2020
000d00 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000d01 3020
000d02 2578
000d03 3230
000d04 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000d05 0a0d
000d06 6420
000d07 7665
000d08 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000d09 4565
000d0a 616e
000d0b 6c62
000d0c 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000d0d 2020
000d0e 3e20
000d0f 203e
000d10 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000d11 3025
000d12 5832
000d13 0d00
000d14 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000d15 6c61
000d16 7261
000d17 456d
000d18 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000d19 6c62
000d1a 2065
000d1b 2020
000d1c 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000d1d 3e3e
000d1e 3020
000d1f 2578
000d20 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000d21 0058
000d22 0a0d
000d23 7320
000d24 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000d25 6f73
000d26 4572
000d27 616e
000d28 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000d29 2065
000d2a 2020
000d2b 3e20
000d2c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d2d 3c00
000d2e 6573
000d2f 5374
000d30 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000d31 6f73
000d32 4372
000d33 6e6f
000d34 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000d35 3e67
000d36 4520
000d37 5252
000d38 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000d39 6863
000d3a 6e61
000d3b 656e
000d3c 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000d3d 756f
000d3e 2074
000d3f 666f
000d40 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000d41 6e61
000d42 6567
000d43 0a0d
000d44 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000d45 6573
000d46 5374
000d47 6e65
000d48 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000d49 4372
000d4a 6e6f
000d4b 6966
000d4c 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000d4d 4520
000d4e 5252
000d4f 203a
000d50 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000d51 706d
000d52 696c
000d53 676e
000d54 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000d55 6574
000d56 6320
000d57 756f
000d58 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000d59 276e
000d5a 2074
000d5b 6562
000d5c 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000d5d 7465
000d5e 7420
000d5f 206f
000d60 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000d61 000a
000d62 0a0d
000d63 7320
000d64 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000d65 6c70
000d66 6e69
000d67 5267
000d68 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000d69 2065
000d6a 2020
000d6b 3e20
000d6c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d6d 7830
000d6e 3025
000d6f 5834
000d70 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000d71 200a
000d72 6572
000d73 634f
000d74 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000d75 7272
000d76 6e65
000d77 6563
000d78 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000d79 2020
000d7a 3e3e
000d7b 3020
000d7c 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d7d 3430
000d7e 0058
000d7f 0a0d
000d80 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000d81 6d69
000d82 5365
000d83 6174
000d84 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000d85 6f48
000d86 7275
000d87 2020
000d88 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000d89 203e
000d8a 7830
000d8b 3025
000d8c 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000d8d 0d00
000d8e 200a
000d8f 6974
000d90 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000d91 7453
000d92 7261
000d93 4d74
000d94 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000d95 2020
000d96 2020
000d97 3e3e
000d98 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000d99 2578
000d9a 3230
000d9b 0058
000d9c 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000d9d 7420
000d9e 6d69
000d9f 5365
000da0 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000da1 4870
000da2 756f
000da3 2072
000da4 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000da5 3e20
000da6 203e
000da7 7830
000da8 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000da9 5832
000daa 0d00
000dab 200a
000dac 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000dad 656d
000dae 7453
000daf 706f
000db0 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000db1 206e
000db2 2020
000db3 2020
000db4 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000db5 3020
000db6 2578
000db7 3230
000db8 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000db9 0a0d
000dba 6c20
000dbb 776f
000dbc 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000dbd 694c
000dbe 696d
000dbf 2074
000dc0 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000dc1 2020
000dc2 3e20
000dc3 203e
000dc4 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000dc5 5b20
000dc6 3025
000dc7 6c34
000dc8 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000dc9 0d00
000dca 200a
000dcb 6f6c
000dcc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000dcd 4472
000dce 6c65
000dcf 7961
000dd0 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000dd1 2020
000dd2 2020
000dd3 3e3e
000dd4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dd5 2064
000dd6 255b
000dd7 3230
000dd8 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000dd9 0d00
000dda 200a
000ddb 6f6c
000ddc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000ddd 4572
000dde 7478
000ddf 6572
000de0 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000de1 2020
000de2 2020
000de3 3e3e
000de4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000de5 2066
000de6 255b
000de7 3430
000de8 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000de9 005d
000dea 0a0d
000deb 7520
000dec 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000ded 7265
000dee 694c
000def 696d
000df0 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000df1 2020
000df2 2020
000df3 3e20
000df4 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000df5 6625
000df6 5b20
000df7 3025
000df8 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000df9 5d58
000dfa 0d00
000dfb 200a
000dfc 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000dfd 6570
000dfe 4472
000dff 6c65
000e00 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000e01 2020
000e02 2020
000e03 2020
000e04 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000e05 2520
000e06 2064
000e07 255b
000e08 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000e09 5d58
000e0a 0d00
000e0b 200a
000e0c 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000e0d 6570
000e0e 4572
000e0f 7478
000e10 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000e11 656d
000e12 2020
000e13 2020
000e14 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000e15 2520
000e16 2066
000e17 255b
000e18 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000e19 586c
000e1a 005d
000e1b 0a0d
000e1c 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000e1d 6168
000e1e 6e6e
000e1f 6c65
000e20 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000e21 2020
000e22 2020
000e23 2020
000e24 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e25 203e
000e26 255b
000e27 5d64
000e28 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000e29 200a
000e2a 6863
000e2b 6e61
000e2c 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000e2d 456c
000e2e 616e
000e2f 6c62
000e30 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000e31 2020
000e32 3e3e
000e33 3020
000e34 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e35 3230
000e36 0058
000e37 0a0d
000e38 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000e39 616c
000e3a 6d72
000e3b 6544
000e3c 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000e3d 2079
000e3e 2020
000e3f 2020
000e40 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e41 203e
000e42 6425
000e43 0d00
000e44 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000e45 6573
000e46 4174
000e47 7875
000e48 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000e49 7475
000e4a 6f43
000e4b 666e
000e4c 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000e4d 203e
000e4e 6843
000e4f 6e61
000e50 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000e51 206c
000e52 7245
000e53 6f72
000e54 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000e55 0d21
000e56 000a
000e57 0a0d
000e58 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000e59 7465
000e5a 7541
000e5b 4478
000e5c 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000e5d 4374
000e5e 6e6f
000e5f 6966
000e60 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000e61 6520
000e62 6576
000e63 746e
000e64 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e65 7275
000e66 6563
000e67 754e
000e68 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000e69 7265
000e6a 6920
000e6b 2073
000e6c 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000e6d 206f
000e6e 6f6c
000e6f 676e
000e70 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000e71 6425
000e72 2129
000e73 0d21
000e74 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000e75 0a0d
000e76 6320
000e77 6168
000e78 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000e79 6c65
000e7a 2020
000e7b 2020
000e7c 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000e7d 2020
000e7e 2020
000e7f 3e20
000e80 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e81 255b
000e82 5d64
000e83 0d00
000e84 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000e85 6863
000e86 6e61
000e87 656e
000e88 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000e89 616e
000e8a 6c62
000e8b 2065
000e8c 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000e8d 2020
000e8e 3e3e
000e8f 3020
000e90 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e91 3230
000e92 0058
000e93 0a0d
000e94 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000e95 6174
000e96 6574
000e97 6e4f
000e98 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000e99 6e65
000e9a 2074
000e9b 2020
000e9c 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000e9d 3e20
000e9e 203e
000e9f 7830
000ea0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000ea1 5832
000ea2 0d00
000ea3 200a
000ea4 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000ea5 6e65
000ea6 5374
000ea7 756f
000ea8 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000ea9 4e65
000eaa 6d75
000eab 6562
000eac 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000ead 3e3e
000eae 2520
000eaf 0064
000eb0 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000eb1 6520
000eb2 6576
000eb3 746e
000eb4 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000eb5 7275
000eb6 6563
000eb7 2020
000eb8 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000eb9 2020
000eba 3e20
000ebb 203e
000ebc 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000ebd 200a
000ebe 6c61
000ebf 7261
000ec0 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000ec1 7665
000ec2 6c65
000ec3 2020
000ec4 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000ec5 2020
000ec6 3e3e
000ec7 2520
000ec8 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000ec9 0a0d
000eca 733c
000ecb 7465
000ecc 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000ecd 4178
000ece 756f
000ecf 4374
000ed0 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000ed1 6966
000ed2 3e67
000ed3 4320
000ed4 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000ed5 6e6e
000ed6 6c65
000ed7 4520
000ed8 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000ed9 726f
000eda 2121
000edb 0a0d
000edc 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000edd 3c0a
000ede 6573
000edf 4174
000ee0 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000ee1 6f41
000ee2 7475
000ee3 6f43
000ee4 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000ee5 6769
000ee6 203e
000ee7 7665
000ee8 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000ee9 5374
000eea 756f
000eeb 6372
000eec 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000eed 6d75
000eee 6562
000eef 2072
000ef0 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000ef1 7420
000ef2 6f6f
000ef3 6c20
000ef4 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000ef5 2067
000ef6 2528
000ef7 2964
000ef8 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000ef9 0a0d
000efa 0d00
000efb 200a
000efc 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000efd 6576
000efe 4f6c
000eff 456e
000f00 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000f01 746e
000f02 2020
000f03 2020
000f04 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000f05 3e3e
000f06 2520
000f07 0066
000f08 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000f09 733c
000f0a 7465
000f0b 7542
000f0c 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000f0d 7265
000f0e 6f43
000f0f 666e
000f10 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000f11 203e
000f12 7665
000f13 6e65
000f14 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000f15 756f
000f16 6372
000f17 4e65
000f18 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000f19 6562
000f1a 2072
000f1b 7369
000f1c 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000f1d 6f6f
000f1e 6c20
000f1f 6e6f
000f20 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000f21 2528
000f22 2964
000f23 2121
000f24 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000f25 0d00
000f26 200a
000f27 6e65
000f28 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000f29 656c
000f2a 2020
000f2b 2020
000f2c 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000f2d 2020
000f2e 2020
000f2f 2020
000f30 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f31 3020
000f32 2578
000f33 3230
000f34 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000f35 0a0d
000f36 6520
000f37 6576
000f38 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000f39 6f53
000f3a 7275
000f3b 6563
000f3c 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000f3d 2020
000f3e 2020
000f3f 3e20
000f40 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000f41 0a0d
000f42 6720
000f43 6d73
000f44 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000f45 4953
000f46 654c
000f47 6576
000f48 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000f49 2020
000f4a 2020
000f4b 3e3e
000f4c 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000f4d 2066
000f4e 4264
000f4f 0d00
000f50 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000f51 7367
000f52 436d
000f53 6572
000f54 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000f55 4274
000f56 6c61
000f57 6e61
000f58 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000f59 3e20
000f5a 203e
000f5b 6425
000f5c 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000f5d 6861
000f5e 0074
000f5f 0a0d
000f60 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000f61 7461
000f62 6574
000f63 7972
000f64 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000f65 6576
000f66 206c
000f67 2020
000f68 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000f69 3e3e
000f6a 2520
000f6b 2066
000f6c 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000f6d 746c
000f6e 0073
000f6f 0a0d
000f70 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000f71 6d6f
000f72 536d
000f73 6769
000f74 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000f75 4c6c
000f76 7665
000f77 6c65
000f78 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000f79 3e3e
000f7a 2520
000f7b 2066
000f7c 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000f7d 0d00
000f7e 200a
000f7f 6f63
000f80 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000f81 6f4c
000f82 7473
000f83 6544
000f84 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000f85 2079
000f86 2020
000f87 3e20
000f88 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000f89 6425
000f8a 7320
000f8b 6365
000f8c 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000f8d 200a
000f8e 656d
000f8f 6f6d
000f90 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000f91 694d
000f92 206e
000f93 2020
000f94 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000f95 2020
000f96 3e20
000f97 203e
000f98 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000f99 4d20
000f9a 2e42
000f9b 0d00
000f9c 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000f9d 6361
000f9e 6d63
000f9f 2020
000fa0 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000fa1 3e20
000fa2 203e
000fa3 6625
000fa4 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000fa5 0042
000fa6 0a0d
000fa7 6920
000fa8 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000fa9 2076
000faa 2020
000fab 2020
000fac 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000fad 2520
000fae 2064
000faf 6142
000fb0 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000fb1 3c00
000fb2 616d
000fb3 6e69
000fb4 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000fb5 6567
000fb6 5374
000fb7 6e65
000fb8 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000fb9 4372
000fba 6e6f
000fbb 6966
000fbc 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000fbd 6425
000fbe 2029
000fbf 7265
000fc0 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000fc1 0d72
000fc2 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000fc3 453c
000fc4 4854
000fc5 735f
000fc6 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fc7 4e64
000fc8 6361
000fc9 3e6b
000fca 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000fcb 6e65
000fcc 6964
000fcd 676e
000fce 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000fcf 0a0d
000fd0 3c00
000fd1 5445
000fd2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fd3 6573
000fd4 646e
000fd5 7453
000fd6 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000fd7 7375
000fd8 6552
000fd9 7571
000fda 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000fdb 4174
000fdc 6b63
000fdd 203e
000fde 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000fdf 646e
000fe0 6e69
000fe1 2e67
000fe2 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000fe3 000a
000fe4 453c
000fe5 4854
000fe6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000fe7 6e65
000fe8 5364
000fe9 6174
000fea 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000feb 5273
000fec 7065
000fed 726f
000fee 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000fef 646d
000ff0 203e
000ff1 7266
000ff2 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000ff3 4c65
000ff4 6e65
000ff5 7420
000ff6 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000ff7 6c20
000ff8 6e6f
000ff9 2067
000ffa 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000ffb 2064
000ffc 7962
000ffd 6574
000ffe 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000fff 0a0d
001000 3c00
001001 5445
001002 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001003 6573
001004 646e
001005 7453
001006 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
001007 7375
001008 6552
001009 6f70
00100a 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
00100b 6d43
00100c 3e64
00100d 6d20
00100e 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
00100f 6f6c
001010 2063
001011 6166
001012 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
001013 6465
001014 2820
001015 6425
001016 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001017 7479
001018 7365
001019 0d29
00101a 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
00101b 453c
00101c 4854
00101d 735f
00101e 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00101f 4564
001020 6576
001021 746e
001022 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
001023 6f70
001024 7472
001025 6d43
001026 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
001027 5720
001028 6f72
001029 676e
00102a 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
00102b 6576
00102c 746e
00102d 7954
00102e 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
00102f 3020
001030 2578
001031 3230
001032 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
001033 000a
001034 453c
001035 4854
001036 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001037 6e65
001038 4564
001039 6576
00103a 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
00103b 6552
00103c 6f70
00103d 7472
00103e 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00103f 3e64
001040 6120
001041 6464
001042 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
001043 6e65
001044 4c74
001045 676f
001046 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
001047 7565
001048 2865
001049 7830
00104a 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
00104b 5832
00104c 252c
00104d 646c
00104e 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
00104f 2578
001050 3230
001051 2c58
001052 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
001053 3025
001054 5832
001055 2029
001056 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
001057 6c69
001058 6465
001059 0a0d
00105a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00105b 5445
00105c 5f48
00105d 6573
00105e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00105f 7645
001060 6e65
001061 5274
001062 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
001063 726f
001064 4374
001065 646d
001066 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
001067 6573
001068 646e
001069 6e69
00106a 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
00106b 0d2e
00106c 000a
00106d 453c
00106e 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00106f 735f
001070 6e65
001071 4364
001072 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001073 6966
001074 4d67
001075 6e61
001076 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001077 4e65
001078 6361
001079 3e6b
00107a 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
00107b 6e65
00107c 6964
00107d 676e
00107e 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
00107f 0a0d
001080 3c00
001081 5445
001082 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001083 6573
001084 646e
001085 6f43
001086 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
001087 6769
001088 614d
001089 616e
00108a 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
00108b 6341
00108c 3e6b
00108d 6620
00108e 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
00108f 656d
001090 654c
001091 206e
001092 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
001093 206f
001094 6f6c
001095 676e
001096 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
001097 6425
001098 6220
001099 7479
00109a 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00109b 0d29
00109c 000a
00109d 453c
00109e 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00109f 735f
0010a0 6e65
0010a1 4364
0010a2 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
0010a3 6966
0010a4 4d67
0010a5 6e61
0010a6 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
0010a7 4165
0010a8 6b63
0010a9 203e
0010aa 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
0010ab 6c6c
0010ac 636f
0010ad 6620
0010ae 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
0010af 656c
0010b0 2064
0010b1 2528
0010b2 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
0010b3 7962
0010b4 6574
0010b5 2973
0010b6 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
0010b7 3c00
0010b8 5445
0010b9 5f48
0010ba 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
0010bb 646e
0010bc 6f43
0010bd 666e
0010be 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
0010bf 614d
0010c0 616e
0010c1 6567
0010c2 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
0010c3 3e6b
0010c4 7320
0010c5 6e65
0010c6 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
0010c7 676e
0010c8 2e2e
0010c9 0a0d
0010ca 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
0010cb 5445
0010cc 5f48
0010cd 6573
0010ce 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010cf 6144
0010d0 6174
0010d1 6552
0010d2 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010d3 7472
0010d4 6d43
0010d5 3e64
0010d6 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
0010d7 6f72
0010d8 676e
0010d9 6420
0010da 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
0010db 5461
0010dc 7079
0010dd 2065
0010de 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
0010df 3025
0010e0 5832
0010e1 0a0d
0010e2 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
0010e3 5445
0010e4 5f48
0010e5 6573
0010e6 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010e7 6144
0010e8 6174
0010e9 6552
0010ea 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010eb 7472
0010ec 6d43
0010ed 3e64
0010ee 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
0010ef 6464
0010f0 6144
0010f1 6174
0010f2 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
0010f3 5167
0010f4 6575
0010f5 6575
0010f6 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
0010f7 2578
0010f8 3230
0010f9 2c58
0010fa 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
0010fb 2c64
0010fc 7525
0010fd 252c
0010fe 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
0010ff 2966
001100 6620
001101 6961
001102 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001103 0d64
001104 000a
001105 453c
001106 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001107 735f
001108 6e65
001109 4464
00110a 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
00110b 5261
00110c 7065
00110d 726f
00110e 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
00110f 646d
001110 203e
001111 6573
001112 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
001113 6e69
001114 2e67
001115 0d2e
001116 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
001117 453c
001118 4854
001119 735f
00111a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00111b 4c64
00111c 676f
00111d 614d
00111e 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
00111f 7570
001120 616c
001121 6974
001122 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
001123 6341
001124 3e6b
001125 7320
001126 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
001127 6964
001128 676e
001129 2e2e
00112a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00112b 3c00
00112c 5445
00112d 5f48
00112e 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
00112f 646e
001130 654e
001131 7774
001132 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
001133 4d6b
001134 6961
001135 746e
001136 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001137 6e61
001138 6563
001139 6341
00113a 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
00113b 7320
00113c 6e65
00113d 6964
00113e 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
00113f 2e2e
001140 0a0d
001141 3c00
001142 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
001143 5f48
001144 6572
001145 6f6d
001146 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
001147 6544
001148 6976
001149 6563
00114a 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
00114b 746e
00114c 6f72
00114d 416c
00114e 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
00114f 203e
001150 6573
001151 646e
001152 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
001153 2e67
001154 0d2e
001155 000a
001156 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
001157 4854
001158 635f
001159 656c
00115a 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
00115b 7544
00115c 6c70
00115d 6369
00115e 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
00115f 5265
001160 7165
001161 6575
001162 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001163 6d43
001164 3e64
001165 7320
001166 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
001167 6964
001168 676e
001169 2e2e
00116a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00116b 0d00
00116c 3c0a
00116d 5445
00116e 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
00116f 6863
001170 6365
001171 506b
001172 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001173 4c68
001174 676f
001175 203e
001176 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
001177 203d
001178 5245
001179 4f52
00117a 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
00117b 4e49
00117c 4f46
00117d 414d
00117e 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
00117f 4e4f
001180 4920
001181 204e
001182 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
001183 4154
001184 4c20
001185 474f
001186 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
001187 4555
001188 4555
001189 3d20
00118a 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
00118b 0a0d
00118c 3c00
00118d 5445
00118e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00118f 6863
001190 6365
001191 506b
001192 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001193 4c68
001194 676f
001195 203e
001196 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
001197 6174
001198 6f4c
001199 2067
00119a 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
00119b 656d
00119c 255b
00119d 646c
00119e 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
00119f 6863
0011a0 255b
0011a1 5d64
0011a2 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
0011a3 6c61
0011a4 255b
0011a5 322e
0011a6 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
0011a7 0a0d
0011a8 3c00
0011a9 5445
0011aa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011ab 6863
0011ac 6365
0011ad 506b
0011ae 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011af 4c68
0011b0 676f
0011b1 203e
0011b2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011b3 5f47
0011b4 706f
0011b5 6e65
0011b6 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
0011b7 656c
0011b8 2528
0011b9 2973
0011ba 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0011bb 6961
0011bc 656c
0011bd 2c64
0011be 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
0011bf 756f
0011c0 646c
0011c1 276e
0011c2 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
0011c3 6173
0011c4 6576
0011c5 6c20
0011c6 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
0011c7 0a0d
0011c8 3c00
0011c9 5445
0011ca 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011cb 6863
0011cc 6365
0011cd 506b
0011ce 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011cf 4c68
0011d0 676f
0011d1 203e
0011d2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011d3 5f47
0011d4 6e69
0011d5 6573
0011d6 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0011d7 6144
0011d8 6174
0011d9 2928
0011da 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
0011db 6961
0011dc 656c
0011dd 0d64
0011de 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0011df 453c
0011e0 4854
0011e1 635f
0011e2 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
0011e3 6b63
0011e4 7550
0011e5 6873
0011e6 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
0011e7 3e67
0011e8 4c20
0011e9 474f
0011ea 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
0011eb 6f6c
0011ec 6573
0011ed 6946
0011ee 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0011ef 2928
0011f0 6620
0011f1 6961
0011f2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011f3 0d64
0011f4 000a
0011f5 453c
0011f6 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011f7 635f
0011f8 6568
0011f9 6b63
0011fa 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0011fb 6873
0011fc 6f4c
0011fd 3e67
0011fe 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0011ff 736e
001200 7265
001201 6574
001202 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
001203 6144
001204 6174
001205 4c20
001206 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
001207 0a0d
001208 0d00
001209 3c0a
00120a 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
00120b 5f48
00120c 6863
00120d 6365
00120e 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
00120f 7375
001210 4c68
001211 676f
001212 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
001213 3d3d
001214 203d
001215 5245
001216 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
001217 2052
001218 4e49
001219 4f46
00121a 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
00121b 4954
00121c 4e4f
00121d 4920
00121e 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
00121f 5645
001220 4e45
001221 2054
001222 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
001223 2047
001224 5551
001225 5545
001226 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
001227 3d3d
001228 0d3d
001229 000a
00122a 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
00122b 4854
00122c 635f
00122d 6568
00122e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00122f 7550
001230 6873
001231 6f4c
001232 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001233 4520
001234 6576
001235 746e
001236 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
001237 2067
001238 6974
001239 656d
00123a 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
00123b 646c
00123c 2c5d
00123d 6469
00123e 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
00123f 2578
001240 3230
001241 5d58
001242 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
001243 6174
001244 5b74
001245 7830
001246 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
001247 5832
001248 0d5d
001249 000a
00124a 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
00124b 4854
00124c 635f
00124d 6568
00124e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00124f 7550
001250 6873
001251 6f4c
001252 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001253 4920
001254 736e
001255 7265
001256 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
001257 2064
001258 7645
001259 6e65
00125a 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00125b 6f4c
00125c 0d67
00125d 000a
00125e 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
00125f 4854
001260 725f
001261 7465
001262 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001263 736e
001264 696d
001265 3e74
001266 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
001267 6361
001268 656b
001269 2074
00126a 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
00126b 2578
00126c 3230
00126d 5d58
00126e 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
00126f 7078
001270 7269
001271 6465
001272 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
001273 3c00
001274 5445
001275 5f48
001276 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001277 7274
001278 6e61
001279 6d73
00127a 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
00127b 203e
00127c 7075
00127d 6164
00127e 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
00127f 6c20
001280 676f
001281 6144
001282 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
001283 7420
001284 6d69
001285 6f65
001286 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
001287 0a0d
001288 3c00
001289 5445
00128a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00128b 6572
00128c 7274
00128d 6e61
00128e 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
00128f 7469
001290 203e
001291 7075
001292 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
001293 6574
001294 6c20
001295 676f
001296 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
001297 6e65
001298 2074
001299 6974
00129a 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
00129b 756f
00129c 0d74
00129d 000a
00129e 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
00129f 4854
0012a0 725f
0012a1 7465
0012a2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012a3 736e
0012a4 696d
0012a5 3e74
0012a6 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
0012a7 6d6f
0012a8 4c6d
0012a9 736f
0012aa 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
0012ab 6d69
0012ac 7265
0012ad 3d20
0012ae 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
0012af 646c
0012b0 2528
0012b1 586c
0012b2 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
0012b3 000a
0012b4 453c
0012b5 4854
0012b6 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
0012b7 7465
0012b8 6172
0012b9 736e
0012ba 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
0012bb 3e74
0012bc 4c20
0012bd 736f
0012be 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0012bf 6d69
0012c0 7265
0012c1 7420
0012c2 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0012c3 2065
0012c4 656c
0012c5 7466
0012c6 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0012c7 2520
0012c8 646c
0012c9 2528
0012ca 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0012cb 0d29
0012cc 000a
0012cd 0a0d
0012ce 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
0012cf 4854
0012d0 725f
0012d1 7465
0012d2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012d3 736e
0012d4 696d
0012d5 3e74
0012d6 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
0012d7 522d
0012d8 7465
0012d9 6172
0012da 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
0012db 696d
0012dc 7474
0012dd 6e69
0012de 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
0012df 202d
0012e0 305b
0012e1 2578
0012e2 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0012e3 5d58
0012e4 0a0d
0012e5 3c00
0012e6 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
0012e7 5f48
0012e8 7270
0012e9 636f
0012ea 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0012eb 5073
0012ec 6361
0012ed 656b
0012ee 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0012ef 7320
0012f0 6174
0012f1 7574
0012f2 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0012f3 6572
0012f4 7571
0012f5 7365
0012f6 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0012f7 6e69
0012f8 6176
0012f9 696c
0012fa 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0012fb 656c
0012fc 676e
0012fd 6874
0012fe 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0012ff 6425
001300 0d29
001301 000a
001302 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001303 4854
001304 705f
001305 6f72
001306 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001307 7373
001308 6150
001309 6b63
00130a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00130b 203e
00130c 6170
00130d 6c79
00130e 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
00130f 2064
001310 616d
001311 6c6c
001312 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001313 2928
001314 6620
001315 6961
001316 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001317 0d64
001318 000a
001319 453c
00131a 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00131b 705f
00131c 6f72
00131d 6563
00131e 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
00131f 6150
001320 6b63
001321 7465
001322 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001323 7473
001324 7461
001325 7375
001326 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
001327 7571
001328 7365
001329 5074
00132a 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
00132b 6573
00132c 2872
00132d 2029
00132e 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
00132f 6c69
001330 6465
001331 0a0d
001332 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001333 2d0a
001334 732d
001335 6174
001336 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
001337 5273
001338 7165
001339 6575
00133a 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
00133b 6150
00133c 7372
00133d 7265
00133e 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
00133f 4320
001340 444d
001341 5b20
001342 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
001343 3025
001344 5832
001345 0d5d
001346 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001347 6361
001348 6563
001349 7373
00134a 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
00134b 6874
00134c 646f
00134d 2020
00134e 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
00134f 305b
001350 2578
001351 3230
001352 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001353 0a0d
001354 6900
001355 746e
001356 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
001357 6176
001358 206c
001359 2020
00135a 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
00135b 2020
00135c 5b20
00135d 7830
00135e 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
00135f 5834
001360 205d
001361 203d
001362 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
001363 0a0d
001364 7300
001365 6174
001366 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
001367 4c73
001368 7369
001369 2074
00136a 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
00136b 2020
00136c 7c20
00136d 2500
00136e 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
00136f 7c58
001370 0d00
001371 2d0a
001372 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
001373 2e2e
001374 6f44
001375 656e
001376 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
001377 2d20
001378 0d2d
001379 000a
00137a 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
00137b 4854
00137c 705f
00137d 6f72
00137e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00137f 7373
001380 6150
001381 6b63
001382 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001383 203e
001384 7473
001385 7461
001386 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
001387 7220
001388 7065
001389 726f
00138a 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
00138b 6e69
00138c 6176
00138d 696c
00138e 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00138f 656c
001390 676e
001391 6874
001392 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001393 6425
001394 0d29
001395 000a
001396 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
001397 2d2d
001398 7473
001399 7461
00139a 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
00139b 6552
00139c 6f70
00139d 7472
00139e 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
00139f 7372
0013a0 7265
0013a1 2d2d
0013a2 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0013a3 4b43
0013a4 5b20
0013a5 7830
0013a6 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0013a7 5832
0013a8 0d5d
0013a9 000a
0013aa 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
0013ab 7869
0013ac 6954
0013ad 656d
0013ae 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
0013af 2020
0013b0 2020
0013b1 2020
0013b2 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
0013b3 2578
0013b4 3230
0013b5 5d58
0013b6 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013b7 2578
0013b8 3230
0013b9 5d58
0013ba 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bb 2578
0013bc 3230
0013bd 5d58
0013be 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bf 2578
0013c0 3230
0013c1 5d58
0013c2 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0013c3 3c00
0013c4 5445
0013c5 5f48
0013c6 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0013c7 636f
0013c8 7365
0013c9 5073
0013ca 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0013cb 656b
0013cc 3e74
0013cd 6520
0013ce 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
0013cf 746e
0013d0 7220
0013d1 7065
0013d2 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
0013d3 2074
0013d4 6e69
0013d5 6176
0013d6 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0013d7 2064
0013d8 656c
0013d9 676e
0013da 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0013db 2820
0013dc 6425
0013dd 0d29
0013de 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0013df 0a0d
0013e0 2d2d
0013e1 7665
0013e2 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
0013e3 5274
0013e4 7065
0013e5 726f
0013e6 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
0013e7 7261
0013e8 6573
0013e9 2d72
0013ea 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
0013eb 4341
0013ec 204b
0013ed 305b
0013ee 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0013ef 3230
0013f0 5d58
0013f1 0a0d
0013f2 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0013f3 5445
0013f4 5f48
0013f5 7270
0013f6 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013f7 7365
0013f8 5073
0013f9 6361
0013fa 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0013fb 3e74
0013fc 6720
0013fd 746f
0013fe 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0013ff 6576
001400 746e
001401 6c20
001402 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
001403 6120
001404 6b63
001405 0a0d
001406 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
001407 6f6c
001408 5267
001409 7065
00140a 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
00140b 3e74
00140c 4c20
00140d 474f
00140e 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
00140f 6570
001410 466e
001411 6c69
001412 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
001413 7325
001414 2029
001415 6166
001416 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
001417 6465
001418 0a0d
001419 3c00
00141a 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
00141b 5f47
00141c 6572
00141d 6461
00141e 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
00141f 6174
001420 203e
001421 4f4c
001422 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
001423 6573
001424 4c74
001425 7361
001426 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
001427 6e65
001428 2864
001429 2029
00142a 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
00142b 6c69
00142c 6465
00142d 0a0d
00142e 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00142f 4f4c
001430 5f47
001431 6572
001432 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
001433 6144
001434 6174
001435 203e
001436 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
001437 5f47
001438 6573
001439 4c74
00143a 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
00143b 5374
00143c 6e65
00143d 2864
00143e 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
00143f 252c
001440 646c
001441 0d29
001442 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
001443 6c3c
001444 676f
001445 6552
001446 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
001447 7472
001448 203e
001449 4f4c
00144a 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
00144b 6c63
00144c 736f
00144d 4665
00144e 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
00144f 2865
001450 7325
001451 2029
001452 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
001453 6c69
001454 6465
001455 0a0d
001456 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001457 5445
001458 5f48
001459 7270
00145a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00145b 7365
00145c 5073
00145d 6361
00145e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00145f 3e74
001460 4320
001461 6e6f
001462 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
001463 2067
001464 614d
001465 616e
001466 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
001467 0a0d
001468 3c00
001469 5445
00146a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00146b 7270
00146c 636f
00146d 7365
00146e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00146f 6361
001470 656b
001471 3e74
001472 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
001473 6e6f
001474 6966
001475 7567
001476 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001477 6974
001478 6e6f
001479 6d20
00147a 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
00147b 6761
00147c 6d65
00147d 6e65
00147e 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
00147f 6e69
001480 6176
001481 696c
001482 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001483 656c
001484 676e
001485 6874
001486 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001487 6425
001488 0d29
001489 000a
00148a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00148b 4854
00148c 705f
00148d 6f72
00148e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00148f 7373
001490 6150
001491 6b63
001492 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001493 203e
001494 6170
001495 6c79
001496 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
001497 2064
001498 616d
001499 6c6c
00149a 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00149b 2528
00149c 2964
00149d 6620
00149e 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
00149f 656c
0014a0 0d64
0014a1 000a
0014a2 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
0014a3 4854
0014a4 705f
0014a5 6f72
0014a6 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014a7 7373
0014a8 6150
0014a9 6b63
0014aa 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014ab 203e
0014ac 6f63
0014ad 666e
0014ae 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0014af 614d
0014b0 616e
0014b1 6567
0014b2 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
0014b3 7372
0014b4 7265
0014b5 2928
0014b6 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
0014b7 6961
0014b8 656c
0014b9 0d64
0014ba 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0014bb 0a0d
0014bc 2d2d
0014bd 6f63
0014be 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
0014bf 6769
0014c0 614d
0014c1 616e
0014c2 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0014c3 6150
0014c4 7372
0014c5 7265
0014c6 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0014c7 4320
0014c8 444d
0014c9 5b20
0014ca 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0014cb 3025
0014cc 5832
0014cd 0d5d
0014ce 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0014cf 6361
0014d0 6463
0014d1 2020
0014d2 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
0014d3 2020
0014d4 2020
0014d5 2020
0014d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014d7 305b
0014d8 2578
0014d9 3230
0014da 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0014db 0a0d
0014dc 6300
0014dd 666e
0014de 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
0014df 2020
0014e0 2020
0014e1 2020
0014e2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014e3 2020
0014e4 5b20
0014e5 7830
0014e6 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
0014e7 5832
0014e8 0d5d
0014e9 000a
0014ea 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0014eb 4854
0014ec 705f
0014ed 6f72
0014ee 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014ef 7373
0014f0 6150
0014f1 6b63
0014f2 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014f3 203e
0014f4 6567
0014f5 4374
0014f6 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0014f7 6966
0014f8 4c67
0014f9 6e65
0014fa 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0014fb 6620
0014fc 6961
0014fd 656c
0014fe 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0014ff 000a
001500 453c
001501 4854
001502 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
001503 6f72
001504 6563
001505 7373
001506 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001507 6b63
001508 7465
001509 203e
00150a 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
00150b 6766
00150c 6452
00150d 6d20
00150e 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
00150f 6f6c
001510 2863
001511 2029
001512 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
001513 6c69
001514 6465
001515 0a0d
001516 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001517 5445
001518 5f48
001519 7270
00151a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00151b 7365
00151c 5073
00151d 6361
00151e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00151f 3e74
001520 6320
001521 6e6f
001522 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
001523 5267
001524 6165
001525 2864
001526 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
001527 6166
001528 6c69
001529 6465
00152a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00152b 3c00
00152c 5445
00152d 5f48
00152e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00152f 636f
001530 7365
001531 5073
001532 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001533 656b
001534 3e74
001535 5220
001536 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
001537 4d43
001538 2044
001539 203a
00153a 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
00153b 5f48
00153c 6573
00153d 646e
00153e 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
00153f 666e
001540 6769
001541 614d
001542 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001543 6567
001544 6341
001545 286b
001546 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
001547 6166
001548 6c69
001549 6465
00154a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00154b 3c00
00154c 5445
00154d 5f48
00154e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00154f 636f
001550 7365
001551 5073
001552 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001553 656b
001554 3e74
001555 6320
001556 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
001557 5767
001558 2072
001559 616d
00155a 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
00155b 636f
00155c 2928
00155d 6620
00155e 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
00155f 656c
001560 0d64
001561 000a
001562 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001563 4854
001564 705f
001565 6f72
001566 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001567 7373
001568 6150
001569 6b63
00156a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00156b 203e
00156c 6f63
00156d 666e
00156e 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
00156f 7257
001570 7469
001571 2865
001572 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
001573 6166
001574 6c69
001575 6465
001576 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001577 5700
001578 5241
001579 204e
00157a 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
00157b 453c
00157c 4854
00157d 705f
00157e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00157f 6563
001580 7373
001581 6150
001582 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001583 7465
001584 203e
001585 5257
001586 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
001587 444d
001588 3a20
001589 4520
00158a 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
00158b 735f
00158c 6e65
00158d 4364
00158e 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00158f 6966
001590 4d67
001591 6e61
001592 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001593 4165
001594 6b63
001595 2928
001596 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
001597 6961
001598 656c
001599 0d64
00159a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00159b 453c
00159c 4854
00159d 705f
00159e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00159f 6563
0015a0 7373
0015a1 6150
0015a2 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0015a3 7465
0015a4 203e
0015a5 6f63
0015a6 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
0015a7 6769
0015a8 6f43
0015a9 666e
0015aa 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
0015ab 286d
0015ac 2029
0015ad 6166
0015ae 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0015af 6465
0015b0 0a0d
0015b1 3c00
0015b2 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
0015b3 5f48
0015b4 7270
0015b5 636f
0015b6 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0015b7 5073
0015b8 6361
0015b9 656b
0015ba 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0015bb 7520
0015bc 6b6e
0015bd 6f6e
0015be 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0015bf 7420
0015c0 7079
0015c1 2065
0015c2 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
0015c3 2072
0015c4 6f63
0015c5 666e
0015c6 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0015c7 3e2d
0015c8 6361
0015c9 6463
0015ca 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
0015cb 7830
0015cc 3025
0015cd 5832
0015ce 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0015cf 000a
0015d0 453c
0015d1 4854
0015d2 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0015d3 6f72
0015d4 6563
0015d5 7373
0015d6 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0015d7 6b63
0015d8 7465
0015d9 203e
0015da 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
0015db 6174
0015dc 7220
0015dd 7065
0015de 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
0015df 2074
0015e0 6e69
0015e1 6176
0015e2 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0015e3 2064
0015e4 656c
0015e5 676e
0015e6 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0015e7 2820
0015e8 6425
0015e9 0d29
0015ea 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0015eb 0a0d
0015ec 2d2d
0015ed 6164
0015ee 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0015ef 6552
0015f0 6f70
0015f1 7472
0015f2 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0015f3 7372
0015f4 7265
0015f5 2d2d
0015f6 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0015f7 4b43
0015f8 5b20
0015f9 7830
0015fa 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0015fb 5832
0015fc 0d5d
0015fd 000a
0015fe 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0015ff 4854
001600 705f
001601 6f72
001602 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001603 7373
001604 6150
001605 6b63
001606 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001607 203e
001608 6f67
001609 2074
00160a 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
00160b 6174
00160c 6c20
00160d 676f
00160e 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
00160f 6b63
001610 0a0d
001611 3c00
001612 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
001613 5f48
001614 7270
001615 636f
001616 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001617 5073
001618 6361
001619 656b
00161a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00161b 6c20
00161c 676f
00161d 6d20
00161e 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
00161f 7069
001620 6c75
001621 7461
001622 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001623 206e
001624 4328
001625 444d
001626 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
001627 6e69
001628 6176
001629 696c
00162a 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00162b 656c
00162c 676e
00162d 6874
00162e 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00162f 6425
001630 0d29
001631 000a
001632 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001633 4854
001634 705f
001635 6f72
001636 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001637 7373
001638 6150
001639 6b63
00163a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00163b 203e
00163c 6f6c
00163d 4d67
00163e 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
00163f 7069
001640 6c75
001641 7461
001642 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001643 436e
001644 646d
001645 6150
001646 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001647 7265
001648 2928
001649 6620
00164a 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
00164b 656c
00164c 0d64
00164d 000a
00164e 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00164f 2d2d
001650 6f6c
001651 4d67
001652 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001653 7069
001654 6c75
001655 7461
001656 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001657 436e
001658 646d
001659 6150
00165a 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
00165b 7265
00165c 2d2d
00165d 4320
00165e 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
00165f 5b20
001660 7830
001661 3025
001662 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001663 0d5d
001664 000a
001665 5374
001666 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
001667 7472
001668 2020
001669 2020
00166a 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
00166b 2020
00166c 2020
00166d 255b
00166e 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00166f 0d5d
001670 000a
001671 5374
001672 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
001673 2070
001674 2020
001675 2020
001676 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001677 2020
001678 2020
001679 255b
00167a 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00167b 0d5d
00167c 000a
00167d 453c
00167e 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00167f 705f
001680 6f72
001681 6563
001682 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001683 6150
001684 6b63
001685 7465
001686 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001687 6573
001688 4c74
001689 676f
00168a 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
00168b 696e
00168c 7570
00168d 616c
00168e 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
00168f 6353
001690 6568
001691 616d
001692 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
001693 6620
001694 6961
001695 656c
001696 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001697 000a
001698 453c
001699 4854
00169a 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
00169b 6f72
00169c 6563
00169d 7373
00169e 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
00169f 6b63
0016a0 7465
0016a1 203e
0016a2 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
0016a3 2067
0016a4 616d
0016a5 696e
0016a6 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
0016a7 616c
0016a8 6974
0016a9 6e6f
0016aa 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
0016ab 4341
0016ac 294b
0016ad 6920
0016ae 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
0016af 6c61
0016b0 6469
0016b1 6c20
0016b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0016b3 7467
0016b4 2068
0016b5 2528
0016b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0016b7 0a0d
0016b8 0d00
0016b9 2d0a
0016ba 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
0016bb 676f
0016bc 614d
0016bd 696e
0016be 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
0016bf 616c
0016c0 6974
0016c1 6e6f
0016c2 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
0016c3 506b
0016c4 7261
0016c5 6573
0016c6 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
0016c7 202d
0016c8 4341
0016c9 204b
0016ca 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
0016cb 2578
0016cc 3230
0016cd 5d58
0016ce 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0016cf 7300
0016d0 6174
0016d1 7574
0016d2 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0016d3 2020
0016d4 2020
0016d5 2020
0016d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016d7 5b20
0016d8 6c25
0016d9 5d64
0016da 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0016db 3c00
0016dc 5445
0016dd 5f48
0016de 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0016df 636f
0016e0 7365
0016e1 5073
0016e2 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0016e3 656b
0016e4 3e74
0016e5 6e20
0016e6 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
0016e7 6f77
0016e8 6b72
0016e9 6d20
0016ea 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
0016eb 746e
0016ec 6e65
0016ed 6e61
0016ee 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0016ef 6920
0016f0 766e
0016f1 6c61
0016f2 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0016f3 6c20
0016f4 6e65
0016f5 7467
0016f6 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0016f7 2528
0016f8 2964
0016f9 0a0d
0016fa 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0016fb 5445
0016fc 5f48
0016fd 7270
0016fe 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0016ff 7365
001700 5073
001701 6361
001702 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001703 3e74
001704 6e20
001705 7465
001706 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
001707 6b72
001708 614d
001709 6e69
00170a 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00170b 616e
00170c 636e
00170d 5065
00170e 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
00170f 6573
001710 2872
001711 2029
001712 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
001713 6c69
001714 6465
001715 0a0d
001716 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001717 2d0a
001718 6e2d
001719 7465
00171a 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
00171b 6b72
00171c 614d
00171d 6e69
00171e 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00171f 616e
001720 636e
001721 5065
001722 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
001723 6573
001724 2d72
001725 202d
001726 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
001727 2044
001728 305b
001729 2578
00172a 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00172b 5d58
00172c 0a0d
00172d 6300
00172e 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
00172f 2020
001730 2020
001731 2020
001732 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001733 2020
001734 2020
001735 5b20
001736 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001737 3025
001738 5832
001739 0d5d
00173a 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
00173b 6164
00173c 6174
00173d 654c
00173e 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
00173f 2020
001740 2020
001741 2020
001742 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001743 255b
001744 5d64
001745 0a0d
001746 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
001747 7461
001748 2061
001749 2d2d
00174a 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
00174b 2020
00174c 2020
00174d 2020
00174e 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
00174f 000a
001750 2d2d
001751 2d2d
001752 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
001753 2d2d
001754 0a0d
001755 3c00
001756 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
001757 5f48
001758 7270
001759 636f
00175a 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00175b 5073
00175c 6361
00175d 656b
00175e 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00175f 7320
001760 7465
001761 6954
001762 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
001763 7953
001764 636e
001765 6353
001766 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
001767 616d
001768 2928
001769 6620
00176a 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
00176b 656c
00176c 0d64
00176d 000a
00176e 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
00176f 4e52
001770 3a20
001771 3c20
001772 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
001773 5f48
001774 7270
001775 636f
001776 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001777 5073
001778 6361
001779 656b
00177a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00177b 4e20
00177c 5445
00177d 5f57
00177e 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
00177f 454d
001780 535f
001781 4e59
001782 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
001783 203a
001784 5445
001785 5f48
001786 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001787 646e
001788 654e
001789 7774
00178a 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00178b 4d6b
00178c 6961
00178d 746e
00178e 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
00178f 6e61
001790 6563
001791 6341
001792 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
001793 2029
001794 6166
001795 6c69
001796 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001797 0a0d
001798 3c00
001799 5445
00179a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00179b 7270
00179c 636f
00179d 7365
00179e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00179f 6361
0017a0 656b
0017a1 3e74
0017a2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017a3 6d65
0017a4 746f
0017a5 2065
0017a6 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
0017a7 6976
0017a8 6563
0017a9 6320
0017aa 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
0017ab 7274
0017ac 6c6f
0017ad 6920
0017ae 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
0017af 6c61
0017b0 6469
0017b1 6c20
0017b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0017b3 7467
0017b4 2068
0017b5 2528
0017b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0017b7 0a0d
0017b8 3c00
0017b9 5445
0017ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017bb 7270
0017bc 636f
0017bd 7365
0017be 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017bf 6361
0017c0 656b
0017c1 3e74
0017c2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017c3 6d65
0017c4 746f
0017c5 4465
0017c6 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
0017c7 6369
0017c8 4365
0017c9 6e6f
0017ca 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
0017cb 6c6f
0017cc 6150
0017cd 7372
0017ce 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
0017cf 2928
0017d0 6620
0017d1 6961
0017d2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0017d3 0d64
0017d4 000a
0017d5 0a0d
0017d6 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
0017d7 6572
0017d8 6f6d
0017d9 6574
0017da 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
0017db 6976
0017dc 6563
0017dd 6f43
0017de 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
0017df 6f72
0017e0 506c
0017e1 7261
0017e2 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
0017e3 2d72
0017e4 202d
0017e5 4d43
0017e6 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
0017e7 305b
0017e8 2578
0017e9 3230
0017ea 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0017eb 0a0d
0017ec 7600
0017ed 6c61
0017ee 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0017ef 2020
0017f0 2020
0017f1 2020
0017f2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0017f3 2020
0017f4 5b20
0017f5 6c25
0017f6 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0017f7 0a0d
0017f8 3c00
0017f9 5445
0017fa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017fb 7270
0017fc 636f
0017fd 7365
0017fe 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017ff 6361
001800 656b
001801 3e74
001802 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
001803 7465
001804 6954
001805 656d
001806 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
001807 636e
001808 6353
001809 6568
00180a 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
00180b 2528
00180c 646c
00180d 2029
00180e 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
00180f 6c69
001810 6465
001811 0a0d
001812 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
001813 5241
001814 204e
001815 203a
001816 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
001817 4854
001818 705f
001819 6f72
00181a 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00181b 7373
00181c 6150
00181d 6b63
00181e 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00181f 203e
001820 4544
001821 4356
001822 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
001823 5f4c
001824 554d
001825 4554
001826 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
001827 414c
001828 4d52
001829 3a20
00182a 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
00182b 4854
00182c 725f
00182d 6d65
00182e 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
00182f 4465
001830 7665
001831 6369
001832 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
001833 6e6f
001834 7274
001835 6c6f
001836 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
001837 286b
001838 2029
001839 6166
00183a 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00183b 6465
00183c 0a0d
00183d 3c00
00183e 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
00183f 5f48
001840 7270
001841 636f
001842 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001843 5073
001844 6361
001845 656b
001846 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001847 6320
001848 656c
001849 7261
00184a 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
00184b 7369
00184c 2074
00184d 4341
00184e 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
00184f 6e69
001850 6176
001851 696c
001852 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001853 656c
001854 676e
001855 6874
001856 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001857 6425
001858 0d29
001859 000a
00185a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00185b 4854
00185c 705f
00185d 6f72
00185e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00185f 7373
001860 6150
001861 6b63
001862 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001863 203e
001864 6c63
001865 6165
001866 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
001867 7369
001868 5074
001869 7261
00186a 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
00186b 2872
00186c 2029
00186d 6166
00186e 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00186f 6465
001870 0a0d
001871 0d00
001872 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001873 632d
001874 656c
001875 7261
001876 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
001877 7473
001878 6150
001879 7372
00187a 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
00187b 2d2d
00187c 4120
00187d 4b43
00187e 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
00187f 7830
001880 3025
001881 5832
001882 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001883 000a
001884 7473
001885 7461
001886 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
001887 2020
001888 2020
001889 2020
00188a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00188b 2020
00188c 305b
00188d 2578
00188e 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00188f 5d58
001890 0a0d
001891 3c00
001892 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
001893 5f48
001894 7270
001895 636f
001896 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001897 5073
001898 6361
001899 656b
00189a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00189b 6320
00189c 656c
00189d 7261
00189e 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
00189f 7075
0018a0 696c
0018a1 6163
0018a2 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
0018a3 7220
0018a4 7165
0018a5 6575
0018a6 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
0018a7 2820
0018a8 4341
0018a9 294b
0018aa 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
0018ab 4355
0018ac 4543
0018ad 5353
0018ae 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
0018af 0a0d
0018b0 3c00
0018b1 5445
0018b2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0018b3 7270
0018b4 636f
0018b5 7365
0018b6 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0018b7 6361
0018b8 656b
0018b9 3e74
0018ba 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
0018bb 656c
0018bc 7261
0018bd 6420
0018be 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
0018bf 696c
0018c0 6163
0018c1 6574
0018c2 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
0018c3 7165
0018c4 6575
0018c5 7473
0018c6 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
0018c7 4341
0018c8 294b
0018c9 4620
0018ca 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
0018cb 454c
0018cc 5b44
0018cd 7830
0018ce 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
0018cf 5832
0018d0 215d
0018d1 0d21
0018d2 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
0018d3 453c
0018d4 4854
0018d5 705f
0018d6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018d7 6563
0018d8 7373
0018d9 6150
0018da 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018db 7465
0018dc 203e
0018dd 6e75
0018de 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
0018df 776f
0018e0 206e
0018e1 7974
0018e2 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
0018e3 6620
0018e4 726f
0018e5 6320
0018e6 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
0018e7 6c5f
0018e8 7473
0018e9 735f
0018ea 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
0018eb 633e
0018ec 646d
0018ed 5b20
0018ee 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0018ef 3025
0018f0 5832
0018f1 0d5d
0018f2 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0018f3 453c
0018f4 4854
0018f5 705f
0018f6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018f7 6563
0018f8 7373
0018f9 6150
0018fa 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018fb 7465
0018fc 203e
0018fd 6966
0018fe 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0018ff 6177
001900 6572
001901 7520
001902 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
001903 616f
001904 2064
001905 6168
001906 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
001907 7427
001908 7320
001909 7075
00190a 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
00190b 7472
00190c 6465
00190d 7920
00190e 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
00190f 0a0d
001910 0d00
001911 3c0a
001912 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
001913 5f48
001914 7270
001915 636f
001916 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001917 5073
001918 6361
001919 656b
00191a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00191b 6920
00191c 766e
00191d 6c61
00191e 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
00191f 6620
001920 6172
001921 656d
001922 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
001923 7079
001924 2065
001925 2028
001926 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
001927 5832
001928 2920
001929 2121
00192a 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
00192b 3c00
00192c 5445
00192d 5f48
00192e 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00192f 6563
001930 7669
001931 3e65
001932 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
001933 6c61
001934 6f6c
001935 2e63
001936 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
001937 4941
001938 454c
001939 2e44
00193a 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
00193b 000a
00193c 007e
00193d 0a0d
00193e 6e69      	.DB  0xA,0x0,0x7E,0x0,0xD,0xA,0x69,0x6E
00193f 6176
001940 696c
001941 2064
001942 656c      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6C,0x65
001943 676e
001944 6874
001945 2121
001946 0a0d      	.DB  0x6E,0x67,0x74,0x68,0x21,0x21,0xD,0xA
001947 3c00
001948 5445
001949 5f48
00194a 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00194b 6563
00194c 7669
00194d 3e65
00194e 6320      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x63
00194f 6568
001950 6b63
001951 7573
001952 206d      	.DB  0x68,0x65,0x63,0x6B,0x73,0x75,0x6D,0x20
001953 7265
001954 6f72
001955 0d72
001956 000a      	.DB  0x65,0x72,0x72,0x6F,0x72,0xD,0xA,0x0
001957 453c
001958 4854
001959 735f
00195a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00195b 3e64
00195c 5720
00195d 5241
00195e 494e      	.DB  0x64,0x3E,0x20,0x57,0x41,0x52,0x4E,0x49
00195f 474e
001960 3a20
001961 5020
001962 6361      	.DB  0x4E,0x47,0x20,0x3A,0x20,0x50,0x61,0x63
001963 656b
001964 2074
001965 7369
001966 7420      	.DB  0x6B,0x65,0x74,0x20,0x69,0x73,0x20,0x74
001967 6f6f
001968 6c20
001969 6e6f
00196a 2867      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x28
00196b 6425
00196c 6220
00196d 7479
00196e 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00196f 0d29
001970 000a
001971 453c
001972 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001973 735f
001974 6e65
001975 3e64
001976 5720      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20,0x57
001977 5241
001978 494e
001979 474e
00197a 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
00197b 4520
00197c 4854
00197d 735f
00197e 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00197f 2064
001980 616d
001981 6c6c
001982 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001983 6620
001984 6961
001985 656c
001986 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
001987 2528
001988 2964
001989 0a0d
00198a 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
00198b 5445
00198c 5f48
00198d 6573
00198e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00198f 203e
001990 5445
001991 5f48
001992 6461      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x61,0x64
001993 5764
001994 6961
001995 5174
001996 6575      	.DB  0x64,0x57,0x61,0x69,0x74,0x51,0x75,0x65
001997 6575
001998 2928
001999 6620
00199a 6961      	.DB  0x75,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00199b 656c
00199c 2064
00199d 695b
00199e 3a64      	.DB  0x6C,0x65,0x64,0x20,0x5B,0x69,0x64,0x3A
00199f 7830
0019a0 3025
0019a1 5832
0019a2 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0019a3 000a
0019a4 453c
0019a5 4854
0019a6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
0019a7 6977
0019a8 6374
0019a9 4d68
0019aa 646f      	.DB  0x77,0x69,0x74,0x63,0x68,0x4D,0x6F,0x64
0019ab 3e65
0019ac 7320
0019ad 6977
0019ae 6374      	.DB  0x65,0x3E,0x20,0x73,0x77,0x69,0x74,0x63
0019af 2068
0019b0 6f74
0019b1 4320
0019b2 6e6f      	.DB  0x68,0x20,0x74,0x6F,0x20,0x43,0x6F,0x6E
0019b3 6966
0019b4 2067
0019b5 6f6d
0019b6 6564      	.DB  0x66,0x69,0x67,0x20,0x6D,0x6F,0x64,0x65
0019b7 0a0d
0019b8 3c00
0019b9 5445
0019ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0019bb 7773
0019bc 7469
0019bd 6863
0019be 6f4d      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x4D,0x6F
0019bf 6564
0019c0 203e
0019c1 7773
0019c2 7469      	.DB  0x64,0x65,0x3E,0x20,0x73,0x77,0x69,0x74
0019c3 6863
0019c4 7420
0019c5 206f
0019c6 6f4e      	.DB  0x63,0x68,0x20,0x74,0x6F,0x20,0x4E,0x6F
0019c7 6d72
0019c8 6c61
0019c9 6d20
0019ca 646f      	.DB  0x72,0x6D,0x61,0x6C,0x20,0x6D,0x6F,0x64
0019cb 0d65
0019cc 000a
0019cd 453c
0019ce 4854      	.DB  0x65,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0019cf 675f
0019d0 7465
0019d1 6f43
0019d2 666e      	.DB  0x5F,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
0019d3 6769
0019d4 203e
0019d5 7257
0019d6 7469      	.DB  0x69,0x67,0x3E,0x20,0x57,0x72,0x69,0x74
0019d7 2065
0019d8 6f74
0019d9 7520
0019da 7261      	.DB  0x65,0x20,0x74,0x6F,0x20,0x75,0x61,0x72
0019db 2074
0019dc 2030
0019dd 003a
0019de 453c      	.DB  0x74,0x20,0x30,0x20,0x3A,0x0,0x3C,0x45
0019df 4854
0019e0 735f
0019e1 7465
0019e2 6f43      	.DB  0x54,0x48,0x5F,0x73,0x65,0x74,0x43,0x6F
0019e3 666e
0019e4 6769
0019e5 203e
0019e6 616d      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D,0x61
0019e7 6c6c
0019e8 636f
0019e9 4328
0019ea 4e4f      	.DB  0x6C,0x6C,0x6F,0x63,0x28,0x43,0x4F,0x4E
0019eb 5f46
0019ec 4552
0019ed 4441
0019ee 425f      	.DB  0x46,0x5F,0x52,0x45,0x41,0x44,0x5F,0x42
0019ef 4655
0019f0 4546
0019f1 2952
0019f2 6620      	.DB  0x55,0x46,0x46,0x45,0x52,0x29,0x20,0x66
0019f3 6961
0019f4 656c
0019f5 0d64
0019f6 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0019f7 453c
0019f8 4854
0019f9 735f
0019fa 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
0019fb 6f43
0019fc 666e
0019fd 6769
0019fe 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0019ff 7257
001a00 7469
001a01 2065
001a02 6f74      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x74,0x6F
001a03 7520
001a04 7261
001a05 2074
001a06 2030      	.DB  0x20,0x75,0x61,0x72,0x74,0x20,0x30,0x20
001a07 003a
001a08 453c
001a09 4854
001a0a 735f      	.DB  0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a0b 7465
001a0c 6f43
001a0d 666e
001a0e 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a0f 203e
001a10 6572
001a11 6461
001a12 6320      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x63
001a13 6e6f
001a14 6966
001a15 2067
001a16 7266      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x20,0x66,0x72
001a17 6d6f
001a18 4520
001a19 4854
001a1a 6d20      	.DB  0x6F,0x6D,0x20,0x45,0x54,0x48,0x20,0x6D
001a1b 646f
001a1c 6c75
001a1d 2065
001a1e 6166      	.DB  0x6F,0x64,0x75,0x6C,0x65,0x20,0x66,0x61
001a1f 6c69
001a20 6465
001a21 0a0d
001a22 2500      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x25
001a23 3230
001a24 2558
001a25 3230
001a26 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a27 3230
001a28 2558
001a29 3230
001a2a 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2b 3230
001a2c 2558
001a2d 3230
001a2e 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2f 3230
001a30 2558
001a31 3230
001a32 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a33 3230
001a34 2558
001a35 3230
001a36 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a37 3230
001a38 2558
001a39 3230
001a3a 0058      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x0
001a3b 453c
001a3c 4854
001a3d 735f
001a3e 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
001a3f 6f43
001a40 666e
001a41 6769
001a42 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
001a43 6553
001a44 2074
001a45 7453
001a46 6972      	.DB  0x53,0x65,0x74,0x20,0x53,0x74,0x72,0x69
001a47 676e
001a48 5b20
001a49 7325
001a4a 0d5d      	.DB  0x6E,0x67,0x20,0x5B,0x25,0x73,0x5D,0xD
001a4b 000a
001a4c 453c
001a4d 4854
001a4e 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a4f 7465
001a50 6f43
001a51 666e
001a52 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a53 203e
001a54 6553
001a55 7474
001a56 6e69      	.DB  0x3E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E
001a57 2067
001a58 736d
001a59 2067
001a5a 2d2d      	.DB  0x67,0x20,0x6D,0x73,0x67,0x20,0x2D,0x2D
001a5b 0d2d
001a5c 000a
001a5d 0a0d
001a5e 2d2d      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001a5f 0d2d
001a60 000a
001a61 453c
001a62 4854      	.DB  0x2D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001a63 725f
001a64 7365
001a65 7465
001a66 203e      	.DB  0x5F,0x72,0x65,0x73,0x65,0x74,0x3E,0x20
001a67 6552
001a68 6573
001a69 7474
001a6a 6e69      	.DB  0x52,0x65,0x73,0x65,0x74,0x74,0x69,0x6E
001a6b 2067
001a6c 7445
001a6d 6568
001a6e 6e72      	.DB  0x67,0x20,0x45,0x74,0x68,0x65,0x72,0x6E
001a6f 7465
001a70 4d20
001a71 646f
001a72 6c75      	.DB  0x65,0x74,0x20,0x4D,0x6F,0x64,0x75,0x6C
001a73 2c65
001a74 7020
001a75 656c
001a76 7361      	.DB  0x65,0x2C,0x20,0x70,0x6C,0x65,0x61,0x73
001a77 2065
001a78 6177
001a79 7469
001a7a 002e      	.DB  0x65,0x20,0x77,0x61,0x69,0x74,0x2E,0x0
001a7b 2e2e
001a7c 442e
001a7d 6e6f
001a7e 0d65      	.DB  0x2E,0x2E,0x2E,0x44,0x6F,0x6E,0x65,0xD
001a7f 000a      	.DB  0xA,0x0
                 _0x140000:
001a80 733c
001a81 6174
001a82 7574
001a83 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001a84 7165
001a85 6575
001a86 7473
001a87 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
001a88 7372
001a89 7265
001a8a 203e
001a8b 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
001a8c 6c6c
001a8d 636f
001a8e 6620
001a8f 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001a90 656c
001a91 0d64
001a92 000a
001a93 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001a94 6e6f
001a95 6966
001a96 4d67
001a97 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
001a98 6761
001a99 5065
001a9a 7261
001a9b 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
001a9c 3e72
001a9d 0a0d
001a9e 3c00
001a9f 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
001aa0 666e
001aa1 6769
001aa2 614d
001aa3 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001aa4 6567
001aa5 6150
001aa6 7372
001aa7 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
001aa8 203e
001aa9 4552
001aaa 4441
001aab 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
001aac 0d47
001aad 000a
001aae 633c
001aaf 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ab0 6966
001ab1 4d67
001ab2 6e61
001ab3 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001ab4 5065
001ab5 7261
001ab6 6573
001ab7 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
001ab8 5720
001ab9 4952
001aba 4954
001abb 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
001abc 0a0d
001abd 3c00
001abe 6f63
001abf 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ac0 6769
001ac1 614d
001ac2 616e
001ac3 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001ac4 6150
001ac5 7372
001ac6 7265
001ac7 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
001ac8 6f63
001ac9 666e
001aca 654c
001acb 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
001acc 203d
001acd 6425
001ace 0a0d
001acf 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
001ad0 6f63
001ad1 666e
001ad2 6769
001ad3 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
001ad4 616e
001ad5 6567
001ad6 6150
001ad7 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
001ad8 7265
001ad9 203e
001ada 616d
001adb 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
001adc 636f
001add 6620
001ade 6961
001adf 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
001ae0 0d64
001ae1 000a
001ae2 6e3c
001ae3 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
001ae4 6f77
001ae5 6b72
001ae6 614d
001ae7 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
001ae8 6574
001ae9 616e
001aea 636e
001aeb 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
001aec 7261
001aed 6573
001aee 3e72
001aef 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
001af0 6c61
001af1 6f6c
001af2 2063
001af3 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
001af4 6c69
001af5 6465
001af6 2820
001af7 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
001af8 0d29
001af9 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
001afa 673c
001afb 7465
001afc 6f43
001afd 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001afe 6769
001aff 654c
001b00 3e6e
001b01 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001b02 6b6e
001b03 6f6e
001b04 6e77
001b05 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001b06 6e6f
001b07 6966
001b08 7567
001b09 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001b0a 6974
001b0b 6e6f
001b0c 7420
001b0d 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001b0e 2065
001b0f 305b
001b10 2578
001b11 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001b12 5d58
001b13 0a0d
001b14 3c00
001b15 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001b16 666e
001b17 6769
001b18 6552
001b19 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b1a 203e
001b1b 4f43
001b1c 464e
001b1d 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001b1e 4f52
001b1f 4550
001b20 5452
001b21 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001b22 2053
001b23 616d
001b24 6c6c
001b25 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001b26 2031
001b27 6166
001b28 6c69
001b29 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001b2a 2820
001b2b 6425
001b2c 6220
001b2d 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001b2e 7365
001b2f 0d29
001b30 000a
001b31 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001b32 6e6f
001b33 6966
001b34 5267
001b35 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001b36 3e64
001b37 6720
001b38 7465
001b39 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001b3a 706f
001b3b 7265
001b3c 6974
001b3d 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001b3e 6f43
001b3f 666e
001b40 6769
001b41 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001b42 6620
001b43 6961
001b44 656c
001b45 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001b46 000a
001b47 0a0d
001b48 2d2d
001b49 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001b4a 4552
001b4b 4441
001b4c 4320
001b4d 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001b4e 5f46
001b4f 5250
001b50 504f
001b51 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001b52 4954
001b53 5345
001b54 2d20
001b55 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001b56 0a0d
001b57 2500
001b58 0d73
001b59 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001b5a 6425
001b5b 0a0d
001b5c 3c00
001b5d 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001b5e 666e
001b5f 6769
001b60 6552
001b61 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b62 203e
001b63 4f43
001b64 464e
001b65 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001b66 4550
001b67 4152
001b68 4554
001b69 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001b6a 6c61
001b6b 6f6c
001b6c 3163
001b6d 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001b6e 6961
001b6f 656c
001b70 2064
001b71 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001b72 2064
001b73 7962
001b74 6574
001b75 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001b76 0a0d
001b77 3c00
001b78 6f63
001b79 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001b7a 6769
001b7b 6552
001b7c 6461
001b7d 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001b7e 6567
001b7f 4f74
001b80 6570
001b81 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001b82 6974
001b83 676e
001b84 6f43
001b85 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001b86 6769
001b87 2928
001b88 6620
001b89 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001b8a 656c
001b8b 0d64
001b8c 000a
001b8d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001b8e 2d2d
001b8f 202d
001b90 4552
001b91 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001b92 4320
001b93 4e4f
001b94 5f46
001b95 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001b96 5245
001b97 5441
001b98 2045
001b99 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001b9a 0d2d
001b9b 000a
001b9c 6f6d
001b9d 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001b9e 2020
001b9f 2020
001ba0 2020
001ba1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001ba2 2020
001ba3 2020
001ba4 305b
001ba5 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001ba6 3230
001ba7 5d58
001ba8 0a0d
001ba9 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001baa 7665
001bab 6369
001bac 4565
001bad 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001bae 6c62
001baf 2065
001bb0 2020
001bb1 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001bb2 7830
001bb3 3025
001bb4 5832
001bb5 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001bb6 000a
001bb7 6c61
001bb8 7261
001bb9 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001bba 616e
001bbb 6c62
001bbc 2065
001bbd 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001bbe 2020
001bbf 305b
001bc0 2578
001bc1 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001bc2 5d58
001bc3 0a0d
001bc4 7300
001bc5 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001bc6 6f73
001bc7 4572
001bc8 616e
001bc9 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001bca 2065
001bcb 2020
001bcc 0020
001bcd 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001bce 2578
001bcf 3230
001bd0 5d58
001bd1 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001bd2 6f63
001bd3 666e
001bd4 6769
001bd5 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001bd6 6461
001bd7 203e
001bd8 4f43
001bd9 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001bda 535f
001bdb 4e45
001bdc 4f53
001bdd 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001bde 616d
001bdf 6c6c
001be0 636f
001be1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001be2 6166
001be3 6c69
001be4 6465
001be5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001be6 6425
001be7 6220
001be8 7479
001be9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001bea 0d29
001beb 000a
001bec 633c
001bed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001bee 6966
001bef 5267
001bf0 6165
001bf1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001bf2 6720
001bf3 7465
001bf4 6553
001bf5 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001bf6 726f
001bf7 6f43
001bf8 666e
001bf9 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001bfa 2928
001bfb 6620
001bfc 6961
001bfd 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001bfe 0d64
001bff 000a
001c00 0a0d
001c01 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001c02 202d
001c03 4552
001c04 4441
001c05 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001c06 4e4f
001c07 5f46
001c08 4553
001c09 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001c0a 524f
001c0b 5b20
001c0c 6425
001c0d 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001c0e 2d2d
001c0f 0a0d
001c10 7300
001c11 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001c12 6c70
001c13 6e69
001c14 5267
001c15 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001c16 2065
001c17 2020
001c18 5b20
001c19 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c1a 0d5d
001c1b 000a
001c1c 6572
001c1d 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001c1e 7563
001c1f 7272
001c20 6e65
001c21 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001c22 2020
001c23 2020
001c24 305b
001c25 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001c26 3430
001c27 5d58
001c28 0a0d
001c29 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001c2a 6d69
001c2b 5365
001c2c 6174
001c2d 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001c2e 6f48
001c2f 7275
001c30 2020
001c31 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001c32 6425
001c33 0d5d
001c34 000a
001c35 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001c36 656d
001c37 7453
001c38 7261
001c39 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001c3a 6e69
001c3b 2020
001c3c 2020
001c3d 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001c3e 5d64
001c3f 0a0d
001c40 7400
001c41 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001c42 5365
001c43 6f74
001c44 4870
001c45 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001c46 2072
001c47 2020
001c48 5b20
001c49 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c4a 0d5d
001c4b 000a
001c4c 6974
001c4d 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001c4e 7453
001c4f 706f
001c50 694d
001c51 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001c52 2020
001c53 2020
001c54 255b
001c55 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001c56 0a0d
001c57 6c00
001c58 776f
001c59 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001c5a 694c
001c5b 696d
001c5c 2074
001c5d 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001c5e 2020
001c5f 5b20
001c60 6625
001c61 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001c62 000a
001c63 6f6c
001c64 6577
001c65 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001c66 6c65
001c67 7961
001c68 2020
001c69 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001c6a 2020
001c6b 255b
001c6c 5d64
001c6d 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c6e 6c00
001c6f 776f
001c70 7265
001c71 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001c72 7274
001c73 6d65
001c74 2065
001c75 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001c76 5b20
001c77 6625
001c78 0d5d
001c79 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001c7a 7075
001c7b 6570
001c7c 4c72
001c7d 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001c7e 7469
001c7f 2020
001c80 2020
001c81 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001c82 255b
001c83 5d66
001c84 0a0d
001c85 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001c86 7070
001c87 7265
001c88 6544
001c89 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001c8a 2079
001c8b 2020
001c8c 2020
001c8d 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001c8e 6425
001c8f 0d5d
001c90 000a
001c91 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001c92 6570
001c93 4572
001c94 7478
001c95 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001c96 656d
001c97 2020
001c98 2020
001c99 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001c9a 5d66
001c9b 0a0d
001c9c 3c00
001c9d 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001c9e 666e
001c9f 6769
001ca0 6552
001ca1 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001ca2 203e
001ca3 4f43
001ca4 464e
001ca5 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001ca6 5855
001ca7 4944
001ca8 6d20
001ca9 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001caa 6f6c
001cab 3163
001cac 6620
001cad 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001cae 656c
001caf 2064
001cb0 2528
001cb1 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001cb2 7962
001cb3 6574
001cb4 2973
001cb5 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001cb6 3c00
001cb7 6f63
001cb8 666e
001cb9 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001cba 6552
001cbb 6461
001cbc 203e
001cbd 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001cbe 4174
001cbf 7875
001cc0 6944
001cc1 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001cc2 6e6f
001cc3 6966
001cc4 2867
001cc5 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001cc6 6166
001cc7 6c69
001cc8 6465
001cc9 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001cca 0d00
001ccb 2d0a
001ccc 2d2d
001ccd 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001cce 4145
001ccf 2044
001cd0 4f43
001cd1 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001cd2 415f
001cd3 5855
001cd4 4944
001cd5 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001cd6 6425
001cd7 2d5d
001cd8 2d2d
001cd9 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001cda 6300
001cdb 6168
001cdc 6e6e
001cdd 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001cde 6e45
001cdf 6261
001ce0 656c
001ce1 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001ce2 2020
001ce3 305b
001ce4 2578
001ce5 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001ce6 5d58
001ce7 0a0d
001ce8 6100
001ce9 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001cea 6d72
001ceb 6544
001cec 616c
001ced 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001cee 2020
001cef 2020
001cf0 2020
001cf1 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001cf2 5d64
001cf3 0a0d
001cf4 3c00
001cf5 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001cf6 666e
001cf7 6769
001cf8 6552
001cf9 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001cfa 203e
001cfb 4f43
001cfc 464e
001cfd 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001cfe 5855
001cff 4f44
001d00 6d20
001d01 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001d02 6f6c
001d03 3163
001d04 6620
001d05 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001d06 656c
001d07 2064
001d08 2528
001d09 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001d0a 7962
001d0b 6574
001d0c 2973
001d0d 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001d0e 3c00
001d0f 6f63
001d10 666e
001d11 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001d12 6552
001d13 6461
001d14 203e
001d15 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001d16 4174
001d17 7875
001d18 6f44
001d19 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001d1a 6f43
001d1b 666e
001d1c 6769
001d1d 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001d1e 6620
001d1f 6961
001d20 656c
001d21 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001d22 000a
001d23 0a0d
001d24 2d2d
001d25 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001d26 4552
001d27 4441
001d28 4320
001d29 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001d2a 5f46
001d2b 5541
001d2c 4458
001d2d 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001d2e 255b
001d2f 5d64
001d30 2d2d
001d31 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001d32 000a
001d33 6863
001d34 6e61
001d35 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001d36 456c
001d37 616e
001d38 6c62
001d39 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001d3a 2020
001d3b 2020
001d3c 305b
001d3d 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001d3e 3230
001d3f 5d58
001d40 0a0d
001d41 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001d42 6174
001d43 6574
001d44 6e4f
001d45 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001d46 6e65
001d47 2074
001d48 2020
001d49 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001d4a 5b20
001d4b 6425
001d4c 0d5d
001d4d 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001d4e 7665
001d4f 6e65
001d50 5374
001d51 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001d52 6372
001d53 4e65
001d54 6d75
001d55 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001d56 2072
001d57 255b
001d58 5d64
001d59 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001d5a 6500
001d5b 6576
001d5c 746e
001d5d 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001d5e 7275
001d5f 6563
001d60 2020
001d61 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001d62 2020
001d63 0020
001d64 633c
001d65 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001d66 6966
001d67 5267
001d68 6165
001d69 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d6a 4320
001d6b 4e4f
001d6c 5f46
001d6d 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001d6e 4158
001d6f 2049
001d70 616d
001d71 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001d72 636f
001d73 2031
001d74 6166
001d75 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001d76 6465
001d77 2820
001d78 6425
001d79 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001d7a 7479
001d7b 7365
001d7c 0d29
001d7d 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001d7e 633c
001d7f 6e6f
001d80 6966
001d81 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d82 6165
001d83 3e64
001d84 6720
001d85 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001d86 7541
001d87 4178
001d88 6e69
001d89 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001d8a 666e
001d8b 6769
001d8c 2928
001d8d 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001d8e 6961
001d8f 656c
001d90 0d64
001d91 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001d92 0a0d
001d93 2d2d
001d94 202d
001d95 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001d96 4441
001d97 4320
001d98 4e4f
001d99 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d9a 5541
001d9b 4158
001d9c 2049
001d9d 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001d9e 5d64
001d9f 2d2d
001da0 0d2d
001da1 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001da2 6c61
001da3 7261
001da4 446d
001da5 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001da6 7961
001da7 2020
001da8 2020
001da9 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001daa 5b20
001dab 6625
001dac 0d5d
001dad 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001dae 633c
001daf 6e6f
001db0 6966
001db1 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001db2 6165
001db3 3e64
001db4 4320
001db5 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001db6 5f46
001db7 5541
001db8 4158
001db9 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001dba 616d
001dbb 6c6c
001dbc 636f
001dbd 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001dbe 6166
001dbf 6c69
001dc0 6465
001dc1 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001dc2 6425
001dc3 6220
001dc4 7479
001dc5 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001dc6 0d29
001dc7 000a
001dc8 633c
001dc9 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001dca 6966
001dcb 5267
001dcc 6165
001dcd 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001dce 6720
001dcf 7465
001dd0 7541
001dd1 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001dd2 756f
001dd3 4374
001dd4 6e6f
001dd5 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001dd6 2867
001dd7 2029
001dd8 6166
001dd9 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001dda 6465
001ddb 0a0d
001ddc 0d00
001ddd 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001dde 2d2d
001ddf 5220
001de0 4145
001de1 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001de2 4f43
001de3 464e
001de4 415f
001de5 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001de6 4f41
001de7 5b20
001de8 6425
001de9 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001dea 2d2d
001deb 0a0d
001dec 6c00
001ded 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001dee 6c65
001def 6e4f
001df0 7645
001df1 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001df2 2074
001df3 2020
001df4 2020
001df5 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001df6 6625
001df7 0d5d
001df8 000a
001df9 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001dfa 6e6f
001dfb 6966
001dfc 5267
001dfd 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001dfe 3e64
001dff 4320
001e00 4e4f
001e01 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001e02 5542
001e03 5a5a
001e04 5245
001e05 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001e06 6c61
001e07 6f6c
001e08 3163
001e09 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001e0a 6961
001e0b 656c
001e0c 2064
001e0d 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001e0e 2064
001e0f 7962
001e10 6574
001e11 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001e12 0a0d
001e13 3c00
001e14 6f63
001e15 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001e16 6769
001e17 6552
001e18 6461
001e19 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001e1a 6567
001e1b 4274
001e1c 7a75
001e1d 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001e1e 4372
001e1f 6e6f
001e20 6966
001e21 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001e22 2029
001e23 6166
001e24 6c69
001e25 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001e26 0a0d
001e27 0d00
001e28 2d0a
001e29 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001e2a 5220
001e2b 4145
001e2c 2044
001e2d 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001e2e 464e
001e2f 425f
001e30 5a55
001e31 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001e32 2052
001e33 2d2d
001e34 0d2d
001e35 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001e36 6e65
001e37 6261
001e38 656c
001e39 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001e3a 2020
001e3b 2020
001e3c 2020
001e3d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001e3e 2020
001e3f 305b
001e40 2578
001e41 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001e42 5d58
001e43 0a0d
001e44 3c00
001e45 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001e46 666e
001e47 6769
001e48 6552
001e49 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001e4a 203e
001e4b 4f43
001e4c 464e
001e4d 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001e4e 564e
001e4f 4c41
001e50 5241
001e51 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001e52 616d
001e53 6c6c
001e54 636f
001e55 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001e56 6166
001e57 6c69
001e58 6465
001e59 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001e5a 6425
001e5b 6220
001e5c 7479
001e5d 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001e5e 0d29
001e5f 000a
001e60 633c
001e61 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001e62 6966
001e63 5267
001e64 6165
001e65 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001e66 6720
001e67 7465
001e68 6e45
001e69 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001e6a 616c
001e6b 6d72
001e6c 6f43
001e6d 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001e6e 6769
001e6f 2928
001e70 6620
001e71 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001e72 656c
001e73 0d64
001e74 000a
001e75 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001e76 2d2d
001e77 202d
001e78 4552
001e79 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001e7a 4320
001e7b 4e4f
001e7c 5f46
001e7d 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001e7e 4156
001e7f 414c
001e80 4d52
001e81 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001e82 2d2d
001e83 0a0d
001e84 6700
001e85 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001e86 5352
001e87 4953
001e88 654c
001e89 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001e8a 206c
001e8b 2020
001e8c 2020
001e8d 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001e8e 6625
001e8f 0d5d
001e90 000a
001e91 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001e92 436d
001e93 6572
001e94 6964
001e95 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001e96 6c61
001e97 6e61
001e98 6563
001e99 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001e9a 255b
001e9b 5d64
001e9c 0a0d
001e9d 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001e9e 7461
001e9f 6574
001ea0 7972
001ea1 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001ea2 6576
001ea3 206c
001ea4 2020
001ea5 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001ea6 5b20
001ea7 6625
001ea8 0d5d
001ea9 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001eaa 6f63
001eab 6d6d
001eac 6953
001ead 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001eae 6c61
001eaf 654c
001eb0 6576
001eb1 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001eb2 2020
001eb3 255b
001eb4 5d66
001eb5 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001eb6 6300
001eb7 6d6f
001eb8 4c6d
001eb9 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001eba 4474
001ebb 6c65
001ebc 7961
001ebd 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001ebe 2020
001ebf 5b20
001ec0 6425
001ec1 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001ec2 000a
001ec3 656d
001ec4 6f6d
001ec5 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001ec6 694d
001ec7 206e
001ec8 2020
001ec9 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001eca 2020
001ecb 2020
001ecc 255b
001ecd 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001ece 0a0d
001ecf 3c00
001ed0 6f63
001ed1 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ed2 6769
001ed3 6552
001ed4 6461
001ed5 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001ed6 4f43
001ed7 464e
001ed8 535f
001ed9 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001eda 5254
001edb 5045
001edc 524f
001edd 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001ede 616d
001edf 6c6c
001ee0 636f
001ee1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001ee2 6166
001ee3 6c69
001ee4 6465
001ee5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001ee6 6425
001ee7 6220
001ee8 7479
001ee9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001eea 0d29
001eeb 000a
001eec 633c
001eed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001eee 6966
001eef 5267
001ef0 6165
001ef1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001ef2 6720
001ef3 7465
001ef4 7453
001ef5 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001ef6 7375
001ef7 6552
001ef8 6f70
001ef9 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001efa 6f43
001efb 666e
001efc 6769
001efd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001efe 6620
001eff 6961
001f00 656c
001f01 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001f02 000a
001f03 0a0d
001f04 2d2d
001f05 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f06 4552
001f07 4441
001f08 4320
001f09 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001f0a 5f46
001f0b 5453
001f0c 5441
001f0d 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001f0e 4f50
001f0f 5452
001f10 2d20
001f11 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001f12 0a0d
001f13 6100
001f14 6363
001f15 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001f16 2020
001f17 2020
001f18 5b20
001f19 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001f1a 3025
001f1b 5832
001f1c 0d5d
001f1d 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001f1e 6e69
001f1f 7674
001f20 2020
001f21 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001f22 2020
001f23 255b
001f24 5d64
001f25 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001f26 3c00
001f27 6f63
001f28 666e
001f29 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f2a 6552
001f2b 6461
001f2c 203e
001f2d 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001f2e 6e6b
001f2f 776f
001f30 206e
001f31 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001f32 666e
001f33 6769
001f34 7275
001f35 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001f36 6f69
001f37 206e
001f38 7974
001f39 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001f3a 5b20
001f3b 7830
001f3c 3025
001f3d 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001f3e 0d5d
001f3f 000a
001f40 0a0d
001f41 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001f42 2d2d
001f43 5720
001f44 4952
001f45 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001f46 4320
001f47 4e4f
001f48 4946
001f49 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001f4a 6170
001f4b 6b63
001f4c 7465
001f4d 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001f4e 6425
001f4f 2d29
001f50 2d2d
001f51 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001f52 000a
001f53 0a0d
001f54 2d2d
001f55 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f56 7257
001f57 7469
001f58 2065
001f59 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f5a 464e
001f5b 505f
001f5c 4f52
001f5d 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001f5e 5452
001f5f 4549
001f60 2053
001f61 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001f62 002d
001f63 633c
001f64 6e6f
001f65 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001f66 5767
001f67 6972
001f68 6574
001f69 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001f6a 6573
001f6b 5074
001f6c 6f72
001f6d 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001f6e 7472
001f6f 6569
001f70 4373
001f71 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001f72 6966
001f73 2867
001f74 2029
001f75 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001f76 6c69
001f77 6465
001f78 0a0d
001f79 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001f7a 2d0a
001f7b 2d2d
001f7c 5720
001f7d 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001f7e 6574
001f7f 4320
001f80 4e4f
001f81 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001f82 504f
001f83 5245
001f84 5441
001f85 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001f86 2d2d
001f87 002d
001f88 633c
001f89 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f8a 6966
001f8b 5767
001f8c 6972
001f8d 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f8e 203e
001f8f 6573
001f90 4f74
001f91 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001f92 6172
001f93 6974
001f94 676e
001f95 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001f96 666e
001f97 6769
001f98 2928
001f99 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f9a 6961
001f9b 656c
001f9c 0d64
001f9d 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f9e 0a0d
001f9f 2d2d
001fa0 202d
001fa1 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001fa2 7469
001fa3 2065
001fa4 4f43
001fa5 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001fa6 535f
001fa7 4e45
001fa8 4f53
001fa9 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001faa 2528
001fab 2964
001fac 2d20
001fad 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001fae 3c00
001faf 6f63
001fb0 666e
001fb1 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001fb2 7257
001fb3 7469
001fb4 3e65
001fb5 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001fb6 7465
001fb7 6553
001fb8 736e
001fb9 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001fba 6f43
001fbb 666e
001fbc 6769
001fbd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001fbe 6620
001fbf 6961
001fc0 656c
001fc1 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001fc2 000a
001fc3 0a0d
001fc4 2d2d
001fc5 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001fc6 7257
001fc7 7469
001fc8 2065
001fc9 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001fca 464e
001fcb 415f
001fcc 5855
001fcd 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001fce 2820
001fcf 6425
001fd0 2029
001fd1 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001fd2 002d
001fd3 633c
001fd4 6e6f
001fd5 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001fd6 5767
001fd7 6972
001fd8 6574
001fd9 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001fda 6573
001fdb 4174
001fdc 7875
001fdd 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001fde 436e
001fdf 6e6f
001fe0 6966
001fe1 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001fe2 2029
001fe3 6166
001fe4 6c69
001fe5 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001fe6 0a0d
001fe7 0d00
001fe8 2d0a
001fe9 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001fea 5720
001feb 6972
001fec 6574
001fed 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001fee 4e4f
001fef 5f46
001ff0 5541
001ff1 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001ff2 204f
001ff3 2528
001ff4 2964
001ff5 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001ff6 2d2d
001ff7 3c00
001ff8 6f63
001ff9 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ffa 6769
001ffb 7257
001ffc 7469
001ffd 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001ffe 7320
001fff 7465
002000 7541
002001 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
002002 756f
002003 4374
002004 6e6f
002005 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
002006 2867
002007 2029
002008 6166
002009 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00200a 6465
00200b 0a0d
00200c 0d00
00200d 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00200e 2d2d
00200f 5720
002010 6972
002011 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
002012 4320
002013 4e4f
002014 5f46
002015 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
002016 4158
002017 2049
002018 2528
002019 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
00201a 2d20
00201b 2d2d
00201c 3c00
00201d 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
00201e 666e
00201f 6769
002020 7257
002021 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
002022 3e65
002023 7320
002024 7465
002025 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
002026 4178
002027 6e69
002028 6f43
002029 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
00202a 6769
00202b 2928
00202c 6620
00202d 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00202e 656c
00202f 0d64
002030 000a
002031 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
002032 2d2d
002033 202d
002034 7257
002035 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002036 2065
002037 4f43
002038 464e
002039 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
00203a 5855
00203b 4f41
00203c 2820
00203d 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
00203e 2029
00203f 2d2d
002040 002d
002041 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
002042 6e6f
002043 6966
002044 5767
002045 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002046 6574
002047 203e
002048 6573
002049 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
00204a 7875
00204b 6f41
00204c 7475
00204d 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
00204e 666e
00204f 6769
002050 2928
002051 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
002052 6961
002053 656c
002054 0d64
002055 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002056 0a0d
002057 2d2d
002058 202d
002059 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
00205a 7469
00205b 2065
00205c 4f43
00205d 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
00205e 425f
00205f 5a55
002060 455a
002061 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
002062 2d2d
002063 002d
002064 633c
002065 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
002066 6966
002067 5767
002068 6972
002069 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
00206a 203e
00206b 6573
00206c 4274
00206d 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
00206e 657a
00206f 4372
002070 6e6f
002071 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
002072 2867
002073 2029
002074 6166
002075 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002076 6465
002077 0a0d
002078 0d00
002079 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00207a 2d2d
00207b 5720
00207c 6972
00207d 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
00207e 4320
00207f 4e4f
002080 5f46
002081 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
002082 4156
002083 414c
002084 4d52
002085 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
002086 2d2d
002087 3c00
002088 6f63
002089 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
00208a 6769
00208b 7257
00208c 7469
00208d 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
00208e 7320
00208f 7465
002090 6e45
002091 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
002092 616c
002093 6d72
002094 6f43
002095 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
002096 6769
002097 2928
002098 6620
002099 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00209a 656c
00209b 0d64
00209c 000a
00209d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00209e 2d2d
00209f 202d
0020a0 7257
0020a1 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
0020a2 2065
0020a3 4f43
0020a4 464e
0020a5 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
0020a6 4154
0020a7 5254
0020a8 5045
0020a9 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
0020aa 2054
0020ab 2d2d
0020ac 002d
0020ad 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
0020ae 6e6f
0020af 6966
0020b0 5767
0020b1 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
0020b2 6574
0020b3 203e
0020b4 6573
0020b5 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
0020b6 6174
0020b7 7574
0020b8 5273
0020b9 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
0020ba 726f
0020bb 4374
0020bc 6e6f
0020bd 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
0020be 2867
0020bf 2029
0020c0 6166
0020c1 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0020c2 6465
0020c3 0a0d
0020c4 3c00
0020c5 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0020c6 4c74
0020c7 676f
0020c8 614d
0020c9 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
0020ca 7570
0020cb 616c
0020cc 6574
0020cd 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
0020ce 6568
0020cf 616d
0020d0 203e
0020d1 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
0020d2 656d
0020d3 7020
0020d4 7265
0020d5 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
0020d6 2064
0020d7 7265
0020d8 6f72
0020d9 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
0020da 7473
0020db 7261
0020dc 5b74
0020dd 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
0020de 5d64
0020df 2d20
0020e0 7320
0020e1 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
0020e2 5b70
0020e3 6c25
0020e4 5d64
0020e5 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0020e6 3c00
0020e7 6573
0020e8 5474
0020e9 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
0020ea 5365
0020eb 6e79
0020ec 5363
0020ed 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
0020ee 6d65
0020ef 3e61
0020f0 4720
0020f1 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
0020f2 3020
0020f3 5520
0020f4 696e
0020f5 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
0020f6 6974
0020f7 656d
0020f8 7320
0020f9 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
0020fa 706d
0020fb 0a0d
0020fc 3c00
0020fd 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
0020fe 5474
0020ff 6d69
002100 5365
002101 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
002102 5363
002103 6863
002104 6d65
002105 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
002106 5220
002107 6365
002108 6965
002109 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
00210a 2064
00210b 6974
00210c 656d
00210d 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
00210e 6e79
00210f 2e63
002110 7020
002111 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
002112 656b
002113 2074
002114 6c25
002115 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
002116 000a
002117 733c
002118 7465
002119 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
00211a 656d
00211b 7953
00211c 636e
00211d 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
00211e 6568
00211f 616d
002120 203e
002121 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
002122 5f43
002123 6573
002124 4274
002125 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
002126 7261
002127 2879
002128 6c25
002129 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
00212a 6620
00212b 6961
00212c 656c
00212d 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00212e 000a
00212f 733c
002130 7465
002131 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
002132 6574
002133 6c41
002134 7261
002135 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002136 7020
002137 7265
002138 616d
002139 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
00213a 746e
00213b 6d20
00213c 7475
00213d 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
00213e 6c61
00213f 7261
002140 0d6d
002141 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
002142 733c
002143 7465
002144 754d
002145 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002146 6c41
002147 7261
002148 3e6d
002149 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
00214a 766e
00214b 6c61
00214c 6469
00214d 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
00214e 7265
00214f 6f69
002150 2064
002151 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
002152 646c
002153 0d29
002154 000a
002155 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002156 7465
002157 754d
002158 6574
002159 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
00215a 7261
00215b 3e6d
00215c 6d20
00215d 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
00215e 2065
00215f 6c61
002160 7261
002161 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
002162 6f66
002163 2072
002164 6c25
002165 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002166 6573
002167 6f63
002168 646e
002169 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
00216a 3c00
00216b 6573
00216c 4d74
00216d 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
00216e 4165
00216f 616c
002170 6d72
002171 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002172 4c41
002173 5241
002174 5f4d
002175 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002176 6574
002177 2528
002178 646c
002179 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
00217a 6166
00217b 6c69
00217c 6465
00217d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3357): warning: .cseg .db misalignment - padding zero byte
00217e 0000      	.DB  0x0
                 _0x18001D:
00217f 0000
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3359): warning: .cseg .db misalignment - padding zero byte
002180 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
002181 0a0d
002182 0a0d
002183 453c
002184 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
002185 615f
002186 6464
002187 6157
002188 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
002189 7551
00218a 7565
00218b 3e65
00218c 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
00218d 5241
00218e 494e
00218f 474e
002190 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
002191 5720
002192 6961
002193 2074
002194 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
002195 7565
002196 2065
002197 5546
002198 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
002199 0a0d
00219a 0a0d
00219b 3c00
00219c 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
00219d 5f48
00219e 6461
00219f 5764
0021a0 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
0021a1 5174
0021a2 6575
0021a3 6575
0021a4 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
0021a5 616d
0021a6 6c6c
0021a7 636f
0021a8 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
0021a9 2964
0021aa 6620
0021ab 6961
0021ac 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0021ad 0d64
0021ae 000a
0021af 0a0d
0021b0 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
0021b1 2020
0021b2 2020
0021b3 2020
0021b4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b5 2020
0021b6 2020
0021b7 2020
0021b8 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b9 2020
0021ba 2020
0021bb 2020
0021bc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021bd 2020
0021be 2020
0021bf 2020
0021c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c1 2020
0021c2 4120
0021c3 6464
0021c4 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
0021c5 2820
0021c6 3025
0021c7 5832
0021c8 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
0021c9 6f74
0021ca 6520
0021cb 6874
0021cc 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
0021cd 6961
0021ce 5174
0021cf 6575
0021d0 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0021d1 255b
0021d2 5d64
0021d3 0a0d
0021d4 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0021d5 200a
0021d6 2020
0021d7 2020
0021d8 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021d9 2020
0021da 2020
0021db 2020
0021dc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021dd 2020
0021de 2020
0021df 2020
0021e0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e1 2020
0021e2 2020
0021e3 2020
0021e4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e5 2020
0021e6 2020
0021e7 2020
0021e8 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0021e9 6f6d
0021ea 6576
0021eb 2064
0021ec 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0021ed 3230
0021ee 2958
0021ef 7420
0021f0 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0021f1 7465
0021f2 5f68
0021f3 6177
0021f4 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0021f5 7551
0021f6 7565
0021f7 5b65
0021f8 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0021f9 0d5d
0021fa 000a
0021fb 0a0d
0021fc 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
0021fd 4157
0021fe 4e52
0021ff 4e49
002200 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002201 203a
002202 5445
002203 5f48
002204 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
002205 6f6d
002206 6576
002207 6157
002208 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
002209 7551
00220a 7565
00220b 2865
00220c 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
00220d 5832
00220e 2029
00220f 6f6e
002210 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
002211 6f66
002212 6e75
002213 2164
002214 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
002215 0d0a
002216 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A001A:
002217 ffff
002218 ffff
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3400): warning: .cseg .db misalignment - padding zero byte
002219 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x1A001B:
00221a 0000
00221b 0000
00221c 0000
00221d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00221e 0000
00221f 0000
002220 0000
002221 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002222 0000
002223 0000
002224 0000
002225 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002226 0000
002227 0000
002228 0000
002229 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222a 0000
00222b 0000
00222c 0000
00222d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222e 0000
00222f 0000
002230 0000
002231 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002232 0000
002233 0000
002234 0000
002235 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002236 0000
002237 0000
002238 0000
002239 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00223a 6042
00223b 3fd5
00223c 0000
00223d 0000      	.DB  0x42,0x60,0xD5,0x3F,0x0,0x0,0x0,0x0
00223e 0000
00223f 0000
002240 0000
002241 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002242 0000
002243 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1A0000:
002244 695b
002245 6553
002246 736e
002247 726f      	.DB  0x5B,0x69,0x53,0x65,0x6E,0x73,0x6F,0x72
002248 6547
002249 5674
00224a 6c61
00224b 6575      	.DB  0x47,0x65,0x74,0x56,0x61,0x6C,0x75,0x65
00224c 645d
00224d 7461
00224e 5b61
00224f 6300      	.DB  0x5D,0x64,0x61,0x74,0x61,0x5B,0x0,0x63
002250 2568
002251 3a64
002252 2520
002253 3430      	.DB  0x68,0x25,0x64,0x3A,0x20,0x25,0x30,0x34
002254 2064
002255 6300
002256 2568
002257 3a64      	.DB  0x64,0x20,0x0,0x63,0x68,0x25,0x64,0x3A
002258 2520
002259 3430
00225a 2c64
00225b 0020      	.DB  0x20,0x25,0x30,0x34,0x64,0x2C,0x20,0x0
00225c 0d5d
00225d 000a
00225e 733c
00225f 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002260 6f73
002261 5272
002262 6165
002263 3e64      	.DB  0x73,0x6F,0x72,0x52,0x65,0x61,0x64,0x3E
002264 4520
002265 5252
002266 203a
002267 6863      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x63,0x68
002268 7620
002269 6c61
00226a 6575
00226b 6f20      	.DB  0x20,0x76,0x61,0x6C,0x75,0x65,0x20,0x6F
00226c 7475
00226d 6f20
00226e 2066
00226f 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
002270 676e
002271 0d65
002272 000a
002273 735b      	.DB  0x6E,0x67,0x65,0xD,0xA,0x0,0x5B,0x73
002274 6e65
002275 6f73
002276 5272
002277 6165      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x52,0x65,0x61
002278 3164
002279 635d
00227a 3168
00227b 255b      	.DB  0x64,0x31,0x5D,0x63,0x68,0x31,0x5B,0x25
00227c 3430
00227d 322e
00227e 7c66
00227f 3025      	.DB  0x30,0x34,0x2E,0x32,0x66,0x7C,0x25,0x30
002280 322e
002281 5d66
002282 632c
002283 3268      	.DB  0x2E,0x32,0x66,0x5D,0x2C,0x63,0x68,0x32
002284 255b
002285 3430
002286 322e
002287 7c66      	.DB  0x5B,0x25,0x30,0x34,0x2E,0x32,0x66,0x7C
002288 3025
002289 322e
00228a 5d66
00228b 632c      	.DB  0x25,0x30,0x2E,0x32,0x66,0x5D,0x2C,0x63
00228c 3368
00228d 255b
00228e 3430
00228f 322e      	.DB  0x68,0x33,0x5B,0x25,0x30,0x34,0x2E,0x32
002290 7c66
002291 3025
002292 322e
002293 5d66      	.DB  0x66,0x7C,0x25,0x30,0x2E,0x32,0x66,0x5D
002294 632c
002295 3468
002296 255b
002297 3430      	.DB  0x2C,0x63,0x68,0x34,0x5B,0x25,0x30,0x34
002298 322e
002299 7c66
00229a 3025
00229b 322e      	.DB  0x2E,0x32,0x66,0x7C,0x25,0x30,0x2E,0x32
00229c 5d66
00229d 632c
00229e 3568
00229f 255b      	.DB  0x66,0x5D,0x2C,0x63,0x68,0x35,0x5B,0x25
0022a0 3430
0022a1 322e
0022a2 7c66
0022a3 3025      	.DB  0x30,0x34,0x2E,0x32,0x66,0x7C,0x25,0x30
0022a4 322e
0022a5 5d66
0022a6 0a0d
0022a7 5b00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x5B
0022a8 6573
0022a9 736e
0022aa 726f
0022ab 6552      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x52,0x65
0022ac 6461
0022ad 5d32
0022ae 6863
0022af 5b31      	.DB  0x61,0x64,0x32,0x5D,0x63,0x68,0x31,0x5B
0022b0 3025
0022b1 2e34
0022b2 6632
0022b3 257c      	.DB  0x25,0x30,0x34,0x2E,0x32,0x66,0x7C,0x25
0022b4 2e30
0022b5 6632
0022b6 2c5d
0022b7 6863      	.DB  0x30,0x2E,0x32,0x66,0x5D,0x2C,0x63,0x68
0022b8 5b32
0022b9 3025
0022ba 2e34
0022bb 6632      	.DB  0x32,0x5B,0x25,0x30,0x34,0x2E,0x32,0x66
0022bc 257c
0022bd 2e30
0022be 6632
0022bf 2c5d      	.DB  0x7C,0x25,0x30,0x2E,0x32,0x66,0x5D,0x2C
0022c0 6863
0022c1 5b33
0022c2 3025
0022c3 2e34      	.DB  0x63,0x68,0x33,0x5B,0x25,0x30,0x34,0x2E
0022c4 6632
0022c5 257c
0022c6 2e30
0022c7 6632      	.DB  0x32,0x66,0x7C,0x25,0x30,0x2E,0x32,0x66
0022c8 2c5d
0022c9 6863
0022ca 5b34
0022cb 3025      	.DB  0x5D,0x2C,0x63,0x68,0x34,0x5B,0x25,0x30
0022cc 2e34
0022cd 6632
0022ce 257c
0022cf 2e30      	.DB  0x34,0x2E,0x32,0x66,0x7C,0x25,0x30,0x2E
0022d0 6632
0022d1 2c5d
0022d2 6863
0022d3 5b35      	.DB  0x32,0x66,0x5D,0x2C,0x63,0x68,0x35,0x5B
0022d4 3025
0022d5 2e34
0022d6 6632
0022d7 257c      	.DB  0x25,0x30,0x34,0x2E,0x32,0x66,0x7C,0x25
0022d8 2e30
0022d9 6632
0022da 0d5d
0022db 000a      	.DB  0x30,0x2E,0x32,0x66,0x5D,0xD,0xA,0x0
0022dc 6554
0022dd 706d
0022de 6152
0022df 2877      	.DB  0x54,0x65,0x6D,0x70,0x52,0x61,0x77,0x28
0022e0 6625
0022e1 2c29
0022e2 5420
0022e3 6d65      	.DB  0x25,0x66,0x29,0x2C,0x20,0x54,0x65,0x6D
0022e4 5270
0022e5 6665
0022e6 2528
0022e7 2966      	.DB  0x70,0x52,0x65,0x66,0x28,0x25,0x66,0x29
0022e8 202c
0022e9 664f
0022ea 7366
0022eb 7465      	.DB  0x2C,0x20,0x4F,0x66,0x66,0x73,0x65,0x74
0022ec 2528
0022ed 2966
0022ee 0a0d
0022ef 3c00      	.DB  0x28,0x25,0x66,0x29,0xD,0xA,0x0,0x3C
0022f0 6573
0022f1 736e
0022f2 726f
0022f3 6143      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x43,0x61
0022f4 696c
0022f5 7262
0022f6 7461
0022f7 3165      	.DB  0x6C,0x69,0x62,0x72,0x61,0x74,0x65,0x31
0022f8 203e
0022f9 4241
0022fa 524f
0022fb 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
0022fc 7320
0022fd 6e65
0022fe 6f73
0022ff 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
002300 6863
002301 2520
002302 2064
002303 7369      	.DB  0x63,0x68,0x20,0x25,0x64,0x20,0x69,0x73
002304 6420
002305 7369
002306 6261
002307 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
002308 0a0d
002309 3c00
00230a 6573
00230b 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
00230c 726f
00230d 6143
00230e 696c
00230f 7262      	.DB  0x6F,0x72,0x43,0x61,0x6C,0x69,0x62,0x72
002310 7461
002311 3165
002312 203e
002313 4241      	.DB  0x61,0x74,0x65,0x31,0x3E,0x20,0x41,0x42
002314 524f
002315 3a54
002316 7320
002317 6e65      	.DB  0x4F,0x52,0x54,0x3A,0x20,0x73,0x65,0x6E
002318 6f73
002319 2072
00231a 6863
00231b 2520      	.DB  0x73,0x6F,0x72,0x20,0x63,0x68,0x20,0x25
00231c 2064
00231d 7265
00231e 6f72
00231f 2872      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x28
002320 7830
002321 3025
002322 5832
002323 0d29      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x29,0xD
002324 000a
002325 733c
002326 6e65
002327 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
002328 4372
002329 6c61
00232a 6269
00232b 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
00232c 6574
00232d 3e32
00232e 4120
00232f 4f42      	.DB  0x74,0x65,0x32,0x3E,0x20,0x41,0x42,0x4F
002330 5452
002331 203a
002332 6573
002333 736e      	.DB  0x52,0x54,0x3A,0x20,0x73,0x65,0x6E,0x73
002334 726f
002335 6320
002336 2068
002337 6425      	.DB  0x6F,0x72,0x20,0x63,0x68,0x20,0x25,0x64
002338 4e20
002339 206f
00233a 6573
00233b 2074      	.DB  0x20,0x4E,0x6F,0x20,0x73,0x65,0x74,0x20
00233c 6f70
00233d 6e69
00233e 2074
00233f 6f66      	.DB  0x70,0x6F,0x69,0x6E,0x74,0x20,0x66,0x6F
002340 6e75
002341 0d64
002342 000a
002343 733c      	.DB  0x75,0x6E,0x64,0xD,0xA,0x0,0x3C,0x73
002344 6e65
002345 6f73
002346 4372
002347 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
002348 6269
002349 6172
00234a 6574
00234b 3e32      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x32,0x3E
00234c 2d20
00234d 202d
00234e 4143
00234f 5f4c      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x41,0x4C,0x5F
002350 5845
002351 4f54
002352 4646
002353 4553      	.DB  0x45,0x58,0x54,0x4F,0x46,0x46,0x53,0x45
002354 2054
002355 2d2d
002356 0a0d
002357 3c00      	.DB  0x54,0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C
002358 6573
002359 736e
00235a 726f
00235b 6143      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x43,0x61
00235c 696c
00235d 7262
00235e 7461
00235f 3265      	.DB  0x6C,0x69,0x62,0x72,0x61,0x74,0x65,0x32
002360 203e
002361 2d2d
002362 2d43
002363 3e2d      	.DB  0x3E,0x20,0x2D,0x2D,0x43,0x2D,0x2D,0x3E
002364 2520
002365 0d66
002366 000a
002367 733c      	.DB  0x20,0x25,0x66,0xD,0xA,0x0,0x3C,0x73
002368 6e65
002369 6f73
00236a 4372
00236b 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
00236c 6269
00236d 6172
00236e 6574
00236f 3e32      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x32,0x3E
002370 2d20
002371 202d
002372 4143
002373 5f4c      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x41,0x4C,0x5F
002374 5845
002375 4c54
002376 4e49
002377 4145      	.DB  0x45,0x58,0x54,0x4C,0x49,0x4E,0x45,0x41
002378 2052
002379 2d2d
00237a 0a0d
00237b 3c00      	.DB  0x52,0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C
00237c 6573
00237d 736e
00237e 726f
00237f 6143      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x43,0x61
002380 696c
002381 7262
002382 7461
002383 3265      	.DB  0x6C,0x69,0x62,0x72,0x61,0x74,0x65,0x32
002384 203e
002385 2d2d
002386 2d42
002387 3e2d      	.DB  0x3E,0x20,0x2D,0x2D,0x42,0x2D,0x2D,0x3E
002388 2520
002389 0d66
00238a 000a
00238b 733c      	.DB  0x20,0x25,0x66,0xD,0xA,0x0,0x3C,0x73
00238c 6e65
00238d 6f73
00238e 4372
00238f 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
002390 6269
002391 6172
002392 6574
002393 3e32      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x32,0x3E
002394 2d20
002395 202d
002396 4143
002397 5f4c      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x41,0x4C,0x5F
002398 5845
002399 5054
00239a 4c4f
00239b 4e59      	.DB  0x45,0x58,0x54,0x50,0x4F,0x4C,0x59,0x4E
00239c 4d4f
00239d 4149
00239e 204c
00239f 2d2d      	.DB  0x4F,0x4D,0x49,0x41,0x4C,0x20,0x2D,0x2D
0023a0 0a0d
0023a1 3c00
0023a2 6573
0023a3 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
0023a4 726f
0023a5 6143
0023a6 696c
0023a7 7262      	.DB  0x6F,0x72,0x43,0x61,0x6C,0x69,0x62,0x72
0023a8 7461
0023a9 3265
0023aa 203e
0023ab 2d2d      	.DB  0x61,0x74,0x65,0x32,0x3E,0x20,0x2D,0x2D
0023ac 2d41
0023ad 3e2d
0023ae 2520
0023af 0d66      	.DB  0x41,0x2D,0x2D,0x3E,0x20,0x25,0x66,0xD
0023b0 000a
0023b1 733c
0023b2 6e65
0023b3 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0023b4 4772
0023b5 7465
0023b6 7543
0023b7 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
0023b8 6e65
0023b9 5374
0023ba 7465
0023bb 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
0023bc 6e69
0023bd 3e74
0023be 7420
0023bf 6d65      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D
0023c0 5270
0023c1 6665
0023c2 2031
0023c3 203d      	.DB  0x70,0x52,0x65,0x66,0x31,0x20,0x3D,0x20
0023c4 255b
0023c5 5d66
0023c6 255b
0023c7 5d66      	.DB  0x5B,0x25,0x66,0x5D,0x5B,0x25,0x66,0x5D
0023c8 0a0d
0023c9 3c00
0023ca 6573
0023cb 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
0023cc 726f
0023cd 6547
0023ce 4374
0023cf 7275      	.DB  0x6F,0x72,0x47,0x65,0x74,0x43,0x75,0x72
0023d0 6572
0023d1 746e
0023d2 6553
0023d3 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
0023d4 696f
0023d5 746e
0023d6 203e
0023d7 6574      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74,0x65
0023d8 706d
0023d9 6552
0023da 3166
0023db 6e20      	.DB  0x6D,0x70,0x52,0x65,0x66,0x31,0x20,0x6E
0023dc 746f
0023dd 7320
0023de 7465
0023df 5b20      	.DB  0x6F,0x74,0x20,0x73,0x65,0x74,0x20,0x5B
0023e0 2e30
0023e1 3030
0023e2 0d5d
0023e3 000a      	.DB  0x30,0x2E,0x30,0x30,0x5D,0xD,0xA,0x0
0023e4 2e30
0023e5 3030
0023e6 3c00
0023e7 6573      	.DB  0x30,0x2E,0x30,0x30,0x0,0x3C,0x73,0x65
0023e8 736e
0023e9 726f
0023ea 6547
0023eb 4374      	.DB  0x6E,0x73,0x6F,0x72,0x47,0x65,0x74,0x43
0023ec 7275
0023ed 6572
0023ee 746e
0023ef 6553      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x53,0x65
0023f0 5074
0023f1 696f
0023f2 746e
0023f3 203e      	.DB  0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20
0023f4 6574
0023f5 706d
0023f6 6552
0023f7 3266      	.DB  0x74,0x65,0x6D,0x70,0x52,0x65,0x66,0x32
0023f8 3d20
0023f9 5b20
0023fa 6625
0023fb 5b5d      	.DB  0x20,0x3D,0x20,0x5B,0x25,0x66,0x5D,0x5B
0023fc 6625
0023fd 0d5d
0023fe 000a
0023ff 733c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x73
002400 6e65
002401 6f73
002402 4772
002403 7465      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x47,0x65,0x74
002404 7543
002405 7272
002406 6e65
002407 5374      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x53
002408 7465
002409 6f50
00240a 6e69
00240b 3e74      	.DB  0x65,0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E
00240c 7420
00240d 6d65
00240e 5270
00240f 6665      	.DB  0x20,0x74,0x65,0x6D,0x70,0x52,0x65,0x66
002410 2032
002411 6f6e
002412 2074
002413 6573      	.DB  0x32,0x20,0x6E,0x6F,0x74,0x20,0x73,0x65
002414 2074
002415 305b
002416 302e
002417 5d30      	.DB  0x74,0x20,0x5B,0x30,0x2E,0x30,0x30,0x5D
002418 0a0d
002419 3c00
00241a 6573
00241b 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
00241c 726f
00241d 6547
00241e 4374
00241f 7275      	.DB  0x6F,0x72,0x47,0x65,0x74,0x43,0x75,0x72
002420 6572
002421 746e
002422 6553
002423 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
002424 696f
002425 746e
002426 203e
002427 6574      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74,0x65
002428 706d
002429 6552
00242a 3366
00242b 3d20      	.DB  0x6D,0x70,0x52,0x65,0x66,0x33,0x20,0x3D
00242c 5b20
00242d 6625
00242e 5b5d
00242f 6625      	.DB  0x20,0x5B,0x25,0x66,0x5D,0x5B,0x25,0x66
002430 0d5d
002431 000a
002432 733c
002433 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002434 6f73
002435 4772
002436 7465
002437 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
002438 7272
002439 6e65
00243a 5374
00243b 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
00243c 6f50
00243d 6e69
00243e 3e74
00243f 7420      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74
002440 6d65
002441 5270
002442 6665
002443 2033      	.DB  0x65,0x6D,0x70,0x52,0x65,0x66,0x33,0x20
002444 6f6e
002445 2074
002446 6573
002447 2074      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x65,0x74,0x20
002448 305b
002449 302e
00244a 5d30
00244b 0a0d      	.DB  0x5B,0x30,0x2E,0x30,0x30,0x5D,0xD,0xA
00244c 3c00
00244d 6573
00244e 736e
00244f 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
002450 6547
002451 4374
002452 7275
002453 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
002454 746e
002455 6553
002456 5074
002457 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
002458 746e
002459 203e
00245a 6e69
00245b 6176      	.DB  0x6E,0x74,0x3E,0x20,0x69,0x6E,0x76,0x61
00245c 696c
00245d 2064
00245e 6170
00245f 6172      	.DB  0x6C,0x69,0x64,0x20,0x70,0x61,0x72,0x61
002460 746d
002461 7265
002462 7020
002463 746e      	.DB  0x6D,0x74,0x65,0x72,0x20,0x70,0x6E,0x74
002464 3e2d
002465 255b
002466 5d64
002467 0a0d      	.DB  0x2D,0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA
002468 3c00
002469 6573
00246a 736e
00246b 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00246c 6547
00246d 4374
00246e 7275
00246f 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
002470 746e
002471 6553
002472 5074
002473 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
002474 746e
002475 203e
002476 6572
002477 6461      	.DB  0x6E,0x74,0x3E,0x20,0x72,0x65,0x61,0x64
002478 7620
002479 6c61
00247a 2528
00247b 2964      	.DB  0x20,0x76,0x61,0x6C,0x28,0x25,0x64,0x29
00247c 3d20
00247d 5b20
00247e 7325
00247f 0d5d      	.DB  0x20,0x3D,0x20,0x5B,0x25,0x73,0x5D,0xD
002480 000a
002481 733c
002482 6e65
002483 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
002484 4772
002485 7465
002486 7543
002487 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
002488 6e65
002489 5374
00248a 7465
00248b 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
00248c 6e69
00248d 3e74
00248e 6f20
00248f 7475      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x6F,0x75,0x74
002490 6f20
002491 2066
002492 6f63
002493 646e      	.DB  0x20,0x6F,0x66,0x20,0x63,0x6F,0x6E,0x64
002494 7469
002495 6f69
002496 206e
002497 6176      	.DB  0x69,0x74,0x69,0x6F,0x6E,0x20,0x76,0x61
002498 536c
002499 7274
00249a 3d20
00249b 2720      	.DB  0x6C,0x53,0x74,0x72,0x20,0x3D,0x20,0x27
00249c 7325
00249d 0027
00249e 733c
00249f 6e65      	.DB  0x25,0x73,0x27,0x0,0x3C,0x73,0x65,0x6E
0024a0 6f73
0024a1 4772
0024a2 7465
0024a3 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
0024a4 7272
0024a5 6e65
0024a6 5374
0024a7 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
0024a8 6f50
0024a9 6e69
0024aa 3e74
0024ab 6220      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x62
0024ac 6675
0024ad 7220
0024ae 6165
0024af 0064      	.DB  0x75,0x66,0x20,0x72,0x65,0x61,0x64,0x0
0024b0 255b
0024b1 5d64
0024b2 3c00
0024b3 6573      	.DB  0x5B,0x25,0x64,0x5D,0x0,0x3C,0x73,0x65
0024b4 736e
0024b5 726f
0024b6 6553
0024b7 4374      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x74,0x43
0024b8 7275
0024b9 6572
0024ba 746e
0024bb 6553      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x53,0x65
0024bc 5074
0024bd 696f
0024be 746e
0024bf 203e      	.DB  0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20
0024c0 4241
0024c1 524f
0024c2 3a54
0024c3 7320      	.DB  0x41,0x42,0x4F,0x52,0x54,0x3A,0x20,0x73
0024c4 6e65
0024c5 6f73
0024c6 2072
0024c7 6863      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x20,0x63,0x68
0024c8 2520
0024c9 2064
0024ca 7369
0024cb 6420      	.DB  0x20,0x25,0x64,0x20,0x69,0x73,0x20,0x64
0024cc 7369
0024cd 6261
0024ce 656c
0024cf 0a0d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0xD,0xA
0024d0 3c00
0024d1 6573
0024d2 736e
0024d3 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0024d4 6553
0024d5 4374
0024d6 7275
0024d7 6572      	.DB  0x53,0x65,0x74,0x43,0x75,0x72,0x72,0x65
0024d8 746e
0024d9 6553
0024da 5074
0024db 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
0024dc 746e
0024dd 203e
0024de 4241
0024df 524f      	.DB  0x6E,0x74,0x3E,0x20,0x41,0x42,0x4F,0x52
0024e0 3a54
0024e1 7320
0024e2 6e65
0024e3 6f73      	.DB  0x54,0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F
0024e4 2072
0024e5 6863
0024e6 2520
0024e7 2064      	.DB  0x72,0x20,0x63,0x68,0x20,0x25,0x64,0x20
0024e8 7265
0024e9 6f72
0024ea 2872
0024eb 7830      	.DB  0x65,0x72,0x72,0x6F,0x72,0x28,0x30,0x78
0024ec 3025
0024ed 5832
0024ee 0d29
0024ef 000a      	.DB  0x25,0x30,0x32,0x58,0x29,0xD,0xA,0x0
0024f0 733c
0024f1 6e65
0024f2 6f73
0024f3 5372      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
0024f4 7465
0024f5 7543
0024f6 7272
0024f7 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
0024f8 5374
0024f9 7465
0024fa 6f50
0024fb 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
0024fc 3e74
0024fd 6220
0024fe 6675
0024ff 203a      	.DB  0x74,0x3E,0x20,0x62,0x75,0x66,0x3A,0x20
002500 255b
002501 5d64
002502 5b2f
002503 6425      	.DB  0x5B,0x25,0x64,0x5D,0x2F,0x5B,0x25,0x64
002504 5b5d
002505 6425
002506 5b5d
002507 6425      	.DB  0x5D,0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64
002508 5b5d
002509 6425
00250a 5b5d
00250b 6425      	.DB  0x5D,0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64
00250c 0d5d
00250d 000a
00250e 733c
00250f 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002510 6f73
002511 5372
002512 7465
002513 7543      	.DB  0x73,0x6F,0x72,0x53,0x65,0x74,0x43,0x75
002514 7272
002515 6e65
002516 5374
002517 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
002518 6f50
002519 6e69
00251a 3e74
00251b 7320      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x73
00251c 6e65
00251d 6f73
00251e 2072
00251f 3125      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x20,0x25,0x31
002520 2c64
002521 7020
002522 696f
002523 746e      	.DB  0x64,0x2C,0x20,0x70,0x6F,0x69,0x6E,0x74
002524 2520
002525 6431
002526 202c
002527 6573      	.DB  0x20,0x25,0x31,0x64,0x2C,0x20,0x73,0x65
002528 2074
002529 6f74
00252a 5b20
00252b 6625      	.DB  0x74,0x20,0x74,0x6F,0x20,0x5B,0x25,0x66
00252c 005d      	.DB  0x5D,0x0
                 _0x1C0005:
00252d 0000
00252e 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
00252f ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
002530 ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3608): warning: .cseg .db misalignment - padding zero byte
002531 00ff      	.DB  0xFF
                 _0x1E003A:
002532 ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
002533 753c
002534 6470
002535 7461
002536 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002537 6d6f
002538 536d
002539 6174
00253a 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
00253b 3e73
00253c 4c20
00253d 736f
00253e 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
00253f 6d69
002540 7265
002541 7420
002542 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
002543 2065
002544 656c
002545 7466
002546 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
002547 2520
002548 646c
002549 2528
00254a 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
00254b 0d29
00254c 000a
00254d 753c
00254e 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
00254f 7461
002550 4365
002551 6d6f
002552 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
002553 6174
002554 7574
002555 3e73
002556 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
002557 7265
002558 6576
002559 2072
00255a 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
00255b 6e77
00255c 2121
00255d 0d21
00255e 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
00255f 753c
002560 6470
002561 7461
002562 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002563 6d6f
002564 536d
002565 6174
002566 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
002567 3e73
002568 5320
002569 7265
00256a 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
00256b 2072
00256c 7055
00256d 2121
00256e 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
00256f 000a
002570 633c
002571 6568
002572 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
002573 7250
002574 626f
002575 4165
002576 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
002577 6d72
002578 203e
002579 6573
00257a 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
00257b 726f
00257c 6320
00257d 6168
00257e 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
00257f 6c65
002580 6f20
002581 7475
002582 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
002583 2066
002584 6172
002585 676e
002586 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
002587 2528
002588 2964
002589 0a0d
00258a 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
00258b 7075
00258c 6164
00258d 6574
00258e 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
00258f 6174
002590 7453
002591 7461
002592 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
002593 203e
002594 4241
002595 524f
002596 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
002597 7320
002598 6e65
002599 6f73
00259a 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
00259b 6863
00259c 6e61
00259d 656e
00259e 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
00259f 756f
0025a0 2074
0025a1 666f
0025a2 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
0025a3 6e61
0025a4 6567
0025a5 2820
0025a6 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
0025a7 0d29
0025a8 000a
0025a9 753c
0025aa 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
0025ab 7461
0025ac 4465
0025ad 6e69
0025ae 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
0025af 7461
0025b0 7375
0025b1 203e
0025b2 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
0025b3 6e61
0025b4 656e
0025b5 5b6c
0025b6 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
0025b7 205d
0025b8 756f
0025b9 2074
0025ba 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
0025bb 7220
0025bc 6e61
0025bd 6567
0025be 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
0025bf 3c00
0025c0 6567
0025c1 4474
0025c2 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
0025c3 6369
0025c4 5365
0025c5 6174
0025c6 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
0025c7 203e
0025c8 7473
0025c9 7461
0025ca 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
0025cb 203d
0025cc 305b
0025cd 2578
0025ce 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
0025cf 5d58
0025d0 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3651): warning: .cseg .db misalignment - padding zero byte
0025d1 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
0025d2 ffff
0025d3 ffff
0025d4 ffff
0025d5 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0025d6 ffff
0025d7 ffff
0025d8 ffff
0025d9 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
0025da ffff
0025db ffff
0025dc ffff
0025dd ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
0025de ffff
0025df ffff
0025e0 ffff
0025e1 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3659): warning: .cseg .db misalignment - padding zero byte
0025e2 0069      	.DB  0x69
                 _0x2200B1:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3661): warning: .cseg .db misalignment - padding zero byte
0025e3 0069      	.DB  0x69
                 _0x2200C5:
0025e4 6969      	.DB  0x69,0x69
                 _0x2200CF:
0025e5 6969
0025e6 6969
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3665): warning: .cseg .db misalignment - padding zero byte
0025e7 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
0025e8 ffff
0025e9 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3669): warning: .cseg .db misalignment - padding zero byte
0025ea 00ff      	.DB  0xFF
                 _0x220000:
0025eb 633c
0025ec 6568
0025ed 6b63
0025ee 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
0025ef 7261
0025f0 466d
0025f1 6f72
0025f2 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
0025f3 6372
0025f4 203e
0025f5 5347
0025f6 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
0025f7 6f4e
0025f8 2074
0025f9 7573
0025fa 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
0025fb 726f
0025fc 2074
0025fd 6579
0025fe 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
0025ff 305b
002600 2578
002601 3230
002602 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
002603 0a0d
002604 3c00
002605 6863
002606 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002607 416b
002608 616c
002609 6d72
00260a 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
00260b 6d6f
00260c 7253
00260d 3e63
00260e 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
00260f 616c
002610 6d72
002611 7253
002612 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
002613 6e75
002614 6e6b
002615 776f
002616 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
002617 305b
002618 2578
002619 3230
00261a 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00261b 0a0d
00261c 3c00
00261d 6863
00261e 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
00261f 536b
002620 6e65
002621 4464
002622 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
002623 6c41
002624 7261
002625 3e6d
002626 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
002627 6168
002628 6e6e
002629 6c65
00262a 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
00262b 7475
00262c 6f20
00262d 2066
00262e 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
00262f 676e
002630 2065
002631 255b
002632 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
002633 0a0d
002634 3c00
002635 6863
002636 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002637 536b
002638 6e65
002639 4464
00263a 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
00263b 4161
00263c 616c
00263d 6d72
00263e 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
00263f 7250
002640 626f
002641 2065
002642 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
002643 6420
002644 7461
002645 4161
002646 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
002647 6d72
002648 305b
002649 2578
00264a 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
00264b 5d58
00264c 0a0d
00264d 3c00
00264e 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
00264f 5241
002650 5f4d
002651 6863
002652 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
002653 4d6b
002654 7475
002655 4565
002656 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
002657 7269
002658 6465
002659 203e
00265a 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
00265b 6176
00265c 696c
00265d 2064
00265e 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
00265f 6574
002660 6f4d
002661 6564
002662 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
002663 6425
002664 0d29
002665 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
002666 5444
002667 3025
002668 6432
002669 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
00266a 3230
00266b 2d64
00266c 3025
00266d 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
00266e 5400
00266f 254d
002670 3230
002671 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
002672 3025
002673 6432
002674 4400
002675 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
002676 6431
002677 2e25
002678 6631
002679 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
00267a 2556
00267b 6431
00267c 5245
00267d 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
00267e 0042
00267f 5644
002680 3125
002681 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
002682 5252
002683 4255
002684 4400
002685 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
002686 6431
002687 5245
002688 4e52
002689 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
00268a 5644
00268b 3125
00268c 4564
00268d 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
00268e 4853
00268f 4400
002690 2556
002691 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
002692 4544
002693 4554
002694 5443
002695 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
002696 0047
002697 4f3c
002698 454c
002699 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
00269a 6873
00269b 776f
00269c 6553
00269d 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
00269e 726f
00269f 6156
0026a0 756c
0026a1 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
0026a2 7320
0026a3 6e65
0026a4 6f73
0026a5 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
0026a6 6425
0026a7 2e5d
0026a8 7473
0026a9 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
0026aa 7375
0026ab 7520
0026ac 6b6e
0026ad 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
0026ae 6e77
0026af 5b20
0026b0 7830
0026b1 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
0026b2 5832
0026b3 0d5d
0026b4 000a
0026b5 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
0026b6 3125
0026b7 4e64
0026b8 412f
0026b9 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
0026ba 3147
0026bb 4200
0026bc 304c
0026bd 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
0026be 314c
0026bf 4200
0026c0 324c
0026c1 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
0026c2 334c
0026c3 4200
0026c4 344c
0026c5 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
0026c6 4c4f
0026c7 4445
0026c8 735f
0026c9 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
0026ca 4977
0026cb 706e
0026cc 7475
0026cd 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
0026ce 7461
0026cf 7375
0026d0 203e
0026d1 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
0026d2 3a52
0026d3 6320
0026d4 2068
0026d5 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
0026d6 756c
0026d7 2065
0026d8 756f
0026d9 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
0026da 666f
0026db 7220
0026dc 6e61
0026dd 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
0026de 212e
0026df 0d21
0026e0 000a
0026e1 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
0026e2 3125
0026e3 2564
0026e4 6431
0026e5 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
0026e6 4c4f
0026e7 4445
0026e8 735f
0026e9 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
0026ea 4f77
0026eb 7475
0026ec 7570
0026ed 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
0026ee 6174
0026ef 7574
0026f0 3e73
0026f1 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
0026f2 5252
0026f3 203a
0026f4 6863
0026f5 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
0026f6 6c61
0026f7 6575
0026f8 6f20
0026f9 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
0026fa 6f20
0026fb 2066
0026fc 6172
0026fd 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
0026fe 2e65
0026ff 2121
002700 0a0d
002701 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
002702 2550
002703 6431
002704 3125
002705 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002706 4353
002707 3125
002708 0064
002709 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
00270a 3125
00270b 0064
00270c 5a42
00270d 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
00270e 0064
00270f 534d
002710 3125
002711 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
002712 4c41
002713 3125
002714 2564
002715 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
002716 3125
002717 2564
002718 6431
002719 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
00271a 2564
00271b 6431
00271c 3125
00271d 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
00271e 6431
00271f 3125
002720 2564
002721 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
002722 3125
002723 2564
002724 6431
002725 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
002726 210a
002727 2121
002728 2021
002729 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
00272a 4445
00272b 4520
00272c 7272
00272d 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
00272e 2120
00272f 2121
002730 0d21
002731 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
002732 6e49
002733 7469
002734 6169
002735 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
002736 697a
002737 676e
002738 4f20
002739 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
00273a 2e44
00273b 202e
00273c 4f00
00273d 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
00273e 000a      	.DB  0xA,0x0
                 _0x260003:
00273f 3a30
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3759): warning: .cseg .db misalignment - padding zero byte
002740 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
002741 4600
002742 5f52
002743 4944
002744 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
002745 455f
002746 5252
002747 4600
002748 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
002749 4e49
00274a 5f54
00274b 5245
00274c 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
00274d 5246
00274e 4e5f
00274f 544f
002750 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
002751 4145
002752 5944
002753 4600
002754 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
002755 4f4e
002756 465f
002757 4c49
002758 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
002759 5246
00275a 4e5f
00275b 5f4f
00275c 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
00275d 4854
00275e 4600
00275f 5f52
002760 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
002761 4156
002762 494c
002763 5f44
002764 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
002765 454d
002766 4600
002767 5f52
002768 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
002769 494e
00276a 4445
00276b 4600
00276c 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
00276d 5845
00276e 5349
00276f 0054
002770 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
002771 495f
002772 564e
002773 4c41
002774 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
002775 4f5f
002776 4a42
002777 4345
002778 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
002779 5246
00277a 575f
00277b 4952
00277c 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
00277d 505f
00277e 4f52
00277f 4554
002780 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
002781 4445
002782 4600
002783 5f52
002784 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
002785 4156
002786 494c
002787 5f44
002788 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
002789 5649
00278a 0045
00278b 5246
00278c 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
00278d 544f
00278e 455f
00278f 414e
002790 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
002791 4445
002792 4600
002793 5f52
002794 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
002795 465f
002796 4c49
002797 5345
002798 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
002799 4554
00279a 004d
00279b 5246
00279c 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
00279d 464b
00279e 5f53
00279f 4241
0027a0 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
0027a1 4554
0027a2 0044
0027a3 5246
0027a4 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
0027a5 4d49
0027a6 4f45
0027a7 5455
0027a8 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
0027a9 5245
0027aa 3e52
0027ab 2520
0027ac 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
0027ad 0a0d
0027ae 3c00
0027af 4453
0027b0 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
0027b1 6972
0027b2 6574
0027b3 6144
0027b4 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
0027b5 203e
0027b6 4453
0027b7 4320
0027b8 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0027b9 2064
0027ba 6f6e
0027bb 2074
0027bc 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0027bd 6461
0027be 0d79
0027bf 000a
0027c0 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
0027c1 5f44
0027c2 7277
0027c3 7469
0027c4 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0027c5 7461
0027c6 3e61
0027c7 6620
0027c8 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
0027c9 6573
0027ca 6b65
0027cb 2528
0027cc 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
0027cd 6620
0027ce 6961
0027cf 656c
0027d0 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
0027d1 0d21
0027d2 000a
0027d3 533c
0027d4 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
0027d5 7277
0027d6 7469
0027d7 4465
0027d8 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
0027d9 3e61
0027da 6620
0027db 775f
0027dc 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
0027dd 6574
0027de 2928
0027df 6620
0027e0 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
0027e1 656c
0027e2 0d64
0027e3 000a
0027e4 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
0027e5 5f44
0027e6 7277
0027e7 7469
0027e8 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0027e9 7461
0027ea 3e61
0027eb 6120
0027ec 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
0027ed 6175
0027ee 5f6c
0027ef 7277
0027f0 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
0027f1 5b65
0027f2 7525
0027f3 205d
0027f4 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
0027f5 6c20
0027f6 6e65
0027f7 255b
0027f8 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
0027f9 0a0d
0027fa 3c00
0027fb 4453
0027fc 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
0027fd 6165
0027fe 4464
0027ff 7461
002800 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
002801 5320
002802 2044
002803 6143
002804 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
002805 6e20
002806 746f
002807 7220
002808 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
002809 7964
00280a 0a0d
00280b 3c00
00280c 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
00280d 725f
00280e 6165
00280f 4464
002810 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002811 3e61
002812 6620
002813 6c5f
002814 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
002815 6b65
002816 2528
002817 2975
002818 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
002819 6961
00281a 656c
00281b 2164
00281c 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
00281d 000a
00281e 533c
00281f 5f44
002820 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
002821 6461
002822 6144
002823 6174
002824 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
002825 5f66
002826 6572
002827 6461
002828 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
002829 6620
00282a 6961
00282b 656c
00282c 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00282d 000a
00282e 533c
00282f 5f44
002830 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
002831 7469
002832 4465
002833 7461
002834 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
002835 6120
002836 7463
002837 6175
002838 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
002839 6572
00283a 6461
00283b 255b
00283c 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
00283d 2120
00283e 203d
00283f 656c
002840 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
002841 7525
002842 0d5d
002843 000a
002844 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
002845 5f44
002846 6572
002847 6461
002848 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
002849 6f6d
00284a 7972
00284b 6552
00284c 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
00284d 6e69
00284e 203e
00284f 5f66
002850 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
002851 6674
002852 6572
002853 2865
002854 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
002855 2029
002856 7265
002857 6f72
002858 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
002859 0d21
00285a 000a
00285b 6f4c
00285c 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
00285d 6163
00285e 206c
00285f 7264
002860 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
002861 2065
002862 3a30
002863 6d20
002864 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
002865 746e
002866 6465
002867 4520
002868 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
002869 524f
00286a 0a0d
00286b 4c00
00286c 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
00286d 6369
00286e 6c61
00286f 6420
002870 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
002871 6576
002872 3020
002873 203a
002874 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
002875 6e75
002876 6574
002877 2064
002878 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
002879 0a0d
00287a 4c00
00287b 676f
00287c 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
00287d 6c61
00287e 6420
00287f 6972
002880 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
002881 3020
002882 203a
002883 6e75
002884 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
002885 6e75
002886 6574
002887 2064
002888 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
002889 4f52
00288a 0d52
00288b 000a
00288c 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
00288d 6967
00288e 6163
00288f 206c
002890 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
002891 7669
002892 2065
002893 3a30
002894 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
002895 6d6e
002896 756f
002897 746e
002898 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
002899 4f20
00289a 0d4b
00289b 000a
00289c 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
00289d 5f44
00289e 6572
00289f 6f6d
0028a0 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
0028a1 3e74
0028a2 5320
0028a3 5f44
0028a4 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
0028a5 6f6d
0028a6 6e75
0028a7 2874
0028a8 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
0028a9 6166
0028aa 6c69
0028ab 6465
0028ac 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0028ad 3c00
0028ae 4453
0028af 725f
0028b0 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
0028b1 756f
0028b2 746e
0028b3 203e
0028b4 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
0028b5 6d5f
0028b6 756f
0028b7 746e
0028b8 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
0028b9 6620
0028ba 6961
0028bb 656c
0028bc 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0028bd 000a
0028be 533c
0028bf 5f44
0028c0 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
0028c1 6165
0028c2 6574
0028c3 6946
0028c4 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
0028c5 203e
0028c6 4453
0028c7 4320
0028c8 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0028c9 2064
0028ca 6f6e
0028cb 2074
0028cc 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0028cd 6461
0028ce 0d79
0028cf 000a
0028d0 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
0028d1 7325
0028d2 3c00
0028d3 4453
0028d4 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
0028d5 6572
0028d6 7461
0028d7 4665
0028d8 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
0028d9 3e65
0028da 6620
0028db 6f5f
0028dc 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
0028dd 286e
0028de 2029
0028df 6166
0028e0 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0028e1 6465
0028e2 0a0d
0028e3 3c00
0028e4 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
0028e5 635f
0028e6 6572
0028e7 7461
0028e8 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
0028e9 6c69
0028ea 3e65
0028eb 6620
0028ec 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
0028ed 6f6c
0028ee 6573
0028ef 2928
0028f0 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
0028f1 6961
0028f2 656c
0028f3 0d64
0028f4 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0028f5 533c
0028f6 5f44
0028f7 706f
0028f8 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
0028f9 6946
0028fa 656c
0028fb 203e
0028fc 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
0028fd 4320
0028fe 7261
0028ff 2064
002900 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002901 2074
002902 6572
002903 6461
002904 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
002905 000a
002906 533c
002907 5f44
002908 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
002909 6e65
00290a 6946
00290b 656c
00290c 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
00290d 5f66
00290e 706f
00290f 6e65
002910 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
002911 5b20
002912 7325
002913 205d
002914 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
002915 6c69
002916 6465
002917 0a0d
002918 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002919 4453
00291a 635f
00291b 6f6c
00291c 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
00291d 6946
00291e 656c
00291f 203e
002920 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002921 4320
002922 7261
002923 2064
002924 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002925 2074
002926 6572
002927 6461
002928 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
002929 000a
00292a 533c
00292b 5f44
00292c 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
00292d 736f
00292e 4665
00292f 6c69
002930 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
002931 6620
002932 635f
002933 6f6c
002934 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
002935 2928
002936 6620
002937 6961
002938 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002939 0d64
00293a 000a
00293b 533c
00293c 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
00293d 6e69
00293e 7469
00293f 203e
002940 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
002941 7261
002942 2074
002943 6e69
002944 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
002945 6169
002946 206c
002947 656d
002948 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
002949 7972
00294a 6320
00294b 7261
00294c 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
00294d 000a
00294e 0a0d
00294f 533c
002950 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
002951 6e69
002952 7469
002953 203e
002954 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
002955 6e75
002956 6974
002957 676e
002958 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
002959 2044
00295a 6143
00295b 6472
00295c 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
00295d 002e
00295e 533c
00295f 5f44
002960 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
002961 7469
002962 203e
002963 4453
002964 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
002965 756f
002966 746e
002967 2928
002968 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
002969 6961
00296a 656c
00296b 0d64
00296c 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00296d 0a0d
00296e 533c
00296f 5f44
002970 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
002971 7469
002972 203e
002973 6843
002974 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
002975 206b
002976 6143
002977 6472
002978 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
002979 7a69
00297a 2e65
00297b 2e2e
00297c 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
00297d 4453
00297e 695f
00297f 696e
002980 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
002981 5320
002982 5f44
002983 6572
002984 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002985 654d
002986 6f6d
002987 7972
002988 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
002989 616d
00298a 6e69
00298b 2928
00298c 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
00298d 6961
00298e 656c
00298f 0d64
002990 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002991 533c
002992 5f44
002993 6e69
002994 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
002995 203e
002996 7246
002997 6565
002998 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
002999 6170
00299a 6563
00299b 6f20
00299c 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
00299d 6f6c
00299e 6967
00299f 6163
0029a0 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
0029a1 7264
0029a2 7669
0029a3 2065
0029a4 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
0029a5 2520
0029a6 756c
0029a7 6b20
0029a8 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
0029a9 6574
0029aa 0d73
0029ab 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
0029ac 6164
0029ad 6174
0029ae 6c2e
0029af 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
0029b0 7665
0029b1 6e65
0029b2 2e74
0029b3 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3920): warning: .cseg .db misalignment - padding zero byte
0029b4 0067      	.DB  0x67
                 _0x280005:
0029b5 7265
0029b6 6f72
0029b7 2e72
0029b8 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(3923): warning: .cseg .db misalignment - padding zero byte
0029b9 0067      	.DB  0x67
                 _0x280006:
0029ba 0000
0029bb 0000
0029bc 0000
0029bd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0029be ffff
0029bf ffff
0029c0 ffff
0029c1 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
0029c2 824f
0029c3 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
0029c4 828e
0029c5 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
0029c6 4c3c
0029c7 474f
0029c8 695f
0029c9 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
0029ca 7265
0029cb 4474
0029cc 7461
0029cd 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
0029ce 4c20
0029cf 474f
0029d0 675f
0029d1 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
0029d2 614c
0029d3 7473
0029d4 6e49
0029d5 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
0029d6 7472
0029d7 2928
0029d8 6620
0029d9 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
0029da 656c
0029db 0d64
0029dc 000a
0029dd 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
0029de 474f
0029df 695f
0029e0 736e
0029e1 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
0029e2 4474
0029e3 7461
0029e4 3e61
0029e5 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
0029e6 5f44
0029e7 7277
0029e8 7469
0029e9 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0029ea 7461
0029eb 2861
0029ec 6c66
0029ed 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
0029ee 2029
0029ef 6166
0029f0 6c69
0029f1 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
0029f2 0a0d
0029f3 3c00
0029f4 4f4c
0029f5 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
0029f6 6e69
0029f7 6573
0029f8 7472
0029f9 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
0029fa 6174
0029fb 203e
0029fc 4453
0029fd 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
0029fe 6972
0029ff 6574
002a00 6144
002a01 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002a02 7428
002a03 6d69
002a04 7365
002a05 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
002a06 706d
002a07 2029
002a08 6166
002a09 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
002a0a 6465
002a0b 0a0d
002a0c 3c00
002a0d 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a0e 5f47
002a0f 6e69
002a10 6573
002a11 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002a12 6144
002a13 6174
002a14 203e
002a15 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002a16 775f
002a17 6972
002a18 6574
002a19 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
002a1a 6174
002a1b 6328
002a1c 6168
002a1d 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
002a1e 6c65
002a1f 2029
002a20 6166
002a21 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
002a22 6465
002a23 0a0d
002a24 3c00
002a25 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a26 5f47
002a27 6e69
002a28 6573
002a29 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002a2a 6144
002a2b 6174
002a2c 203e
002a2d 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002a2e 775f
002a2f 6972
002a30 6574
002a31 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
002a32 6174
002a33 7628
002a34 6c61
002a35 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
002a36 2029
002a37 6166
002a38 6c69
002a39 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a3a 0a0d
002a3b 3c00
002a3c 4f4c
002a3d 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a3e 6e69
002a3f 6573
002a40 7472
002a41 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
002a42 6174
002a43 203e
002a44 4f4c
002a45 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002a46 6573
002a47 4c74
002a48 7361
002a49 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002a4a 736e
002a4b 7265
002a4c 2874
002a4d 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002a4e 2964
002a4f 6620
002a50 6961
002a51 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002a52 0d64
002a53 000a
002a54 4c3c
002a55 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002a56 725f
002a57 6165
002a58 4464
002a59 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002a5a 3e61
002a5b 4c20
002a5c 474f
002a5d 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
002a5e 7465
002a5f 614c
002a60 7473
002a61 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
002a62 6573
002a63 7472
002a64 2928
002a65 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
002a66 6961
002a67 656c
002a68 0d64
002a69 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002a6a 4c3c
002a6b 474f
002a6c 725f
002a6d 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002a6e 4464
002a6f 7461
002a70 3e61
002a71 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
002a72 474f
002a73 675f
002a74 7465
002a75 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
002a76 7473
002a77 6553
002a78 646e
002a79 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
002a7a 6620
002a7b 6961
002a7c 656c
002a7d 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002a7e 000a
002a7f 4c3c
002a80 474f
002a81 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
002a82 6165
002a83 4564
002a84 6576
002a85 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
002a86 203e
002a87 616c
002a88 7473
002a89 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
002a8a 646e
002a8b 6c2f
002a8c 7361
002a8d 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
002a8e 736e
002a8f 7265
002a90 2074
002a91 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
002a92 3e2d
002a93 2520
002a94 646c
002a95 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
002a96 646c
002a97 0a0d
002a98 3c00
002a99 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a9a 5f47
002a9b 6572
002a9c 6461
002a9d 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002a9e 6174
002a9f 203e
002aa0 6f4c
002aa1 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
002aa2 6d65
002aa3 7470
002aa4 2e79
002aa5 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002aa6 0d21
002aa7 000a
002aa8 443c
002aa9 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
002aaa 4755
002aab 435f
002aac 656c
002aad 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
002aae 6f4c
002aaf 4667
002ab0 6c69
002ab1 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
002ab2 4c20
002ab3 474f
002ab4 635f
002ab5 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
002ab6 7461
002ab7 4665
002ab8 6c69
002ab9 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002aba 7325
002abb 2029
002abc 6166
002abd 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002abe 6465
002abf 0a0d
002ac0 3c00
002ac1 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002ac2 5f47
002ac3 6572
002ac4 6461
002ac5 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002ac6 6174
002ac7 203e
002ac8 4453
002ac9 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
002aca 6165
002acb 4464
002acc 7461
002acd 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002ace 6c66
002acf 6761
002ad0 2029
002ad1 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002ad2 6c69
002ad3 6465
002ad4 0a0d
002ad5 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002ad6 4f4c
002ad7 5f47
002ad8 6572
002ad9 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002ada 6144
002adb 6174
002adc 203e
002add 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002ade 725f
002adf 6165
002ae0 4464
002ae1 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002ae2 2861
002ae3 6974
002ae4 656d
002ae5 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002ae6 6d61
002ae7 2970
002ae8 6620
002ae9 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002aea 656c
002aeb 0d64
002aec 000a
002aed 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002aee 474f
002aef 725f
002af0 6165
002af1 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
002af2 7461
002af3 3e61
002af4 5320
002af5 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
002af6 6572
002af7 6461
002af8 6144
002af9 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002afa 6328
002afb 6168
002afc 6e6e
002afd 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
002afe 2029
002aff 6166
002b00 6c69
002b01 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002b02 0a0d
002b03 3c00
002b04 4f4c
002b05 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002b06 6572
002b07 6461
002b08 6144
002b09 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002b0a 203e
002b0b 4453
002b0c 725f
002b0d 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002b0e 4464
002b0f 7461
002b10 2861
002b11 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
002b12 756c
002b13 2965
002b14 6620
002b15 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
002b16 656c
002b17 0d64
002b18 000a
002b19 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002b1a 474f
002b1b 695f
002b1c 736e
002b1d 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002b1e 4574
002b1f 6576
002b20 746e
002b21 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002b22 4f4c
002b23 5f47
002b24 6567
002b25 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
002b26 7361
002b27 4974
002b28 736e
002b29 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
002b2a 2874
002b2b 2029
002b2c 6166
002b2d 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002b2e 6465
002b2f 0a0d
002b30 3c00
002b31 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002b32 5f47
002b33 6e69
002b34 6573
002b35 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002b36 7645
002b37 6e65
002b38 3e74
002b39 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002b3a 5f44
002b3b 7277
002b3c 7469
002b3d 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002b3e 7461
002b3f 2861
002b40 6c66
002b41 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002b42 2029
002b43 6166
002b44 6c69
002b45 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002b46 0a0d
002b47 3c00
002b48 4f4c
002b49 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002b4a 6e69
002b4b 6573
002b4c 7472
002b4d 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
002b4e 6e65
002b4f 3e74
002b50 5320
002b51 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002b52 7277
002b53 7469
002b54 4465
002b55 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002b56 2861
002b57 6974
002b58 656d
002b59 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002b5a 6d61
002b5b 2970
002b5c 6620
002b5d 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002b5e 656c
002b5f 0d64
002b60 000a
002b61 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002b62 474f
002b63 695f
002b64 736e
002b65 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002b66 4574
002b67 6576
002b68 746e
002b69 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002b6a 4453
002b6b 775f
002b6c 6972
002b6d 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
002b6e 6144
002b6f 6174
002b70 6928
002b71 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002b72 6620
002b73 6961
002b74 656c
002b75 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b76 000a
002b77 4c3c
002b78 474f
002b79 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b7a 736e
002b7b 7265
002b7c 4574
002b7d 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b7e 746e
002b7f 203e
002b80 4453
002b81 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002b82 6972
002b83 6574
002b84 6144
002b85 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002b86 7328
002b87 6174
002b88 7574
002b89 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002b8a 6620
002b8b 6961
002b8c 656c
002b8d 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b8e 000a
002b8f 4c3c
002b90 474f
002b91 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b92 736e
002b93 7265
002b94 4574
002b95 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b96 746e
002b97 203e
002b98 4f4c
002b99 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002b9a 6573
002b9b 4c74
002b9c 7361
002b9d 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002b9e 736e
002b9f 7265
002ba0 2874
002ba1 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002ba2 2964
002ba3 6620
002ba4 6961
002ba5 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002ba6 0d64
002ba7 000a
002ba8 4c3c
002ba9 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002baa 725f
002bab 6165
002bac 4564
002bad 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002bae 746e
002baf 203e
002bb0 4f4c
002bb1 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002bb2 6567
002bb3 4c74
002bb4 7361
002bb5 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002bb6 736e
002bb7 7265
002bb8 2874
002bb9 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
002bba 6166
002bbb 6c69
002bbc 6465
002bbd 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002bbe 3c00
002bbf 4f4c
002bc0 5f47
002bc1 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
002bc2 6461
002bc3 7645
002bc4 6e65
002bc5 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
002bc6 4c20
002bc7 474f
002bc8 675f
002bc9 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002bca 614c
002bcb 7473
002bcc 6553
002bcd 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002bce 2928
002bcf 6620
002bd0 6961
002bd1 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002bd2 0d64
002bd3 000a
002bd4 4c3c
002bd5 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002bd6 725f
002bd7 6165
002bd8 4564
002bd9 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002bda 746e
002bdb 203e
002bdc 6f4c
002bdd 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
002bde 6d65
002bdf 7470
002be0 2e79
002be1 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002be2 0d21
002be3 000a
002be4 4c3c
002be5 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002be6 725f
002be7 6165
002be8 4564
002be9 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002bea 746e
002beb 203e
002bec 4453
002bed 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002bee 6165
002bef 4464
002bf0 7461
002bf1 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002bf2 6c66
002bf3 6761
002bf4 2029
002bf5 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002bf6 6c69
002bf7 6465
002bf8 0a0d
002bf9 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002bfa 4f4c
002bfb 5f47
002bfc 6572
002bfd 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002bfe 7645
002bff 6e65
002c00 3e74
002c01 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002c02 5f44
002c03 6572
002c04 6461
002c05 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002c06 6174
002c07 7428
002c08 6d69
002c09 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
002c0a 6174
002c0b 706d
002c0c 2029
002c0d 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
002c0e 6c69
002c0f 6465
002c10 0a0d
002c11 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002c12 4f4c
002c13 5f47
002c14 6572
002c15 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002c16 7645
002c17 6e65
002c18 3e74
002c19 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002c1a 5f44
002c1b 6572
002c1c 6461
002c1d 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002c1e 6174
002c1f 6928
002c20 2964
002c21 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
002c22 6961
002c23 656c
002c24 0d64
002c25 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002c26 4c3c
002c27 474f
002c28 725f
002c29 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002c2a 4564
002c2b 6576
002c2c 746e
002c2d 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002c2e 4453
002c2f 725f
002c30 6165
002c31 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
002c32 7461
002c33 2861
002c34 7473
002c35 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
002c36 7375
002c37 2029
002c38 6166
002c39 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002c3a 6465
002c3b 0a0d
002c3c 3c00
002c3d 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c3e 5f47
002c3f 6567
002c40 4c74
002c41 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002c42 4974
002c43 736e
002c44 7265
002c45 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002c46 5320
002c47 5f44
002c48 6572
002c49 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002c4a 6144
002c4b 6174
002c4c 2928
002c4d 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
002c4e 6961
002c4f 656c
002c50 0d64
002c51 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002c52 4c3c
002c53 474f
002c54 675f
002c55 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002c56 614c
002c57 7473
002c58 6e49
002c59 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002c5a 7472
002c5b 203e
002c5c 6f67
002c5d 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
002c5e 6c25
002c5f 0d64
002c60 000a
002c61 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002c62 474f
002c63 735f
002c64 7465
002c65 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002c66 7473
002c67 6e49
002c68 6573
002c69 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002c6a 203e
002c6b 7277
002c6c 7469
002c6d 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c6e 2067
002c6f 6c25
002c70 0d64
002c71 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c72 4c3c
002c73 474f
002c74 735f
002c75 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c76 614c
002c77 7473
002c78 6e49
002c79 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002c7a 7472
002c7b 203e
002c7c 4453
002c7d 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002c7e 6165
002c7f 4464
002c80 7461
002c81 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002c82 2029
002c83 6166
002c84 6c69
002c85 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002c86 0a0d
002c87 3c00
002c88 4f4c
002c89 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002c8a 6567
002c8b 4c74
002c8c 7361
002c8d 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
002c8e 6e65
002c8f 3e64
002c90 5320
002c91 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
002c92 6572
002c93 6461
002c94 6144
002c95 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002c96 2928
002c97 6620
002c98 6961
002c99 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002c9a 0d64
002c9b 000a
002c9c 4c3c
002c9d 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002c9e 675f
002c9f 7465
002ca0 614c
002ca1 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
002ca2 6553
002ca3 646e
002ca4 203e
002ca5 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
002ca6 2074
002ca7 6c25
002ca8 0d64
002ca9 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002caa 4c3c
002cab 474f
002cac 735f
002cad 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002cae 614c
002caf 7473
002cb0 6553
002cb1 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002cb2 203e
002cb3 7277
002cb4 7469
002cb5 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002cb6 2067
002cb7 6c25
002cb8 0d64
002cb9 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002cba 4c3c
002cbb 474f
002cbc 735f
002cbd 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002cbe 614c
002cbf 7473
002cc0 6553
002cc1 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002cc2 203e
002cc3 4453
002cc4 725f
002cc5 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002cc6 4464
002cc7 7461
002cc8 2861
002cc9 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
002cca 6166
002ccb 6c69
002ccc 6465
002ccd 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002cce 3c00
002ccf 4f4c
002cd0 5f47
002cd1 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002cd2 6165
002cd3 6574
002cd4 6946
002cd5 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002cd6 203e
002cd7 4453
002cd8 635f
002cd9 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
002cda 7461
002cdb 4665
002cdc 6c69
002cdd 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002cde 7325
002cdf 2029
002ce0 6166
002ce1 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002ce2 6465
002ce3 0a0d
002ce4 3c00
002ce5 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002ce6 5f47
002ce7 7263
002ce8 6165
002ce9 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002cea 6946
002ceb 656c
002cec 203e
002ced 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
002cee 6120
002cef 726c
002cf0 6165
002cf1 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002cf2 6520
002cf3 6978
002cf4 7473
002cf5 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002cf6 3c00
002cf7 4f4c
002cf8 5f47
002cf9 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002cfa 6165
002cfb 6574
002cfc 6946
002cfd 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002cfe 203e
002cff 7325
002d00 6320
002d01 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002d02 7461
002d03 6465
002d04 0a0d
002d05 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002d06 4f4c
002d07 5f47
002d08 7263
002d09 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002d0a 6574
002d0b 6946
002d0c 656c
002d0d 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002d0e 7325
002d0f 6320
002d10 6e6f
002d11 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002d12 6e69
002d13 6465
002d14 6e20
002d15 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002d16 6e69
002d17 7469
002d18 6169
002d19 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002d1a 6164
002d1b 6174
002d1c 0a0d
002d1d 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002d1e 4f4c
002d1f 5f47
002d20 7263
002d21 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002d22 6574
002d23 6946
002d24 656c
002d25 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002d26 4453
002d27 6f5f
002d28 6570
002d29 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002d2a 6c69
002d2b 2865
002d2c 7325
002d2d 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002d2e 6166
002d2f 6c69
002d30 6465
002d31 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002d32 3c00
002d33 4f4c
002d34 5f47
002d35 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002d36 6165
002d37 6574
002d38 6946
002d39 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002d3a 203e
002d3b 7277
002d3c 7469
002d3d 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002d3e 2067
002d3f 6e69
002d40 7469
002d41 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002d42 206c
002d43 6164
002d44 6174
002d45 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002d46 3c00
002d47 4f4c
002d48 5f47
002d49 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002d4a 6165
002d4b 6574
002d4c 6946
002d4d 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002d4e 203e
002d4f 4453
002d50 775f
002d51 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002d52 6574
002d53 6144
002d54 6174
002d55 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002d56 6620
002d57 6961
002d58 656c
002d59 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002d5a 7257
002d5b 7469
002d5c 6e69
002d5d 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002d5e 202e
002d5f 0a0d
002d60 3c00
002d61 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002d62 5f47
002d63 7263
002d64 6165
002d65 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002d66 6946
002d67 656c
002d68 203e
002d69 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002d6a 635f
002d6b 6f6c
002d6c 6573
002d6d 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002d6e 656c
002d6f 2928
002d70 6620
002d71 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002d72 656c
002d73 0d64
002d74 000a
002d75 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002d76 474f
002d77 695f
002d78 696e
002d79 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002d7a 4920
002d7b 696e
002d7c 6974
002d7d 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002d7e 6c20
002d7f 676f
002d80 6620
002d81 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002d82 0d65
002d83 000a
002d84 4c3c
002d85 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002d86 695f
002d87 696e
002d88 3e74
002d89 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002d8a 474f
002d8b 635f
002d8c 6572
002d8d 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002d8e 4665
002d8f 6c69
002d90 2865
002d91 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002d92 2029
002d93 6166
002d94 6c69
002d95 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002d96 0a0d
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4176): warning: .cseg .db misalignment - padding zero byte
002d97 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002d98 0a0d
002d99 0a0d
002d9a 613c
002d9b 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002d9c 6144
002d9d 6174
002d9e 6f4c
002d9f 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002da0 6575
002da1 6575
002da2 203e
002da3 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002da4 4e52
002da5 4e49
002da6 2047
002da7 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002da8 6164
002da9 6174
002daa 6f4c
002dab 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002dac 6575
002dad 6575
002dae 4620
002daf 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002db0 0d4c
002db1 0d0a
002db2 000a
002db3 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002db4 613c
002db5 6464
002db6 6144
002db7 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002db8 6f4c
002db9 5167
002dba 6575
002dbb 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002dbc 203e
002dbd 2020
002dbe 2020
002dbf 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc0 2020
002dc1 2020
002dc2 2020
002dc3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc4 2020
002dc5 2020
002dc6 2020
002dc7 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc8 2020
002dc9 2020
002dca 6441
002dcb 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002dcc 2064
002dcd 2528
002dce 3230
002dcf 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002dd0 7420
002dd1 206f
002dd2 6164
002dd3 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002dd4 6f4c
002dd5 5167
002dd6 6575
002dd7 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002dd8 255b
002dd9 5d64
002dda 4320
002ddb 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002ddc 746e
002ddd 3d20
002dde 2520
002ddf 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002de0 000a
002de1 723c
002de2 6165
002de3 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002de4 7461
002de5 4c61
002de6 676f
002de7 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002de8 7565
002de9 3e65
002dea 5720
002deb 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002dec 3a4e
002ded 6420
002dee 7461
002def 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002df0 676f
002df1 7551
002df2 7565
002df3 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002df4 6d65
002df5 7470
002df6 2179
002df7 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002df8 000a
002df9 723c
002dfa 6165
002dfb 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002dfc 7461
002dfd 4c61
002dfe 676f
002dff 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002e00 7565
002e01 3e65
002e02 5720
002e03 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002e04 3a4e
002e05 6e20
002e06 746f
002e07 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002e08 756f
002e09 646e
002e0a 6920
002e0b 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002e0c 7830
002e0d 3025
002e0e 5832
002e0f 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002e10 6e69
002e11 6420
002e12 7461
002e13 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002e14 676f
002e15 7551
002e16 7565
002e17 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002e18 000a
002e19 0a0d
002e1a 723c
002e1b 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002e1c 766f
002e1d 4465
002e1e 7461
002e1f 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002e20 676f
002e21 7551
002e22 7565
002e23 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e24 2020
002e25 2020
002e26 2020
002e27 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e28 2020
002e29 2020
002e2a 2020
002e2b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e2c 2020
002e2d 2020
002e2e 2020
002e2f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e30 6552
002e31 6f6d
002e32 6576
002e33 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002e34 2528
002e35 3230
002e36 2958
002e37 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002e38 6f72
002e39 206d
002e3a 6164
002e3b 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002e3c 6f4c
002e3d 5167
002e3e 6575
002e3f 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002e40 255b
002e41 5d64
002e42 0a0d
002e43 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002e44 6572
002e45 6f6d
002e46 6576
002e47 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002e48 6174
002e49 6f4c
002e4a 5167
002e4b 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002e4c 6575
002e4d 203e
002e4e 4157
002e4f 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002e50 203a
002e51 6f6e
002e52 2074
002e53 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002e54 6e75
002e55 2064
002e56 6469
002e57 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002e58 2578
002e59 3230
002e5a 5d58
002e5b 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002e5c 206e
002e5d 6164
002e5e 6174
002e5f 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002e60 5167
002e61 6575
002e62 6575
002e63 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002e64 0d00
002e65 0d0a
002e66 3c0a
002e67 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002e68 4564
002e69 6576
002e6a 746e
002e6b 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e6c 5167
002e6d 6575
002e6e 6575
002e6f 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002e70 4157
002e71 4e52
002e72 4e49
002e73 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002e74 203a
002e75 7665
002e76 6e65
002e77 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e78 676f
002e79 7551
002e7a 7565
002e7b 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002e7c 5546
002e7d 4c4c
002e7e 0a0d
002e7f 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002e80 0d00
002e81 3c0a
002e82 6461
002e83 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002e84 6576
002e85 746e
002e86 6f4c
002e87 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002e88 6575
002e89 6575
002e8a 203e
002e8b 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002e8c 2020
002e8d 2020
002e8e 2020
002e8f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e90 2020
002e91 2020
002e92 2020
002e93 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e94 2020
002e95 2020
002e96 2020
002e97 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002e98 6564
002e99 2064
002e9a 2528
002e9b 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002e9c 2958
002e9d 7420
002e9e 206f
002e9f 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002ea0 6e65
002ea1 4c74
002ea2 676f
002ea3 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002ea4 7565
002ea5 5b65
002ea6 6425
002ea7 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002ea8 6f43
002ea9 6e75
002eaa 2074
002eab 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002eac 6425
002ead 0a0d
002eae 3c00
002eaf 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002eb0 6461
002eb1 7645
002eb2 6e65
002eb3 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002eb4 676f
002eb5 7551
002eb6 7565
002eb7 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002eb8 5720
002eb9 5241
002eba 3a4e
002ebb 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002ebc 6576
002ebd 746e
002ebe 6f4c
002ebf 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002ec0 6575
002ec1 6575
002ec2 6520
002ec3 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002ec4 7974
002ec5 2121
002ec6 0a0d
002ec7 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002ec8 6572
002ec9 6461
002eca 7645
002ecb 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002ecc 4c74
002ecd 676f
002ece 7551
002ecf 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002ed0 3e65
002ed1 5720
002ed2 5241
002ed3 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002ed4 6e20
002ed5 746f
002ed6 6620
002ed7 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002ed8 646e
002ed9 6920
002eda 5b64
002edb 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002edc 3025
002edd 5832
002ede 205d
002edf 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002ee0 6520
002ee1 6576
002ee2 746e
002ee3 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002ee4 5167
002ee5 6575
002ee6 6575
002ee7 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002ee8 0d00
002ee9 3c0a
002eea 6572
002eeb 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002eec 6576
002eed 7645
002eee 6e65
002eef 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002ef0 676f
002ef1 7551
002ef2 7565
002ef3 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002ef4 2020
002ef5 2020
002ef6 2020
002ef7 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002ef8 2020
002ef9 2020
002efa 2020
002efb 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002efc 2020
002efd 2020
002efe 2020
002eff 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002f00 6f6d
002f01 6576
002f02 2064
002f03 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002f04 3230
002f05 2958
002f06 6620
002f07 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002f08 206d
002f09 7665
002f0a 6e65
002f0b 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002f0c 676f
002f0d 7551
002f0e 7565
002f0f 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002f10 6425
002f11 0d5d
002f12 000a
002f13 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002f14 6d65
002f15 766f
002f16 4565
002f17 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002f18 746e
002f19 6f4c
002f1a 5167
002f1b 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002f1c 6575
002f1d 203e
002f1e 4157
002f1f 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002f20 203a
002f21 6f6e
002f22 2074
002f23 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002f24 6e75
002f25 2064
002f26 6469
002f27 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002f28 2578
002f29 3230
002f2a 5d58
002f2b 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002f2c 206e
002f2d 7665
002f2e 6e65
002f2f 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002f30 676f
002f31 7551
002f32 7565
002f33 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002f34 000a      	.DB  0xA,0x0
                 _0x2C0003:
002f35 0000
002f36 0000
002f37 0000
002f38 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f39 0000
002f3a 0000
002f3b 0000
002f3c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f3d 0000
002f3e 0000
002f3f 0000
002f40 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f41 0000
002f42 0000
002f43 0000
002f44 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f45 0000
002f46 0000
002f47 0000
002f48 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f49 0000
002f4a 0000
002f4b 0000
002f4c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f4d 0000
002f4e 0000
002f4f 0000
002f50 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f51 0000
002f52 0000
002f53 0000
002f54 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f55 0000
002f56 0000
002f57 0000
002f58 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f59 0591
002f5a 058d
002f5b 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C027A:
002f5c 0000
002f5d 0000
002f5e 0000
002f5f 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f60 0000
002f61 0000
002f62 0000
002f63 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002f64 0000
002f65 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002f66 314d
002f67 3125
002f68 0064
002f69 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002f6a 4d00
002f6b 2541
002f6c 6431
002f6d 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002f6e 2532
002f6f 6431
002f70 4d00
002f71 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002f72 6431
002f73 4d00
002f74 2534
002f75 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002f76 5000
002f77 0031
002f78 354d
002f79 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002f7a 0064
002f7b 3050
002f7c 3c00
002f7d 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002f7e 554e
002f7f 705f
002f80 6f72
002f81 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002f82 7373
002f83 654b
002f84 3e79
002f85 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002f86 2550
002f87 2c73
002f88 7325
002f89 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002f8a 2c73
002f8b 5200
002f8c 6165
002f8d 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002f8e 6d69
002f8f 2c65
002f90 4400
002f91 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002f92 6c61
002f93 676f
002f94 6567
002f95 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002f96 5500
002f97 6b6e
002f98 6f6e
002f99 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002f9a 002c
002f9b 6e45
002f9c 6261
002f9d 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002f9e 002c
002f9f 6944
002fa0 6173
002fa1 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002fa2 2c65
002fa3 3c00
002fa4 454d
002fa5 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002fa6 705f
002fa7 6f72
002fa8 6563
002fa9 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002faa 654b
002fab 3e79
002fac 5620
002fad 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002fae 0073
002faf 4d3c
002fb0 4e45
002fb1 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002fb2 7270
002fb3 636f
002fb4 7365
002fb5 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002fb6 7965
002fb7 203e
002fb8 616d
002fb9 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002fba 636f
002fbb 4328
002fbc 4e4f
002fbd 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002fbe 4552
002fbf 4441
002fc0 425f
002fc1 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002fc2 4546
002fc3 2952
002fc4 6620
002fc5 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002fc6 656c
002fc7 0d64
002fc8 000a
002fc9 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002fca 4e45
002fcb 5f55
002fcc 7270
002fcd 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002fce 7365
002fcf 4b73
002fd0 7965
002fd1 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002fd2 5445
002fd3 5f48
002fd4 6567
002fd5 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002fd6 6e6f
002fd7 6966
002fd8 2867
002fd9 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002fda 6166
002fdb 6c69
002fdc 6465
002fdd 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002fde 3c00
002fdf 454d
002fe0 554e
002fe1 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002fe2 6f72
002fe3 6563
002fe4 7373
002fe5 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002fe6 3e79
002fe7 4520
002fe8 4854
002fe9 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002fea 7465
002feb 6f43
002fec 666e
002fed 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002fee 2928
002fef 7320
002ff0 6375
002ff1 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002ff2 7373
002ff3 0a0d
002ff4 0d00
002ff5 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002ff6 3c0a
002ff7 454d
002ff8 554e
002ff9 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002ffa 6f72
002ffb 6563
002ffc 7373
002ffd 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002ffe 3e79
002fff 7220
003000 6165
003001 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
003002 6425
003003 205d
003004 2d2d
003005 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
003006 000a
003007 4d3c
003008 4e45
003009 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
00300a 7270
00300b 636f
00300c 7365
00300d 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
00300e 7965
00300f 203e
003010 6567
003011 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
003012 7465
003013 6f77
003014 6b72
003015 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
003016 6f66
003017 2928
003018 6620
003019 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
00301a 656c
00301b 0d64
00301c 000a
00301d 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
00301e 4e45
00301f 5f55
003020 7270
003021 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
003022 7365
003023 4b73
003024 7965
003025 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
003026 4e56
003027 7525
003028 252e
003029 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
00302a 7525
00302b 252e
00302c 2c75
00302d 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
00302e 252e
00302f 2e75
003030 7525
003031 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
003032 2c75
003033 7525
003034 252e
003035 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
003036 7525
003037 252e
003038 2c75
003039 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
00303a 252e
00303b 2e75
00303c 7525
00303d 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
00303e 2c75
00303f 0a0d
003040 5600
003041 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
003042 2e75
003043 7525
003044 252e
003045 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003046 7525
003047 252c
003048 2e75
003049 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
00304a 252e
00304b 2e75
00304c 7525
00304d 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
00304e 2e75
00304f 7525
003050 252e
003051 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003052 7525
003053 252c
003054 2e75
003055 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
003056 252e
003057 2e75
003058 7525
003059 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
00305a 4d3c
00305b 4e45
00305c 5f55
00305d 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
00305e 636f
00305f 7365
003060 4b73
003061 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
003062 203e
003063 6564
003064 4576
003065 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
003066 6425
003067 205d
003068 6c61
003069 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
00306a 5b6e
00306b 6425
00306c 005d
00306d 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
00306e 3125
00306f 0064
003070 4445
003071 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
003072 6431
003073 4500
003074 3344
003075 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
003076 0064
003077 4953
003078 4900
003079 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
00307a 5831
00307b 3125
00307c 0064
00307d 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
00307e 3125
00307f 0064
003080 4d3c
003081 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
003082 5f55
003083 7270
003084 636f
003085 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
003086 4b73
003087 7965
003088 203e
003089 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
00308a 4576
00308b 206e
00308c 3e2d
00308d 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
00308e 2544
00308f 6431
003090 3125
003091 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
003092 4d3c
003093 4e45
003094 5f55
003095 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
003096 636f
003097 7365
003098 4b73
003099 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
00309a 203e
00309b 6c61
00309c 456d
00309d 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
00309e 3e2d
00309f 4520
0030a0 2544
0030a1 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
0030a2 3125
0030a3 0064
0030a4 4d3c
0030a5 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
0030a6 5f55
0030a7 7270
0030a8 636f
0030a9 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0030aa 4b73
0030ab 7965
0030ac 203e
0030ad 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
0030ae 4f74
0030af 6570
0030b0 6172
0030b1 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0030b2 676e
0030b3 6f43
0030b4 666e
0030b5 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0030b6 2928
0030b7 6620
0030b8 6961
0030b9 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0030ba 0d64
0030bb 000a
0030bc 4c46
0030bd 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
0030be 0049
0030bf 4149
0030c0 3125
0030c1 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
0030c2 4d53
0030c3 5300
0030c4 0047
0030c5 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
0030c6 5300
0030c7 2546
0030c8 2e75
0030c9 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
0030ca 252e
0030cb 2e75
0030cc 7525
0030cd 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
0030ce 2e75
0030cf 7525
0030d0 252e
0030d1 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
0030d2 7525
0030d3 252c
0030d4 2e75
0030d5 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
0030d6 252e
0030d7 2e75
0030d8 7525
0030d9 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
0030da 2e75
0030db 7525
0030dc 252e
0030dd 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
0030de 7525
0030df 002c
0030e0 4d3c
0030e1 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
0030e2 5f55
0030e3 7270
0030e4 636f
0030e5 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0030e6 4b73
0030e7 7965
0030e8 203e
0030e9 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
0030ea 5f48
0030eb 6573
0030ec 4374
0030ed 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
0030ee 6966
0030ef 2867
0030f0 2029
0030f1 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
0030f2 6c69
0030f3 6465
0030f4 0d20
0030f5 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
0030f6 554d
0030f7 3125
0030f8 0064
0030f9 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
0030fa 3125
0030fb 2a64
0030fc 5000
0030fd 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
0030fe 6431
0030ff 5000
003100 0035
003101 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
003102 3125
003103 2564
003104 6431
003105 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
003106 454d
003107 554e
003108 705f
003109 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
00310a 6563
00310b 7373
00310c 654b
00310d 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
00310e 6e20
00310f 7765
003110 7750
003111 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
003112 2026
003113 6f63
003114 666e
003115 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
003116 2064
003117 6f6e
003118 2074
003119 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
00311a 6374
00311b 0d68
00311c 000a
00311d 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
00311e 5600
00311f 2544
003120 6431
003121 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
003122 0064
003123 3153
003124 3125
003125 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
003126 3253
003127 3125
003128 0064
003129 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
00312a 4d00
00312b 2537
00312c 6431
00312d 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
00312e 2541
00312f 6431
003130 5300
003131 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
003132 6431
003133 5000
003134 254e
003135 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
003136 4300
003137 2543
003138 6431
003139 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
00313a 2538
00313b 6431
00313c 4300
00313d 2550      	.DB  0x38,0x25,0x31,0x64,0x0,0x43,0x50,0x25
00313e 6431
00313f 3125
003140 0064
003141 4443      	.DB  0x31,0x64,0x25,0x31,0x64,0x0,0x43,0x44
003142 3125
003143 2564
003144 6431
003145 6300      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x63
003146 6c61
003147 6e50
003148 5b74
003149 3125      	.DB  0x61,0x6C,0x50,0x6E,0x74,0x5B,0x25,0x31
00314a 5d64
00314b 3d20
00314c 2520
00314d 6431      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x31,0x64
00314e 0a0d
00314f 4300
003150 2541
003151 6431      	.DB  0xD,0xA,0x0,0x43,0x41,0x25,0x31,0x64
003152 5700
003153 0050
003154 5350
003155 5000      	.DB  0x0,0x57,0x50,0x0,0x50,0x53,0x0,0x50
003156 0034
003157 455b
003158 005d
003159 445b      	.DB  0x34,0x0,0x5B,0x45,0x5D,0x0,0x5B,0x44
00315a 005d
00315b 6e45
00315c 6261
00315d 656c      	.DB  0x5D,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
00315e 4400
00315f 7369
003160 6261
003161 656c      	.DB  0x0,0x44,0x69,0x73,0x61,0x62,0x6C,0x65
003162 3c00
003163 6873
003164 776f
003165 7250      	.DB  0x0,0x3C,0x73,0x68,0x6F,0x77,0x50,0x72
003166 626f
003167 4365
003168 6e6f
003169 6966      	.DB  0x6F,0x62,0x65,0x43,0x6F,0x6E,0x66,0x69
00316a 3e67
00316b 5020
00316c 2543
00316d 6431      	.DB  0x67,0x3E,0x20,0x50,0x43,0x25,0x31,0x64
00316e 3125
00316f 2564
003170 2c64
003171 7325      	.DB  0x25,0x31,0x64,0x25,0x64,0x2C,0x25,0x73
003172 252c
003173 2c73
003174 2e25
003175 6631      	.DB  0x2C,0x25,0x73,0x2C,0x25,0x2E,0x31,0x66
003176 252c
003177 2c64
003178 2e25
003179 6631      	.DB  0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31,0x66
00317a 252c
00317b 312e
00317c 2c66
00317d 6425      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x2C,0x25,0x64
00317e 252c
00317f 312e
003180 0066
003181 0a0d      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x0,0xD,0xA
003182 673c
003183 7465
003184 635f
003185 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
003186 6572
003187 746e
003188 735f
003189 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
00318a 6c70
00318b 6e69
00318c 3e67
00318d 7220      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x72
00318e 6165
00318f 206c
003190 6176
003191 756c      	.DB  0x65,0x61,0x6C,0x20,0x76,0x61,0x6C,0x75
003192 2065
003193 2528
003194 206c
003195 6573      	.DB  0x65,0x20,0x28,0x25,0x6C,0x20,0x73,0x65
003196 2e63
003197 0d29
003198 000a
003199 673c      	.DB  0x63,0x2E,0x29,0xD,0xA,0x0,0x3C,0x67
00319a 7465
00319b 635f
00319c 7275
00319d 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
00319e 746e
00319f 735f
0031a0 6d61
0031a1 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
0031a2 6e69
0031a3 3e67
0031a4 2520
0031a5 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
0031a6 7268
0031a7 0d2e
0031a8 000a
0031a9 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
0031aa 7465
0031ab 635f
0031ac 7275
0031ad 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
0031ae 746e
0031af 735f
0031b0 6d61
0031b1 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
0031b2 6e69
0031b3 3e67
0031b4 2520
0031b5 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
0031b6 696d
0031b7 2e6e
0031b8 0a0d
0031b9 3c00      	.DB  0x6D,0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C
0031ba 6567
0031bb 5f74
0031bc 7563
0031bd 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
0031be 6e65
0031bf 5f74
0031c0 6173
0031c1 706d      	.DB  0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70
0031c2 696c
0031c3 676e
0031c4 203e
0031c5 6425      	.DB  0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25,0x64
0031c6 7320
0031c7 6365
0031c8 0d2e
0031c9 000a      	.DB  0x20,0x73,0x65,0x63,0x2E,0xD,0xA,0x0
0031ca 673c
0031cb 7465
0031cc 635f
0031cd 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
0031ce 6572
0031cf 746e
0031d0 735f
0031d1 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
0031d2 6c70
0031d3 6e69
0031d4 3e67
0031d5 2520      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25
0031d6 2064
0031d7 696d
0031d8 2e6e
0031d9 2520      	.DB  0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20,0x25
0031da 2064
0031db 6573
0031dc 2e63
0031dd 0020      	.DB  0x64,0x20,0x73,0x65,0x63,0x2E,0x20,0x0
0031de 2d2d
0031df 203e
0031e0 6425
0031e1 6d20      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20,0x6D
0031e2 6e69
0031e3 0d2e
0031e4 000a
0031e5 673c      	.DB  0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C,0x67
0031e6 7465
0031e7 635f
0031e8 7275
0031e9 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
0031ea 746e
0031eb 735f
0031ec 6d61
0031ed 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
0031ee 6e69
0031ef 3e67
0031f0 2520
0031f1 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
0031f2 7268
0031f3 202e
0031f4 6425
0031f5 6d20      	.DB  0x68,0x72,0x2E,0x20,0x25,0x64,0x20,0x6D
0031f6 6e69
0031f7 202e
0031f8 6425
0031f9 7320      	.DB  0x69,0x6E,0x2E,0x20,0x25,0x64,0x20,0x73
0031fa 6365
0031fb 202e
0031fc 2d00
0031fd 3e2d      	.DB  0x65,0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E
0031fe 2520
0031ff 2064
003200 7268
003201 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
003202 000a
003203 673c
003204 7465
003205 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
003206 7275
003207 6572
003208 746e
003209 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
00320a 6d61
00320b 6c70
00320c 6e69
00320d 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
00320e 4320
00320f 6e61
003210 7427
003211 5320      	.DB  0x20,0x43,0x61,0x6E,0x27,0x74,0x20,0x53
003212 6f68
003213 2e77
003214 0a0d
003215 3c00      	.DB  0x68,0x6F,0x77,0x2E,0xD,0xA,0x0,0x3C
003216 6567
003217 5f74
003218 7563
003219 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
00321a 6e65
00321b 5f74
00321c 7276
00321d 6665      	.DB  0x65,0x6E,0x74,0x5F,0x76,0x72,0x65,0x66
00321e 203e
00321f 7276
003220 6665
003221 2528      	.DB  0x3E,0x20,0x76,0x72,0x65,0x66,0x28,0x25
003222 2966
003223 7620
003224 6c61
003225 6d54      	.DB  0x66,0x29,0x20,0x76,0x61,0x6C,0x54,0x6D
003226 2070
003227 203d
003228 7325
003229 0a0d      	.DB  0x70,0x20,0x3D,0x20,0x25,0x73,0xD,0xA
00322a 3c00
00322b 6567
00322c 5f74
00322d 7563      	.DB  0x0,0x3C,0x67,0x65,0x74,0x5F,0x63,0x75
00322e 7272
00322f 6e65
003230 5f74
003231 7276      	.DB  0x72,0x72,0x65,0x6E,0x74,0x5F,0x76,0x72
003232 6665
003233 203e
003234 7562
003235 2066      	.DB  0x65,0x66,0x3E,0x20,0x62,0x75,0x66,0x20
003236 3e2d
003237 0020
003238 255b
003239 5d63      	.DB  0x2D,0x3E,0x20,0x0,0x5B,0x25,0x63,0x5D
00323a 3c00
00323b 6567
00323c 4e74
00323d 7465      	.DB  0x0,0x3C,0x67,0x65,0x74,0x4E,0x65,0x74
00323e 6f77
00323f 6b72
003240 6e49
003241 6f66      	.DB  0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F
003242 203e
003243 494c
003244 2050
003245 203a      	.DB  0x3E,0x20,0x4C,0x49,0x50,0x20,0x3A,0x20
003246 7525
003247 252e
003248 2e75
003249 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
00324a 252e
00324b 0d75
00324c 000a
00324d 673c      	.DB  0x2E,0x25,0x75,0xD,0xA,0x0,0x3C,0x67
00324e 7465
00324f 654e
003250 7774
003251 726f      	.DB  0x65,0x74,0x4E,0x65,0x74,0x77,0x6F,0x72
003252 496b
003253 666e
003254 3e6f
003255 4d20      	.DB  0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4D
003256 4b53
003257 3a20
003258 2520
003259 2e75      	.DB  0x53,0x4B,0x20,0x3A,0x20,0x25,0x75,0x2E
00325a 7525
00325b 252e
00325c 2e75
00325d 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
00325e 0a0d
00325f 3c00
003260 6567
003261 4e74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4E
003262 7465
003263 6f77
003264 6b72
003265 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
003266 6f66
003267 203e
003268 4744
003269 2057      	.DB  0x66,0x6F,0x3E,0x20,0x44,0x47,0x57,0x20
00326a 203a
00326b 7525
00326c 252e
00326d 2e75      	.DB  0x3A,0x20,0x25,0x75,0x2E,0x25,0x75,0x2E
00326e 7525
00326f 252e
003270 0d75
003271 000a      	.DB  0x25,0x75,0x2E,0x25,0x75,0xD,0xA,0x0
003272 673c
003273 7465
003274 654e
003275 7774      	.DB  0x3C,0x67,0x65,0x74,0x4E,0x65,0x74,0x77
003276 726f
003277 496b
003278 666e
003279 3e6f      	.DB  0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E
00327a 5320
00327b 5049
00327c 3a20
00327d 2520      	.DB  0x20,0x53,0x49,0x50,0x20,0x3A,0x20,0x25
00327e 2e75
00327f 7525
003280 252e
003281 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003282 7525
003283 0a0d
003284 3c00
003285 6573      	.DB  0x25,0x75,0xD,0xA,0x0,0x3C,0x73,0x65
003286 5f74
003287 7276
003288 6665
003289 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
00328a 255b
00328b 5d64
00328c 255b
00328d 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
00328e 255b
00328f 5d64
003290 2d20
003291 203e      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x2D,0x3E,0x20
003292 6425
003293 2d20
003294 203e
003295 6625      	.DB  0x25,0x64,0x20,0x2D,0x3E,0x20,0x25,0x66
003296 0a0d
003297 3c00
003298 6572
003299 6d63      	.DB  0xD,0xA,0x0,0x3C,0x72,0x65,0x63,0x6D
00329a 3e70
00329b 7320
00329c 6372
00329d 5b31      	.DB  0x70,0x3E,0x20,0x73,0x72,0x63,0x31,0x5B
00329e 3025
00329f 5832
0032a0 205d
0032a1 7273      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x73,0x72
0032a2 3263
0032a3 255b
0032a4 3230
0032a5 5d58      	.DB  0x63,0x32,0x5B,0x25,0x30,0x32,0x58,0x5D
0032a6 7520
0032a7 6573
0032a8 5b72
0032a9 3025      	.DB  0x20,0x75,0x73,0x65,0x72,0x5B,0x25,0x30
0032aa 5832
0032ab 205d
0032ac 6573
0032ad 7672      	.DB  0x32,0x58,0x5D,0x20,0x73,0x65,0x72,0x76
0032ae 6369
0032af 5b65
0032b0 3025
0032b1 5832      	.DB  0x69,0x63,0x65,0x5B,0x25,0x30,0x32,0x58
0032b2 0d5d
0032b3 000a      	.DB  0x5D,0xD,0xA,0x0
                 _0x2E0003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4511): warning: .cseg .db misalignment - padding zero byte
0032b4 0009      	.DB  0x9
                 _0x2E0000:
0032b5 475b
0032b6 7465
0032b7 4120
0032b8 4344      	.DB  0x5B,0x47,0x65,0x74,0x20,0x41,0x44,0x43
0032b9 6f20
0032ba 2066
0032bb 6573
0032bc 736e      	.DB  0x20,0x6F,0x66,0x20,0x73,0x65,0x6E,0x73
0032bd 726f
0032be 0d5d
0032bf 000a
0032c0 0a0d      	.DB  0x6F,0x72,0x5D,0xD,0xA,0x0,0xD,0xA
0032c1 443c
0032c2 6265
0032c3 6775
0032c4 533e      	.DB  0x3C,0x44,0x65,0x62,0x75,0x67,0x3E,0x53
0032c5 7465
0032c6 6143
0032c7 3a6c
0032c8 0d20      	.DB  0x65,0x74,0x43,0x61,0x6C,0x3A,0x20,0xD
0032c9 000a
0032ca 6553
0032cb 736e
0032cc 726f      	.DB  0xA,0x0,0x53,0x65,0x6E,0x73,0x6F,0x72
0032cd 5420
0032ce 7079
0032cf 3a65
0032d0 6425      	.DB  0x20,0x54,0x79,0x70,0x65,0x3A,0x25,0x64
0032d1 0d20
0032d2 000a
0032d3 6567
0032d4 2074      	.DB  0x20,0xD,0xA,0x0,0x67,0x65,0x74,0x20
0032d5 6579
0032d6 7261
0032d7 3d20
0032d8 2520      	.DB  0x79,0x65,0x61,0x72,0x20,0x3D,0x20,0x25
0032d9 0d64
0032da 000a
0032db 6567
0032dc 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
0032dd 6f6d
0032de 746e
0032df 2068
0032e0 203d      	.DB  0x6D,0x6F,0x6E,0x74,0x68,0x20,0x3D,0x20
0032e1 6425
0032e2 0a0d
0032e3 6700
0032e4 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
0032e5 6420
0032e6 7461
0032e7 2065
0032e8 203d      	.DB  0x20,0x64,0x61,0x74,0x65,0x20,0x3D,0x20
0032e9 6425
0032ea 0a0d
0032eb 6700
0032ec 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
0032ed 6820
0032ee 756f
0032ef 2072
0032f0 203d      	.DB  0x20,0x68,0x6F,0x75,0x72,0x20,0x3D,0x20
0032f1 6425
0032f2 0a0d
0032f3 6700
0032f4 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
0032f5 6d20
0032f6 6e69
0032f7 3d20
0032f8 2520      	.DB  0x20,0x6D,0x69,0x6E,0x20,0x3D,0x20,0x25
0032f9 0d64
0032fa 000a
0032fb 6567
0032fc 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
0032fd 6573
0032fe 2063
0032ff 203d
003300 6425      	.DB  0x73,0x65,0x63,0x20,0x3D,0x20,0x25,0x64
003301 0a0d
003302 6700
003303 7465
003304 7420      	.DB  0xD,0xA,0x0,0x67,0x65,0x74,0x20,0x74
003305 6d69
003306 7a65
003307 6e6f
003308 2065      	.DB  0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65,0x20
003309 203d
00330a 2b25
00330b 0d64
00330c 000a      	.DB  0x3D,0x20,0x25,0x2B,0x64,0xD,0xA,0x0
00330d 0a0d
00330e 443c
00330f 4245
003310 4755      	.DB  0xD,0xA,0x3C,0x44,0x45,0x42,0x55,0x47
003311 203e
003312 6c41
003313 7261
003314 206d      	.DB  0x3E,0x20,0x41,0x6C,0x61,0x72,0x6D,0x20
003315 7453
003316 7461
003317 7375
003318 5220      	.DB  0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x52
003319 7365
00331a 7465
00331b 2e2e
00331c 2121      	.DB  0x65,0x73,0x65,0x74,0x2E,0x2E,0x21,0x21
00331d 0a0d
00331e 3c00
00331f 4544
003320 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
003321 5f47
003322 6c43
003323 6165
003324 4c72      	.DB  0x47,0x5F,0x43,0x6C,0x65,0x61,0x72,0x4C
003325 676f
003326 6946
003327 656c
003328 203e      	.DB  0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E,0x20
003329 6552
00332a 692d
00332b 696e
00332c 6974      	.DB  0x52,0x65,0x2D,0x69,0x6E,0x69,0x74,0x69
00332d 7461
00332e 2065
00332f 6f6c
003330 2067      	.DB  0x61,0x74,0x65,0x20,0x6C,0x6F,0x67,0x20
003331 6966
003332 656c
003333 0a0d
003334 3c00      	.DB  0x66,0x69,0x6C,0x65,0xD,0xA,0x0,0x3C
003335 4544
003336 5542
003337 5f47
003338 6c43      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x43,0x6C
003339 6165
00333a 4c72
00333b 676f
00333c 6946      	.DB  0x65,0x61,0x72,0x4C,0x6F,0x67,0x46,0x69
00333d 656c
00333e 203e
00333f 4f4c
003340 5f47      	.DB  0x6C,0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F
003341 7263
003342 6165
003343 6574
003344 6946      	.DB  0x63,0x72,0x65,0x61,0x74,0x65,0x46,0x69
003345 656c
003346 2528
003347 2973
003348 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
003349 6961
00334a 656c
00334b 0d64
00334c 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00334d 443c
00334e 4245
00334f 4755
003350 735f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x73
003351 7465
003352 6552
003353 6c61
003354 7256      	.DB  0x65,0x74,0x52,0x65,0x61,0x6C,0x56,0x72
003355 6665
003356 203e
003357 6567
003358 2074      	.DB  0x65,0x66,0x3E,0x20,0x67,0x65,0x74,0x20
003359 6573
00335a 2074
00335b 7256
00335c 6665      	.DB  0x73,0x65,0x74,0x20,0x56,0x72,0x65,0x66
00335d 733c
00335e 7274
00335f 6e69
003360 3e67      	.DB  0x3C,0x73,0x74,0x72,0x69,0x6E,0x67,0x3E
003361 2520
003362 0d73
003363 000a
003364 443c      	.DB  0x20,0x25,0x73,0xD,0xA,0x0,0x3C,0x44
003365 4245
003366 4755
003367 735f
003368 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
003369 6552
00336a 6c61
00336b 7256
00336c 6665      	.DB  0x52,0x65,0x61,0x6C,0x56,0x72,0x65,0x66
00336d 203e
00336e 6641
00336f 6574
003370 2072      	.DB  0x3E,0x20,0x41,0x66,0x74,0x65,0x72,0x20
003371 6f63
003372 766e
003373 7265
003374 2074      	.DB  0x63,0x6F,0x6E,0x76,0x65,0x72,0x74,0x20
003375 203d
003376 6625
003377 0a0d
003378 3c00      	.DB  0x3D,0x20,0x25,0x66,0xD,0xA,0x0,0x3C
003379 4544
00337a 5542
00337b 5f47
00337c 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
00337d 736e
00337e 726f
00337f 6553
003380 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
003381 7463
003382 203e
003383 6854
003384 7369      	.DB  0x63,0x74,0x3E,0x20,0x54,0x68,0x69,0x73
003385 5420
003386 4d45
003387 5f50
003388 4553      	.DB  0x20,0x54,0x45,0x4D,0x50,0x5F,0x53,0x45
003389 204c
00338a 6f6e
00338b 2074
00338c 7573      	.DB  0x4C,0x20,0x6E,0x6F,0x74,0x20,0x73,0x75
00338d 7070
00338e 726f
00338f 0d74
003390 0d0a      	.DB  0x70,0x70,0x6F,0x72,0x74,0xD,0xA,0xD
003391 000a
003392 443c
003393 4245
003394 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
003395 735f
003396 6e65
003397 6f73
003398 5372      	.DB  0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
003399 6c65
00339a 6365
00339b 3e74
00339c 4420      	.DB  0x65,0x6C,0x65,0x63,0x74,0x3E,0x20,0x44
00339d 7365
00339e 6c65
00339f 6365
0033a0 2074      	.DB  0x65,0x73,0x65,0x6C,0x65,0x63,0x74,0x20
0033a1 6573
0033a2 736e
0033a3 726f
0033a4 0a0d      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0xD,0xA
0033a5 0a0d
0033a6 3c00
0033a7 4544
0033a8 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0033a9 5f47
0033aa 6573
0033ab 736e
0033ac 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
0033ad 6553
0033ae 656c
0033af 7463
0033b0 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
0033b1 6553
0033b2 656c
0033b3 7463
0033b4 6465      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x65,0x64
0033b5 7320
0033b6 6e65
0033b7 6f73
0033b8 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
0033b9 6425
0033ba 0a0d
0033bb 0a0d
0033bc 3c00      	.DB  0x25,0x64,0xD,0xA,0xD,0xA,0x0,0x3C
0033bd 4544
0033be 5542
0033bf 5f47
0033c0 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0033c1 736e
0033c2 726f
0033c3 6553
0033c4 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
0033c5 7463
0033c6 203e
0033c7 5245
0033c8 4f52      	.DB  0x63,0x74,0x3E,0x20,0x45,0x52,0x52,0x4F
0033c9 2052
0033ca 203a
0033cb 6553
0033cc 656c      	.DB  0x52,0x20,0x3A,0x20,0x53,0x65,0x6C,0x65
0033cd 7463
0033ce 6e69
0033cf 2067
0033d0 6573      	.DB  0x63,0x74,0x69,0x6E,0x67,0x20,0x73,0x65
0033d1 736e
0033d2 726f
0033d3 5b20
0033d4 6325      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x5B,0x25,0x63
0033d5 5b5d
0033d6 7830
0033d7 3025
0033d8 5832      	.DB  0x5D,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0033d9 0d5d
0033da 0d0a
0033db 000a
0033dc 443c      	.DB  0x5D,0xD,0xA,0xD,0xA,0x0,0x3C,0x44
0033dd 4245
0033de 4755
0033df 735f
0033e0 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
0033e1 6553
0033e2 6972
0033e3 6c61
0033e4 754e      	.DB  0x53,0x65,0x72,0x69,0x61,0x6C,0x4E,0x75
0033e5 626d
0033e6 7265
0033e7 203e
0033e8 6e69      	.DB  0x6D,0x62,0x65,0x72,0x3E,0x20,0x69,0x6E
0033e9 6176
0033ea 696c
0033eb 2064
0033ec 6573      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x73,0x65
0033ed 7474
0033ee 6e69
0033ef 2067
0033f0 7473      	.DB  0x74,0x74,0x69,0x6E,0x67,0x20,0x73,0x74
0033f1 6972
0033f2 676e
0033f3 2820
0033f4 6325      	.DB  0x72,0x69,0x6E,0x67,0x20,0x28,0x25,0x63
0033f5 5b29
0033f6 7830
0033f7 3025
0033f8 5d32      	.DB  0x29,0x5B,0x30,0x78,0x25,0x30,0x32,0x5D
0033f9 0a0d
0033fa 3c00
0033fb 4544
0033fc 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0033fd 5f47
0033fe 6573
0033ff 5374
003400 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
003401 6169
003402 4e6c
003403 6d75
003404 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
003405 3e72
003406 5220
003407 7065
003408 616c      	.DB  0x72,0x3E,0x20,0x52,0x65,0x70,0x6C,0x61
003409 6963
00340a 676e
00340b 4420
00340c 5645      	.DB  0x63,0x69,0x6E,0x67,0x20,0x44,0x45,0x56
00340d 4349
00340e 5f45
00340f 4553
003410 4952      	.DB  0x49,0x43,0x45,0x5F,0x53,0x45,0x52,0x49
003411 4c41
003412 2e2e
003413 0a0d
003414 3c00      	.DB  0x41,0x4C,0x2E,0x2E,0xD,0xA,0x0,0x3C
003415 4544
003416 5542
003417 5f47
003418 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003419 5374
00341a 7265
00341b 6169
00341c 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
00341d 6d75
00341e 6562
00341f 3e72
003420 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
003421 7465
003422 5320
003423 7274
003424 6e69      	.DB  0x65,0x74,0x20,0x53,0x74,0x72,0x69,0x6E
003425 2067
003426 2d2d
003427 203e
003428 5b00      	.DB  0x67,0x20,0x2D,0x2D,0x3E,0x20,0x0,0x5B
003429 6325
00342a 2500
00342b 5d63
00342c 3c00      	.DB  0x25,0x63,0x0,0x25,0x63,0x5D,0x0,0x3C
00342d 4544
00342e 5542
00342f 5f47
003430 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003431 5374
003432 7265
003433 6169
003434 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
003435 6d75
003436 6562
003437 3e72
003438 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
003439 6375
00343a 6563
00343b 7373
00343c 2121      	.DB  0x75,0x63,0x63,0x65,0x73,0x73,0x21,0x21
00343d 4420
00343e 5645
00343f 535f
003440 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
003441 4149
003442 204c
003443 3d3d
003444 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
003445 5b00
003446 3025
003447 5832
003448 005d      	.DB  0x0,0x5B,0x25,0x30,0x32,0x58,0x5D,0x0
003449 443c
00344a 4245
00344b 4755
00344c 725f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x72
00344d 6165
00344e 5364
00344f 7265
003450 6169      	.DB  0x65,0x61,0x64,0x53,0x65,0x72,0x69,0x61
003451 4e6c
003452 6d75
003453 6562
003454 3e72      	.DB  0x6C,0x4E,0x75,0x6D,0x62,0x65,0x72,0x3E
003455 4420
003456 5645
003457 535f
003458 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
003459 4149
00345a 204c
00345b 3d3d
00345c 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
00345d 4700
00345e 7465
00345f 4420
003460 6265      	.DB  0x0,0x47,0x65,0x74,0x20,0x44,0x65,0x62
003461 6775
003462 5220
003463 7165
003464 3a2e      	.DB  0x75,0x67,0x20,0x52,0x65,0x71,0x2E,0x3A
003465 2500
003466 3530
003467 2064
003468 2020      	.DB  0x0,0x25,0x30,0x35,0x64,0x20,0x20,0x20
003469 2500
00346a 3230
00346b 2078
00346c 2e00      	.DB  0x0,0x25,0x30,0x32,0x78,0x20,0x0,0x2E
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4623): warning: .cseg .db misalignment - padding zero byte
00346d 0000      	.DB  0x0
                 _0x300003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4625): warning: .cseg .db misalignment - padding zero byte
00346e 0003      	.DB  0x3
                 _0x340003:
00346f 0000
003470 c120
003471 0000
003472 c1a0      	.DB  0x0,0x0,0x20,0xC1,0x0,0x0,0xA0,0xC1
003473 0000
003474 c220
003475 0000
003476 c220      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0x20,0xC2
003477 0000
003478 c270
003479 0000
00347a c2a0      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0xA0,0xC2
00347b 0000
00347c c2a0
00347d 0000
00347e c2c8      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0xC8,0xC2
00347f 0000
003480 c2f0
003481 0000
003482 c2f0      	.DB  0x0,0x0,0xF0,0xC2,0x0,0x0,0xF0,0xC2
003483 0000
003484 c30c
003485 0000
003486 c320      	.DB  0x0,0x0,0xC,0xC3,0x0,0x0,0x20,0xC3
003487 0000
003488 c320
003489 0000
00348a c334      	.DB  0x0,0x0,0x20,0xC3,0x0,0x0,0x34,0xC3
00348b 0000
00348c c348
00348d 8312
00348e bdc0      	.DB  0x0,0x0,0x48,0xC3,0x12,0x83,0xC0,0xBD
00348f 8937
003490 be41
003491 0000
003492 bec0      	.DB  0x37,0x89,0x41,0xBE,0x0,0x0,0xC0,0xBE
003493 0000
003494 bec0
003495 4fdf
003496 bf0d      	.DB  0x0,0x0,0xC0,0xBE,0xDF,0x4F,0xD,0xBF
003497 1062
003498 bf38
003499 1062
00349a bf38      	.DB  0x62,0x10,0x38,0xBF,0x62,0x10,0x38,0xBF
00349b 4189
00349c bf60
00349d b021
00349e bf82      	.DB  0x89,0x41,0x60,0xBF,0x21,0xB0,0x82,0xBF
00349f b021
0034a0 bf82
0034a1 74bc
0034a2 bf93      	.DB  0x21,0xB0,0x82,0xBF,0xBC,0x74,0x93,0xBF
0034a3 6e98
0034a4 bfa2
0034a5 6e98
0034a6 bfa2      	.DB  0x98,0x6E,0xA2,0xBF,0x98,0x6E,0xA2,0xBF
0034a7 5c29
0034a8 bfaf
0034a9 1cac
0034aa bfba      	.DB  0x29,0x5C,0xAF,0xBF,0xAC,0x1C,0xBA,0xBF
0034ab 0000
0034ac c348
0034ad 0000
0034ae c320      	.DB  0x0,0x0,0x48,0xC3,0x0,0x0,0x20,0xC3
0034af 0000
0034b0 c2c8
0034b1 1cac
0034b2 bfba      	.DB  0x0,0x0,0xC8,0xC2,0xAC,0x1C,0xBA,0xBF
0034b3 6e98
0034b4 bfa2
0034b5 4189
0034b6 bf60      	.DB  0x98,0x6E,0xA2,0xBF,0x89,0x41,0x60,0xBF
0034b7 0000
0034b8 c2c8
0034b9 0000
0034ba c270      	.DB  0x0,0x0,0xC8,0xC2,0x0,0x0,0x70,0xC2
0034bb 0000
0034bc c120
0034bd 4189
0034be bf60      	.DB  0x0,0x0,0x20,0xC1,0x89,0x41,0x60,0xBF
0034bf 4fdf
0034c0 bf0d
0034c1 8312
0034c2 bdc0      	.DB  0xDF,0x4F,0xD,0xBF,0x12,0x83,0xC0,0xBD
0034c3 0000
0034c4 0000
0034c5 0000
0034c6 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0034c7 0000
0034c8 0000
0034c9 0000
0034ca 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0034cb 0000
0034cc 0000
0034cd 6042
0034ce 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
0034cf 0000
0034d0 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x34001B:
0034d1 0000
0034d2 0000
0034d3 0000
0034d4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0034d5 6042
0034d6 3fd5
0034d7 0000
0034d8 0000      	.DB  0x42,0x60,0xD5,0x3F,0x0,0x0,0x0,0x0
                 _0x34001C:
0034d9 0000
0034da c120
0034db 0000
0034dc c1a0      	.DB  0x0,0x0,0x20,0xC1,0x0,0x0,0xA0,0xC1
0034dd 0000
0034de c220
0034df 0000
0034e0 c220      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0x20,0xC2
0034e1 0000
0034e2 c270
0034e3 0000
0034e4 c2a0      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0xA0,0xC2
0034e5 0000
0034e6 c2a0
0034e7 0000
0034e8 c2c8      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0xC8,0xC2
0034e9 0000
0034ea c2f0
0034eb 0000
0034ec c2f0      	.DB  0x0,0x0,0xF0,0xC2,0x0,0x0,0xF0,0xC2
0034ed 0000
0034ee c30c
0034ef 0000
0034f0 c320      	.DB  0x0,0x0,0xC,0xC3,0x0,0x0,0x20,0xC3
0034f1 0000
0034f2 c320
0034f3 0000
0034f4 c334      	.DB  0x0,0x0,0x20,0xC3,0x0,0x0,0x34,0xC3
0034f5 0000
0034f6 c348
0034f7 8312
0034f8 bdc0      	.DB  0x0,0x0,0x48,0xC3,0x12,0x83,0xC0,0xBD
0034f9 8937
0034fa be41
0034fb 0000
0034fc bec0      	.DB  0x37,0x89,0x41,0xBE,0x0,0x0,0xC0,0xBE
0034fd 0000
0034fe bec0
0034ff 4fdf
003500 bf0d      	.DB  0x0,0x0,0xC0,0xBE,0xDF,0x4F,0xD,0xBF
003501 1062
003502 bf38
003503 1062
003504 bf38      	.DB  0x62,0x10,0x38,0xBF,0x62,0x10,0x38,0xBF
003505 4189
003506 bf60
003507 b021
003508 bf82      	.DB  0x89,0x41,0x60,0xBF,0x21,0xB0,0x82,0xBF
003509 b021
00350a bf82
00350b 74bc
00350c bf93      	.DB  0x21,0xB0,0x82,0xBF,0xBC,0x74,0x93,0xBF
00350d 6e98
00350e bfa2
00350f 6e98
003510 bfa2      	.DB  0x98,0x6E,0xA2,0xBF,0x98,0x6E,0xA2,0xBF
003511 5c29
003512 bfaf
003513 1cac
003514 bfba      	.DB  0x29,0x5C,0xAF,0xBF,0xAC,0x1C,0xBA,0xBF
003515 0000
003516 c348
003517 0000
003518 c320      	.DB  0x0,0x0,0x48,0xC3,0x0,0x0,0x20,0xC3
003519 0000
00351a c2c8
00351b 1cac
00351c bfba      	.DB  0x0,0x0,0xC8,0xC2,0xAC,0x1C,0xBA,0xBF
00351d 6e98
00351e bfa2
00351f 4189
003520 bf60      	.DB  0x98,0x6E,0xA2,0xBF,0x89,0x41,0x60,0xBF
003521 0000
003522 c2c8
003523 0000
003524 c270      	.DB  0x0,0x0,0xC8,0xC2,0x0,0x0,0x70,0xC2
003525 0000
003526 c120
003527 4189
003528 bf60      	.DB  0x0,0x0,0x20,0xC1,0x89,0x41,0x60,0xBF
003529 4fdf
00352a bf0d
00352b 8312
00352c bdc0      	.DB  0xDF,0x4F,0xD,0xBF,0x12,0x83,0xC0,0xBD
00352d 0000
00352e 0000
00352f 0000
003530 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003531 0000
003532 0000
003533 0000
003534 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003535 0000
003536 0000
003537 6042
003538 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
003539 0000
00353a 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2000060:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4682): warning: .cseg .db misalignment - padding zero byte
00353b 0001      	.DB  0x1
                 _0x2000000:
00353c 4e2d
00353d 4e41
00353e 4900
00353f 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4685): warning: .cseg .db misalignment - padding zero byte
003540 0000      	.DB  0x0
                 _0x2040003:
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4687): warning: .cseg .db misalignment - padding zero byte
003541 0001      	.DB  0x1
                 _0x2080000:
003542 4e2d
003543 4e41
C:\Data\MyProject\Intelenics\int-sma\AVR_Model\iNT_IMS_ETH_TC_v02\List\iNT_ETH.asm(4689): warning: .cseg .db misalignment - padding zero byte
003544 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
003545 0004      	.DW  0x04
003546 1d8a      	.DW  0x1D8A
003547 0206 0000 	.DD  __HEAP_START_MARKER*2
                 
003549 0004      	.DW  0x04
00354a 14e0      	.DW  _ETH_rst_timer_S0000001000
00354b 0248 0000 	.DD  _0xA5*2
                 
00354d 002b      	.DW  0x2B
00354e 0cf0      	.DW  _0x40009
00354f 10b2 0000 	.DD  _0x40000*2
                 
003551 0026      	.DW  0x26
003552 0d1b      	.DW  _0x40009+43
003553 10dd 0000 	.DD  _0x40000*2+43
                 
003555 002b      	.DW  0x2B
003556 0d41      	.DW  _0x40009+81
003557 10b2 0000 	.DD  _0x40000*2
                 
003559 0002      	.DW  0x02
00355a 1434      	.DW  _d_out
00355b 118a 0000 	.DD  _0x80003*2
                 
00355d 0001      	.DW  0x01
00355e 10f6      	.DW  _is_properties_config_update
00355f 12f4 0000 	.DD  _0xE0003*2
                 
003561 0001      	.DW  0x01
003562 10f7      	.DW  _is_operating_config_update
003563 12f6 0000 	.DD  _0xE0004*2
                 
003565 0005      	.DW  0x05
003566 10f8      	.DW  _is_sensor_config_update
003567 12f8 0000 	.DD  _0xE0005*2
                 
003569 0010      	.DW  0x10
00356a 10fd      	.DW  _is_din_config_update
00356b 12fe 0000 	.DD  _0xE0006*2
                 
00356d 0005      	.DW  0x05
00356e 110d      	.DW  _is_dout_config_update
00356f 130e 0000 	.DD  _0xE0007*2
                 
003571 0001      	.DW  0x01
003572 1112      	.DW  _is_buzzer_config_update
003573 1314 0000 	.DD  _0xE0008*2
                 
003575 0001      	.DW  0x01
003576 1113      	.DW  _is_status_config_update
003577 1316 0000 	.DD  _0xE0009*2
                 
003579 0001      	.DW  0x01
00357a 1114      	.DW  _is_env_config_update
00357b 1318 0000 	.DD  _0xE000A*2
                 
00357d 0002      	.DW  0x02
00357e 0d6c      	.DW  _0x1200D0
00357f 3278 0000 	.DD  _0x120000*2+4850
                 
003581 0003      	.DW  0x03
003582 0007      	.DW  0x07
003583 42fe 0000 	.DD  _0x18001D*2
                 
003585 0005      	.DW  0x05
003586 158c      	.DW  _lastCheck_S00D0002000
003587 442e 0000 	.DD  _0x1A001A*2
                 
003589 0004      	.DW  0x04
00358a 000a      	.DW  0x0A
00358b 4a5a 0000 	.DD  _0x1C0005*2
                 
00358d 0002      	.DW  0x02
00358e 147c      	.DW  _dinStatus
00358f 4a5e 0000 	.DD  _0x1E0003*2
                 
003591 0002      	.DW  0x02
003592 147e      	.DW  _doutStatus
003593 4a60 0000 	.DD  _0x1E0004*2
                 
003595 0001      	.DW  0x01
003596 1480      	.DW  _serverCommStatus
003597 4a62 0000 	.DD  _0x1E0005*2
                 
003599 0002      	.DW  0x02
00359a 1628      	.DW  _lastDinCheck_S00F0006000
00359b 4a64 0000 	.DD  _0x1E003A*2
                 
00359d 0010      	.DW  0x10
00359e 1496      	.DW  _dinAlarm
00359f 4ba4 0000 	.DD  _0x220003*2
                 
0035a1 0010      	.DW  0x10
0035a2 16aa      	.DW  _ainAlarm
0035a3 4bb4 0000 	.DD  _0x220004*2
                 
0035a5 0001      	.DW  0x01
0035a6 16c4      	.DW  _lastCheck_S0110003000
0035a7 4bc4 0000 	.DD  _0x2200A8*2
                 
0035a9 0001      	.DW  0x01
0035aa 16ca      	.DW  _lastCheck_S0110004000
0035ab 4bc6 0000 	.DD  _0x2200B1*2
                 
0035ad 0002      	.DW  0x02
0035ae 16da      	.DW  _lastCheck_S0110006000
0035af 4bc8 0000 	.DD  _0x2200C5*2
                 
0035b1 0005      	.DW  0x05
0035b2 16f5      	.DW  _lastCheck_S0110007000
0035b3 4bca 0000 	.DD  _0x2200CF*2
                 
0035b5 0004      	.DW  0x04
0035b6 1487      	.DW  _muteAlarmExpired
0035b7 4bd0 0000 	.DD  _0x2200DD*2
                 
0035b9 0001      	.DW  0x01
0035ba 0006      	.DW  0x06
0035bb 4bd4 0000 	.DD  _0x2200F6*2
                 
0035bd 0003      	.DW  0x03
0035be 1947      	.DW  _root_path
0035bf 4e7e 0000 	.DD  _0x260003*2
                 
0035c1 0008      	.DW  0x08
0035c2 14a8      	.DW  _LOGFILE_DATA
0035c3 5358 0000 	.DD  _0x280003*2
                 
0035c5 0009      	.DW  0x09
0035c6 14b1      	.DW  _LOGFILE_EVENT
0035c7 5360 0000 	.DD  _0x280004*2
                 
0035c9 0009      	.DW  0x09
0035ca 14bb      	.DW  _LOGFILE_ERROR
0035cb 536a 0000 	.DD  _0x280005*2
                 
0035cd 0010      	.DW  0x10
0035ce 14c5      	.DW  _LOG_INIT_STR
0035cf 5374 0000 	.DD  _0x280006*2
                 
0035d1 0004      	.DW  0x04
0035d2 14d5      	.DW  _LOG_openFile
0035d3 5384 0000 	.DD  _0x280007*2
                 
0035d5 0004      	.DW  0x04
0035d6 14d9      	.DW  _LOG_closeFile
0035d7 5388 0000 	.DD  _0x280008*2
                 
0035d9 0001      	.DW  0x01
0035da 10f4      	.DW  _hwCalId
0035db 6568 0000 	.DD  _0x2E0003*2
                 
0035dd 0001      	.DW  0x01
0035de 1a99      	.DW  _n
0035df 68dc 0000 	.DD  _0x300003*2
                 
0035e1 0001      	.DW  0x01
0035e2 1ad1      	.DW  __seed_G100
0035e3 6a76 0000 	.DD  _0x2000060*2
                 
0035e5 0001      	.DW  0x01
0035e6 1ad5      	.DW  _status_G102
0035e7 6a82 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
0035e9 0000      	.DW  0
                 
                 __RESET:
0035ea 94f8      	CLI
0035eb 27ee      	CLR  R30
0035ec bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
0035ed e0f1      	LDI  R31,1
0035ee bff5      	OUT  MCUCR,R31
0035ef bfe5      	OUT  MCUCR,R30
0035f0 93e0 0074 	STS  XMCRA,R30
0035f2 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
0035f4 e1f8      	LDI  R31,0x18
0035f5 95a8      	WDR
0035f6 b7a4      	IN   R26,MCUSR
0035f7 7fa7      	CBR  R26,8
0035f8 bfa4      	OUT  MCUSR,R26
0035f9 93f0 0060 	STS  WDTCSR,R31
0035fb 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
0035fd e08d      	LDI  R24,(14-2)+1
0035fe e0a2      	LDI  R26,2
0035ff 27bb      	CLR  R27
                 __CLEAR_REG:
003600 93ed      	ST   X+,R30
003601 958a      	DEC  R24
003602 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
003603 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
003604 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
003605 e0a0      	LDI  R26,LOW(__SRAM_START)
003606 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
003607 93ed      	ST   X+,R30
003608 9701      	SBIW R24,1
003609 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00360a e8ea      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00360b e6fa      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
00360c e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00360d bfdb      	OUT  RAMPZ,R29
00360e 9187      	ELPM R24,Z+
00360f 9197      	ELPM R25,Z+
003610 9700      	SBIW R24,0
003611 f081      	BREQ __GLOBAL_INI_END
003612 91a7      	ELPM R26,Z+
003613 91b7      	ELPM R27,Z+
003614 9007      	ELPM R0,Z+
003615 9017      	ELPM R1,Z+
003616 91c7      	ELPM R28,Z+
003617 91d7      	ELPM R29,Z+
003618 01bf      	MOVW R22,R30
003619 b7db      	IN   R29,RAMPZ
00361a 01f0      	MOVW R30,R0
00361b bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
00361c 9007      	ELPM R0,Z+
00361d 920d      	ST   X+,R0
00361e 9701      	SBIW R24,1
00361f f7e1      	BRNE __GLOBAL_INI_LOOP
003620 01fb      	MOVW R30,R22
003621 cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
003622 e0e0      	LDI  R30,__GPIOR0_INIT
003623 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
003624 e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
003625 bfed      	OUT  SPL,R30
003626 e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
003627 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
003628 efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
003629 e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
00362a 940c 362c 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "oled.h"
                 ;#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;#include "smoothFilter.h"
                 ;#include "ad595.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;//#include <interrupt.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0034 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;
                 ;
                 ;//void SIG_OUTPUT_COMPARE1A( void ) __attribute__ ( (naked) );
                 ;//	void SIG_OUTPUT_COMPARE1A( void )
                 ;//	{
                 ;//		//vPortYieldFromTick();
                 ;//		//asm volatile ( "reti" );
                 ;//	}
                 ;
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 004D {
                 
                 	.CSEG
                 _main:
                 ; 0000 004E     int                     err,i=0,k=0,res,last_status;
                 ; 0000 004F 
                 ; 0000 0050     TIMER                   sensor_report_timer[5];
                 ; 0000 0051     TIMER                   status_report_timer;
                 ; 0000 0052     TIMER                   check_reset_timer;
                 ; 0000 0053     TIMER                   check_memory_timer;
                 ; 0000 0054     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 0055     TIMER                   readSensorTimer = 0;
                 ; 0000 0056     unsigned long int       timestamp_rd;
                 ; 0000 0057 
                 ; 0000 0058     char                    key_press = 0;
                 ; 0000 0059 
                 ; 0000 005A     float tmpA = 0.0;
                 ; 0000 005B     float tmpB = 0.0;
                 ; 0000 005C     float tmpC = 0.0;
                 ; 0000 005D 
                 ; 0000 005E     int ivADC = 0;
                 ; 0000 005F     float ivADCFloat = 0.0;
                 ; 0000 0060     float ivVolt = 0.0;
                 ; 0000 0061     float ivVoltPlusffset = 0.0;
                 ; 0000 0062     float ivTempC = 0.0;
                 ; 0000 0063     float ivVoltzero = 0.0;
                 ; 0000 0064     float ivZero = 1.68;
                 ; 0000 0065 
                 ; 0000 0066     long viADCbuffer = 0;
                 ; 0000 0067 
                 ; 0000 0068     float ivADCbuffFloat = 0.0;
                 ; 0000 0069     int j = 0;
                 ; 0000 006A 
                 ; 0000 006B     //int i = 0;
                 ; 0000 006C 
                 ; 0000 006D 
                 ; 0000 006E     //int viADCbuffer[];
                 ; 0000 006F 
                 ; 0000 0070     struct rtc_structure st_rtc;
                 ; 0000 0071 
                 ; 0000 0072     // -------- System Initialize ----------- //
                 ; 0000 0073     do{ err = initial_system();  }while(err);
00362c 97ef      	SBIW R28,63
00362d 97ec      	SBIW R28,60
00362e e38d      	LDI  R24,61
00362f e1aa      	LDI  R26,LOW(26)
003630 e0b0      	LDI  R27,HIGH(26)
003631 e0ea      	LDI  R30,LOW(_0x3*2)
003632 e0f2      	LDI  R31,HIGH(_0x3*2)
003633 e060      	LDI  R22,BYTE3(_0x3*2)
003634 940e e483 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+121
                 ;	last_status -> Y+119
                 ;	sensor_report_timer -> Y+99
                 ;	status_report_timer -> Y+95
                 ;	check_reset_timer -> Y+91
                 ;	check_memory_timer -> Y+87
                 ;	clear_duplicate_timer -> Y+83
                 ;	readSensorTimer -> Y+79
                 ;	timestamp_rd -> Y+75
                 ;	key_press -> Y+74
                 ;	tmpA -> Y+70
                 ;	tmpB -> Y+66
                 ;	tmpC -> Y+62
                 ;	ivADC -> Y+60
                 ;	ivADCFloat -> Y+56
                 ;	ivVolt -> Y+52
                 ;	ivVoltPlusffset -> Y+48
                 ;	ivTempC -> Y+44
                 ;	ivVoltzero -> Y+40
                 ;	ivZero -> Y+36
                 ;	viADCbuffer -> Y+32
                 ;	ivADCbuffFloat -> Y+28
                 ;	j -> Y+26
                 ;	st_rtc -> Y+0
003636 940e c260 	CALL SUBOPT_0x0
                 _0x5:
003638 940e 3ed5 	CALL _initial_system
00363a 018f      	MOVW R16,R30
00363b 2e00      	MOV  R0,R16
00363c 2a01      	OR   R0,R17
00363d f7d1      	BRNE _0x5
                 ; 0000 0074 
                 ; 0000 0075 
                 ; 0000 0076 //    DDRH=0xF8;
                 ; 0000 0077 //    PORTH =0x00;
                 ; 0000 0078 //    delay_ms(100);
                 ; 0000 0079 //
                 ; 0000 007A //    while(1){
                 ; 0000 007B //        #asm("wdr")
                 ; 0000 007C //        PORTH = 0xF0;
                 ; 0000 007D //        delay_ms(1000);
                 ; 0000 007E //        PORTH = 0x00;
                 ; 0000 007F //        delay_ms(1000);
                 ; 0000 0080 //    }
                 ; 0000 0081 
                 ; 0000 0082 
                 ; 0000 0083     //ETH_CONF;
                 ; 0000 0084 
                 ; 0000 0085     ETH_switchMode((unsigned char) MODE_NORM);
00363e e8a0      	LDI  R26,LOW(128)
00363f 940e 5ec5 	CALL _ETH_switchMode
                 ; 0000 0086     //ETH_NORM;
                 ; 0000 0087    // ETH_reset();
                 ; 0000 0088    // ETH_OFF;
                 ; 0000 0089    // delay_ms(2000);
                 ; 0000 008A    // ETH_ON;
                 ; 0000 008B 
                 ; 0000 008C     // -- alarm indicator initialize -- //
                 ; 0000 008D     buzzer_on = 0;          // -- buzzer off -- //
003641 98f3      	CBI  0x1E,3
                 ; 0000 008E     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
003642 e040     +LDI R20 , LOW ( 0 )
003643 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
003644 3042     +CPI R20 , LOW ( 2 )
003645 e0e0     +LDI R30 , HIGH ( 2 )
003646 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003647 f44c      	BRGE _0xB
                 ; 0000 008F     {
                 ; 0000 0090         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
003648 940e c265 	CALL SUBOPT_0x1
00364a 940e c26f 	CALL SUBOPT_0x2
00364c 940e 43a7 	CALL _IO_dout
                 ; 0000 0091     }
                +
00364e 5f4f     +SUBI R20 , LOW ( - 1 )
00364f 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003650 cff3      	RJMP _0xA
                 _0xB:
                 ; 0000 0092 
                 ; 0000 0093     initDataLogQueue();
003651 940e 879c 	CALL _initDataLogQueue
                 ; 0000 0094     initEventLogQueue();
003653 940e 8870 	CALL _initEventLogQueue
                 ; 0000 0095     ETH_initWaitQueue();
003655 940e 6aa8 	CALL _ETH_initWaitQueue
                 ; 0000 0096 
                 ; 0000 0097     printDebug("\r\n------ Initial Complete ------\r\n");
                +
003657 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
003658 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
003659 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
00365a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
00365b 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0098     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
00365d e6ef     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
00365e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
00365f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
003660 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
003661 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0099 
                 ; 0000 009A 
                 ; 0000 009B     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 009C 
                 ; 0000 009D     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
003663 e020     +LDI R18 , LOW ( 0 )
003664 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
003665 3025     +CPI R18 , LOW ( 5 )
003666 e0e0     +LDI R30 , HIGH ( 5 )
003667 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003668 f444      	BRGE _0xE
                 ; 0000 009E         if(operating_config.sensorEnable[i]){
003669 940e c27b 	CALL SUBOPT_0x4
00366b f011      	BREQ _0xF
                 ; 0000 009F             TIMER_setTimer(&sensor_report_timer[i], 5);
00366c 940e c282 	CALL SUBOPT_0x5
                 ; 0000 00A0         }
                 ; 0000 00A1     }
                 _0xF:
                +
00366e 5f2f     +SUBI R18 , LOW ( - 1 )
00366f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003670 cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 00A2 
                 ; 0000 00A3 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 00A4 //                 -90, -20, 50,
                 ; 0000 00A5 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 00A6 //
                 ; 0000 00A7 //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 00A8 //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 00A9 //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 00AA 
                 ; 0000 00AB     TIMER_setTimer(&status_report_timer, 7);
003671 940e c292 	CALL SUBOPT_0x6
                 ; 0000 00AC     TIMER_setTimer(&check_reset_timer, 60);
003673 940e c29d 	CALL SUBOPT_0x7
                 ; 0000 00AD     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
003675 940e c2a8 	CALL SUBOPT_0x8
                 ; 0000 00AE 
                 ; 0000 00AF 
                 ; 0000 00B0 //    while(1){
                 ; 0000 00B1 //        #asm("wdr")
                 ; 0000 00B2 //        viADCbuffer = 0;
                 ; 0000 00B3 //        for(j=0;j<30;j++){
                 ; 0000 00B4 //           viADCbuffer += read_adc(8);
                 ; 0000 00B5 //        }
                 ; 0000 00B6 //        //printDebug("ADC[0] Temp C : %f\r\n",iAD595ADCToTemp(viADCbuffer,30));
                 ; 0000 00B7 //        iAD595ADCToTemp(viADCbuffer,30);
                 ; 0000 00B8 //        delay_ms(500);
                 ; 0000 00B9 //    }
                 ; 0000 00BA 
                 ; 0000 00BB 
                 ; 0000 00BC     while(1){
                 _0x10:
                 ; 0000 00BD 
                 ; 0000 00BE         #asm("wdr")
003677 95a8      	wdr
                 ; 0000 00BF 
                 ; 0000 00C0         // Reset at 05.00 in every day
                 ; 0000 00C1         if(TIMER_checkTimerExceed(check_reset_timer))
                +
003678 01de     +MOVW R26 , R28
003679 5aa5     +SUBI R26 , LOW ( - 91 )
00367a 4fbf     +SBCI R27 , HIGH ( - 91 )
00367b 900d     +LD R0 , X +
00367c 901d     +LD R1 , X +
00367d 918d     +LD R24 , X +
00367e 919c     +LD R25 , X
00367f 01d0     +MOVW R26 , R0
                 	__GETD2SX 91
003680 940e 4201 	CALL _TIMER_checkTimerExceed
003682 9730      	SBIW R30,0
003683 f0c1      	BREQ _0x13
                 ; 0000 00C2         {
                 ; 0000 00C3             TIMER_setTimer(&check_reset_timer, 60);
003684 940e c29d 	CALL SUBOPT_0x7
                 ; 0000 00C4             RTC_getDateTime(&st_rtc, 7);
003686 940e c2b3 	CALL SUBOPT_0x9
003688 940e c2b7 	CALL SUBOPT_0xA
00368a 940e 48b4 	CALL _RTC_getDateTime
                 ; 0000 00C5 //            printRTC(st_rtc);
                 ; 0000 00C6             if(st_rtc.hour == 5) {
00368c 940e c2ba 	CALL SUBOPT_0xB
                +
00368e 30a5     +CPI R26 , LOW ( 0x5 )
00368f e0e0     +LDI R30 , HIGH ( 0x5 )
003690 07be     +CPC R27 , R30
003691 e0e0     +LDI R30 , BYTE3 ( 0x5 )
003692 078e     +CPC R24 , R30
003693 e0e0     +LDI R30 , BYTE4 ( 0x5 )
003694 079e     +CPC R25 , R30
                 	__CPD2N 0x5
003695 f431      	BRNE _0x14
                 ; 0000 00C7                 if(st_rtc.min == 0) {
003696 940e c2bf 	CALL SUBOPT_0xC
003698 940e e459 	CALL __CPD10
00369a f409      	BRNE _0x15
                 ; 0000 00C8                     while(1);
                 _0x16:
00369b cfff      	RJMP _0x16
                 ; 0000 00C9                 }
                 ; 0000 00CA             }
                 _0x15:
                 ; 0000 00CB         }
                 _0x14:
                 ; 0000 00CC 
                 ; 0000 00CD         // ----------- Received Debug Request ---------- //
                 ; 0000 00CE         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
00369c 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
00369e 30e0      	CPI  R30,0
00369f f011      	BREQ _0x19
0036a0 940e 9e7f 	CALL _debug_req
                 ; 0000 00CF 
                 ; 0000 00D0         // ----------- On Device Key Press ------------- //
                 ; 0000 00D1         key_press = IO_keyCheck();
                 _0x19:
0036a2 940e 43c5 	CALL _IO_keyCheck
                +
0036a4 01de     +MOVW R26 , R28
0036a5 5ba6     +SUBI R26 , LOW ( - 74 )
0036a6 4fbf     +SBCI R27 , HIGH ( - 74 )
0036a7 93ec     +ST X , R30
                 	__PUTB1SX 74
                 ; 0000 00D2         if(key_press){
0036a8 30e0      	CPI  R30,0
0036a9 f031      	BREQ _0x1A
                 ; 0000 00D3             MENU_processKey(key_press);
                +
0036aa 01de     +MOVW R26 , R28
0036ab 5ba6     +SUBI R26 , LOW ( - 74 )
0036ac 4fbf     +SBCI R27 , HIGH ( - 74 )
0036ad 91ac     +LD R26 , X
                 	__GETB2SX 74
0036ae 940e 8882 	CALL _MENU_processKey
                 ; 0000 00D4         }
                 ; 0000 00D5 
                 ; 0000 00D6         // ----------- Ethernet Communication ---------- //
                 ; 0000 00D7         ETH_receive();
                 _0x1A:
0036b0 940e 5d7b 	CALL _ETH_receive
                 ; 0000 00D8         ETH_retransmit();
0036b2 940e 57c1 	CALL _ETH_retransmit
                 ; 0000 00D9 
                 ; 0000 00DA         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00DB         if(is_properties_config_update){
0036b4 91e0 10f6 	LDS  R30,_is_properties_config_update
0036b6 30e0      	CPI  R30,0
0036b7 f011      	BREQ _0x1B
                 ; 0000 00DC             getPropertiesConfig(&properties_config);
0036b8 940e c2c4 	CALL SUBOPT_0xD
                 ; 0000 00DD             is_properties_config_update = 0;
                 ; 0000 00DE         }
                 ; 0000 00DF 
                 ; 0000 00E0         if(is_operating_config_update){
                 _0x1B:
0036ba 91e0 10f7 	LDS  R30,_is_operating_config_update
0036bc 30e0      	CPI  R30,0
0036bd f011      	BREQ _0x1C
                 ; 0000 00E1             getOperatingConfig(&operating_config);
0036be 940e c2cc 	CALL SUBOPT_0xE
                 ; 0000 00E2             is_operating_config_update = 0;
                 ; 0000 00E3         }
                 ; 0000 00E4 
                 ; 0000 00E5         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1C:
                +
0036c0 e020     +LDI R18 , LOW ( 0 )
0036c1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E:
                +
0036c2 3025     +CPI R18 , LOW ( 5 )
0036c3 e0e0     +LDI R30 , HIGH ( 5 )
0036c4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0036c5 f504      	BRGE _0x1F
                 ; 0000 00E6             if(is_sensor_config_update[i]){
0036c6 efa8      	LDI  R26,LOW(_is_sensor_config_update)
0036c7 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0036c8 940e c2d4 	CALL SUBOPT_0xF
0036ca f0c1      	BREQ _0x20
                 ; 0000 00E7                 err = getSensorConfig(i,&sensor_config[i]);
0036cb 933a      	ST   -Y,R19
0036cc 932a      	ST   -Y,R18
0036cd 940e c2d9 	CALL SUBOPT_0x10
0036cf 940e 4a6d 	CALL _getSensorConfig
0036d1 018f      	MOVW R16,R30
                 ; 0000 00E8                 if(err < 0){
0036d2 2311      	TST  R17
0036d3 f44a      	BRPL _0x21
                 ; 0000 00E9                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
0036d4 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
0036d5 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
0036d6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
0036d7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
0036d8 940e c2e2 	CALL SUBOPT_0x11
0036da 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 00EA                     continue;
0036dc c006      	RJMP _0x1D
                 ; 0000 00EB                 }
                 ; 0000 00EC                 is_sensor_config_update[i] = 0;
                 _0x21:
0036dd efa8      	LDI  R26,LOW(_is_sensor_config_update)
0036de e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0036df 940e c2ef 	CALL SUBOPT_0x13
                 ; 0000 00ED                 TIMER_setTimer(&sensor_report_timer[i], 5);
0036e1 940e c282 	CALL SUBOPT_0x5
                 ; 0000 00EE             }
                 ; 0000 00EF         }
                 _0x20:
                 _0x1D:
                +
0036e3 5f2f     +SUBI R18 , LOW ( - 1 )
0036e4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0036e5 cfdc      	RJMP _0x1E
                 _0x1F:
                 ; 0000 00F0 
                 ; 0000 00F1         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
0036e6 91e0 1112 	LDS  R30,_is_buzzer_config_update
0036e8 30e0      	CPI  R30,0
0036e9 f011      	BREQ _0x22
                 ; 0000 00F2             getBuzzerConfig(&buzz_config);
0036ea 940e c2f4 	CALL SUBOPT_0x14
                 ; 0000 00F3             is_buzzer_config_update = 0;
                 ; 0000 00F4         }
                 ; 0000 00F5 
                 ; 0000 00F6         for(i=0;i<USE_DIN;i++){
                 _0x22:
                +
0036ec e020     +LDI R18 , LOW ( 0 )
0036ed e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
0036ee 3022     +CPI R18 , LOW ( 2 )
0036ef e0e0     +LDI R30 , HIGH ( 2 )
0036f0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0036f1 f49c      	BRGE _0x25
                 ; 0000 00F7             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
0036f2 efad      	LDI  R26,LOW(_is_din_config_update)
0036f3 e1b0      	LDI  R27,HIGH(_is_din_config_update)
0036f4 940e c2d4 	CALL SUBOPT_0xF
0036f6 f059      	BREQ _0x26
                 ; 0000 00F8                 getAuxDinConfig(i,&din_config[i]);
0036f7 933a      	ST   -Y,R19
0036f8 932a      	ST   -Y,R18
0036f9 940e c2fc 	CALL SUBOPT_0x15
0036fb 01df      	MOVW R26,R30
0036fc 940e 4b55 	CALL _getAuxDinConfig
                 ; 0000 00F9                 is_din_config_update[i] = 0;
0036fe efad      	LDI  R26,LOW(_is_din_config_update)
0036ff e1b0      	LDI  R27,HIGH(_is_din_config_update)
003700 940e c2ef 	CALL SUBOPT_0x13
                 ; 0000 00FA             }
                 ; 0000 00FB         }
                 _0x26:
                +
003702 5f2f     +SUBI R18 , LOW ( - 1 )
003703 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003704 cfe9      	RJMP _0x24
                 _0x25:
                 ; 0000 00FC 
                 ; 0000 00FD         for(i=0;i<USE_DOUT;i++){
                +
003705 e020     +LDI R18 , LOW ( 0 )
003706 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x28:
                +
003707 3022     +CPI R18 , LOW ( 2 )
003708 e0e0     +LDI R30 , HIGH ( 2 )
003709 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00370a f49c      	BRGE _0x29
                 ; 0000 00FE             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
00370b e0ad      	LDI  R26,LOW(_is_dout_config_update)
00370c e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00370d 940e c2d4 	CALL SUBOPT_0xF
00370f f059      	BREQ _0x2A
                 ; 0000 00FF                 getAuxDoutConfig(i,&dout_config[i]);
003710 933a      	ST   -Y,R19
003711 932a      	ST   -Y,R18
                +
003712 e2a6     +LDI R26 , 38
003713 9fa2     +MUL R26 , R18
003714 01f0     +MOVW R30 , R0
003715 9fa3     +MUL R26 , R19
003716 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
003717 940e c304 	CALL SUBOPT_0x16
                 ; 0000 0100                 is_dout_config_update[i] = 0;
003719 940e c2ef 	CALL SUBOPT_0x13
                 ; 0000 0101             }
                 ; 0000 0102         }
                 _0x2A:
                +
00371b 5f2f     +SUBI R18 , LOW ( - 1 )
00371c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00371d cfe9      	RJMP _0x28
                 _0x29:
                 ; 0000 0103 
                 ; 0000 0104         if(is_status_config_update){
00371e 91e0 1113 	LDS  R30,_is_status_config_update
003720 30e0      	CPI  R30,0
003721 f021      	BREQ _0x2B
                 ; 0000 0105             getStatusReportConfig(&status_config);
003722 940e c30c 	CALL SUBOPT_0x17
                 ; 0000 0106             is_status_config_update = 0;
                 ; 0000 0107 
                 ; 0000 0108             TIMER_setTimer(&status_report_timer, 7);
003724 940e c292 	CALL SUBOPT_0x6
                 ; 0000 0109         }
                 ; 0000 010A 
                 ; 0000 010B         if(is_env_config_update){
                 _0x2B:
003726 91e0 1114 	LDS  R30,_is_env_config_update
003728 30e0      	CPI  R30,0
003729 f011      	BREQ _0x2C
                 ; 0000 010C             getEnvAlarmConfig(&env_config);
00372a 940e c314 	CALL SUBOPT_0x18
                 ; 0000 010D             is_env_config_update = 0;
                 ; 0000 010E         }
                 ; 0000 010F 
                 ; 0000 0110         /*bongkot test*/
                 ; 0000 0111 //        operating_config.deviceEnable = 1;
                 ; 0000 0112 //        operating_config.sensorEnable[0] = 1;
                 ; 0000 0113 //        operating_config.sensorEnable[1] = 0;
                 ; 0000 0114 //        operating_config.sensorEnable[2] = 0;
                 ; 0000 0115 //        operating_config.sensorEnable[3] = 0;
                 ; 0000 0116 //        operating_config.sensorEnable[4] = 0;
                 ; 0000 0117 
                 ; 0000 0118         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2C:
                +
00372c 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
00372e 30e0      	CPI  R30,0
00372f f411      	BRNE PC+3
003730 940c 393a 	JMP _0x2D
                 ; 0000 0119         {
                 ; 0000 011A             // -------------- Sensor Association -------------- //
                 ; 0000 011B             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003732 e020     +LDI R18 , LOW ( 0 )
003733 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2F:
                +
003734 3025     +CPI R18 , LOW ( 5 )
003735 e0e0     +LDI R30 , HIGH ( 5 )
003736 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003737 f014      	BRLT PC+3
003738 940c 377f 	JMP _0x30
                 ; 0000 011C             {
                 ; 0000 011D                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
00373a 940e c27b 	CALL SUBOPT_0x4
00373c f411      	BRNE PC+3
00373d 940c 377c 	JMP _0x31
                 ; 0000 011E                 {
                 ; 0000 011F                     //** test **//
                 ; 0000 0120 //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 0121 //                    {
                 ; 0000 0122 //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 0123 //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 0124 //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0125 //                    }
                 ; 0000 0126                     //-- test --//
                 ; 0000 0127 
                 ; 0000 0128                     //printDebug("<main> sensorRead\r\n");
                 ; 0000 0129                     err = sensorRead(i,&sensor[i]);
00373f 940e c31c 	CALL SUBOPT_0x19
003741 940e 6c5b 	CALL _sensorRead
003743 018f      	MOVW R16,R30
                 ; 0000 012A                     if(err < 0)                                 // . sensor value error . //
003744 2311      	TST  R17
003745 f1b2      	BRMI _0x2E
                 ; 0000 012B                     {
                 ; 0000 012C                         continue;
                 ; 0000 012D                     }
                 ; 0000 012E                     else                                        // . sensor value valid . //
                 ; 0000 012F                     {
                 ; 0000 0130                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 0131                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
003746 940e c327 	CALL SUBOPT_0x1A
003748 940e c32e 	CALL SUBOPT_0x1B
00374a 940e c333 	CALL SUBOPT_0x1C
00374c f179      	BREQ _0x34
                 ; 0000 0132                         {
                 ; 0000 0133                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
00374d 940e c327 	CALL SUBOPT_0x1A
00374f 940e c339 	CALL SUBOPT_0x1D
003751 940e c2d9 	CALL SUBOPT_0x10
003753 940e c33e 	CALL SUBOPT_0x1E
003755 940e c343 	CALL SUBOPT_0x1F
                 ; 0000 0134 
                 ; 0000 0135                             timestamp_rd = DS1672_read();
003757 940e 458b 	CALL _DS1672_read
                +
003759 01de     +MOVW R26 , R28
00375a 5ba5     +SUBI R26 , LOW ( - 75 )
00375b 4fbf     +SBCI R27 , HIGH ( - 75 )
00375c 93ed     +ST X + , R30
00375d 93fd     +ST X + , R31
00375e 936d     +ST X + , R22
00375f 937c     +ST X , R23
                 	__PUTD1SX 75
                 ; 0000 0136                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
003760 940e e400 	CALL __PUTPARD1
003762 940e c31c 	CALL SUBOPT_0x19
003764 940e e3d0 	CALL __GETD1P
003766 01df      	MOVW R26,R30
003767 01cb      	MOVW R24,R22
003768 940e 7528 	CALL _addDataQueue
00376a 018f      	MOVW R16,R30
                 ; 0000 0137                             if(err<0){
00376b 2311      	TST  R17
00376c f47a      	BRPL _0x35
                 ; 0000 0138                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
00376d ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
00376e e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
00376f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
003770 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
003771 940e c2e2 	CALL SUBOPT_0x11
                +
003773 e0a5     +LDI R26 , 5
003774 9fa2     +MUL R26 , R18
003775 01f0     +MOVW R30 , R0
003776 9fa3     +MUL R26 , R19
003777 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
003778 940e c347 	CALL SUBOPT_0x20
00377a 940e c34d 	CALL SUBOPT_0x21
                 ; 0000 0139                                 continue;   // -- continue other sensor
                 ; 0000 013A                             }
                 ; 0000 013B                         }
                 _0x35:
                 ; 0000 013C                         else{
                 _0x34:
                 ; 0000 013D                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 013E                         }
                 ; 0000 013F                     }
                 ; 0000 0140 
                 ; 0000 0141                 }
                 ; 0000 0142                 else                                            // .. sensor disable .. //
                 _0x31:
                 ; 0000 0143                 {
                 ; 0000 0144                 }
                 ; 0000 0145             } // -- iterate each probe -- //
                 _0x2E:
                +
00377c 5f2f     +SUBI R18 , LOW ( - 1 )
00377d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00377e cfb5      	RJMP _0x2F
                 _0x30:
                 ; 0000 0146 
                 ; 0000 0147             #asm("wdr")
00377f 95a8      	wdr
                 ; 0000 0148             // --------------- Status Management --------------- //
                 ; 0000 0149            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 014A             last_status = updateStatus();
003780 d22a      	RCALL _updateStatus
                +
003781 01de     +MOVW R26 , R28
003782 58a9     +SUBI R26 , LOW ( - 119 )
003783 4fbf     +SBCI R27 , HIGH ( - 119 )
003784 93ed     +ST X + , R30
003785 93fc     +ST X , R31
                 	__PUTW1SX 119
                 ; 0000 014B 
                 ; 0000 014C             // --------------- Alarm Management --------------- //
                 ; 0000 014D             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
003786 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
003788 30e0      	CPI  R30,0
003789 f411      	BRNE PC+3
00378a 940c 37ff 	JMP _0x38
                 ; 0000 014E             {
                 ; 0000 014F                 // -- check alarm all -- //
                 ; 0000 0150                 if(last_status < 0)                             // .. status update falied .. //
                +
00378c 01de     +MOVW R26 , R28
00378d 58a8     +SUBI R26 , LOW ( - 120 )
00378e 4fbf     +SBCI R27 , HIGH ( - 120 )
00378f 91ac     +LD R26 , X
                 	__GETB2SX 120
003790 23aa      	TST  R26
003791 f43a      	BRPL _0x39
                 ; 0000 0151                 {
                 ; 0000 0152                     printDebug("<main> updateStatus() failed\r\n");
                +
003792 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
003793 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
003794 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
003795 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
003796 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0153                 }
                 ; 0000 0154                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
003798 c062      	RJMP _0x3A
                 _0x39:
                +
003799 01de     +MOVW R26 , R28
00379a 58a9     +SUBI R26 , LOW ( - 119 )
00379b 4fbf     +SBCI R27 , HIGH ( - 119 )
00379c 900d     +LD R0 , X +
00379d 91bc     +LD R27 , X
00379e 2da0     +MOV R26 , R0
                 	__GETW2SX 119
00379f 940e e45d 	CALL __CPW02
0037a1 f424      	BRGE _0x3C
0037a2 91e0 148b 	LDS  R30,_muteMode
0037a4 30e0      	CPI  R30,0
0037a5 f009      	BREQ _0x3D
                 _0x3C:
0037a6 c044      	RJMP _0x3B
                 _0x3D:
                 ; 0000 0155                 {
                 ; 0000 0156                     // -- Buzzer Alarm -- //
                 ; 0000 0157                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
0037a7 91a0 133d 	LDS  R26,_buzz_config
0037a9 30a1      	CPI  R26,LOW(0x1)
0037aa f471      	BRNE _0x3E
                 ; 0000 0158                     {
                 ; 0000 0159                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 015A                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
0037ab e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
0037ac e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
0037ad 93fa      	ST   -Y,R31
0037ae 93ea      	ST   -Y,R30
                +
0037af 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
0037b1 27bb      	CLR  R27
0037b2 940e c354 	CALL SUBOPT_0x22
                 ; 0000 015B                         if(res){
0037b4 f011      	BREQ _0x3F
                 ; 0000 015C                             buzzer_on = 1;          // -- buzzer on -- //
0037b5 9af3      	SBI  0x1E,3
                 ; 0000 015D                         }
                 ; 0000 015E                         else{
0037b6 c001      	RJMP _0x42
                 _0x3F:
                 ; 0000 015F                             buzzer_on = 0;          // -- buzzer off -- //
0037b7 98f3      	CBI  0x1E,3
                 ; 0000 0160                         }
                 _0x42:
                 ; 0000 0161                     }
                 ; 0000 0162                     else                                        // -- buzzer disabled -- //
0037b8 c001      	RJMP _0x45
                 _0x3E:
                 ; 0000 0163                     {
                 ; 0000 0164                         buzzer_on = 0;                  // -- buzzer off -- //
0037b9 98f3      	CBI  0x1E,3
                 ; 0000 0165                     }
                 _0x45:
                 ; 0000 0166 
                 ; 0000 0167                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0168                     for(k=0;k<USE_DOUT;k++)
                +
0037ba e040     +LDI R20 , LOW ( 0 )
0037bb e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x49:
                +
0037bc 3042     +CPI R20 , LOW ( 2 )
0037bd e0e0     +LDI R30 , HIGH ( 2 )
0037be 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0037bf f554      	BRGE _0x4A
                 ; 0000 0169                     {
                 ; 0000 016A                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
0037c0 940e c35d 	CALL SUBOPT_0x23
0037c2 58e1      	SUBI R30,LOW(-_dout_config)
0037c3 4efd      	SBCI R31,HIGH(-_dout_config)
0037c4 81a0      	LD   R26,Z
0037c5 30a1      	CPI  R26,LOW(0x1)
0037c6 f4d1      	BRNE _0x4B
                 ; 0000 016B                         {
                 ; 0000 016C                             // -- check alarm Digital Output -- //
                 ; 0000 016D //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 016E                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
0037c7 940e c35d 	CALL SUBOPT_0x23
                +
0037c9 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
0037ca 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
0037cb 93fa      	ST   -Y,R31
0037cc 93ea      	ST   -Y,R30
0037cd 940e c35d 	CALL SUBOPT_0x23
                +
0037cf 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
0037d0 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
0037d1 81a0      	LD   R26,Z
0037d2 e0b0      	LDI  R27,0
0037d3 940e c354 	CALL SUBOPT_0x22
                 ; 0000 016F                             if(res){
0037d5 f021      	BREQ _0x4C
                 ; 0000 0170                                 IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
0037d6 940e c265 	CALL SUBOPT_0x1
0037d8 81a0      	LD   R26,Z
0037d9 c004      	RJMP _0x133
                 ; 0000 0171                             }
                 ; 0000 0172                             else{
                 _0x4C:
                 ; 0000 0173                                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
0037da 940e c265 	CALL SUBOPT_0x1
0037dc 940e c26f 	CALL SUBOPT_0x2
                 _0x133:
0037de 940e 43a7 	CALL _IO_dout
                 ; 0000 0174                             }
                 ; 0000 0175                         }
                 ; 0000 0176                         else                                                // -- digital output disabled -- //
0037e0 c006      	RJMP _0x4E
                 _0x4B:
                 ; 0000 0177                         {
                 ; 0000 0178                             IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
0037e1 940e c265 	CALL SUBOPT_0x1
0037e3 940e c26f 	CALL SUBOPT_0x2
0037e5 940e 43a7 	CALL _IO_dout
                 ; 0000 0179                         }
                 _0x4E:
                 ; 0000 017A                     }
                +
0037e7 5f4f     +SUBI R20 , LOW ( - 1 )
0037e8 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0037e9 cfd2      	RJMP _0x49
                 _0x4A:
                 ; 0000 017B                 }
                 ; 0000 017C                 else                                            // .. no event .. //
0037ea c010      	RJMP _0x4F
                 _0x3B:
                 ; 0000 017D                 {
                 ; 0000 017E                     // -- no alarm -- // ^_^
                 ; 0000 017F                     buzzer_on = 0;                  // -- buzzer off -- //
0037eb 98f3      	CBI  0x1E,3
                 ; 0000 0180                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
0037ec e040     +LDI R20 , LOW ( 0 )
0037ed e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x53:
                +
0037ee 3042     +CPI R20 , LOW ( 2 )
0037ef e0e0     +LDI R30 , HIGH ( 2 )
0037f0 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0037f1 f44c      	BRGE _0x54
                 ; 0000 0181                     {
                 ; 0000 0182                         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
0037f2 940e c265 	CALL SUBOPT_0x1
0037f4 940e c26f 	CALL SUBOPT_0x2
0037f6 940e 43a7 	CALL _IO_dout
                 ; 0000 0183                     }
                +
0037f8 5f4f     +SUBI R20 , LOW ( - 1 )
0037f9 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0037fa cff3      	RJMP _0x53
                 _0x54:
                 ; 0000 0184                 }
                 _0x4F:
                 _0x3A:
                 ; 0000 0185 
                 ; 0000 0186                 res = eventCapture();                           // -- send event packet if needed -- //
0037fb d224      	RCALL _eventCapture
0037fc 940e c363 	CALL SUBOPT_0x24
                 ; 0000 0187             }
                 ; 0000 0188             else                                                // .. alarm disable .. //
0037fe c010      	RJMP _0x55
                 _0x38:
                 ; 0000 0189             {
                 ; 0000 018A             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 018B                 // -- no alarm -- // ;-P
                 ; 0000 018C                 buzzer_on = 0;                      // -- buzzer off -- //
0037ff 98f3      	CBI  0x1E,3
                 ; 0000 018D                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
003800 e040     +LDI R20 , LOW ( 0 )
003801 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x59:
                +
003802 3042     +CPI R20 , LOW ( 2 )
003803 e0e0     +LDI R30 , HIGH ( 2 )
003804 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003805 f44c      	BRGE _0x5A
                 ; 0000 018E                 {
                 ; 0000 018F                     IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
003806 940e c265 	CALL SUBOPT_0x1
003808 940e c26f 	CALL SUBOPT_0x2
00380a 940e 43a7 	CALL _IO_dout
                 ; 0000 0190                 }
                +
00380c 5f4f     +SUBI R20 , LOW ( - 1 )
00380d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00380e cff3      	RJMP _0x59
                 _0x5A:
                 ; 0000 0191             }
                 _0x55:
                 ; 0000 0192 
                 ; 0000 0193             // -- check mute expired -- //
                 ; 0000 0194             if(muteMode){
00380f 91e0 148b 	LDS  R30,_muteMode
003811 30e0      	CPI  R30,0
003812 f059      	BREQ _0x5B
                 ; 0000 0195                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 0196                 if(ALARM_checkMuteExpired()){
003813 940e 7e1c 	CALL _ALARM_checkMuteExpired
003815 9730      	SBIW R30,0
003816 f039      	BREQ _0x5C
                 ; 0000 0197                     muteAlarmExpired = 0xFFFFFFFF;
003817 940e c369 	CALL SUBOPT_0x25
003819 940e c36e 	CALL SUBOPT_0x26
                 ; 0000 0198                     muteMode = 0;
00381b e0e0      	LDI  R30,LOW(0)
00381c 93e0 148b 	STS  _muteMode,R30
                 ; 0000 0199                 }
                 ; 0000 019A             }
                 _0x5C:
                 ; 0000 019B 
                 ; 0000 019C             // ---------------- Operating Mode ---------------- //
                 ; 0000 019D //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 019E 
                 ; 0000 019F             /*bongkot test*/
                 ; 0000 01A0             operating_config.mode == MODE_REALTIME;
                 _0x5B:
00381e 91a0 11b6 	LDS  R26,_operating_config
003820 e1e0      	LDI  R30,LOW(16)
003821 940e e2e7 	CALL __EQB12
                 ; 0000 01A1             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
003823 31a0      	CPI  R26,LOW(0x10)
003824 f011      	BREQ PC+3
003825 940c 3871 	JMP _0x5D
                 ; 0000 01A2             {
                 ; 0000 01A3                 if(!duplicateListClear)
003827 91e0 1425 	LDS  R30,_duplicateListClear
003829 30e0      	CPI  R30,0
00382a f4f1      	BRNE _0x5E
                 ; 0000 01A4                 {
                 ; 0000 01A5                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
00382b 01de     +MOVW R26 , R28
00382c 5aad     +SUBI R26 , LOW ( - 83 )
00382d 4fbf     +SBCI R27 , HIGH ( - 83 )
00382e 900d     +LD R0 , X +
00382f 901d     +LD R1 , X +
003830 918d     +LD R24 , X +
003831 919c     +LD R25 , X
003832 01d0     +MOVW R26 , R0
                 	__GETD2SX 83
003833 940e 4201 	CALL _TIMER_checkTimerExceed
003835 940e c363 	CALL SUBOPT_0x24
                 ; 0000 01A6                     if(res != 0){
                +
003837 01fe     +MOVW R30 , R28
003838 58e7     +SUBI R30 , LOW ( - 121 )
003839 4fff     +SBCI R31 , HIGH ( - 121 )
00383a 9001     +LD R0 , Z +
00383b 81f0     +LD R31 , Z
00383c 2de0     +MOV R30 , R0
                 	__GETW1SX 121
00383d 9730      	SBIW R30,0
00383e f039      	BREQ _0x5F
                 ; 0000 01A7                         TIMER_setTimer(&clear_duplicate_timer, 10);
00383f 01fe      	MOVW R30,R28
003840 5aed      	SUBI R30,LOW(-(83))
003841 4fff      	SBCI R31,HIGH(-(83))
003842 940e c377 	CALL SUBOPT_0x27
                 ; 0000 01A8                         ETH_clearDuplicateRequestCmd();
003844 940e 56d5 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 01A9                     }
                 ; 0000 01AA 
                 ; 0000 01AB                     sensorDataSave();
                 _0x5F:
003846 d449      	RCALL _sensorDataSave
                 ; 0000 01AC                     eventSave();
003847 d4cc      	RCALL _eventSave
                 ; 0000 01AD                 }
                 ; 0000 01AE                 else
003848 c027      	RJMP _0x60
                 _0x5E:
                 ; 0000 01AF                 {
                 ; 0000 01B0                     if(TIMER_checkTimerExceed(status_report_timer))
                +
003849 01de     +MOVW R26 , R28
00384a 5aa1     +SUBI R26 , LOW ( - 95 )
00384b 4fbf     +SBCI R27 , HIGH ( - 95 )
00384c 900d     +LD R0 , X +
00384d 901d     +LD R1 , X +
00384e 918d     +LD R24 , X +
00384f 919c     +LD R25 , X
003850 01d0     +MOVW R26 , R0
                 	__GETD2SX 95
003851 940e 4201 	CALL _TIMER_checkTimerExceed
003853 9730      	SBIW R30,0
003854 f071      	BREQ _0x61
                 ; 0000 01B1                     {
                 ; 0000 01B2                         TIMER_setTimer(&status_report_timer, status_config.intv);
003855 01fe      	MOVW R30,R28
003856 5ae1      	SUBI R30,LOW(-(95))
003857 4fff      	SBCI R31,HIGH(-(95))
003858 93fa      	ST   -Y,R31
003859 93ea      	ST   -Y,R30
                +
00385a 91a0 1363+LDS R26 , _status_config + ( 1 )
00385c 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
00385e 2788      	CLR  R24
00385f 2799      	CLR  R25
003860 940e 4217 	CALL _TIMER_setTimer
                 ; 0000 01B3 
                 ; 0000 01B4                         statusReport();
003862 d2e9      	RCALL _statusReport
                 ; 0000 01B5                     }
                 ; 0000 01B6 
                 ; 0000 01B7                     // -- report log only when no realtime data not ready -- //
                 ; 0000 01B8                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x61:
003863 d389      	RCALL _sensorDataReport
003864 9730      	SBIW R30,0
003865 f441      	BRNE _0x63
003866 d3da      	RCALL _eventReport
003867 9730      	SBIW R30,0
003868 f429      	BRNE _0x63
003869 940e c37f 	CALL SUBOPT_0x28
00386b 940e e465 	CALL __CPD02
00386d f008      	BRLO _0x64
                 _0x63:
00386e c001      	RJMP _0x62
                 _0x64:
                 ; 0000 01B9                     {
                 ; 0000 01BA                         logReport();
00386f d52c      	RCALL _logReport
                 ; 0000 01BB                     }
                 ; 0000 01BC                 }
                 _0x62:
                 _0x60:
                 ; 0000 01BD             }
                 ; 0000 01BE             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
003870 c011      	RJMP _0x65
                 _0x5D:
003871 91a0 11b6 	LDS  R26,_operating_config
003873 32a0      	CPI  R26,LOW(0x20)
003874 f419      	BRNE _0x66
                 ; 0000 01BF             {
                 ; 0000 01C0                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 01C1                 sensorDataSave();
003875 d41a      	RCALL _sensorDataSave
                 ; 0000 01C2               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 01C3                 eventSave();
003876 d49d      	RCALL _eventSave
                 ; 0000 01C4             }
                 ; 0000 01C5             else                                                // .. unknown mode .. //
003877 c00a      	RJMP _0x67
                 _0x66:
                 ; 0000 01C6             {
                 ; 0000 01C7                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
003878 e0e1     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
003879 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
00387a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
00387b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
00387c 940e e400 	CALL __PUTPARD1
00387e 91e0 11b6 	LDS  R30,_operating_config
003880 940e c388 	CALL SUBOPT_0x29
                 ; 0000 01C8             }
                 _0x67:
                 _0x65:
                 ; 0000 01C9 
                 ; 0000 01CA             #asm("wdr")
003882 95a8      	wdr
                 ; 0000 01CB             if(timer_1sec_flag)
003883 9bf2      	SBIS 0x1E,2
003884 c0b4      	RJMP _0x68
                 ; 0000 01CC             {
                 ; 0000 01CD               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 01CE                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
003885 01de     +MOVW R26 , R28
003886 5aa9     +SUBI R26 , LOW ( - 87 )
003887 4fbf     +SBCI R27 , HIGH ( - 87 )
003888 900d     +LD R0 , X +
003889 901d     +LD R1 , X +
00388a 918d     +LD R24 , X +
00388b 919c     +LD R25 , X
00388c 01d0     +MOVW R26 , R0
                 	__GETD2SX 87
00388d 940e 4201 	CALL _TIMER_checkTimerExceed
00388f 9730      	SBIW R30,0
003890 f021      	BREQ _0x6A
003891 91a0 1482 	LDS  R26,_memoryStatus
003893 30a1      	CPI  R26,LOW(0x1)
003894 f409      	BRNE _0x6B
                 _0x6A:
003895 c014      	RJMP _0x69
                 _0x6B:
                 ; 0000 01CF                 {
                 ; 0000 01D0               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 01D1                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
003896 940e c2a8 	CALL SUBOPT_0x8
                 ; 0000 01D2 
                 ; 0000 01D3                     res = SD_readMemoryRemain(&sdFreeSpace);
003898 e6ab      	LDI  R26,LOW(_sdFreeSpace)
003899 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
00389a 940e 81a6 	CALL _SD_readMemoryRemain
00389c 940e c363 	CALL SUBOPT_0x24
                 ; 0000 01D4                     if(res < 0){
                +
00389e 01de     +MOVW R26 , R28
00389f 58a6     +SUBI R26 , LOW ( - 122 )
0038a0 4fbf     +SBCI R27 , HIGH ( - 122 )
0038a1 91ac     +LD R26 , X
                 	__GETB2SX 122
0038a2 23aa      	TST  R26
0038a3 f432      	BRPL _0x6C
                 ; 0000 01D5                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
0038a4 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
0038a5 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
0038a6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
0038a7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
0038a8 940e c274 	CALL SUBOPT_0x3
                 ; 0000 01D6                     }
                 ; 0000 01D7                 }
                 _0x6C:
                 ; 0000 01D8 
                 ; 0000 01D9                 if(currentPage == P_MONITOR)
                 _0x69:
0038aa 91e0 14df 	LDS  R30,_currentPage
0038ac 30e0      	CPI  R30,0
0038ad f569      	BRNE _0x6D
                 ; 0000 01DA                 {
                 ; 0000 01DB               //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 01DC                     OLED_showSensorValue();
0038ae 940e 7ea8 	CALL _OLED_showSensorValue
                 ; 0000 01DD 
                 ; 0000 01DE                     for(i=0;i<2;i++){
                +
0038b0 e020     +LDI R18 , LOW ( 0 )
0038b1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
                +
0038b2 3022     +CPI R18 , LOW ( 2 )
0038b3 e0e0     +LDI R30 , HIGH ( 2 )
0038b4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0038b5 f454      	BRGE _0x70
                 ; 0000 01DF                         OLED_showInputStatus(i,dinStatus[i]);
0038b6 933a      	ST   -Y,R19
0038b7 932a      	ST   -Y,R18
0038b8 940e c38e 	CALL SUBOPT_0x2A
0038ba 91ac      	LD   R26,X
0038bb 940e 7f69 	CALL _OLED_showInputStatus
                 ; 0000 01E0                     }
                +
0038bd 5f2f     +SUBI R18 , LOW ( - 1 )
0038be 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0038bf cff2      	RJMP _0x6F
                 _0x70:
                 ; 0000 01E1 
                 ; 0000 01E2                     for(i=0;i<2;i++){
                +
0038c0 e020     +LDI R18 , LOW ( 0 )
0038c1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x72:
                +
0038c2 3022     +CPI R18 , LOW ( 2 )
0038c3 e0e0     +LDI R30 , HIGH ( 2 )
0038c4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0038c5 f464      	BRGE _0x73
                 ; 0000 01E3                         OLED_showOutputStatus(i,doutStatus[i]);
0038c6 933a      	ST   -Y,R19
0038c7 932a      	ST   -Y,R18
0038c8 e7ae      	LDI  R26,LOW(_doutStatus)
0038c9 e1b4      	LDI  R27,HIGH(_doutStatus)
0038ca 0fa2      	ADD  R26,R18
0038cb 1fb3      	ADC  R27,R19
0038cc 91ac      	LD   R26,X
0038cd 940e 7f8e 	CALL _OLED_showOutputStatus
                 ; 0000 01E4                     }
                +
0038cf 5f2f     +SUBI R18 , LOW ( - 1 )
0038d0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0038d1 cff0      	RJMP _0x72
                 _0x73:
                 ; 0000 01E5 
                 ; 0000 01E6                //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01E7                     OLED_showDateTime(properties_config.timeZone);
                +
0038d2 91a0 11b5+LDS R26 , _properties_config + ( 160 )
                 	__GETB2MN _properties_config,160
0038d4 e0b0      	LDI  R27,0
0038d5 fda7      	SBRC R26,7
0038d6 efbf      	SER  R27
0038d7 940e 7e84 	CALL _OLED_showDateTime
                 ; 0000 01E8 
                 ; 0000 01E9               //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01EA                     OLED_showAlarmStatus();
0038d9 940e 7fe7 	CALL _OLED_showAlarmStatus
                 ; 0000 01EB                 }
                 ; 0000 01EC 
                 ; 0000 01ED               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01EE                 switch(powerSrcStatus){
                 _0x6D:
0038db 91e0 147a 	LDS  R30,_powerSrcStatus
0038dd 940e c393 	CALL SUBOPT_0x2B
                 ; 0000 01EF                     case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
0038df f439      	BRNE _0x77
0038e0 e0e0      	LDI  R30,LOW(0)
0038e1 93ea      	ST   -Y,R30
0038e2 940e c396 	CALL SUBOPT_0x2C
0038e4 940e 7f26 	CALL _OLED_showPowerStatus
0038e6 c00a      	RJMP _0x76
                 ; 0000 01F0                     case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 _0x77:
0038e7 30e1      	CPI  R30,LOW(0x1)
0038e8 e0a0      	LDI  R26,HIGH(0x1)
0038e9 07fa      	CPC  R31,R26
0038ea f431      	BRNE _0x79
0038eb e0e1      	LDI  R30,LOW(1)
0038ec 93ea      	ST   -Y,R30
0038ed 940e c39b 	CALL SUBOPT_0x2D
0038ef 940e 7f26 	CALL _OLED_showPowerStatus
                 ; 0000 01F1                     default             :   break;
                 _0x79:
                 ; 0000 01F2                 }
                 _0x76:
                 ; 0000 01F3 
                 ; 0000 01F4             //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01F5                 switch(serverCommStatus){
0038f1 91e0 1480 	LDS  R30,_serverCommStatus
0038f3 940e c393 	CALL SUBOPT_0x2B
                 ; 0000 01F6                     case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
0038f5 f411      	BRNE _0x7D
0038f6 e0a2      	LDI  R26,LOW(2)
0038f7 c007      	RJMP _0x134
                 ; 0000 01F7                     case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 _0x7D:
0038f8 30e2      	CPI  R30,LOW(0x2)
0038f9 e0a0      	LDI  R26,HIGH(0x2)
0038fa 07fa      	CPC  R31,R26
0038fb f411      	BRNE _0x7F
0038fc e0a1      	LDI  R26,LOW(1)
0038fd c001      	RJMP _0x134
                 ; 0000 01F8                     default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 _0x7F:
0038fe e0a0      	LDI  R26,LOW(0)
                 _0x134:
0038ff 940e 7fbf 	CALL _OLED_showServerCommStatus
                 ; 0000 01F9                 }
                 ; 0000 01FA 
                 ; 0000 01FB             //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01FC                 switch(lanStatus){
003901 91e0 1481 	LDS  R30,_lanStatus
003903 940e c393 	CALL SUBOPT_0x2B
                 ; 0000 01FD                     case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
003905 f421      	BRNE _0x83
003906 e0a1      	LDI  R26,LOW(1)
003907 940e 7fc9 	CALL _OLED_showLanStatus
003909 c007      	RJMP _0x82
                 ; 0000 01FE                     case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 _0x83:
00390a 30e1      	CPI  R30,LOW(0x1)
00390b e0a0      	LDI  R26,HIGH(0x1)
00390c 07fa      	CPC  R31,R26
00390d f419      	BRNE _0x85
00390e e0a0      	LDI  R26,LOW(0)
00390f 940e 7fc9 	CALL _OLED_showLanStatus
                 ; 0000 01FF                     default                     :   break;
                 _0x85:
                 ; 0000 0200                 }
                 _0x82:
                 ; 0000 0201 
                 ; 0000 0202             //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 0203                 if(muteMode){
003911 91e0 148b 	LDS  R30,_muteMode
003913 30e0      	CPI  R30,0
003914 f011      	BREQ _0x86
                 ; 0000 0204                     OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
003915 e0a2      	LDI  R26,LOW(2)
003916 c007      	RJMP _0x135
                 ; 0000 0205                 }
                 ; 0000 0206                 else if(buzz_config.enable == 0x01){
                 _0x86:
003917 91a0 133d 	LDS  R26,_buzz_config
003919 30a1      	CPI  R26,LOW(0x1)
00391a f411      	BRNE _0x88
                 ; 0000 0207                     OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
00391b e0a0      	LDI  R26,LOW(0)
00391c c001      	RJMP _0x135
                 ; 0000 0208                 }
                 ; 0000 0209                 else{
                 _0x88:
                 ; 0000 020A                     OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
00391d e0a1      	LDI  R26,LOW(1)
                 _0x135:
00391e 940e 7fd3 	CALL _OLED_showBuzzerStatus
                 ; 0000 020B                 }
                 ; 0000 020C 
                 ; 0000 020D            //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 020E                 switch(memoryStatus){
003920 91e0 1482 	LDS  R30,_memoryStatus
003922 940e c393 	CALL SUBOPT_0x2B
                 ; 0000 020F                     case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
003924 f421      	BRNE _0x8D
003925 e0a0      	LDI  R26,LOW(0)
003926 940e 7fdd 	CALL _OLED_showMemoryStatus
003928 c00f      	RJMP _0x8C
                 ; 0000 0210                     case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 _0x8D:
003929 30e1      	CPI  R30,LOW(0x1)
00392a e0a0      	LDI  R26,HIGH(0x1)
00392b 07fa      	CPC  R31,R26
00392c f421      	BRNE _0x8E
00392d e0a1      	LDI  R26,LOW(1)
00392e 940e 7fdd 	CALL _OLED_showMemoryStatus
003930 c007      	RJMP _0x8C
                 ; 0000 0211                     case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 _0x8E:
003931 30e2      	CPI  R30,LOW(0x2)
003932 e0a0      	LDI  R26,HIGH(0x2)
003933 07fa      	CPC  R31,R26
003934 f419      	BRNE _0x90
003935 e0a2      	LDI  R26,LOW(2)
003936 940e 7fdd 	CALL _OLED_showMemoryStatus
                 ; 0000 0212                     default                 :   break;
                 _0x90:
                 ; 0000 0213                 }
                 _0x8C:
                 ; 0000 0214 
                 ; 0000 0215                 timer_1sec_flag = 0;
003938 98f2      	CBI  0x1E,2
                 ; 0000 0216             }
                 ; 0000 0217         } // -- device enable -- //
                 _0x68:
                 ; 0000 0218         else                                                    // ----- device disable ----- //
003939 c06e      	RJMP _0x93
                 _0x2D:
                 ; 0000 0219         {
                 ; 0000 021A             // -- no alarm -- // ;-P
                 ; 0000 021B             buzzer_on = 0;                      // -- buzzer off -- //
00393a 98f3      	CBI  0x1E,3
                 ; 0000 021C             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
00393b e040     +LDI R20 , LOW ( 0 )
00393c e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x97:
                +
00393d 3042     +CPI R20 , LOW ( 2 )
00393e e0e0     +LDI R30 , HIGH ( 2 )
00393f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003940 f44c      	BRGE _0x98
                 ; 0000 021D             {
                 ; 0000 021E                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
003941 940e c265 	CALL SUBOPT_0x1
003943 940e c26f 	CALL SUBOPT_0x2
003945 940e 43a7 	CALL _IO_dout
                 ; 0000 021F             }
                +
003947 5f4f     +SUBI R20 , LOW ( - 1 )
003948 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003949 cff3      	RJMP _0x97
                 _0x98:
                 ; 0000 0220 
                 ; 0000 0221 
                 ; 0000 0222             if(TEMP_SEL == TEMP_TYPE_K){
00394a 940e c3a4 	CALL SUBOPT_0x2E
00394c f5e9      	BRNE _0x99
                 ; 0000 0223                 if(hwCalId == 9){
00394d 91a0 10f4 	LDS  R26,_hwCalId
00394f 91b0 10f5 	LDS  R27,_hwCalId+1
003951 9719      	SBIW R26,9
003952 f439      	BRNE _0x9A
                 ; 0000 0224                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                +
003953 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
003954 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
003955 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
003956 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
003957 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0225                     //printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                 ; 0000 0226                 }
                 ; 0000 0227                 else if(SENSOR_CONNECT){
003959 c02d      	RJMP _0x9B
                 _0x9A:
00395a 940e c3af 	CALL SUBOPT_0x2F
00395c 9730      	SBIW R30,0
00395d f0f9      	BREQ _0x9C
                 ; 0000 0228                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : %f                     \r",hwCalId,(adcData[hwCalId]*ADC_CONV_FAC*100));
                +
00395e e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 331 ) )
00395f e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 331 ) )
003960 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 331 ) )
003961 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 331 ) )
                 	__POINTD1FN _0x0,331
003962 940e c3b6 	CALL SUBOPT_0x30
003964 2766      	CLR  R22
003965 2777      	CLR  R23
003966 940e c3b6 	CALL SUBOPT_0x30
003968 940e c3bd 	CALL SUBOPT_0x31
00396a 940e c32e 	CALL SUBOPT_0x1B
00396c 937f      	PUSH R23
00396d 936f      	PUSH R22
00396e 93ff      	PUSH R31
00396f 93ef      	PUSH R30
003970 940e c3c2 	CALL SUBOPT_0x32
003972 91af      	POP  R26
003973 91bf      	POP  R27
003974 918f      	POP  R24
003975 919f      	POP  R25
003976 940e e1a1 	CALL __MULF12
003978 940e c3cf 	CALL SUBOPT_0x33
00397a 940e c34d 	CALL SUBOPT_0x21
                 ; 0000 0229                 }
                 ; 0000 022A                 else{
00397c c00a      	RJMP _0x9D
                 _0x9C:
                 ; 0000 022B                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : disconnected           \r",hwCalId);
                +
00397d edee     +LDI R30 , LOW ( 2 * _0x0 + ( 402 ) )
00397e e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 402 ) )
00397f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 402 ) )
003980 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 402 ) )
                 	__POINTD1FN _0x0,402
003981 940e c3b6 	CALL SUBOPT_0x30
003983 940e c3d6 	CALL SUBOPT_0x34
003985 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 022C                 }
                 _0x9D:
                 _0x9B:
                 ; 0000 022D                 delay_ms(200);
003987 940e c3db 	CALL SUBOPT_0x35
                 ; 0000 022E             }
                 ; 0000 022F             else if(TEMP_SEL == TEMP_TMEC){
003989 c01e      	RJMP _0x9E
                 _0x99:
00398a 940e c3a4 	CALL SUBOPT_0x2E
00398c 30e1      	CPI  R30,LOW(0x1)
00398d f429      	BRNE _0x9F
                 ; 0000 0230                     printDebug("<main> [Device disable] [TMEC]                                       \r");
                +
00398e e2e5     +LDI R30 , LOW ( 2 * _0x0 + ( 473 ) )
00398f e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 473 ) )
003990 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 473 ) )
003991 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 473 ) )
                 	__POINTD1FN _0x0,473
003992 c011      	RJMP _0x136
                 ; 0000 0231             }
                 ; 0000 0232             else if(TEMP_SEL == TEMP_PT100){
                 _0x9F:
003993 940e c3a4 	CALL SUBOPT_0x2E
003995 30e2      	CPI  R30,LOW(0x2)
003996 f429      	BRNE _0xA1
                 ; 0000 0233                     printDebug("<main> [Device disable] [PT100]                                      \r");
                +
003997 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 544 ) )
003998 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 544 ) )
003999 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 544 ) )
00399a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 544 ) )
                 	__POINTD1FN _0x0,544
00399b c008      	RJMP _0x136
                 ; 0000 0234             }
                 ; 0000 0235             else if(TEMP_SEL == TEMP_RESERVED){
                 _0xA1:
00399c 940e c3a4 	CALL SUBOPT_0x2E
00399e 30e3      	CPI  R30,LOW(0x3)
00399f f441      	BRNE _0xA3
                 ; 0000 0236                     printDebug("<main> [Device disable] [RESERVED]                                   \r");
                +
0039a0 ebe3     +LDI R30 , LOW ( 2 * _0x0 + ( 615 ) )
0039a1 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 615 ) )
0039a2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 615 ) )
0039a3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 615 ) )
                 	__POINTD1FN _0x0,615
                 _0x136:
0039a4 940e e400 	CALL __PUTPARD1
0039a6 940e c3df 	CALL SUBOPT_0x36
                 ; 0000 0237             }
                 ; 0000 0238         }
                 _0xA3:
                 _0x9E:
                 _0x93:
                 ; 0000 0239 
                 ; 0000 023A         #asm("wdr")
0039a8 95a8      	wdr
                 ; 0000 023B     }
0039a9 cccd      	RJMP _0x10
                 ; 0000 023C 
                 ; 0000 023D }
                 _0xA4:
0039aa cfff      	RJMP _0xA4
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 0245 {
                 _updateStatus:
                 ; 0000 0246     int                 res=0, i=0, err=0;
                 ; 0000 0247     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0248 
                 ; 0000 0249     // --------------- Update Sensor's Event --------------- //
                 ; 0000 024A     for(i=0;i<MAX_SENS_CHANNEL;i++)
0039ab 940e c3e4 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
0039ad e020     +LDI R18 , LOW ( 0 )
0039ae e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA7:
                +
0039af 3025     +CPI R18 , LOW ( 5 )
0039b0 e0e0     +LDI R30 , HIGH ( 5 )
0039b1 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0039b2 f4dc      	BRGE _0xA8
                 ; 0000 024B     {
                 ; 0000 024C         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
0039b3 940e c27b 	CALL SUBOPT_0x4
0039b5 f0a9      	BREQ _0xA9
                 ; 0000 024D         {
                 ; 0000 024E             // ----------- Update Probe Status ------------------------- //
                 ; 0000 024F             err =   updateSensorStatus(i);
0039b6 01d9      	MOVW R26,R18
0039b7 940e 7669 	CALL _updateSensorStatus
0039b9 01af      	MOVW R20,R30
                 ; 0000 0250             if(err >= 0){
0039ba 2355      	TST  R21
0039bb f07a      	BRMI _0xAA
                 ; 0000 0251                 res |=  err;
                +
0039bc 2b04     +OR R16 , R20
0039bd 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0252                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
0039be 940e c3e9 	CALL SUBOPT_0x38
0039c0 f019      	BREQ _0xAC
0039c1 2e04      	MOV  R0,R20
0039c2 2a05      	OR   R0,R21
0039c3 f009      	BREQ _0xAD
                 _0xAC:
0039c4 c006      	RJMP _0xAB
                 _0xAD:
                 ; 0000 0253                 {
                 ; 0000 0254                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 0255                     err =   updateDataStatus(i);
0039c5 01d9      	MOVW R26,R18
0039c6 940e 769c 	CALL _updateDataStatus
0039c8 01af      	MOVW R20,R30
                 ; 0000 0256                     res |=  err;
                +
0039c9 2b04     +OR R16 , R20
0039ca 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0257                 }
                 ; 0000 0258             }
                 _0xAB:
                 ; 0000 0259         }
                 _0xAA:
                 ; 0000 025A     }
                 _0xA9:
                +
0039cb 5f2f     +SUBI R18 , LOW ( - 1 )
0039cc 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0039cd cfe1      	RJMP _0xA7
                 _0xA8:
                 ; 0000 025B 
                 ; 0000 025C     // --- Update Battery Status --- //
                 ; 0000 025D     err =   updateBatteryStatus();
0039ce 940e 7588 	CALL _updateBatteryStatus
0039d0 01af      	MOVW R20,R30
                 ; 0000 025E     res |=  err;
                +
0039d1 2b04     +OR R16 , R20
0039d2 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 025F     // --- Update Digital Input Status --- //
                 ; 0000 0260     err =   updateDinStatus();
0039d3 940e 7785 	CALL _updateDinStatus
0039d5 01af      	MOVW R20,R30
                 ; 0000 0261     res |=  err;
                +
0039d6 2b04     +OR R16 , R20
0039d7 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0262     // --- Update Digital Output Status --- //
                 ; 0000 0263     err =   updateDoutStatus();
0039d8 940e 7801 	CALL _updateDoutStatus
0039da 01af      	MOVW R20,R30
                 ; 0000 0264     res |=  err;
                +
0039db 2b04     +OR R16 , R20
0039dc 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0265     // --- Update Analog Input Status --- //
                 ; 0000 0266     // --- Update Communication Status --- //
                 ; 0000 0267     err =   updateCommStatus();
0039dd 940e 75e5 	CALL _updateCommStatus
0039df 01af      	MOVW R20,R30
                 ; 0000 0268     if(err){
0039e0 2e04      	MOV  R0,R20
0039e1 2a05      	OR   R0,R21
0039e2 f189      	BREQ _0xAE
                 ; 0000 0269 
                 ; 0000 026A         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
0039e3 940e c3f3 	CALL SUBOPT_0x39
0039e5 940e c3fc 	CALL SUBOPT_0x3A
0039e7 f029      	BREQ _0xB0
0039e8 940e c3f3 	CALL SUBOPT_0x39
0039ea 940e e465 	CALL __CPD02
0039ec f471      	BRNE _0xAF
                 _0xB0:
                 ; 0000 026B             TIMER_setTimer(&ETH_rst_timer,15);
0039ed eee0      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
0039ee e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
0039ef 940e c404 	CALL SUBOPT_0x3B
                 ; 0000 026C             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
0039f1 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 686 ) )
0039f2 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 686 ) )
0039f3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 686 ) )
0039f4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 686 ) )
                 	__POINTD1FN _0x0,686
0039f5 940e c40c 	CALL SUBOPT_0x3C
0039f7 940e c40c 	CALL SUBOPT_0x3C
0039f9 940e c34d 	CALL SUBOPT_0x21
                 ; 0000 026D         }
                 ; 0000 026E 
                 ; 0000 026F         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0xAF:
0039fb 940e c3f3 	CALL SUBOPT_0x39
0039fd 940e 4201 	CALL _TIMER_checkTimerExceed
0039ff 30e1      	CPI  R30,LOW(0x1)
003a00 e0a0      	LDI  R26,HIGH(0x1)
003a01 07fa      	CPC  R31,R26
003a02 f489      	BRNE _0xB2
                 ; 0000 0270             ETH_NORM;
003a03 91e0 0102 	LDS  R30,258
003a05 77ef      	ANDI R30,0x7F
003a06 93e0 0102 	STS  258,R30
                 ; 0000 0271             ETH_reset();
003a08 940e 6151 	CALL _ETH_reset
                 ; 0000 0272             ETH_rst_timer = 0xFFFFFFFF;
003a0a 940e c369 	CALL SUBOPT_0x25
003a0c 93e0 14e0 	STS  _ETH_rst_timer_S0000001000,R30
003a0e 93f0 14e1 	STS  _ETH_rst_timer_S0000001000+1,R31
003a10 9360 14e2 	STS  _ETH_rst_timer_S0000001000+2,R22
003a12 9370 14e3 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 0273         }
                 ; 0000 0274     }
                 _0xB2:
                 ; 0000 0275     res |=  err;
                 _0xAE:
                +
003a14 2b04     +OR R16 , R20
003a15 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0276     // --- Update Memory Card Status --- //
                 ; 0000 0277     err =   updateMemoryStatus();
003a16 940e 7649 	CALL _updateMemoryStatus
003a18 01af      	MOVW R20,R30
                 ; 0000 0278     res |=  err;
                +
003a19 2b04     +OR R16 , R20
003a1a 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0279 
                 ; 0000 027A     return res;
003a1b 01f8      	MOVW R30,R16
003a1c 940e e47c 	CALL __LOADLOCR6
003a1e 9626      	ADIW R28,6
003a1f 9508      	RET
                 ; 0000 027B }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 027E {
                 _eventCapture:
                 ; 0000 027F     int                 res=0, i=0, err=0;
                 ; 0000 0280     unsigned long int   timestamp_rd;
                 ; 0000 0281     unsigned char       statusCode;
                 ; 0000 0282 
                 ; 0000 0283     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 0284     err =   checkSendMIPAlarm(&statusCode);
003a20 9725      	SBIW R28,5
003a21 940e c3e4 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
003a23 01de      	MOVW R26,R28
003a24 9616      	ADIW R26,6
003a25 940e 7be1 	CALL _checkSendMIPAlarm
003a27 940e c421 	CALL SUBOPT_0x3D
                 ; 0000 0285     res |=  err;
                 ; 0000 0286     if(err){
003a29 f0c1      	BREQ _0xB3
                 ; 0000 0287         timestamp_rd    = DS1672_read();
003a2a 940e c427 	CALL SUBOPT_0x3E
                 ; 0000 0288         if(statusCode)
003a2c f029      	BREQ _0xB4
                 ; 0000 0289         {
                 ; 0000 028A             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
003a2d e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 738 ) )
003a2e e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 738 ) )
003a2f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 738 ) )
003a30 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD1FN _0x0,738
003a31 c004      	RJMP _0x137
                 ; 0000 028B             //printOLED("AL12%1d",i+1);
                 ; 0000 028C         }
                 ; 0000 028D         else
                 _0xB4:
                 ; 0000 028E         {
                 ; 0000 028F             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
003a32 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 788 ) )
003a33 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 788 ) )
003a34 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 788 ) )
003a35 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 788 ) )
                 	__POINTD1FN _0x0,788
                 _0x137:
003a36 940e e400 	CALL __PUTPARD1
003a38 940e c3df 	CALL SUBOPT_0x36
                 ; 0000 0290             //printOLED("AL02%1d",i+1);
                 ; 0000 0291         }
                 ; 0000 0292         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
003a3a 940e c430 	CALL SUBOPT_0x3F
003a3c e1e0      	LDI  R30,LOW(16)
003a3d 940e c437 	CALL SUBOPT_0x40
                 ; 0000 0293         if(err < 0){
003a3f f412      	BRPL _0xB6
                 ; 0000 0294             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a40 940e c43e 	CALL SUBOPT_0x41
                 ; 0000 0295         }
                 ; 0000 0296     }
                 _0xB6:
                 ; 0000 0297 
                 ; 0000 0298     /*
                 ; 0000 0299     // -- Analog Input Event -- //
                 ; 0000 029A     // -- reserved -- //
                 ; 0000 029B     */
                 ; 0000 029C     // --------------- Check for Power Down Event --------------- //
                 ; 0000 029D     err =   checkSendPowerAlarm(&statusCode);
                 _0xB3:
003a42 01de      	MOVW R26,R28
003a43 9616      	ADIW R26,6
003a44 940e 7bf6 	CALL _checkSendPowerAlarm
003a46 940e c421 	CALL SUBOPT_0x3D
                 ; 0000 029E     res |=  err;
                 ; 0000 029F     if(err){
003a48 f0c1      	BREQ _0xB7
                 ; 0000 02A0         timestamp_rd    = DS1672_read();
003a49 940e c427 	CALL SUBOPT_0x3E
                 ; 0000 02A1         if(statusCode)
003a4b f029      	BREQ _0xB8
                 ; 0000 02A2         {
                 ; 0000 02A3             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
003a4c ece5     +LDI R30 , LOW ( 2 * _0x0 + ( 889 ) )
003a4d e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 889 ) )
003a4e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 889 ) )
003a4f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 889 ) )
                 	__POINTD1FN _0x0,889
003a50 c004      	RJMP _0x138
                 ; 0000 02A4             //printOLED("AL12%1d",i+1);
                 ; 0000 02A5         }
                 ; 0000 02A6         else
                 _0xB8:
                 ; 0000 02A7         {
                 ; 0000 02A8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
003a51 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 942 ) )
003a52 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 942 ) )
003a53 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 942 ) )
003a54 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 942 ) )
                 	__POINTD1FN _0x0,942
                 _0x138:
003a55 940e e400 	CALL __PUTPARD1
003a57 940e c3df 	CALL SUBOPT_0x36
                 ; 0000 02A9             //printOLED("AL02%1d",i+1);
                 ; 0000 02AA         }
                 ; 0000 02AB         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
003a59 940e c430 	CALL SUBOPT_0x3F
003a5b e5e0      	LDI  R30,LOW(80)
003a5c 940e c437 	CALL SUBOPT_0x40
                 ; 0000 02AC         if(err < 0){
003a5e f412      	BRPL _0xBA
                 ; 0000 02AD             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a5f 940e c43e 	CALL SUBOPT_0x41
                 ; 0000 02AE         }
                 ; 0000 02AF     }
                 _0xBA:
                 ; 0000 02B0 
                 ; 0000 02B1     // --------------- Check for Battery Event --------------- //
                 ; 0000 02B2     err =   checkSendBatteryAlarm(&statusCode);
                 _0xB7:
003a61 01de      	MOVW R26,R28
003a62 9616      	ADIW R26,6
003a63 940e 7c3e 	CALL _checkSendBatteryAlarm
003a65 940e c421 	CALL SUBOPT_0x3D
                 ; 0000 02B3     res |=  err;
                 ; 0000 02B4     if(err){
003a67 f0c1      	BREQ _0xBB
                 ; 0000 02B5         timestamp_rd    = DS1672_read();
003a68 940e c427 	CALL SUBOPT_0x3E
                 ; 0000 02B6         if(statusCode)
003a6a f029      	BREQ _0xBC
                 ; 0000 02B7         {
                 ; 0000 02B8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
003a6b e2ed     +LDI R30 , LOW ( 2 * _0x0 + ( 993 ) )
003a6c e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 993 ) )
003a6d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 993 ) )
003a6e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 993 ) )
                 	__POINTD1FN _0x0,993
003a6f c004      	RJMP _0x139
                 ; 0000 02B9             //printOLED("AL12%1d",i+1);
                 ; 0000 02BA         }
                 ; 0000 02BB         else
                 _0xBC:
                 ; 0000 02BC         {
                 ; 0000 02BD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
003a70 e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1042 ) )
003a71 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1042 ) )
003a72 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1042 ) )
003a73 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1042 ) )
                 	__POINTD1FN _0x0,1042
                 _0x139:
003a74 940e e400 	CALL __PUTPARD1
003a76 940e c3df 	CALL SUBOPT_0x36
                 ; 0000 02BE             //printOLED("AL02%1d",i+1);
                 ; 0000 02BF         }
                 ; 0000 02C0         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
003a78 940e c430 	CALL SUBOPT_0x3F
003a7a e5e1      	LDI  R30,LOW(81)
003a7b 940e c437 	CALL SUBOPT_0x40
                 ; 0000 02C1         if(err < 0){
003a7d f412      	BRPL _0xBE
                 ; 0000 02C2             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a7e 940e c43e 	CALL SUBOPT_0x41
                 ; 0000 02C3         }
                 ; 0000 02C4     }
                 _0xBE:
                 ; 0000 02C5 
                 ; 0000 02C6     // --------------- Check for Memory Event --------------- //
                 ; 0000 02C7     err =   checkSendMemoryAlarm(&statusCode);
                 _0xBB:
003a80 01de      	MOVW R26,R28
003a81 9616      	ADIW R26,6
003a82 940e 7c97 	CALL _checkSendMemoryAlarm
003a84 940e c421 	CALL SUBOPT_0x3D
                 ; 0000 02C8     res |=  err;
                 ; 0000 02C9     if(err){
003a86 f131      	BREQ _0xBF
                 ; 0000 02CA         timestamp_rd    = DS1672_read();
003a87 940e 458b 	CALL _DS1672_read
                +
003a89 83ef     +STD Y + 7 , R30
003a8a 87f8     +STD Y + 7 + 1 , R31
003a8b 8769     +STD Y + 7 + 2 , R22
003a8c 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 02CB         if(statusCode == ES_LOWMEMORY)
003a8d 81ae      	LDD  R26,Y+6
003a8e 30a1      	CPI  R26,LOW(0x1)
003a8f f429      	BRNE _0xC0
                 ; 0000 02CC         {
                 ; 0000 02CD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
003a90 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1090 ) )
003a91 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1090 ) )
003a92 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1090 ) )
003a93 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1090 ) )
                 	__POINTD1FN _0x0,1090
003a94 c00c      	RJMP _0x13A
                 ; 0000 02CE             //printOLED("AL12%1d",i+1);
                 ; 0000 02CF         }
                 ; 0000 02D0         else if(statusCode == ES_MEMORYERROR)
                 _0xC0:
003a95 81ae      	LDD  R26,Y+6
003a96 30a2      	CPI  R26,LOW(0x2)
003a97 f429      	BRNE _0xC2
                 ; 0000 02D1         {
                 ; 0000 02D2             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
003a98 ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 1138 ) )
003a99 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1138 ) )
003a9a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1138 ) )
003a9b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1138 ) )
                 	__POINTD1FN _0x0,1138
003a9c c004      	RJMP _0x13A
                 ; 0000 02D3             //printOLED("AL12%1d",i+1);
                 ; 0000 02D4         }
                 ; 0000 02D5         else
                 _0xC2:
                 ; 0000 02D6         {
                 ; 0000 02D7             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
003a9d efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1188 ) )
003a9e e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1188 ) )
003a9f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1188 ) )
003aa0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1188 ) )
                 	__POINTD1FN _0x0,1188
                 _0x13A:
003aa1 940e e400 	CALL __PUTPARD1
003aa3 940e c3df 	CALL SUBOPT_0x36
                 ; 0000 02D8             //printOLED("AL02%1d",i+1);
                 ; 0000 02D9         }
                 ; 0000 02DA         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
003aa5 940e c430 	CALL SUBOPT_0x3F
003aa7 e7e0      	LDI  R30,LOW(112)
003aa8 940e c437 	CALL SUBOPT_0x40
                 ; 0000 02DB         if(err < 0){
003aaa f412      	BRPL _0xC4
                 ; 0000 02DC             printDebug("<eventCapture> addEventQueue() failed\r\n");
003aab 940e c43e 	CALL SUBOPT_0x41
                 ; 0000 02DD         }
                 ; 0000 02DE     }
                 _0xC4:
                 ; 0000 02DF 
                 ; 0000 02E0     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 02E1     for(i=0;i<USE_DIN;i++)
                 _0xBF:
                +
003aad e020     +LDI R18 , LOW ( 0 )
003aae e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC6:
                +
003aaf 3022     +CPI R18 , LOW ( 2 )
003ab0 e0e0     +LDI R30 , HIGH ( 2 )
003ab1 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003ab2 f544      	BRGE _0xC7
                 ; 0000 02E2     {
                 ; 0000 02E3         if(din_config[i].channelEnable)
003ab3 940e c2fc 	CALL SUBOPT_0x15
003ab5 81e0      	LD   R30,Z
003ab6 30e0      	CPI  R30,0
003ab7 f101      	BREQ _0xC8
                 ; 0000 02E4         {
                 ; 0000 02E5             err =   checkSendDinAlarm(i,&statusCode);
003ab8 940e c443 	CALL SUBOPT_0x42
003aba 940e 7ce5 	CALL _checkSendDinAlarm
003abc 940e c421 	CALL SUBOPT_0x3D
                 ; 0000 02E6             res |=  err;
                 ; 0000 02E7             if(err){
003abe f0c9      	BREQ _0xC9
                 ; 0000 02E8                 timestamp_rd    = DS1672_read();
003abf 940e c427 	CALL SUBOPT_0x3E
                 ; 0000 02E9                 if(statusCode)
003ac1 f029      	BREQ _0xCA
                 ; 0000 02EA                 {
                 ; 0000 02EB                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
003ac2 e1ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1235 ) )
003ac3 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1235 ) )
003ac4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1235 ) )
003ac5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1235 ) )
                 	__POINTD1FN _0x0,1235
003ac6 c004      	RJMP _0x13B
                 ; 0000 02EC                     //printOLED("AL12%1d",i+1);
                 ; 0000 02ED                 }
                 ; 0000 02EE                 else
                 _0xCA:
                 ; 0000 02EF                 {
                 ; 0000 02F0                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
003ac7 e5e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1286 ) )
003ac8 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1286 ) )
003ac9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1286 ) )
003aca e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1286 ) )
                 	__POINTD1FN _0x0,1286
                 _0x13B:
003acb 940e e400 	CALL __PUTPARD1
003acd 940e c448 	CALL SUBOPT_0x43
                 ; 0000 02F1                     //printOLED("AL02%1d",i+1);
                 ; 0000 02F2                 }
                 ; 0000 02F3                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
003acf 940e c430 	CALL SUBOPT_0x3F
003ad1 2fe2      	MOV  R30,R18
003ad2 6ce0      	ORI  R30,LOW(0xC0)
003ad3 940e c437 	CALL SUBOPT_0x40
                 ; 0000 02F4                 if(err < 0){
003ad5 f412      	BRPL _0xCC
                 ; 0000 02F5                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003ad6 940e c43e 	CALL SUBOPT_0x41
                 ; 0000 02F6                 }
                 ; 0000 02F7             }
                 _0xCC:
                 ; 0000 02F8         }// -- din channel Enable -- //
                 _0xC9:
                 ; 0000 02F9     }// -- for loop -- //
                 _0xC8:
                +
003ad8 5f2f     +SUBI R18 , LOW ( - 1 )
003ad9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003ada cfd4      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02FA 
                 ; 0000 02FB     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02FC     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003adb e020     +LDI R18 , LOW ( 0 )
003adc e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCE:
                +
003add 3025     +CPI R18 , LOW ( 5 )
003ade e0e0     +LDI R30 , HIGH ( 5 )
003adf 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003ae0 f014      	BRLT PC+3
003ae1 940c 3b47 	JMP _0xCF
                 ; 0000 02FD     {
                 ; 0000 02FE         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003ae3 940e c27b 	CALL SUBOPT_0x4
003ae5 f411      	BRNE PC+3
003ae6 940c 3b44 	JMP _0xD0
                 ; 0000 02FF         {
                 ; 0000 0300             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 0301             err =   checkSendSensorAlarm(i,&statusCode);
003ae8 940e c443 	CALL SUBOPT_0x42
003aea 940e 7d43 	CALL _checkSendSensorAlarm
003aec 940e c421 	CALL SUBOPT_0x3D
                 ; 0000 0302             res |=  err;
                 ; 0000 0303             if(err){
003aee f131      	BREQ _0xD1
                 ; 0000 0304                 timestamp_rd    = DS1672_read();
003aef 940e c427 	CALL SUBOPT_0x3E
                 ; 0000 0305                 if(statusCode)
003af1 f059      	BREQ _0xD2
                 ; 0000 0306                 {
                 ; 0000 0307                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
003af2 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1338 ) )
003af3 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1338 ) )
003af4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1338 ) )
003af5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1338 ) )
                 	__POINTD1FN _0x0,1338
003af6 940e c44f 	CALL SUBOPT_0x44
                 ; 0000 0308                     printOLED("AL12%1d",i+1);
                +
003af8 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003af9 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003afa e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003afb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003afc c00a      	RJMP _0x13C
                 ; 0000 0309                 }
                 ; 0000 030A                 else
                 _0xD2:
                 ; 0000 030B                 {
                 ; 0000 030C                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
003afd ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 1403 ) )
003afe e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1403 ) )
003aff e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1403 ) )
003b00 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1403 ) )
                 	__POINTD1FN _0x0,1403
003b01 940e c44f 	CALL SUBOPT_0x44
                 ; 0000 030D                     printOLED("AL02%1d",i+1);
                +
003b03 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003b04 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003b05 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003b06 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13C:
003b07 940e e400 	CALL __PUTPARD1
003b09 940e c452 	CALL SUBOPT_0x45
                 ; 0000 030E                 }
                 ; 0000 030F 
                 ; 0000 0310                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
003b0b 940e c430 	CALL SUBOPT_0x3F
003b0d 2fe2      	MOV  R30,R18
003b0e 6fe0      	ORI  R30,LOW(0xF0)
003b0f 940e c437 	CALL SUBOPT_0x40
                 ; 0000 0311                 if(err < 0){
003b11 f412      	BRPL _0xD4
                 ; 0000 0312                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003b12 940e c43e 	CALL SUBOPT_0x41
                 ; 0000 0313                 }
                 ; 0000 0314             }// -- check sensor alarm -- //
                 _0xD4:
                 ; 0000 0315             else
003b14 c02f      	RJMP _0xD5
                 _0xD1:
                 ; 0000 0316             {
                 ; 0000 0317                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
003b15 940e c3e9 	CALL SUBOPT_0x38
003b17 f161      	BREQ _0xD6
                 ; 0000 0318                 {
                 ; 0000 0319                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 031A                     err =   checkSendDataAlarm(i,&statusCode);
003b18 940e c443 	CALL SUBOPT_0x42
003b1a 940e 7da7 	CALL _checkSendDataAlarm
003b1c 940e c421 	CALL SUBOPT_0x3D
                 ; 0000 031B                     res |=  err;
                 ; 0000 031C                     if(err){
003b1e f129      	BREQ _0xD7
                 ; 0000 031D                         timestamp_rd    = DS1672_read();
003b1f 940e c427 	CALL SUBOPT_0x3E
                 ; 0000 031E                         if(statusCode)
003b21 f059      	BREQ _0xD8
                 ; 0000 031F                         {
                 ; 0000 0320                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
003b22 e0e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1465 ) )
003b23 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1465 ) )
003b24 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1465 ) )
003b25 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1465 ) )
                 	__POINTD1FN _0x0,1465
003b26 940e c44f 	CALL SUBOPT_0x44
                 ; 0000 0321                             printOLED("AL12%1d",i+1);
                +
003b28 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003b29 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003b2a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003b2b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003b2c c00a      	RJMP _0x13D
                 ; 0000 0322                         }
                 ; 0000 0323                         else
                 _0xD8:
                 ; 0000 0324                         {
                 ; 0000 0325                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
003b2d e4e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1529 ) )
003b2e e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1529 ) )
003b2f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1529 ) )
003b30 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1529 ) )
                 	__POINTD1FN _0x0,1529
003b31 940e c44f 	CALL SUBOPT_0x44
                 ; 0000 0326                             printOLED("AL02%1d",i+1);
                +
003b33 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003b34 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003b35 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003b36 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13D:
003b37 940e e400 	CALL __PUTPARD1
003b39 940e c452 	CALL SUBOPT_0x45
                 ; 0000 0327                         }
                 ; 0000 0328                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003b3b 940e c430 	CALL SUBOPT_0x3F
003b3d 2fe2      	MOV  R30,R18
003b3e 6ee0      	ORI  R30,LOW(0xE0)
003b3f 940e c437 	CALL SUBOPT_0x40
                 ; 0000 0329                         if(err < 0){
003b41 f412      	BRPL _0xDA
                 ; 0000 032A                             printDebug("<eventCapture> addEventQueue() failed\r\n");
003b42 940e c43e 	CALL SUBOPT_0x41
                 ; 0000 032B                         }
                 ; 0000 032C                     }
                 _0xDA:
                 ; 0000 032D                 }// -- sensor.alarmEnable -- //
                 _0xD7:
                 ; 0000 032E             }// -- check data alarm -- //
                 _0xD6:
                 _0xD5:
                 ; 0000 032F         }// -- sensor Enable -- //
                 ; 0000 0330     }// -- for loop -- //
                 _0xD0:
                +
003b44 5f2f     +SUBI R18 , LOW ( - 1 )
003b45 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003b46 cf96      	RJMP _0xCE
                 _0xCF:
                 ; 0000 0331 
                 ; 0000 0332 
                 ; 0000 0333     return res;
003b47 01f8      	MOVW R30,R16
003b48 940e e47c 	CALL __LOADLOCR6
003b4a 962b      	ADIW R28,11
003b4b 9508      	RET
                 ; 0000 0334 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 033C {
                 _statusReport:
                 ; 0000 033D     int                     res = 0;
                 ; 0000 033E     unsigned long int       timestamp_rd;
                 ; 0000 033F     unsigned char           *param;
                 ; 0000 0340     int                     paramLen = 0;
                 ; 0000 0341 
                 ; 0000 0342     unsigned short          deviceState;
                 ; 0000 0343 
                 ; 0000 0344     switch (status_config.accm)
003b4c 9726      	SBIW R28,6
003b4d 940e c45d 	CALL SUBOPT_0x46
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
003b4f e040     +LDI R20 , LOW ( 0 )
003b50 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
003b51 91e0 1362 	LDS  R30,_status_config
003b53 940e c462 	CALL SUBOPT_0x47
                 ; 0000 0345     {
                 ; 0000 0346         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
003b55 f449      	BRNE _0xDE
                +
003b56 e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1590 ) )
003b57 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1590 ) )
003b58 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1590 ) )
003b59 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1590 ) )
                 	__POINTD1FN _0x0,1590
003b5a 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0347                                     return -1;
003b5c efef      	LDI  R30,LOW(65535)
003b5d efff      	LDI  R31,HIGH(65535)
003b5e c08a      	RJMP _0x20E009C
                 ; 0000 0348         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xDE:
003b5f 32e0      	CPI  R30,LOW(0x20)
003b60 e0a0      	LDI  R26,HIGH(0x20)
003b61 07fa      	CPC  R31,R26
003b62 f449      	BRNE _0xDF
                +
003b63 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 1644 ) )
003b64 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1644 ) )
003b65 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1644 ) )
003b66 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1644 ) )
                 	__POINTD1FN _0x0,1644
003b67 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0349                                     return -1;
003b69 efef      	LDI  R30,LOW(65535)
003b6a efff      	LDI  R31,HIGH(65535)
003b6b c07d      	RJMP _0x20E009C
                 ; 0000 034A         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xDF:
003b6c 33e0      	CPI  R30,LOW(0x30)
003b6d e0a0      	LDI  R26,HIGH(0x30)
003b6e 07fa      	CPC  R31,R26
003b6f f011      	BREQ PC+3
003b70 940c 3bc2 	JMP _0xE3
003b72 940e c467 	CALL SUBOPT_0x48
003b74 940e a753 	CALL _malloc
003b76 019f      	MOVW R18,R30
                 ; 0000 034B                                     if(param == NULL){
003b77 2e02      	MOV  R0,R18
003b78 2a03      	OR   R0,R19
003b79 f449      	BRNE _0xE1
                 ; 0000 034C                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
003b7a efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1700 ) )
003b7b e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1700 ) )
003b7c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1700 ) )
003b7d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1700 ) )
                 	__POINTD1FN _0x0,1700
003b7e 940e c46a 	CALL SUBOPT_0x49
                 ; 0000 034D                                         return -1;
003b80 efef      	LDI  R30,LOW(65535)
003b81 efff      	LDI  R31,HIGH(65535)
003b82 c066      	RJMP _0x20E009C
                 ; 0000 034E                                     }
                 ; 0000 034F 
                 ; 0000 0350                                     res = getDeviceState(&deviceState);
                 _0xE1:
003b83 01de      	MOVW R26,R28
003b84 9616      	ADIW R26,6
003b85 940e 7816 	CALL _getDeviceState
003b87 018f      	MOVW R16,R30
                 ; 0000 0351                                     if(res<0){
003b88 2311      	TST  R17
003b89 f452      	BRPL _0xE2
                 ; 0000 0352                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
003b8a e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1742 ) )
003b8b e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1742 ) )
003b8c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1742 ) )
003b8d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1742 ) )
                 	__POINTD1FN _0x0,1742
003b8e 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0353                                         free ( param );
003b90 01d9      	MOVW R26,R18
003b91 940e c472 	CALL SUBOPT_0x4A
                 ; 0000 0354                                         return -1;
003b93 c055      	RJMP _0x20E009C
                 ; 0000 0355                                     }
                 ; 0000 0356 
                 ; 0000 0357                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xE2:
003b94 940e c477 	CALL SUBOPT_0x4B
003b96 81ef      	LDD  R30,Y+7
003b97 70f0      	ANDI R31,HIGH(0x0)
003b98 93ec      	ST   X,R30
                 ; 0000 0358                                     param[paramLen++] = (deviceState & 0x00FF);
003b99 940e c477 	CALL SUBOPT_0x4B
003b9b 81ee      	LDD  R30,Y+6
003b9c 93ec      	ST   X,R30
                 ; 0000 0359                                     param[paramLen++] = powerSrcStatus;
003b9d 940e c47e 	CALL SUBOPT_0x4C
003b9f 91a0 147a 	LDS  R26,_powerSrcStatus
003ba1 83a0      	STD  Z+0,R26
                 ; 0000 035A 
                 ; 0000 035B 
                 ; 0000 035C                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
003ba2 01fa      	MOVW R30,R20
003ba3 0fe2      	ADD  R30,R18
003ba4 1ff3      	ADC  R31,R19
003ba5 93fa      	ST   -Y,R31
003ba6 93ea      	ST   -Y,R30
003ba7 e8e3      	LDI  R30,LOW(_batteryVolt)
003ba8 e1f4      	LDI  R31,HIGH(_batteryVolt)
003ba9 940e c484 	CALL SUBOPT_0x4D
                 ; 0000 035D                                     paramLen         += sizeof(batteryVolt);
                +
003bab 5f4c     +SUBI R20 , LOW ( - 4 )
003bac 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 035E 
                 ; 0000 035F                                     param[paramLen++] = dinStatus[0];
003bad 940e c47e 	CALL SUBOPT_0x4C
003baf 91a0 147c 	LDS  R26,_dinStatus
003bb1 83a0      	STD  Z+0,R26
                 ; 0000 0360                                     param[paramLen++] = dinStatus[1];
003bb2 940e c47e 	CALL SUBOPT_0x4C
                +
003bb4 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
003bb6 83a0      	STD  Z+0,R26
                 ; 0000 0361                                     param[paramLen++] = doutStatus[0];
003bb7 940e c47e 	CALL SUBOPT_0x4C
003bb9 91a0 147e 	LDS  R26,_doutStatus
003bbb 83a0      	STD  Z+0,R26
                 ; 0000 0362                                     param[paramLen++] = doutStatus[1];
003bbc 940e c47e 	CALL SUBOPT_0x4C
                +
003bbe 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
003bc0 83a0      	STD  Z+0,R26
                 ; 0000 0363 
                 ; 0000 0364                                     break;
003bc1 c00d      	RJMP _0xDD
                 ; 0000 0365         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xE3:
                +
003bc2 e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1783 ) )
003bc3 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1783 ) )
003bc4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1783 ) )
003bc5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1783 ) )
                 	__POINTD1FN _0x0,1783
003bc6 940e e400 	CALL __PUTPARD1
003bc8 91e0 1362 	LDS  R30,_status_config
003bca 940e c388 	CALL SUBOPT_0x29
                 ; 0000 0366                                     return -1;
003bcc efef      	LDI  R30,LOW(65535)
003bcd efff      	LDI  R31,HIGH(65535)
003bce c01a      	RJMP _0x20E009C
                 ; 0000 0367     }
                 _0xDD:
                 ; 0000 0368 
                 ; 0000 0369     timestamp_rd = DS1672_read();
003bcf 940e c48a 	CALL SUBOPT_0x4E
                 ; 0000 036A 
                 ; 0000 036B     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
003bd1 940e c491 	CALL SUBOPT_0x4F
003bd3 940e e400 	CALL __PUTPARD1
003bd5 91e0 1362 	LDS  R30,_status_config
003bd7 93ea      	ST   -Y,R30
003bd8 933a      	ST   -Y,R19
003bd9 932a      	ST   -Y,R18
003bda 01da      	MOVW R26,R20
003bdb 940e 545a 	CALL _ETH_sendStatusReportCmd
003bdd 018f      	MOVW R16,R30
                 ; 0000 036C     if(res < 0)
003bde 2311      	TST  R17
003bdf f432      	BRPL _0xE4
                 ; 0000 036D     {
                 ; 0000 036E         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
003be0 e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 1836 ) )
003be1 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1836 ) )
003be2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1836 ) )
003be3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1836 ) )
                 	__POINTD1FN _0x0,1836
003be4 940e c274 	CALL SUBOPT_0x3
                 ; 0000 036F     }
                 ; 0000 0370 
                 ; 0000 0371     free ( param );
                 _0xE4:
003be6 01d9      	MOVW R26,R18
003be7 940e a76e 	CALL _free
                 ; 0000 0372 }
                 _0x20E009C:
003be9 940e e47c 	CALL __LOADLOCR6
003beb 962c      	ADIW R28,12
003bec 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 0375 {
                 _sensorDataReport:
                 ; 0000 0376     int                     count = 0;
                 ; 0000 0377     int                     res;
                 ; 0000 0378     unsigned long int       timestamp;
                 ; 0000 0379     unsigned int            channel;
                 ; 0000 037A     float                   value;
                 ; 0000 037B 
                 ; 0000 037C     // -- for debug -- //
                 ; 0000 037D     //struct rtc_structure    dt;
                 ; 0000 037E     // --------------- //
                 ; 0000 037F     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 0380 
                 ; 0000 0381     while (count < MAX_DATA_QUEUE)
003bed 9728      	SBIW R28,8
003bee 940e c45d 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xE5:
                +
003bf0 300a     +CPI R16 , LOW ( 10 )
003bf1 e0e0     +LDI R30 , HIGH ( 10 )
003bf2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
003bf3 f014      	BRLT PC+3
003bf4 940c 3c3c 	JMP _0xE7
                 ; 0000 0382     {
                 ; 0000 0383         res = fetchDataQueue(&timestamp, &channel, &value);
003bf6 01fe      	MOVW R30,R28
003bf7 963a      	ADIW R30,10
003bf8 93fa      	ST   -Y,R31
003bf9 93ea      	ST   -Y,R30
003bfa b7ed      	IN   R30,SPL
003bfb b7fe      	IN   R31,SPH
003bfc 9731      	SBIW R30,1
003bfd 93fa      	ST   -Y,R31
003bfe 93ea      	ST   -Y,R30
003bff 935f      	PUSH R21
003c00 934f      	PUSH R20
003c01 01de      	MOVW R26,R28
003c02 961a      	ADIW R26,10
003c03 940e 7557 	CALL _fetchDataQueue
003c05 914f      	POP  R20
003c06 915f      	POP  R21
003c07 019f      	MOVW R18,R30
                 ; 0000 0384         if(res < 0)
003c08 2333      	TST  R19
003c09 f192      	BRMI _0xE7
                 ; 0000 0385         {
                 ; 0000 0386             break;
                 ; 0000 0387         }
                 ; 0000 0388         else
                 ; 0000 0389         {
                 ; 0000 038A             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
003c0a eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 1886 ) )
003c0b e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1886 ) )
003c0c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1886 ) )
003c0d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1886 ) )
                 	__POINTD1FN _0x0,1886
003c0e 940e c496 	CALL SUBOPT_0x50
003c10 01fa      	MOVW R30,R20
003c11 940e c3d6 	CALL SUBOPT_0x34
003c13 940e c49f 	CALL SUBOPT_0x51
                 ; 0000 038B             /*
                 ; 0000 038C             binary_to_date(timestamp, &dt);
                 ; 0000 038D             printRTC(dt);
                 ; 0000 038E             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 038F             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 0390             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 0391             */
                 ; 0000 0392 
                 ; 0000 0393             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003c15 940e c4aa 	CALL SUBOPT_0x52
003c17 940e e465 	CALL __CPD02
003c19 f039      	BREQ _0xEB
003c1a 940e c4af 	CALL SUBOPT_0x53
003c1c f021      	BREQ _0xEB
                +
003c1d 3045     +CPI R20 , LOW ( 5 )
003c1e e0e0     +LDI R30 , HIGH ( 5 )
003c1f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
003c20 f038      	BRLO _0xEA
                 _0xEB:
                 ; 0000 0394             {
                 ; 0000 0395                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003c21 ecef     +LDI R30 , LOW ( 2 * _0x0 + ( 1923 ) )
003c22 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1923 ) )
003c23 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1923 ) )
003c24 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1923 ) )
                 	__POINTD1FN _0x0,1923
003c25 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0396                 continue;
003c27 cfc8      	RJMP _0xE5
                 ; 0000 0397             }
                 ; 0000 0398 
                 ; 0000 0399 
                 ; 0000 039A             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xEA:
003c28 e0e0      	LDI  R30,LOW(0)
003c29 940e c4b1 	CALL SUBOPT_0x54
003c2b 935a      	ST   -Y,R21
003c2c 934a      	ST   -Y,R20
003c2d 940e c4b9 	CALL SUBOPT_0x55
003c2f 019f      	MOVW R18,R30
                 ; 0000 039B             if(res < 0)
003c30 2333      	TST  R19
003c31 f43a      	BRPL _0xED
                 ; 0000 039C             {
                 ; 0000 039D                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
003c32 e0ed     +LDI R30 , LOW ( 2 * _0x0 + ( 1985 ) )
003c33 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 1985 ) )
003c34 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1985 ) )
003c35 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1985 ) )
                 	__POINTD1FN _0x0,1985
003c36 940e c274 	CALL SUBOPT_0x3
                 ; 0000 039E                 // --- Keep in Log --- //
                 ; 0000 039F                 continue;
003c38 cfb7      	RJMP _0xE5
                 ; 0000 03A0             }
                 ; 0000 03A1             count++;
                 _0xED:
                +
003c39 5f0f     +SUBI R16 , LOW ( - 1 )
003c3a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03A2         }
                 ; 0000 03A3 
                 ; 0000 03A4     }
003c3b cfb4      	RJMP _0xE5
                 _0xE7:
                 ; 0000 03A5 
                 ; 0000 03A6     return count;
003c3c 01f8      	MOVW R30,R16
003c3d 940e e47c 	CALL __LOADLOCR6
003c3f 962e      	ADIW R28,14
003c40 9508      	RET
                 ; 0000 03A7 }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 03AA {
                 _eventReport:
                 ; 0000 03AB     int                     count = 0;
                 ; 0000 03AC     int                     res;
                 ; 0000 03AD     unsigned long int       timestamp;
                 ; 0000 03AE     unsigned char           eventID;
                 ; 0000 03AF     unsigned char           eventStatus;
                 ; 0000 03B0 
                 ; 0000 03B1     // -- for debug -- //
                 ; 0000 03B2     //struct rtc_structure    dt;
                 ; 0000 03B3     // --------------- //
                 ; 0000 03B4     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 03B5 
                 ; 0000 03B6     while (count < MAX_EVENT_QUEUE)
003c41 9724      	SBIW R28,4
003c42 940e c45d 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xEE:
                +
003c44 3104     +CPI R16 , LOW ( 20 )
003c45 e0e0     +LDI R30 , HIGH ( 20 )
003c46 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003c47 f014      	BRLT PC+3
003c48 940c 3c8b 	JMP _0xF0
                 ; 0000 03B7     {
                 ; 0000 03B8         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003c4a 940e c4bf 	CALL SUBOPT_0x56
003c4c b7ed      	IN   R30,SPL
003c4d b7fe      	IN   R31,SPH
003c4e 93fa      	ST   -Y,R31
003c4f 93ea      	ST   -Y,R30
003c50 935f      	PUSH R21
003c51 b7ad      	IN   R26,SPL
003c52 b7be      	IN   R27,SPH
003c53 934f      	PUSH R20
003c54 940e 78bb 	CALL _fetchEventQueue
003c56 914f      	POP  R20
003c57 915f      	POP  R21
003c58 019f      	MOVW R18,R30
                 ; 0000 03B9         if(res < 0)
003c59 2333      	TST  R19
003c5a f182      	BRMI _0xF0
                 ; 0000 03BA         {
                 ; 0000 03BB             break;
                 ; 0000 03BC         }
                 ; 0000 03BD         else
                 ; 0000 03BE         {
                 ; 0000 03BF 
                 ; 0000 03C0             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003c5b e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2037 ) )
003c5c e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2037 ) )
003c5d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2037 ) )
003c5e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2037 ) )
                 	__POINTD1FN _0x0,2037
003c5f 940e c4c4 	CALL SUBOPT_0x57
003c61 940e e400 	CALL __PUTPARD1
003c63 940e c4cb 	CALL SUBOPT_0x58
                 ; 0000 03C1             /*
                 ; 0000 03C2             binary_to_date(timestamp, &dt);
                 ; 0000 03C3             printRTC(dt);
                 ; 0000 03C4             */
                 ; 0000 03C5 
                 ; 0000 03C6             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003c65 940e c4dc 	CALL SUBOPT_0x59
003c67 940e e465 	CALL __CPD02
003c69 f029      	BREQ _0xF4
003c6a 940e c4dc 	CALL SUBOPT_0x59
003c6c 940e c3fc 	CALL SUBOPT_0x3A
003c6e f439      	BRNE _0xF3
                 _0xF4:
                 ; 0000 03C7             {
                 ; 0000 03C8                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003c6f e6e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2075 ) )
003c70 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2075 ) )
003c71 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2075 ) )
003c72 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2075 ) )
                 	__POINTD1FN _0x0,2075
003c73 940e c274 	CALL SUBOPT_0x3
                 ; 0000 03C9                 continue;
003c75 cfce      	RJMP _0xEE
                 ; 0000 03CA             }
                 ; 0000 03CB 
                 ; 0000 03CC 
                 ; 0000 03CD             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xF3:
003c76 e0e0      	LDI  R30,LOW(0)
003c77 93ea      	ST   -Y,R30
003c78 940e c430 	CALL SUBOPT_0x3F
003c7a 935a      	ST   -Y,R21
003c7b 2fa4      	MOV  R26,R20
003c7c 940e 54a9 	CALL _ETH_sendEventReportCmd
003c7e 019f      	MOVW R18,R30
                 ; 0000 03CE             if(res < 0)
003c7f 2333      	TST  R19
003c80 f43a      	BRPL _0xF6
                 ; 0000 03CF             {
                 ; 0000 03D0                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003c81 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 2132 ) )
003c82 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2132 ) )
003c83 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2132 ) )
003c84 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2132 ) )
                 	__POINTD1FN _0x0,2132
003c85 940e c274 	CALL SUBOPT_0x3
                 ; 0000 03D1                 // --- Keep in Log --- //
                 ; 0000 03D2                 continue;
003c87 cfbc      	RJMP _0xEE
                 ; 0000 03D3             }
                 ; 0000 03D4             count++;
                 _0xF6:
                +
003c88 5f0f     +SUBI R16 , LOW ( - 1 )
003c89 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03D5         }
                 ; 0000 03D6     }
003c8a cfb9      	RJMP _0xEE
                 _0xF0:
                 ; 0000 03D7 
                 ; 0000 03D8     return count;
003c8b 01f8      	MOVW R30,R16
003c8c 940e e47c 	CALL __LOADLOCR6
003c8e 962a      	ADIW R28,10
003c8f 9508      	RET
                 ; 0000 03D9 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 03E1 {
                 _sensorDataSave:
                 ; 0000 03E2     FIL                     file;
                 ; 0000 03E3     char                    isFileOpen = 0;
                 ; 0000 03E4     int                     count = 0;
                 ; 0000 03E5     int                     res;
                 ; 0000 03E6     unsigned long int       timestamp;
                 ; 0000 03E7     unsigned int            channel;
                 ; 0000 03E8     float                   value;
                 ; 0000 03E9 
                 ; 0000 03EA 
                 ; 0000 03EB     // -- for debug -- //
                 ; 0000 03EC     //struct rtc_structure    dt;
                 ; 0000 03ED     // --------------- //
                 ; 0000 03EE 
                 ; 0000 03EF     while (count < MAX_DATA_QUEUE)
003c90 97aa      	SBIW R28,42
003c91 50d2      	SUBI R29,2
003c92 940e e475 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
003c94 e010      	LDI  R17,0
                +
003c95 e020     +LDI R18 , LOW ( 0 )
003c96 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF7:
                +
003c97 302a     +CPI R18 , LOW ( 10 )
003c98 e0e0     +LDI R30 , HIGH ( 10 )
003c99 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
003c9a f014      	BRLT PC+3
003c9b 940c 3cf4 	JMP _0xF9
                 ; 0000 03F0     {
                 ; 0000 03F1         res = fetchDataQueue(&timestamp, &channel, &value);
003c9d 940e c4e1 	CALL SUBOPT_0x5A
003c9f 940e c4e1 	CALL SUBOPT_0x5A
003ca1 01de      	MOVW R26,R28
003ca2 961a      	ADIW R26,10
003ca3 940e 7557 	CALL _fetchDataQueue
003ca5 01af      	MOVW R20,R30
                 ; 0000 03F2         if(res < 0)
003ca6 2355      	TST  R21
003ca7 f40a      	BRPL _0xFA
                 ; 0000 03F3         {
                 ; 0000 03F4             break;
003ca8 c04b      	RJMP _0xF9
                 ; 0000 03F5         }
                 ; 0000 03F6         else
                 _0xFA:
                 ; 0000 03F7         {
                 ; 0000 03F8             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003ca9 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 2180 ) )
003caa e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2180 ) )
003cab e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2180 ) )
003cac e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2180 ) )
                 	__POINTD1FN _0x0,2180
003cad 940e c4e6 	CALL SUBOPT_0x5B
003caf 89ea      	LDD  R30,Y+18
003cb0 89fb      	LDD  R31,Y+18+1
003cb1 940e c3d6 	CALL SUBOPT_0x34
003cb3 940e c49f 	CALL SUBOPT_0x51
                 ; 0000 03F9             /*
                 ; 0000 03FA             binary_to_date(timestamp, &dt);
                 ; 0000 03FB             printRTC(dt);
                 ; 0000 03FC             */
                 ; 0000 03FD 
                 ; 0000 03FE             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003cb5 940e c2ba 	CALL SUBOPT_0xB
003cb7 940e e465 	CALL __CPD02
003cb9 f039      	BREQ _0xFD
003cba 940e c4ec 	CALL SUBOPT_0x5C
003cbc f021      	BREQ _0xFD
003cbd 85aa      	LDD  R26,Y+10
003cbe 85bb      	LDD  R27,Y+10+1
003cbf 9715      	SBIW R26,5
003cc0 f038      	BRLO _0xFC
                 _0xFD:
                 ; 0000 03FF             {
                 ; 0000 0400                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003cc1 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2226 ) )
003cc2 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2226 ) )
003cc3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2226 ) )
003cc4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2226 ) )
                 	__POINTD1FN _0x0,2226
003cc5 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0401                 continue;
003cc7 cfcf      	RJMP _0xF7
                 ; 0000 0402             }
                 ; 0000 0403 
                 ; 0000 0404             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0405             if(!isFileOpen)
                 _0xFC:
003cc8 3010      	CPI  R17,0
003cc9 f489      	BRNE _0xFF
                 ; 0000 0406             {
                 ; 0000 0407                 res = LOG_openFile(&file,LOGFILE_DATA);
003cca 940e c4ee 	CALL SUBOPT_0x5D
003ccc 940e c4f3 	CALL SUBOPT_0x5E
003cce 01af      	MOVW R20,R30
                 ; 0000 0408                 if(res < 0)
003ccf 2355      	TST  R21
003cd0 f44a      	BRPL _0x100
                 ; 0000 0409                 {
                 ; 0000 040A                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
003cd1 e3ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2286 ) )
003cd2 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2286 ) )
003cd3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2286 ) )
003cd4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2286 ) )
                 	__POINTD1FN _0x0,2286
003cd5 940e c4fe 	CALL SUBOPT_0x5F
003cd7 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 040B                     continue;
003cd9 cfbd      	RJMP _0xF7
                 ; 0000 040C                 }
                 ; 0000 040D                 isFileOpen = 1;
                 _0x100:
003cda e011      	LDI  R17,LOW(1)
                 ; 0000 040E             }
                 ; 0000 040F 
                 ; 0000 0410             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xFF:
003cdb 940e c4ee 	CALL SUBOPT_0x5D
003cdd 940e c503 	CALL SUBOPT_0x60
003cdf 940e e400 	CALL __PUTPARD1
003ce1 89e8      	LDD  R30,Y+16
003ce2 89f9      	LDD  R31,Y+16+1
003ce3 93fa      	ST   -Y,R31
003ce4 93ea      	ST   -Y,R30
003ce5 940e c508 	CALL SUBOPT_0x61
003ce7 01af      	MOVW R20,R30
                 ; 0000 0411             if(res < 0)
003ce8 2355      	TST  R21
003ce9 f43a      	BRPL _0x101
                 ; 0000 0412             {
                 ; 0000 0413                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
003cea e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 2348 ) )
003ceb e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2348 ) )
003cec e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2348 ) )
003ced e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2348 ) )
                 	__POINTD1FN _0x0,2348
003cee 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0414                 continue;
003cf0 cfa6      	RJMP _0xF7
                 ; 0000 0415             }
                 ; 0000 0416             count++;
                 _0x101:
                +
003cf1 5f2f     +SUBI R18 , LOW ( - 1 )
003cf2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0417         }
                 ; 0000 0418     }
003cf3 cfa3      	RJMP _0xF7
                 _0xF9:
                 ; 0000 0419 
                 ; 0000 041A     if(isFileOpen)
003cf4 3010      	CPI  R17,0
003cf5 f071      	BREQ _0x102
                 ; 0000 041B     {
                 ; 0000 041C         res = LOG_closeFile(&file);
003cf6 01de      	MOVW R26,R28
003cf7 9650      	ADIW R26,16
003cf8 940e c50e 	CALL SUBOPT_0x62
                 ; 0000 041D         if(res < 0)
003cfa f44a      	BRPL _0x103
                 ; 0000 041E         {
                 ; 0000 041F             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
003cfb eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 2391 ) )
003cfc e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2391 ) )
003cfd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2391 ) )
003cfe e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2391 ) )
                 	__POINTD1FN _0x0,2391
003cff 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0420             return -1;
003d01 efef      	LDI  R30,LOW(65535)
003d02 efff      	LDI  R31,HIGH(65535)
003d03 c00b      	RJMP _0x20E009B
                 ; 0000 0421         }
                 ; 0000 0422     }
                 _0x103:
                 ; 0000 0423 
                 ; 0000 0424     if(count > 0){
                 _0x102:
003d04 2400      	CLR  R0
003d05 1602      	CP   R0,R18
003d06 0603      	CPC  R0,R19
003d07 f434      	BRGE _0x104
                 ; 0000 0425         //isDataLogEmpty  = 0;
                 ; 0000 0426         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
003d08 eced     +LDI R30 , LOW ( 2 * _0x0 + ( 2433 ) )
003d09 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2433 ) )
003d0a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2433 ) )
003d0b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2433 ) )
                 	__POINTD1FN _0x0,2433
003d0c 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0427     }
                 ; 0000 0428 
                 ; 0000 0429     return count;
                 _0x104:
003d0e 01f9      	MOVW R30,R18
                 _0x20E009B:
003d0f 940e e47c 	CALL __LOADLOCR6
003d11 96e0      	ADIW R28,48
003d12 5fde      	SUBI R29,-2
003d13 9508      	RET
                 ; 0000 042A }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 042D {
                 _eventSave:
                 ; 0000 042E     FIL                     file;
                 ; 0000 042F     char                    isFileOpen = 0;
                 ; 0000 0430     int                     count = 0;
                 ; 0000 0431     int                     res;
                 ; 0000 0432     unsigned long int       timestamp;
                 ; 0000 0433     unsigned char           eventID;
                 ; 0000 0434     unsigned char           eventStatus;
                 ; 0000 0435 
                 ; 0000 0436     // -- for debug -- //
                 ; 0000 0437     //struct rtc_structure    dt;
                 ; 0000 0438     // --------------- //
                 ; 0000 0439 
                 ; 0000 043A     while (count < MAX_EVENT_QUEUE)
003d14 97a5      	SBIW R28,37
003d15 50d2      	SUBI R29,2
003d16 940e e475 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
003d18 e010      	LDI  R17,0
                +
003d19 e020     +LDI R18 , LOW ( 0 )
003d1a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x105:
                +
003d1b 3124     +CPI R18 , LOW ( 20 )
003d1c e0e0     +LDI R30 , HIGH ( 20 )
003d1d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
003d1e f014      	BRLT PC+3
003d1f 940c 3d7c 	JMP _0x107
                 ; 0000 043B     {
                 ; 0000 043C         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003d21 940e c519 	CALL SUBOPT_0x63
003d23 b7ed      	IN   R30,SPL
003d24 b7fe      	IN   R31,SPH
003d25 93fa      	ST   -Y,R31
003d26 93ea      	ST   -Y,R30
003d27 930f      	PUSH R16
003d28 01de      	MOVW R26,R28
003d29 961a      	ADIW R26,10
003d2a 940e 78bb 	CALL _fetchEventQueue
003d2c 910f      	POP  R16
003d2d 01af      	MOVW R20,R30
                 ; 0000 043D         if(res < 0)
003d2e 2355      	TST  R21
003d2f f40a      	BRPL _0x108
                 ; 0000 043E         {
                 ; 0000 043F             break;
003d30 c04b      	RJMP _0x107
                 ; 0000 0440         }
                 ; 0000 0441         else
                 _0x108:
                 ; 0000 0442         {
                 ; 0000 0443             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003d31 efe6     +LDI R30 , LOW ( 2 * _0x0 + ( 2474 ) )
003d32 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2474 ) )
003d33 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2474 ) )
003d34 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2474 ) )
                 	__POINTD1FN _0x0,2474
003d35 940e e400 	CALL __PUTPARD1
003d37 940e c51e 	CALL SUBOPT_0x64
003d39 2fe0      	MOV  R30,R16
003d3a 940e c525 	CALL SUBOPT_0x65
003d3c 89ea      	LDD  R30,Y+18
003d3d 940e c525 	CALL SUBOPT_0x65
003d3f 940e c52b 	CALL SUBOPT_0x66
                 ; 0000 0444             /*
                 ; 0000 0445             binary_to_date(timestamp, &dt);
                 ; 0000 0446             printRTC(dt);
                 ; 0000 0447             */
                 ; 0000 0448 
                 ; 0000 0449             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003d41 940e c530 	CALL SUBOPT_0x67
003d43 940e e465 	CALL __CPD02
003d45 f029      	BREQ _0x10B
003d46 940e c530 	CALL SUBOPT_0x67
003d48 940e c3fc 	CALL SUBOPT_0x3A
003d4a f439      	BRNE _0x10A
                 _0x10B:
                 ; 0000 044A             {
                 ; 0000 044B                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003d4b e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2522 ) )
003d4c e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2522 ) )
003d4d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2522 ) )
003d4e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2522 ) )
                 	__POINTD1FN _0x0,2522
003d4f 940e c274 	CALL SUBOPT_0x3
                 ; 0000 044C                 continue;
003d51 cfc9      	RJMP _0x105
                 ; 0000 044D             }
                 ; 0000 044E 
                 ; 0000 044F             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0450             if(!isFileOpen)
                 _0x10A:
003d52 3010      	CPI  R17,0
003d53 f489      	BRNE _0x10D
                 ; 0000 0451             {
                 ; 0000 0452                 res = LOG_openFile(&file,LOGFILE_EVENT);
003d54 940e c535 	CALL SUBOPT_0x68
003d56 940e c53a 	CALL SUBOPT_0x69
003d58 01af      	MOVW R20,R30
                 ; 0000 0453                 if(res < 0)
003d59 2355      	TST  R21
003d5a f44a      	BRPL _0x10E
                 ; 0000 0454                 {
                 ; 0000 0455                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
003d5b e5ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2577 ) )
003d5c e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2577 ) )
003d5d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2577 ) )
003d5e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2577 ) )
                 	__POINTD1FN _0x0,2577
003d5f 940e c545 	CALL SUBOPT_0x6A
003d61 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 0456                     continue;
003d63 cfb7      	RJMP _0x105
                 ; 0000 0457                 }
                 ; 0000 0458                 isFileOpen = 1;
                 _0x10E:
003d64 e011      	LDI  R17,LOW(1)
                 ; 0000 0459             }
                 ; 0000 045A 
                 ; 0000 045B             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0x10D:
003d65 940e c535 	CALL SUBOPT_0x68
003d67 940e c54a 	CALL SUBOPT_0x6B
003d69 940e e400 	CALL __PUTPARD1
003d6b 930a      	ST   -Y,R16
003d6c 85ad      	LDD  R26,Y+13
003d6d 940e 8433 	CALL _LOG_insertEvent
003d6f 01af      	MOVW R20,R30
                 ; 0000 045C             if(res < 0)
003d70 2355      	TST  R21
003d71 f43a      	BRPL _0x10F
                 ; 0000 045D             {
                 ; 0000 045E                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003d72 e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2634 ) )
003d73 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2634 ) )
003d74 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2634 ) )
003d75 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2634 ) )
                 	__POINTD1FN _0x0,2634
003d76 940e c274 	CALL SUBOPT_0x3
                 ; 0000 045F                 continue;
003d78 cfa2      	RJMP _0x105
                 ; 0000 0460             }
                 ; 0000 0461             count++;
                 _0x10F:
                +
003d79 5f2f     +SUBI R18 , LOW ( - 1 )
003d7a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0462         }
                 ; 0000 0463     }
003d7b cf9f      	RJMP _0x105
                 _0x107:
                 ; 0000 0464 
                 ; 0000 0465     if(isFileOpen)
003d7c 3010      	CPI  R17,0
003d7d f071      	BREQ _0x110
                 ; 0000 0466     {
                 ; 0000 0467         res = LOG_closeFile(&file);
003d7e 01de      	MOVW R26,R28
003d7f 961b      	ADIW R26,11
003d80 940e c50e 	CALL SUBOPT_0x62
                 ; 0000 0468         if(res < 0)
003d82 f44a      	BRPL _0x111
                 ; 0000 0469         {
                 ; 0000 046A             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003d83 ebed     +LDI R30 , LOW ( 2 * _0x0 + ( 2673 ) )
003d84 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2673 ) )
003d85 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2673 ) )
003d86 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2673 ) )
                 	__POINTD1FN _0x0,2673
003d87 940e c274 	CALL SUBOPT_0x3
                 ; 0000 046B             return -1;
003d89 efef      	LDI  R30,LOW(65535)
003d8a efff      	LDI  R31,HIGH(65535)
003d8b c00b      	RJMP _0x20E009A
                 ; 0000 046C         }
                 ; 0000 046D     }
                 _0x111:
                 ; 0000 046E 
                 ; 0000 046F     if(count > 0){
                 _0x110:
003d8c 2400      	CLR  R0
003d8d 1602      	CP   R0,R18
003d8e 0603      	CPC  R0,R19
003d8f f434      	BRGE _0x112
                 ; 0000 0470         //isEventLogEmpty    = 0;
                 ; 0000 0471         printDebug("<eventSave> Event Log is not empty\r\n");
                +
003d90 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 2710 ) )
003d91 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2710 ) )
003d92 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2710 ) )
003d93 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2710 ) )
                 	__POINTD1FN _0x0,2710
003d94 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0472     }
                 ; 0000 0473 
                 ; 0000 0474     return count;
                 _0x112:
003d96 01f9      	MOVW R30,R18
                 _0x20E009A:
003d97 940e e47c 	CALL __LOADLOCR6
003d99 96ab      	ADIW R28,43
003d9a 5fde      	SUBI R29,-2
003d9b 9508      	RET
                 ; 0000 0475 }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0478 {
                 _logReport:
                 ; 0000 0479     FIL                     file;
                 ; 0000 047A     int                     res;
                 ; 0000 047B     unsigned long int       index;
                 ; 0000 047C     unsigned long int       timestamp;
                 ; 0000 047D     unsigned int            channel;
                 ; 0000 047E     float                   value;
                 ; 0000 047F     unsigned char           id;
                 ; 0000 0480     unsigned char           status;
                 ; 0000 0481 
                 ; 0000 0482     // -- send data log if any exist -- //
                 ; 0000 0483     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
003d9c 97ac      	SBIW R28,44
003d9d 50d2      	SUBI R29,2
003d9e 940e e475 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
003da0 91e0 14dd 	LDS  R30,_isDataLogEmpty
003da2 30e0      	CPI  R30,0
003da3 f421      	BRNE _0x114
003da4 91a0 1426 	LDS  R26,_logDataWait
003da6 30a0      	CPI  R26,LOW(0x0)
003da7 f009      	BREQ _0x115
                 _0x114:
003da8 c091      	RJMP _0x113
                 _0x115:
                 ; 0000 0484     {
                 ; 0000 0485         printDebug("<logReport> Check Data Log Exist\r\n");
                +
003da9 e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2747 ) )
003daa e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2747 ) )
003dab e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2747 ) )
003dac e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2747 ) )
                 	__POINTD1FN _0x0,2747
003dad 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0486         res = LOG_openFile(&file,LOGFILE_DATA);
003daf 940e c54f 	CALL SUBOPT_0x6C
003db1 940e c4f3 	CALL SUBOPT_0x5E
003db3 018f      	MOVW R16,R30
                 ; 0000 0487         if(res < 0)
003db4 2311      	TST  R17
003db5 f44a      	BRPL _0x116
                 ; 0000 0488         {
                 ; 0000 0489             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
003db6 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003db7 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003db8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003db9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003dba 940e c4fe 	CALL SUBOPT_0x5F
003dbc 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 048A         }
                 ; 0000 048B         else
003dbe c07b      	RJMP _0x117
                 _0x116:
                 ; 0000 048C         {
                 ; 0000 048D             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
003dbf 940e c54f 	CALL SUBOPT_0x6C
003dc1 940e c4e1 	CALL SUBOPT_0x5A
003dc3 b7ed      	IN   R30,SPL
003dc4 b7fe      	IN   R31,SPH
003dc5 9731      	SBIW R30,1
003dc6 93fa      	ST   -Y,R31
003dc7 93ea      	ST   -Y,R30
003dc8 933f      	PUSH R19
003dc9 932f      	PUSH R18
003dca 940e c4e1 	CALL SUBOPT_0x5A
003dcc 01de      	MOVW R26,R28
003dcd 9656      	ADIW R26,22
003dce 940e 8398 	CALL _LOG_readData
003dd0 912f      	POP  R18
003dd1 913f      	POP  R19
003dd2 018f      	MOVW R16,R30
                 ; 0000 048E             if(res < 0)
003dd3 2311      	TST  R17
003dd4 f44a      	BRPL _0x118
                 ; 0000 048F             {
                 ; 0000 0490                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
003dd5 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 2820 ) )
003dd6 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2820 ) )
003dd7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2820 ) )
003dd8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2820 ) )
                 	__POINTD1FN _0x0,2820
003dd9 940e c4fe 	CALL SUBOPT_0x5F
003ddb 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 0491             }
                 ; 0000 0492             else if(res == 0)
003ddd c053      	RJMP _0x119
                 _0x118:
003dde 2e00      	MOV  R0,R16
003ddf 2a01      	OR   R0,R17
003de0 f439      	BRNE _0x11A
                 ; 0000 0493             {
                 ; 0000 0494                 //isDataLogEmpty      = 1;
                 ; 0000 0495                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
003de1 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2858 ) )
003de2 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2858 ) )
003de3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2858 ) )
003de4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2858 ) )
                 	__POINTD1FN _0x0,2858
003de5 940e c274 	CALL SUBOPT_0x3
                 ; 0000 0496             }
                 ; 0000 0497             else
003de7 c049      	RJMP _0x11B
                 _0x11A:
                 ; 0000 0498             {
                 ; 0000 0499                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003de8 940e c554 	CALL SUBOPT_0x6D
003dea f039      	BREQ _0x11D
003deb 940e c4af 	CALL SUBOPT_0x53
003ded f021      	BREQ _0x11D
                +
003dee 3025     +CPI R18 , LOW ( 5 )
003def e0e0     +LDI R30 , HIGH ( 5 )
003df0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003df1 f048      	BRLO _0x11C
                 _0x11D:
                 ; 0000 049A                 {
                 ; 0000 049B                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
003df2 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003df3 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003df4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003df5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003df6 940e c4fe 	CALL SUBOPT_0x5F
003df8 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 049C                 }
                 ; 0000 049D                 else
003dfa c036      	RJMP _0x11F
                 _0x11C:
                 ; 0000 049E                 {
                 ; 0000 049F                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003dfb ecec     +LDI R30 , LOW ( 2 * _0x0 + ( 2944 ) )
003dfc e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2944 ) )
003dfd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2944 ) )
003dfe e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2944 ) )
                 	__POINTD1FN _0x0,2944
003dff 940e c496 	CALL SUBOPT_0x50
003e01 01f9      	MOVW R30,R18
003e02 940e c3d6 	CALL SUBOPT_0x34
003e04 940e c49f 	CALL SUBOPT_0x51
                 ; 0000 04A0                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003e06 e0e1      	LDI  R30,LOW(1)
003e07 940e c4b1 	CALL SUBOPT_0x54
003e09 933a      	ST   -Y,R19
003e0a 932a      	ST   -Y,R18
003e0b 940e c4b9 	CALL SUBOPT_0x55
003e0d 018f      	MOVW R16,R30
                 ; 0000 04A1                     if(res < 0)
003e0e 2311      	TST  R17
003e0f f44a      	BRPL _0x120
                 ; 0000 04A2                     {
                 ; 0000 04A3                         logDataWait.frameID    = 0;
003e10 940e c558 	CALL SUBOPT_0x6E
                 ; 0000 04A4                         logDataWait.logID      = 0;
                 ; 0000 04A5                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003e12 e0e3     +LDI R30 , LOW ( 2 * _0x0 + ( 2999 ) )
003e13 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 2999 ) )
003e14 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2999 ) )
003e15 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2999 ) )
                 	__POINTD1FN _0x0,2999
003e16 940e c274 	CALL SUBOPT_0x3
                 ; 0000 04A6                     }
                 ; 0000 04A7                     else
003e18 c018      	RJMP _0x121
                 _0x120:
                 ; 0000 04A8                     {
                 ; 0000 04A9                         logDataWait.logID       = index;
003e19 940e c503 	CALL SUBOPT_0x60
                +
003e1b 93e0 1427+STS _logDataWait + ( 1 ) , R30
003e1d 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003e1f 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003e21 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 04AA                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003e23 e3e0     +LDI R30 , LOW ( 2 * _0x0 + ( 3044 ) )
003e24 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3044 ) )
003e25 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3044 ) )
003e26 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3044 ) )
                 	__POINTD1FN _0x0,3044
003e27 940e e400 	CALL __PUTPARD1
003e29 91e0 1426 	LDS  R30,_logDataWait
003e2b 940e c525 	CALL SUBOPT_0x65
003e2d 940e c568 	CALL SUBOPT_0x6F
003e2f 940e c34d 	CALL SUBOPT_0x21
                 ; 0000 04AB                     }
                 _0x121:
                 ; 0000 04AC                 }
                 _0x11F:
                 ; 0000 04AD             }
                 _0x11B:
                 _0x119:
                 ; 0000 04AE 
                 ; 0000 04AF             res = LOG_closeFile(&file);
003e31 940e c571 	CALL SUBOPT_0x70
                 ; 0000 04B0             if(res < 0)
003e33 f432      	BRPL _0x122
                 ; 0000 04B1             {
                 ; 0000 04B2                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003e34 e6e9     +LDI R30 , LOW ( 2 * _0x0 + ( 3101 ) )
003e35 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3101 ) )
003e36 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3101 ) )
003e37 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3101 ) )
                 	__POINTD1FN _0x0,3101
003e38 940e c274 	CALL SUBOPT_0x3
                 ; 0000 04B3             }
                 ; 0000 04B4         }
                 _0x122:
                 _0x117:
                 ; 0000 04B5     }
                 ; 0000 04B6 
                 ; 0000 04B7     // -- send event log if any exist -- //
                 ; 0000 04B8     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0x113:
003e3a 91e0 14de 	LDS  R30,_isEventLogEmpty
003e3c 30e0      	CPI  R30,0
003e3d f421      	BRNE _0x124
003e3e 91a0 142b 	LDS  R26,_logEventWait
003e40 30a0      	CPI  R26,LOW(0x0)
003e41 f009      	BREQ _0x125
                 _0x124:
003e42 c08b      	RJMP _0x123
                 _0x125:
                 ; 0000 04B9     {
                 ; 0000 04BA         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003e43 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3138 ) )
003e44 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3138 ) )
003e45 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3138 ) )
003e46 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3138 ) )
                 	__POINTD1FN _0x0,3138
003e47 940e c274 	CALL SUBOPT_0x3
                 ; 0000 04BB         res = LOG_openFile(&file,LOGFILE_EVENT);
003e49 940e c54f 	CALL SUBOPT_0x6C
003e4b 940e c53a 	CALL SUBOPT_0x69
003e4d 018f      	MOVW R16,R30
                 ; 0000 04BC         if(res < 0)
003e4e 2311      	TST  R17
003e4f f42a      	BRPL _0x126
                 ; 0000 04BD         {
                 ; 0000 04BE             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003e50 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003e51 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003e52 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003e53 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003e54 c071      	RJMP _0x13E
                 ; 0000 04BF         }
                 ; 0000 04C0         else
                 _0x126:
                 ; 0000 04C1         {
                 ; 0000 04C2             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003e55 940e c54f 	CALL SUBOPT_0x6C
003e57 940e c4e1 	CALL SUBOPT_0x5A
003e59 b7ed      	IN   R30,SPL
003e5a b7fe      	IN   R31,SPH
003e5b 93fa      	ST   -Y,R31
003e5c 93ea      	ST   -Y,R30
003e5d 935f      	PUSH R21
003e5e b7ed      	IN   R30,SPL
003e5f b7fe      	IN   R31,SPH
003e60 93fa      	ST   -Y,R31
003e61 93ea      	ST   -Y,R30
003e62 934f      	PUSH R20
003e63 01de      	MOVW R26,R28
003e64 9656      	ADIW R26,22
003e65 940e 84bf 	CALL _LOG_readEvent
003e67 914f      	POP  R20
003e68 915f      	POP  R21
003e69 018f      	MOVW R16,R30
                 ; 0000 04C3             if(res < 0)
003e6a 2311      	TST  R17
003e6b f43a      	BRPL _0x128
                 ; 0000 04C4             {
                 ; 0000 04C5                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003e6c ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 3174 ) )
003e6d e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3174 ) )
003e6e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3174 ) )
003e6f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3174 ) )
                 	__POINTD1FN _0x0,3174
003e70 940e c274 	CALL SUBOPT_0x3
                 ; 0000 04C6             }
                 ; 0000 04C7             else if(res == 0)
003e72 c04c      	RJMP _0x129
                 _0x128:
003e73 2e00      	MOV  R0,R16
003e74 2a01      	OR   R0,R17
003e75 f439      	BRNE _0x12A
                 ; 0000 04C8             {
                 ; 0000 04C9                 //isEventLogEmpty     = 1;
                 ; 0000 04CA                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003e76 ede7     +LDI R30 , LOW ( 2 * _0x0 + ( 3211 ) )
003e77 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3211 ) )
003e78 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3211 ) )
003e79 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3211 ) )
                 	__POINTD1FN _0x0,3211
003e7a 940e c274 	CALL SUBOPT_0x3
                 ; 0000 04CB             }
                 ; 0000 04CC             else
003e7c c042      	RJMP _0x12B
                 _0x12A:
                 ; 0000 04CD             {
                 ; 0000 04CE                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003e7d 940e c554 	CALL SUBOPT_0x6D
003e7f f019      	BREQ _0x12D
003e80 940e c4af 	CALL SUBOPT_0x53
003e82 f449      	BRNE _0x12C
                 _0x12D:
                 ; 0000 04CF                 {
                 ; 0000 04D0                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003e83 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003e84 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003e85 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003e86 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003e87 940e c545 	CALL SUBOPT_0x6A
003e89 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 04D1                 }
                 ; 0000 04D2                 else
003e8b c033      	RJMP _0x12F
                 _0x12C:
                 ; 0000 04D3                 {
                 ; 0000 04D4                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003e8c efef     +LDI R30 , LOW ( 2 * _0x0 + ( 3251 ) )
003e8d e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3251 ) )
003e8e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3251 ) )
003e8f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3251 ) )
                 	__POINTD1FN _0x0,3251
003e90 940e c496 	CALL SUBOPT_0x50
003e92 940e c4cb 	CALL SUBOPT_0x58
                 ; 0000 04D5                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003e94 e0e1      	LDI  R30,LOW(1)
003e95 940e c4b1 	CALL SUBOPT_0x54
003e97 935a      	ST   -Y,R21
003e98 2fa4      	MOV  R26,R20
003e99 940e 54a9 	CALL _ETH_sendEventReportCmd
003e9b 018f      	MOVW R16,R30
                 ; 0000 04D6                     if(res < 0)
003e9c 2311      	TST  R17
003e9d f44a      	BRPL _0x130
                 ; 0000 04D7                     {
                 ; 0000 04D8                         logEventWait.frameID    = 0;
003e9e 940e c57e 	CALL SUBOPT_0x71
                 ; 0000 04D9                         logEventWait.logID      = 0;
                 ; 0000 04DA                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003ea0 e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3314 ) )
003ea1 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3314 ) )
003ea2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3314 ) )
003ea3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3314 ) )
                 	__POINTD1FN _0x0,3314
003ea4 940e c274 	CALL SUBOPT_0x3
                 ; 0000 04DB                     }
                 ; 0000 04DC                     else
003ea6 c018      	RJMP _0x131
                 _0x130:
                 ; 0000 04DD                     {
                 ; 0000 04DE                         logEventWait.logID      = index;
003ea7 940e c503 	CALL SUBOPT_0x60
                +
003ea9 93e0 142c+STS _logEventWait + ( 1 ) , R30
003eab 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003ead 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003eaf 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 04DF                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003eb1 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 3360 ) )
003eb2 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3360 ) )
003eb3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3360 ) )
003eb4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3360 ) )
                 	__POINTD1FN _0x0,3360
003eb5 940e e400 	CALL __PUTPARD1
003eb7 91e0 142b 	LDS  R30,_logEventWait
003eb9 940e c525 	CALL SUBOPT_0x65
003ebb 940e c58e 	CALL SUBOPT_0x72
003ebd 940e c34d 	CALL SUBOPT_0x21
                 ; 0000 04E0                     }
                 _0x131:
                 ; 0000 04E1                 }
                 _0x12F:
                 ; 0000 04E2             }
                 _0x12B:
                 _0x129:
                 ; 0000 04E3 
                 ; 0000 04E4             res = LOG_closeFile(&file);
003ebf 940e c571 	CALL SUBOPT_0x70
                 ; 0000 04E5             if(res < 0)
003ec1 f462      	BRPL _0x132
                 ; 0000 04E6             {
                 ; 0000 04E7                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003ec2 eae6     +LDI R30 , LOW ( 2 * _0x0 + ( 3418 ) )
003ec3 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3418 ) )
003ec4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3418 ) )
003ec5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3418 ) )
                 	__POINTD1FN _0x0,3418
                 _0x13E:
003ec6 940e e400 	CALL __PUTPARD1
003ec8 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
003ec9 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
003eca 940e c3d6 	CALL SUBOPT_0x34
003ecc 940e c2ea 	CALL SUBOPT_0x12
                 ; 0000 04E8             }
                 ; 0000 04E9         }
                 _0x132:
                 ; 0000 04EA     }
                 ; 0000 04EB 
                 ; 0000 04EC     return 0;
                 _0x123:
003ece e0e0      	LDI  R30,LOW(0)
003ecf e0f0      	LDI  R31,HIGH(0)
003ed0 940e e47c 	CALL __LOADLOCR6
003ed2 96e2      	ADIW R28,50
003ed3 5fde      	SUBI R29,-2
003ed4 9508      	RET
                 ; 0000 04ED }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003ed5 931a      	ST   -Y,R17
003ed6 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003ed7 e000     +LDI R16 , LOW ( 0 )
003ed8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003ed9 e8e0      	LDI  R30,LOW(128)
003eda 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003edc e0e0      	LDI  R30,LOW(0)
003edd 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003edf 940e 41c4 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003ee1 b7e4      	IN   R30,0x34
003ee2 ffe0      	SBRS R30,0
003ee3 c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003ee4 ecee     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003ee5 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003ee6 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003ee7 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003ee8 940e c274 	CALL SUBOPT_0x3
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003eea b7e4      	IN   R30,0x34
003eeb 7fee      	ANDI R30,0xFE
003eec bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003eed b7e4      	IN   R30,0x34
003eee ffe1      	SBRS R30,1
003eef c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003ef0 eee1     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003ef1 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003ef2 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003ef3 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003ef4 940e c274 	CALL SUBOPT_0x3
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003ef6 b7e4      	IN   R30,0x34
003ef7 7fed      	ANDI R30,0xFD
003ef8 bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003ef9 b7e4      	IN   R30,0x34
003efa ffe2      	SBRS R30,2
003efb c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003efc efe4     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003efd e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003efe e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003eff e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003f00 940e c274 	CALL SUBOPT_0x3
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003f02 b7e4      	IN   R30,0x34
003f03 7feb      	ANDI R30,0xFB
003f04 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003f05 b7e4      	IN   R30,0x34
003f06 ffe3      	SBRS R30,3
003f07 c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003f08 e0e8     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003f09 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003f0a e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003f0b e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003f0c 940e c274 	CALL SUBOPT_0x3
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003f0e b7e4      	IN   R30,0x34
003f0f 7fe7      	ANDI R30,0XF7
003f10 bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003f11 b7e4      	IN   R30,0x34
003f12 ffe4      	SBRS R30,4
003f13 c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003f14 e1eb     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003f15 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003f16 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003f17 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003f18 940e c274 	CALL SUBOPT_0x3
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003f1a b7e4      	IN   R30,0x34
003f1b 7eef      	ANDI R30,0xEF
003f1c bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003f1d 940e 4368 	CALL _init_io
                 ; 0001 0036     init_i2c();
003f1f d052      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003f20 d054      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003f21 940e 4556 	CALL _init_adc
                 ; 0001 0039     init_timer();
003f23 940e 42b5 	CALL _init_timer
                 ; 0001 003A     init_common();
003f25 d054      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003f26 940e c597 	CALL SUBOPT_0x73
003f28 940e 4342 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003f2a efa4      	LDI  R26,LOW(500)
003f2b e0b1      	LDI  R27,HIGH(500)
003f2c 940e e0a1 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003f2e 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003f2f 940e 4943 	CALL _init_RTC
003f31 940e c59a 	CALL SUBOPT_0x74
                 ; 0001 0043     init_oled();        delay_ms(100);
003f33 940e 80c7 	CALL _init_oled
003f35 940e c59a 	CALL SUBOPT_0x74
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003f37 940e 44f7 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003f39 940e c59e 	CALL SUBOPT_0x75
003f3b 940e 4342 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003f3d 940e c5a1 	CALL SUBOPT_0x76
003f3f 940e 4342 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003f41 940e c5a4 	CALL SUBOPT_0x77
003f43 940e 4342 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003f45 940e 53a7 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     playBeep();
003f47 d04a      	RCALL _playBeep
                 ; 0001 004D     showLedInitComplete();
003f48 d09c      	RCALL _showLedInitComplete
                 ; 0001 004E     showDebugInitComplete();
003f49 d04d      	RCALL _showDebugInitComplete
                 ; 0001 004F 
                 ; 0001 0050     if(SD_init() == 0)
003f4a 940e 82b6 	CALL _SD_init
003f4c 9730      	SBIW R30,0
003f4d f459      	BRNE _0x2000A
                 ; 0001 0051     {
                 ; 0001 0052         if(LOG_init() < 0)
003f4e 940e 869a 	CALL _LOG_init
003f50 23ff      	TST  R31
003f51 f432      	BRPL _0x2000B
                 ; 0001 0053         {
                 ; 0001 0054             // -- log status = error -- //
                 ; 0001 0055             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003f52 e2ea     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003f53 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003f54 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003f55 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003f56 940e c274 	CALL SUBOPT_0x3
                 ; 0001 0056         }
                 ; 0001 0057 
                 ; 0001 0058         // -- log status = ok -- //
                 ; 0001 0059     }
                 _0x2000B:
                 ; 0001 005A     else
003f58 c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005B     {
                 ; 0001 005C         // -- sd status = error -- //
                 ; 0001 005D         printDebug("<initial_system> SD_init() failed\r\n");
                +
003f59 e4ef     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003f5a e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003f5b e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003f5c e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003f5d 940e c274 	CALL SUBOPT_0x3
                 ; 0001 005E     }
                 _0x2000C:
                 ; 0001 005F 
                 ; 0001 0060     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003f5f e0a8      	LDI  R26,LOW(8)
003f60 940e 446f 	CALL _read_adc
003f62 e0ad      	LDI  R26,LOW(13)
003f63 e0b0      	LDI  R27,HIGH(13)
003f64 940e e2f6 	CALL __MULW12U
003f66 91a0 1430 	LDS  R26,_raw_rtc
003f68 91b0 1431 	LDS  R27,_raw_rtc+1
003f6a 0fae      	ADD  R26,R30
003f6b 1fbf      	ADC  R27,R31
003f6c 940e a697 	CALL _srand
                 ; 0001 0061 
                 ; 0001 0062     // -------- Configuration Initialize ----------- //
                 ; 0001 0063 //    readConfig();
                 ; 0001 0064 //    initAlarm();        //delay_ms(100);
                 ; 0001 0065 //
                 ; 0001 0066 //    if(init_logfile() < 0){
                 ; 0001 0067 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0068 //        return -1;
                 ; 0001 0069 //    }
                 ; 0001 006A 
                 ; 0001 006B 
                 ; 0001 006C     return res;
003f6e 01f8      	MOVW R30,R16
003f6f 9109      	LD   R16,Y+
003f70 9119      	LD   R17,Y+
003f71 9508      	RET
                 ; 0001 006D }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0070 {
                 _init_i2c:
                 ; 0001 0071     // I2C Bus initialization
                 ; 0001 0072     i2c_init();
003f72 940e e050 	CALL _i2c_init
                 ; 0001 0073 }
003f74 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0076 {
                 _init_spi:
                 ; 0001 0077     // SPI initialization
                 ; 0001 0078     // SPI Type: Master
                 ; 0001 0079     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007A     // SPI Clock Phase: Cycle Start
                 ; 0001 007B     // SPI Clock Polarity: Low
                 ; 0001 007C     // SPI Data Order: MSB First
                 ; 0001 007D     SPCR=0x50;
003f75 e5e0      	LDI  R30,LOW(80)
003f76 bdec      	OUT  0x2C,R30
                 ; 0001 007E     SPSR=0x00;
003f77 e0e0      	LDI  R30,LOW(0)
003f78 bded      	OUT  0x2D,R30
                 ; 0001 007F }
003f79 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0082 {
                 _init_common:
                 ; 0001 0083     // External Interrupt(s) initialization
                 ; 0001 0084     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0085     EICRA=0x00;
003f7a e0e0      	LDI  R30,LOW(0)
003f7b 93e0 0069 	STS  105,R30
                 ; 0001 0086     EICRB=0x00;
003f7d 93e0 006a 	STS  106,R30
                 ; 0001 0087     EIMSK=0x00;
003f7f bbed      	OUT  0x1D,R30
                 ; 0001 0088 
                 ; 0001 0089     PCMSK0=0x00;
003f80 93e0 006b 	STS  107,R30
                 ; 0001 008A     PCMSK1=0x00;
003f82 93e0 006c 	STS  108,R30
                 ; 0001 008B     PCMSK2=0x00;
003f84 93e0 006d 	STS  109,R30
                 ; 0001 008C     PCICR=0x00;
003f86 93e0 0068 	STS  104,R30
                 ; 0001 008D 
                 ; 0001 008E     // Analog Comparator initialization
                 ; 0001 008F     // Analog Comparator: Off
                 ; 0001 0090     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0091     ACSR=0x80;
003f88 e8e0      	LDI  R30,LOW(128)
003f89 bfe0      	OUT  0x30,R30
                 ; 0001 0092     ADCSRB=0x00;
003f8a e0e0      	LDI  R30,LOW(0)
003f8b 93e0 007b 	STS  123,R30
                 ; 0001 0093     DIDR1=0x00;
003f8d 93e0 007f 	STS  127,R30
                 ; 0001 0094 
                 ; 0001 0095     // TWI initialization
                 ; 0001 0096     // TWI disabled
                 ; 0001 0097     TWCR=0x00;
003f8f 93e0 00bc 	STS  188,R30
                 ; 0001 0098 }
003f91 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009B {
                 _playBeep:
                 ; 0001 009C     BUZZER = 1;                                     // Buzzer ON Starting
003f92 9a77      	SBI  0xE,7
                 ; 0001 009D     delay_ms(200);
003f93 940e c3db 	CALL SUBOPT_0x35
                 ; 0001 009E     BUZZER = 0;
003f95 9877      	CBI  0xE,7
                 ; 0001 009F }
003f96 9508      	RET
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A2 {
                 _showDebugInitComplete:
                 ; 0001 00A3     struct rtc_structure time;
                 ; 0001 00A4     struct prop_cnfg_st properties_config;
                 ; 0001 00A5 
                 ; 0001 00A6     printDebug("Initial Device Completed at - ");
003f97 97ef      	SBIW R28,63
003f98 97ef      	SBIW R28,63
003f99 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003f9a e7e3     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003f9b e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003f9c e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003f9d e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003f9e 940e c274 	CALL SUBOPT_0x3
                 ; 0001 00A7     RTC_getDateTime(&time,properties_config.timeZone);
003fa0 01fe      	MOVW R30,R28
003fa1 55ef      	SUBI R30,LOW(-(161))
003fa2 4fff      	SBCI R31,HIGH(-(161))
003fa3 93fa      	ST   -Y,R31
003fa4 93ea      	ST   -Y,R30
003fa5 01de      	MOVW R26,R28
003fa6 55ae      	SUBI R26,LOW(-162)
003fa7 4fbf      	SBCI R27,HIGH(-162)
003fa8 91ec      	LD   R30,X
003fa9 e0f0      	LDI  R31,0
003faa fde7      	SBRC R30,7
003fab efff      	SER  R31
003fac 01df      	MOVW R26,R30
003fad 940e 48b4 	CALL _RTC_getDateTime
                 ; 0001 00A8     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00A9             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003faf e9e2     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003fb0 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003fb1 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003fb2 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003fb3 940e e400 	CALL __PUTPARD1
                +
003fb5 01fe     +MOVW R30 , R28
003fb6 55eb     +SUBI R30 , LOW ( - 165 )
003fb7 4fff     +SBCI R31 , HIGH ( - 165 )
003fb8 9001     +LD R0 , Z +
003fb9 9011     +LD R1 , Z +
003fba 9161     +LD R22 , Z +
003fbb 8170     +LD R23 , Z
003fbc 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003fbd 940e e400 	CALL __PUTPARD1
003fbf 01fe      	MOVW R30,R28
003fc0 55e7      	SUBI R30,LOW(-(169))
003fc1 4fff      	SBCI R31,HIGH(-(169))
003fc2 9634      	ADIW R30,4
003fc3 940e c5a7 	CALL SUBOPT_0x78
003fc5 01fe      	MOVW R30,R28
003fc6 55e3      	SUBI R30,LOW(-(173))
003fc7 4fff      	SBCI R31,HIGH(-(173))
003fc8 9638      	ADIW R30,8
003fc9 940e c5a7 	CALL SUBOPT_0x78
003fcb 01fe      	MOVW R30,R28
003fcc 54ef      	SUBI R30,LOW(-(177))
003fcd 4fff      	SBCI R31,HIGH(-(177))
003fce 963c      	ADIW R30,12
003fcf 940e c5a7 	CALL SUBOPT_0x78
003fd1 01fe      	MOVW R30,R28
003fd2 54eb      	SUBI R30,LOW(-(181))
003fd3 4fff      	SBCI R31,HIGH(-(181))
003fd4 9670      	ADIW R30,16
003fd5 940e c5a7 	CALL SUBOPT_0x78
003fd7 01fe      	MOVW R30,R28
003fd8 54e7      	SUBI R30,LOW(-(185))
003fd9 4fff      	SBCI R31,HIGH(-(185))
003fda 9674      	ADIW R30,20
003fdb 940e c5a7 	CALL SUBOPT_0x78
003fdd e188      	LDI  R24,24
003fde 940e 9ef8 	CALL _printDebug
003fe0 966c      	ADIW R28,28
                 ; 0001 00AA }
003fe1 96ef      	ADIW R28,63
003fe2 96ef      	ADIW R28,63
003fe3 96ed      	ADIW R28,61
003fe4 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AD {
                 _showLedInitComplete:
                 ; 0001 00AE     LED_ON(BIT_LED_ALARM);
003fe5 91e0 0102 	LDS  R30,258
003fe7 7bef      	ANDI R30,0xBF
003fe8 940e c5ad 	CALL SUBOPT_0x79
                 ; 0001 00AF     delay_ms(200);
                 ; 0001 00B0 
                 ; 0001 00B1     LED_ON(BIT_LED_LINK);
003fea 91e0 0102 	LDS  R30,258
003fec 7def      	ANDI R30,0xDF
003fed 940e c5ad 	CALL SUBOPT_0x79
                 ; 0001 00B2     delay_ms(200);
                 ; 0001 00B3 
                 ; 0001 00B4     LED_ON(BIT_LED_TEMP);
003fef 91e0 0102 	LDS  R30,258
003ff1 7eef      	ANDI R30,0xEF
003ff2 940e c5ad 	CALL SUBOPT_0x79
                 ; 0001 00B5     delay_ms(200);
                 ; 0001 00B6 
                 ; 0001 00B7     LED_ON(BIT_LED_PWR);
003ff4 91e0 0102 	LDS  R30,258
003ff6 7fe7      	ANDI R30,0XF7
003ff7 940e c5ad 	CALL SUBOPT_0x79
                 ; 0001 00B8     delay_ms(200);
                 ; 0001 00B9 
                 ; 0001 00BA     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003ff9 91e0 0102 	LDS  R30,258
003ffb 67e8      	ORI  R30,LOW(0x78)
003ffc 940e c5ad 	CALL SUBOPT_0x79
                 ; 0001 00BB     delay_ms(200);
                 ; 0001 00BC 
                 ; 0001 00BD     LED_ON(BIT_LED_PWR);
003ffe 91e0 0102 	LDS  R30,258
004000 7fe7      	ANDI R30,0XF7
004001 93e0 0102 	STS  258,R30
                 ; 0001 00BE     delay_ms(50);
004003 940e c5b0 	CALL SUBOPT_0x7A
                 ; 0001 00BF }
004005 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
004006 940e c5b4 	CALL SUBOPT_0x7B
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
004008 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
00400a 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
00400c 2fe1      	MOV  R30,R17
00400d 71ec      	ANDI R30,LOW(0x1C)
00400e f011      	BREQ PC+3
00400f 940c 40ba 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
004011 91e0 1420 	LDS  R30,_ETH_current_mode
004013 30e0      	CPI  R30,0
004014 f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
004015 eaa3      	LDI  R26,LOW(_rx_wr_index0)
004016 e0bf      	LDI  R27,HIGH(_rx_wr_index0)
004017 940e c5c8 	CALL SUBOPT_0x7C
004019 9731      	SBIW R30,1
00401a 55e1      	SUBI R30,LOW(-_rx_buffer0)
00401b 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
00401c 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
00401d 91a0 0fa3 	LDS  R26,_rx_wr_index0
00401f 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
004021 3fa4      	CPI  R26,LOW(0x1F4)
004022 e0e1      	LDI  R30,HIGH(0x1F4)
004023 07be      	CPC  R27,R30
004024 f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
004025 e0e0      	LDI  R30,LOW(0)
004026 93e0 0fa3 	STS  _rx_wr_index0,R30
004028 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
00402a eaa7      	LDI  R26,LOW(_rx_counter0)
00402b e0bf      	LDI  R27,HIGH(_rx_counter0)
00402c 940e c5c8 	CALL SUBOPT_0x7C
00402e 3fe4      	CPI  R30,LOW(0x1F4)
00402f e0a1      	LDI  R26,HIGH(0x1F4)
004030 07fa      	CPC  R31,R26
004031 f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
004032 e0e0      	LDI  R30,LOW(0)
004033 93e0 0fa7 	STS  _rx_counter0,R30
004035 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
004037 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
004038 e0e3      	LDI  R30,LOW(3)
004039 93ea      	ST   -Y,R30
                +
00403a efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
00403b e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
00403c d154      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
00403d e0e3      	LDI  R30,LOW(3)
00403e 93ea      	ST   -Y,R30
                +
00403f e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
004040 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
004041 d14f      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
004042 e0e3      	LDI  R30,LOW(3)
004043 93ea      	ST   -Y,R30
                +
004044 e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
004045 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
004046 d14a      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
004047 c072      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
004048 2fa0      	MOV  R26,R16
004049 d13d      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
00404a 940e c5ce 	CALL SUBOPT_0x7D
00404c 34a5      	CPI  R26,LOW(0x145)
00404d e0e1      	LDI  R30,HIGH(0x145)
00404e 07be      	CPC  R27,R30
00404f f411      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
004050 940e c5d3 	CALL SUBOPT_0x7E
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
004052 330c      	CPI  R16,60
004053 f421      	BRNE _0x4000D
004054 91a0 10f0 	LDS  R26,_config_start
004056 30a0      	CPI  R26,LOW(0x0)
004057 f009      	BREQ _0x4000E
                 _0x4000D:
004058 c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
004059 e0e1      	LDI  R30,LOW(1)
00405a 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
00405c e0e0      	LDI  R30,LOW(0)
00405d 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
00405f 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
004061 c058      	RJMP _0x4000F
                 _0x4000C:
004062 300d      	CPI  R16,13
004063 f461      	BRNE _0x40011
004064 91a0 10f2 	LDS  R26,_config_end
004066 30a0      	CPI  R26,LOW(0x0)
004067 f441      	BRNE _0x40011
004068 91a0 10f0 	LDS  R26,_config_start
00406a 30a1      	CPI  R26,LOW(0x1)
00406b f421      	BRNE _0x40011
00406c 91a0 10f3 	LDS  R26,_config_response
00406e 30a0      	CPI  R26,LOW(0x0)
00406f f409      	BRNE _0x40012
                 _0x40011:
004070 c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
004071 e0ed      	LDI  R30,LOW(13)
004072 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
004074 c045      	RJMP _0x40013
                 _0x40010:
004075 300a      	CPI  R16,10
004076 f461      	BRNE _0x40015
004077 91a0 10f2 	LDS  R26,_config_end
004079 30ad      	CPI  R26,LOW(0xD)
00407a f441      	BRNE _0x40015
00407b 91a0 10f0 	LDS  R26,_config_start
00407d 30a1      	CPI  R26,LOW(0x1)
00407e f421      	BRNE _0x40015
00407f 91a0 10f3 	LDS  R26,_config_response
004081 30a0      	CPI  R26,LOW(0x0)
004082 f409      	BRNE _0x40016
                 _0x40015:
004083 c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
004084 e0ea      	LDI  R30,LOW(10)
004085 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
004087 e0e1      	LDI  R30,LOW(1)
004088 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
00408a c02f      	RJMP _0x40017
                 _0x40014:
00408b 3405      	CPI  R16,69
00408c f441      	BRNE _0x40019
00408d 91a0 10f0 	LDS  R26,_config_start
00408f 30a1      	CPI  R26,LOW(0x1)
004090 f421      	BRNE _0x40019
004091 91a0 10f3 	LDS  R26,_config_response
004093 30a0      	CPI  R26,LOW(0x0)
004094 f009      	BREQ _0x4001A
                 _0x40019:
004095 c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
004096 e4e5      	LDI  R30,LOW(69)
004097 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
004099 c020      	RJMP _0x4001B
                 _0x40018:
00409a 3503      	CPI  R16,83
00409b f441      	BRNE _0x4001D
00409c 91a0 10f0 	LDS  R26,_config_start
00409e 30a1      	CPI  R26,LOW(0x1)
00409f f421      	BRNE _0x4001D
0040a0 91a0 10f3 	LDS  R26,_config_response
0040a2 30a0      	CPI  R26,LOW(0x0)
0040a3 f009      	BREQ _0x4001E
                 _0x4001D:
0040a4 c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
0040a5 e5e3      	LDI  R30,LOW(83)
0040a6 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
0040a8 c011      	RJMP _0x4001F
                 _0x4001C:
0040a9 91a0 10f0 	LDS  R26,_config_start
0040ab 30a1      	CPI  R26,LOW(0x1)
0040ac f421      	BRNE _0x40021
0040ad 91a0 10f3 	LDS  R26,_config_response
0040af 30a0      	CPI  R26,LOW(0x0)
0040b0 f409      	BRNE _0x40022
                 _0x40021:
0040b1 c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
0040b2 eeae      	LDI  R26,LOW(_configLen)
0040b3 e1b0      	LDI  R27,HIGH(_configLen)
0040b4 940e c5c8 	CALL SUBOPT_0x7C
0040b6 9731      	SBIW R30,1
0040b7 55e7      	SUBI R30,LOW(-_configRd)
0040b8 4ff0      	SBCI R31,HIGH(-_configRd)
0040b9 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
0040ba c0b8      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
0040bb 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
0040bc 91e0 00c0 	LDS  R30,192
0040be 72e0      	ANDI R30,LOW(0x20)
0040bf f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
0040c0 81e8      	LD   R30,Y
0040c1 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
0040c3 c0cb      	RJMP _0x20E0099
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
0040c4 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
0040c6 e020     +LDI R18 , LOW ( 0 )
0040c7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
0040c8 91a0 0fa7 	LDS  R26,_rx_counter0
0040ca 91b0 0fa8 	LDS  R27,_rx_counter0+1
0040cc 940e e45d 	CALL __CPW02
0040ce f010      	BRLO PC+3
0040cf 940c 4111 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
0040d1 eaa5      	LDI  R26,LOW(_rx_rd_index0)
0040d2 e0bf      	LDI  R27,HIGH(_rx_rd_index0)
0040d3 940e c5c8 	CALL SUBOPT_0x7C
0040d5 9731      	SBIW R30,1
0040d6 55e1      	SUBI R30,LOW(-_rx_buffer0)
0040d7 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
0040d8 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
0040d9 91a0 0fa5 	LDS  R26,_rx_rd_index0
0040db 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
0040dd 3fa4      	CPI  R26,LOW(0x1F4)
0040de e0e1      	LDI  R30,HIGH(0x1F4)
0040df 07be      	CPC  R27,R30
0040e0 f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
0040e1 e0e0      	LDI  R30,LOW(0)
0040e2 93e0 0fa5 	STS  _rx_rd_index0,R30
0040e4 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
0040e6 91e0 00c1 	LDS  R30,193
0040e8 77ef      	ANDI R30,0x7F
0040e9 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
0040eb eaa7      	LDI  R26,LOW(_rx_counter0)
0040ec e0bf      	LDI  R27,HIGH(_rx_counter0)
0040ed 91ed      	LD   R30,X+
0040ee 91fd      	LD   R31,X+
0040ef 9731      	SBIW R30,1
0040f0 93fe      	ST   -X,R31
0040f1 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
0040f2 91e0 00c1 	LDS  R30,193
0040f4 68e0      	ORI  R30,0x80
0040f5 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
0040f7 940e c5de 	CALL SUBOPT_0x80
0040f9 93fa      	ST   -Y,R31
0040fa 93ea      	ST   -Y,R30
0040fb b7ed      	IN   R30,SPL
0040fc b7fe      	IN   R31,SPH
0040fd 93fa      	ST   -Y,R31
0040fe 93ea      	ST   -Y,R30
0040ff 931f      	PUSH R17
004100 940e c59e 	CALL SUBOPT_0x75
004102 940e a790 	CALL _memcpy
004104 911f      	POP  R17
                 ; 0002 0092         len++;
                +
004105 5f2f     +SUBI R18 , LOW ( - 1 )
004106 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
004107 81ee      	LDD  R30,Y+6
004108 81ff      	LDD  R31,Y+6+1
004109 17e2      	CP   R30,R18
00410a 07f3      	CPC  R31,R19
00410b f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
00410c 81ac      	LDD  R26,Y+4
00410d 81bd      	LDD  R27,Y+4+1
00410e 940e e0a1 	CALL _delay_ms
                 ; 0002 0098     }
004110 cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
004111 01f9      	MOVW R30,R18
004112 940e e47e 	CALL __LOADLOCR4
004114 c145      	RJMP _0x20E0098
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
004115 940e c5e5 	CALL SUBOPT_0x81
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
004117 e000     +LDI R16 , LOW ( 0 )
004118 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
004119 940e c5ea 	CALL SUBOPT_0x82
00411b f43c      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
00411c 940e c5ef 	CALL SUBOPT_0x83
00411e 91ac      	LD   R26,X
00411f df9b      	RCALL _putchar0
                 ; 0002 00A1     }
                +
004120 5f0f     +SUBI R16 , LOW ( - 1 )
004121 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004122 cff6      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
004123 01f8      	MOVW R30,R16
004124 8119      	LDD  R17,Y+1
004125 8108      	LDD  R16,Y+0
004126 9626      	ADIW R28,6
004127 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
004128 93ea      	ST   -Y,R30
004129 b7ef      	IN   R30,SREG
00412a 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
00412b 931a      	ST   -Y,R17
00412c 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
00412d 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
00412f 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
004131 2fe1      	MOV  R30,R17
004132 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
004133 c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
004134 93ea      	ST   -Y,R30
004135 b7ef      	IN   R30,SREG
004136 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
004137 931a      	ST   -Y,R17
004138 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
004139 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
00413b 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
00413d 2fe1      	MOV  R30,R17
00413e 71ec      	ANDI R30,LOW(0x1C)
00413f f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
004140 340b      	CPI  R16,75
004141 f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
004142 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
004143 9109      	LD   R16,Y+
004144 9119      	LD   R17,Y+
004145 91e9      	LD   R30,Y+
004146 bfef      	OUT  SREG,R30
004147 91e9      	LD   R30,Y+
004148 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
004149 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
00414a 91e0 00d0 	LDS  R30,208
00414c 72e0      	ANDI R30,LOW(0x20)
00414d f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
00414e 81e8      	LD   R30,Y
00414f 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
004151 c03d      	RJMP _0x20E0099
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
004152 940e c5b4 	CALL SUBOPT_0x7B
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
004154 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
004156 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
004158 2fe1      	MOV  R30,R17
004159 71ec      	ANDI R30,LOW(0x1C)
00415a f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
00415b 2fa0      	MOV  R26,R16
00415c d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
00415d 3204      	CPI  R16,36
00415e f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
00415f 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
004160 2de5      	MOV  R30,R5
004161 9453      	INC  R5
004162 e0f0      	LDI  R31,0
004163 59e1      	SUBI R30,LOW(-_rxPackage3)
004164 4ff2      	SBCI R31,HIGH(-_rxPackage3)
004165 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
004166 e4e0      	LDI  R30,LOW(64)
004167 165e      	CP   R5,R30
004168 f008      	BRLO _0x4003E
004169 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
00416a 3203      	CPI  R16,35
00416b f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
00416c 2de5      	MOV  R30,R5
00416d 50e1      	SUBI R30,LOW(1)
00416e 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
00416f 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
004170 e0e1      	LDI  R30,LOW(1)
004171 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
004173 9109      	LD   R16,Y+
004174 9119      	LD   R17,Y+
004175 91e9      	LD   R30,Y+
004176 bfef      	OUT  SREG,R30
004177 91e9      	LD   R30,Y+
004178 bfec      	OUT  EIND,R30
004179 91e9      	LD   R30,Y+
00417a bfeb      	OUT  RAMPZ,R30
00417b 91f9      	LD   R31,Y+
00417c 91e9      	LD   R30,Y+
00417d 91b9      	LD   R27,Y+
00417e 91a9      	LD   R26,Y+
00417f 9199      	LD   R25,Y+
004180 9189      	LD   R24,Y+
004181 9179      	LD   R23,Y+
004182 9169      	LD   R22,Y+
004183 90f9      	LD   R15,Y+
004184 9019      	LD   R1,Y+
004185 9009      	LD   R0,Y+
004186 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
004187 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
004188 91e0 0130 	LDS  R30,304
00418a 72e0      	ANDI R30,LOW(0x20)
00418b f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
00418c 81e8      	LD   R30,Y
00418d 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E0099:
00418f 9621      	ADIW R28,1
004190 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
004191 93ba      	ST   -Y,R27
004192 93aa      	ST   -Y,R26
004193 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
004194 e010      	LDI  R17,0
004195 81eb      	LDD  R30,Y+3
004196 940e c393 	CALL SUBOPT_0x2B
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
004198 f429      	BRNE _0x40046
004199 81a9      	LDD  R26,Y+1
00419a 81ba      	LDD  R27,Y+1+1
00419b 940e be4c 	CALL _puts
                 ; 0002 0100                 break;
00419d c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
00419e 30e1      	CPI  R30,LOW(0x1)
00419f e0a0      	LDI  R26,HIGH(0x1)
0041a0 07fa      	CPC  R31,R26
0041a1 f431      	BRNE _0x40047
                 _0x40048:
0041a2 940e c5f5 	CALL SUBOPT_0x84
0041a4 f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
0041a5 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
0041a6 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
0041a7 c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
0041a8 30e2      	CPI  R30,LOW(0x2)
0041a9 e0a0      	LDI  R26,HIGH(0x2)
0041aa 07fa      	CPC  R31,R26
0041ab f449      	BRNE _0x4004B
                 _0x4004C:
0041ac 940e c5f5 	CALL SUBOPT_0x84
0041ae f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
0041af 940e c5fd 	CALL SUBOPT_0x85
0041b1 df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
0041b2 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
0041b3 cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
0041b4 c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
0041b5 30e3      	CPI  R30,LOW(0x3)
0041b6 e0a0      	LDI  R26,HIGH(0x3)
0041b7 07fa      	CPC  R31,R26
0041b8 f441      	BRNE _0x40045
                 _0x40050:
0041b9 940e c5f5 	CALL SUBOPT_0x84
0041bb f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
0041bc 940e c5fd 	CALL SUBOPT_0x85
0041be dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
0041bf 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
0041c0 cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
0041c1 8118      	LDD  R17,Y+0
0041c2 940c 44f5 	JMP  _0x20E0096
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
0041c4 e0e0      	LDI  R30,LOW(0)
0041c5 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
0041c7 e9e8      	LDI  R30,LOW(152)
0041c8 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
0041ca e0e6      	LDI  R30,LOW(6)
0041cb 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
0041cd e0e0      	LDI  R30,LOW(0)
0041ce 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
0041d0 e3e3      	LDI  R30,LOW(51)
0041d1 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
0041d3 e0e0      	LDI  R30,LOW(0)
0041d4 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
0041d6 e9e8      	LDI  R30,LOW(152)
0041d7 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
0041d9 e0e6      	LDI  R30,LOW(6)
0041da 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
0041dc e0e0      	LDI  R30,LOW(0)
0041dd 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
0041df e0ec      	LDI  R30,LOW(12)
0041e0 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
0041e2 e0e0      	LDI  R30,LOW(0)
0041e3 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
0041e5 e9e8      	LDI  R30,LOW(152)
0041e6 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
0041e8 e0e6      	LDI  R30,LOW(6)
0041e9 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
0041eb e0e0      	LDI  R30,LOW(0)
0041ec 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
0041ee e0ec      	LDI  R30,LOW(12)
0041ef 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
0041f1 e0e0      	LDI  R30,LOW(0)
0041f2 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
0041f4 e9e8      	LDI  R30,LOW(152)
0041f5 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
0041f7 e0e6      	LDI  R30,LOW(6)
0041f8 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
0041fa e0e0      	LDI  R30,LOW(0)
0041fb 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
0041fd e0ec      	LDI  R30,LOW(12)
0041fe 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
004200 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
004201 940e c604 	CALL SUBOPT_0x86
                 ;	keeper -> Y+0
004203 f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
004204 efef      	LDI  R30,LOW(65535)
004205 efff      	LDI  R31,HIGH(65535)
004206 940c 44f5 	JMP  _0x20E0096
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
004208 940e c60b 	CALL SUBOPT_0x87
00420a 940e c60e 	CALL SUBOPT_0x88
00420c 940e e470 	CALL __CPD21
00420e f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
00420f e0e0      	LDI  R30,LOW(0)
004210 e0f0      	LDI  R31,HIGH(0)
004211 940c 44f5 	JMP  _0x20E0096
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
004213 e0e1      	LDI  R30,LOW(1)
004214 e0f0      	LDI  R31,HIGH(1)
004215 940c 44f5 	JMP  _0x20E0096
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
004217 940e e405 	CALL __PUTPARD2
004219 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
00421a 940e c617 	CALL SUBOPT_0x89
00421c 940e e459 	CALL __CPD10
00421e f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
00421f e0e4     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
004220 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
004221 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
004222 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
004223 940e c274 	CALL SUBOPT_0x3
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
004225 85a8      	LDD  R26,Y+8
004226 85b9      	LDD  R27,Y+8+1
004227 940e c369 	CALL SUBOPT_0x25
004229 940e e3db 	CALL __PUTDP1
                 ; 0003 0030         return -1;
00422b efef      	LDI  R30,LOW(65535)
00422c efff      	LDI  R31,HIGH(65535)
00422d c02c      	RJMP _0x20E0098
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
00422e 940e c617 	CALL SUBOPT_0x89
004230 940e c60e 	CALL SUBOPT_0x88
004232 940e c61c 	CALL SUBOPT_0x8A
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
004234 940e c60b 	CALL SUBOPT_0x87
004236 85a8      	LDD  R26,Y+8
004237 85b9      	LDD  R27,Y+8+1
004238 940e e3db 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
00423a 940e c621 	CALL SUBOPT_0x8B
00423c 940e c62a 	CALL SUBOPT_0x8C
00423e 940e e46b 	CALL __CPD12
004240 f0b8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
004241 e2e7     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
004242 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
004243 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
004244 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
004245 940e e400 	CALL __PUTPARD1
004247 940e c621 	CALL SUBOPT_0x8B
004249 940e c62d 	CALL SUBOPT_0x8D
00424b 940e c62d 	CALL SUBOPT_0x8D
00424d 940e e400 	CALL __PUTPARD1
00424f 940e c52b 	CALL SUBOPT_0x66
                 ; 0003 0039         *keeper = 0;
004251 85a8      	LDD  R26,Y+8
004252 85b9      	LDD  R27,Y+8+1
004253 940e c634 	CALL SUBOPT_0x8E
                 ; 0003 003A         return -1;
004255 efef      	LDI  R30,LOW(65535)
004256 efff      	LDI  R31,HIGH(65535)
004257 c002      	RJMP _0x20E0098
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
004258 e0e0      	LDI  R30,LOW(0)
004259 e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0098:
00425a 962a      	ADIW R28,10
00425b 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
00425c 940e c63b 	CALL SUBOPT_0x8F
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
00425e e6ea     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
00425f e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
004260 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
004261 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
004262 940e c274 	CALL SUBOPT_0x3
                 ; 0003 004B     return;
004264 c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
004265 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
004266 e6e4      	LDI  R30,LOW(100)
004267 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
004268 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
004269 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
00426a 940e c64d 	CALL SUBOPT_0x90
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
00426c c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
00426d 940e c63b 	CALL SUBOPT_0x8F
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
00426f ebe2      	LDI  R30,LOW(178)
004270 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
004272 940e acdc 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
004274 91e9      	LD   R30,Y+
004275 bfef      	OUT  SREG,R30
004276 91e9      	LD   R30,Y+
004277 bfec      	OUT  EIND,R30
004278 91e9      	LD   R30,Y+
004279 bfeb      	OUT  RAMPZ,R30
00427a 91f9      	LD   R31,Y+
00427b 91e9      	LD   R30,Y+
00427c 91b9      	LD   R27,Y+
00427d 91a9      	LD   R26,Y+
00427e 9199      	LD   R25,Y+
00427f 9189      	LD   R24,Y+
004280 9179      	LD   R23,Y+
004281 9169      	LD   R22,Y+
004282 90f9      	LD   R15,Y+
004283 9019      	LD   R1,Y+
004284 9009      	LD   R0,Y+
004285 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
004286 936a      	ST   -Y,R22
004287 937a      	ST   -Y,R23
004288 93aa      	ST   -Y,R26
004289 93ba      	ST   -Y,R27
00428a 93ea      	ST   -Y,R30
00428b 93fa      	ST   -Y,R31
00428c b7ef      	IN   R30,SREG
00428d 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
00428e 940e c654 	CALL SUBOPT_0x91
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
004290 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
004291 e7a7      	LDI  R26,LOW(_baseCounter)
004292 e1b3      	LDI  R27,HIGH(_baseCounter)
004293 940e c65b 	CALL SUBOPT_0x92
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
004295 e3a0      	LDI  R26,LOW(_raw_rtc)
004296 e1b4      	LDI  R27,HIGH(_raw_rtc)
004297 940e c65b 	CALL SUBOPT_0x92
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
004299 91e9      	LD   R30,Y+
00429a bfef      	OUT  SREG,R30
00429b 91f9      	LD   R31,Y+
00429c 91e9      	LD   R30,Y+
00429d 91b9      	LD   R27,Y+
00429e 91a9      	LD   R26,Y+
00429f 9179      	LD   R23,Y+
0042a0 9169      	LD   R22,Y+
0042a1 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
0042a2 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
0042a3 940e c664 	CALL SUBOPT_0x93
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
0042a5 9bf4      	SBIS 0x1E,4
0042a6 c002      	RJMP _0x6000D
0042a7 98f4      	CBI  0x1E,4
0042a8 c001      	RJMP _0x6000E
                 _0x6000D:
0042a9 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
0042aa 9bf3      	SBIS 0x1E,3
0042ab c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
0042ac 9bf4      	SBIS 0x1E,4
0042ad c002      	RJMP _0x60010
0042ae 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
0042af c001      	RJMP _0x60013
                 _0x60010:
0042b0 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
0042b1 c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
0042b2 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
0042b3 91e9      	LD   R30,Y+
0042b4 9518      	RETI
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 0095 {
                 _init_timer:
                 ; 0003 0096 
                 ; 0003 0097     // Timer/Counter 0 initialization
                 ; 0003 0098     // Clock source: System Clock
                 ; 0003 0099     // Clock value: 7.813 kHz
                 ; 0003 009A     // Mode: Normal top=0xFF
                 ; 0003 009B     // OC0A output: Disconnected
                 ; 0003 009C     // OC0B output: Disconnected
                 ; 0003 009D     TCCR0A=0x00;
0042b5 e0e0      	LDI  R30,LOW(0)
0042b6 bde4      	OUT  0x24,R30
                 ; 0003 009E     TCCR0B=0x05;
0042b7 e0e5      	LDI  R30,LOW(5)
0042b8 bde5      	OUT  0x25,R30
                 ; 0003 009F     TCNT0=0x64;
0042b9 e6e4      	LDI  R30,LOW(100)
0042ba bde6      	OUT  0x26,R30
                 ; 0003 00A0     OCR0A=0x00;
0042bb e0e0      	LDI  R30,LOW(0)
0042bc bde7      	OUT  0x27,R30
                 ; 0003 00A1     OCR0B=0x00;
0042bd bde8      	OUT  0x28,R30
                 ; 0003 00A2 
                 ; 0003 00A3     // Timer/Counter 1 initialization
                 ; 0003 00A4     // Clock source: System Clock
                 ; 0003 00A5     // Clock value: 7.813 kHz
                 ; 0003 00A6     // Mode: Normal top=0xFFFF
                 ; 0003 00A7     // OC1A output: Discon.
                 ; 0003 00A8     // OC1B output: Discon.
                 ; 0003 00A9     // OC1C output: Discon.
                 ; 0003 00AA     // Noise Canceler: Off
                 ; 0003 00AB     // Input Capture on Falling Edge
                 ; 0003 00AC     // Timer1 Overflow Interrupt: On
                 ; 0003 00AD     // Input Capture Interrupt: Off
                 ; 0003 00AE     // Compare A Match Interrupt: Off
                 ; 0003 00AF     // Compare B Match Interrupt: Off
                 ; 0003 00B0     // Compare C Match Interrupt: Off
                 ; 0003 00B1     TCCR1A=0x00;
0042be 93e0 0080 	STS  128,R30
                 ; 0003 00B2     TCCR1B=0x05;
0042c0 e0e5      	LDI  R30,LOW(5)
0042c1 93e0 0081 	STS  129,R30
                 ; 0003 00B3     //TCNT1H=0xFF;
                 ; 0003 00B4     //TCNT1L=0x64;
                 ; 0003 00B5     TCNT1H=0xFE;
0042c3 940e c64d 	CALL SUBOPT_0x90
                 ; 0003 00B6     TCNT1L=0x79;
                 ; 0003 00B7     ICR1H=0x00;
0042c5 e0e0      	LDI  R30,LOW(0)
0042c6 93e0 0087 	STS  135,R30
                 ; 0003 00B8     ICR1L=0x00;
0042c8 93e0 0086 	STS  134,R30
                 ; 0003 00B9     OCR1AH=0x00;
0042ca 93e0 0089 	STS  137,R30
                 ; 0003 00BA     OCR1AL=0x00;
0042cc 93e0 0088 	STS  136,R30
                 ; 0003 00BB     OCR1BH=0x00;
0042ce 93e0 008b 	STS  139,R30
                 ; 0003 00BC     OCR1BL=0x00;
0042d0 93e0 008a 	STS  138,R30
                 ; 0003 00BD     OCR1CH=0x00;
0042d2 93e0 008d 	STS  141,R30
                 ; 0003 00BE     OCR1CL=0x00;
0042d4 93e0 008c 	STS  140,R30
                 ; 0003 00BF 
                 ; 0003 00C0     // Timer/Counter 2 initialization
                 ; 0003 00C1     // Clock source: System Clock
                 ; 0003 00C2     // Clock value: 7.813 kHz
                 ; 0003 00C3     // Mode: Normal top=0xFF
                 ; 0003 00C4     // OC2A output: Disconnected
                 ; 0003 00C5     // OC2B output: Disconnected
                 ; 0003 00C6     ASSR=0x00;
0042d6 93e0 00b6 	STS  182,R30
                 ; 0003 00C7     TCCR2A=0x00;
0042d8 93e0 00b0 	STS  176,R30
                 ; 0003 00C8     TCCR2B=0x07;
0042da e0e7      	LDI  R30,LOW(7)
0042db 93e0 00b1 	STS  177,R30
                 ; 0003 00C9     TCNT2=0xb2;
0042dd ebe2      	LDI  R30,LOW(178)
0042de 93e0 00b2 	STS  178,R30
                 ; 0003 00CA     OCR2A=0x00;
0042e0 e0e0      	LDI  R30,LOW(0)
0042e1 93e0 00b3 	STS  179,R30
                 ; 0003 00CB     OCR2B=0x00;
0042e3 93e0 00b4 	STS  180,R30
                 ; 0003 00CC 
                 ; 0003 00CD     // Timer/Counter 3 initialization
                 ; 0003 00CE     // Clock source: System Clock
                 ; 0003 00CF     // Clock value: 31.250 kHz
                 ; 0003 00D0     // Mode: Normal top=0xFFFF
                 ; 0003 00D1     // OC3A output: Discon.
                 ; 0003 00D2     // OC3B output: Discon.
                 ; 0003 00D3     // OC3C output: Discon.
                 ; 0003 00D4     // Noise Canceler: Off
                 ; 0003 00D5     // Input Capture on Falling Edge
                 ; 0003 00D6     // Timer3 Overflow Interrupt: On
                 ; 0003 00D7     // Input Capture Interrupt: Off
                 ; 0003 00D8     // Compare A Match Interrupt: Off
                 ; 0003 00D9     // Compare B Match Interrupt: Off
                 ; 0003 00DA     // Compare C Match Interrupt: Off
                 ; 0003 00DB     TCCR3A=0x00;
0042e5 93e0 0090 	STS  144,R30
                 ; 0003 00DC     TCCR3B=0x04;
0042e7 e0e4      	LDI  R30,LOW(4)
0042e8 93e0 0091 	STS  145,R30
                 ; 0003 00DD     TCNT3H=0x85;
0042ea 940e c654 	CALL SUBOPT_0x91
                 ; 0003 00DE     TCNT3L=0xED;
                 ; 0003 00DF     ICR3H=0x00;
0042ec e0e0      	LDI  R30,LOW(0)
0042ed 93e0 0097 	STS  151,R30
                 ; 0003 00E0     ICR3L=0x00;
0042ef 93e0 0096 	STS  150,R30
                 ; 0003 00E1     OCR3AH=0x00;
0042f1 93e0 0099 	STS  153,R30
                 ; 0003 00E2     OCR3AL=0x00;
0042f3 93e0 0098 	STS  152,R30
                 ; 0003 00E3     OCR3BH=0x00;
0042f5 93e0 009b 	STS  155,R30
                 ; 0003 00E4     OCR3BL=0x00;
0042f7 93e0 009a 	STS  154,R30
                 ; 0003 00E5     OCR3CH=0x00;
0042f9 93e0 009d 	STS  157,R30
                 ; 0003 00E6     OCR3CL=0x00;
0042fb 93e0 009c 	STS  156,R30
                 ; 0003 00E7 
                 ; 0003 00E8     // Timer/Counter 4 initialization
                 ; 0003 00E9     // Clock source: System Clock
                 ; 0003 00EA     // Clock value: 125.000 kHz
                 ; 0003 00EB     // Mode: Normal top=0xFFFF
                 ; 0003 00EC     // OC4A output: Discon.
                 ; 0003 00ED     // OC4B output: Discon.
                 ; 0003 00EE     // OC4C output: Discon.
                 ; 0003 00EF     // Noise Canceler: Off
                 ; 0003 00F0     // Input Capture on Falling Edge
                 ; 0003 00F1     // Timer4 Overflow Interrupt: On
                 ; 0003 00F2     // Input Capture Interrupt: Off
                 ; 0003 00F3     // Compare A Match Interrupt: Off
                 ; 0003 00F4     // Compare B Match Interrupt: Off
                 ; 0003 00F5     // Compare C Match Interrupt: Off
                 ; 0003 00F6     TCCR4A=0x00;
0042fd 93e0 00a0 	STS  160,R30
                 ; 0003 00F7     TCCR4B=0x03;
0042ff e0e3      	LDI  R30,LOW(3)
004300 93e0 00a1 	STS  161,R30
                 ; 0003 00F8     TCNT4H=0x85;
004302 940e c664 	CALL SUBOPT_0x93
                 ; 0003 00F9     TCNT4L=0xED;
                 ; 0003 00FA     ICR4H=0x00;
004304 e0e0      	LDI  R30,LOW(0)
004305 93e0 00a7 	STS  167,R30
                 ; 0003 00FB     ICR4L=0x00;
004307 93e0 00a6 	STS  166,R30
                 ; 0003 00FC     OCR4AH=0x00;
004309 93e0 00a9 	STS  169,R30
                 ; 0003 00FD     OCR4AL=0x00;
00430b 93e0 00a8 	STS  168,R30
                 ; 0003 00FE     OCR4BH=0x00;
00430d 93e0 00ab 	STS  171,R30
                 ; 0003 00FF     OCR4BL=0x00;
00430f 93e0 00aa 	STS  170,R30
                 ; 0003 0100     OCR4CH=0x00;
004311 93e0 00ad 	STS  173,R30
                 ; 0003 0101     OCR4CL=0x00;
004313 93e0 00ac 	STS  172,R30
                 ; 0003 0102 
                 ; 0003 0103     // Timer/Counter 5 initialization
                 ; 0003 0104     // Clock source: System Clock
                 ; 0003 0105     // Clock value: Timer5 Stopped
                 ; 0003 0106     // Mode: Normal top=0xFFFF
                 ; 0003 0107     // OC5A output: Discon.
                 ; 0003 0108     // OC5B output: Discon.
                 ; 0003 0109     // OC5C output: Discon.
                 ; 0003 010A     // Noise Canceler: Off
                 ; 0003 010B     // Input Capture on Falling Edge
                 ; 0003 010C     // Timer5 Overflow Interrupt: Off
                 ; 0003 010D     // Input Capture Interrupt: Off
                 ; 0003 010E     // Compare A Match Interrupt: Off
                 ; 0003 010F     // Compare B Match Interrupt: Off
                 ; 0003 0110     // Compare C Match Interrupt: Off
                 ; 0003 0111     TCCR5A=0x00;
004315 93e0 0120 	STS  288,R30
                 ; 0003 0112     TCCR5B=0x00;
004317 93e0 0121 	STS  289,R30
                 ; 0003 0113     TCNT5H=0x00;
004319 93e0 0125 	STS  293,R30
                 ; 0003 0114     TCNT5L=0x00;
00431b 93e0 0124 	STS  292,R30
                 ; 0003 0115     ICR5H=0x00;
00431d 93e0 0127 	STS  295,R30
                 ; 0003 0116     ICR5L=0x00;
00431f 93e0 0126 	STS  294,R30
                 ; 0003 0117     OCR5AH=0x00;
004321 93e0 0129 	STS  297,R30
                 ; 0003 0118     OCR5AL=0x00;
004323 93e0 0128 	STS  296,R30
                 ; 0003 0119     OCR5BH=0x00;
004325 93e0 012b 	STS  299,R30
                 ; 0003 011A     OCR5BL=0x00;
004327 93e0 012a 	STS  298,R30
                 ; 0003 011B     OCR5CH=0x00;
004329 93e0 012d 	STS  301,R30
                 ; 0003 011C     OCR5CL=0x00;
00432b 93e0 012c 	STS  300,R30
                 ; 0003 011D 
                 ; 0003 011E     // Watchdog Timer initialization
                 ; 0003 011F     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0120     // Watchdog Timer interrupt: On
                 ; 0003 0121     #pragma optsize-
                 ; 0003 0122     #asm("wdr")
00432d 95a8      	wdr
                 ; 0003 0123     WDTCSR=0x79;
00432e e7e9      	LDI  R30,LOW(121)
00432f 93e0 0060 	STS  96,R30
                 ; 0003 0124     WDTCSR=0x69;
004331 e6e9      	LDI  R30,LOW(105)
004332 93e0 0060 	STS  96,R30
                 ; 0003 0125 
                 ; 0003 0126     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 0127     #pragma optsize+
                 ; 0003 0128     #endif
                 ; 0003 0129 
                 ; 0003 012A 
                 ; 0003 012B     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 012C     TIMSK0=0x00;
004334 e0e0      	LDI  R30,LOW(0)
004335 93e0 006e 	STS  110,R30
                 ; 0003 012D 
                 ; 0003 012E     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 012F     TIMSK1=0x00;
004337 93e0 006f 	STS  111,R30
                 ; 0003 0130 
                 ; 0003 0131     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0132     TIMSK2=0x00;
004339 93e0 0070 	STS  112,R30
                 ; 0003 0133 
                 ; 0003 0134     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0135     TIMSK3=0x00;
00433b 93e0 0071 	STS  113,R30
                 ; 0003 0136 
                 ; 0003 0137     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0138     TIMSK4=0x00;
00433d 93e0 0072 	STS  114,R30
                 ; 0003 0139 
                 ; 0003 013A     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 013B     TIMSK5=0x00;
00433f 93e0 0073 	STS  115,R30
                 ; 0003 013C }
004341 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 013F {
                 _enable_interrupt:
                 ; 0003 0140 
                 ; 0003 0141     // -------------- enable timer ---------------  //
                 ; 0003 0142 
                 ; 0003 0143     switch(ch){
004342 940e c66b 	CALL SUBOPT_0x94
                 ;	ch -> Y+0
                 ; 0003 0144         case 0: // Timer/Counter 0 Interrupt(s) initialization
004344 9730      	SBIW R30,0
004345 f0f9      	BREQ _0x6001B
                 ; 0003 0145                 //TIMSK0=0x01;
                 ; 0003 0146                 break;
                 ; 0003 0147         case 1: // Timer/Counter 1 Interrupt(s) initialization
004346 30e1      	CPI  R30,LOW(0x1)
004347 e0a0      	LDI  R26,HIGH(0x1)
004348 07fa      	CPC  R31,R26
004349 f421      	BRNE _0x6001D
                 ; 0003 0148                 TIMSK1=0x01;
00434a e0e1      	LDI  R30,LOW(1)
00434b 93e0 006f 	STS  111,R30
                 ; 0003 0149                 break;
00434d c017      	RJMP _0x6001B
                 ; 0003 014A         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
00434e 30e2      	CPI  R30,LOW(0x2)
00434f e0a0      	LDI  R26,HIGH(0x2)
004350 07fa      	CPC  R31,R26
004351 f421      	BRNE _0x6001E
                 ; 0003 014B                 TIMSK2=0x01;
004352 e0e1      	LDI  R30,LOW(1)
004353 93e0 0070 	STS  112,R30
                 ; 0003 014C                 break;
004355 c00f      	RJMP _0x6001B
                 ; 0003 014D         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
004356 30e3      	CPI  R30,LOW(0x3)
004357 e0a0      	LDI  R26,HIGH(0x3)
004358 07fa      	CPC  R31,R26
004359 f421      	BRNE _0x6001F
                 ; 0003 014E                 TIMSK3=0x01;
00435a e0e1      	LDI  R30,LOW(1)
00435b 93e0 0071 	STS  113,R30
                 ; 0003 014F                 break;
00435d c007      	RJMP _0x6001B
                 ; 0003 0150         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
00435e 30e4      	CPI  R30,LOW(0x4)
00435f e0a0      	LDI  R26,HIGH(0x4)
004360 07fa      	CPC  R31,R26
004361 f419      	BRNE _0x6001B
                 ; 0003 0151                 TIMSK4=0x01;
004362 e0e1      	LDI  R30,LOW(1)
004363 93e0 0072 	STS  114,R30
                 ; 0003 0152                 break;
                 ; 0003 0153     }
                 _0x6001B:
                 ; 0003 0154     // Global enable interrupts
                 ; 0003 0155     #asm("sei")
004365 9478      	sei
                 ; 0003 0156 }
004366 9622      	ADIW R28,2
004367 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0159 {
                 ; 0003 015A 
                 ; 0003 015B     // -------------- enable timer ---------------  //
                 ; 0003 015C 
                 ; 0003 015D     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 015E         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 015F                 //TIMSK0=0x00;
                 ; 0003 0160                 break;
                 ; 0003 0161         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0162                 TIMSK1=0x00;
                 ; 0003 0163                 break;
                 ; 0003 0164         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0165                 TIMSK2=0x00;
                 ; 0003 0166                 break;
                 ; 0003 0167         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0168                 TIMSK3=0x00;
                 ; 0003 0169                 break;
                 ; 0003 016A         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 016B                 TIMSK4=0x00;
                 ; 0003 016C                 break;
                 ; 0003 016D     }
                 ; 0003 016E     // Global enable interrupts
                 ; 0003 016F     #asm("sei")
                 ; 0003 0170 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
004368 e0e0      	LDI  R30,LOW(0)
004369 b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
00436a e0e4      	LDI  R30,LOW(4)
00436b b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
00436c efef      	LDI  R30,LOW(255)
00436d b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
00436e efe7      	LDI  R30,LOW(247)
00436f b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
004370 ece0      	LDI  R30,LOW(192)
004371 b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
004372 e0e0      	LDI  R30,LOW(0)
004373 b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
004374 e8e0      	LDI  R30,LOW(128)
004375 b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
004376 e0e0      	LDI  R30,LOW(0)
004377 b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
004378 efec      	LDI  R30,LOW(252)
004379 b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
00437a b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
00437b e0e0      	LDI  R30,LOW(0)
00437c bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
00437d bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
00437e e3e0      	LDI  R30,LOW(48)
00437f bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
004380 bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
004381 efe8      	LDI  R30,LOW(248)
004382 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
004384 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
004386 e8e0      	LDI  R30,LOW(128)
004387 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
004389 e0e0      	LDI  R30,LOW(0)
00438a 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00438c 940e c3a4 	CALL SUBOPT_0x2E
00438e f021      	BREQ _0x80005
00438f 940e c3a4 	CALL SUBOPT_0x2E
004391 30e3      	CPI  R30,LOW(0x3)
004392 f409      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054 
                 ; 0004 0055         //PORTK=0x90;
                 ; 0004 0056         //DDRK=0x0E;
                 ; 0004 0057 
                 ; 0004 0058         /*bongkot edit*/
                 ; 0004 0059         PORTK=0x80;
004393 c007      	RJMP _0x8003D
                 ; 0004 005A         DDRK=0x00;
                 ; 0004 005B     }
                 ; 0004 005C     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
004394 940e c670 	CALL SUBOPT_0x95
004396 f021      	BREQ _0x80009
004397 940e c3a4 	CALL SUBOPT_0x2E
004399 30e2      	CPI  R30,LOW(0x2)
00439a f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 005D         // Port K initialization
                 ; 0004 005E         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005F         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0060         PORTK=0x80;
                 _0x8003D:
00439b e8e0      	LDI  R30,LOW(128)
00439c 93e0 0108 	STS  264,R30
                 ; 0004 0061         DDRK=0x00;
00439e e0e0      	LDI  R30,LOW(0)
00439f 93e0 0107 	STS  263,R30
                 ; 0004 0062     }
                 ; 0004 0063 
                 ; 0004 0064     // Port L initialization
                 ; 0004 0065     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0066     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0067     PORTL=0x00;
                 _0x80008:
0043a1 e0e0      	LDI  R30,LOW(0)
0043a2 93e0 010b 	STS  267,R30
                 ; 0004 0068     DDRL=0x00;
0043a4 93e0 010a 	STS  266,R30
                 ; 0004 0069 
                 ; 0004 006A }
0043a6 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 006D {
                 _IO_dout:
                 ; 0004 006E     switch(ch){
0043a7 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
0043a8 81e9      	LDD  R30,Y+1
0043a9 81fa      	LDD  R31,Y+1+1
                 ; 0004 006F         case 0  :   DOUT1       =   !state;
0043aa 9730      	SBIW R30,0
0043ab f451      	BRNE _0x8000E
0043ac 81e8      	LD   R30,Y
0043ad 30e0      	CPI  R30,0
0043ae f011      	BREQ _0x8000F
0043af 9873      	CBI  0xE,3
0043b0 c001      	RJMP _0x80010
                 _0x8000F:
0043b1 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 0070                     d_out[0]    =   state;
0043b2 81e8      	LD   R30,Y
0043b3 93e0 1434 	STS  _d_out,R30
                 ; 0004 0071                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 0072                     break;
0043b5 c00d      	RJMP _0x8000D
                 ; 0004 0073         case 1  :   DOUT2       =   !state;
                 _0x8000E:
0043b6 30e1      	CPI  R30,LOW(0x1)
0043b7 e0a0      	LDI  R26,HIGH(0x1)
0043b8 07fa      	CPC  R31,R26
0043b9 f449      	BRNE _0x80014
0043ba 81e8      	LD   R30,Y
0043bb 30e0      	CPI  R30,0
0043bc f011      	BREQ _0x80012
0043bd 9874      	CBI  0xE,4
0043be c001      	RJMP _0x80013
                 _0x80012:
0043bf 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 0074                     d_out[1]    =   state;
0043c0 81e8      	LD   R30,Y
                +
0043c1 93e0 1435+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0075                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0076                     break;
                 ; 0004 0077         default :   break;
                 _0x80014:
                 ; 0004 0078     }
                 _0x8000D:
                 ; 0004 0079 }
0043c3 9623      	ADIW R28,3
0043c4 9508      	RET
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 007C {
                 _IO_keyCheck:
                 ; 0004 007D     static char flag_hold_MODE   = 0;
                 ; 0004 007E     static char flag_hold_UP     = 0;
                 ; 0004 007F     static char flag_hold_DOWN   = 0;
                 ; 0004 0080     static char flag_hold_OK     = 0;
                 ; 0004 0081 
                 ; 0004 0082     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
0043c5 940e c67d 	CALL SUBOPT_0x96
0043c7 f421      	BRNE _0x80016
0043c8 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
0043ca 30e0      	CPI  R30,0
0043cb f009      	BREQ _0x80017
                 _0x80016:
0043cc c00f      	RJMP _0x80015
                 _0x80017:
                 ; 0004 0083     {
                 ; 0004 0084         delay_ms(KEY_DELAY);
0043cd 940e c684 	CALL SUBOPT_0x97
                 ; 0004 0085 
                 ; 0004 0086         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
0043cf 940e c67d 	CALL SUBOPT_0x96
0043d1 f421      	BRNE _0x80019
0043d2 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
0043d4 30e0      	CPI  R30,0
0043d5 f009      	BREQ _0x8001A
                 _0x80019:
0043d6 c004      	RJMP _0x80018
                 _0x8001A:
                 ; 0004 0087         {
                 ; 0004 0088             flag_hold_MODE = 1;
0043d7 e0e1      	LDI  R30,LOW(1)
0043d8 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0089             return 0;
0043da c092      	RJMP _0x20E0097
                 ; 0004 008A         }
                 ; 0004 008B     }
                 _0x80018:
                 ; 0004 008C     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
0043db c013      	RJMP _0x8001B
                 _0x80015:
0043dc 940e c67d 	CALL SUBOPT_0x96
0043de f021      	BREQ _0x8001D
0043df 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
0043e1 30e0      	CPI  R30,0
0043e2 f409      	BRNE _0x8001E
                 _0x8001D:
0043e3 c00b      	RJMP _0x8001C
                 _0x8001E:
                 ; 0004 008D     {
                 ; 0004 008E         printDebug("<IO_keyCheck> key MODE\r\n");
                +
0043e4 e8ec     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
0043e5 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
0043e6 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 0 ) )
0043e7 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 0 ) )
                 	__POINTD1FN _0x80000,0
0043e8 940e c274 	CALL SUBOPT_0x3
                 ; 0004 008F         flag_hold_MODE = 0;
0043ea e0e0      	LDI  R30,LOW(0)
0043eb 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0090         return KEY_MODE;
0043ed e0e1      	LDI  R30,LOW(1)
0043ee 9508      	RET
                 ; 0004 0091     }
                 ; 0004 0092 
                 ; 0004 0093     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 _0x8001C:
                 _0x8001B:
0043ef 940e c688 	CALL SUBOPT_0x98
0043f1 f421      	BRNE _0x80020
0043f2 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0043f4 30e0      	CPI  R30,0
0043f5 f009      	BREQ _0x80021
                 _0x80020:
0043f6 c00f      	RJMP _0x8001F
                 _0x80021:
                 ; 0004 0094     {
                 ; 0004 0095         delay_ms(KEY_DELAY);
0043f7 940e c684 	CALL SUBOPT_0x97
                 ; 0004 0096 
                 ; 0004 0097         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
0043f9 940e c688 	CALL SUBOPT_0x98
0043fb f421      	BRNE _0x80023
0043fc 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
0043fe 30e0      	CPI  R30,0
0043ff f009      	BREQ _0x80024
                 _0x80023:
004400 c004      	RJMP _0x80022
                 _0x80024:
                 ; 0004 0098         {
                 ; 0004 0099             flag_hold_UP = 1;
004401 e0e1      	LDI  R30,LOW(1)
004402 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 009A             return 0;
004404 c068      	RJMP _0x20E0097
                 ; 0004 009B         }
                 ; 0004 009C     }
                 _0x80022:
                 ; 0004 009D     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
004405 c013      	RJMP _0x80025
                 _0x8001F:
004406 940e c688 	CALL SUBOPT_0x98
004408 f021      	BREQ _0x80027
004409 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
00440b 30e0      	CPI  R30,0
00440c f409      	BRNE _0x80028
                 _0x80027:
00440d c00b      	RJMP _0x80026
                 _0x80028:
                 ; 0004 009E     {
                 ; 0004 009F         printDebug("<IO_keyCheck> key UP\r\n");
                +
00440e eae5     +LDI R30 , LOW ( 2 * _0x80000 + ( 25 ) )
00440f e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 25 ) )
004410 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 25 ) )
004411 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 25 ) )
                 	__POINTD1FN _0x80000,25
004412 940e c274 	CALL SUBOPT_0x3
                 ; 0004 00A0         flag_hold_UP = 0;
004414 e0e0      	LDI  R30,LOW(0)
004415 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 00A1         return KEY_UP;
004417 e0e2      	LDI  R30,LOW(2)
004418 9508      	RET
                 ; 0004 00A2     }
                 ; 0004 00A3 
                 ; 0004 00A4     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 _0x80026:
                 _0x80025:
004419 940e c691 	CALL SUBOPT_0x99
00441b f421      	BRNE _0x8002A
00441c 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
00441e 30e0      	CPI  R30,0
00441f f009      	BREQ _0x8002B
                 _0x8002A:
004420 c00f      	RJMP _0x80029
                 _0x8002B:
                 ; 0004 00A5     {
                 ; 0004 00A6         delay_ms(KEY_DELAY);
004421 940e c684 	CALL SUBOPT_0x97
                 ; 0004 00A7 
                 ; 0004 00A8         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
004423 940e c691 	CALL SUBOPT_0x99
004425 f421      	BRNE _0x8002D
004426 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004428 30e0      	CPI  R30,0
004429 f009      	BREQ _0x8002E
                 _0x8002D:
00442a c004      	RJMP _0x8002C
                 _0x8002E:
                 ; 0004 00A9         {
                 ; 0004 00AA             flag_hold_DOWN = 1;
00442b e0e1      	LDI  R30,LOW(1)
00442c 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00AB             return 0;
00442e c03e      	RJMP _0x20E0097
                 ; 0004 00AC         }
                 ; 0004 00AD     }
                 _0x8002C:
                 ; 0004 00AE     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
00442f c013      	RJMP _0x8002F
                 _0x80029:
004430 940e c691 	CALL SUBOPT_0x99
004432 f021      	BREQ _0x80031
004433 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004435 30e0      	CPI  R30,0
004436 f409      	BRNE _0x80032
                 _0x80031:
004437 c00b      	RJMP _0x80030
                 _0x80032:
                 ; 0004 00AF     {
                 ; 0004 00B0         printDebug("<IO_keyCheck> key DOWN\r\n");
                +
004438 ebec     +LDI R30 , LOW ( 2 * _0x80000 + ( 48 ) )
004439 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 48 ) )
00443a e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 48 ) )
00443b e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 48 ) )
                 	__POINTD1FN _0x80000,48
00443c 940e c274 	CALL SUBOPT_0x3
                 ; 0004 00B1         flag_hold_DOWN = 0;
00443e e0e0      	LDI  R30,LOW(0)
00443f 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00B2         return KEY_DOWN;
004441 e0e3      	LDI  R30,LOW(3)
004442 9508      	RET
                 ; 0004 00B3     }
                 ; 0004 00B4 
                 ; 0004 00B5     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 _0x80030:
                 _0x8002F:
004443 940e c69a 	CALL SUBOPT_0x9A
004445 f421      	BRNE _0x80034
004446 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004448 30e0      	CPI  R30,0
004449 f009      	BREQ _0x80035
                 _0x80034:
00444a c00f      	RJMP _0x80033
                 _0x80035:
                 ; 0004 00B6     {
                 ; 0004 00B7         delay_ms(KEY_DELAY);
00444b 940e c684 	CALL SUBOPT_0x97
                 ; 0004 00B8 
                 ; 0004 00B9         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
00444d 940e c69a 	CALL SUBOPT_0x9A
00444f f421      	BRNE _0x80037
004450 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004452 30e0      	CPI  R30,0
004453 f009      	BREQ _0x80038
                 _0x80037:
004454 c004      	RJMP _0x80036
                 _0x80038:
                 ; 0004 00BA         {
                 ; 0004 00BB             flag_hold_OK = 1;
004455 e0e1      	LDI  R30,LOW(1)
004456 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00BC             return 0;
004458 c014      	RJMP _0x20E0097
                 ; 0004 00BD         }
                 ; 0004 00BE     }
                 _0x80036:
                 ; 0004 00BF     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
004459 c013      	RJMP _0x80039
                 _0x80033:
00445a 940e c69a 	CALL SUBOPT_0x9A
00445c f021      	BREQ _0x8003B
00445d 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
00445f 30e0      	CPI  R30,0
004460 f409      	BRNE _0x8003C
                 _0x8003B:
004461 c00b      	RJMP _0x8003A
                 _0x8003C:
                 ; 0004 00C0     {
                 ; 0004 00C1         printDebug("<IO_keyCheck> key OK\r\n");
                +
004462 ede5     +LDI R30 , LOW ( 2 * _0x80000 + ( 73 ) )
004463 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 73 ) )
004464 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 73 ) )
004465 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 73 ) )
                 	__POINTD1FN _0x80000,73
004466 940e c274 	CALL SUBOPT_0x3
                 ; 0004 00C2         flag_hold_OK = 0;
004468 e0e0      	LDI  R30,LOW(0)
004469 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00C3         return KEY_OK;
00446b e0e4      	LDI  R30,LOW(4)
00446c 9508      	RET
                 ; 0004 00C4     }
                 ; 0004 00C5 
                 ; 0004 00C6     return 0;
                 _0x8003A:
                 _0x80039:
                 _0x20E0097:
00446d e0e0      	LDI  R30,LOW(0)
00446e 9508      	RET
                 ; 0004 00C7 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     char refADC;
                 ; 0005 0012     unsigned int adc_data = 0x0000;
                 ; 0005 0013      if(TEMP_SEL == TEMP_TYPE_K){
00446f 93aa      	ST   -Y,R26
004470 940e e477 	CALL __SAVELOCR4
                 ;	adc_input -> Y+4
                 ;	refADC -> R17
                 ;	adc_data -> R18,R19
                +
004472 e020     +LDI R18 , LOW ( 0 )
004473 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
004474 940e c3a4 	CALL SUBOPT_0x2E
004476 f411      	BRNE _0xA0003
                 ; 0005 0014           refADC = ADC_VREF3_3_TYPE;
004477 e410      	LDI  R17,LOW(64)
                 ; 0005 0015      }else if(TEMP_SEL == TEMP_TMEC){
004478 c005      	RJMP _0xA0004
                 _0xA0003:
004479 940e c3a4 	CALL SUBOPT_0x2E
00447b 30e1      	CPI  R30,LOW(0x1)
00447c f409      	BRNE _0xA0005
                 ; 0005 0016           refADC = ADC_VREF_TYPE;
00447d ec10      	LDI  R17,LOW(192)
                 ; 0005 0017      }
                 ; 0005 0018     //ADMUX  &= ADC_VREF_TYPE;
                 ; 0005 0019     ADMUX  &= refADC;
                 _0xA0005:
                 _0xA0004:
00447e e7ac      	LDI  R26,LOW(124)
00447f e0b0      	LDI  R27,HIGH(124)
004480 91ec      	LD   R30,X
004481 23e1      	AND  R30,R17
004482 93ec      	ST   X,R30
                 ; 0005 001A     ADCSRB &= 0xf7;
004483 91e0 007b 	LDS  R30,123
004485 7fe7      	ANDI R30,0XF7
004486 93e0 007b 	STS  123,R30
                 ; 0005 001B 
                 ; 0005 001C    // ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
                 ; 0005 001D     ADMUX  |= (adc_input & 0x07) | (refADC & 0xff);
004488 2e1a      	MOV  R1,R26
004489 900c      	LD   R0,X
00448a 81ec      	LDD  R30,Y+4
00448b 70e7      	ANDI R30,LOW(0x7)
00448c 2fae      	MOV  R26,R30
00448d 2fe1      	MOV  R30,R17
00448e 2bea      	OR   R30,R26
00448f 29e0      	OR   R30,R0
004490 2da1      	MOV  R26,R1
004491 93ec      	ST   X,R30
                 ; 0005 001E 
                 ; 0005 001F     if(adc_input > 7)
004492 81ac      	LDD  R26,Y+4
004493 30a8      	CPI  R26,LOW(0x8)
004494 f020      	BRLO _0xA0006
                 ; 0005 0020     {
                 ; 0005 0021         ADCSRB |= 0x08;
004495 91e0 007b 	LDS  R30,123
004497 60e8      	ORI  R30,8
004498 c003      	RJMP _0xA0023
                 ; 0005 0022     }
                 ; 0005 0023     else
                 _0xA0006:
                 ; 0005 0024     {
                 ; 0005 0025         ADCSRB &= 0xf7;
004499 91e0 007b 	LDS  R30,123
00449b 7fe7      	ANDI R30,0XF7
                 _0xA0023:
00449c 93e0 007b 	STS  123,R30
                 ; 0005 0026     }
                 ; 0005 0027 
                 ; 0005 0028     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0029     //delay_us(20);
                 ; 0005 002A     delay_us(4);
                +
00449e e08b     +LDI R24 , LOW ( 11 )
                +__DELAY_USB_LOOP :
00449f 958a     +DEC R24
0044a0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 11
                 ; 0005 002B 
                 ; 0005 002C     // Start the AD conversion
                 ; 0005 002D     ADCSRA  |= 0x80; //ENABLE ADC
0044a1 91e0 007a 	LDS  R30,122
0044a3 68e0      	ORI  R30,0x80
0044a4 93e0 007a 	STS  122,R30
                 ; 0005 002E     ADCSRA  |= 0x40;
0044a6 91e0 007a 	LDS  R30,122
0044a8 64e0      	ORI  R30,0x40
0044a9 93e0 007a 	STS  122,R30
                 ; 0005 002F 
                 ; 0005 0030     // Wait for the AD conversion to complete
                 ; 0005 0031     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 0032     while ( (ADCSRA & 0x10)==0);
                 _0xA0008:
0044ab 91e0 007a 	LDS  R30,122
0044ad 71e0      	ANDI R30,LOW(0x10)
0044ae f3e1      	BREQ _0xA0008
                 ; 0005 0033     adc_data = ADCL;
0044af 9120 0078 	LDS  R18,120
0044b1 2733      	CLR  R19
                 ; 0005 0034     adc_data |= (ADCH & 0x00ff) << 8;
0044b2 91e0 0079 	LDS  R30,121
0044b4 940e c6a3 	CALL SUBOPT_0x9B
0044b6 2ffe      	MOV  R31,R30
0044b7 e0e0      	LDI  R30,0
                +
0044b8 2b2e     +OR R18 , R30
0044b9 2b3f     +OR R19 , R31
                 	__ORWRR 18,19,30,31
                 ; 0005 0035 
                 ; 0005 0036     ADCSRA  |=0x10;
0044ba 91e0 007a 	LDS  R30,122
0044bc 61e0      	ORI  R30,0x10
0044bd 93e0 007a 	STS  122,R30
                 ; 0005 0037 
                 ; 0005 0038     //delay_us(50);
                 ; 0005 0039 
                 ; 0005 003A     return adc_data;
0044bf 01f9      	MOVW R30,R18
0044c0 940e e47e 	CALL __LOADLOCR4
0044c2 9625      	ADIW R28,5
0044c3 9508      	RET
                 ; 0005 003B }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 003E {
                 ; 0005 003F     static int      i = 0;
                 ; 0005 0040     static char     batt_read_flag = 0;
                 ; 0005 0041 
                 ; 0005 0042     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 0043         /*
                 ; 0005 0044         printDebug("<%d>",i);
                 ; 0005 0045         SENSOR_SELECT(i);
                 ; 0005 0046         delay_ms(20);
                 ; 0005 0047         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0048         if(++i >= 5){   i = 0;  }
                 ; 0005 0049         */
                 ; 0005 004A     }
                 ; 0005 004B     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 004C //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 004D //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 004E //        }
                 ; 0005 004F     }
                 ; 0005 0050 
                 ; 0005 0051 //    if(++batt_read_flag > 25){
                 ; 0005 0052 //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 0053 //        batt_read_flag = 0;
                 ; 0005 0054 //    }
                 ; 0005 0055 
                 ; 0005 0056     return 0;
                 ; 0005 0057 }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 005A {
                 _readBattery:
                 ; 0005 005B     float   vBATT;
                 ; 0005 005C 
                 ; 0005 005D     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
0044c4 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
0044c5 940e c6a6 	CALL SUBOPT_0x9C
                +
0044c7 e6e6     +LDI R30 , LOW ( 0x411E6666 )
0044c8 e6f6     +LDI R31 , HIGH ( 0x411E6666 )
0044c9 e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
0044ca e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
0044cb 940e e1a1 	CALL __MULF12
0044cd 937f      	PUSH R23
0044ce 936f      	PUSH R22
0044cf 93ff      	PUSH R31
0044d0 93ef      	PUSH R30
0044d1 e0ae      	LDI  R26,LOW(14)
0044d2 df9c      	RCALL _read_adc
0044d3 940e c6af 	CALL SUBOPT_0x9D
0044d5 940e c6b4 	CALL SUBOPT_0x9E
0044d7 91af      	POP  R26
0044d8 91bf      	POP  R27
0044d9 918f      	POP  R24
0044da 919f      	POP  R25
0044db 940e c6bb 	CALL SUBOPT_0x9F
0044dd 93e0 14e8 	STS  _adcBatt,R30
0044df 93f0 14e9 	STS  _adcBatt+1,R31
0044e1 9360 14ea 	STS  _adcBatt+2,R22
0044e3 9370 14eb 	STS  _adcBatt+3,R23
                 ; 0005 005E 
                 ; 0005 005F     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
0044e5 940e c3c2 	CALL SUBOPT_0x32
0044e7 940e c6a6 	CALL SUBOPT_0x9C
0044e9 940e e1a1 	CALL __MULF12
                +
0044eb e6a6     +LDI R26 , LOW ( 0x3FE66666 )
0044ec e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
0044ed ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
0044ee e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
0044ef 940e e1a1 	CALL __MULF12
0044f1 940e c6c6 	CALL SUBOPT_0xA0
                 ; 0005 0060     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 0061 
                 ; 0005 0062     return vBATT;
0044f3 940e c60b 	CALL SUBOPT_0x87
                 _0x20E0096:
0044f5 9624      	ADIW R28,4
0044f6 9508      	RET
                 ; 0005 0063 }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 0066 {
                 _adc_init_read:
                 ; 0005 0067     int i;
                 ; 0005 0068     printDebug("Initializing ADC.. ");
0044f7 931a      	ST   -Y,R17
0044f8 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
0044f9 eeec     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
0044fa e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
0044fb e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
0044fc e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
0044fd 940e c274 	CALL SUBOPT_0x3
                 ; 0005 0069 
                 ; 0005 006A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0044ff 940e c3a4 	CALL SUBOPT_0x2E
004501 f021      	BREQ _0xA0013
004502 940e c3a4 	CALL SUBOPT_0x2E
004504 30e3      	CPI  R30,LOW(0x3)
004505 f4e1      	BRNE _0xA0012
                 _0xA0013:
                 ; 0005 006B         for(i=0;i<5;i++){ \
                 ; 0005 006C             SENSOR_SELECT(i);
                +
004506 e000     +LDI R16 , LOW ( 0 )
004507 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0016:
                +
004508 3005     +CPI R16 , LOW ( 5 )
004509 e0e0     +LDI R30 , HIGH ( 5 )
00450a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00450b f4ac      	BRGE _0xA0017
00450c 940e c6c9 	CALL SUBOPT_0xA1
00450e 2fe0      	MOV  R30,R16
00450f 940e c6d3 	CALL SUBOPT_0xA2
                 ; 0005 006D             delay_ms(20);
                 ; 0005 006E             adcData[i] = read_adc(8);
004511 01f8      	MOVW R30,R16
004512 940e c3bd 	CALL SUBOPT_0x31
004514 0fea      	ADD  R30,R26
004515 1ffb      	ADC  R31,R27
004516 93ff      	PUSH R31
004517 93ef      	PUSH R30
004518 e0a8      	LDI  R26,LOW(8)
004519 df55      	RCALL _read_adc
00451a 91af      	POP  R26
00451b 91bf      	POP  R27
00451c 940e c6db 	CALL SUBOPT_0xA3
                 ; 0005 006F         }
                +
00451e 5f0f     +SUBI R16 , LOW ( - 1 )
00451f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004520 cfe7      	RJMP _0xA0016
                 _0xA0017:
                 ; 0005 0070     }
                 ; 0005 0071     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
004521 c025      	RJMP _0xA0018
                 _0xA0012:
004522 940e c670 	CALL SUBOPT_0x95
004524 f021      	BREQ _0xA001A
004525 940e c3a4 	CALL SUBOPT_0x2E
004527 30e2      	CPI  R30,LOW(0x2)
004528 f4f1      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0072         adcData[0] = read_adc(8);
004529 e0a8      	LDI  R26,LOW(8)
00452a df44      	RCALL _read_adc
00452b e3a6      	LDI  R26,LOW(_adcData)
00452c e1b4      	LDI  R27,HIGH(_adcData)
00452d 940e c6db 	CALL SUBOPT_0xA3
                 ; 0005 0073         adcData[1] = read_adc(9);
00452f e0a9      	LDI  R26,LOW(9)
004530 df3e      	RCALL _read_adc
                +
004531 e3aa     +LDI R26 , LOW ( _adcData + ( 4 ) )
004532 e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
004533 940e c6db 	CALL SUBOPT_0xA3
                 ; 0005 0074         adcData[2] = read_adc(10);
004535 e0aa      	LDI  R26,LOW(10)
004536 df38      	RCALL _read_adc
                +
004537 e3ae     +LDI R26 , LOW ( _adcData + ( 8 ) )
004538 e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
004539 940e c6db 	CALL SUBOPT_0xA3
                 ; 0005 0075         adcData[3] = read_adc(11);
00453b e0ab      	LDI  R26,LOW(11)
00453c df32      	RCALL _read_adc
                +
00453d e4a2     +LDI R26 , LOW ( _adcData + ( 12 ) )
00453e e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
00453f 940e c6db 	CALL SUBOPT_0xA3
                 ; 0005 0076         adcData[4] = read_adc(12);
004541 e0ac      	LDI  R26,LOW(12)
004542 df2c      	RCALL _read_adc
                +
004543 e4a6     +LDI R26 , LOW ( _adcData + ( 16 ) )
004544 e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
004545 940e c6db 	CALL SUBOPT_0xA3
                 ; 0005 0077     }
                 ; 0005 0078 
                 ; 0005 0079     adcBatt = read_adc(14);
                 _0xA0019:
                 _0xA0018:
004547 e0ae      	LDI  R26,LOW(14)
004548 df26      	RCALL _read_adc
004549 eea8      	LDI  R26,LOW(_adcBatt)
00454a e1b4      	LDI  R27,HIGH(_adcBatt)
00454b 940e c6db 	CALL SUBOPT_0xA3
                 ; 0005 007A 
                 ; 0005 007B     printDebug("OK\r\n");
                +
00454d e0e0     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
00454e e1f2     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
00454f e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
004550 e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
004551 940e c274 	CALL SUBOPT_0x3
                 ; 0005 007C }
004553 9109      	LD   R16,Y+
004554 9119      	LD   R17,Y+
004555 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 007F {
                 _init_adc:
                 ; 0005 0080     char refADC;
                 ; 0005 0081     // ADC initialization
                 ; 0005 0082     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 0083     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 0084     // ADC Auto Trigger Source: Free Running
                 ; 0005 0085     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 0086     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 0087     DIDR0=0x00;
004556 931a      	ST   -Y,R17
                 ;	refADC -> R17
004557 e0e0      	LDI  R30,LOW(0)
004558 93e0 007e 	STS  126,R30
                 ; 0005 0088 
                 ; 0005 0089 
                 ; 0005 008A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00455a 940e c3a4 	CALL SUBOPT_0x2E
00455c f021      	BREQ _0xA001D
00455d 940e c3a4 	CALL SUBOPT_0x2E
00455f 30e3      	CPI  R30,LOW(0x3)
004560 f441      	BRNE _0xA001C
                 _0xA001D:
                 ; 0005 008B         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 008C         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 008D         DIDR2=0x61;
004561 e6e1      	LDI  R30,LOW(97)
004562 93e0 007d 	STS  125,R30
                 ; 0005 008E 
                 ; 0005 008F         /*bongkot edit resigter*/
                 ; 0005 0090         DIDR2=0x7F;
004564 e7ef      	LDI  R30,LOW(127)
004565 93e0 007d 	STS  125,R30
                 ; 0005 0091         refADC = ADC_VREF3_3_TYPE;
004567 e410      	LDI  R17,LOW(64)
                 ; 0005 0092         //ADMUX   = 0x40;     //3.3v reference
                 ; 0005 0093     }
                 ; 0005 0094     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
004568 c00b      	RJMP _0xA001F
                 _0xA001C:
004569 940e c670 	CALL SUBOPT_0x95
00456b f021      	BREQ _0xA0021
00456c 940e c3a4 	CALL SUBOPT_0x2E
00456e 30e2      	CPI  R30,LOW(0x2)
00456f f421      	BRNE _0xA0020
                 _0xA0021:
                 ; 0005 0095         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0096         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0097         DIDR2=0x7F;
004570 e7ef      	LDI  R30,LOW(127)
004571 93e0 007d 	STS  125,R30
                 ; 0005 0098        // ADMUX   = ADC_VREF_TYPE;
                 ; 0005 0099         refADC = ADC_VREF_TYPE;
004573 ec10      	LDI  R17,LOW(192)
                 ; 0005 009A     }
                 ; 0005 009B 
                 ; 0005 009C 
                 ; 0005 009D     //ADMUX   = ADC_VREF_TYPE;
                 ; 0005 009E     ADMUX   = refADC;
                 _0xA0020:
                 _0xA001F:
004574 9310 007c 	STS  124,R17
                 ; 0005 009F     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 00A0               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 00A1               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 00A2               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 00A3               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 00A4               (1<<2) |          //-----
                 ; 0005 00A5               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 00A6               (0<<0);           //-----
004576 e8e6      	LDI  R30,LOW(134)
004577 93e0 007a 	STS  122,R30
                 ; 0005 00A7 
                 ; 0005 00A8     ADCSRB  = 0;
004579 e0e0      	LDI  R30,LOW(0)
00457a 93e0 007b 	STS  123,R30
                 ; 0005 00A9 
                 ; 0005 00AA     //adc_init_read();
                 ; 0005 00AB }
00457c 9119      	LD   R17,Y+
00457d 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
00457e 94f8      	cli
                 ; 0006 000E     i2c_start();
00457f 940e c6df 	CALL SUBOPT_0xA4
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
004581 e0a5      	LDI  R26,LOW(5)
004582 940e e089 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
004584 eaa6      	LDI  R26,LOW(166)
004585 940e c6e4 	CALL SUBOPT_0xA5
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
004587 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
004588 940e c6e8 	CALL SUBOPT_0xA6
                 ; 0006 0017 
                 ; 0006 0018     return 0;
00458a 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
00458b 9724      	SBIW R28,4
00458c 940e e477 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
00458e 94f8      	cli
                 ; 0006 0021     i2c_start();
00458f 940e c6df 	CALL SUBOPT_0xA4
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
004591 e0a0      	LDI  R26,LOW(0)
004592 940e e089 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
004594 940e e055 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
004596 eda1      	LDI  R26,LOW(209)
004597 940e e089 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
004599 e0a1      	LDI  R26,LOW(1)
00459a 940e e06e 	CALL _i2c_read
00459c 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
00459d e0a1      	LDI  R26,LOW(1)
00459e 940e e06e 	CALL _i2c_read
0045a0 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
0045a1 e0a1      	LDI  R26,LOW(1)
0045a2 940e e06e 	CALL _i2c_read
0045a4 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
0045a5 e0a0      	LDI  R26,LOW(0)
0045a6 940e e06e 	CALL _i2c_read
0045a8 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
0045a9 940e e064 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
0045ab 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
0045ac 2fe2      	MOV  R30,R18
0045ad 27ff      	CLR  R31
0045ae 2766      	CLR  R22
0045af 2777      	CLR  R23
0045b0 940e c6ef 	CALL SUBOPT_0xA7
                 ; 0006 002E     z <<= 8;
0045b2 940e c6f4 	CALL SUBOPT_0xA8
0045b4 940e c6f9 	CALL SUBOPT_0xA9
                 ; 0006 002F     z += rtc_reg3;
0045b6 2fe3      	MOV  R30,R19
0045b7 940e c6fd 	CALL SUBOPT_0xAA
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
0045b9 2fe0      	MOV  R30,R16
0045ba 940e c6fd 	CALL SUBOPT_0xAA
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
0045bc 940e c706 	CALL SUBOPT_0xAB
0045be 940e c6f4 	CALL SUBOPT_0xA8
0045c0 940e c709 	CALL SUBOPT_0xAC
0045c2 940e c70e 	CALL SUBOPT_0xAD
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
0045c4 940e e47e 	CALL __LOADLOCR4
0045c6 9628      	ADIW R28,8
0045c7 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
0045c8 93ba      	ST   -Y,R27
0045c9 93aa      	ST   -Y,R26
0045ca 97a8      	SBIW R28,40
0045cb e08c      	LDI  R24,12
0045cc e1ac      	LDI  R26,LOW(28)
0045cd e0b0      	LDI  R27,HIGH(28)
0045ce e0e6      	LDI  R30,LOW(_0xC0003*2)
0045cf e1f2      	LDI  R31,HIGH(_0xC0003*2)
0045d0 e060      	LDI  R22,BYTE3(_0xC0003*2)
0045d1 940e e483 	CALL __INITLOCB
0045d3 931a      	ST   -Y,R17
0045d4 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
0045d5 940e c710 	CALL SUBOPT_0xAE
0045d7 940e c715 	CALL SUBOPT_0xAF
0045d9 940e c71c 	CALL SUBOPT_0xB0
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
0045db 940e c721 	CALL SUBOPT_0xB1
0045dd 940e c710 	CALL SUBOPT_0xAE
0045df 940e e267 	CALL __SUBD21
                +
0045e1 87aa     +STD Y + 10 , R26
0045e2 87bb     +STD Y + 10 + 1 , R27
0045e3 878c     +STD Y + 10 + 2 , R24
0045e4 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
0045e5 940e c4dc 	CALL SUBOPT_0x59
0045e7 940e c715 	CALL SUBOPT_0xAF
0045e9 940e c728 	CALL SUBOPT_0xB2
                 ; 0006 0044     min = j - (60 * n);
0045eb 940e c72d 	CALL SUBOPT_0xB3
0045ed 940e c721 	CALL SUBOPT_0xB1
0045ef 940e c4dc 	CALL SUBOPT_0x59
0045f1 940e e267 	CALL __SUBD21
                +
0045f3 87ae     +STD Y + 14 , R26
0045f4 87bf     +STD Y + 14 + 1 , R27
0045f5 8b88     +STD Y + 14 + 2 , R24
0045f6 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
0045f7 940e c732 	CALL SUBOPT_0xB4
                +
0045f9 e1e8     +LDI R30 , LOW ( 0x18 )
0045fa e0f0     +LDI R31 , HIGH ( 0x18 )
0045fb e060     +LDI R22 , BYTE3 ( 0x18 )
0045fc e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
0045fd 940e e354 	CALL __DIVD21U
0045ff 940e c71c 	CALL SUBOPT_0xB0
                 ; 0006 0046     hrs = n - (24 * j);
                +
004601 e1a8     +LDI R26 , LOW ( 0x18 )
004602 e0b0     +LDI R27 , HIGH ( 0x18 )
004603 e080     +LDI R24 , BYTE3 ( 0x18 )
004604 e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
004605 940e e2fe 	CALL __MULD12U
004607 940e c732 	CALL SUBOPT_0xB4
004609 940e e267 	CALL __SUBD21
                +
00460b 8baa     +STD Y + 18 , R26
00460c 8bbb     +STD Y + 18 + 1 , R27
00460d 8b8c     +STD Y + 18 + 2 , R24
00460e 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
00460f 940e c737 	CALL SUBOPT_0xB5
                +
004611 52e5     +SUBI R30 , LOW ( - 731 )
004612 4ffd     +SBCI R31 , HIGH ( - 731 )
004613 4f6f     +SBCI R22 , BYTE3 ( - 731 )
004614 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
004615 940e c73c 	CALL SUBOPT_0xB6
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
004617 940e c4dc 	CALL SUBOPT_0x59
                +
004619 e0e7     +LDI R30 , LOW ( 0x7 )
00461a e0f0     +LDI R31 , HIGH ( 0x7 )
00461b e060     +LDI R22 , BYTE3 ( 0x7 )
00461c e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
00461d 940e e39b 	CALL __MODD21U
00461f 9631      	ADIW R30,1
004620 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
004621 940e c741 	CALL SUBOPT_0xB7
004623 940e e354 	CALL __DIVD21U
004625 940e c747 	CALL SUBOPT_0xB8
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
004627 940e c741 	CALL SUBOPT_0xB7
004629 940e e39b 	CALL __MODD21U
                +
00462b 8fea     +STD Y + 26 , R30
00462c 8ffb     +STD Y + 26 + 1 , R31
00462d 8f6c     +STD Y + 26 + 2 , R22
00462e 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
00462f 940e c74c 	CALL SUBOPT_0xB9
004631 940e c751 	CALL SUBOPT_0xBA
004633 f030      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
004634 940e c759 	CALL SUBOPT_0xBB
004636 940e c75e 	CALL SUBOPT_0xBC
004638 940e c747 	CALL SUBOPT_0xB8
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
00463a 940e c763 	CALL SUBOPT_0xBD
00463c 940e c737 	CALL SUBOPT_0xB5
00463e 940e e262 	CALL __SUBD12
004640 01df      	MOVW R26,R30
004641 01cb      	MOVW R24,R22
                +
004642 e6ed     +LDI R30 , LOW ( 0x16D )
004643 e0f1     +LDI R31 , HIGH ( 0x16D )
004644 e060     +LDI R22 , BYTE3 ( 0x16D )
004645 e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
004646 940e e354 	CALL __DIVD21U
                +
004648 a3ee     +STD Y + 38 , R30
004649 a3ff     +STD Y + 38 + 1 , R31
00464a a768     +STD Y + 38 + 2 , R22
00464b a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
00464c 940e c768 	CALL SUBOPT_0xBE
00464e 940e c76d 	CALL SUBOPT_0xBF
004650 940e c4dc 	CALL SUBOPT_0x59
004652 940e c774 	CALL SUBOPT_0xC0
004654 940e c763 	CALL SUBOPT_0xBD
004656 940e e262 	CALL __SUBD12
004658 940e c779 	CALL SUBOPT_0xC1
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
00465a 940e c74c 	CALL SUBOPT_0xB9
                +
00465c 36ae     +CPI R26 , LOW ( 0x16E )
00465d e0e1     +LDI R30 , HIGH ( 0x16E )
00465e 07be     +CPC R27 , R30
00465f e0e0     +LDI R30 , BYTE3 ( 0x16E )
004660 078e     +CPC R24 , R30
004661 e0e0     +LDI R30 , BYTE4 ( 0x16E )
004662 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
004663 f428      	BRSH _0xC0006
004664 940e c74c 	CALL SUBOPT_0xB9
004666 940e c751 	CALL SUBOPT_0xBA
004668 f408      	BRSH _0xC0007
                 _0xC0006:
004669 c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
00466a 940e c77e 	CALL SUBOPT_0xC2
00466c 940e c75e 	CALL SUBOPT_0xBC
00466e 940e c779 	CALL SUBOPT_0xC1
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
004670 940e c768 	CALL SUBOPT_0xBE
                +
004672 55e0     +SUBI R30 , LOW ( - 1968 )
004673 4ff8     +SBCI R31 , HIGH ( - 1968 )
004674 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
004675 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
004676 a3ee     +STD Y + 38 , R30
004677 a3ff     +STD Y + 38 + 1 , R31
004678 a768     +STD Y + 38 + 2 , R22
004679 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
00467a e0ec     +LDI R30 , LOW ( 0xC )
00467b e0f0     +LDI R31 , HIGH ( 0xC )
00467c e060     +LDI R22 , BYTE3 ( 0xC )
00467d e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
00467e a3ea     +STD Y + 34 , R30
00467f a3fb     +STD Y + 34 + 1 , R31
004680 a36c     +STD Y + 34 + 2 , R22
004681 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
004682 a1aa     +LDD R26 , Y + 34
004683 a1bb     +LDD R27 , Y + 34 + 1
004684 a18c     +LDD R24 , Y + 34 + 2
004685 a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
004686 940e e465 	CALL __CPD02
004688 f010      	BRLO PC+3
004689 940c 4716 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
00468b 940e c783 	CALL SUBOPT_0xC3
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
00468d 940e c788 	CALL SUBOPT_0xC4
00468f f431      	BRNE _0xC000E
004690 e0e0      	LDI  R30,LOW(0)
                +
004691 8fea     +STD Y + 26 , R30
004692 8feb     +STD Y + 26 + 1 , R30
004693 8fec     +STD Y + 26 + 2 , R30
004694 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
004695 c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
004696 940e c790 	CALL SUBOPT_0xC5
004698 f429      	BRNE _0xC000F
                +
004699 e1ef     +LDI R30 , LOW ( 0x1F )
00469a e0f0     +LDI R31 , HIGH ( 0x1F )
00469b e060     +LDI R22 , BYTE3 ( 0x1F )
00469c e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
00469d c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
00469e 940e c798 	CALL SUBOPT_0xC6
0046a0 f429      	BRNE _0xC0010
                +
0046a1 e3eb     +LDI R30 , LOW ( 0x3B )
0046a2 e0f0     +LDI R31 , HIGH ( 0x3B )
0046a3 e060     +LDI R22 , BYTE3 ( 0x3B )
0046a4 e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
0046a5 c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
0046a6 940e c7a0 	CALL SUBOPT_0xC7
0046a8 f429      	BRNE _0xC0011
                +
0046a9 e5ea     +LDI R30 , LOW ( 0x5A )
0046aa e0f0     +LDI R31 , HIGH ( 0x5A )
0046ab e060     +LDI R22 , BYTE3 ( 0x5A )
0046ac e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
0046ad c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
0046ae 940e c7a8 	CALL SUBOPT_0xC8
0046b0 f429      	BRNE _0xC0012
                +
0046b1 e7e8     +LDI R30 , LOW ( 0x78 )
0046b2 e0f0     +LDI R31 , HIGH ( 0x78 )
0046b3 e060     +LDI R22 , BYTE3 ( 0x78 )
0046b4 e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
0046b5 c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
0046b6 940e c7b0 	CALL SUBOPT_0xC9
0046b8 f429      	BRNE _0xC0013
                +
0046b9 e9e7     +LDI R30 , LOW ( 0x97 )
0046ba e0f0     +LDI R31 , HIGH ( 0x97 )
0046bb e060     +LDI R22 , BYTE3 ( 0x97 )
0046bc e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
0046bd c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
0046be 940e c7b8 	CALL SUBOPT_0xCA
0046c0 f429      	BRNE _0xC0014
                +
0046c1 ebe5     +LDI R30 , LOW ( 0xB5 )
0046c2 e0f0     +LDI R31 , HIGH ( 0xB5 )
0046c3 e060     +LDI R22 , BYTE3 ( 0xB5 )
0046c4 e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
0046c5 c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
0046c6 940e c7c0 	CALL SUBOPT_0xCB
0046c8 f429      	BRNE _0xC0015
                +
0046c9 ede4     +LDI R30 , LOW ( 0xD4 )
0046ca e0f0     +LDI R31 , HIGH ( 0xD4 )
0046cb e060     +LDI R22 , BYTE3 ( 0xD4 )
0046cc e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
0046cd c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
0046ce 940e c7c8 	CALL SUBOPT_0xCC
0046d0 f429      	BRNE _0xC0016
                +
0046d1 efe3     +LDI R30 , LOW ( 0xF3 )
0046d2 e0f0     +LDI R31 , HIGH ( 0xF3 )
0046d3 e060     +LDI R22 , BYTE3 ( 0xF3 )
0046d4 e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
0046d5 c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
0046d6 940e c7d0 	CALL SUBOPT_0xCD
0046d8 f429      	BRNE _0xC0017
                +
0046d9 e1e1     +LDI R30 , LOW ( 0x111 )
0046da e0f1     +LDI R31 , HIGH ( 0x111 )
0046db e060     +LDI R22 , BYTE3 ( 0x111 )
0046dc e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
0046dd c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
0046de 940e c7d8 	CALL SUBOPT_0xCE
0046e0 f429      	BRNE _0xC0018
                +
0046e1 e3e0     +LDI R30 , LOW ( 0x130 )
0046e2 e0f1     +LDI R31 , HIGH ( 0x130 )
0046e3 e060     +LDI R22 , BYTE3 ( 0x130 )
0046e4 e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
0046e5 c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
0046e6 940e c7e0 	CALL SUBOPT_0xCF
0046e8 f441      	BRNE _0xC000D
                +
0046e9 e4ee     +LDI R30 , LOW ( 0x14E )
0046ea e0f1     +LDI R31 , HIGH ( 0x14E )
0046eb e060     +LDI R22 , BYTE3 ( 0x14E )
0046ec e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
0046ed 8fea     +STD Y + 26 , R30
0046ee 8ffb     +STD Y + 26 + 1 , R31
0046ef 8f6c     +STD Y + 26 + 2 , R22
0046f0 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
0046f1 a1aa     +LDD R26 , Y + 34
0046f2 a1bb     +LDD R27 , Y + 34 + 1
0046f3 a18c     +LDD R24 , Y + 34 + 2
0046f4 a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
0046f5 940e c7e8 	CALL SUBOPT_0xD0
0046f7 f020      	BRLO _0xC001B
0046f8 940e c768 	CALL SUBOPT_0xBE
0046fa 70e3      	ANDI R30,LOW(0x3)
0046fb f009      	BREQ _0xC001C
                 _0xC001B:
0046fc c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
0046fd 940e c7f0 	CALL SUBOPT_0xD1
0046ff 940e c75e 	CALL SUBOPT_0xBC
                +
004701 8fea     +STD Y + 26 , R30
004702 8ffb     +STD Y + 26 + 1 , R31
004703 8f6c     +STD Y + 26 + 2 , R22
004704 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
004705 940e c7f0 	CALL SUBOPT_0xD1
004707 940e c7f5 	CALL SUBOPT_0xD2
004709 940e e470 	CALL __CPD21
00470b f450      	BRSH _0xC000A
                 ; 0006 0074     }
00470c 940e c783 	CALL SUBOPT_0xC3
00470e 9731      	SBIW R30,1
00470f 4060      	SBCI R22,0
004710 4070      	SBCI R23,0
                +
004711 a3ea     +STD Y + 34 , R30
004712 a3fb     +STD Y + 34 + 1 , R31
004713 a36c     +STD Y + 34 + 2 , R22
004714 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
004715 cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
004716 940e c74c 	CALL SUBOPT_0xB9
004718 940e c77e 	CALL SUBOPT_0xC2
00471a 940e e262 	CALL __SUBD12
00471c 940e c7fa 	CALL SUBOPT_0xD3
00471e 940e c747 	CALL SUBOPT_0xB8
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
004720 940e c768 	CALL SUBOPT_0xBE
004722 a5aa      	LDD  R26,Y+42
004723 a5bb      	LDD  R27,Y+42+1
004724 940e e3db 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
004726 940e c783 	CALL SUBOPT_0xC3
                +
004728 a5aa     +LDD R26 , Y + 42
004729 a5bb     +LDD R27 , Y + 42 + 1
00472a 9614     +ADIW R26 , 4
00472b 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
00472d 940e c759 	CALL SUBOPT_0xBB
                +
00472f a5aa     +LDD R26 , Y + 42
004730 a5bb     +LDD R27 , Y + 42 + 1
004731 9618     +ADIW R26 , 8
004732 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
004734 940e c7ff 	CALL SUBOPT_0xD4
                +
004736 a5aa     +LDD R26 , Y + 42
004737 a5bb     +LDD R27 , Y + 42 + 1
004738 961c     +ADIW R26 , 12
004739 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
00473b 940e c503 	CALL SUBOPT_0x60
                +
00473d a5aa     +LDD R26 , Y + 42
00473e a5bb     +LDD R27 , Y + 42 + 1
00473f 9650     +ADIW R26 , 16
004740 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
004742 940e c804 	CALL SUBOPT_0xD5
                +
004744 a5aa     +LDD R26 , Y + 42
004745 a5bb     +LDD R27 , Y + 42 + 1
004746 9654     +ADIW R26 , 20
004747 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
004749 01f8      	MOVW R30,R16
                +
00474a a5aa     +LDD R26 , Y + 42
00474b a5bb     +LDD R27 , Y + 42 + 1
00474c 9658     +ADIW R26 , 24
00474d 93ed     +ST X + , R30
00474e 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
00474f 940e c809 	CALL SUBOPT_0xD6
004751 96e0      	ADIW R28,48
004752 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
004753 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
004754 940e c617 	CALL SUBOPT_0x89
                +
004756 5be2     +SUBI R30 , LOW ( 1970 )
004757 40f7     +SBCI R31 , HIGH ( 1970 )
004758 4060     +SBCI R22 , BYTE3 ( 1970 )
004759 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
00475a 940e c76d 	CALL SUBOPT_0xBF
00475c 940e c6c6 	CALL SUBOPT_0xA0
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
00475e 940e c617 	CALL SUBOPT_0x89
                +
004760 5be1     +SUBI R30 , LOW ( 1969 )
004761 40f7     +SBCI R31 , HIGH ( 1969 )
004762 4060     +SBCI R22 , BYTE3 ( 1969 )
004763 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
004764 940e e2be 	CALL __LSRD1
004766 940e e2be 	CALL __LSRD1
004768 940e c80e 	CALL SUBOPT_0xD7
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
00476a 940e c810 	CALL SUBOPT_0xD8
00476c 940e c7e8 	CALL SUBOPT_0xD0
00476e f018      	BRLO _0xC001F
00476f 81ec      	LDD  R30,Y+4
004770 70e3      	ANDI R30,LOW(0x3)
004771 f009      	BREQ _0xC0020
                 _0xC001F:
004772 c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
004773 940e c60b 	CALL SUBOPT_0x87
004775 940e c75e 	CALL SUBOPT_0xBC
004777 940e c6c6 	CALL SUBOPT_0xA0
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
004779 940e c491 	CALL SUBOPT_0x4F
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
00477b 940e c788 	CALL SUBOPT_0xC4
00477d f419      	BRNE _0xC0024
00477e 940e c60b 	CALL SUBOPT_0x87
004780 c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
004781 940e c790 	CALL SUBOPT_0xC5
004783 f439      	BRNE _0xC0025
004784 940e c60b 	CALL SUBOPT_0x87
                +
004786 5ee1     +SUBI R30 , LOW ( - 31 )
004787 4fff     +SBCI R31 , HIGH ( - 31 )
004788 4f6f     +SBCI R22 , BYTE3 ( - 31 )
004789 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
00478a c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
00478b 940e c798 	CALL SUBOPT_0xC6
00478d f439      	BRNE _0xC0026
00478e 940e c60b 	CALL SUBOPT_0x87
                +
004790 5ce5     +SUBI R30 , LOW ( - 59 )
004791 4fff     +SBCI R31 , HIGH ( - 59 )
004792 4f6f     +SBCI R22 , BYTE3 ( - 59 )
004793 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
004794 c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
004795 940e c7a0 	CALL SUBOPT_0xC7
004797 f439      	BRNE _0xC0027
004798 940e c60b 	CALL SUBOPT_0x87
                +
00479a 5ae6     +SUBI R30 , LOW ( - 90 )
00479b 4fff     +SBCI R31 , HIGH ( - 90 )
00479c 4f6f     +SBCI R22 , BYTE3 ( - 90 )
00479d 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
00479e c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
00479f 940e c7a8 	CALL SUBOPT_0xC8
0047a1 f439      	BRNE _0xC0028
0047a2 940e c60b 	CALL SUBOPT_0x87
                +
0047a4 58e8     +SUBI R30 , LOW ( - 120 )
0047a5 4fff     +SBCI R31 , HIGH ( - 120 )
0047a6 4f6f     +SBCI R22 , BYTE3 ( - 120 )
0047a7 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
0047a8 c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
0047a9 940e c7b0 	CALL SUBOPT_0xC9
0047ab f439      	BRNE _0xC0029
0047ac 940e c60b 	CALL SUBOPT_0x87
                +
0047ae 56e9     +SUBI R30 , LOW ( - 151 )
0047af 4fff     +SBCI R31 , HIGH ( - 151 )
0047b0 4f6f     +SBCI R22 , BYTE3 ( - 151 )
0047b1 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
0047b2 c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
0047b3 940e c7b8 	CALL SUBOPT_0xCA
0047b5 f439      	BRNE _0xC002A
0047b6 940e c60b 	CALL SUBOPT_0x87
                +
0047b8 54eb     +SUBI R30 , LOW ( - 181 )
0047b9 4fff     +SBCI R31 , HIGH ( - 181 )
0047ba 4f6f     +SBCI R22 , BYTE3 ( - 181 )
0047bb 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
0047bc c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
0047bd 940e c7c0 	CALL SUBOPT_0xCB
0047bf f439      	BRNE _0xC002B
0047c0 940e c60b 	CALL SUBOPT_0x87
                +
0047c2 52ec     +SUBI R30 , LOW ( - 212 )
0047c3 4fff     +SBCI R31 , HIGH ( - 212 )
0047c4 4f6f     +SBCI R22 , BYTE3 ( - 212 )
0047c5 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
0047c6 c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
0047c7 940e c7c8 	CALL SUBOPT_0xCC
0047c9 f439      	BRNE _0xC002C
0047ca 940e c60b 	CALL SUBOPT_0x87
                +
0047cc 50ed     +SUBI R30 , LOW ( - 243 )
0047cd 4fff     +SBCI R31 , HIGH ( - 243 )
0047ce 4f6f     +SBCI R22 , BYTE3 ( - 243 )
0047cf 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
0047d0 c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
0047d1 940e c7d0 	CALL SUBOPT_0xCD
0047d3 f439      	BRNE _0xC002D
0047d4 940e c60b 	CALL SUBOPT_0x87
                +
0047d6 5eef     +SUBI R30 , LOW ( - 273 )
0047d7 4ffe     +SBCI R31 , HIGH ( - 273 )
0047d8 4f6f     +SBCI R22 , BYTE3 ( - 273 )
0047d9 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
0047da c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
0047db 940e c7d8 	CALL SUBOPT_0xCE
0047dd f439      	BRNE _0xC002E
0047de 940e c60b 	CALL SUBOPT_0x87
                +
0047e0 5de0     +SUBI R30 , LOW ( - 304 )
0047e1 4ffe     +SBCI R31 , HIGH ( - 304 )
0047e2 4f6f     +SBCI R22 , BYTE3 ( - 304 )
0047e3 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
0047e4 c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
0047e5 940e c7e0 	CALL SUBOPT_0xCF
0047e7 f441      	BRNE _0xC0023
0047e8 940e c60b 	CALL SUBOPT_0x87
                +
0047ea 5be2     +SUBI R30 , LOW ( - 334 )
0047eb 4ffe     +SBCI R31 , HIGH ( - 334 )
0047ec 4f6f     +SBCI R22 , BYTE3 ( - 334 )
0047ed 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
0047ee 940e e3f6 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
0047f0 940e c815 	CALL SUBOPT_0xD9
0047f2 940e c81a 	CALL SUBOPT_0xDA
0047f4 940e c80e 	CALL SUBOPT_0xD7
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
0047f6 940e c60b 	CALL SUBOPT_0x87
                +
0047f8 e8a0     +LDI R26 , LOW ( 0x15180 )
0047f9 e5b1     +LDI R27 , HIGH ( 0x15180 )
0047fa e081     +LDI R24 , BYTE3 ( 0x15180 )
0047fb e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
0047fc 940e e2fe 	CALL __MULD12U
0047fe 940e c6c6 	CALL SUBOPT_0xA0
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
004800 940e c81f 	CALL SUBOPT_0xDB
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
004802 940e c81f 	CALL SUBOPT_0xDB
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
004804 940e c827 	CALL SUBOPT_0xDC
004806 940e c721 	CALL SUBOPT_0xB1
004808 940e c80e 	CALL SUBOPT_0xD7
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
00480a 940e c82c 	CALL SUBOPT_0xDD
00480c 940e c80e 	CALL SUBOPT_0xD7
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
00480e 940e c60b 	CALL SUBOPT_0x87
004810 966e      	ADIW R28,30
004811 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
004812 940e e405 	CALL __PUTPARD2
004814 9728      	SBIW R28,8
004815 940e e477 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004817 940e c48a 	CALL SUBOPT_0x4E
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
004819 940e c831 	CALL SUBOPT_0xDE
00481b f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
00481c 940e c836 	CALL SUBOPT_0xDF
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
00481e c00b      	RJMP _0xC0031
                 _0xC0030:
00481f 940e c83b 	CALL SUBOPT_0xE0
004821 f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
004822 940e c840 	CALL SUBOPT_0xE1
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
004824 c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
004825 e0e0      	LDI  R30,LOW(0)
                +
004826 83ec     +STD Y + 4 , R30
004827 83ed     +STD Y + 4 + 1 , R30
004828 83ee     +STD Y + 4 + 2 , R30
004829 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
00482a 940e c6f4 	CALL SUBOPT_0xA8
00482c 940e e461 	CALL __CPD20
00482e f018      	BRLO _0xC0035
00482f 940e c845 	CALL SUBOPT_0xE2
004831 f008      	BRLO _0xC0036
                 _0xC0035:
004832 c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
004833 efef      	LDI  R30,LOW(65535)
004834 efff      	LDI  R31,HIGH(65535)
004835 c016      	RJMP _0x20E0095
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
004836 940e c84e 	CALL SUBOPT_0xE3
004838 940e c853 	CALL SUBOPT_0xE4
00483a 940e c52b 	CALL SUBOPT_0x66
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
00483c 940e c857 	CALL SUBOPT_0xE5
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
00483e 94f8      	cli
                 ; 0006 00D5     i2c_start();
00483f 940e c6df 	CALL SUBOPT_0xA4
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
004841 940e c868 	CALL SUBOPT_0xE6
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
004843 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
004844 e3eb     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
004845 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
004846 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
004847 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
004848 940e c274 	CALL SUBOPT_0x3
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
00484a 940e c6e8 	CALL SUBOPT_0xA6
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E0095:
00484c 940e e47e 	CALL __LOADLOCR4
00484e 9660      	ADIW R28,16
00484f 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
004850 940e c876 	CALL SUBOPT_0xE7
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004852 89a8      	LDD  R26,Y+16
004853 89b9      	LDD  R27,Y+16+1
004854 971f      	SBIW R26,15
004855 f434      	BRGE _0xC0038
004856 89a8      	LDD  R26,Y+16
004857 89b9      	LDD  R27,Y+16+1
004858 3fa4      	CPI  R26,LOW(0xFFF4)
004859 efef      	LDI  R30,HIGH(0xFFF4)
00485a 07be      	CPC  R27,R30
00485b f45c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
00485c e5e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
00485d e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
00485e e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
00485f e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
004860 940e c87c 	CALL SUBOPT_0xE8
004862 940e c881 	CALL SUBOPT_0xE9
                 ; 0006 00F0         return -2;
004864 efee      	LDI  R30,LOW(65534)
004865 efff      	LDI  R31,HIGH(65534)
004866 c049      	RJMP _0x20E0094
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
004867 01fe      	MOVW R30,R28
004868 9672      	ADIW R30,18
004869 e1aa      	LDI  R26,26
00486a 940e e40a 	CALL __PUTPARL
00486c dee6      	RCALL _date_to_binary
00486d 940e c886 	CALL SUBOPT_0xEA
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
00486f 89e8      	LDD  R30,Y+16
004870 89f9      	LDD  R31,Y+16+1
004871 940e c88b 	CALL SUBOPT_0xEB
004873 940e c88b 	CALL SUBOPT_0xEB
004875 efaf      	LDI  R26,LOW(65535)
004876 efbf      	LDI  R27,HIGH(65535)
004877 940e e324 	CALL __MULW12
004879 940e c2ba 	CALL SUBOPT_0xB
00487b 940e c709 	CALL SUBOPT_0xAC
00487d 940e c890 	CALL SUBOPT_0xEC
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
00487f 940e c892 	CALL SUBOPT_0xED
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
004881 940e c48a 	CALL SUBOPT_0x4E
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
004883 940e c831 	CALL SUBOPT_0xDE
004885 f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
004886 940e c836 	CALL SUBOPT_0xDF
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
004888 c00b      	RJMP _0xC003B
                 _0xC003A:
004889 940e c83b 	CALL SUBOPT_0xE0
00488b f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
00488c 940e c840 	CALL SUBOPT_0xE1
                 ; 0006 0100     }
                 ; 0006 0101     else{
00488e c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
00488f e0e0      	LDI  R30,LOW(0)
                +
004890 83ec     +STD Y + 4 , R30
004891 83ed     +STD Y + 4 + 1 , R30
004892 83ee     +STD Y + 4 + 2 , R30
004893 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
004894 940e c6f4 	CALL SUBOPT_0xA8
004896 940e e461 	CALL __CPD20
004898 f018      	BRLO _0xC003F
004899 940e c845 	CALL SUBOPT_0xE2
00489b f008      	BRLO _0xC0040
                 _0xC003F:
00489c c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
00489d efef      	LDI  R30,LOW(65535)
00489e efff      	LDI  R31,HIGH(65535)
00489f c010      	RJMP _0x20E0094
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
0048a0 940e c84e 	CALL SUBOPT_0xE3
0048a2 940e c853 	CALL SUBOPT_0xE4
0048a4 940e c52b 	CALL SUBOPT_0x66
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
0048a6 940e c857 	CALL SUBOPT_0xE5
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
0048a8 94f8      	cli
                 ; 0006 0113     i2c_start();
0048a9 940e c6df 	CALL SUBOPT_0xA4
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
0048ab 940e c868 	CALL SUBOPT_0xE6
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
0048ad 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
0048ae 940e c6e8 	CALL SUBOPT_0xA6
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E0094:
0048b0 940e e47e 	CALL __LOADLOCR4
0048b2 96ac      	ADIW R28,44
0048b3 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
0048b4 940e c89b 	CALL SUBOPT_0xEE
0048b6 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
0048b7 dcd3      	RCALL _DS1672_read
0048b8 940e c8a0 	CALL SUBOPT_0xEF
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
0048ba 940e c3fc 	CALL SUBOPT_0x3A
0048bc f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
0048bd e001     +LDI R16 , LOW ( 1 )
0048be e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
0048bf 91e0 1430 	LDS  R30,_raw_rtc
0048c1 91f0 1431 	LDS  R31,_raw_rtc+1
0048c3 9160 1432 	LDS  R22,_raw_rtc+2
0048c5 9170 1433 	LDS  R23,_raw_rtc+3
0048c7 940e c728 	CALL SUBOPT_0xB2
                 ; 0006 012C     }
                 ; 0006 012D     else{
0048c9 c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
0048ca e000     +LDI R16 , LOW ( 0 )
0048cb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
0048cc 940e c72d 	CALL SUBOPT_0xB3
0048ce 940e c892 	CALL SUBOPT_0xED
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
0048d0 81ee      	LDD  R30,Y+6
0048d1 81ff      	LDD  R31,Y+6+1
0048d2 940e c88b 	CALL SUBOPT_0xEB
0048d4 940e c88b 	CALL SUBOPT_0xEB
0048d6 940e c732 	CALL SUBOPT_0xB4
0048d8 940e c709 	CALL SUBOPT_0xAC
0048da 940e c728 	CALL SUBOPT_0xB2
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
0048dc 940e c8a2 	CALL SUBOPT_0xF0
0048de 85ac      	LDD  R26,Y+12
0048df 85bd      	LDD  R27,Y+12+1
0048e0 dce7      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
0048e1 01f8      	MOVW R30,R16
0048e2 8119      	LDD  R17,Y+1
0048e3 8108      	LDD  R16,Y+0
0048e4 962a      	ADIW R28,10
0048e5 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
0048e6 8de8      	LDD  R30,Y+24
0048e7 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
0048e8 30e1      	CPI  R30,LOW(0x1)
0048e9 e0a0      	LDI  R26,HIGH(0x1)
0048ea 07fa      	CPC  R31,R26
0048eb f429      	BRNE _0xC0046
                +
0048ec e8e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
0048ed e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
0048ee e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
0048ef e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
0048f0 c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
0048f1 30e2      	CPI  R30,LOW(0x2)
0048f2 e0a0      	LDI  R26,HIGH(0x2)
0048f3 07fa      	CPC  R31,R26
0048f4 f429      	BRNE _0xC0047
                +
0048f5 e8ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
0048f6 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
0048f7 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
0048f8 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
0048f9 c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
0048fa 30e3      	CPI  R30,LOW(0x3)
0048fb e0a0      	LDI  R26,HIGH(0x3)
0048fc 07fa      	CPC  R31,R26
0048fd f429      	BRNE _0xC0048
                +
0048fe e9e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
0048ff e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
004900 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
004901 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
004902 c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
004903 30e4      	CPI  R30,LOW(0x4)
004904 e0a0      	LDI  R26,HIGH(0x4)
004905 07fa      	CPC  R31,R26
004906 f429      	BRNE _0xC0049
                +
004907 e9ea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
004908 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
004909 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
00490a e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
00490b c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
00490c 30e5      	CPI  R30,LOW(0x5)
00490d e0a0      	LDI  R26,HIGH(0x5)
00490e 07fa      	CPC  R31,R26
00490f f429      	BRNE _0xC004A
                +
004910 eae0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
004911 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
004912 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
004913 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
004914 c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
004915 30e6      	CPI  R30,LOW(0x6)
004916 e0a0      	LDI  R26,HIGH(0x6)
004917 07fa      	CPC  R31,R26
004918 f429      	BRNE _0xC004B
                +
004919 eae6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
00491a e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
00491b e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
00491c e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
00491d c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
00491e 30e7      	CPI  R30,LOW(0x7)
00491f e0a0      	LDI  R26,HIGH(0x7)
004920 07fa      	CPC  R31,R26
004921 f441      	BRNE _0xC0045
                +
004922 eaec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
004923 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
004924 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
004925 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
004926 940e e400 	CALL __PUTPARD1
004928 940e c3df 	CALL SUBOPT_0x36
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
00492a ebe2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
00492b e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
00492c e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
00492d e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
00492e 940e c8a6 	CALL SUBOPT_0xF1
004930 940e c3d6 	CALL SUBOPT_0x34
004932 940e c491 	CALL SUBOPT_0x4F
004934 940e c4e6 	CALL SUBOPT_0x5B
004936 940e c8ab 	CALL SUBOPT_0xF2
004938 940e c8af 	CALL SUBOPT_0xF3
00493a 940e c8b4 	CALL SUBOPT_0xF4
00493c 940e c8bd 	CALL SUBOPT_0xF5
00493e e18c      	LDI  R24,28
00493f 940e 9ef8 	CALL _printDebug
004941 96a0      	ADIW R28,32
                 ; 0006 014F     return;
004942 c025      	RJMP _0x20E0093
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
004943 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
004944 e0e0      	LDI  R30,LOW(0)
004945 93e0 1430 	STS  _raw_rtc,R30
004947 93e0 1431 	STS  _raw_rtc+1,R30
004949 93e0 1432 	STS  _raw_rtc+2,R30
00494b 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
00494d 94f8      	cli
                 ; 0006 0159     i2c_start();
00494e 940e c6df 	CALL SUBOPT_0xA4
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
004950 e0a4      	LDI  R26,LOW(4)
004951 940e e089 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
004953 e0a0      	LDI  R26,LOW(0)
004954 940e c6e4 	CALL SUBOPT_0xA5
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
004956 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
004957 dc26      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
004958 940e c2b3 	CALL SUBOPT_0x9
00495a 940e c8c4 	CALL SUBOPT_0xF6
00495c df57      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
00495d ede6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
00495e e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
00495f e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
004960 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
004961 940e c274 	CALL SUBOPT_0x3
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
004963 01fe      	MOVW R30,R28
004964 e1aa      	LDI  R26,26
004965 940e e40a 	CALL __PUTPARL
004967 df7e      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E0093:
004968 966a      	ADIW R28,26
004969 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0021 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0022     int i;
                 ; 0007 0023 
                 ; 0007 0024     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0025 
                 ; 0007 0026     if( config_prop_flag != 0x01){
00496a 940e c5e5 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
00496c e4a2      	LDI  R26,LOW(_config_prop_flag)
00496d e0b5      	LDI  R27,HIGH(_config_prop_flag)
00496e 940e e42c 	CALL __EEPROMRDB
004970 30e1      	CPI  R30,LOW(0x1)
004971 f0a9      	BREQ _0xE000B
                 ; 0007 0027         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
004972 e1ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
004973 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
004974 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
004975 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
004976 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0028         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
004978 81ea      	LDD  R30,Y+2
004979 81fb      	LDD  R31,Y+2+1
00497a 940e c8c7 	CALL SUBOPT_0xF7
00497c 940e c8cc 	CALL SUBOPT_0xF8
00497e 940e a7d5 	CALL _memset
                 ; 0007 0029         readConfig->timeZone   = 7;
004980 81aa      	LDD  R26,Y+2
004981 81bb      	LDD  R27,Y+2+1
004982 56a0      	SUBI R26,LOW(-160)
004983 4fbf      	SBCI R27,HIGH(-160)
004984 e0e7      	LDI  R30,LOW(7)
004985 93ec      	ST   X,R30
                 ; 0007 002A     }
                 ; 0007 002B     else{
004986 c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002C 
                 ; 0007 002D         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
004987 e000     +LDI R16 , LOW ( 0 )
004988 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
004989 3104     +CPI R16 , LOW ( 20 )
00498a e0e0     +LDI R30 , HIGH ( 20 )
00498b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00498c f47c      	BRGE _0xE000F
                 ; 0007 002E         {
                 ; 0007 002F             readConfig->deviceType[i]   = config_prop.deviceType[i];
00498d 01f8      	MOVW R30,R16
00498e 81aa      	LDD  R26,Y+2
00498f 81bb      	LDD  R27,Y+2+1
004990 0fea      	ADD  R30,R26
004991 1ffb      	ADC  R31,R27
004992 010f      	MOVW R0,R30
004993 e0a0      	LDI  R26,LOW(_config_prop)
004994 e0b0      	LDI  R27,HIGH(_config_prop)
004995 940e c8cf 	CALL SUBOPT_0xF9
004997 01d0      	MOVW R26,R0
004998 93ec      	ST   X,R30
                 ; 0007 0030         }
                +
004999 5f0f     +SUBI R16 , LOW ( - 1 )
00499a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00499b cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0031 
                 ; 0007 0032         /*
                 ; 0007 0033         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0034         {
                 ; 0007 0035             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0036             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 0037         }
                 ; 0007 0038         */
                 ; 0007 0039         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
00499c 81ea      	LDD  R30,Y+2
00499d 81fb      	LDD  R31,Y+2+1
00499e 9674      	ADIW R30,20
00499f 93fa      	ST   -Y,R31
0049a0 93ea      	ST   -Y,R30
                +
0049a1 eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0049a2 e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0049a3 e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0049a4 e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
0049a5 940e e400 	CALL __PUTPARD1
0049a7 eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
0049a8 e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
0049a9 e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
0049aa 940e a828 	CALL _strlenf
0049ac 01df      	MOVW R26,R30
0049ad 940e a7a2 	CALL _memcpyf
                 ; 0007 003A 
                 ; 0007 003B         for(i=0;i<NAME_LENGTH;i++)
                +
0049af e000     +LDI R16 , LOW ( 0 )
0049b0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
0049b1 3208     +CPI R16 , LOW ( 40 )
0049b2 e0e0     +LDI R30 , HIGH ( 40 )
0049b3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
0049b4 f46c      	BRGE _0xE0012
                 ; 0007 003C         {
                 ; 0007 003D             readConfig->deviceName[i]   = config_prop.deviceName[i];
0049b5 81ea      	LDD  R30,Y+2
0049b6 81fb      	LDD  R31,Y+2+1
0049b7 96b8      	ADIW R30,40
0049b8 0fe0      	ADD  R30,R16
0049b9 1ff1      	ADC  R31,R17
0049ba 010f      	MOVW R0,R30
                +
0049bb e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
0049bc e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
0049bd 940e c8d4 	CALL SUBOPT_0xFA
                 ; 0007 003E         }
                +
0049bf 5f0f     +SUBI R16 , LOW ( - 1 )
0049c0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049c1 cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 003F 
                 ; 0007 0040         for(i=0;i<ID_LENGTH;i++)
                +
0049c2 e000     +LDI R16 , LOW ( 0 )
0049c3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
0049c4 3104     +CPI R16 , LOW ( 20 )
0049c5 e0e0     +LDI R30 , HIGH ( 20 )
0049c6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0049c7 f454      	BRGE _0xE0015
                 ; 0007 0041         {
                 ; 0007 0042             readConfig->deviceID[i]   = config_prop.deviceID[i];
0049c8 940e c8dc 	CALL SUBOPT_0xFB
0049ca 010f      	MOVW R0,R30
                +
0049cb e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
0049cc e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
0049cd 940e c8d4 	CALL SUBOPT_0xFA
                 ; 0007 0043         }
                +
0049cf 5f0f     +SUBI R16 , LOW ( - 1 )
0049d0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049d1 cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0044 
                 ; 0007 0045         for(i=0;i<NAME_LENGTH;i++)
                +
0049d2 e000     +LDI R16 , LOW ( 0 )
0049d3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
0049d4 3208     +CPI R16 , LOW ( 40 )
0049d5 e0e0     +LDI R30 , HIGH ( 40 )
0049d6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
0049d7 f454      	BRGE _0xE0018
                 ; 0007 0046         {
                 ; 0007 0047             readConfig->hostName[i]   = config_prop.hostName[i];
0049d8 940e c8e3 	CALL SUBOPT_0xFC
0049da 010f      	MOVW R0,R30
                +
0049db e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
0049dc e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
0049dd 940e c8d4 	CALL SUBOPT_0xFA
                 ; 0007 0048         }
                +
0049df 5f0f     +SUBI R16 , LOW ( - 1 )
0049e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049e1 cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 0049 
                 ; 0007 004A         for(i=0;i<ID_LENGTH;i++)
                +
0049e2 e000     +LDI R16 , LOW ( 0 )
0049e3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
0049e4 3104     +CPI R16 , LOW ( 20 )
0049e5 e0e0     +LDI R30 , HIGH ( 20 )
0049e6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0049e7 f454      	BRGE _0xE001B
                 ; 0007 004B         {
                 ; 0007 004C             readConfig->hostID[i]   = config_prop.hostID[i];
0049e8 940e c8ea 	CALL SUBOPT_0xFD
0049ea 010f      	MOVW R0,R30
                +
0049eb e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
0049ec e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
0049ed 940e c8d4 	CALL SUBOPT_0xFA
                 ; 0007 004D         }
                +
0049ef 5f0f     +SUBI R16 , LOW ( - 1 )
0049f0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049f1 cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 004E 
                 ; 0007 004F         readConfig->timeZone   = config_prop.timeZone;
                +
0049f2 eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
0049f3 e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
0049f4 940e e42c 	CALL __EEPROMRDB
                +
0049f6 81aa     +LDD R26 , Y + 2
0049f7 81bb     +LDD R27 , Y + 2 + 1
0049f8 56a0     +SUBI R26 , LOW ( - 160 )
0049f9 4fbf     +SBCI R27 , HIGH ( - 160 )
0049fa 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0050     }
                 _0xE000C:
                 ; 0007 0051     return 0;
0049fb 940e c809 	CALL SUBOPT_0xD6
0049fd 9624      	ADIW R28,4
0049fe 9508      	RET
                 ; 0007 0052 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0055 {
                 _getOperatingConfig:
                 ; 0007 0056     int i;
                 ; 0007 0057 
                 ; 0007 0058     if( config_oper_flag != 0x01){
0049ff 940e c5e5 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004a01 e4a3      	LDI  R26,LOW(_config_oper_flag)
004a02 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004a03 940e e42c 	CALL __EEPROMRDB
004a05 30e1      	CPI  R30,LOW(0x1)
004a06 f0d1      	BREQ _0xE001C
                 ; 0007 0059         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
004a07 e5e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
004a08 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
004a09 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
004a0a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
004a0b 940e c274 	CALL SUBOPT_0x3
                 ; 0007 005A 
                 ; 0007 005B         readConfig->mode                    =   MODE_DATALOGGER;
004a0d 81aa      	LDD  R26,Y+2
004a0e 81bb      	LDD  R27,Y+2+1
004a0f e2e0      	LDI  R30,LOW(32)
004a10 940e c8f1 	CALL SUBOPT_0xFE
                 ; 0007 005C         readConfig->deviceEnable            =   0x00;
004a12 e0e0      	LDI  R30,LOW(0)
004a13 940e c8f6 	CALL SUBOPT_0xFF
                 ; 0007 005D         readConfig->alarmEnable             =   0x00;
                 ; 0007 005E 
                 ; 0007 005F         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
004a15 3005     +CPI R16 , LOW ( 5 )
004a16 e0e0     +LDI R30 , HIGH ( 5 )
004a17 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004a18 f43c      	BRGE _0xE001F
                 ; 0007 0060         {
                 ; 0007 0061             readConfig->sensorEnable[i]     =   0x00;
004a19 940e c8ff 	CALL SUBOPT_0x100
004a1b e0a0      	LDI  R26,LOW(0)
004a1c 83a0      	STD  Z+0,R26
                 ; 0007 0062         }
                +
004a1d 5f0f     +SUBI R16 , LOW ( - 1 )
004a1e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a1f cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0063 
                 ; 0007 0064         /* // -- for test -- //
                 ; 0007 0065         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0066         readConfig->deviceEnable            =   0x01;
                 ; 0007 0067         readConfig->alarmEnable             =   0x01;
                 ; 0007 0068 
                 ; 0007 0069         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006A         {
                 ; 0007 006B             if(i==0){
                 ; 0007 006C                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 006D             }
                 ; 0007 006E             else{
                 ; 0007 006F                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0070             }
                 ; 0007 0071         }
                 ; 0007 0072         */
                 ; 0007 0073     }
                 ; 0007 0074     else{
004a20 c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0075         readConfig->mode                    =   config_oper.mode;
004a21 eaa1      	LDI  R26,LOW(_config_oper)
004a22 e0b0      	LDI  R27,HIGH(_config_oper)
004a23 940e c905 	CALL SUBOPT_0x101
                 ; 0007 0076         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
004a25 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004a26 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004a27 940e c90b 	CALL SUBOPT_0x102
                 ; 0007 0077         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
004a29 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004a2a e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004a2b 940e c912 	CALL SUBOPT_0x103
                 ; 0007 0078 
                 ; 0007 0079         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004a2d e000     +LDI R16 , LOW ( 0 )
004a2e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
004a2f 3005     +CPI R16 , LOW ( 5 )
004a30 e0e0     +LDI R30 , HIGH ( 5 )
004a31 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004a32 f454      	BRGE _0xE0023
                 ; 0007 007A         {
                 ; 0007 007B             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
004a33 940e c8ff 	CALL SUBOPT_0x100
004a35 010f      	MOVW R0,R30
                +
004a36 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004a37 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004a38 940e c8d4 	CALL SUBOPT_0xFA
                 ; 0007 007C         }
                +
004a3a 5f0f     +SUBI R16 , LOW ( - 1 )
004a3b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a3c cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 007D     }
                 _0xE0020:
                 ; 0007 007E 
                 ; 0007 007F 
                 ; 0007 0080     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
004a3d e8e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
004a3e e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
004a3f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
004a40 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
004a41 940e c919 	CALL SUBOPT_0x104
                 ; 0007 0081     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
004a43 ebe6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
004a44 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
004a45 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
004a46 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
004a47 940e c91f 	CALL SUBOPT_0x105
004a49 81e1      	LDD  R30,Z+1
004a4a 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0082     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
004a4c eee7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
004a4d e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
004a4e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
004a4f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
004a50 940e c91f 	CALL SUBOPT_0x105
004a52 81e2      	LDD  R30,Z+2
004a53 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0083     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
004a55 e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
004a56 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
004a57 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
004a58 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
004a59 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0084 
                 ; 0007 0085     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004a5b e000     +LDI R16 , LOW ( 0 )
004a5c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
004a5d 3005     +CPI R16 , LOW ( 5 )
004a5e e0e0     +LDI R30 , HIGH ( 5 )
004a5f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004a60 f43c      	BRGE _0xE0026
                 ; 0007 0086     {
                 ; 0007 0087         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
004a61 940e c924 	CALL SUBOPT_0x106
004a63 940e c929 	CALL SUBOPT_0x107
                 ; 0007 0088     }
                +
004a65 5f0f     +SUBI R16 , LOW ( - 1 )
004a66 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a67 cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 0089     printDebug("\r\n");
004a68 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 008A 
                 ; 0007 008B     return 0;
004a6a 940e c809 	CALL SUBOPT_0xD6
004a6c c4e6      	RJMP _0x20E008E
                 ; 0007 008C }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 008F {
                 _getSensorConfig:
                 ; 0007 0090     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004a6d 940e c933 	CALL SUBOPT_0x109
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004a6f f022      	BRMI _0xE0028
004a70 81aa      	LDD  R26,Y+2
004a71 81bb      	LDD  R27,Y+2+1
004a72 9715      	SBIW R26,5
004a73 f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0091         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
004a74 e4ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
004a75 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
004a76 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
004a77 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
004a78 940e c91f 	CALL SUBOPT_0x105
004a7a 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 0092         return -1;
004a7c c4d4      	RJMP _0x20E008F
                 ; 0007 0093     }
                 ; 0007 0094 
                 ; 0007 0095     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
004a7d 81aa      	LDD  R26,Y+2
004a7e 81bb      	LDD  R27,Y+2+1
004a7f 5bac      	SUBI R26,LOW(-_config_sens_flag)
004a80 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004a81 940e e42c 	CALL __EEPROMRDB
004a83 30e1      	CPI  R30,LOW(0x1)
004a84 f411      	BRNE PC+3
004a85 940c 4ace 	JMP _0xE002A
                 ; 0007 0096         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
004a87 e7ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
004a88 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
004a89 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
004a8a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
004a8b 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0097         readConfig->samplingRate        =   300;
004a8d 81a8      	LD   R26,Y
004a8e 81b9      	LDD  R27,Y+1
004a8f e2ec      	LDI  R30,LOW(300)
004a90 e0f1      	LDI  R31,HIGH(300)
004a91 940e c938 	CALL SUBOPT_0x10A
                 ; 0007 0098         readConfig->reOccurrence        =   0x8000;
004a93 9612      	ADIW R26,2
004a94 e0e0      	LDI  R30,LOW(32768)
004a95 e8f0      	LDI  R31,HIGH(32768)
004a96 940e c938 	CALL SUBOPT_0x10A
                 ; 0007 0099         readConfig->timeStartHour       =   0;
004a98 9614      	ADIW R26,4
004a99 940e c93d 	CALL SUBOPT_0x10B
                 ; 0007 009A         readConfig->timeStartMin        =   0;
004a9b 9615      	ADIW R26,5
004a9c 940e c93d 	CALL SUBOPT_0x10B
                 ; 0007 009B         readConfig->timeStopHour        =   0;
004a9e 9616      	ADIW R26,6
004a9f 940e c93d 	CALL SUBOPT_0x10B
                 ; 0007 009C         readConfig->timeStopMin         =   0;
004aa1 9617      	ADIW R26,7
004aa2 940e c93d 	CALL SUBOPT_0x10B
                 ; 0007 009D 
                 ; 0007 009E         readConfig->alarmEnable         =   0x00;
004aa4 9618      	ADIW R26,8
004aa5 940e c93d 	CALL SUBOPT_0x10B
                 ; 0007 009F         readConfig->lowerLimit          =   10.0;
004aa7 9619      	ADIW R26,9
004aa8 940e c942 	CALL SUBOPT_0x10C
004aaa 940e e3db 	CALL __PUTDP1
                 ; 0007 00A0         readConfig->lowerDelay          =   20;
004aac 81a8      	LD   R26,Y
004aad 81b9      	LDD  R27,Y+1
004aae 961d      	ADIW R26,13
004aaf e1e4      	LDI  R30,LOW(20)
004ab0 e0f0      	LDI  R31,HIGH(20)
004ab1 940e c938 	CALL SUBOPT_0x10A
                 ; 0007 00A1         readConfig->lowerExtreme        =   0.0;
004ab3 961f      	ADIW R26,15
004ab4 940e c634 	CALL SUBOPT_0x8E
                 ; 0007 00A2         readConfig->upperLimit          =   180.0;
004ab6 81a8      	LD   R26,Y
004ab7 81b9      	LDD  R27,Y+1
004ab8 9653      	ADIW R26,19
                +
004ab9 e0e0     +LDI R30 , LOW ( 0x43340000 )
004aba e0f0     +LDI R31 , HIGH ( 0x43340000 )
004abb e364     +LDI R22 , BYTE3 ( 0x43340000 )
004abc e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
004abd 940e e3db 	CALL __PUTDP1
                 ; 0007 00A3         readConfig->upperDelay          =   20;
004abf 81a8      	LD   R26,Y
004ac0 81b9      	LDD  R27,Y+1
004ac1 9657      	ADIW R26,23
004ac2 e1e4      	LDI  R30,LOW(20)
004ac3 e0f0      	LDI  R31,HIGH(20)
004ac4 940e c938 	CALL SUBOPT_0x10A
                 ; 0007 00A4         readConfig->upperExtreme        =   200.0;
004ac6 9659      	ADIW R26,25
                +
004ac7 e0e0     +LDI R30 , LOW ( 0x43480000 )
004ac8 e0f0     +LDI R31 , HIGH ( 0x43480000 )
004ac9 e468     +LDI R22 , BYTE3 ( 0x43480000 )
004aca e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
004acb 940e e3db 	CALL __PUTDP1
                 ; 0007 00A5         /*
                 ; 0007 00A6         readConfig->alarmEnable         =   0x00;
                 ; 0007 00A7         readConfig->lowerLimit          =   0.0;
                 ; 0007 00A8         readConfig->lowerDelay          =   10;
                 ; 0007 00A9         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AA         readConfig->upperLimit          =   0.0;
                 ; 0007 00AB         readConfig->upperDelay          =   10;
                 ; 0007 00AC         readConfig->upperExtreme        =   0.0;
                 ; 0007 00AD         */
                 ; 0007 00AE     }
                 ; 0007 00AF     else{
004acd c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B0         readConfig->samplingRate        =   config_sens[ch].samplingRate;
004ace 940e c947 	CALL SUBOPT_0x10D
004ad0 55e7      	SUBI R30,LOW(-_config_sens)
004ad1 4fff      	SBCI R31,HIGH(-_config_sens)
004ad2 01df      	MOVW R26,R30
004ad3 940e e428 	CALL __EEPROMRDW
004ad5 81a8      	LD   R26,Y
004ad6 81b9      	LDD  R27,Y+1
004ad7 93ed      	ST   X+,R30
004ad8 93fc      	ST   X,R31
                 ; 0007 00B1         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
004ad9 940e c947 	CALL SUBOPT_0x10D
                +
004adb 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004adc 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004add 01df      	MOVW R26,R30
004ade 940e e428 	CALL __EEPROMRDW
                +
004ae0 81a8     +LDD R26 , Y + 0
004ae1 81b9     +LDD R27 , Y + 0 + 1
004ae2 9612     +ADIW R26 , 2
004ae3 93ed     +ST X + , R30
004ae4 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B2         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
004ae5 940e c947 	CALL SUBOPT_0x10D
                +
004ae7 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004ae8 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004ae9 01df      	MOVW R26,R30
004aea 940e e42c 	CALL __EEPROMRDB
                +
004aec 81a8     +LDD R26 , Y + 0
004aed 81b9     +LDD R27 , Y + 0 + 1
004aee 9614     +ADIW R26 , 4
004aef 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B3         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
004af0 940e c947 	CALL SUBOPT_0x10D
                +
004af2 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004af3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004af4 01df      	MOVW R26,R30
004af5 940e e42c 	CALL __EEPROMRDB
                +
004af7 81a8     +LDD R26 , Y + 0
004af8 81b9     +LDD R27 , Y + 0 + 1
004af9 9615     +ADIW R26 , 5
004afa 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B4         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
004afb 940e c947 	CALL SUBOPT_0x10D
                +
004afd 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004afe 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004aff 01df      	MOVW R26,R30
004b00 940e e42c 	CALL __EEPROMRDB
                +
004b02 81a8     +LDD R26 , Y + 0
004b03 81b9     +LDD R27 , Y + 0 + 1
004b04 9616     +ADIW R26 , 6
004b05 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B5         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
004b06 940e c947 	CALL SUBOPT_0x10D
                +
004b08 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004b09 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004b0a 01df      	MOVW R26,R30
004b0b 940e e42c 	CALL __EEPROMRDB
                +
004b0d 81a8     +LDD R26 , Y + 0
004b0e 81b9     +LDD R27 , Y + 0 + 1
004b0f 9617     +ADIW R26 , 7
004b10 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B6 
                 ; 0007 00B7         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
004b11 940e c947 	CALL SUBOPT_0x10D
                +
004b13 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004b14 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004b15 01df      	MOVW R26,R30
004b16 940e e42c 	CALL __EEPROMRDB
                +
004b18 81a8     +LDD R26 , Y + 0
004b19 81b9     +LDD R27 , Y + 0 + 1
004b1a 9618     +ADIW R26 , 8
004b1b 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00B8         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
004b1c 940e c947 	CALL SUBOPT_0x10D
004b1e 940e c94d 	CALL SUBOPT_0x10E
                +
004b20 81a8     +LDD R26 , Y + 0
004b21 81b9     +LDD R27 , Y + 0 + 1
004b22 9619     +ADIW R26 , 9
004b23 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00B9         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004b25 940e c947 	CALL SUBOPT_0x10D
004b27 940e c953 	CALL SUBOPT_0x10F
                +
004b29 81a8     +LDD R26 , Y + 0
004b2a 81b9     +LDD R27 , Y + 0 + 1
004b2b 961d     +ADIW R26 , 13
004b2c 93ed     +ST X + , R30
004b2d 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BA         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
004b2e 940e c947 	CALL SUBOPT_0x10D
004b30 940e c959 	CALL SUBOPT_0x110
                +
004b32 81a8     +LDD R26 , Y + 0
004b33 81b9     +LDD R27 , Y + 0 + 1
004b34 961f     +ADIW R26 , 15
004b35 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BB         readConfig->upperLimit          =   config_sens[ch].upperLimit;
004b37 940e c947 	CALL SUBOPT_0x10D
004b39 940e c95f 	CALL SUBOPT_0x111
                +
004b3b 81a8     +LDD R26 , Y + 0
004b3c 81b9     +LDD R27 , Y + 0 + 1
004b3d 9653     +ADIW R26 , 19
004b3e 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BC         readConfig->upperDelay          =   config_sens[ch].upperDelay;
004b40 940e c947 	CALL SUBOPT_0x10D
004b42 940e c965 	CALL SUBOPT_0x112
                +
004b44 81a8     +LDD R26 , Y + 0
004b45 81b9     +LDD R27 , Y + 0 + 1
004b46 9657     +ADIW R26 , 23
004b47 93ed     +ST X + , R30
004b48 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00BD         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
004b49 940e c947 	CALL SUBOPT_0x10D
004b4b 940e c96b 	CALL SUBOPT_0x113
                +
004b4d 81a8     +LDD R26 , Y + 0
004b4e 81b9     +LDD R27 , Y + 0 + 1
004b4f 9659     +ADIW R26 , 25
004b50 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00BE     }
                 _0xE002B:
                 ; 0007 00BF     return 0;
004b52 e0e0      	LDI  R30,LOW(0)
004b53 e0f0      	LDI  R31,HIGH(0)
004b54 c3fe      	RJMP _0x20E008E
                 ; 0007 00C0 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C3 {
                 _getAuxDinConfig:
                 ; 0007 00C4     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
004b55 940e c933 	CALL SUBOPT_0x109
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004b57 f022      	BRMI _0xE002D
004b58 81aa      	LDD  R26,Y+2
004b59 81bb      	LDD  R27,Y+2+1
004b5a 9750      	SBIW R26,16
004b5b f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C5         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
004b5c ebe1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
004b5d e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
004b5e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
004b5f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
004b60 940e c91f 	CALL SUBOPT_0x105
004b62 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 00C6         return -1;
004b64 c3ec      	RJMP _0x20E008F
                 ; 0007 00C7     }
                 ; 0007 00C8 
                 ; 0007 00C9     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
004b65 81aa      	LDD  R26,Y+2
004b66 81bb      	LDD  R27,Y+2+1
004b67 5ba7      	SUBI R26,LOW(-_config_din_flag)
004b68 4fba      	SBCI R27,HIGH(-_config_din_flag)
004b69 940e e42c 	CALL __EEPROMRDB
004b6b 30e1      	CPI  R30,LOW(0x1)
004b6c f071      	BREQ _0xE002F
                 ; 0007 00CA         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
004b6d eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
004b6e e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
004b6f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
004b70 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
004b71 940e c274 	CALL SUBOPT_0x3
                 ; 0007 00CB 
                 ; 0007 00CC         readConfig->channelEnable       =   0x00;
004b73 81a8      	LD   R26,Y
004b74 81b9      	LDD  R27,Y+1
004b75 940e c93d 	CALL SUBOPT_0x10B
                 ; 0007 00CD         readConfig->alarmDelay          =   0;
004b77 9611      	ADIW R26,1
004b78 940e c971 	CALL SUBOPT_0x114
                 ; 0007 00CE 
                 ; 0007 00CF         /* // -- for test -- //
                 ; 0007 00D0         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D1         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D2 
                 ; 0007 00D3         readConfig->alarmDelay          =   0;
                 ; 0007 00D4         */
                 ; 0007 00D5     }
                 ; 0007 00D6     else{
004b7a c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00D7         readConfig->channelEnable       =   config_din[ch].channelEnable;
004b7b 940e c976 	CALL SUBOPT_0x115
004b7d 5ce6      	SUBI R30,LOW(-_config_din)
004b7e 4ffe      	SBCI R31,HIGH(-_config_din)
004b7f 940e c97c 	CALL SUBOPT_0x116
                 ; 0007 00D8         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
004b81 940e c976 	CALL SUBOPT_0x115
                +
004b83 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004b84 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004b85 01df      	MOVW R26,R30
004b86 940e c983 	CALL SUBOPT_0x117
                 ; 0007 00D9     }
                 _0xE0030:
                 ; 0007 00DA     return 0;
004b88 e0e0      	LDI  R30,LOW(0)
004b89 e0f0      	LDI  R31,HIGH(0)
004b8a c3c8      	RJMP _0x20E008E
                 ; 0007 00DB }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00DE {
                 _getAuxDoutConfig:
                 ; 0007 00DF     int i;
                 ; 0007 00E0 
                 ; 0007 00E1     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
004b8b 940e c5e5 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004b8d 81ad      	LDD  R26,Y+5
004b8e 23aa      	TST  R26
004b8f f022      	BRMI _0xE0032
004b90 81ac      	LDD  R26,Y+4
004b91 81bd      	LDD  R27,Y+4+1
004b92 9715      	SBIW R26,5
004b93 f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E2         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
004b94 e1ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
004b95 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
004b96 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
004b97 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
004b98 940e c98b 	CALL SUBOPT_0x118
                 ; 0007 00E3         return -1;
004b9a efef      	LDI  R30,LOW(65535)
004b9b efff      	LDI  R31,HIGH(65535)
004b9c c144      	RJMP _0x20E0091
                 ; 0007 00E4     }
                 ; 0007 00E5 
                 ; 0007 00E6     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
004b9d 81ac      	LDD  R26,Y+4
004b9e 81bd      	LDD  R27,Y+4+1
004b9f 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004ba0 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004ba1 940e e42c 	CALL __EEPROMRDB
004ba3 30e1      	CPI  R30,LOW(0x1)
004ba4 f0d1      	BREQ _0xE0034
                 ; 0007 00E7         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
004ba5 e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
004ba6 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
004ba7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
004ba8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
004ba9 940e c274 	CALL SUBOPT_0x3
                 ; 0007 00E8         readConfig->channelEnable       =   0x00;
004bab 81aa      	LDD  R26,Y+2
004bac 81bb      	LDD  R27,Y+2+1
004bad e0e0      	LDI  R30,LOW(0)
004bae 940e c8f1 	CALL SUBOPT_0xFE
                 ; 0007 00E9         readConfig->stateOnEvent        =   0x01;
004bb0 e0e1      	LDI  R30,LOW(1)
004bb1 940e c8f6 	CALL SUBOPT_0xFF
                 ; 0007 00EA         readConfig->eventSourceNumber   =   0;
                 ; 0007 00EB 
                 ; 0007 00EC         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
004bb3 3203     +CPI R16 , LOW ( 35 )
004bb4 e0e0     +LDI R30 , HIGH ( 35 )
004bb5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004bb6 f43c      	BRGE _0xE0037
                 ; 0007 00ED             readConfig->eventSource[i]  =   0x00;
004bb7 940e c8ff 	CALL SUBOPT_0x100
004bb9 e0a0      	LDI  R26,LOW(0)
004bba 83a0      	STD  Z+0,R26
                 ; 0007 00EE         }
                +
004bbb 5f0f     +SUBI R16 , LOW ( - 1 )
004bbc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bbd cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00EF     }
                 ; 0007 00F0     else{
004bbe c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F1         readConfig->channelEnable       =   config_dout[ch].channelEnable;
004bbf 940e c990 	CALL SUBOPT_0x119
004bc1 59e6      	SUBI R30,LOW(-_config_dout)
004bc2 4ffe      	SBCI R31,HIGH(-_config_dout)
004bc3 01df      	MOVW R26,R30
004bc4 940e c905 	CALL SUBOPT_0x101
                 ; 0007 00F2         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
004bc6 940e c990 	CALL SUBOPT_0x119
                +
004bc8 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004bc9 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004bca 01df      	MOVW R26,R30
004bcb 940e c90b 	CALL SUBOPT_0x102
                 ; 0007 00F3         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
004bcd 940e c990 	CALL SUBOPT_0x119
                +
004bcf 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004bd0 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004bd1 01df      	MOVW R26,R30
004bd2 940e c912 	CALL SUBOPT_0x103
                 ; 0007 00F4 
                 ; 0007 00F5         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
004bd4 e9e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
004bd5 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
004bd6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
004bd7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
004bd8 940e c98b 	CALL SUBOPT_0x118
                 ; 0007 00F6         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
004bda ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
004bdb e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
004bdc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
004bdd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
004bde 940e c996 	CALL SUBOPT_0x11A
004be0 940e c99e 	CALL SUBOPT_0x11B
                 ; 0007 00F7         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
004be2 edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
004be3 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
004be4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
004be5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
004be6 940e c996 	CALL SUBOPT_0x11A
004be8 940e c9a4 	CALL SUBOPT_0x11C
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
004bea e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
004beb e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
004bec e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
004bed e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
004bee 940e c996 	CALL SUBOPT_0x11A
004bf0 940e c9aa 	CALL SUBOPT_0x11D
004bf2 940e c388 	CALL SUBOPT_0x29
                 ; 0007 00F9         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004bf4 e000     +LDI R16 , LOW ( 0 )
004bf5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
004bf6 940e c990 	CALL SUBOPT_0x119
004bf8 940e c9aa 	CALL SUBOPT_0x11D
004bfa 940e c9b0 	CALL SUBOPT_0x11E
004bfc f4a4      	BRGE _0xE003B
                 ; 0007 00FA             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
004bfd 940e c8ff 	CALL SUBOPT_0x100
                +
004bff 2f7e     +MOV R23 , R30
004c00 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004c01 940e c990 	CALL SUBOPT_0x119
004c03 940e c9b5 	CALL SUBOPT_0x11F
004c05 940e e42c 	CALL __EEPROMRDB
                +
004c07 2fa7     +MOV R26 , R23
004c08 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004c09 93ec      	ST   X,R30
                 ; 0007 00FB             printDebug("[0x%02X]",readConfig->eventSource[i]);
004c0a 940e c924 	CALL SUBOPT_0x106
004c0c 940e c929 	CALL SUBOPT_0x107
                 ; 0007 00FC         }
                +
004c0e 5f0f     +SUBI R16 , LOW ( - 1 )
004c0f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c10 cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 00FD         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004c11 940e c990 	CALL SUBOPT_0x119
004c13 940e c9aa 	CALL SUBOPT_0x11D
004c15 2f0e      	MOV  R16,R30
004c16 2711      	CLR  R17
                 _0xE003D:
                +
004c17 3203     +CPI R16 , LOW ( 35 )
004c18 e0e0     +LDI R30 , HIGH ( 35 )
004c19 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c1a f43c      	BRGE _0xE003E
                 ; 0007 00FE             readConfig->eventSource[i]  =   0x00;
004c1b 940e c8ff 	CALL SUBOPT_0x100
004c1d e0a0      	LDI  R26,LOW(0)
004c1e 83a0      	STD  Z+0,R26
                 ; 0007 00FF             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0100         }
                +
004c1f 5f0f     +SUBI R16 , LOW ( - 1 )
004c20 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c21 cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0101         printDebug("\r\n");
004c22 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 0102 
                 ; 0007 0103     }
                 _0xE0038:
                 ; 0007 0104     return 0;
004c24 c0ba      	RJMP _0x20E0092
                 ; 0007 0105 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 0108 {
                 _getAuxAinConfig:
                 ; 0007 0109     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004c25 940e c933 	CALL SUBOPT_0x109
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004c27 f022      	BRMI _0xE0040
004c28 81aa      	LDD  R26,Y+2
004c29 81bb      	LDD  R27,Y+2+1
004c2a 9750      	SBIW R26,16
004c2b f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010A         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004c2c e3e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004c2d e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004c2e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
004c2f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
004c30 940e c91f 	CALL SUBOPT_0x105
004c32 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 010B         return -1;
004c34 c31c      	RJMP _0x20E008F
                 ; 0007 010C     }
                 ; 0007 010D 
                 ; 0007 010E     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004c35 81aa      	LDD  R26,Y+2
004c36 81bb      	LDD  R27,Y+2+1
004c37 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004c38 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004c39 940e e42c 	CALL __EEPROMRDB
004c3b 30e1      	CPI  R30,LOW(0x1)
004c3c f071      	BREQ _0xE0042
                 ; 0007 010F         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
004c3d e7e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
004c3e e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
004c3f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
004c40 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
004c41 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0110         readConfig->channelEnable       =   0x00;
004c43 81a8      	LD   R26,Y
004c44 81b9      	LDD  R27,Y+1
004c45 940e c93d 	CALL SUBOPT_0x10B
                 ; 0007 0111         readConfig->alarmLevel          =   0;
004c47 9611      	ADIW R26,1
004c48 940e c634 	CALL SUBOPT_0x8E
                 ; 0007 0112     }
                 ; 0007 0113     else{
004c4a c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0114         readConfig->channelEnable       =   config_ain[ch].channelEnable;
004c4b 940e c9bb 	CALL SUBOPT_0x120
004c4d 5de8      	SUBI R30,LOW(-_config_ain)
004c4e 4ffd      	SBCI R31,HIGH(-_config_ain)
004c4f 940e c97c 	CALL SUBOPT_0x116
                 ; 0007 0115         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
004c51 940e c9bb 	CALL SUBOPT_0x120
                +
004c53 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004c54 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004c55 01df      	MOVW R26,R30
004c56 940e e424 	CALL __EEPROMRDD
                +
004c58 81a8     +LDD R26 , Y + 0
004c59 81b9     +LDD R27 , Y + 0 + 1
004c5a 9611     +ADIW R26 , 1
004c5b 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0116     }
                 _0xE0043:
                 ; 0007 0117     return 0;
004c5d e0e0      	LDI  R30,LOW(0)
004c5e e0f0      	LDI  R31,HIGH(0)
004c5f c2f3      	RJMP _0x20E008E
                 ; 0007 0118 }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011B {
                 _getAuxAoutConfig:
                 ; 0007 011C     int i;
                 ; 0007 011D 
                 ; 0007 011E     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
004c60 940e c5e5 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004c62 81ad      	LDD  R26,Y+5
004c63 23aa      	TST  R26
004c64 f022      	BRMI _0xE0045
004c65 81ac      	LDD  R26,Y+4
004c66 81bd      	LDD  R27,Y+4+1
004c67 9750      	SBIW R26,16
004c68 f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 011F         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
004c69 eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
004c6a e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
004c6b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
004c6c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
004c6d 940e c98b 	CALL SUBOPT_0x118
                 ; 0007 0120         return -1;
004c6f efef      	LDI  R30,LOW(65535)
004c70 efff      	LDI  R31,HIGH(65535)
004c71 c06f      	RJMP _0x20E0091
                 ; 0007 0121     }
                 ; 0007 0122 
                 ; 0007 0123     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
004c72 81ac      	LDD  R26,Y+4
004c73 81bd      	LDD  R27,Y+4+1
004c74 59a2      	SUBI R26,LOW(-_config_aout_flag)
004c75 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004c76 940e e42c 	CALL __EEPROMRDB
004c78 30e1      	CPI  R30,LOW(0x1)
004c79 f101      	BREQ _0xE0047
                 ; 0007 0124         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
004c7a edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
004c7b e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
004c7c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
004c7d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
004c7e 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0125         readConfig->channelEnable       =   0x00;
004c80 81aa      	LDD  R26,Y+2
004c81 81bb      	LDD  R27,Y+2+1
004c82 e0e0      	LDI  R30,LOW(0)
004c83 940e c8f1 	CALL SUBOPT_0xFE
                 ; 0007 0126         readConfig->levelOnEvent        =   0.0;
004c85 940e c634 	CALL SUBOPT_0x8E
                 ; 0007 0127         readConfig->eventSourceNumber   =   0;
004c87 81aa      	LDD  R26,Y+2
004c88 81bb      	LDD  R27,Y+2+1
004c89 9615      	ADIW R26,5
004c8a e0e0      	LDI  R30,LOW(0)
004c8b 93ec      	ST   X,R30
                 ; 0007 0128 
                 ; 0007 0129         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004c8c e000     +LDI R16 , LOW ( 0 )
004c8d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
004c8e 3203     +CPI R16 , LOW ( 35 )
004c8f e0e0     +LDI R30 , HIGH ( 35 )
004c90 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c91 f43c      	BRGE _0xE004A
                 ; 0007 012A             readConfig->eventSource[i]  =   0x00;
004c92 940e c9c1 	CALL SUBOPT_0x121
004c94 e0a0      	LDI  R26,LOW(0)
004c95 83a0      	STD  Z+0,R26
                 ; 0007 012B         }
                +
004c96 5f0f     +SUBI R16 , LOW ( - 1 )
004c97 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c98 cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012C     }
                 ; 0007 012D     else{
004c99 c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 012E         readConfig->channelEnable       =   config_aout[ch].channelEnable;
004c9a 940e c9c7 	CALL SUBOPT_0x122
004c9c 58e8      	SUBI R30,LOW(-_config_aout)
004c9d 4ffd      	SBCI R31,HIGH(-_config_aout)
004c9e 01df      	MOVW R26,R30
004c9f 940e c905 	CALL SUBOPT_0x101
                 ; 0007 012F         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
004ca1 940e c9c7 	CALL SUBOPT_0x122
                +
004ca3 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004ca4 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004ca5 01df      	MOVW R26,R30
004ca6 940e e424 	CALL __EEPROMRDD
                +
004ca8 81aa     +LDD R26 , Y + 2
004ca9 81bb     +LDD R27 , Y + 2 + 1
004caa 9611     +ADIW R26 , 1
004cab 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0130         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
004cad 940e c9c7 	CALL SUBOPT_0x122
004caf 940e c9cd 	CALL SUBOPT_0x123
                +
004cb1 81aa     +LDD R26 , Y + 2
004cb2 81bb     +LDD R27 , Y + 2 + 1
004cb3 9615     +ADIW R26 , 5
004cb4 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0131 
                 ; 0007 0132         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004cb5 e000     +LDI R16 , LOW ( 0 )
004cb6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
004cb7 940e c9c7 	CALL SUBOPT_0x122
004cb9 940e c9cd 	CALL SUBOPT_0x123
004cbb 940e c9b0 	CALL SUBOPT_0x11E
004cbd f484      	BRGE _0xE004E
                 ; 0007 0133             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
004cbe 940e c9c1 	CALL SUBOPT_0x121
                +
004cc0 2f7e     +MOV R23 , R30
004cc1 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004cc2 940e c9c7 	CALL SUBOPT_0x122
004cc4 940e c9d3 	CALL SUBOPT_0x124
004cc6 940e e42c 	CALL __EEPROMRDB
                +
004cc8 2fa7     +MOV R26 , R23
004cc9 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004cca 93ec      	ST   X,R30
                 ; 0007 0134         }
                +
004ccb 5f0f     +SUBI R16 , LOW ( - 1 )
004ccc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ccd cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0135         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004cce 940e c9c7 	CALL SUBOPT_0x122
004cd0 940e c9cd 	CALL SUBOPT_0x123
004cd2 2f0e      	MOV  R16,R30
004cd3 2711      	CLR  R17
                 _0xE0050:
                +
004cd4 3203     +CPI R16 , LOW ( 35 )
004cd5 e0e0     +LDI R30 , HIGH ( 35 )
004cd6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004cd7 f43c      	BRGE _0xE0051
                 ; 0007 0136             readConfig->eventSource[i]  =   0x00;
004cd8 940e c9c1 	CALL SUBOPT_0x121
004cda e0a0      	LDI  R26,LOW(0)
004cdb 83a0      	STD  Z+0,R26
                 ; 0007 0137         }
                +
004cdc 5f0f     +SUBI R16 , LOW ( - 1 )
004cdd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cde cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 0138     }
                 _0xE004B:
                 ; 0007 0139     return 0;
                 _0x20E0092:
004cdf e0e0      	LDI  R30,LOW(0)
004ce0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0091:
004ce1 8119      	LDD  R17,Y+1
004ce2 8108      	LDD  R16,Y+0
004ce3 9626      	ADIW R28,6
004ce4 9508      	RET
                 ; 0007 013A }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 013D {
                 _getBuzzerConfig:
                 ; 0007 013E     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 013F     int i;
                 ; 0007 0140 
                 ; 0007 0141     if( config_buzz_flag != 0x01){
004ce5 93ba      	ST   -Y,R27
004ce6 93aa      	ST   -Y,R26
004ce7 9724      	SBIW R28,4
004ce8 ece7      	LDI  R30,LOW(199)
004ce9 83e8      	ST   Y,R30
004cea ecef      	LDI  R30,LOW(207)
004ceb 83e9      	STD  Y+1,R30
004cec ede7      	LDI  R30,LOW(215)
004ced 83ea      	STD  Y+2,R30
004cee edef      	LDI  R30,LOW(223)
004cef 83eb      	STD  Y+3,R30
004cf0 931a      	ST   -Y,R17
004cf1 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
004cf2 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004cf3 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004cf4 940e e42c 	CALL __EEPROMRDB
004cf6 30e1      	CPI  R30,LOW(0x1)
004cf7 f141      	BREQ _0xE0052
                 ; 0007 0142         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
004cf8 e1e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
004cf9 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
004cfa e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
004cfb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
004cfc 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0143         readConfig->enable              =   0x01;
004cfe 81ae      	LDD  R26,Y+6
004cff 81bf      	LDD  R27,Y+6+1
004d00 e0e1      	LDI  R30,LOW(1)
004d01 93ec      	ST   X,R30
                 ; 0007 0144         readConfig->eventSourceNumber   =   sizeof(errSrc);
004d02 9611      	ADIW R26,1
004d03 e0e4      	LDI  R30,LOW(4)
004d04 93ec      	ST   X,R30
                 ; 0007 0145 
                 ; 0007 0146         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 0147         for(i=0;i<sizeof(errSrc);i++){
                +
004d05 e000     +LDI R16 , LOW ( 0 )
004d06 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
004d07 3004     +CPI R16 , LOW ( 4 )
004d08 e0e0     +LDI R30 , HIGH ( 4 )
004d09 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004d0a f4a4      	BRGE _0xE0055
                 ; 0007 0148             if(i<sizeof(errSrc)){
                +
004d0b 3004     +CPI R16 , LOW ( 4 )
004d0c e0e0     +LDI R30 , HIGH ( 4 )
004d0d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004d0e f44c      	BRGE _0xE0056
                 ; 0007 0149                 readConfig->eventSource[i]  =   errSrc[i];
004d0f 940e c9d9 	CALL SUBOPT_0x125
004d11 010f      	MOVW R0,R30
004d12 940e c9df 	CALL SUBOPT_0x126
004d14 91ec      	LD   R30,X
004d15 01d0      	MOVW R26,R0
004d16 93ec      	ST   X,R30
                 ; 0007 014A                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014B             }
                 ; 0007 014C             else{
004d17 c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 014D                 readConfig->eventSource[i]  =   0x00;
004d18 940e c9d9 	CALL SUBOPT_0x125
004d1a e0a0      	LDI  R26,LOW(0)
004d1b 83a0      	STD  Z+0,R26
                 ; 0007 014E             }
                 _0xE0057:
                 ; 0007 014F         }
                +
004d1c 5f0f     +SUBI R16 , LOW ( - 1 )
004d1d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d1e cfe8      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0150         //printDebug("\r\n");
                 ; 0007 0151     }
                 ; 0007 0152     else{
004d1f c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0153         readConfig->enable              =   config_buzz.enable;
004d20 e0a8      	LDI  R26,LOW(_config_buzz)
004d21 e0b5      	LDI  R27,HIGH(_config_buzz)
004d22 940e e42c 	CALL __EEPROMRDB
004d24 81ae      	LDD  R26,Y+6
004d25 81bf      	LDD  R27,Y+6+1
004d26 93ec      	ST   X,R30
                 ; 0007 0154         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
004d27 940e c9e4 	CALL SUBOPT_0x127
                +
004d29 81ae     +LDD R26 , Y + 6
004d2a 81bf     +LDD R27 , Y + 6 + 1
004d2b 9611     +ADIW R26 , 1
004d2c 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0155 
                 ; 0007 0156         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004d2d e000     +LDI R16 , LOW ( 0 )
004d2e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004d2f 940e c9e4 	CALL SUBOPT_0x127
004d31 940e c9b0 	CALL SUBOPT_0x11E
004d33 f454      	BRGE _0xE005B
                 ; 0007 0157             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
004d34 940e c9d9 	CALL SUBOPT_0x125
004d36 010f      	MOVW R0,R30
                +
004d37 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
004d38 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
004d39 940e c8d4 	CALL SUBOPT_0xFA
                 ; 0007 0158         }
                +
004d3b 5f0f     +SUBI R16 , LOW ( - 1 )
004d3c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d3d cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 0159         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004d3e 940e c9e4 	CALL SUBOPT_0x127
004d40 2f0e      	MOV  R16,R30
004d41 2711      	CLR  R17
                 _0xE005D:
                +
004d42 3203     +CPI R16 , LOW ( 35 )
004d43 e0e0     +LDI R30 , HIGH ( 35 )
004d44 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004d45 f43c      	BRGE _0xE005E
                 ; 0007 015A             readConfig->eventSource[i]  =   0x00;
004d46 940e c9d9 	CALL SUBOPT_0x125
004d48 e0a0      	LDI  R26,LOW(0)
004d49 83a0      	STD  Z+0,R26
                 ; 0007 015B         }
                +
004d4a 5f0f     +SUBI R16 , LOW ( - 1 )
004d4b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d4c cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015C     }
                 _0xE0058:
                 ; 0007 015D 
                 ; 0007 015E     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
004d4d e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
004d4e e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
004d4f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
004d50 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
004d51 940e c9e9 	CALL SUBOPT_0x128
004d53 91ec      	LD   R30,X
004d54 940e c388 	CALL SUBOPT_0x29
                 ; 0007 015F     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
004d56 e7e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
004d57 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
004d58 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
004d59 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
004d5a 940e c9ee 	CALL SUBOPT_0x129
004d5c 81e1      	LDD  R30,Z+1
004d5d 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0160     printDebug("<getBuzzerConfig> eventSource       >>");
                +
004d5f eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
004d60 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
004d61 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
004d62 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
004d63 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0161     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004d65 e000     +LDI R16 , LOW ( 0 )
004d66 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
004d67 3203     +CPI R16 , LOW ( 35 )
004d68 e0e0     +LDI R30 , HIGH ( 35 )
004d69 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004d6a f45c      	BRGE _0xE0061
                 ; 0007 0162         printDebug("[0x%02X]",readConfig->eventSource[i]);
004d6b 940e c9f3 	CALL SUBOPT_0x12A
004d6d 940e c9ee 	CALL SUBOPT_0x129
004d6f 940e c9f8 	CALL SUBOPT_0x12B
004d71 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0163     }
                +
004d73 5f0f     +SUBI R16 , LOW ( - 1 )
004d74 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d75 cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0164     printDebug("\r\n");
004d76 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 0165 
                 ; 0007 0166     return 0;
004d78 940e c809 	CALL SUBOPT_0xD6
004d7a 9628      	ADIW R28,8
004d7b 9508      	RET
                 ; 0007 0167 }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016A {
                 _getEnvAlarmConfig:
                 ; 0007 016B     if( config_alm_flag != 0x01 ){
004d7c 93ba      	ST   -Y,R27
004d7d 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004d7e e7af      	LDI  R26,LOW(_config_alm_flag)
004d7f e0b5      	LDI  R27,HIGH(_config_alm_flag)
004d80 940e e42c 	CALL __EEPROMRDB
004d82 30e1      	CPI  R30,LOW(0x1)
004d83 f121      	BREQ _0xE0062
                 ; 0007 016C         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
004d84 ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
004d85 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
004d86 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
004d87 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
004d88 940e c274 	CALL SUBOPT_0x3
                 ; 0007 016D         readConfig->gsmRSSILevel         =   0;
004d8a 81a8      	LD   R26,Y
004d8b 81b9      	LDD  R27,Y+1
004d8c 940e c634 	CALL SUBOPT_0x8E
                 ; 0007 016E         readConfig->gsmCreditBalance     =   0;
004d8e 81a8      	LD   R26,Y
004d8f 81b9      	LDD  R27,Y+1
004d90 9614      	ADIW R26,4
004d91 e0e0      	LDI  R30,LOW(0)
004d92 e0f0      	LDI  R31,HIGH(0)
004d93 940e c938 	CALL SUBOPT_0x10A
                 ; 0007 016F         readConfig->batteryLevel         =   0;
004d95 9616      	ADIW R26,6
004d96 940e c634 	CALL SUBOPT_0x8E
                 ; 0007 0170         readConfig->commSignalLevel      =   0;
004d98 81a8      	LD   R26,Y
004d99 81b9      	LDD  R27,Y+1
004d9a 961a      	ADIW R26,10
004d9b 940e c634 	CALL SUBOPT_0x8E
                 ; 0007 0171         readConfig->commLostDelay        =   0;
004d9d 81a8      	LD   R26,Y
004d9e 81b9      	LDD  R27,Y+1
004d9f 961e      	ADIW R26,14
004da0 e0e0      	LDI  R30,LOW(0)
004da1 e0f0      	LDI  R31,HIGH(0)
004da2 940e c938 	CALL SUBOPT_0x10A
                 ; 0007 0172         readConfig->memoryMin            =   0;
004da4 9650      	ADIW R26,16
004da5 940e c971 	CALL SUBOPT_0x114
                 ; 0007 0173     }
                 ; 0007 0174     else{
004da7 c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0175         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
004da8 e2ad      	LDI  R26,LOW(_config_alm)
004da9 e0b5      	LDI  R27,HIGH(_config_alm)
004daa 940e e424 	CALL __EEPROMRDD
004dac 81a8      	LD   R26,Y
004dad 81b9      	LDD  R27,Y+1
004dae 940e e3db 	CALL __PUTDP1
                 ; 0007 0176         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004db0 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004db1 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004db2 940e e428 	CALL __EEPROMRDW
                +
004db4 81a8     +LDD R26 , Y + 0
004db5 81b9     +LDD R27 , Y + 0 + 1
004db6 9614     +ADIW R26 , 4
004db7 93ed     +ST X + , R30
004db8 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 0177         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
004db9 e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004dba e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004dbb 940e e424 	CALL __EEPROMRDD
                +
004dbd 81a8     +LDD R26 , Y + 0
004dbe 81b9     +LDD R27 , Y + 0 + 1
004dbf 9616     +ADIW R26 , 6
004dc0 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 0178         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004dc2 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004dc3 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004dc4 940e e424 	CALL __EEPROMRDD
                +
004dc6 81a8     +LDD R26 , Y + 0
004dc7 81b9     +LDD R27 , Y + 0 + 1
004dc8 961a     +ADIW R26 , 10
004dc9 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 0179         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004dcb e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004dcc e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004dcd 940e e428 	CALL __EEPROMRDW
                +
004dcf 81a8     +LDD R26 , Y + 0
004dd0 81b9     +LDD R27 , Y + 0 + 1
004dd1 961e     +ADIW R26 , 14
004dd2 93ed     +ST X + , R30
004dd3 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017A         readConfig->memoryMin            =   config_alm.memoryMin;
                +
004dd4 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004dd5 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004dd6 940e e428 	CALL __EEPROMRDW
                +
004dd8 81a8     +LDD R26 , Y + 0
004dd9 81b9     +LDD R27 , Y + 0 + 1
004dda 9650     +ADIW R26 , 16
004ddb 93ed     +ST X + , R30
004ddc 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017B     }
                 _0xE0063:
                 ; 0007 017C 
                 ; 0007 017D     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004ddd efed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004dde e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004ddf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004de0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004de1 940e c9fd 	CALL SUBOPT_0x12C
004de3 940e ca02 	CALL SUBOPT_0x12D
                 ; 0007 017E     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
004de5 e2ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
004de6 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
004de7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
004de8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
004de9 940e c9fd 	CALL SUBOPT_0x12C
004deb 9614      	ADIW R26,4
004dec 940e ca07 	CALL SUBOPT_0x12E
                 ; 0007 017F     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004dee e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004def e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004df0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004df1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004df2 940e ca0a 	CALL SUBOPT_0x12F
004df4 940e ca0f 	CALL SUBOPT_0x130
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
004df6 e8ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
004df7 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
004df8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
004df9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004dfa 940e ca0a 	CALL SUBOPT_0x12F
004dfc 940e ca16 	CALL SUBOPT_0x131
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004dfe ebed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004dff e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004e00 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004e01 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004e02 940e c9fd 	CALL SUBOPT_0x12C
004e04 961e      	ADIW R26,14
004e05 940e ca07 	CALL SUBOPT_0x12E
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
004e07 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
004e08 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
004e09 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004e0a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004e0b 940e c9fd 	CALL SUBOPT_0x12C
004e0d 9650      	ADIW R26,16
004e0e c033      	RJMP _0x20E0090
                 ; 0007 0183 
                 ; 0007 0184     return 0;
                 ; 0007 0185 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 0188 {
                 _getStatusReportConfig:
                 ; 0007 0189     if( config_stat_flag != 0x01 ){
004e0f 93ba      	ST   -Y,R27
004e10 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004e11 e8a0      	LDI  R26,LOW(_config_stat_flag)
004e12 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004e13 940e e42c 	CALL __EEPROMRDB
004e15 30e1      	CPI  R30,LOW(0x1)
004e16 f081      	BREQ _0xE0064
                 ; 0007 018A         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
004e17 e1ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
004e18 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
004e19 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004e1a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004e1b 940e c274 	CALL SUBOPT_0x3
                 ; 0007 018B         readConfig->accm                =   0x30;
004e1d 81a8      	LD   R26,Y
004e1e 81b9      	LDD  R27,Y+1
004e1f e3e0      	LDI  R30,LOW(48)
004e20 93ec      	ST   X,R30
                 ; 0007 018C         readConfig->intv                =   60;
004e21 9611      	ADIW R26,1
004e22 e3ec      	LDI  R30,LOW(60)
004e23 e0f0      	LDI  R31,HIGH(60)
004e24 93ed      	ST   X+,R30
004e25 93fc      	ST   X,R31
                 ; 0007 018D     }
                 ; 0007 018E     else{
004e26 c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 018F         readConfig->accm                =   config_stat.accm;
004e27 e3af      	LDI  R26,LOW(_config_stat)
004e28 e0b5      	LDI  R27,HIGH(_config_stat)
004e29 940e e42c 	CALL __EEPROMRDB
004e2b 81a8      	LD   R26,Y
004e2c 81b9      	LDD  R27,Y+1
004e2d 93ec      	ST   X,R30
                 ; 0007 0190         readConfig->intv                =   config_stat.intv;
                +
004e2e e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004e2f e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004e30 940e c983 	CALL SUBOPT_0x117
                 ; 0007 0191     }
                 _0xE0065:
                 ; 0007 0192 
                 ; 0007 0193     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004e32 e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004e33 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
004e34 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
004e35 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
004e36 940e c9fd 	CALL SUBOPT_0x12C
004e38 91ec      	LD   R30,X
004e39 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0194     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
004e3b e8e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
004e3c e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
004e3d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
004e3e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
004e3f 940e c9fd 	CALL SUBOPT_0x12C
004e41 9611      	ADIW R26,1
                 _0x20E0090:
004e42 940e e3cc 	CALL __GETW1P
004e44 940e c3d6 	CALL SUBOPT_0x34
004e46 940e c2ea 	CALL SUBOPT_0x12
                 ; 0007 0195 
                 ; 0007 0196     return 0;
004e48 e0e0      	LDI  R30,LOW(0)
004e49 e0f0      	LDI  R31,HIGH(0)
004e4a 9622      	ADIW R28,2
004e4b 9508      	RET
                 ; 0007 0197 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 019F {
                 _setPropertiesConfig:
                 ; 0007 01A0     int i;
                 ; 0007 01A1 
                 ; 0007 01A2     for(i=0;i<DEVTYPE_LENGTH;i++)
004e4c 940e c5e5 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
004e4e e000     +LDI R16 , LOW ( 0 )
004e4f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
004e50 3104     +CPI R16 , LOW ( 20 )
004e51 e0e0     +LDI R30 , HIGH ( 20 )
004e52 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004e53 f474      	BRGE _0xE0068
                 ; 0007 01A3     {
                 ; 0007 01A4         config_prop.deviceType[i]       = newConfig->deviceType[i];
004e54 01f8      	MOVW R30,R16
004e55 50e0      	SUBI R30,LOW(-_config_prop)
004e56 40f0      	SBCI R31,HIGH(-_config_prop)
004e57 010f      	MOVW R0,R30
004e58 01f8      	MOVW R30,R16
004e59 81aa      	LDD  R26,Y+2
004e5a 81bb      	LDD  R27,Y+2+1
004e5b 940e ca1d 	CALL SUBOPT_0x132
004e5d 940e e448 	CALL __EEPROMWRB
                 ; 0007 01A5     }
                +
004e5f 5f0f     +SUBI R16 , LOW ( - 1 )
004e60 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e61 cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A6 
                 ; 0007 01A7     /*
                 ; 0007 01A8     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01A9     {
                 ; 0007 01AA         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AB     }
                 ; 0007 01AC     */
                 ; 0007 01AD 
                 ; 0007 01AE     for(i=0;i<NAME_LENGTH;i++)
                +
004e62 e000     +LDI R16 , LOW ( 0 )
004e63 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
004e64 3208     +CPI R16 , LOW ( 40 )
004e65 e0e0     +LDI R30 , HIGH ( 40 )
004e66 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004e67 f484      	BRGE _0xE006B
                 ; 0007 01AF     {
                 ; 0007 01B0         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
004e68 e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004e69 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004e6a 0fe0      	ADD  R30,R16
004e6b 1ff1      	ADC  R31,R17
004e6c 01df      	MOVW R26,R30
004e6d 81ea      	LDD  R30,Y+2
004e6e 81fb      	LDD  R31,Y+2+1
004e6f 96b8      	ADIW R30,40
004e70 0fe0      	ADD  R30,R16
004e71 1ff1      	ADC  R31,R17
004e72 81e0      	LD   R30,Z
004e73 940e e448 	CALL __EEPROMWRB
                 ; 0007 01B1     }
                +
004e75 5f0f     +SUBI R16 , LOW ( - 1 )
004e76 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e77 cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B2 
                 ; 0007 01B3     for(i=0;i<ID_LENGTH;i++)
                +
004e78 e000     +LDI R16 , LOW ( 0 )
004e79 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
004e7a 3104     +CPI R16 , LOW ( 20 )
004e7b e0e0     +LDI R30 , HIGH ( 20 )
004e7c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004e7d f46c      	BRGE _0xE006E
                 ; 0007 01B4     {
                 ; 0007 01B5         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
004e7e e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004e7f e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004e80 0fe0      	ADD  R30,R16
004e81 1ff1      	ADC  R31,R17
004e82 01df      	MOVW R26,R30
004e83 940e c8dc 	CALL SUBOPT_0xFB
004e85 81e0      	LD   R30,Z
004e86 940e e448 	CALL __EEPROMWRB
                 ; 0007 01B6     }
                +
004e88 5f0f     +SUBI R16 , LOW ( - 1 )
004e89 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e8a cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01B7 
                 ; 0007 01B8     for(i=0;i<NAME_LENGTH;i++)
                +
004e8b e000     +LDI R16 , LOW ( 0 )
004e8c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
004e8d 3208     +CPI R16 , LOW ( 40 )
004e8e e0e0     +LDI R30 , HIGH ( 40 )
004e8f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004e90 f46c      	BRGE _0xE0071
                 ; 0007 01B9     {
                 ; 0007 01BA         config_prop.hostName[i]         = newConfig->hostName[i];
                +
004e91 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004e92 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004e93 0fe0      	ADD  R30,R16
004e94 1ff1      	ADC  R31,R17
004e95 01df      	MOVW R26,R30
004e96 940e c8e3 	CALL SUBOPT_0xFC
004e98 81e0      	LD   R30,Z
004e99 940e e448 	CALL __EEPROMWRB
                 ; 0007 01BB     }
                +
004e9b 5f0f     +SUBI R16 , LOW ( - 1 )
004e9c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e9d cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BC 
                 ; 0007 01BD     for(i=0;i<ID_LENGTH;i++)
                +
004e9e e000     +LDI R16 , LOW ( 0 )
004e9f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004ea0 3104     +CPI R16 , LOW ( 20 )
004ea1 e0e0     +LDI R30 , HIGH ( 20 )
004ea2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004ea3 f46c      	BRGE _0xE0074
                 ; 0007 01BE     {
                 ; 0007 01BF         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004ea4 e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004ea5 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004ea6 0fe0      	ADD  R30,R16
004ea7 1ff1      	ADC  R31,R17
004ea8 01df      	MOVW R26,R30
004ea9 940e c8ea 	CALL SUBOPT_0xFD
004eab 81e0      	LD   R30,Z
004eac 940e e448 	CALL __EEPROMWRB
                 ; 0007 01C0     }
                +
004eae 5f0f     +SUBI R16 , LOW ( - 1 )
004eaf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004eb0 cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C1 
                 ; 0007 01C2     config_prop.timeZone                = newConfig->timeZone;
                +
004eb1 eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004eb2 e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004eb3 010f      	MOVW R0,R30
004eb4 81aa      	LDD  R26,Y+2
004eb5 81bb      	LDD  R27,Y+2+1
004eb6 56a0      	SUBI R26,LOW(-160)
004eb7 4fbf      	SBCI R27,HIGH(-160)
004eb8 940e ca22 	CALL SUBOPT_0x133
                 ; 0007 01C3 
                 ; 0007 01C4     config_prop_flag                    = 0x01;
004eba e4a2      	LDI  R26,LOW(_config_prop_flag)
004ebb e0b5      	LDI  R27,HIGH(_config_prop_flag)
004ebc 940e ca27 	CALL SUBOPT_0x134
                 ; 0007 01C5 
                 ; 0007 01C6     is_properties_config_update          = 1;
004ebe 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01C7 
                 ; 0007 01C8     return 0;
004ec0 940e c809 	CALL SUBOPT_0xD6
004ec2 c090      	RJMP _0x20E008E
                 ; 0007 01C9 }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CC {
                 _setOperatingConfig:
                 ; 0007 01CD     int i;
                 ; 0007 01CE 
                 ; 0007 01CF     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004ec3 940e c5e5 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004ec5 81aa      	LDD  R26,Y+2
004ec6 81bb      	LDD  R27,Y+2+1
004ec7 91ac      	LD   R26,X
004ec8 31a0      	CPI  R26,LOW(0x10)
004ec9 f029      	BREQ _0xE0076
004eca 81aa      	LDD  R26,Y+2
004ecb 81bb      	LDD  R27,Y+2+1
004ecc 91ac      	LD   R26,X
004ecd 32a0      	CPI  R26,LOW(0x20)
004ece f409      	BRNE _0xE0077
                 _0xE0076:
004ecf c00b      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D0         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004ed0 eaef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004ed1 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004ed2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004ed3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004ed4 940e c919 	CALL SUBOPT_0x104
                 ; 0007 01D1         return -1;
004ed6 efef      	LDI  R30,LOW(65535)
004ed7 efff      	LDI  R31,HIGH(65535)
004ed8 8119      	LDD  R17,Y+1
004ed9 8108      	LDD  R16,Y+0
004eda c078      	RJMP _0x20E008E
                 ; 0007 01D2     }
                 ; 0007 01D3 
                 ; 0007 01D4     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004edb 81aa      	LDD  R26,Y+2
004edc 81bb      	LDD  R27,Y+2+1
004edd 91ec      	LD   R30,X
004ede eaa1      	LDI  R26,LOW(_config_oper)
004edf e0b0      	LDI  R27,HIGH(_config_oper)
004ee0 940e e448 	CALL __EEPROMWRB
                 ; 0007 01D5     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004ee2 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004ee3 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004ee4 81ea      	LDD  R30,Y+2
004ee5 81fb      	LDD  R31,Y+2+1
004ee6 81e1      	LDD  R30,Z+1
004ee7 940e e448 	CALL __EEPROMWRB
                 ; 0007 01D6     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004ee9 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004eea e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004eeb 81ea      	LDD  R30,Y+2
004eec 81fb      	LDD  R31,Y+2+1
004eed 81e2      	LDD  R30,Z+2
004eee 940e e448 	CALL __EEPROMWRB
                 ; 0007 01D7 
                 ; 0007 01D8     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004ef0 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004ef1 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004ef2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004ef3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004ef4 940e e400 	CALL __PUTPARD1
004ef6 eaa1      	LDI  R26,LOW(_config_oper)
004ef7 e0b0      	LDI  R27,HIGH(_config_oper)
004ef8 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 01D9     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004efa e0ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004efb e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004efc e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004efd e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004efe 940e e400 	CALL __PUTPARD1
                +
004f00 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004f01 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004f02 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 01DA     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004f04 940e ca2e 	CALL SUBOPT_0x136
                +
004f06 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004f07 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004f08 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 01DB     printDebug("\r\n sensorEnable    >> ");
                +
004f0a e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004f0b e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004f0c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004f0d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004f0e 940e c274 	CALL SUBOPT_0x3
                 ; 0007 01DC 
                 ; 0007 01DD     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004f10 e000     +LDI R16 , LOW ( 0 )
004f11 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004f12 3005     +CPI R16 , LOW ( 5 )
004f13 e0e0     +LDI R30 , HIGH ( 5 )
004f14 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004f15 f4c4      	BRGE _0xE007A
                 ; 0007 01DE     {
                 ; 0007 01DF         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004f16 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004f17 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004f18 0fe0      	ADD  R30,R16
004f19 1ff1      	ADC  R31,R17
004f1a 01df      	MOVW R26,R30
004f1b 940e c8ff 	CALL SUBOPT_0x100
004f1d 81e0      	LD   R30,Z
004f1e 940e e448 	CALL __EEPROMWRB
                 ; 0007 01E0         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004f20 940e c9f3 	CALL SUBOPT_0x12A
004f22 940e e400 	CALL __PUTPARD1
                +
004f24 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004f25 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004f26 0fe0      	ADD  R30,R16
004f27 1ff1      	ADC  R31,R17
004f28 01df      	MOVW R26,R30
004f29 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 01E1     }
                +
004f2b 5f0f     +SUBI R16 , LOW ( - 1 )
004f2c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004f2d cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E2     printDebug("\r\n");
004f2e 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 01E3 
                 ; 0007 01E4     config_oper_flag                    =   0x01;
004f30 e4a3      	LDI  R26,LOW(_config_oper_flag)
004f31 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004f32 940e ca27 	CALL SUBOPT_0x134
                 ; 0007 01E5 
                 ; 0007 01E6     is_operating_config_update          =   1;
004f34 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01E7 
                 ; 0007 01E8     return 0;
004f36 940e c809 	CALL SUBOPT_0xD6
004f38 c01a      	RJMP _0x20E008E
                 ; 0007 01E9 }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EC {
                 _setSensorConfig:
                 ; 0007 01ED     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004f39 940e c933 	CALL SUBOPT_0x109
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004f3b f022      	BRMI _0xE007C
004f3c 81aa      	LDD  R26,Y+2
004f3d 81bb      	LDD  R27,Y+2+1
004f3e 9715      	SBIW R26,5
004f3f f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01EE         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004f40 e5eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004f41 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004f42 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004f43 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004f44 c008      	RJMP _0x20E008D
                 ; 0007 01EF         return -1;
                 ; 0007 01F0     }
                 ; 0007 01F1     if(newConfig->samplingRate == 0){
                 _0xE007B:
004f45 940e ca35 	CALL SUBOPT_0x137
004f47 9730      	SBIW R30,0
004f48 f461      	BRNE _0xE007E
                 ; 0007 01F2         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004f49 e8e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004f4a e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004f4b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004f4c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E008D:
004f4d 940e e400 	CALL __PUTPARD1
004f4f 940e c3df 	CALL SUBOPT_0x36
                 ; 0007 01F3         return -1;
                 _0x20E008F:
004f51 efef      	LDI  R30,LOW(65535)
004f52 efff      	LDI  R31,HIGH(65535)
                 _0x20E008E:
004f53 9624      	ADIW R28,4
004f54 9508      	RET
                 ; 0007 01F4     }
                 ; 0007 01F5 
                 ; 0007 01F6     if(newConfig->samplingRate < 60){
                 _0xE007E:
004f55 940e ca35 	CALL SUBOPT_0x137
004f57 97fc      	SBIW R30,60
004f58 f430      	BRSH _0xE007F
                 ; 0007 01F7         newConfig->samplingRate         =   60;
004f59 81a8      	LD   R26,Y
004f5a 81b9      	LDD  R27,Y+1
004f5b e3ec      	LDI  R30,LOW(60)
004f5c e0f0      	LDI  R31,HIGH(60)
004f5d 93ed      	ST   X+,R30
004f5e 93fc      	ST   X,R31
                 ; 0007 01F8     }
                 ; 0007 01F9 
                 ; 0007 01FA     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004f5f 940e c947 	CALL SUBOPT_0x10D
004f61 55e7      	SUBI R30,LOW(-_config_sens)
004f62 4fff      	SBCI R31,HIGH(-_config_sens)
004f63 010f      	MOVW R0,R30
004f64 940e ca35 	CALL SUBOPT_0x137
004f66 940e ca3a 	CALL SUBOPT_0x138
                 ; 0007 01FB     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004f68 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004f69 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004f6a 010f      	MOVW R0,R30
004f6b 81a8      	LD   R26,Y
004f6c 81b9      	LDD  R27,Y+1
004f6d 9612      	ADIW R26,2
004f6e 940e ca3e 	CALL SUBOPT_0x139
                 ; 0007 01FC     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004f70 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004f71 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004f72 01df      	MOVW R26,R30
004f73 81e8      	LD   R30,Y
004f74 81f9      	LDD  R31,Y+1
004f75 81e4      	LDD  R30,Z+4
004f76 940e ca41 	CALL SUBOPT_0x13A
                 ; 0007 01FD     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004f78 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004f79 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004f7a 01df      	MOVW R26,R30
004f7b 81e8      	LD   R30,Y
004f7c 81f9      	LDD  R31,Y+1
004f7d 81e5      	LDD  R30,Z+5
004f7e 940e ca41 	CALL SUBOPT_0x13A
                 ; 0007 01FE     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004f80 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004f81 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004f82 01df      	MOVW R26,R30
004f83 81e8      	LD   R30,Y
004f84 81f9      	LDD  R31,Y+1
004f85 81e6      	LDD  R30,Z+6
004f86 940e ca41 	CALL SUBOPT_0x13A
                 ; 0007 01FF     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004f88 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004f89 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004f8a 01df      	MOVW R26,R30
004f8b 81e8      	LD   R30,Y
004f8c 81f9      	LDD  R31,Y+1
004f8d 81e7      	LDD  R30,Z+7
004f8e 940e ca41 	CALL SUBOPT_0x13A
                 ; 0007 0200 
                 ; 0007 0201     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004f90 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004f91 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004f92 01df      	MOVW R26,R30
004f93 81e8      	LD   R30,Y
004f94 81f9      	LDD  R31,Y+1
004f95 85e0      	LDD  R30,Z+8
004f96 940e ca41 	CALL SUBOPT_0x13A
                 ; 0007 0202     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004f98 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004f99 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004f9a 010f      	MOVW R0,R30
004f9b 81a8      	LD   R26,Y
004f9c 81b9      	LDD  R27,Y+1
004f9d 9619      	ADIW R26,9
004f9e 940e ca44 	CALL SUBOPT_0x13B
                 ; 0007 0203     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004fa0 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004fa1 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004fa2 010f      	MOVW R0,R30
004fa3 81a8      	LD   R26,Y
004fa4 81b9      	LDD  R27,Y+1
004fa5 961d      	ADIW R26,13
004fa6 940e ca3e 	CALL SUBOPT_0x139
                 ; 0007 0204     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004fa8 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004fa9 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004faa 010f      	MOVW R0,R30
004fab 81a8      	LD   R26,Y
004fac 81b9      	LDD  R27,Y+1
004fad 961f      	ADIW R26,15
004fae 940e ca44 	CALL SUBOPT_0x13B
                 ; 0007 0205     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004fb0 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004fb1 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004fb2 010f      	MOVW R0,R30
004fb3 81a8      	LD   R26,Y
004fb4 81b9      	LDD  R27,Y+1
004fb5 9653      	ADIW R26,19
004fb6 940e ca44 	CALL SUBOPT_0x13B
                 ; 0007 0206     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004fb8 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004fb9 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004fba 010f      	MOVW R0,R30
004fbb 81a8      	LD   R26,Y
004fbc 81b9      	LDD  R27,Y+1
004fbd 9657      	ADIW R26,23
004fbe 940e ca3e 	CALL SUBOPT_0x139
                 ; 0007 0207     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004fc0 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004fc1 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004fc2 010f      	MOVW R0,R30
004fc3 81a8      	LD   R26,Y
004fc4 81b9      	LDD  R27,Y+1
004fc5 9659      	ADIW R26,25
004fc6 940e ca4a 	CALL SUBOPT_0x13C
                 ; 0007 0208 
                 ; 0007 0209     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004fc8 ece4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004fc9 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004fca e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004fcb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004fcc 940e ca50 	CALL SUBOPT_0x13D
004fce 55e7      	SUBI R30,LOW(-_config_sens)
004fcf 4fff      	SBCI R31,HIGH(-_config_sens)
004fd0 940e ca58 	CALL SUBOPT_0x13E
004fd2 940e c2ea 	CALL SUBOPT_0x12
                 ; 0007 020A     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004fd4 eee1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004fd5 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004fd6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004fd7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004fd8 940e ca50 	CALL SUBOPT_0x13D
                +
004fda 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004fdb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004fdc 940e ca58 	CALL SUBOPT_0x13E
004fde 940e c2ea 	CALL SUBOPT_0x12
                 ; 0007 020B     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004fe0 efee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004fe1 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004fe2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004fe3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004fe4 940e ca50 	CALL SUBOPT_0x13D
                +
004fe6 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004fe7 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004fe8 01df      	MOVW R26,R30
004fe9 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 020C     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004feb e1eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004fec e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004fed e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004fee e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004fef 940e ca50 	CALL SUBOPT_0x13D
                +
004ff1 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004ff2 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004ff3 01df      	MOVW R26,R30
004ff4 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 020D     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004ff6 e3e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004ff7 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004ff8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004ff9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004ffa 940e ca50 	CALL SUBOPT_0x13D
                +
004ffc 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004ffd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004ffe 01df      	MOVW R26,R30
004fff 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 020E     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
005001 e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
005002 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
005003 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
005004 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
005005 940e ca50 	CALL SUBOPT_0x13D
                +
005007 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
005008 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
005009 01df      	MOVW R26,R30
00500a 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 020F 
                 ; 0007 0210     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
00500c 940e ca2e 	CALL SUBOPT_0x136
00500e 81ae      	LDD  R26,Y+6
00500f 81bf      	LDD  R27,Y+6+1
005010 e1ed      	LDI  R30,LOW(29)
005011 940e e31e 	CALL __MULB1W2U
                +
005013 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
005014 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
005015 01df      	MOVW R26,R30
005016 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 0211     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
005018 e7e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
005019 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
00501a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
00501b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
00501c 940e ca50 	CALL SUBOPT_0x13D
00501e 940e c94d 	CALL SUBOPT_0x10E
005020 940e c9e9 	CALL SUBOPT_0x128
005022 e1ed      	LDI  R30,LOW(29)
005023 940e e31e 	CALL __MULB1W2U
005025 940e c94d 	CALL SUBOPT_0x10E
005027 940e c34d 	CALL SUBOPT_0x21
                 ; 0007 0212     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
005029 e9e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
00502a e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
00502b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
00502c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
00502d 940e ca50 	CALL SUBOPT_0x13D
00502f 940e c953 	CALL SUBOPT_0x10F
005031 940e c3d6 	CALL SUBOPT_0x34
005033 85aa      	LDD  R26,Y+10
005034 85bb      	LDD  R27,Y+10+1
005035 e1ed      	LDI  R30,LOW(29)
005036 940e e31e 	CALL __MULB1W2U
005038 940e c953 	CALL SUBOPT_0x10F
00503a 940e ca5c 	CALL SUBOPT_0x13F
                 ; 0007 0213     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
00503c ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
00503d e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
00503e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
00503f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
005040 940e ca50 	CALL SUBOPT_0x13D
005042 940e c959 	CALL SUBOPT_0x110
005044 940e c9e9 	CALL SUBOPT_0x128
005046 e1ed      	LDI  R30,LOW(29)
005047 940e e31e 	CALL __MULB1W2U
005049 940e c959 	CALL SUBOPT_0x110
00504b 940e c34d 	CALL SUBOPT_0x21
                 ; 0007 0214     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
00504d ede4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
00504e e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
00504f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
005050 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
005051 940e ca50 	CALL SUBOPT_0x13D
005053 940e c95f 	CALL SUBOPT_0x111
005055 940e c9e9 	CALL SUBOPT_0x128
005057 e1ed      	LDI  R30,LOW(29)
005058 940e e31e 	CALL __MULB1W2U
00505a 940e c95f 	CALL SUBOPT_0x111
00505c 940e c34d 	CALL SUBOPT_0x21
                 ; 0007 0215     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
00505e efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
00505f e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
005060 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
005061 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
005062 940e ca50 	CALL SUBOPT_0x13D
005064 940e c965 	CALL SUBOPT_0x112
005066 940e c3d6 	CALL SUBOPT_0x34
005068 85aa      	LDD  R26,Y+10
005069 85bb      	LDD  R27,Y+10+1
00506a e1ed      	LDI  R30,LOW(29)
00506b 940e e31e 	CALL __MULB1W2U
00506d 940e c965 	CALL SUBOPT_0x112
00506f 940e ca5c 	CALL SUBOPT_0x13F
                 ; 0007 0216     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
005071 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
005072 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
005073 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
005074 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
005075 940e ca50 	CALL SUBOPT_0x13D
005077 940e c96b 	CALL SUBOPT_0x113
005079 940e c9e9 	CALL SUBOPT_0x128
00507b e1ed      	LDI  R30,LOW(29)
00507c 940e e31e 	CALL __MULB1W2U
00507e 940e c96b 	CALL SUBOPT_0x113
005080 940e c34d 	CALL SUBOPT_0x21
                 ; 0007 0217     printDebug("\r\n");
005082 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 0218 
                 ; 0007 0219     config_sens_flag[ch]                = 0x01;
005084 81aa      	LDD  R26,Y+2
005085 81bb      	LDD  R27,Y+2+1
005086 5bac      	SUBI R26,LOW(-_config_sens_flag)
005087 4fba      	SBCI R27,HIGH(-_config_sens_flag)
005088 e0e1      	LDI  R30,LOW(1)
005089 940e e448 	CALL __EEPROMWRB
                 ; 0007 021A     is_sensor_config_update[ch]          = 1;
00508b 81ea      	LDD  R30,Y+2
00508c 81fb      	LDD  R31,Y+2+1
00508d 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
00508e 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
00508f e0a1      	LDI  R26,LOW(1)
005090 83a0      	STD  Z+0,R26
                 ; 0007 021B 
                 ; 0007 021C     return 0;
005091 e0e0      	LDI  R30,LOW(0)
005092 e0f0      	LDI  R31,HIGH(0)
005093 c374      	RJMP _0x20E0088
                 ; 0007 021D }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0220 {
                 _setAuxDinConfig:
                 ; 0007 0221     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
005094 940e c933 	CALL SUBOPT_0x109
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
005096 f022      	BRMI _0xE0081
005097 81aa      	LDD  R26,Y+2
005098 81bb      	LDD  R27,Y+2+1
005099 9751      	SBIW R26,17
00509a f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0222         return -1;
00509b efef      	LDI  R30,LOW(65535)
00509c efff      	LDI  R31,HIGH(65535)
00509d c36a      	RJMP _0x20E0088
                 ; 0007 0223     }
                 ; 0007 0224 
                 ; 0007 0225     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
00509e 940e c976 	CALL SUBOPT_0x115
0050a0 5ce6      	SUBI R30,LOW(-_config_din)
0050a1 4ffe      	SBCI R31,HIGH(-_config_din)
0050a2 010f      	MOVW R0,R30
0050a3 81a8      	LD   R26,Y
0050a4 81b9      	LDD  R27,Y+1
0050a5 940e ca22 	CALL SUBOPT_0x133
                 ; 0007 0226     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
0050a7 940e c976 	CALL SUBOPT_0x115
                +
0050a9 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
0050aa 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
0050ab 940e ca5f 	CALL SUBOPT_0x140
0050ad 940e ca64 	CALL SUBOPT_0x141
                 ; 0007 0227 
                 ; 0007 0228     printDebug("\r\n channel         >> [%d]",      ch);
0050af 940e ca6a 	CALL SUBOPT_0x142
0050b1 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 0229     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
0050b3 940e ca6f 	CALL SUBOPT_0x143
0050b5 e0e3      	LDI  R30,LOW(3)
0050b6 940e e31e 	CALL __MULB1W2U
0050b8 5ce6      	SUBI R30,LOW(-_config_din)
0050b9 4ffe      	SBCI R31,HIGH(-_config_din)
0050ba 01df      	MOVW R26,R30
0050bb 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 022A     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
0050bd e6ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
0050be e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
0050bf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
0050c0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
0050c1 940e ca78 	CALL SUBOPT_0x144
0050c3 e0e3      	LDI  R30,LOW(3)
0050c4 940e e31e 	CALL __MULB1W2U
                +
0050c6 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
0050c7 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
0050c8 940e ca58 	CALL SUBOPT_0x13E
0050ca 940e c2ea 	CALL SUBOPT_0x12
                 ; 0007 022B 
                 ; 0007 022C     config_din_flag[ch]                 =   0x01;
0050cc 81aa      	LDD  R26,Y+2
0050cd 81bb      	LDD  R27,Y+2+1
0050ce 5ba7      	SUBI R26,LOW(-_config_din_flag)
0050cf 4fba      	SBCI R27,HIGH(-_config_din_flag)
0050d0 e0e1      	LDI  R30,LOW(1)
0050d1 940e e448 	CALL __EEPROMWRB
                 ; 0007 022D     is_din_config_update[ch]            =   1;
0050d3 81ea      	LDD  R30,Y+2
0050d4 81fb      	LDD  R31,Y+2+1
0050d5 50e3      	SUBI R30,LOW(-_is_din_config_update)
0050d6 4eff      	SBCI R31,HIGH(-_is_din_config_update)
0050d7 e0a1      	LDI  R26,LOW(1)
0050d8 83a0      	STD  Z+0,R26
                 ; 0007 022E     return 0;
0050d9 e0e0      	LDI  R30,LOW(0)
0050da e0f0      	LDI  R31,HIGH(0)
0050db c32c      	RJMP _0x20E0088
                 ; 0007 022F }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0232 {
                 _setAuxDoutConfig:
                 ; 0007 0233     int i;
                 ; 0007 0234 
                 ; 0007 0235     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
0050dc 940e c5e5 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
0050de 81ad      	LDD  R26,Y+5
0050df 23aa      	TST  R26
0050e0 f022      	BRMI _0xE0084
0050e1 81ac      	LDD  R26,Y+4
0050e2 81bd      	LDD  R27,Y+4+1
0050e3 9716      	SBIW R26,6
0050e4 f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0236         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
0050e5 e8e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
0050e6 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
0050e7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
0050e8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
0050e9 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0237         return -1;
0050eb efef      	LDI  R30,LOW(65535)
0050ec efff      	LDI  R31,HIGH(65535)
0050ed c143      	RJMP _0x20E008B
                 ; 0007 0238     }
                 ; 0007 0239 
                 ; 0007 023A     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
0050ee 81ea      	LDD  R30,Y+2
0050ef 81fb      	LDD  R31,Y+2+1
0050f0 81a2      	LDD  R26,Z+2
0050f1 32a4      	CPI  R26,LOW(0x24)
0050f2 f060      	BRLO _0xE0086
                 ; 0007 023B         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
0050f3 eaee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
0050f4 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
0050f5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
0050f6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
0050f7 940e c91f 	CALL SUBOPT_0x105
0050f9 81e2      	LDD  R30,Z+2
0050fa 940e c388 	CALL SUBOPT_0x29
                 ; 0007 023C         return -1;
0050fc efef      	LDI  R30,LOW(65535)
0050fd efff      	LDI  R31,HIGH(65535)
0050fe c132      	RJMP _0x20E008B
                 ; 0007 023D     }
                 ; 0007 023E 
                 ; 0007 023F     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
0050ff 940e c990 	CALL SUBOPT_0x119
005101 59e6      	SUBI R30,LOW(-_config_dout)
005102 4ffe      	SBCI R31,HIGH(-_config_dout)
005103 01df      	MOVW R26,R30
005104 e0e1      	LDI  R30,LOW(1)
005105 940e ca7d 	CALL SUBOPT_0x145
                 ; 0007 0240     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
005107 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
005108 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
005109 01df      	MOVW R26,R30
00510a e0e0      	LDI  R30,LOW(0)
00510b 940e ca7d 	CALL SUBOPT_0x145
                 ; 0007 0241     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
00510d 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00510e 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00510f 01df      	MOVW R26,R30
005110 81ea      	LDD  R30,Y+2
005111 81fb      	LDD  R31,Y+2+1
005112 81e2      	LDD  R30,Z+2
005113 940e ca80 	CALL SUBOPT_0x146
                 ; 0007 0242 
                 ; 0007 0243     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0244     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
005115 e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
005116 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
005117 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
005118 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
005119 940e c996 	CALL SUBOPT_0x11A
00511b 940e c99e 	CALL SUBOPT_0x11B
                 ; 0007 0245     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
00511d e2e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
00511e e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
00511f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
005120 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
005121 940e c996 	CALL SUBOPT_0x11A
005123 940e c9a4 	CALL SUBOPT_0x11C
                 ; 0007 0246     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
005125 940e ca87 	CALL SUBOPT_0x147
005127 940e c996 	CALL SUBOPT_0x11A
005129 940e c9aa 	CALL SUBOPT_0x11D
00512b 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0247     printDebug("\r\n eventSource       >> ");
00512d 940e ca8c 	CALL SUBOPT_0x148
                 ; 0007 0248 
                 ; 0007 0249     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
00512f e000     +LDI R16 , LOW ( 0 )
005130 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
005131 940e c990 	CALL SUBOPT_0x119
005133 940e c9aa 	CALL SUBOPT_0x11D
005135 940e c9b0 	CALL SUBOPT_0x11E
005137 f4d4      	BRGE _0xE0089
                 ; 0007 024A 
                 ; 0007 024B         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
005138 940e c990 	CALL SUBOPT_0x119
00513a 940e c9b5 	CALL SUBOPT_0x11F
00513c 940e c8ff 	CALL SUBOPT_0x100
00513e 81e0      	LD   R30,Z
00513f 940e ca7d 	CALL SUBOPT_0x145
                 ; 0007 024C 
                 ; 0007 024D         if( config_dout[ch].eventSource[i] != 0x00 ){
005141 940e c9b5 	CALL SUBOPT_0x11F
005143 940e e42c 	CALL __EEPROMRDB
005145 30e0      	CPI  R30,0
005146 f041      	BREQ _0xE008A
                 ; 0007 024E             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
005147 940e c9f3 	CALL SUBOPT_0x12A
005149 940e c996 	CALL SUBOPT_0x11A
00514b 940e c9b5 	CALL SUBOPT_0x11F
00514d 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 024F         }
                 ; 0007 0250     }
                 _0xE008A:
                +
00514f 5f0f     +SUBI R16 , LOW ( - 1 )
005150 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005151 cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0251     printDebug("\r\n");
005152 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 0252 
                 ; 0007 0253     config_dout_flag[ch]                =   0x01;
005154 81ac      	LDD  R26,Y+4
005155 81bd      	LDD  R27,Y+4+1
005156 5aa7      	SUBI R26,LOW(-_config_dout_flag)
005157 4fba      	SBCI R27,HIGH(-_config_dout_flag)
005158 e0e1      	LDI  R30,LOW(1)
005159 940e e448 	CALL __EEPROMWRB
                 ; 0007 0254     is_dout_config_update[ch]           =   1;
00515b 81ec      	LDD  R30,Y+4
00515c 81fd      	LDD  R31,Y+4+1
00515d 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
00515e 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
00515f e0a1      	LDI  R26,LOW(1)
005160 83a0      	STD  Z+0,R26
                 ; 0007 0255 
                 ; 0007 0256     return 0;
005161 c0cd      	RJMP _0x20E008C
                 ; 0007 0257 }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025A {
                 _setAuxAinConfig:
                 ; 0007 025B     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
005162 940e c933 	CALL SUBOPT_0x109
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
005164 f022      	BRMI _0xE008C
005165 81aa      	LDD  R26,Y+2
005166 81bb      	LDD  R27,Y+2+1
005167 9751      	SBIW R26,17
005168 f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025C         return -1;
005169 efef      	LDI  R30,LOW(65535)
00516a efff      	LDI  R31,HIGH(65535)
00516b c29c      	RJMP _0x20E0088
                 ; 0007 025D     }
                 ; 0007 025E 
                 ; 0007 025F     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
00516c 940e c9bb 	CALL SUBOPT_0x120
00516e 5de8      	SUBI R30,LOW(-_config_ain)
00516f 4ffd      	SBCI R31,HIGH(-_config_ain)
005170 010f      	MOVW R0,R30
005171 81a8      	LD   R26,Y
005172 81b9      	LDD  R27,Y+1
005173 940e ca22 	CALL SUBOPT_0x133
                 ; 0007 0260     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
005175 940e c9bb 	CALL SUBOPT_0x120
                +
005177 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
005178 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
005179 940e ca5f 	CALL SUBOPT_0x140
00517b 940e ca4a 	CALL SUBOPT_0x13C
                 ; 0007 0261 
                 ; 0007 0262     printDebug("\r\n channel         >> [%d]",      ch);
00517d 940e ca6a 	CALL SUBOPT_0x142
00517f 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 0263     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
005181 940e ca6f 	CALL SUBOPT_0x143
005183 e0e5      	LDI  R30,LOW(5)
005184 940e e31e 	CALL __MULB1W2U
005186 5de8      	SUBI R30,LOW(-_config_ain)
005187 4ffd      	SBCI R31,HIGH(-_config_ain)
005188 01df      	MOVW R26,R30
005189 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 0264     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
00518b e7e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
00518c e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
00518d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
00518e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
00518f 940e ca78 	CALL SUBOPT_0x144
005191 e0e5      	LDI  R30,LOW(5)
005192 940e e31e 	CALL __MULB1W2U
                +
005194 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
005195 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
005196 940e ca92 	CALL SUBOPT_0x149
                 ; 0007 0265 
                 ; 0007 0266     config_ain_flag[ch]                 = 0x01;
005198 81aa      	LDD  R26,Y+2
005199 81bb      	LDD  R27,Y+2+1
00519a 5aa2      	SUBI R26,LOW(-_config_ain_flag)
00519b 4fba      	SBCI R27,HIGH(-_config_ain_flag)
00519c e0e1      	LDI  R30,LOW(1)
00519d 940e e448 	CALL __EEPROMWRB
                 ; 0007 0267 
                 ; 0007 0268     return 0;
00519f e0e0      	LDI  R30,LOW(0)
0051a0 e0f0      	LDI  R31,HIGH(0)
0051a1 c266      	RJMP _0x20E0088
                 ; 0007 0269 }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026C {
                 _setAuxAoutConfig:
                 ; 0007 026D     int i;
                 ; 0007 026E 
                 ; 0007 026F     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
0051a2 940e c5e5 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
0051a4 81ad      	LDD  R26,Y+5
0051a5 23aa      	TST  R26
0051a6 f022      	BRMI _0xE008F
0051a7 81ac      	LDD  R26,Y+4
0051a8 81bd      	LDD  R27,Y+4+1
0051a9 9751      	SBIW R26,17
0051aa f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0270         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
0051ab e9e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
0051ac e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
0051ad e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
0051ae e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
0051af 940e c274 	CALL SUBOPT_0x3
                 ; 0007 0271         return -1;
0051b1 efef      	LDI  R30,LOW(65535)
0051b2 efff      	LDI  R31,HIGH(65535)
0051b3 c07d      	RJMP _0x20E008B
                 ; 0007 0272     }
                 ; 0007 0273 
                 ; 0007 0274     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
0051b4 81ea      	LDD  R30,Y+2
0051b5 81fb      	LDD  R31,Y+2+1
0051b6 81a5      	LDD  R26,Z+5
0051b7 32a4      	CPI  R26,LOW(0x24)
0051b8 f060      	BRLO _0xE0091
                 ; 0007 0275         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
0051b9 ebe9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
0051ba e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
0051bb e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
0051bc e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
0051bd 940e c91f 	CALL SUBOPT_0x105
0051bf 81e5      	LDD  R30,Z+5
0051c0 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0276         return -1;
0051c2 efef      	LDI  R30,LOW(65535)
0051c3 efff      	LDI  R31,HIGH(65535)
0051c4 c06c      	RJMP _0x20E008B
                 ; 0007 0277     }
                 ; 0007 0278 
                 ; 0007 0279     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
0051c5 940e c9c7 	CALL SUBOPT_0x122
0051c7 58e8      	SUBI R30,LOW(-_config_aout)
0051c8 4ffd      	SBCI R31,HIGH(-_config_aout)
0051c9 010f      	MOVW R0,R30
0051ca 81aa      	LDD  R26,Y+2
0051cb 81bb      	LDD  R27,Y+2+1
0051cc 940e ca22 	CALL SUBOPT_0x133
                 ; 0007 027A     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
0051ce 940e c9c7 	CALL SUBOPT_0x122
                +
0051d0 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
0051d1 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
0051d2 010f      	MOVW R0,R30
0051d3 81aa      	LDD  R26,Y+2
0051d4 81bb      	LDD  R27,Y+2+1
0051d5 9611      	ADIW R26,1
0051d6 940e ca4a 	CALL SUBOPT_0x13C
                 ; 0007 027B     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
0051d8 940e c9c7 	CALL SUBOPT_0x122
                +
0051da 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
0051db 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
0051dc 01df      	MOVW R26,R30
0051dd 81ea      	LDD  R30,Y+2
0051de 81fb      	LDD  R31,Y+2+1
0051df 81e5      	LDD  R30,Z+5
0051e0 940e ca80 	CALL SUBOPT_0x146
                 ; 0007 027C 
                 ; 0007 027D     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 027E     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
0051e2 e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
0051e3 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
0051e4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
0051e5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
0051e6 940e ca99 	CALL SUBOPT_0x14A
0051e8 58e8      	SUBI R30,LOW(-_config_aout)
0051e9 4ffd      	SBCI R31,HIGH(-_config_aout)
0051ea 01df      	MOVW R26,R30
0051eb 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 027F     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
0051ed efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
0051ee e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
0051ef e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
0051f0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
0051f1 940e ca99 	CALL SUBOPT_0x14A
                +
0051f3 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
0051f4 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
0051f5 940e ca92 	CALL SUBOPT_0x149
                 ; 0007 0280     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
0051f7 940e ca87 	CALL SUBOPT_0x147
0051f9 940e ca99 	CALL SUBOPT_0x14A
0051fb 940e c9cd 	CALL SUBOPT_0x123
0051fd 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0281     printDebug("\r\n eventSource       >> ");
0051ff 940e ca8c 	CALL SUBOPT_0x148
                 ; 0007 0282 
                 ; 0007 0283     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
005201 e000     +LDI R16 , LOW ( 0 )
005202 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
005203 940e c9c7 	CALL SUBOPT_0x122
005205 940e c9cd 	CALL SUBOPT_0x123
005207 940e c9b0 	CALL SUBOPT_0x11E
005209 f4e4      	BRGE _0xE0094
                 ; 0007 0284 
                 ; 0007 0285         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
00520a 940e c9c7 	CALL SUBOPT_0x122
00520c 940e c9d3 	CALL SUBOPT_0x124
00520e 940e c9c1 	CALL SUBOPT_0x121
005210 81e0      	LD   R30,Z
005211 940e e448 	CALL __EEPROMWRB
                 ; 0007 0286 
                 ; 0007 0287         if( config_aout[ch].eventSource[i] != 0x00 ){
005213 940e c9c7 	CALL SUBOPT_0x122
005215 940e c9d3 	CALL SUBOPT_0x124
005217 940e e42c 	CALL __EEPROMRDB
005219 30e0      	CPI  R30,0
00521a f041      	BREQ _0xE0095
                 ; 0007 0288             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
00521b 940e c9f3 	CALL SUBOPT_0x12A
00521d 940e ca99 	CALL SUBOPT_0x14A
00521f 940e c9d3 	CALL SUBOPT_0x124
005221 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 0289         }
                 ; 0007 028A     }
                 _0xE0095:
                +
005223 5f0f     +SUBI R16 , LOW ( - 1 )
005224 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005225 cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028B     printDebug("\r\n");
005226 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 028C 
                 ; 0007 028D     config_aout_flag[ch]                =   0x01;
005228 81ac      	LDD  R26,Y+4
005229 81bd      	LDD  R27,Y+4+1
00522a 59a2      	SUBI R26,LOW(-_config_aout_flag)
00522b 4fba      	SBCI R27,HIGH(-_config_aout_flag)
00522c e0e1      	LDI  R30,LOW(1)
00522d 940e e448 	CALL __EEPROMWRB
                 ; 0007 028E 
                 ; 0007 028F     return 0;
                 _0x20E008C:
00522f e0e0      	LDI  R30,LOW(0)
005230 e0f0      	LDI  R31,HIGH(0)
                 _0x20E008B:
005231 8119      	LDD  R17,Y+1
005232 8108      	LDD  R16,Y+0
005233 9626      	ADIW R28,6
005234 9508      	RET
                 ; 0007 0290 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0293 {
                 _setBuzzerConfig:
                 ; 0007 0294     int i;
                 ; 0007 0295 
                 ; 0007 0296     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
005235 940e c5e5 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
005237 81ea      	LDD  R30,Y+2
005238 81fb      	LDD  R31,Y+2+1
005239 81a1      	LDD  R26,Z+1
00523a 32a4      	CPI  R26,LOW(0x24)
00523b f070      	BRLO _0xE0096
                 ; 0007 0297         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
00523c e1e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
00523d e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
00523e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
00523f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
005240 940e c91f 	CALL SUBOPT_0x105
005242 81e1      	LDD  R30,Z+1
005243 940e c388 	CALL SUBOPT_0x29
                 ; 0007 0298         return -1;
005245 efef      	LDI  R30,LOW(65535)
005246 efff      	LDI  R31,HIGH(65535)
005247 8119      	LDD  R17,Y+1
005248 8108      	LDD  R16,Y+0
005249 c1be      	RJMP _0x20E0088
                 ; 0007 0299     }
                 ; 0007 029A 
                 ; 0007 029B     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
00524a 81aa      	LDD  R26,Y+2
00524b 81bb      	LDD  R27,Y+2+1
00524c 91ec      	LD   R30,X
00524d e0a8      	LDI  R26,LOW(_config_buzz)
00524e e0b5      	LDI  R27,HIGH(_config_buzz)
00524f 940e e448 	CALL __EEPROMWRB
                 ; 0007 029C     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
005251 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
005252 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
005253 81ea      	LDD  R30,Y+2
005254 81fb      	LDD  R31,Y+2+1
005255 81e1      	LDD  R30,Z+1
005256 940e e448 	CALL __EEPROMWRB
                 ; 0007 029D 
                 ; 0007 029E     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
005258 e4eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
005259 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
00525a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
00525b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
00525c 940e e400 	CALL __PUTPARD1
00525e e0a8      	LDI  R26,LOW(_config_buzz)
00525f e0b5      	LDI  R27,HIGH(_config_buzz)
005260 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 029F     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
005262 940e ca87 	CALL SUBOPT_0x147
005264 940e e400 	CALL __PUTPARD1
005266 940e c9e4 	CALL SUBOPT_0x127
005268 940e c388 	CALL SUBOPT_0x29
                 ; 0007 02A0     printDebug("\r\n eventSource       >>");
                +
00526a e6ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
00526b e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
00526c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
00526d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
00526e 940e c274 	CALL SUBOPT_0x3
                 ; 0007 02A1 
                 ; 0007 02A2     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
005270 e000     +LDI R16 , LOW ( 0 )
005271 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
005272 940e c9e4 	CALL SUBOPT_0x127
005274 940e c9b0 	CALL SUBOPT_0x11E
005276 f4cc      	BRGE _0xE0099
                 ; 0007 02A3 
                 ; 0007 02A4         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
005277 940e caa1 	CALL SUBOPT_0x14B
005279 81ea      	LDD  R30,Y+2
00527a 81fb      	LDD  R31,Y+2+1
00527b 940e c9f8 	CALL SUBOPT_0x12B
00527d 940e e448 	CALL __EEPROMWRB
                 ; 0007 02A5 
                 ; 0007 02A6         if( config_buzz.eventSource[i] != 0x00 ){
00527f 940e caa1 	CALL SUBOPT_0x14B
005281 940e e42c 	CALL __EEPROMRDB
005283 30e0      	CPI  R30,0
005284 f041      	BREQ _0xE009A
                 ; 0007 02A7             printDebug("[0x%02X]",config_buzz.eventSource[i]);
005285 940e c9f3 	CALL SUBOPT_0x12A
005287 940e e400 	CALL __PUTPARD1
005289 940e caa1 	CALL SUBOPT_0x14B
00528b 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 02A8         }
                 ; 0007 02A9 
                 ; 0007 02AA     }
                 _0xE009A:
                +
00528d 5f0f     +SUBI R16 , LOW ( - 1 )
00528e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00528f cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AB     printDebug("\r\n");
005290 940e c92e 	CALL SUBOPT_0x108
                 ; 0007 02AC 
                 ; 0007 02AD     config_buzz_flag                    =   0x01;
005292 e7ae      	LDI  R26,LOW(_config_buzz_flag)
005293 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
005294 940e ca27 	CALL SUBOPT_0x134
                 ; 0007 02AE 
                 ; 0007 02AF     is_buzzer_config_update             =   1;
005296 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B0 
                 ; 0007 02B1     return 0;
005298 940e c809 	CALL SUBOPT_0xD6
00529a c16d      	RJMP _0x20E0088
                 ; 0007 02B2 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B5 {
                 _setEnvAlarmConfig:
                 ; 0007 02B6     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
00529b 93ba      	ST   -Y,R27
00529c 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
00529d 81a8      	LD   R26,Y
00529e 81b9      	LDD  R27,Y+1
00529f 940e e3d0 	CALL __GETD1P
0052a1 e2ad      	LDI  R26,LOW(_config_alm)
0052a2 e0b5      	LDI  R27,HIGH(_config_alm)
0052a3 940e e438 	CALL __EEPROMWRD
                 ; 0007 02B7     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
0052a5 e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
0052a6 e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
0052a7 010f      	MOVW R0,R30
0052a8 81a8      	LD   R26,Y
0052a9 81b9      	LDD  R27,Y+1
0052aa 9614      	ADIW R26,4
0052ab 940e ca64 	CALL SUBOPT_0x141
                 ; 0007 02B8     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
0052ad e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
0052ae e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
0052af 010f      	MOVW R0,R30
0052b0 81a8      	LD   R26,Y
0052b1 81b9      	LDD  R27,Y+1
0052b2 9616      	ADIW R26,6
0052b3 940e ca4a 	CALL SUBOPT_0x13C
                 ; 0007 02B9     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
0052b5 e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
0052b6 e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
0052b7 010f      	MOVW R0,R30
0052b8 81a8      	LD   R26,Y
0052b9 81b9      	LDD  R27,Y+1
0052ba 961a      	ADIW R26,10
0052bb 940e ca4a 	CALL SUBOPT_0x13C
                 ; 0007 02BA     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
0052bd e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
0052be e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
0052bf 010f      	MOVW R0,R30
0052c0 81a8      	LD   R26,Y
0052c1 81b9      	LDD  R27,Y+1
0052c2 961e      	ADIW R26,14
0052c3 940e ca64 	CALL SUBOPT_0x141
                 ; 0007 02BB     config_alm.memoryMin                =   newConfig->memoryMin;
                +
0052c5 e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
0052c6 e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
0052c7 010f      	MOVW R0,R30
0052c8 81a8      	LD   R26,Y
0052c9 81b9      	LDD  R27,Y+1
0052ca 9650      	ADIW R26,16
0052cb 940e ca64 	CALL SUBOPT_0x141
                 ; 0007 02BC 
                 ; 0007 02BD     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
0052cd e8e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
0052ce e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
0052cf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
0052d0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
0052d1 940e e400 	CALL __PUTPARD1
0052d3 e2ad      	LDI  R26,LOW(_config_alm)
0052d4 e0b5      	LDI  R27,HIGH(_config_alm)
0052d5 940e caa7 	CALL SUBOPT_0x14C
                 ; 0007 02BE     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
0052d7 e9ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
0052d8 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
0052d9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
0052da e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
0052db 940e e400 	CALL __PUTPARD1
                +
0052dd e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
0052de e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
0052df 940e e428 	CALL __EEPROMRDW
0052e1 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 02BF     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
0052e3 ebee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
0052e4 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
0052e5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
0052e6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
0052e7 940e e400 	CALL __PUTPARD1
                +
0052e9 e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
0052ea e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
0052eb 940e caa7 	CALL SUBOPT_0x14C
                 ; 0007 02C0     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
0052ed edee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
0052ee e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
0052ef e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
0052f0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
0052f1 940e e400 	CALL __PUTPARD1
                +
0052f3 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
0052f4 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
0052f5 940e caa7 	CALL SUBOPT_0x14C
                 ; 0007 02C1     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
0052f7 efeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
0052f8 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
0052f9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
0052fa e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
0052fb 940e e400 	CALL __PUTPARD1
                +
0052fd e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
0052fe e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
0052ff 940e e428 	CALL __EEPROMRDW
005301 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 02C2     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
005303 e1e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
005304 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
005305 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
005306 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
005307 940e e400 	CALL __PUTPARD1
                +
005309 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
00530a e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
00530b 940e e428 	CALL __EEPROMRDW
00530d 940e c3d6 	CALL SUBOPT_0x34
00530f 940e c2ea 	CALL SUBOPT_0x12
                 ; 0007 02C3 
                 ; 0007 02C4     config_alm_flag                 = 0x01;
005311 e7af      	LDI  R26,LOW(_config_alm_flag)
005312 e0b5      	LDI  R27,HIGH(_config_alm_flag)
005313 940e ca27 	CALL SUBOPT_0x134
                 ; 0007 02C5     is_env_config_update            = 1;
005315 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C6     return 0;
005317 c02d      	RJMP _0x20E008A
                 ; 0007 02C7 }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CA {
                 _setStatusReportConfig:
                 ; 0007 02CB     config_stat.accm                    =   newConfig->accm;
005318 93ba      	ST   -Y,R27
005319 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
00531a 81a8      	LD   R26,Y
00531b 81b9      	LDD  R27,Y+1
00531c 91ec      	LD   R30,X
00531d e3af      	LDI  R26,LOW(_config_stat)
00531e e0b5      	LDI  R27,HIGH(_config_stat)
00531f 940e e448 	CALL __EEPROMWRB
                 ; 0007 02CC     config_stat.intv                    =   newConfig->intv;
                +
005321 e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
005322 e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
005323 940e ca5f 	CALL SUBOPT_0x140
005325 940e ca64 	CALL SUBOPT_0x141
                 ; 0007 02CD 
                 ; 0007 02CE     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
005327 e3e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
005328 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
005329 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
00532a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
00532b 940e e400 	CALL __PUTPARD1
00532d e3af      	LDI  R26,LOW(_config_stat)
00532e e0b5      	LDI  R27,HIGH(_config_stat)
00532f 940e ca2b 	CALL SUBOPT_0x135
                 ; 0007 02CF     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
005331 e4ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
005332 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
005333 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
005334 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
005335 940e e400 	CALL __PUTPARD1
                +
005337 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
005338 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
005339 940e e428 	CALL __EEPROMRDW
00533b 940e c3d6 	CALL SUBOPT_0x34
00533d 940e c2ea 	CALL SUBOPT_0x12
                 ; 0007 02D0 
                 ; 0007 02D1     config_stat_flag                    = 0x01;
00533f e8a0      	LDI  R26,LOW(_config_stat_flag)
005340 e0b5      	LDI  R27,HIGH(_config_stat_flag)
005341 940e ca27 	CALL SUBOPT_0x134
                 ; 0007 02D2     is_status_config_update             = 1;
005343 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D3     return 0;
                 _0x20E008A:
005345 e0e0      	LDI  R30,LOW(0)
005346 e0f0      	LDI  R31,HIGH(0)
005347 9622      	ADIW R28,2
005348 9508      	RET
                 ; 0007 02D4 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DC {
                 ; 0007 02DD     int i;
                 ; 0007 02DE 
                 ; 0007 02DF     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E0     config_oper_flag            = 0x00;
                 ; 0007 02E1 
                 ; 0007 02E2     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E3         config_sens_flag[i]     = 0x00;
                 ; 0007 02E4     }
                 ; 0007 02E5 
                 ; 0007 02E6     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02E7         config_din_flag[i]      = 0x00;
                 ; 0007 02E8     }
                 ; 0007 02E9 
                 ; 0007 02EA     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02EB         config_dout_flag[i]     = 0x00;
                 ; 0007 02EC     }
                 ; 0007 02ED 
                 ; 0007 02EE     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02EF         config_ain_flag[i]      = 0x00;
                 ; 0007 02F0     }
                 ; 0007 02F1 
                 ; 0007 02F2     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F3         config_aout_flag[i]     = 0x00;
                 ; 0007 02F4     }
                 ; 0007 02F5 
                 ; 0007 02F6     config_buzz_flag            = 0x00;
                 ; 0007 02F7     config_alm_flag             = 0x00;
                 ; 0007 02F8     config_stat_flag            = 0x00;
                 ; 0007 02F9 
                 ; 0007 02FA     return 0;
                 ; 0007 02FB }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 02FE {
                 _isDeviceConfig:
                 ; 0007 02FF     int i   = 0;
                 ; 0007 0300 
                 ; 0007 0301     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
005349 940e caad 	CALL SUBOPT_0x14D
                 ;	i -> R16,R17
00534b e4a2      	LDI  R26,LOW(_config_prop_flag)
00534c e0b5      	LDI  R27,HIGH(_config_prop_flag)
00534d 940e e42c 	CALL __EEPROMRDB
00534f 30e0      	CPI  R30,0
005350 f4c1      	BRNE _0xE00AB
005351 e4a3      	LDI  R26,LOW(_config_oper_flag)
005352 e0b5      	LDI  R27,HIGH(_config_oper_flag)
005353 940e e42c 	CALL __EEPROMRDB
005355 30e0      	CPI  R30,0
005356 f491      	BRNE _0xE00AB
005357 e7ae      	LDI  R26,LOW(_config_buzz_flag)
005358 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
005359 940e e42c 	CALL __EEPROMRDB
00535b 30e0      	CPI  R30,0
00535c f461      	BRNE _0xE00AB
00535d e7af      	LDI  R26,LOW(_config_alm_flag)
00535e e0b5      	LDI  R27,HIGH(_config_alm_flag)
00535f 940e e42c 	CALL __EEPROMRDB
005361 30e0      	CPI  R30,0
005362 f431      	BRNE _0xE00AB
005363 e8a0      	LDI  R26,LOW(_config_stat_flag)
005364 e0b5      	LDI  R27,HIGH(_config_stat_flag)
005365 940e e42c 	CALL __EEPROMRDB
005367 30e0      	CPI  R30,0
005368 f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0302         return 1;
005369 e0e1      	LDI  R30,LOW(1)
00536a e0f0      	LDI  R31,HIGH(1)
00536b c038      	RJMP _0x20E0089
                 ; 0007 0303     }
                 ; 0007 0304 
                 ; 0007 0305     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
00536c e000     +LDI R16 , LOW ( 0 )
00536d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
00536e 3005     +CPI R16 , LOW ( 5 )
00536f e0e0     +LDI R30 , HIGH ( 5 )
005370 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
005371 f464      	BRGE _0xE00AF
                 ; 0007 0306         if(config_sens_flag[i]){
005372 e4a4      	LDI  R26,LOW(_config_sens_flag)
005373 e0b5      	LDI  R27,HIGH(_config_sens_flag)
005374 940e c8cf 	CALL SUBOPT_0xF9
005376 30e0      	CPI  R30,0
005377 f019      	BREQ _0xE00B0
                 ; 0007 0307             return 1;
005378 e0e1      	LDI  R30,LOW(1)
005379 e0f0      	LDI  R31,HIGH(1)
00537a c029      	RJMP _0x20E0089
                 ; 0007 0308         }
                 ; 0007 0309     }
                 _0xE00B0:
                +
00537b 5f0f     +SUBI R16 , LOW ( - 1 )
00537c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00537d cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030A 
                 ; 0007 030B     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030C     for(i=0;i<2;i++){
                +
00537e e000     +LDI R16 , LOW ( 0 )
00537f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
005380 3002     +CPI R16 , LOW ( 2 )
005381 e0e0     +LDI R30 , HIGH ( 2 )
005382 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005383 f464      	BRGE _0xE00B3
                 ; 0007 030D         if(config_din_flag[i]){
005384 e4a9      	LDI  R26,LOW(_config_din_flag)
005385 e0b5      	LDI  R27,HIGH(_config_din_flag)
005386 940e c8cf 	CALL SUBOPT_0xF9
005388 30e0      	CPI  R30,0
005389 f019      	BREQ _0xE00B4
                 ; 0007 030E             return 1;
00538a e0e1      	LDI  R30,LOW(1)
00538b e0f0      	LDI  R31,HIGH(1)
00538c c017      	RJMP _0x20E0089
                 ; 0007 030F         }
                 ; 0007 0310     }
                 _0xE00B4:
                +
00538d 5f0f     +SUBI R16 , LOW ( - 1 )
00538e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00538f cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0311 
                 ; 0007 0312     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0313     for(i=0;i<2;i++){
                +
005390 e000     +LDI R16 , LOW ( 0 )
005391 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
005392 3002     +CPI R16 , LOW ( 2 )
005393 e0e0     +LDI R30 , HIGH ( 2 )
005394 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005395 f464      	BRGE _0xE00B7
                 ; 0007 0314         if(config_dout_flag[i]){
005396 e5a9      	LDI  R26,LOW(_config_dout_flag)
005397 e0b5      	LDI  R27,HIGH(_config_dout_flag)
005398 940e c8cf 	CALL SUBOPT_0xF9
00539a 30e0      	CPI  R30,0
00539b f019      	BREQ _0xE00B8
                 ; 0007 0315             return 1;
00539c e0e1      	LDI  R30,LOW(1)
00539d e0f0      	LDI  R31,HIGH(1)
00539e c005      	RJMP _0x20E0089
                 ; 0007 0316         }
                 ; 0007 0317     }
                 _0xE00B8:
                +
00539f 5f0f     +SUBI R16 , LOW ( - 1 )
0053a0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053a1 cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 0318     return 0;
0053a2 e0e0      	LDI  R30,LOW(0)
0053a3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0089:
0053a4 9109      	LD   R16,Y+
0053a5 9119      	LD   R17,Y+
0053a6 9508      	RET
                 ; 0007 0319 }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031C {
                 _getAllConfig:
                 ; 0007 031D     int i,err;
                 ; 0007 031E 
                 ; 0007 031F     // -- load configuration -- //
                 ; 0007 0320     getPropertiesConfig(&properties_config);
0053a7 940e e477 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
0053a9 940e c2c4 	CALL SUBOPT_0xD
                 ; 0007 0321     is_properties_config_update = 0;
                 ; 0007 0322 
                 ; 0007 0323     getOperatingConfig(&operating_config);
0053ab 940e c2cc 	CALL SUBOPT_0xE
                 ; 0007 0324     is_operating_config_update = 0;
                 ; 0007 0325 
                 ; 0007 0326     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0053ad e000     +LDI R16 , LOW ( 0 )
0053ae e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
0053af 3005     +CPI R16 , LOW ( 5 )
0053b0 e0e0     +LDI R30 , HIGH ( 5 )
0053b1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0053b2 f504      	BRGE _0xE00BB
                 ; 0007 0327         err = getSensorConfig(i,&sensor_config[i]);
0053b3 931a      	ST   -Y,R17
0053b4 930a      	ST   -Y,R16
                +
0053b5 e1ad     +LDI R26 , 29
0053b6 9fa0     +MUL R26 , R16
0053b7 01f0     +MOVW R30 , R0
0053b8 9fa1     +MUL R26 , R17
0053b9 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
0053ba 54e2      	SUBI R30,LOW(-_sensor_config)
0053bb 4efe      	SBCI R31,HIGH(-_sensor_config)
0053bc 01df      	MOVW R26,R30
0053bd 940e 4a6d 	CALL _getSensorConfig
0053bf 019f      	MOVW R18,R30
                 ; 0007 0328         if(err < 0){
0053c0 2333      	TST  R19
0053c1 f452      	BRPL _0xE00BC
                 ; 0007 0329             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
0053c2 e6e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
0053c3 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
0053c4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
0053c5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
0053c6 940e e400 	CALL __PUTPARD1
0053c8 01f8      	MOVW R30,R16
0053c9 940e c881 	CALL SUBOPT_0xE9
                 ; 0007 032A             continue;
0053cb c004      	RJMP _0xE00B9
                 ; 0007 032B         }
                 ; 0007 032C         is_sensor_config_update[i] = 0;
                 _0xE00BC:
0053cc efa8      	LDI  R26,LOW(_is_sensor_config_update)
0053cd e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0053ce 940e cab2 	CALL SUBOPT_0x14E
                 ; 0007 032D     }
                 _0xE00B9:
                +
0053d0 5f0f     +SUBI R16 , LOW ( - 1 )
0053d1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053d2 cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 032E 
                 ; 0007 032F     getBuzzerConfig(&buzz_config);
0053d3 940e c2f4 	CALL SUBOPT_0x14
                 ; 0007 0330     is_buzzer_config_update = 0;
                 ; 0007 0331 
                 ; 0007 0332     for(i=0;i<USE_DIN;i++){
                +
0053d5 e000     +LDI R16 , LOW ( 0 )
0053d6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
0053d7 3002     +CPI R16 , LOW ( 2 )
0053d8 e0e0     +LDI R30 , HIGH ( 2 )
0053d9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0053da f49c      	BRGE _0xE00BF
                 ; 0007 0333         getAuxDinConfig(i,&din_config[i]);
0053db 931a      	ST   -Y,R17
0053dc 930a      	ST   -Y,R16
                +
0053dd e0a3     +LDI R26 , 3
0053de 9fa0     +MUL R26 , R16
0053df 01f0     +MOVW R30 , R0
0053e0 9fa1     +MUL R26 , R17
0053e1 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
0053e2 5be1      	SUBI R30,LOW(-_din_config)
0053e3 4efd      	SBCI R31,HIGH(-_din_config)
0053e4 01df      	MOVW R26,R30
0053e5 940e 4b55 	CALL _getAuxDinConfig
                 ; 0007 0334         is_din_config_update[i] = 0;
0053e7 efad      	LDI  R26,LOW(_is_din_config_update)
0053e8 e1b0      	LDI  R27,HIGH(_is_din_config_update)
0053e9 940e cab2 	CALL SUBOPT_0x14E
                 ; 0007 0335     }
                +
0053eb 5f0f     +SUBI R16 , LOW ( - 1 )
0053ec 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0053ed cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0336 
                 ; 0007 0337     for(i=0;i<USE_DOUT;i++){
                +
0053ee e000     +LDI R16 , LOW ( 0 )
0053ef e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
0053f0 3002     +CPI R16 , LOW ( 2 )
0053f1 e0e0     +LDI R30 , HIGH ( 2 )
0053f2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0053f3 f474      	BRGE _0xE00C2
                 ; 0007 0338         getAuxDoutConfig(i,&dout_config[i]);
0053f4 931a      	ST   -Y,R17
0053f5 930a      	ST   -Y,R16
                +
0053f6 e2a6     +LDI R26 , 38
0053f7 9fa0     +MUL R26 , R16
0053f8 01f0     +MOVW R30 , R0
0053f9 9fa1     +MUL R26 , R17
0053fa 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
0053fb 940e c304 	CALL SUBOPT_0x16
                 ; 0007 0339         is_dout_config_update[i] = 0;
0053fd 940e cab2 	CALL SUBOPT_0x14E
                 ; 0007 033A     }
                +
0053ff 5f0f     +SUBI R16 , LOW ( - 1 )
005400 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005401 cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033B 
                 ; 0007 033C     getStatusReportConfig(&status_config);
005402 940e c30c 	CALL SUBOPT_0x17
                 ; 0007 033D     is_status_config_update = 0;
                 ; 0007 033E 
                 ; 0007 033F     getEnvAlarmConfig(&env_config);
005404 940e c314 	CALL SUBOPT_0x18
                 ; 0007 0340     is_env_config_update = 0;
                 ; 0007 0341 
                 ; 0007 0342     return 0;
005406 940e cab7 	CALL SUBOPT_0x14F
                 _0x20E0088:
005408 9624      	ADIW R28,4
005409 9508      	RET
                 ; 0007 0343 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 0018 {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 0019     int     i=0,k=0;
                 ; 0009 001A     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001B 
                 ; 0009 001C     frameData[i++]      = PROTOERROR;
00540a 93aa      	ST   -Y,R26
00540b 940e cabc 	CALL SUBOPT_0x150
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00540d eeeb      	LDI  R30,LOW(235)
00540e 93ec      	ST   X,R30
                 ; 0009 001D 
                 ; 0009 001E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00540f e020     +LDI R18 , LOW ( 0 )
005410 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
005411 3028     +CPI R18 , LOW ( 8 )
005412 e0e0     +LDI R30 , HIGH ( 8 )
005413 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005414 f43c      	BRGE _0x120005
                 ; 0009 001F         frameData[i++]  = DEVICE_SERIAL[k];
005415 940e cacb 	CALL SUBOPT_0x151
005417 940e cad3 	CALL SUBOPT_0x152
                 ; 0009 0020     }
                +
005419 5f2f     +SUBI R18 , LOW ( - 1 )
00541a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00541b cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0021 
                 ; 0009 0022     frameData[i++]      = errCode;
00541c 940e cacb 	CALL SUBOPT_0x151
00541e 85ae      	LDD  R26,Y+14
00541f 83a0      	STD  Z+0,R26
                 ; 0009 0023 
                 ; 0009 0024     printDebug("<ETH_sendNack> sending..\r\n");
                +
005420 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
005421 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
005422 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
005423 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
005424 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0025     //print_payload(frameData,i);
                 ; 0009 0026     ETH_send(frameData,i,frameID,0);
005426 940e cadd 	CALL SUBOPT_0x153
005428 89eb      	LDD  R30,Y+19
005429 93ea      	ST   -Y,R30
00542a 940e c8c4 	CALL SUBOPT_0xF6
00542c 940e cae4 	CALL SUBOPT_0x154
                 ; 0009 0027 
                 ; 0009 0028     return 0;
00542e c1a1      	RJMP _0x20E0085
                 ; 0009 0029 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002C {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002D     int     i=0,k=0;
                 ; 0009 002E     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 002F 
                 ; 0009 0030     frameData[i++]      = STATREQA;
00542f 93aa      	ST   -Y,R26
005430 972f      	SBIW R28,15
005431 940e cae7 	CALL SUBOPT_0x155
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005433 e1eb      	LDI  R30,LOW(27)
005434 93ec      	ST   X,R30
                 ; 0009 0031 
                 ; 0009 0032     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005435 e020     +LDI R18 , LOW ( 0 )
005436 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
005437 3028     +CPI R18 , LOW ( 8 )
005438 e0e0     +LDI R30 , HIGH ( 8 )
005439 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00543a f43c      	BRGE _0x120008
                 ; 0009 0033         frameData[i++]  = DEVICE_SERIAL[k];
00543b 940e cacb 	CALL SUBOPT_0x151
00543d 940e cad3 	CALL SUBOPT_0x152
                 ; 0009 0034     }
                +
00543f 5f2f     +SUBI R18 , LOW ( - 1 )
005440 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005441 cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0035 
                 ; 0009 0036     frameData[i++]      = accm;
005442 940e cacb 	CALL SUBOPT_0x151
005444 89ac      	LDD  R26,Y+20
005445 83a0      	STD  Z+0,R26
                 ; 0009 0037     frameData[i++]      = status;
005446 940e cacb 	CALL SUBOPT_0x151
005448 89ab      	LDD  R26,Y+19
005449 83a0      	STD  Z+0,R26
                 ; 0009 0038 
                 ; 0009 0039     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
00544a eae1     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
00544b e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
00544c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
00544d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
00544e 940e c274 	CALL SUBOPT_0x3
                 ; 0009 003A     //print_payload(frameData,i);
                 ; 0009 003B 
                 ; 0009 003C     ETH_send(frameData,i,frameID,0);
005450 940e cadd 	CALL SUBOPT_0x153
005452 8de9      	LDD  R30,Y+25
005453 93ea      	ST   -Y,R30
005454 940e c8c4 	CALL SUBOPT_0xF6
005456 940e cae4 	CALL SUBOPT_0x154
                 ; 0009 003D 
                 ; 0009 003E     return 0;
005458 9666      	ADIW R28,22
005459 9508      	RET
                 ; 0009 003F 
                 ; 0009 0040 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0043 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0044     int     i=0,k=0;
                 ; 0009 0045     int     frameLen    = 0;
                 ; 0009 0046     char    *frameData;
                 ; 0009 0047 
                 ; 0009 0048     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
00545a 93ba      	ST   -Y,R27
00545b 93aa      	ST   -Y,R26
00545c 9722      	SBIW R28,2
00545d 940e c3e4 	CALL SUBOPT_0x37
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
00545f 940e caf5 	CALL SUBOPT_0x156
                 ; 0009 0049     if(frameLen > 250){
005461 f04c      	BRLT _0x120009
                 ; 0009 004A         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
005462 ece8     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
005463 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
005464 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
005465 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
005466 940e c46a 	CALL SUBOPT_0x49
                 ; 0009 004B         return -1;
005468 efef      	LDI  R30,LOW(65535)
005469 efff      	LDI  R31,HIGH(65535)
00546a c03a      	RJMP _0x20E0087
                 ; 0009 004C     }
                 ; 0009 004D 
                 ; 0009 004E     frameData           = (char *) malloc (frameLen);
                 _0x120009:
00546b 940e cafd 	CALL SUBOPT_0x157
                 ; 0009 004F     if(frameData == NULL){
00546d f449      	BRNE _0x12000A
                 ; 0009 0050         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
00546e e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
00546f e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
005470 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
005471 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
005472 940e c46a 	CALL SUBOPT_0x49
                 ; 0009 0051         return -1;
005474 efef      	LDI  R30,LOW(65535)
005475 efff      	LDI  R31,HIGH(65535)
005476 c02e      	RJMP _0x20E0087
                 ; 0009 0052     }
                 ; 0009 0053 
                 ; 0009 0054     frameData[i++]      = STATREPC;
                 _0x12000A:
005477 940e cb04 	CALL SUBOPT_0x158
005479 0fae      	ADD  R26,R30
00547a 1fbf      	ADC  R27,R31
00547b e2ea      	LDI  R30,LOW(42)
00547c 93ec      	ST   X,R30
                 ; 0009 0055 
                 ; 0009 0056     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00547d e020     +LDI R18 , LOW ( 0 )
00547e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
00547f 3028     +CPI R18 , LOW ( 8 )
005480 e0e0     +LDI R30 , HIGH ( 8 )
005481 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005482 f43c      	BRGE _0x12000D
                 ; 0009 0057         frameData[i++]  = DEVICE_SERIAL[k];
005483 940e cb04 	CALL SUBOPT_0x158
005485 940e cb0a 	CALL SUBOPT_0x159
                 ; 0009 0058     }
                +
005487 5f2f     +SUBI R18 , LOW ( - 1 )
005488 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005489 cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 0059 
                 ; 0009 005A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
00548a 940e cb0d 	CALL SUBOPT_0x15A
00548c 01fe      	MOVW R30,R28
00548d 963f      	ADIW R30,15
00548e 940e c484 	CALL SUBOPT_0x4D
                 ; 0009 005B     i += sizeof(timestamp);
                +
005490 5f0c     +SUBI R16 , LOW ( - 4 )
005491 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005C 
                 ; 0009 005D     frameData[i++]      = accm;
005492 940e cb04 	CALL SUBOPT_0x158
005494 0fea      	ADD  R30,R26
005495 1ffb      	ADC  R31,R27
005496 85ac      	LDD  R26,Y+12
005497 83a0      	STD  Z+0,R26
                 ; 0009 005E 
                 ; 0009 005F     memcpy(&frameData[i],paraResp,paraLen);
005498 940e cb0d 	CALL SUBOPT_0x15A
00549a 940e cb12 	CALL SUBOPT_0x15B
                 ; 0009 0060     i += paraLen;
                 ; 0009 0061 
                 ; 0009 0062     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
00549c 940e cb1f 	CALL SUBOPT_0x15C
00549e 931a      	ST   -Y,R17
00549f 930a      	ST   -Y,R16
0054a0 e0e0      	LDI  R30,LOW(0)
0054a1 940e cb24 	CALL SUBOPT_0x15D
                 ; 0009 0063     free( frameData );
0054a3 940e cb29 	CALL SUBOPT_0x15E
                 ; 0009 0064 }
                 _0x20E0087:
0054a5 940e e47c 	CALL __LOADLOCR6
0054a7 9661      	ADIW R28,17
0054a8 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0067 {
                 _ETH_sendEventReportCmd:
                 ; 0009 0068     int     i=0,k=0,res=0;
                 ; 0009 0069     char    frameID;
                 ; 0009 006A     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006B 
                 ; 0009 006C     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
0054a9 93aa      	ST   -Y,R26
0054aa 9761      	SBIW R28,17
0054ab 940e c3e4 	CALL SUBOPT_0x37
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
0054ad 8dad      	LDD  R26,Y+29
0054ae 30a0      	CPI  R26,LOW(0x0)
0054af f021      	BREQ _0x12000F
0054b0 30a1      	CPI  R26,LOW(0x1)
0054b1 f011      	BREQ _0x12000F
0054b2 30a2      	CPI  R26,LOW(0x2)
0054b3 f409      	BRNE _0x120010
                 _0x12000F:
0054b4 c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006D     {
                 ; 0009 006E         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
0054b5 e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
0054b6 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
0054b7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
0054b8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
0054b9 940e e400 	CALL __PUTPARD1
0054bb a1e9      	LDD  R30,Y+33
0054bc 940e c388 	CALL SUBOPT_0x29
                 ; 0009 006F         return -1;
0054be efef      	LDI  R30,LOW(65535)
0054bf efff      	LDI  R31,HIGH(65535)
0054c0 c078      	RJMP _0x20E0086
                 ; 0009 0070     }
                 ; 0009 0071 
                 ; 0009 0072     frameData[i++]      =   EVENREPC;
                 _0x12000E:
0054c1 940e cb2d 	CALL SUBOPT_0x15F
0054c3 0fae      	ADD  R26,R30
0054c4 1fbf      	ADC  R27,R31
0054c5 e3ea      	LDI  R30,LOW(58)
0054c6 93ec      	ST   X,R30
                 ; 0009 0073 
                 ; 0009 0074     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054c7 e020     +LDI R18 , LOW ( 0 )
0054c8 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
0054c9 3028     +CPI R18 , LOW ( 8 )
0054ca e0e0     +LDI R30 , HIGH ( 8 )
0054cb 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054cc f43c      	BRGE _0x120013
                 ; 0009 0075         frameData[i++]  = DEVICE_SERIAL[k];
0054cd 940e cb2d 	CALL SUBOPT_0x15F
0054cf 940e cb0a 	CALL SUBOPT_0x159
                 ; 0009 0076     }
                +
0054d1 5f2f     +SUBI R18 , LOW ( - 1 )
0054d2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0054d3 cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0077 
                 ; 0009 0078     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
0054d4 01f8      	MOVW R30,R16
0054d5 01de      	MOVW R26,R28
0054d6 9616      	ADIW R26,6
0054d7 940e c339 	CALL SUBOPT_0x1D
0054d9 01fe      	MOVW R30,R28
0054da 967b      	ADIW R30,27
0054db 940e c484 	CALL SUBOPT_0x4D
                 ; 0009 0079     i += sizeof(timestamp);
                +
0054dd 5f0c     +SUBI R16 , LOW ( - 4 )
0054de 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007A 
                 ; 0009 007B     frameData[i++]      =   eventType;
0054df 940e cb2d 	CALL SUBOPT_0x15F
0054e1 0fea      	ADD  R30,R26
0054e2 1ffb      	ADC  R31,R27
0054e3 8dad      	LDD  R26,Y+29
0054e4 83a0      	STD  Z+0,R26
                 ; 0009 007C     frameData[i++]      =   eventID;
0054e5 940e cb2d 	CALL SUBOPT_0x15F
0054e7 0fea      	ADD  R30,R26
0054e8 1ffb      	ADC  R31,R27
0054e9 8da8      	LDD  R26,Y+24
0054ea 83a0      	STD  Z+0,R26
                 ; 0009 007D     frameData[i++]      =   statusCode;
0054eb 940e cb2d 	CALL SUBOPT_0x15F
0054ed 0fea      	ADD  R30,R26
0054ee 1ffb      	ADC  R31,R27
0054ef 89af      	LDD  R26,Y+23
0054f0 83a0      	STD  Z+0,R26
                 ; 0009 007E 
                 ; 0009 007F     frameID             = ETH_generateId();
0054f1 940e 6aef 	CALL _ETH_generateId
0054f3 8bee      	STD  Y+22,R30
                 ; 0009 0080 
                 ; 0009 0081     if(eventType == TYP_RLT)
0054f4 8ded      	LDD  R30,Y+29
0054f5 30e0      	CPI  R30,0
0054f6 f511      	BRNE _0x120014
                 ; 0009 0082     {
                 ; 0009 0083         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
0054f7 89ee      	LDD  R30,Y+22
0054f8 93ea      	ST   -Y,R30
0054f9 940e c7f0 	CALL SUBOPT_0xD1
0054fb 940e e400 	CALL __PUTPARD1
0054fd 8ded      	LDD  R30,Y+29
0054fe 93ea      	ST   -Y,R30
0054ff 8dad      	LDD  R26,Y+29
005500 940e 87a7 	CALL _addEventLogQueue
005502 01af      	MOVW R20,R30
                 ; 0009 0084         if(res < 0)
005503 2355      	TST  R21
005504 f49a      	BRPL _0x120015
                 ; 0009 0085         {
                 ; 0009 0086             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0087                         frameID,timestamp,eventID,statusCode);
                +
005505 e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
005506 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
005507 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
005508 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
005509 940e e400 	CALL __PUTPARD1
00550b 8dea      	LDD  R30,Y+26
00550c 940e c525 	CALL SUBOPT_0x65
00550e 940e cb33 	CALL SUBOPT_0x160
005510 a1ec      	LDD  R30,Y+36
005511 940e c525 	CALL SUBOPT_0x65
005513 a1ef      	LDD  R30,Y+39
005514 940e c525 	CALL SUBOPT_0x65
005516 940e cb3a 	CALL SUBOPT_0x161
                 ; 0009 0088         }
                 ; 0009 0089     }
                 _0x120015:
                 ; 0009 008A     else if(eventType == TYP_LOG)
005518 c006      	RJMP _0x120016
                 _0x120014:
005519 8dad      	LDD  R26,Y+29
00551a 30a1      	CPI  R26,LOW(0x1)
00551b f419      	BRNE _0x120017
                 ; 0009 008B     {
                 ; 0009 008C         logEventWait.frameID = frameID;
00551c 89ee      	LDD  R30,Y+22
00551d 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008D     }
                 ; 0009 008E 
                 ; 0009 008F     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
00551f ebe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
005520 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
005521 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
005522 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
005523 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0090     print_payload(frameData,i);
005525 940e c4bf 	CALL SUBOPT_0x56
005527 01d8      	MOVW R26,R16
005528 940e 9f7c 	CALL _print_payload
                 ; 0009 0091 
                 ; 0009 0092     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
00552a 940e c4bf 	CALL SUBOPT_0x56
00552c 931a      	ST   -Y,R17
00552d 930a      	ST   -Y,R16
00552e 8dea      	LDD  R30,Y+26
00552f 940e cb24 	CALL SUBOPT_0x15D
005531 01af      	MOVW R20,R30
                 ; 0009 0093     if(res < 0){
005532 2355      	TST  R21
005533 f41a      	BRPL _0x120018
                 ; 0009 0094         return -1;
005534 efef      	LDI  R30,LOW(65535)
005535 efff      	LDI  R31,HIGH(65535)
005536 c002      	RJMP _0x20E0086
                 ; 0009 0095     }
                 ; 0009 0096     else{
                 _0x120018:
                 ; 0009 0097         return 0;
005537 e0e0      	LDI  R30,LOW(0)
005538 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0098     }
                 ; 0009 0099 }
                 _0x20E0086:
005539 940e e47c 	CALL __LOADLOCR6
00553b 966e      	ADIW R28,30
00553c 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009C {
                 _ETH_sendConfigManageNack:
                 ; 0009 009D     int     i=0,k=0;
                 ; 0009 009E     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 009F 
                 ; 0009 00A0     frameData[i++]      = CONFMANA;
00553d 93aa      	ST   -Y,R26
00553e 972c      	SBIW R28,12
00553f 940e cae7 	CALL SUBOPT_0x155
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005541 e4eb      	LDI  R30,LOW(75)
005542 93ec      	ST   X,R30
                 ; 0009 00A1 
                 ; 0009 00A2     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005543 e020     +LDI R18 , LOW ( 0 )
005544 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
005545 3028     +CPI R18 , LOW ( 8 )
005546 e0e0     +LDI R30 , HIGH ( 8 )
005547 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005548 f43c      	BRGE _0x12001C
                 ; 0009 00A3         frameData[i++]  = DEVICE_SERIAL[k];
005549 940e cacb 	CALL SUBOPT_0x151
00554b 940e cad3 	CALL SUBOPT_0x152
                 ; 0009 00A4     }
                +
00554d 5f2f     +SUBI R18 , LOW ( - 1 )
00554e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00554f cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A5 
                 ; 0009 00A6     frameData[i++]      = accd;
005550 940e cacb 	CALL SUBOPT_0x151
005552 89aa      	LDD  R26,Y+18
005553 83a0      	STD  Z+0,R26
                 ; 0009 00A7     frameData[i++]      = cnfg;
005554 940e cacb 	CALL SUBOPT_0x151
005556 89a9      	LDD  R26,Y+17
005557 83a0      	STD  Z+0,R26
                 ; 0009 00A8     frameData[i++]      = status;
005558 940e cacb 	CALL SUBOPT_0x151
00555a 89a8      	LDD  R26,Y+16
00555b 83a0      	STD  Z+0,R26
                 ; 0009 00A9 
                 ; 0009 00AA     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
00555c edea     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
00555d e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
00555e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
00555f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
005560 940e c274 	CALL SUBOPT_0x3
                 ; 0009 00AB     //print_payload(frameData,i);
                 ; 0009 00AC 
                 ; 0009 00AD     ETH_send(frameData,i,frameID,0);
005562 940e cadd 	CALL SUBOPT_0x153
005564 89ef      	LDD  R30,Y+23
005565 93ea      	ST   -Y,R30
005566 940e c8c4 	CALL SUBOPT_0xF6
005568 940e cae4 	CALL SUBOPT_0x154
                 ; 0009 00AE 
                 ; 0009 00AF     return 0;
00556a 9664      	ADIW R28,20
00556b 9508      	RET
                 ; 0009 00B0 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B3 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B4     int     i=0,k=0;
                 ; 0009 00B5     int     frameLen    = 0;
                 ; 0009 00B6     char    *frameData;
                 ; 0009 00B7 
                 ; 0009 00B8 
                 ; 0009 00B9     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
00556c 93ba      	ST   -Y,R27
00556d 93aa      	ST   -Y,R26
00556e 9722      	SBIW R28,2
00556f 940e c3e4 	CALL SUBOPT_0x37
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
005571 940e caf5 	CALL SUBOPT_0x156
                 ; 0009 00BA     if(frameLen > 250){
005573 f04c      	BRLT _0x12001D
                 ; 0009 00BB         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
005574 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
005575 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
005576 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
005577 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
005578 940e c46a 	CALL SUBOPT_0x49
                 ; 0009 00BC         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
00557a 940e cb3f 	CALL SUBOPT_0x162
                 ; 0009 00BD         return -1;
00557c c051      	RJMP _0x20E0084
                 ; 0009 00BE     }
                 ; 0009 00BF 
                 ; 0009 00C0     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
00557d 940e cafd 	CALL SUBOPT_0x157
                 ; 0009 00C1     if(frameData == NULL){
00557f f449      	BRNE _0x12001E
                 ; 0009 00C2         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
005580 e3ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
005581 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
005582 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
005583 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
005584 940e c46a 	CALL SUBOPT_0x49
                 ; 0009 00C3         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
005586 940e cb3f 	CALL SUBOPT_0x162
                 ; 0009 00C4         return -1;
005588 c045      	RJMP _0x20E0084
                 ; 0009 00C5     }
                 ; 0009 00C6 
                 ; 0009 00C7     frameData[i++]      = CONFMANA;
                 _0x12001E:
005589 940e cb04 	CALL SUBOPT_0x158
00558b 0fae      	ADD  R26,R30
00558c 1fbf      	ADC  R27,R31
00558d e4eb      	LDI  R30,LOW(75)
00558e 93ec      	ST   X,R30
                 ; 0009 00C8 
                 ; 0009 00C9     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00558f e020     +LDI R18 , LOW ( 0 )
005590 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
005591 3028     +CPI R18 , LOW ( 8 )
005592 e0e0     +LDI R30 , HIGH ( 8 )
005593 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005594 f43c      	BRGE _0x120021
                 ; 0009 00CA         frameData[i++]  = DEVICE_SERIAL[k];
005595 940e cb04 	CALL SUBOPT_0x158
005597 940e cb0a 	CALL SUBOPT_0x159
                 ; 0009 00CB     }
                +
005599 5f2f     +SUBI R18 , LOW ( - 1 )
00559a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00559b cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CC 
                 ; 0009 00CD     frameData[i++]      = accd;
00559c 940e cb04 	CALL SUBOPT_0x158
00559e 0fea      	ADD  R30,R26
00559f 1ffb      	ADC  R31,R27
0055a0 85ae      	LDD  R26,Y+14
0055a1 83a0      	STD  Z+0,R26
                 ; 0009 00CE     frameData[i++]      = cnfg;
0055a2 940e cb04 	CALL SUBOPT_0x158
0055a4 0fea      	ADD  R30,R26
0055a5 1ffb      	ADC  R31,R27
0055a6 85ad      	LDD  R26,Y+13
0055a7 83a0      	STD  Z+0,R26
                 ; 0009 00CF     frameData[i++]      = status;
0055a8 940e cb04 	CALL SUBOPT_0x158
0055aa 0fea      	ADD  R30,R26
0055ab 1ffb      	ADC  R31,R27
0055ac 85ac      	LDD  R26,Y+12
0055ad 83a0      	STD  Z+0,R26
                 ; 0009 00D0     if(cnfgLen > 0){
0055ae 85a8      	LDD  R26,Y+8
0055af 85b9      	LDD  R27,Y+8+1
0055b0 940e e45d 	CALL __CPW02
0055b2 f424      	BRGE _0x120022
                 ; 0009 00D1         memcpy(&frameData[i],cnfgData,cnfgLen);
0055b3 940e cb0d 	CALL SUBOPT_0x15A
0055b5 940e cb12 	CALL SUBOPT_0x15B
                 ; 0009 00D2         i += cnfgLen;
                 ; 0009 00D3     }
                 ; 0009 00D4 
                 ; 0009 00D5     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
0055b7 e6ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
0055b8 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
0055b9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
0055ba e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
0055bb 940e c274 	CALL SUBOPT_0x3
                 ; 0009 00D6     print_payload(frameData,i);
0055bd 940e cb1f 	CALL SUBOPT_0x15C
0055bf 01d8      	MOVW R26,R16
0055c0 940e cb4b 	CALL SUBOPT_0x163
                 ; 0009 00D7 
                 ; 0009 00D8     ETH_send(frameData,i,frameID,0);
0055c2 931a      	ST   -Y,R17
0055c3 930a      	ST   -Y,R16
0055c4 89eb      	LDD  R30,Y+19
0055c5 93ea      	ST   -Y,R30
0055c6 940e c8c4 	CALL SUBOPT_0xF6
0055c8 940e 5e0f 	CALL _ETH_send
                 ; 0009 00D9 
                 ; 0009 00DA     free( frameData );
0055ca 940e cb29 	CALL SUBOPT_0x15E
                 ; 0009 00DB 
                 ; 0009 00DC     return 0;
0055cc e0e0      	LDI  R30,LOW(0)
0055cd e0f0      	LDI  R31,HIGH(0)
                 _0x20E0084:
0055ce 940e e47c 	CALL __LOADLOCR6
                 _0x20E0085:
0055d0 9660      	ADIW R28,16
0055d1 9508      	RET
                 ; 0009 00DD }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E0 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E1     int     i=0,k=0,res=0;
                 ; 0009 00E2     char    frameID;
                 ; 0009 00E3     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E4     char    did = 0x00;
                 ; 0009 00E5 
                 ; 0009 00E6     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
0055d2 940e e405 	CALL __PUTPARD2
0055d4 9764      	SBIW R28,20
0055d5 e0e0      	LDI  R30,LOW(0)
0055d6 83e8      	ST   Y,R30
0055d7 940e c3e4 	CALL SUBOPT_0x37
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
0055d9 a1ac      	LDD  R26,Y+36
0055da 30a0      	CPI  R26,LOW(0x0)
0055db f021      	BREQ _0x120024
0055dc 30a1      	CPI  R26,LOW(0x1)
0055dd f011      	BREQ _0x120024
0055de 30a2      	CPI  R26,LOW(0x2)
0055df f409      	BRNE _0x120025
                 _0x120024:
0055e0 c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E7     {
                 ; 0009 00E8         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
0055e1 e9e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
0055e2 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
0055e3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
0055e4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
0055e5 940e e400 	CALL __PUTPARD1
0055e7 a5e8      	LDD  R30,Y+40
0055e8 940e c388 	CALL SUBOPT_0x29
                 ; 0009 00E9         return -1;
0055ea efef      	LDI  R30,LOW(65535)
0055eb efff      	LDI  R31,HIGH(65535)
0055ec c083      	RJMP _0x20E0083
                 ; 0009 00EA     }
                 ; 0009 00EB 
                 ; 0009 00EC     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
0055ed 8dae      	LDD  R26,Y+30
0055ee 5faf      	SUBI R26,-LOW(1)
0055ef 2fea      	MOV  R30,R26
0055f0 95e2      	SWAP R30
0055f1 7fe0      	ANDI R30,0xF0
0055f2 83ee      	STD  Y+6,R30
                 ; 0009 00ED     did    |= dataType;
0055f3 a1ec      	LDD  R30,Y+36
0055f4 81ae      	LDD  R26,Y+6
0055f5 2bea      	OR   R30,R26
0055f6 83ee      	STD  Y+6,R30
                 ; 0009 00EE 
                 ; 0009 00EF     frameData[i++]      =   DATAREPC;
0055f7 940e cb4e 	CALL SUBOPT_0x164
0055f9 0fae      	ADD  R26,R30
0055fa 1fbf      	ADC  R27,R31
0055fb e5ea      	LDI  R30,LOW(90)
0055fc 93ec      	ST   X,R30
                 ; 0009 00F0 
                 ; 0009 00F1     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0055fd e020     +LDI R18 , LOW ( 0 )
0055fe e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
0055ff 3028     +CPI R18 , LOW ( 8 )
005600 e0e0     +LDI R30 , HIGH ( 8 )
005601 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005602 f43c      	BRGE _0x120028
                 ; 0009 00F2         frameData[i++]  = DEVICE_SERIAL[k];
005603 940e cb4e 	CALL SUBOPT_0x164
005605 940e cb0a 	CALL SUBOPT_0x159
                 ; 0009 00F3     }
                +
005607 5f2f     +SUBI R18 , LOW ( - 1 )
005608 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005609 cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F4 
                 ; 0009 00F5     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
00560a 01f8      	MOVW R30,R16
00560b 01de      	MOVW R26,R28
00560c 9617      	ADIW R26,7
00560d 940e c339 	CALL SUBOPT_0x1D
00560f 01fe      	MOVW R30,R28
005610 96b2      	ADIW R30,34
005611 940e c484 	CALL SUBOPT_0x4D
                 ; 0009 00F6     i += sizeof(timestamp);
                +
005613 5f0c     +SUBI R16 , LOW ( - 4 )
005614 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F7 
                 ; 0009 00F8     frameData[i++]      =   did;
005615 940e cb4e 	CALL SUBOPT_0x164
005617 0fea      	ADD  R30,R26
005618 1ffb      	ADC  R31,R27
005619 81ae      	LDD  R26,Y+6
00561a 83a0      	STD  Z+0,R26
                 ; 0009 00F9 
                 ; 0009 00FA     memcpy(&frameData[i],&value,sizeof(value));
00561b 01f8      	MOVW R30,R16
00561c 01de      	MOVW R26,R28
00561d 9617      	ADIW R26,7
00561e 940e c339 	CALL SUBOPT_0x1D
005620 01fe      	MOVW R30,R28
005621 967c      	ADIW R30,28
005622 940e c484 	CALL SUBOPT_0x4D
                 ; 0009 00FB     i += sizeof(value);
                +
005624 5f0c     +SUBI R16 , LOW ( - 4 )
005625 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FC 
                 ; 0009 00FD     frameID             = ETH_generateId();
005626 940e 6aef 	CALL _ETH_generateId
005628 8fe9      	STD  Y+25,R30
                 ; 0009 00FE 
                 ; 0009 00FF     if(dataType == TYP_RLT)
005629 a1ec      	LDD  R30,Y+36
00562a 30e0      	CPI  R30,0
00562b f549      	BRNE _0x120029
                 ; 0009 0100     {
                 ; 0009 0101         res = addDataLogQueue(frameID,timestamp,sensorID,value);
00562c 8de9      	LDD  R30,Y+25
00562d 93ea      	ST   -Y,R30
00562e 940e cb33 	CALL SUBOPT_0x160
005630 a1eb      	LDD  R30,Y+35
005631 a1fc      	LDD  R31,Y+35+1
005632 93fa      	ST   -Y,R31
005633 93ea      	ST   -Y,R30
                +
005634 a1a9     +LDD R26 , Y + 33
005635 a1ba     +LDD R27 , Y + 33 + 1
005636 a18b     +LDD R24 , Y + 33 + 2
005637 a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
005638 940e 86d9 	CALL _addDataLogQueue
00563a 01af      	MOVW R20,R30
                 ; 0009 0102         if(res < 0)
00563b 2355      	TST  R21
00563c f4ba      	BRPL _0x12002A
                 ; 0009 0103         {
                 ; 0009 0104             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
00563d ece5     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
00563e e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
00563f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
005640 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
005641 940e e400 	CALL __PUTPARD1
005643 8ded      	LDD  R30,Y+29
005644 940e c525 	CALL SUBOPT_0x65
                +
005646 a5e8     +LDD R30 , Y + 40
005647 a5f9     +LDD R31 , Y + 40 + 1
005648 a56a     +LDD R22 , Y + 40 + 2
005649 a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00564a 940e e400 	CALL __PUTPARD1
00564c a5ea      	LDD  R30,Y+42
00564d a5fb      	LDD  R31,Y+42+1
00564e 940e c3d6 	CALL SUBOPT_0x34
005650 940e cb54 	CALL SUBOPT_0x165
005652 940e cb3a 	CALL SUBOPT_0x161
                 ; 0009 0105         }
                 ; 0009 0106     }
                 _0x12002A:
                 ; 0009 0107     else if(dataType == TYP_LOG)
005654 c006      	RJMP _0x12002B
                 _0x120029:
005655 a1ac      	LDD  R26,Y+36
005656 30a1      	CPI  R26,LOW(0x1)
005657 f419      	BRNE _0x12002C
                 ; 0009 0108     {
                 ; 0009 0109         logDataWait.frameID = frameID;
005658 8de9      	LDD  R30,Y+25
005659 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010A     }
                 ; 0009 010B 
                 ; 0009 010C     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
00565b e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
00565c e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
00565d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
00565e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
00565f 940e c274 	CALL SUBOPT_0x3
                 ; 0009 010D     //print_payload(frameData,i);
                 ; 0009 010E 
                 ; 0009 010F     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
005661 940e c519 	CALL SUBOPT_0x63
005663 931a      	ST   -Y,R17
005664 930a      	ST   -Y,R16
005665 8ded      	LDD  R30,Y+29
005666 940e cb24 	CALL SUBOPT_0x15D
005668 01af      	MOVW R20,R30
                 ; 0009 0110     if(res < 0){
005669 2355      	TST  R21
00566a f41a      	BRPL _0x12002D
                 ; 0009 0111         return -1;
00566b efef      	LDI  R30,LOW(65535)
00566c efff      	LDI  R31,HIGH(65535)
00566d c002      	RJMP _0x20E0083
                 ; 0009 0112     }
                 ; 0009 0113     else{
                 _0x12002D:
                 ; 0009 0114         return 0;
00566e e0e0      	LDI  R30,LOW(0)
00566f e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0115     }
                 ; 0009 0116 }
                 _0x20E0083:
005670 940e e47c 	CALL __LOADLOCR6
005672 96a5      	ADIW R28,37
005673 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 0119 {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011A     int     i=0,k=0;
                 ; 0009 011B     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011C 
                 ; 0009 011D     frameData[i++]      = LOGMANIA;
005674 940e cb5b 	CALL SUBOPT_0x166
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005676 e6eb      	LDI  R30,LOW(107)
005677 93ec      	ST   X,R30
                 ; 0009 011E 
                 ; 0009 011F     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005678 e020     +LDI R18 , LOW ( 0 )
005679 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
00567a 3028     +CPI R18 , LOW ( 8 )
00567b e0e0     +LDI R30 , HIGH ( 8 )
00567c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00567d f43c      	BRGE _0x120031
                 ; 0009 0120         frameData[i++]  = DEVICE_SERIAL[k];
00567e 940e cacb 	CALL SUBOPT_0x151
005680 940e cad3 	CALL SUBOPT_0x152
                 ; 0009 0121     }
                +
005682 5f2f     +SUBI R18 , LOW ( - 1 )
005683 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005684 cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0122 
                 ; 0009 0123     frameData[i++]      = accd;
005685 940e cacb 	CALL SUBOPT_0x151
005687 940e cb5e 	CALL SUBOPT_0x167
                 ; 0009 0124     frameData[i++]      = status;
005689 85af      	LDD  R26,Y+15
00568a 83a0      	STD  Z+0,R26
                 ; 0009 0125 
                 ; 0009 0126     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
00568b e2ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
00568c e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
00568d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
00568e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
00568f c037      	RJMP _0x20E0082
                 ; 0009 0127     //print_payload(frameData,i);
                 ; 0009 0128     ETH_send(frameData,i,frameID,0);
                 ; 0009 0129 
                 ; 0009 012A     return 0;
                 ; 0009 012B }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 012E {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 012F     int     i=0,k=0;
                 ; 0009 0130     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0131 
                 ; 0009 0132     frameData[i++]      = NETMAINA;
005690 940e cb5b 	CALL SUBOPT_0x166
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005692 e7eb      	LDI  R30,LOW(123)
005693 93ec      	ST   X,R30
                 ; 0009 0133 
                 ; 0009 0134     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005694 e020     +LDI R18 , LOW ( 0 )
005695 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
005696 3028     +CPI R18 , LOW ( 8 )
005697 e0e0     +LDI R30 , HIGH ( 8 )
005698 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005699 f43c      	BRGE _0x120034
                 ; 0009 0135         frameData[i++]  = DEVICE_SERIAL[k];
00569a 940e cacb 	CALL SUBOPT_0x151
00569c 940e cad3 	CALL SUBOPT_0x152
                 ; 0009 0136     }
                +
00569e 5f2f     +SUBI R18 , LOW ( - 1 )
00569f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0056a0 cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0137 
                 ; 0009 0138     frameData[i++]      = cmd;
0056a1 940e cacb 	CALL SUBOPT_0x151
0056a3 940e cb5e 	CALL SUBOPT_0x167
                 ; 0009 0139     frameData[i++]      = status;
0056a5 85af      	LDD  R26,Y+15
0056a6 83a0      	STD  Z+0,R26
                 ; 0009 013A 
                 ; 0009 013B     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
0056a7 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
0056a8 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
0056a9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
0056aa e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
0056ab c01b      	RJMP _0x20E0082
                 ; 0009 013C     ETH_send(frameData,i,frameID,0);
                 ; 0009 013D 
                 ; 0009 013E     return 0;
                 ; 0009 013F }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0142 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0143     int     i=0,k=0;
                 ; 0009 0144     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0145 
                 ; 0009 0146     frameData[i++]      = RMDCTRLA;
0056ac 940e cb5b 	CALL SUBOPT_0x166
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0056ae e8eb      	LDI  R30,LOW(139)
0056af 93ec      	ST   X,R30
                 ; 0009 0147 
                 ; 0009 0148     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0056b0 e020     +LDI R18 , LOW ( 0 )
0056b1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
0056b2 3028     +CPI R18 , LOW ( 8 )
0056b3 e0e0     +LDI R30 , HIGH ( 8 )
0056b4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0056b5 f43c      	BRGE _0x120037
                 ; 0009 0149         frameData[i++]  = DEVICE_SERIAL[k];
0056b6 940e cacb 	CALL SUBOPT_0x151
0056b8 940e cad3 	CALL SUBOPT_0x152
                 ; 0009 014A     }
                +
0056ba 5f2f     +SUBI R18 , LOW ( - 1 )
0056bb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0056bc cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014B 
                 ; 0009 014C     frameData[i++]      = cmd;
0056bd 940e cacb 	CALL SUBOPT_0x151
0056bf 940e cb5e 	CALL SUBOPT_0x167
                 ; 0009 014D     frameData[i++]      = status;
0056c1 85af      	LDD  R26,Y+15
0056c2 83a0      	STD  Z+0,R26
                 ; 0009 014E 
                 ; 0009 014F     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
0056c3 e8e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
0056c4 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
0056c5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
0056c6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E0082:
0056c7 940e e400 	CALL __PUTPARD1
0056c9 940e c3df 	CALL SUBOPT_0x36
                 ; 0009 0150     ETH_send(frameData,i,frameID,0);
0056cb 940e cadd 	CALL SUBOPT_0x153
0056cd 89ed      	LDD  R30,Y+21
0056ce 93ea      	ST   -Y,R30
0056cf 940e c8c4 	CALL SUBOPT_0xF6
0056d1 940e cae4 	CALL SUBOPT_0x154
                 ; 0009 0151 
                 ; 0009 0152     return 0;
0056d3 9662      	ADIW R28,18
0056d4 9508      	RET
                 ; 0009 0153 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0156 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0157     int     i=0,k=0;
                 ; 0009 0158     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0159 
                 ; 0009 015A     frameData[i++]  = CLRLISTC;
0056d5 940e cabc 	CALL SUBOPT_0x150
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0056d7 e9ea      	LDI  R30,LOW(154)
0056d8 93ec      	ST   X,R30
                 ; 0009 015B 
                 ; 0009 015C     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0056d9 e020     +LDI R18 , LOW ( 0 )
0056da e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
0056db 3028     +CPI R18 , LOW ( 8 )
0056dc e0e0     +LDI R30 , HIGH ( 8 )
0056dd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0056de f43c      	BRGE _0x12003A
                 ; 0009 015D         frameData[i++]  = DEVICE_SERIAL[k];
0056df 940e cacb 	CALL SUBOPT_0x151
0056e1 940e cad3 	CALL SUBOPT_0x152
                 ; 0009 015E     }
                +
0056e3 5f2f     +SUBI R18 , LOW ( - 1 )
0056e4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0056e5 cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 015F 
                 ; 0009 0160     frameData[i++]  = CLR_DUPLIST;
0056e6 01f8      	MOVW R30,R16
                +
0056e7 5f0f     +SUBI R16 , LOW ( - 1 )
0056e8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0056e9 940e cb61 	CALL SUBOPT_0x168
0056eb e0e1      	LDI  R30,LOW(1)
0056ec 93ec      	ST   X,R30
                 ; 0009 0161 
                 ; 0009 0162     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
0056ed eaec     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
0056ee e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
0056ef e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
0056f0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
0056f1 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0163     ETH_send(frameData,i,0xFF,0);
0056f3 940e cadd 	CALL SUBOPT_0x153
0056f5 efef      	LDI  R30,LOW(255)
0056f6 93ea      	ST   -Y,R30
0056f7 940e c8c4 	CALL SUBOPT_0xF6
0056f9 940e cae4 	CALL SUBOPT_0x154
                 ; 0009 0164 
                 ; 0009 0165     return 0;
0056fb 962e      	ADIW R28,14
0056fc 9508      	RET
                 ; 0009 0166 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 0169 {
                 _ETH_checkPushLog:
                 ; 0009 016A     FIL                 file;
                 ; 0009 016B     int                 res;
                 ; 0009 016C     unsigned long int   timestamp;
                 ; 0009 016D     unsigned int        channel;
                 ; 0009 016E     float               value;
                 ; 0009 016F     unsigned char       eventID;
                 ; 0009 0170     unsigned char       eventStatus;
                 ; 0009 0171 
                 ; 0009 0172     // -- check if id is in dataLogQueue -- //
                 ; 0009 0173     res = readDataLogQueue(id,&timestamp,&channel,&value);
0056fd 93aa      	ST   -Y,R26
0056fe 97a8      	SBIW R28,40
0056ff 50d2      	SUBI R29,2
005700 940e e475 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
005702 940e cb66 	CALL SUBOPT_0x169
005704 b7ed      	IN   R30,SPL
005705 b7fe      	IN   R31,SPH
005706 9731      	SBIW R30,1
005707 93fa      	ST   -Y,R31
005708 93ea      	ST   -Y,R30
005709 933f      	PUSH R19
00570a 932f      	PUSH R18
00570b 01de      	MOVW R26,R28
00570c 961b      	ADIW R26,11
00570d 940e 8725 	CALL _readDataLogQueue
00570f 912f      	POP  R18
005710 913f      	POP  R19
005711 018f      	MOVW R16,R30
                 ; 0009 0174     if(res != -1)
005712 efef      	LDI  R30,LOW(65535)
005713 efff      	LDI  R31,HIGH(65535)
005714 17e0      	CP   R30,R16
005715 07f1      	CPC  R31,R17
005716 f411      	BRNE PC+3
005717 940c 5763 	JMP _0x12003B
                 ; 0009 0175     {
                 ; 0009 0176         // -- found in dataLogQueue -- //
                 ; 0009 0177         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
005719 940e c554 	CALL SUBOPT_0x6D
00571b f039      	BREQ _0x12003D
00571c 940e c4af 	CALL SUBOPT_0x53
00571e f021      	BREQ _0x12003D
                +
00571f 3025     +CPI R18 , LOW ( 5 )
005720 e0e0     +LDI R30 , HIGH ( 5 )
005721 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
005722 f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 0178         {
                 ; 0009 0179             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
005723 ede7     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
005724 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
005725 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
005726 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
005727 c031      	RJMP _0x120115
                 ; 0009 017A         }
                 ; 0009 017B         else
                 _0x12003C:
                 ; 0009 017C         {
                 ; 0009 017D             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
005728 e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
005729 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
00572a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
00572b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
00572c 940e c496 	CALL SUBOPT_0x50
00572e 01f9      	MOVW R30,R18
00572f 940e c3d6 	CALL SUBOPT_0x34
005731 940e c49f 	CALL SUBOPT_0x51
                 ; 0009 017E             res = LOG_openFile(&file,LOGFILE_DATA);
005733 940e cb6c 	CALL SUBOPT_0x16A
005735 940e c4f3 	CALL SUBOPT_0x5E
005737 018f      	MOVW R16,R30
                 ; 0009 017F             if(res < 0)
005738 2311      	TST  R17
005739 f44a      	BRPL _0x120040
                 ; 0009 0180             {
                 ; 0009 0181                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
00573a e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
00573b e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
00573c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
00573d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
00573e 940e c4fe 	CALL SUBOPT_0x5F
005740 940e c2ea 	CALL SUBOPT_0x12
                 ; 0009 0182             }
                 ; 0009 0183             else
005742 c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0184             {
                 ; 0009 0185                 res = LOG_insertData(&file,timestamp,channel,value);
005743 940e cb6c 	CALL SUBOPT_0x16A
005745 940e cb71 	CALL SUBOPT_0x16B
005747 933a      	ST   -Y,R19
005748 932a      	ST   -Y,R18
005749 940e c508 	CALL SUBOPT_0x61
00574b 018f      	MOVW R16,R30
                 ; 0009 0186                 if(res < 0)
00574c 2311      	TST  R17
00574d f412      	BRPL _0x120042
                 ; 0009 0187                 {
                 ; 0009 0188                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
00574e 940e cb75 	CALL SUBOPT_0x16C
                 ; 0009 0189                 }
                 ; 0009 018A 
                 ; 0009 018B                 res = LOG_closeFile(&file);
                 _0x120042:
005750 940e cb7b 	CALL SUBOPT_0x16D
                 ; 0009 018C                 if(res < 0)
005752 f412      	BRPL _0x120043
                 ; 0009 018D                 {
                 ; 0009 018E                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
005753 940e cb88 	CALL SUBOPT_0x16E
                 ; 0009 018F                 }
                 ; 0009 0190 
                 ; 0009 0191                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
005755 eeea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
005756 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
005757 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
005758 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
005759 940e e400 	CALL __PUTPARD1
00575b 940e c3df 	CALL SUBOPT_0x36
                 ; 0009 0192             }
                 _0x120041:
                 ; 0009 0193         }
                 ; 0009 0194 
                 ; 0009 0195         //isDataLogEmpty = 0;
                 ; 0009 0196         removeDataLogQueue(id);
                +
00575d 01de     +MOVW R26 , R28
00575e 5da2     +SUBI R26 , LOW ( - 558 )
00575f 4fbd     +SBCI R27 , HIGH ( - 558 )
005760 91ac     +LD R26 , X
                 	__GETB2SX 558
005761 940e 8766 	CALL _removeDataLogQueue
                 ; 0009 0197     }
                 ; 0009 0198 
                 ; 0009 0199     // -- check if id is in eventLogQueue -- //
                 ; 0009 019A     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
005763 940e cb66 	CALL SUBOPT_0x169
005765 b7ed      	IN   R30,SPL
005766 b7fe      	IN   R31,SPH
005767 93fa      	ST   -Y,R31
005768 93ea      	ST   -Y,R30
005769 935f      	PUSH R21
00576a b7ad      	IN   R26,SPL
00576b b7be      	IN   R27,SPH
00576c 934f      	PUSH R20
00576d 940e 87e6 	CALL _readEventLogQueue
00576f 914f      	POP  R20
005770 915f      	POP  R21
005771 018f      	MOVW R16,R30
                 ; 0009 019B     if(res != -1)
005772 efef      	LDI  R30,LOW(65535)
005773 efff      	LDI  R31,HIGH(65535)
005774 17e0      	CP   R30,R16
005775 07f1      	CPC  R31,R17
005776 f411      	BRNE PC+3
005777 940c 57bc 	JMP _0x120044
                 ; 0009 019C     {
                 ; 0009 019D         // -- found in eventLogQueue -- //
                 ; 0009 019E         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
005779 940e c554 	CALL SUBOPT_0x6D
00577b f019      	BREQ _0x120046
00577c 940e c4af 	CALL SUBOPT_0x53
00577e f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 019F         {
                 ; 0009 01A0             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
00577f e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
005780 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
005781 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
005782 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
005783 c02e      	RJMP _0x120116
                 ; 0009 01A1         }
                 ; 0009 01A2         else{
                 _0x120045:
                 ; 0009 01A3 
                 ; 0009 01A4             res = LOG_openFile(&file,LOGFILE_EVENT);
005784 940e cb6c 	CALL SUBOPT_0x16A
005786 940e c53a 	CALL SUBOPT_0x69
005788 018f      	MOVW R16,R30
                 ; 0009 01A5             if(res < 0)
005789 2311      	TST  R17
00578a f44a      	BRPL _0x120049
                 ; 0009 01A6             {
                 ; 0009 01A7                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
00578b e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
00578c e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
00578d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
00578e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
00578f 940e c545 	CALL SUBOPT_0x6A
005791 940e c2ea 	CALL SUBOPT_0x12
                 ; 0009 01A8             }
                 ; 0009 01A9             else
005793 c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AA             {
                 ; 0009 01AB                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
005794 e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
005795 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
005796 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
005797 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
005798 940e c496 	CALL SUBOPT_0x50
00579a 940e c4cb 	CALL SUBOPT_0x58
                 ; 0009 01AC                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
00579c 940e cb6c 	CALL SUBOPT_0x16A
00579e 940e cb71 	CALL SUBOPT_0x16B
0057a0 935a      	ST   -Y,R21
0057a1 2fa4      	MOV  R26,R20
0057a2 940e 8433 	CALL _LOG_insertEvent
0057a4 018f      	MOVW R16,R30
                 ; 0009 01AD                 if(res < 0)
0057a5 2311      	TST  R17
0057a6 f412      	BRPL _0x12004B
                 ; 0009 01AE                 {
                 ; 0009 01AF                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0057a7 940e cb75 	CALL SUBOPT_0x16C
                 ; 0009 01B0                 }
                 ; 0009 01B1 
                 ; 0009 01B2                 res = LOG_closeFile(&file);
                 _0x12004B:
0057a9 940e cb7b 	CALL SUBOPT_0x16D
                 ; 0009 01B3                 if(res < 0)
0057ab f412      	BRPL _0x12004C
                 ; 0009 01B4                 {
                 ; 0009 01B5                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0057ac 940e cb88 	CALL SUBOPT_0x16E
                 ; 0009 01B6                 }
                 ; 0009 01B7 
                 ; 0009 01B8                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
0057ae e9e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
0057af e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
0057b0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
0057b1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
0057b2 940e e400 	CALL __PUTPARD1
0057b4 940e c3df 	CALL SUBOPT_0x36
                 ; 0009 01B9             }
                 _0x12004A:
                 ; 0009 01BA 
                 ; 0009 01BB         }
                 ; 0009 01BC 
                 ; 0009 01BD         //isEventLogEmpty    = 0;
                 ; 0009 01BE         removeEventLogQueue(id);
                +
0057b6 01de     +MOVW R26 , R28
0057b7 5da2     +SUBI R26 , LOW ( - 558 )
0057b8 4fbd     +SBCI R27 , HIGH ( - 558 )
0057b9 91ac     +LD R26 , X
                 	__GETB2SX 558
0057ba 940e 882b 	CALL _removeEventLogQueue
                 ; 0009 01BF     }
                 ; 0009 01C0 
                 ; 0009 01C1     return;
                 _0x120044:
0057bc 940e e47c 	CALL __LOADLOCR6
0057be 96af      	ADIW R28,47
0057bf 5fde      	SUBI R29,-2
0057c0 9508      	RET
                 ; 0009 01C2 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C5 {
                 _ETH_retransmit:
                 ; 0009 01C6     int i;
                 ; 0009 01C7 
                 ; 0009 01C8     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
0057c1 940e caad 	CALL SUBOPT_0x14D
                 ;	i -> R16,R17
                 _0x12004E:
                +
0057c3 300f     +CPI R16 , LOW ( 15 )
0057c4 e0e0     +LDI R30 , HIGH ( 15 )
0057c5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
0057c6 f014      	BRLT PC+3
0057c7 940c 5875 	JMP _0x12004F
                 ; 0009 01C9     {
                 ; 0009 01CA         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CB             (eth_waitQueue[i].packetID != 0))
0057c9 940e cb8e 	CALL SUBOPT_0x16F
                +
0057cb 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
0057cc 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
0057cd 01df      	MOVW R26,R30
0057ce 940e e3d0 	CALL __GETD1P
0057d0 940e c333 	CALL SUBOPT_0x1C
0057d2 f039      	BREQ _0x120051
0057d3 940e cb8e 	CALL SUBOPT_0x16F
                +
0057d5 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057d6 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057d7 81a0      	LD   R26,Z
0057d8 30a0      	CPI  R26,LOW(0x0)
0057d9 f409      	BRNE _0x120052
                 _0x120051:
0057da c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CC         {
                 ; 0009 01CD             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
0057db 940e cb8e 	CALL SUBOPT_0x16F
0057dd 58e5      	SUBI R30,LOW(-_eth_waitQueue)
0057de 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
0057df 81a0      	LD   R26,Z
0057e0 30a3      	CPI  R26,LOW(0x3)
0057e1 f410      	BRSH PC+3
0057e2 940c 5849 	JMP _0x120053
                 ; 0009 01CE             {
                 ; 0009 01CF                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
0057e4 ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
0057e5 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
0057e6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
0057e7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
0057e8 940e e400 	CALL __PUTPARD1
0057ea 940e cb8e 	CALL SUBOPT_0x16F
                +
0057ec 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057ed 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057ee 81e0      	LD   R30,Z
0057ef 940e c388 	CALL SUBOPT_0x29
                 ; 0009 01D0 
                 ; 0009 01D1                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
0057f1 940e cb8e 	CALL SUBOPT_0x16F
                +
0057f3 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0057f4 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0057f5 81a0      	LD   R26,Z
0057f6 91e0 1426 	LDS  R30,_logDataWait
0057f8 17ea      	CP   R30,R26
0057f9 f451      	BRNE _0x120054
                 ; 0009 01D2                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
0057fa eee7     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
0057fb e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
0057fc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
0057fd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
0057fe 940e c274 	CALL SUBOPT_0x3
                 ; 0009 01D3                     logDataWait.frameID = 0x00;
005800 e0e0      	LDI  R30,LOW(0)
005801 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D4                 }
                 ; 0009 01D5                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
005803 c019      	RJMP _0x120055
                 _0x120054:
005804 940e cb8e 	CALL SUBOPT_0x16F
                +
005806 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005807 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005808 81a0      	LD   R26,Z
005809 91e0 142b 	LDS  R30,_logEventWait
00580b 17ea      	CP   R30,R26
00580c f451      	BRNE _0x120056
                 ; 0009 01D6                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
00580d e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
00580e e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
00580f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
005810 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
005811 940e c274 	CALL SUBOPT_0x3
                 ; 0009 01D7                     logEventWait.frameID = 0x00;
005813 e0e0      	LDI  R30,LOW(0)
005814 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01D8                 }
                 ; 0009 01D9                 else{
005816 c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DA                     // ---- Push in log here ---- //
                 ; 0009 01DB                     ETH_checkPushLog(eth_waitQueue[i].packetID);
005817 940e cb8e 	CALL SUBOPT_0x16F
                +
005819 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00581a 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00581b 81a0      	LD   R26,Z
00581c dee0      	RCALL _ETH_checkPushLog
                 ; 0009 01DC                     // -------------------------- //
                 ; 0009 01DD                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01DE 
                 ; 0009 01DF                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
00581d 940e cb8e 	CALL SUBOPT_0x16F
                +
00581f 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005820 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005821 81a0      	LD   R26,Z
005822 940e 6a78 	CALL _ETH_removeWaitQueue
                 ; 0009 01E0 
                 ; 0009 01E1                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
005824 e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
005825 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
005826 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
005827 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
005828 940e cb94 	CALL SUBOPT_0x170
00582a 940e cb94 	CALL SUBOPT_0x170
00582c 940e c34d 	CALL SUBOPT_0x21
                 ; 0009 01E2                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
00582e 940e cb9f 	CALL SUBOPT_0x171
005830 940e c3fc 	CALL SUBOPT_0x3A
005832 f029      	BREQ _0x120059
005833 940e cb9f 	CALL SUBOPT_0x171
005835 940e e465 	CALL __CPD02
005837 f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E3                     TIMER_setTimer(&commLostTimer,30);
005838 e2e1      	LDI  R30,LOW(_commLostTimer)
005839 e1f4      	LDI  R31,HIGH(_commLostTimer)
00583a 940e cba8 	CALL SUBOPT_0x172
00583c 940e 4217 	CALL _TIMER_setTimer
                 ; 0009 01E4                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
00583e e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
00583f e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
005840 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
005841 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
005842 940e cbaf 	CALL SUBOPT_0x173
005844 940e cbaf 	CALL SUBOPT_0x173
005846 940e c34d 	CALL SUBOPT_0x21
                 ; 0009 01E5                 }
                 ; 0009 01E6             }
                 _0x120058:
                 ; 0009 01E7             else
005848 c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01E8             {
                 ; 0009 01E9                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
005849 940e cb8e 	CALL SUBOPT_0x16F
00584b 940e cbbd 	CALL SUBOPT_0x174
00584d 940e cbc2 	CALL SUBOPT_0x175
                 ; 0009 01EA                 eth_waitQueue[i].retryCount++;      // increase retry counter
00584f 940e cb8e 	CALL SUBOPT_0x16F
005851 58e5      	SUBI R30,LOW(-_eth_waitQueue)
005852 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
005853 01df      	MOVW R26,R30
005854 91ec      	LD   R30,X
005855 5fef      	SUBI R30,-LOW(1)
005856 93ec      	ST   X,R30
                 ; 0009 01EB 
                 ; 0009 01EC                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
005857 e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
005858 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
005859 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
00585a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
00585b 940e e400 	CALL __PUTPARD1
00585d 940e cb8e 	CALL SUBOPT_0x16F
                +
00585f 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005860 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005861 81e0      	LD   R30,Z
005862 940e c388 	CALL SUBOPT_0x29
                 ; 0009 01ED 
                 ; 0009 01EE                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01EF                                 eth_waitQueue[i].packetLen);
005864 940e cb8e 	CALL SUBOPT_0x16F
005866 940e cbcb 	CALL SUBOPT_0x176
005868 93fa      	ST   -Y,R31
005869 93ea      	ST   -Y,R30
00586a 940e cb8e 	CALL SUBOPT_0x16F
                +
00586c 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00586d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00586e 81a0      	LD   R26,Z
00586f e0b0      	LDI  R27,0
005870 940e 4115 	CALL _write_uart0
                 ; 0009 01F0             }
                 _0x12005B:
                 ; 0009 01F1         }
                 ; 0009 01F2     }
                 _0x120050:
                +
005872 5f0f     +SUBI R16 , LOW ( - 1 )
005873 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005874 cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F3     return;
005875 9109      	LD   R16,Y+
005876 9119      	LD   R17,Y+
005877 9508      	RET
                 ; 0009 01F4 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F7 {
                 _ETH_processPacket:
                 ; 0009 01F8     FIL             file;
                 ; 0009 01F9     unsigned char   frameType;
                 ; 0009 01FA     int             res=0;
                 ; 0009 01FB     unsigned char   frameID;
                 ; 0009 01FC     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FD 
                 ; 0009 01FE     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 01FF     char            *cnfgWr;
                 ; 0009 0200 
                 ; 0009 0201     int             i;
                 ; 0009 0202 
                 ; 0009 0203 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0204 //    print_payload(ptr2frame,len);
                 ; 0009 0205 //    printDebug("\r\n******************\r\n");
                 ; 0009 0206     frameID         = ptr2frame[0];
005878 93ba      	ST   -Y,R27
005879 93aa      	ST   -Y,R26
00587a 97a6      	SBIW R28,38
00587b 50d2      	SUBI R29,2
00587c 940e e475 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
00587e e020     +LDI R18 , LOW ( 0 )
00587f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005880 940e cbd1 	CALL SUBOPT_0x177
005882 910c      	LD   R16,X
                 ; 0009 0207     frameType       = ptr2frame[1];
005883 940e cbd1 	CALL SUBOPT_0x177
005885 9611      	ADIW R26,1
005886 911c      	LD   R17,X
                 ; 0009 0208 
                 ; 0009 0209     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
005887 940e c369 	CALL SUBOPT_0x25
005889 93e0 1421 	STS  _commLostTimer,R30
00588b 93f0 1422 	STS  _commLostTimer+1,R31
00588d 9360 1423 	STS  _commLostTimer+2,R22
00588f 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020A     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020B 
                 ; 0009 020C     switch(frameType){
005891 940e c706 	CALL SUBOPT_0xAB
                 ; 0009 020D         case STATREQC  :     // -- Status Request COMMAND
005893 31ea      	CPI  R30,LOW(0x1A)
005894 e0a0      	LDI  R26,HIGH(0x1A)
005895 07fa      	CPC  R31,R26
005896 f011      	BREQ PC+3
005897 940c 5916 	JMP _0x12005F
                 ; 0009 020E             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
005899 940e cbd8 	CALL SUBOPT_0x178
00589b 971d      	SBIW R26,13
00589c f44c      	BRGE _0x120060
                 ; 0009 020F                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
00589d eceb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
00589e e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
00589f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
0058a0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
0058a1 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 0210                 ETH_sendNack(frameID,INVALID_LENGTH);
0058a3 940e cbe8 	CALL SUBOPT_0x17A
                 ; 0009 0211                 return;
0058a5 c0d3      	RJMP _0x20E0081
                 ; 0009 0212             }
                 ; 0009 0213 
                 ; 0009 0214             payload = (int) malloc (len);
                 _0x120060:
0058a6 940e cbd8 	CALL SUBOPT_0x178
0058a8 940e cbec 	CALL SUBOPT_0x17B
                 ; 0009 0215             if(payload == NULL){
0058aa f449      	BRNE _0x120061
                 ; 0009 0216                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
0058ab e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
0058ac e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
0058ad e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
0058ae e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
0058af 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0217                 ETH_sendNack(frameID,NOT_READY);
0058b1 940e cbf2 	CALL SUBOPT_0x17C
                 ; 0009 0218                 return;
0058b3 c0c5      	RJMP _0x20E0081
                 ; 0009 0219             }
                 ; 0009 021A 
                 ; 0009 021B             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
0058b4 940e cbf6 	CALL SUBOPT_0x17D
0058b6 940e cbfd 	CALL SUBOPT_0x17E
0058b8 940e 6168 	CALL _statusRequestParser
0058ba 019f      	MOVW R18,R30
                 ; 0009 021C             if(res < 0){
0058bb 2333      	TST  R19
0058bc f44a      	BRPL _0x120062
                 ; 0009 021D                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
0058bd e3e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
0058be e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
0058bf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
0058c0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
0058c1 940e c274 	CALL SUBOPT_0x3
                 ; 0009 021E                 free( (void *) payload );
0058c3 940e cc06 	CALL SUBOPT_0x17F
                 ; 0009 021F                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0220                 return;
0058c5 c0b3      	RJMP _0x20E0081
                 ; 0009 0221             }
                 ; 0009 0222 
                 ; 0009 0223             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
0058c6 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
0058c7 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
0058c8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
0058c9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
0058ca 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 0224             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
0058cc e8ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
0058cd e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
0058ce e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
0058cf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
0058d0 940e cc12 	CALL SUBOPT_0x181
                 ; 0009 0225             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
0058d2 eae9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
0058d3 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
0058d4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
0058d5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
0058d6 940e cc18 	CALL SUBOPT_0x182
0058d8 940e cc18 	CALL SUBOPT_0x182
0058da 940e c34d 	CALL SUBOPT_0x21
                 ; 0009 0226             printDebug("statusList      |");
                +
0058dc ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
0058dd e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
0058de e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
0058df e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
0058e0 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0227 
                 ; 0009 0228             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
0058e2 e0e0      	LDI  R30,LOW(0)
0058e3 83ee      	STD  Y+6,R30
0058e4 83ef      	STD  Y+6+1,R30
                 _0x120064:
0058e5 01da      	MOVW R26,R20
0058e6 961b      	ADIW R26,11
0058e7 940e cc1e 	CALL SUBOPT_0x183
0058e9 f4b8      	BRSH _0x120065
                 ; 0009 0229             {
                 ; 0009 022A                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
0058ea edeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
0058eb e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
0058ec e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
0058ed e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
0058ee 940e e400 	CALL __PUTPARD1
0058f0 01fa      	MOVW R30,R20
0058f1 85a5      	LDD  R26,Z+13
0058f2 85b6      	LDD  R27,Z+14
0058f3 85ea      	LDD  R30,Y+10
0058f4 85fb      	LDD  R31,Y+10+1
0058f5 9631      	ADIW R30,1
0058f6 87ea      	STD  Y+10,R30
0058f7 87fb      	STD  Y+10+1,R31
0058f8 9731      	SBIW R30,1
0058f9 940e cc25 	CALL SUBOPT_0x184
                 ; 0009 022B             }
0058fb 81ee      	LDD  R30,Y+6
0058fc 81ff      	LDD  R31,Y+6+1
0058fd 9631      	ADIW R30,1
0058fe 83ee      	STD  Y+6,R30
0058ff 83ff      	STD  Y+6+1,R31
005900 cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022C             printDebug("\r\n-- ..Done.. --\r\n");
                +
005901 eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
005902 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
005903 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
005904 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
005905 940e c274 	CALL SUBOPT_0x3
                 ; 0009 022D 
                 ; 0009 022E             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
005907 940e cc2a 	CALL SUBOPT_0x185
005909 e0a0      	LDI  R26,LOW(0)
00590a db24      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 022F 
                 ; 0009 0230             if( ((struct stat_req_st *)payload)->accm < 0x30){
00590b 01fa      	MOVW R30,R20
00590c 85a0      	LDD  R26,Z+8
00590d 33a0      	CPI  R26,LOW(0x30)
00590e f418      	BRSH _0x120066
                 ; 0009 0231                 free_statusRequest((struct stat_req_st *)payload);
00590f 01da      	MOVW R26,R20
005910 940e 63a8 	CALL _free_statusRequest
                 ; 0009 0232             }
                 ; 0009 0233 
                 ; 0009 0234             free( (void *) payload );
                 _0x120066:
005912 01da      	MOVW R26,R20
005913 940e a76e 	CALL _free
                 ; 0009 0235             break;
005915 c460      	RJMP _0x12005E
                 ; 0009 0236         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
005916 32eb      	CPI  R30,LOW(0x2B)
005917 e0a0      	LDI  R26,HIGH(0x2B)
005918 07fa      	CPC  R31,R26
005919 f011      	BREQ PC+3
00591a 940c 5961 	JMP _0x120067
                 ; 0009 0237             if( len < (2 + sizeof(struct stat_rep_st)) ){
00591c 940e cbd8 	CALL SUBOPT_0x178
00591e 971e      	SBIW R26,14
00591f f42c      	BRGE _0x120068
                 ; 0009 0238                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
005920 efe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
005921 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
005922 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
005923 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
005924 c04a      	RJMP _0x20E0080
                 ; 0009 0239                 return;
                 ; 0009 023A             }
                 ; 0009 023B 
                 ; 0009 023C             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
005925 e2ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
005926 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
005927 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
005928 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
005929 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 023D             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 023E                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
00592b e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
00592c e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
00592d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
00592e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
00592f 940e e400 	CALL __PUTPARD1
                +
005931 01fe     +MOVW R30 , R28
005932 5cee     +SUBI R30 , LOW ( - 562 )
005933 4ffd     +SBCI R31 , HIGH ( - 562 )
005934 9001     +LD R0 , Z +
005935 81f0     +LD R31 , Z
005936 2de0     +MOV R30 , R0
                 	__GETW1SX 562
005937 85e2      	LDD  R30,Z+10
005938 940e c525 	CALL SUBOPT_0x65
                +
00593a 01fe     +MOVW R30 , R28
00593b 5cea     +SUBI R30 , LOW ( - 566 )
00593c 4ffd     +SBCI R31 , HIGH ( - 566 )
00593d 9001     +LD R0 , Z +
00593e 81f0     +LD R31 , Z
00593f 2de0     +MOV R30 , R0
                 	__GETW1SX 566
005940 85e3      	LDD  R30,Z+11
005941 940e c525 	CALL SUBOPT_0x65
                +
005943 01fe     +MOVW R30 , R28
005944 5ce6     +SUBI R30 , LOW ( - 570 )
005945 4ffd     +SBCI R31 , HIGH ( - 570 )
005946 9001     +LD R0 , Z +
005947 81f0     +LD R31 , Z
005948 2de0     +MOV R30 , R0
                 	__GETW1SX 570
005949 85e4      	LDD  R30,Z+12
00594a 940e c525 	CALL SUBOPT_0x65
                +
00594c 01fe     +MOVW R30 , R28
00594d 5ce2     +SUBI R30 , LOW ( - 574 )
00594e 4ffd     +SBCI R31 , HIGH ( - 574 )
00594f 9001     +LD R0 , Z +
005950 81f0     +LD R31 , Z
005951 2de0     +MOV R30 , R0
                 	__GETW1SX 574
005952 85e5      	LDD  R30,Z+13
005953 940e c525 	CALL SUBOPT_0x65
005955 940e cb3a 	CALL SUBOPT_0x161
                 ; 0009 023F             res = setTimeSyncSchema( &ptr2frame[10] );
005957 940e cbd1 	CALL SUBOPT_0x177
005959 961a      	ADIW R26,10
00595a 940e 6995 	CALL _setTimeSyncSchema
00595c 019f      	MOVW R18,R30
                 ; 0009 0240             if(res < 0){
                 ; 0009 0241                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0242             }
                 ; 0009 0243             ETH_removeWaitQueue(frameID);
00595d 2fa0      	MOV  R26,R16
00595e 940e 6a78 	CALL _ETH_removeWaitQueue
                 ; 0009 0244             break;
005960 c415      	RJMP _0x12005E
                 ; 0009 0245         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
005961 33eb      	CPI  R30,LOW(0x3B)
005962 e0a0      	LDI  R26,HIGH(0x3B)
005963 07fa      	CPC  R31,R26
005964 f011      	BREQ PC+3
005965 940c 59cd 	JMP _0x12006A
                 ; 0009 0246             if( len < (2 + sizeof(struct event_rep_st)) ){
005967 940e cbd8 	CALL SUBOPT_0x178
005969 971a      	SBIW R26,10
00596a f49c      	BRGE _0x12006B
                 ; 0009 0247                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
00596b e8e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
00596c e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
00596d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
00596e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E0080:
00596f 940e e400 	CALL __PUTPARD1
                +
005971 01fe     +MOVW R30 , R28
005972 5de0     +SUBI R30 , LOW ( - 560 )
005973 4ffd     +SBCI R31 , HIGH ( - 560 )
005974 9001     +LD R0 , Z +
005975 81f0     +LD R31 , Z
005976 2de0     +MOV R30 , R0
                 	__GETW1SX 560
005977 940e c881 	CALL SUBOPT_0xE9
                 ; 0009 0248                 return;
                 _0x20E0081:
005979 940e e47c 	CALL __LOADLOCR6
00597b 96e0      	ADIW R28,48
00597c 5fde      	SUBI R29,-2
00597d 9508      	RET
                 ; 0009 0249             }
                 ; 0009 024A 
                 ; 0009 024B             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
00597e ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
00597f e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
005980 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
005981 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
005982 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 024C             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
005984 91a0 142b 	LDS  R26,_logEventWait
005986 30a0      	CPI  R26,LOW(0x0)
005987 f021      	BREQ _0x12006D
005988 91e0 142b 	LDS  R30,_logEventWait
00598a 17e0      	CP   R30,R16
00598b f009      	BREQ _0x12006E
                 _0x12006D:
00598c c039      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024D             {
                 ; 0009 024E                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
00598d eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
00598e e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
00598f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
005990 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
005991 940e c274 	CALL SUBOPT_0x3
                 ; 0009 024F 
                 ; 0009 0250                 res = LOG_openFile(&file,LOGFILE_EVENT);
005993 940e c4e1 	CALL SUBOPT_0x5A
005995 940e c53a 	CALL SUBOPT_0x69
005997 019f      	MOVW R18,R30
                 ; 0009 0251                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
005998 2333      	TST  R19
005999 f42a      	BRPL _0x12006F
                +
00599a e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
00599b e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
00599c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
00599d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
00599e c01d      	RJMP _0x120117
                 ; 0009 0252                 else
                 _0x12006F:
                 ; 0009 0253                 {
                 ; 0009 0254                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
00599f 940e c4e1 	CALL SUBOPT_0x5A
0059a1 940e c58e 	CALL SUBOPT_0x72
0059a3 940e cc2f 	CALL SUBOPT_0x186
                 ; 0009 0255                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
0059a5 f41a      	BRPL _0x120071
0059a6 940e cc37 	CALL SUBOPT_0x187
                 ; 0009 0256                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
0059a8 c00c      	RJMP _0x120072
                 _0x120071:
                +
0059a9 e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
0059aa e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
0059ab e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
0059ac e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
0059ad 940e c545 	CALL SUBOPT_0x6A
0059af 940e c58e 	CALL SUBOPT_0x72
0059b1 940e c7fa 	CALL SUBOPT_0xD3
0059b3 940e c34d 	CALL SUBOPT_0x21
                 _0x120072:
                 ; 0009 0257 
                 ; 0009 0258                     res = LOG_closeFile(&file);
0059b5 940e cc3d 	CALL SUBOPT_0x188
                 ; 0009 0259                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
0059b7 f462      	BRPL _0x120073
                +
0059b8 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
0059b9 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
0059ba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
0059bb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
0059bc 940e e400 	CALL __PUTPARD1
0059be ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0059bf e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0059c0 940e c3d6 	CALL SUBOPT_0x34
0059c2 940e c2ea 	CALL SUBOPT_0x12
                 ; 0009 025A                 }
                 _0x120073:
                 ; 0009 025B 
                 ; 0009 025C                 logEventWait.frameID    = 0;
0059c4 940e c57e 	CALL SUBOPT_0x71
                 ; 0009 025D                 logEventWait.logID      = 0;
                 ; 0009 025E             }
                 ; 0009 025F             removeEventLogQueue(frameID);
                 _0x12006C:
0059c6 2fa0      	MOV  R26,R16
0059c7 940e 882b 	CALL _removeEventLogQueue
                 ; 0009 0260             ETH_removeWaitQueue(frameID);
0059c9 2fa0      	MOV  R26,R16
0059ca 940e 6a78 	CALL _ETH_removeWaitQueue
                 ; 0009 0261             break;
0059cc c3a9      	RJMP _0x12005E
                 ; 0009 0262         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
0059cd 34ea      	CPI  R30,LOW(0x4A)
0059ce e0a0      	LDI  R26,HIGH(0x4A)
0059cf 07fa      	CPC  R31,R26
0059d0 f011      	BREQ PC+3
0059d1 940c 5b04 	JMP _0x120074
                 ; 0009 0263             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
0059d3 eaed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
0059d4 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
0059d5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
0059d6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
0059d7 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0264             print_payload(ptr2frame, len);
0059d9 940e cbf6 	CALL SUBOPT_0x17D
0059db 93fa      	ST   -Y,R31
0059dc 93ea      	ST   -Y,R30
0059dd 940e cbd1 	CALL SUBOPT_0x177
0059df 940e 9f7c 	CALL _print_payload
                 ; 0009 0265 
                 ; 0009 0266             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
0059e1 940e cbd8 	CALL SUBOPT_0x178
0059e3 971c      	SBIW R26,12
0059e4 f44c      	BRGE _0x120075
                 ; 0009 0267                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
0059e5 ede1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
0059e6 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
0059e7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
0059e8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
0059e9 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 0268                 ETH_sendNack(frameID,INVALID_LENGTH);
0059eb 940e cbe8 	CALL SUBOPT_0x17A
                 ; 0009 0269                 return;
0059ed c388      	RJMP _0x20E007F
                 ; 0009 026A             }
                 ; 0009 026B 
                 ; 0009 026C             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
0059ee e0ae      	LDI  R26,LOW(14)
0059ef 940e cc4a 	CALL SUBOPT_0x189
                 ; 0009 026D             if(payload == NULL){
0059f1 f459      	BRNE _0x120076
                 ; 0009 026E                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
0059f2 940e cc4c 	CALL SUBOPT_0x18A
                +
0059f4 e0ee     +LDI R30 , LOW ( 0xE )
0059f5 e0f0     +LDI R31 , HIGH ( 0xE )
0059f6 e060     +LDI R22 , BYTE3 ( 0xE )
0059f7 e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
0059f8 940e cc53 	CALL SUBOPT_0x18B
                 ; 0009 026F                 ETH_sendNack(frameID,NOT_READY);
0059fa 940e cbf2 	CALL SUBOPT_0x17C
                 ; 0009 0270                 return;
0059fc c379      	RJMP _0x20E007F
                 ; 0009 0271             }
                 ; 0009 0272 
                 ; 0009 0273             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
0059fd 940e cc57 	CALL SUBOPT_0x18C
0059ff 940e 61c4 	CALL _configManageParser
005a01 019f      	MOVW R18,R30
                 ; 0009 0274             if(res < 0){
005a02 2333      	TST  R19
005a03 f44a      	BRPL _0x120077
                 ; 0009 0275                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
005a04 e4e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
005a05 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
005a06 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
005a07 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
005a08 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0276                 free( (void *) payload );
005a0a 940e cc06 	CALL SUBOPT_0x17F
                 ; 0009 0277                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0278                 return;
005a0c c369      	RJMP _0x20E007F
                 ; 0009 0279             }
                 ; 0009 027A 
                 ; 0009 027B             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
005a0d e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
005a0e e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
005a0f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
005a10 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
005a11 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 027C             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
005a13 940e cc59 	CALL SUBOPT_0x18D
                 ; 0009 027D             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
005a15 ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
005a16 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
005a17 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
005a18 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
005a19 940e cc5e 	CALL SUBOPT_0x18E
                 ; 0009 027E 
                 ; 0009 027F             switch( ((struct conf_man_st *)payload)->accd ){
005a1b 940e cc64 	CALL SUBOPT_0x18F
                 ; 0009 0280                 case CONF_RD_CMD    :   // -- Configration Read -- //
005a1d f011      	BREQ PC+3
005a1e 940c 5a8d 	JMP _0x12007B
                 ; 0009 0281                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
005a20 01fa      	MOVW R30,R20
005a21 85a1      	LDD  R26,Z+9
005a22 940e 63bd 	CALL _getConfigLen
005a24 019f      	MOVW R18,R30
                 ; 0009 0282                                         if(res < 0){
005a25 2333      	TST  R19
005a26 f43a      	BRPL _0x12007C
                 ; 0009 0283                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
005a27 ede4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
005a28 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
005a29 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
005a2a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
005a2b 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0284                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005a2d c0cc      	RJMP _0x120118
                 ; 0009 0285                                             break;
                 ; 0009 0286                                         }
                 ; 0009 0287 
                 ; 0009 0288                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
005a2e 01d9      	MOVW R26,R18
005a2f 940e a753 	CALL _malloc
005a31 87ea      	STD  Y+10,R30
005a32 87fb      	STD  Y+10+1,R31
                 ; 0009 0289                                         if(cnfgRd == NULL){
005a33 9730      	SBIW R30,0
005a34 f449      	BRNE _0x12007D
                 ; 0009 028A                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
005a35 e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
005a36 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
005a37 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
005a38 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
005a39 940e c274 	CALL SUBOPT_0x3
                 ; 0009 028B                                             ETH_sendNack(frameID,NOT_READY);
005a3b 930a      	ST   -Y,R16
005a3c e5a0      	LDI  R26,LOW(80)
005a3d c0be      	RJMP _0x120119
                 ; 0009 028C                                             break;
                 ; 0009 028D                                         }
                 ; 0009 028E 
                 ; 0009 028F                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
005a3e 01fa      	MOVW R30,R20
005a3f 85a1      	LDD  R26,Z+9
005a40 93aa      	ST   -Y,R26
005a41 85ab      	LDD  R26,Y+11
005a42 85bc      	LDD  R27,Y+11+1
005a43 940e 640f 	CALL _configRead
005a45 019f      	MOVW R18,R30
                 ; 0009 0290                                         if(res <= 0){
005a46 2400      	CLR  R0
005a47 1602      	CP   R0,R18
005a48 0603      	CPC  R0,R19
005a49 f164      	BRLT _0x12007E
                 ; 0009 0291                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
005a4a e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
005a4b e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
005a4c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
005a4d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
005a4e 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0292                                             if(res == -1){
005a50 efef      	LDI  R30,LOW(65535)
005a51 efff      	LDI  R31,HIGH(65535)
005a52 17e2      	CP   R30,R18
005a53 07f3      	CPC  R31,R19
005a54 f419      	BRNE _0x12007F
                 ; 0009 0293                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005a55 930a      	ST   -Y,R16
005a56 e3a0      	LDI  R26,LOW(48)
005a57 c018      	RJMP _0x12011A
                 ; 0009 0294                                             }
                 ; 0009 0295                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
005a58 efee      	LDI  R30,LOW(65534)
005a59 efff      	LDI  R31,HIGH(65534)
005a5a 17e2      	CP   R30,R18
005a5b 07f3      	CPC  R31,R19
005a5c f021      	BREQ _0x120082
005a5d 2400      	CLR  R0
005a5e 1602      	CP   R0,R18
005a5f 0603      	CPC  R0,R19
005a60 f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0296                                                 ETH_sendNack(frameID,NOT_READY);
005a61 930a      	ST   -Y,R16
005a62 e5a0      	LDI  R26,LOW(80)
005a63 c00c      	RJMP _0x12011A
                 ; 0009 0297                                             }
                 ; 0009 0298                                             else if(res == -3){
                 _0x120081:
005a64 efed      	LDI  R30,LOW(65533)
005a65 efff      	LDI  R31,HIGH(65533)
005a66 17e2      	CP   R30,R18
005a67 07f3      	CPC  R31,R19
005a68 f429      	BRNE _0x120085
                 ; 0009 0299                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029A                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029B                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029C                                                                             ERROR);
005a69 940e cc2a 	CALL SUBOPT_0x185
005a6b 940e cc68 	CALL SUBOPT_0x190
                 ; 0009 029D                                             }
                 ; 0009 029E                                             else{
005a6d c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 029F                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
005a6e 930a      	ST   -Y,R16
005a6f efaf      	LDI  R26,LOW(255)
                 _0x12011A:
005a70 d999      	RCALL _ETH_sendNack
                 ; 0009 02A0                                             }
                 _0x120086:
                 ; 0009 02A1 
                 ; 0009 02A2                                             free((void *) cnfgRd);
005a71 85aa      	LDD  R26,Y+10
005a72 85bb      	LDD  R27,Y+10+1
005a73 940e a76e 	CALL _free
                 ; 0009 02A3                                             break;
005a75 c087      	RJMP _0x12007A
                 ; 0009 02A4                                         }
                 ; 0009 02A5 
                 ; 0009 02A6                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A7                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02A8                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02A9                                                                         SUCCESS,
                 ; 0009 02AA                                                                         (char *)cnfgRd,
                 ; 0009 02AB                                                                         res  );
005a76 940e cc2a 	CALL SUBOPT_0x185
005a78 940e cc6e 	CALL SUBOPT_0x191
005a7a 85ee      	LDD  R30,Y+14
005a7b 85ff      	LDD  R31,Y+14+1
005a7c 93fa      	ST   -Y,R31
005a7d 93ea      	ST   -Y,R30
005a7e 01d9      	MOVW R26,R18
005a7f 940e cc74 	CALL SUBOPT_0x192
                 ; 0009 02AC                                         if(res < 0){
005a81 f432      	BRPL _0x120087
                 ; 0009 02AD                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
005a82 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
005a83 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
005a84 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
005a85 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
005a86 940e c274 	CALL SUBOPT_0x3
                 ; 0009 02AE                                         }
                 ; 0009 02AF 
                 ; 0009 02B0                                         free( (void *) cnfgRd );
                 _0x120087:
005a88 85aa      	LDD  R26,Y+10
005a89 85bb      	LDD  R27,Y+10+1
005a8a 940e a76e 	CALL _free
                 ; 0009 02B1                                         break;
005a8c c070      	RJMP _0x12007A
                 ; 0009 02B2                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
005a8d 32e0      	CPI  R30,LOW(0x20)
005a8e e0a0      	LDI  R26,HIGH(0x20)
005a8f 07fa      	CPC  R31,R26
005a90 f011      	BREQ PC+3
005a91 940c 5ad8 	JMP _0x120088
                 ; 0009 02B3                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
005a93 01fa      	MOVW R30,R20
005a94 85a2      	LDD  R26,Z+10
005a95 85b3      	LDD  R27,Z+11
005a96 940e a753 	CALL _malloc
005a98 940e cc79 	CALL SUBOPT_0x193
                 ; 0009 02B4                                         if(cnfgWr == NULL){
005a9a 9730      	SBIW R30,0
005a9b f449      	BRNE _0x120089
                 ; 0009 02B5                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
005a9c e9e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
005a9d e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
005a9e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
005a9f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
005aa0 940e c274 	CALL SUBOPT_0x3
                 ; 0009 02B6                                             ETH_sendNack(frameID,NOT_READY);
005aa2 930a      	ST   -Y,R16
005aa3 e5a0      	LDI  R26,LOW(80)
005aa4 c057      	RJMP _0x120119
                 ; 0009 02B7                                             break;
                 ; 0009 02B8                                         }
                 ; 0009 02B9 
                 ; 0009 02BA                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
005aa5 940e cc7c 	CALL SUBOPT_0x194
005aa7 01fa      	MOVW R30,R20
005aa8 85a4      	LDD  R26,Z+12
005aa9 85b5      	LDD  R27,Z+13
005aaa 93ba      	ST   -Y,R27
005aab 93aa      	ST   -Y,R26
005aac 85a2      	LDD  R26,Z+10
005aad 85b3      	LDD  R27,Z+11
005aae 940e a790 	CALL _memcpy
                 ; 0009 02BB 
                 ; 0009 02BC                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BD                                                             cnfgWr,
                 ; 0009 02BE                                                             (int) (((struct conf_man_st *)payload)->confLen) );
005ab0 01fa      	MOVW R30,R20
005ab1 85a1      	LDD  R26,Z+9
005ab2 93aa      	ST   -Y,R26
005ab3 940e cc81 	CALL SUBOPT_0x195
005ab5 01fa      	MOVW R30,R20
005ab6 85a2      	LDD  R26,Z+10
005ab7 85b3      	LDD  R27,Z+11
005ab8 940e 683f 	CALL _configWrite
005aba 019f      	MOVW R18,R30
                 ; 0009 02BF 
                 ; 0009 02C0                                         free(cnfgWr);
005abb 85a8      	LDD  R26,Y+8
005abc 85b9      	LDD  R27,Y+8+1
005abd 940e a76e 	CALL _free
                 ; 0009 02C1                                         if(res < 0){
005abf 2333      	TST  R19
005ac0 f45a      	BRPL _0x12008A
                 ; 0009 02C2                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
005ac1 ece4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
005ac2 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
005ac3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
005ac4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
005ac5 940e c274 	CALL SUBOPT_0x3
                 ; 0009 02C3                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C6                                                                         ERROR);
005ac7 940e cc2a 	CALL SUBOPT_0x185
005ac9 940e cc68 	CALL SUBOPT_0x190
                 ; 0009 02C7                                             break;
005acb c031      	RJMP _0x12007A
                 ; 0009 02C8                                         }
                 ; 0009 02C9 
                 ; 0009 02CA 
                 ; 0009 02CB                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CC                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CD                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02CE                                                                         SUCCESS,
                 ; 0009 02CF                                                                         NULL,
                 ; 0009 02D0                                                                         0  );
005acc 940e cc2a 	CALL SUBOPT_0x185
005ace 940e cc6e 	CALL SUBOPT_0x191
005ad0 940e cc86 	CALL SUBOPT_0x196
005ad2 940e cc74 	CALL SUBOPT_0x192
                 ; 0009 02D1                                         if(res < 0){
005ad4 f412      	BRPL _0x12008B
                 ; 0009 02D2                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005ad5 940e cc8b 	CALL SUBOPT_0x197
                 ; 0009 02D3                                         }
                 ; 0009 02D4 
                 ; 0009 02D5                                         break;
                 _0x12008B:
005ad7 c025      	RJMP _0x12007A
                 ; 0009 02D6                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
005ad8 33e0      	CPI  R30,LOW(0x30)
005ad9 e0a0      	LDI  R26,HIGH(0x30)
005ada 07fa      	CPC  R31,R26
005adb f4e1      	BRNE _0x12008F
                 ; 0009 02D7                                         res = configConfirm();
005adc 940e 6a0c 	CALL _configConfirm
005ade 019f      	MOVW R18,R30
                 ; 0009 02D8                                         if(res < 0){
005adf 2333      	TST  R19
005ae0 f45a      	BRPL _0x12008D
                 ; 0009 02D9                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
005ae1 e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
005ae2 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
005ae3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
005ae4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
005ae5 940e c274 	CALL SUBOPT_0x3
                 ; 0009 02DA                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DB                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DC                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DD                                                                         ERROR);
005ae7 940e cc2a 	CALL SUBOPT_0x185
005ae9 940e cc68 	CALL SUBOPT_0x190
                 ; 0009 02DE                                             break;
005aeb c011      	RJMP _0x12007A
                 ; 0009 02DF                                         }
                 ; 0009 02E0 
                 ; 0009 02E1                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E2                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E3                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E4                                                                         SUCCESS,
                 ; 0009 02E5                                                                         NULL,
                 ; 0009 02E6                                                                         0  );
005aec 940e cc2a 	CALL SUBOPT_0x185
005aee 940e cc6e 	CALL SUBOPT_0x191
005af0 940e cc86 	CALL SUBOPT_0x196
005af2 940e cc74 	CALL SUBOPT_0x192
                 ; 0009 02E7                                         if(res < 0){
005af4 f412      	BRPL _0x12008E
                 ; 0009 02E8                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005af5 940e cc8b 	CALL SUBOPT_0x197
                 ; 0009 02E9                                         }
                 ; 0009 02EA 
                 ; 0009 02EB                                         break;
                 _0x12008E:
005af7 c005      	RJMP _0x12007A
                 ; 0009 02EC                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02ED                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02EE                                                         ((struct conf_man_st *)payload)->accd );
005af8 940e cc91 	CALL SUBOPT_0x198
                 ; 0009 02EF                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
005afa 930a      	ST   -Y,R16
005afb e3a0      	LDI  R26,LOW(48)
                 _0x120119:
005afc d90d      	RCALL _ETH_sendNack
                 ; 0009 02F0                                         break;
                 ; 0009 02F1             }
                 _0x12007A:
                 ; 0009 02F2 
                 ; 0009 02F3             free_configManage((struct conf_man_st *)payload);
005afd 01da      	MOVW R26,R20
005afe 940e 63af 	CALL _free_configManage
                 ; 0009 02F4             free( (void *) payload );
005b00 01da      	MOVW R26,R20
005b01 940e a76e 	CALL _free
                 ; 0009 02F5 
                 ; 0009 02F6             break;
005b03 c272      	RJMP _0x12005E
                 ; 0009 02F7         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
005b04 35eb      	CPI  R30,LOW(0x5B)
005b05 e0a0      	LDI  R26,HIGH(0x5B)
005b06 07fa      	CPC  R31,R26
005b07 f011      	BREQ PC+3
005b08 940c 5b64 	JMP _0x120090
                 ; 0009 02F8             if( len < (2 + sizeof(struct data_rep_st)) ){
005b0a 940e cbd8 	CALL SUBOPT_0x178
005b0c 971a      	SBIW R26,10
005b0d f43c      	BRGE _0x120091
                 ; 0009 02F9                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
005b0e eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
005b0f e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
005b10 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
005b11 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
005b12 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 02FA                 return;
005b14 c261      	RJMP _0x20E007F
                 ; 0009 02FB             }
                 ; 0009 02FC 
                 ; 0009 02FD             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
005b15 ede6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
005b16 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
005b17 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
005b18 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
005b19 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 02FE             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
005b1b 91a0 1426 	LDS  R26,_logDataWait
005b1d 30a0      	CPI  R26,LOW(0x0)
005b1e f021      	BREQ _0x120093
005b1f 91e0 1426 	LDS  R30,_logDataWait
005b21 17e0      	CP   R30,R16
005b22 f009      	BREQ _0x120094
                 _0x120093:
005b23 c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 02FF             {
                 ; 0009 0300                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
005b24 efec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
005b25 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
005b26 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
005b27 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
005b28 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0301 
                 ; 0009 0302                 res = LOG_openFile(&file,LOGFILE_DATA);
005b2a 940e c4e1 	CALL SUBOPT_0x5A
005b2c 940e c4f3 	CALL SUBOPT_0x5E
005b2e 019f      	MOVW R18,R30
                 ; 0009 0303                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
005b2f 2333      	TST  R19
005b30 f42a      	BRPL _0x120095
                +
005b31 e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005b32 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005b33 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005b34 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005b35 c01d      	RJMP _0x12011B
                 ; 0009 0304                 else
                 _0x120095:
                 ; 0009 0305                 {
                 ; 0009 0306                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
005b36 940e c4e1 	CALL SUBOPT_0x5A
005b38 940e c568 	CALL SUBOPT_0x6F
005b3a 940e cc2f 	CALL SUBOPT_0x186
                 ; 0009 0307                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005b3c f41a      	BRPL _0x120097
005b3d 940e cc37 	CALL SUBOPT_0x187
                 ; 0009 0308                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
005b3f c00c      	RJMP _0x120098
                 _0x120097:
                +
005b40 e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
005b41 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
005b42 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005b43 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005b44 940e c4fe 	CALL SUBOPT_0x5F
005b46 940e c568 	CALL SUBOPT_0x6F
005b48 940e c7fa 	CALL SUBOPT_0xD3
005b4a 940e c34d 	CALL SUBOPT_0x21
                 _0x120098:
                 ; 0009 0309 
                 ; 0009 030A                     res = LOG_closeFile(&file);
005b4c 940e cc3d 	CALL SUBOPT_0x188
                 ; 0009 030B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
005b4e f462      	BRPL _0x120099
                +
005b4f e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005b50 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005b51 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005b52 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
005b53 940e e400 	CALL __PUTPARD1
005b55 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
005b56 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
005b57 940e c3d6 	CALL SUBOPT_0x34
005b59 940e c2ea 	CALL SUBOPT_0x12
                 ; 0009 030C                 }
                 _0x120099:
                 ; 0009 030D 
                 ; 0009 030E                 logDataWait.frameID    = 0;
005b5b 940e c558 	CALL SUBOPT_0x6E
                 ; 0009 030F                 logDataWait.logID      = 0;
                 ; 0009 0310             }
                 ; 0009 0311             removeDataLogQueue(frameID);
                 _0x120092:
005b5d 2fa0      	MOV  R26,R16
005b5e 940e 8766 	CALL _removeDataLogQueue
                 ; 0009 0312             ETH_removeWaitQueue(frameID);
005b60 2fa0      	MOV  R26,R16
005b61 940e 6a78 	CALL _ETH_removeWaitQueue
                 ; 0009 0313             break;
005b63 c212      	RJMP _0x12005E
                 ; 0009 0314         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
005b64 36ea      	CPI  R30,LOW(0x6A)
005b65 e0a0      	LDI  R26,HIGH(0x6A)
005b66 07fa      	CPC  R31,R26
005b67 f011      	BREQ PC+3
005b68 940c 5bd0 	JMP _0x12009A
                 ; 0009 0315             if( len < (2 + sizeof(struct log_manic_st)) ){
005b6a 940e cbd8 	CALL SUBOPT_0x178
005b6c 9753      	SBIW R26,19
005b6d f44c      	BRGE _0x12009B
                 ; 0009 0316                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
005b6e e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
005b6f e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
005b70 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
005b71 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
005b72 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 0317                 ETH_sendNack(frameID,INVALID_LENGTH);
005b74 940e cbe8 	CALL SUBOPT_0x17A
                 ; 0009 0318                 return;
005b76 c1ff      	RJMP _0x20E007F
                 ; 0009 0319             }
                 ; 0009 031A 
                 ; 0009 031B             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
005b77 e1a1      	LDI  R26,LOW(17)
005b78 940e cc4a 	CALL SUBOPT_0x189
                 ; 0009 031C             if(payload == NULL){
005b7a f459      	BRNE _0x12009C
                 ; 0009 031D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
005b7b 940e cc4c 	CALL SUBOPT_0x18A
                +
005b7d e1e1     +LDI R30 , LOW ( 0x11 )
005b7e e0f0     +LDI R31 , HIGH ( 0x11 )
005b7f e060     +LDI R22 , BYTE3 ( 0x11 )
005b80 e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
005b81 940e cc53 	CALL SUBOPT_0x18B
                 ; 0009 031E                 ETH_sendNack(frameID,NOT_READY);
005b83 940e cbf2 	CALL SUBOPT_0x17C
                 ; 0009 031F                 return;
005b85 c1f0      	RJMP _0x20E007F
                 ; 0009 0320             }
                 ; 0009 0321 
                 ; 0009 0322             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
005b86 940e cc57 	CALL SUBOPT_0x18C
005b88 940e 624a 	CALL _logManipulationCmdParser
005b8a 019f      	MOVW R18,R30
                 ; 0009 0323             if(res < 0){
005b8b 2333      	TST  R19
005b8c f42a      	BRPL _0x12009D
                 ; 0009 0324                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005b8d 940e cc96 	CALL SUBOPT_0x199
                 ; 0009 0325                 free( (void *) payload );
005b8f 940e cc06 	CALL SUBOPT_0x17F
                 ; 0009 0326                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0327                 return;
005b91 c1e4      	RJMP _0x20E007F
                 ; 0009 0328             }
                 ; 0009 0329 
                 ; 0009 032A             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
005b92 e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
005b93 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
005b94 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
005b95 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
005b96 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 032B             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
005b98 940e cc59 	CALL SUBOPT_0x18D
                 ; 0009 032C             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
005b9a ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
005b9b e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
005b9c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
005b9d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
005b9e 940e cc9c 	CALL SUBOPT_0x19A
                 ; 0009 032D             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
005ba0 eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
005ba1 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
005ba2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
005ba3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
005ba4 940e e400 	CALL __PUTPARD1
005ba6 01fa      	MOVW R30,R20
                +
005ba7 85a5     +LDD R26 , Z + 13
005ba8 85b6     +LDD R27 , Z + 13 + 1
005ba9 8587     +LDD R24 , Z + 13 + 2
005baa 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005bab 940e cca7 	CALL SUBOPT_0x19B
                 ; 0009 032E 
                 ; 0009 032F             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0330                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0331                                             ((struct log_manic_st *)payload)->tStop);
005bad 01fa      	MOVW R30,R20
005bae 85a0      	LDD  R26,Z+8
005baf 93aa      	ST   -Y,R26
005bb0 940e ccab 	CALL SUBOPT_0x19C
005bb2 940e e405 	CALL __PUTPARD2
005bb4 01fa      	MOVW R30,R20
                +
005bb5 85a5     +LDD R26 , Z + 13
005bb6 85b6     +LDD R27 , Z + 13 + 1
005bb7 8587     +LDD R24 , Z + 13 + 2
005bb8 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005bb9 940e 697c 	CALL _setLogManipulateSchema
005bbb 019f      	MOVW R18,R30
                 ; 0009 0332             if(res < 0){
005bbc 2333      	TST  R19
005bbd f452      	BRPL _0x12009E
                 ; 0009 0333                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
005bbe efea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
005bbf e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
005bc0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
005bc1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
005bc2 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0334                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
005bc4 940e cc2a 	CALL SUBOPT_0x185
005bc6 e0a1      	LDI  R26,LOW(1)
005bc7 daac      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0335             }
                 ; 0009 0336 
                 ; 0009 0337             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
005bc8 940e cc2a 	CALL SUBOPT_0x185
005bca e0a0      	LDI  R26,LOW(0)
005bcb daa8      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0338 
                 ; 0009 0339             free( (void *) payload );
005bcc 01da      	MOVW R26,R20
005bcd 940e a76e 	CALL _free
                 ; 0009 033A 
                 ; 0009 033B             break;
005bcf c1a6      	RJMP _0x12005E
                 ; 0009 033C         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
005bd0 36eb      	CPI  R30,LOW(0x6B)
005bd1 e0a0      	LDI  R26,HIGH(0x6B)
005bd2 07fa      	CPC  R31,R26
005bd3 f5b1      	BRNE _0x12009F
                 ; 0009 033D             if( len < (2 + sizeof(struct log_mania_st)) ){
005bd4 940e cbd8 	CALL SUBOPT_0x178
005bd6 971c      	SBIW R26,12
005bd7 f43c      	BRGE _0x1200A0
                 ; 0009 033E                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
005bd8 e3e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
005bd9 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
005bda e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
005bdb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
005bdc 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 033F                 return;
005bde c197      	RJMP _0x20E007F
                 ; 0009 0340             }
                 ; 0009 0341 
                 ; 0009 0342             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
005bdf e0aa      	LDI  R26,LOW(10)
005be0 940e cc4a 	CALL SUBOPT_0x189
                 ; 0009 0343             if(payload == NULL){
005be2 f429      	BRNE _0x1200A1
                 ; 0009 0344                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
005be3 940e cc4c 	CALL SUBOPT_0x18A
005be5 940e ccb0 	CALL SUBOPT_0x19D
                 ; 0009 0345                 return;
005be7 c18e      	RJMP _0x20E007F
                 ; 0009 0346             }
                 ; 0009 0347 
                 ; 0009 0348             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
005be8 940e ccb5 	CALL SUBOPT_0x19E
005bea 940e 62d2 	CALL _logManipulationAckParser
005bec 019f      	MOVW R18,R30
                 ; 0009 0349             if(res < 0){
005bed 2333      	TST  R19
005bee f432      	BRPL _0x1200A2
                 ; 0009 034A                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005bef 940e cc96 	CALL SUBOPT_0x199
                 ; 0009 034B                 free( (void *) payload );
005bf1 01da      	MOVW R26,R20
005bf2 940e a76e 	CALL _free
                 ; 0009 034C                 return;
005bf4 c181      	RJMP _0x20E007F
                 ; 0009 034D             }
                 ; 0009 034E 
                 ; 0009 034F             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
005bf5 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
005bf6 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
005bf7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
005bf8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
005bf9 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 0350             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
005bfb 940e cc59 	CALL SUBOPT_0x18D
                 ; 0009 0351             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
005bfd e9ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
005bfe e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
005bff e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
005c00 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
005c01 940e cc5e 	CALL SUBOPT_0x18E
                 ; 0009 0352 
                 ; 0009 0353             free( (void *) payload );
005c03 01da      	MOVW R26,R20
005c04 940e a76e 	CALL _free
                 ; 0009 0354             ETH_removeWaitQueue(frameID);
005c06 2fa0      	MOV  R26,R16
005c07 940e 6a78 	CALL _ETH_removeWaitQueue
                 ; 0009 0355             break;
005c09 c16c      	RJMP _0x12005E
                 ; 0009 0356         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
005c0a 37ea      	CPI  R30,LOW(0x7A)
005c0b e0a0      	LDI  R26,HIGH(0x7A)
005c0c 07fa      	CPC  R31,R26
005c0d f011      	BREQ PC+3
005c0e 940c 5c98 	JMP _0x1200A3
                 ; 0009 0357             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
005c10 940e cbd8 	CALL SUBOPT_0x178
005c12 971c      	SBIW R26,12
005c13 f44c      	BRGE _0x1200A4
                 ; 0009 0358                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
005c14 ebe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005c15 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005c16 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
005c17 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
005c18 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 0359                 ETH_sendNack(frameID,INVALID_LENGTH);
005c1a 940e cbe8 	CALL SUBOPT_0x17A
                 ; 0009 035A                 return;
005c1c c159      	RJMP _0x20E007F
                 ; 0009 035B             }
                 ; 0009 035C 
                 ; 0009 035D             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005c1d e0ad      	LDI  R26,LOW(13)
005c1e 940e cc4a 	CALL SUBOPT_0x189
                 ; 0009 035E             if(payload == NULL){
005c20 f439      	BRNE _0x1200A5
                 ; 0009 035F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
005c21 940e cc4c 	CALL SUBOPT_0x18A
005c23 940e ccbb 	CALL SUBOPT_0x19F
                 ; 0009 0360                 ETH_sendNack(frameID,NOT_READY);
005c25 940e cbf2 	CALL SUBOPT_0x17C
                 ; 0009 0361                 return;
005c27 c14e      	RJMP _0x20E007F
                 ; 0009 0362             }
                 ; 0009 0363 
                 ; 0009 0364             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
005c28 940e cc57 	CALL SUBOPT_0x18C
005c2a 940e 62e3 	CALL _networkMaintenanceParser
005c2c 019f      	MOVW R18,R30
                 ; 0009 0365             if(res < 0){
005c2d 2333      	TST  R19
005c2e f44a      	BRPL _0x1200A6
                 ; 0009 0366                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
005c2f efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
005c30 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
005c31 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
005c32 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
005c33 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0367                 free( (void *) payload );
005c35 940e cc06 	CALL SUBOPT_0x17F
                 ; 0009 0368                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0369                 return;
005c37 c13e      	RJMP _0x20E007F
                 ; 0009 036A             }
                 ; 0009 036B 
                 ; 0009 036C             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
005c38 e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
005c39 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
005c3a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
005c3b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
005c3c 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 036D             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005c3e 940e ccc0 	CALL SUBOPT_0x1A0
                 ; 0009 036E             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
005c40 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
005c41 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
005c42 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
005c43 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
005c44 940e cc18 	CALL SUBOPT_0x182
005c46 940e cc53 	CALL SUBOPT_0x18B
                 ; 0009 036F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005c48 01fa      	MOVW R30,R20
005c49 940e ccc5 	CALL SUBOPT_0x1A1
005c4b f4a8      	BRSH _0x1200A7
                 ; 0009 0370                 printDebug("data ---        \r\n");
                +
005c4c e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
005c4d e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005c4e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
005c4f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
005c50 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0371                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
005c52 01fa      	MOVW R30,R20
005c53 85a3      	LDD  R26,Z+11
005c54 85b4      	LDD  R27,Z+12
005c55 93ba      	ST   -Y,R27
005c56 93aa      	ST   -Y,R26
005c57 85a1      	LDD  R26,Z+9
005c58 85b2      	LDD  R27,Z+10
005c59 940e 9f7c 	CALL _print_payload
                 ; 0009 0372                 printDebug("--------\r\n");
                +
005c5b eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
005c5c e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
005c5d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
005c5e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
005c5f 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0373             }
                 ; 0009 0374 
                 ; 0009 0375             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
005c61 940e cc64 	CALL SUBOPT_0x18F
                 ; 0009 0376                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
005c63 f529      	BRNE _0x1200AE
005c64 01fa      	MOVW R30,R20
005c65 85a3      	LDD  R26,Z+11
005c66 85b4      	LDD  R27,Z+12
005c67 940e 6995 	CALL _setTimeSyncSchema
005c69 019f      	MOVW R18,R30
                 ; 0009 0377                                         if(res < 0){
005c6a 2333      	TST  R19
005c6b f47a      	BRPL _0x1200AC
                 ; 0009 0378                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
005c6c eaeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
005c6d e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
005c6e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
005c6f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
005c70 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0379                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005c72 940e ccca 	CALL SUBOPT_0x1A2
                 ; 0009 037A                                             free_networkMaintenance((struct netw_man_st *)payload);
005c74 01da      	MOVW R26,R20
005c75 940e 63b6 	CALL _free_networkMaintenance
                 ; 0009 037B                                             free( (void *) payload );
005c77 01da      	MOVW R26,R20
005c78 940e a76e 	CALL _free
                 ; 0009 037C                                             return;
005c7a c0fb      	RJMP _0x20E007F
                 ; 0009 037D                                         }
                 ; 0009 037E 
                 ; 0009 037F                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
005c7b 940e cc2a 	CALL SUBOPT_0x185
005c7d e0a0      	LDI  R26,LOW(0)
005c7e da11      	RCALL _ETH_sendNetworkMaintenanceAck
005c7f 019f      	MOVW R18,R30
                 ; 0009 0380 
                 ; 0009 0381                                         if(res < 0){
005c80 2333      	TST  R19
005c81 f432      	BRPL _0x1200AD
                 ; 0009 0382                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
005c82 edec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
005c83 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
005c84 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
005c85 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
005c86 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0383                                         }
                 ; 0009 0384 
                 ; 0009 0385                                         break;
                 _0x1200AD:
005c88 c004      	RJMP _0x1200AA
                 ; 0009 0386                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0387                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 0388                                                         ((struct netw_man_st *)payload)->cmd );
005c89 940e cc91 	CALL SUBOPT_0x198
                 ; 0009 0389                                         ETH_sendNack(frameID,INVALID_PARAMETER);
005c8b 940e ccca 	CALL SUBOPT_0x1A2
                 ; 0009 038A                                         break;
                 ; 0009 038B             }
                 _0x1200AA:
                 ; 0009 038C 
                 ; 0009 038D             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005c8d 01fa      	MOVW R30,R20
005c8e 940e ccc5 	CALL SUBOPT_0x1A1
005c90 f418      	BRSH _0x1200AF
                 ; 0009 038E                 free_networkMaintenance((struct netw_man_st *)payload);
005c91 01da      	MOVW R26,R20
005c92 940e 63b6 	CALL _free_networkMaintenance
                 ; 0009 038F             }
                 ; 0009 0390 
                 ; 0009 0391             free( (void *) payload );
                 _0x1200AF:
005c94 01da      	MOVW R26,R20
005c95 940e a76e 	CALL _free
                 ; 0009 0392 
                 ; 0009 0393             break;
005c97 c0de      	RJMP _0x12005E
                 ; 0009 0394         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
005c98 38ea      	CPI  R30,LOW(0x8A)
005c99 e0a0      	LDI  R26,HIGH(0x8A)
005c9a 07fa      	CPC  R31,R26
005c9b f011      	BREQ PC+3
005c9c 940c 5d01 	JMP _0x1200B0
                 ; 0009 0395             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
005c9e 940e cbd8 	CALL SUBOPT_0x178
005ca0 971f      	SBIW R26,15
005ca1 f44c      	BRGE _0x1200B1
                 ; 0009 0396                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
005ca2 e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
005ca3 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
005ca4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
005ca5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
005ca6 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 0397                 ETH_sendNack(frameID,INVALID_LENGTH);
005ca8 940e cbe8 	CALL SUBOPT_0x17A
                 ; 0009 0398                 return;
005caa c0cb      	RJMP _0x20E007F
                 ; 0009 0399             }
                 ; 0009 039A 
                 ; 0009 039B             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
005cab e0ad      	LDI  R26,LOW(13)
005cac 940e cc4a 	CALL SUBOPT_0x189
                 ; 0009 039C             if(payload == NULL){
005cae f439      	BRNE _0x1200B2
                 ; 0009 039D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
005caf 940e cc4c 	CALL SUBOPT_0x18A
005cb1 940e ccbb 	CALL SUBOPT_0x19F
                 ; 0009 039E                 ETH_sendNack(frameID,NOT_READY);
005cb3 940e cbf2 	CALL SUBOPT_0x17C
                 ; 0009 039F                 return;
005cb5 c0c0      	RJMP _0x20E007F
                 ; 0009 03A0             }
                 ; 0009 03A1 
                 ; 0009 03A2             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
005cb6 940e ccb5 	CALL SUBOPT_0x19E
005cb8 940e 633c 	CALL _remoteDeviceControlParser
005cba 019f      	MOVW R18,R30
                 ; 0009 03A3             if(res < 0){
005cbb 2333      	TST  R19
005cbc f44a      	BRPL _0x1200B3
                 ; 0009 03A4                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
005cbd e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
005cbe e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
005cbf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
005cc0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
005cc1 940e c274 	CALL SUBOPT_0x3
                 ; 0009 03A5                 free( (void *) payload );
005cc3 940e cc06 	CALL SUBOPT_0x17F
                 ; 0009 03A6                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A7                 return;
005cc5 c0b0      	RJMP _0x20E007F
                 ; 0009 03A8             }
                 ; 0009 03A9 
                 ; 0009 03AA             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
005cc6 eaea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
005cc7 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
005cc8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
005cc9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
005cca 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 03AB             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
005ccc 940e ccc0 	CALL SUBOPT_0x1A0
                 ; 0009 03AC             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
005cce ede9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
005ccf e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
005cd0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
005cd1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
005cd2 940e cc9c 	CALL SUBOPT_0x19A
                 ; 0009 03AD 
                 ; 0009 03AE             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
005cd4 940e cc64 	CALL SUBOPT_0x18F
                 ; 0009 03AF                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
005cd6 f511      	BRNE _0x1200BA
005cd7 01fa      	MOVW R30,R20
005cd8 940e ccab 	CALL SUBOPT_0x19C
005cda 940e 69c7 	CALL _setMuteAlarm
005cdc 019f      	MOVW R18,R30
                 ; 0009 03B0                                             if(res < 0){
005cdd 2333      	TST  R19
005cde f462      	BRPL _0x1200B8
                 ; 0009 03B1                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
005cdf efe1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
005ce0 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
005ce1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
005ce2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
005ce3 940e cc9c 	CALL SUBOPT_0x19A
                 ; 0009 03B2                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005ce5 940e ccca 	CALL SUBOPT_0x1A2
                 ; 0009 03B3                                                 free( (void *) payload );
005ce7 01da      	MOVW R26,R20
005ce8 940e a76e 	CALL _free
                 ; 0009 03B4                                                 return;
005cea c08b      	RJMP _0x20E007F
                 ; 0009 03B5                                             }
                 ; 0009 03B6 
                 ; 0009 03B7                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
005ceb 940e cc2a 	CALL SUBOPT_0x185
005ced e0a0      	LDI  R26,LOW(0)
005cee d9bd      	RCALL _ETH_remoteDeviceControlAck
005cef 019f      	MOVW R18,R30
                 ; 0009 03B8 
                 ; 0009 03B9                                             if(res < 0){
005cf0 2333      	TST  R19
005cf1 f432      	BRPL _0x1200B9
                 ; 0009 03BA                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
005cf2 e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
005cf3 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
005cf4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
005cf5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
005cf6 940e c274 	CALL SUBOPT_0x3
                 ; 0009 03BB                                             }
                 ; 0009 03BC                                             break;
                 _0x1200B9:
005cf8 c004      	RJMP _0x1200B6
                 ; 0009 03BD                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03BE                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03BF                                                             ((struct netw_man_st *)payload)->cmd );
005cf9 940e cc91 	CALL SUBOPT_0x198
                 ; 0009 03C0                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005cfb 940e ccca 	CALL SUBOPT_0x1A2
                 ; 0009 03C1                                             break;
                 ; 0009 03C2             }
                 _0x1200B6:
                 ; 0009 03C3 
                 ; 0009 03C4             free( (void *) payload );
005cfd 01da      	MOVW R26,R20
005cfe 940e a76e 	CALL _free
                 ; 0009 03C5             break;
005d00 c075      	RJMP _0x12005E
                 ; 0009 03C6         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
005d01 39eb      	CPI  R30,LOW(0x9B)
005d02 e0a0      	LDI  R26,HIGH(0x9B)
005d03 07fa      	CPC  R31,R26
005d04 f011      	BREQ PC+3
005d05 940c 5d62 	JMP _0x1200BB
                 ; 0009 03C7             if( len < (2 + sizeof(struct clr_lst_st)) ){
005d07 940e cbd8 	CALL SUBOPT_0x178
005d09 971c      	SBIW R26,12
005d0a f43c      	BRGE _0x1200BC
                 ; 0009 03C8                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
005d0b e7eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
005d0c e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
005d0d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
005d0e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
005d0f 940e cbdf 	CALL SUBOPT_0x179
                 ; 0009 03C9                 return;
005d11 c064      	RJMP _0x20E007F
                 ; 0009 03CA             }
                 ; 0009 03CB 
                 ; 0009 03CC             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005d12 e0aa      	LDI  R26,LOW(10)
005d13 940e cc4a 	CALL SUBOPT_0x189
                 ; 0009 03CD             if(payload == NULL){
005d15 f429      	BRNE _0x1200BD
                 ; 0009 03CE                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005d16 940e cc4c 	CALL SUBOPT_0x18A
005d18 940e ccb0 	CALL SUBOPT_0x19D
                 ; 0009 03CF                 return;
005d1a c05b      	RJMP _0x20E007F
                 ; 0009 03D0             }
                 ; 0009 03D1 
                 ; 0009 03D2             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
005d1b 940e ccb5 	CALL SUBOPT_0x19E
005d1d d667      	RCALL _clearListParser
005d1e 019f      	MOVW R18,R30
                 ; 0009 03D3             if(res < 0){
005d1f 2333      	TST  R19
005d20 f452      	BRPL _0x1200BE
                 ; 0009 03D4                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005d21 ebe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005d22 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005d23 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005d24 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005d25 940e c274 	CALL SUBOPT_0x3
                 ; 0009 03D5                 free( (void *) payload );
005d27 01da      	MOVW R26,R20
005d28 940e a76e 	CALL _free
                 ; 0009 03D6                 return;
005d2a c04b      	RJMP _0x20E007F
                 ; 0009 03D7             }
                 ; 0009 03D8 
                 ; 0009 03D9             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
005d2b eee3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
005d2c e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
005d2d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
005d2e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
005d2f 940e cc0d 	CALL SUBOPT_0x180
                 ; 0009 03DA             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005d31 940e ccc0 	CALL SUBOPT_0x1A0
                 ; 0009 03DB             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005d33 e0e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005d34 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005d35 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005d36 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005d37 940e cc5e 	CALL SUBOPT_0x18E
                 ; 0009 03DC 
                 ; 0009 03DD             switch(((struct clr_lst_st *)payload)->cmd){
005d39 01fa      	MOVW R30,R20
005d3a 940e ccce 	CALL SUBOPT_0x1A3
                 ; 0009 03DE                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
005d3c 30e1      	CPI  R30,LOW(0x1)
005d3d e0a0      	LDI  R26,HIGH(0x1)
005d3e 07fa      	CPC  R31,R26
005d3f f4c1      	BRNE _0x1200C5
005d40 01fa      	MOVW R30,R20
005d41 85e1      	LDD  R30,Z+9
005d42 30e0      	CPI  R30,0
005d43 f469      	BRNE _0x1200C3
                 ; 0009 03DF                                     {
                 ; 0009 03E0                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005d44 e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005d45 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005d46 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005d47 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005d48 940e c274 	CALL SUBOPT_0x3
                 ; 0009 03E1                                         duplicateListClear = 1;
005d4a e0e1      	LDI  R30,LOW(1)
005d4b 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E2                                         free( (void *) payload );
005d4d 01da      	MOVW R26,R20
005d4e 940e a76e 	CALL _free
                 ; 0009 03E3                                         return;
005d50 c025      	RJMP _0x20E007F
                 ; 0009 03E4                                     }
                 ; 0009 03E5                                     else
                 _0x1200C3:
                 ; 0009 03E6                                     {
                 ; 0009 03E7                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03E8                                                     ((struct clr_lst_st *)payload)->status);
                +
005d51 e6e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
005d52 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005d53 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005d54 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005d55 940e cc5e 	CALL SUBOPT_0x18E
                 ; 0009 03E9                                     }
                 ; 0009 03EA                                     break;
005d57 c006      	RJMP _0x1200C1
                 ; 0009 03EB                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EC                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03ED                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005d58 eae6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005d59 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005d5a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005d5b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005d5c 940e cc12 	CALL SUBOPT_0x181
                 ; 0009 03EE                                     break;
                 ; 0009 03EF             }
                 _0x1200C1:
                 ; 0009 03F0 
                 ; 0009 03F1             free( (void *) payload );
005d5e 01da      	MOVW R26,R20
005d5f 940e a76e 	CALL _free
                 ; 0009 03F2             break;
005d61 c014      	RJMP _0x12005E
                 ; 0009 03F3         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
005d62 3fea      	CPI  R30,LOW(0xFA)
005d63 e0a0      	LDI  R26,HIGH(0xFA)
005d64 07fa      	CPC  R31,R26
005d65 f439      	BRNE _0x1200C7
                 ; 0009 03F4             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
005d66 eee6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
005d67 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
005d68 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
005d69 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
005d6a 940e c274 	CALL SUBOPT_0x3
                 ; 0009 03F5             break;
005d6c c009      	RJMP _0x12005E
                 ; 0009 03F6         default:
                 _0x1200C7:
                 ; 0009 03F7             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
005d6d e2e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
005d6e e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
005d6f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
005d70 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
005d71 940e e400 	CALL __PUTPARD1
005d73 2fe1      	MOV  R30,R17
005d74 940e c388 	CALL SUBOPT_0x29
                 ; 0009 03F8             break;
                 ; 0009 03F9     }
                 _0x12005E:
                 ; 0009 03FA 
                 ; 0009 03FB     return;
                 _0x20E007F:
005d76 940e e47c 	CALL __LOADLOCR6
005d78 96e0      	ADIW R28,48
005d79 5fde      	SUBI R29,-2
005d7a 9508      	RET
                 ; 0009 03FC }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0404 {
                 _ETH_receive:
                 ; 0009 0405     unsigned char   *ptr;
                 ; 0009 0406     int             size=0;
                 ; 0009 0407 
                 ; 0009 0408     // -- for packet validation -- //
                 ; 0009 0409     int     offset=0;
                 ; 0009 040A     int     len = 0x0000;
                 ; 0009 040B     int     total=0;
                 ; 0009 040C 
                 ; 0009 040D     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 040E     do{
005d7b 940e ccd1 	CALL SUBOPT_0x1A4
005d7d 940e e475 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
005d7f 940e c260 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 040F         ptr = (char *) malloc (RX_BUFFER_SIZE0);
005d81 efa4      	LDI  R26,LOW(500)
005d82 e0b1      	LDI  R27,HIGH(500)
005d83 940e a753 	CALL _malloc
005d85 018f      	MOVW R16,R30
                 ; 0009 0410         if(ptr == NULL){
005d86 2e00      	MOV  R0,R16
005d87 2a01      	OR   R0,R17
005d88 f431      	BRNE _0x1200CB
                 ; 0009 0411             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
005d89 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
005d8a e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
005d8b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
005d8c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
005d8d 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0412         }
                 ; 0009 0413     }while(ptr == NULL);
                 _0x1200CB:
005d8f 2e00      	MOV  R0,R16
005d90 2a01      	OR   R0,R17
005d91 f379      	BREQ _0x1200C9
                 ; 0009 0414     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
005d92 931a      	ST   -Y,R17
005d93 930a      	ST   -Y,R16
005d94 efe3      	LDI  R30,LOW(499)
005d95 e0f1      	LDI  R31,HIGH(499)
005d96 93fa      	ST   -Y,R31
005d97 93ea      	ST   -Y,R30
005d98 e0aa      	LDI  R26,LOW(10)
005d99 e0b0      	LDI  R27,0
005d9a 940e 40c4 	CALL _read_uart0
005d9c 019f      	MOVW R18,R30
                 ; 0009 0415 
                 ; 0009 0416     if(size <= 0){
005d9d 2400      	CLR  R0
005d9e 1602      	CP   R0,R18
005d9f 0603      	CPC  R0,R19
005da0 f00c      	BRLT _0x1200CC
                 ; 0009 0417         free( ptr );
005da1 c066      	RJMP _0x20E007E
                 ; 0009 0418         return;
                 ; 0009 0419     }
                 ; 0009 041A 
                 ; 0009 041B //    printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 ; 0009 041C //    print_payload(ptr,size);
                 ; 0009 041D 
                 ; 0009 041E     do{
                 _0x1200CC:
                 _0x1200CE:
                 ; 0009 041F         //printDebug("<ETH_receive> ptr");
                 ; 0009 0420         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
005da2 01fa      	MOVW R30,R20
005da3 940e ccd8 	CALL SUBOPT_0x1A5
                +
005da5 e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
005da6 e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
005da7 940e a806 	CALL _strcspn
                +
005da9 0f4e     +ADD R20 , R30
005daa 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0421         if(offset == size){
                +
005dab 1724     +CP R18 , R20
005dac 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
005dad f409      	BRNE _0x1200D1
                 ; 0009 0422 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0423             break;
005dae c059      	RJMP _0x1200CF
                 ; 0009 0424         }
                 ; 0009 0425         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
005daf 01fa      	MOVW R30,R20
005db0 9631      	ADIW R30,1
005db1 0fe0      	ADD  R30,R16
005db2 1ff1      	ADC  R31,R17
005db3 81e0      	LD   R30,Z
005db4 e0f0      	LDI  R31,0
005db5 2ffe      	MOV  R31,R30
005db6 e0e0      	LDI  R30,0
005db7 87e8      	STD  Y+8,R30
005db8 87f9      	STD  Y+8+1,R31
                 ; 0009 0426         len |= ptr[offset+2];                                                   // check packet length (LSB)
005db9 01fa      	MOVW R30,R20
005dba 940e c9f8 	CALL SUBOPT_0x12B
005dbc 85a8      	LDD  R26,Y+8
005dbd 85b9      	LDD  R27,Y+8+1
005dbe e0f0      	LDI  R31,0
005dbf 2bea      	OR   R30,R26
005dc0 2bfb      	OR   R31,R27
005dc1 940e cc79 	CALL SUBOPT_0x193
                 ; 0009 0427 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 0428 
                 ; 0009 0429         total += len;                                                           // update total analyse
005dc3 940e ccdd 	CALL SUBOPT_0x1A6
005dc5 83ee      	STD  Y+6,R30
005dc6 83ff      	STD  Y+6+1,R31
                 ; 0009 042A         if (total > size){                                                      //check length validation
005dc7 81ae      	LDD  R26,Y+6
005dc8 81bf      	LDD  R27,Y+6+1
005dc9 172a      	CP   R18,R26
005dca 073b      	CPC  R19,R27
005dcb f45c      	BRGE _0x1200D2
                 ; 0009 042B             offset++;
                +
005dcc 5f4f     +SUBI R20 , LOW ( - 1 )
005dcd 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042C             total = offset;                                                     // roll back total analyse
                +
005dce 834e     +STD Y + 6 , R20
005dcf 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042D             printDebug("\r\ninvalid length!!\r\n");
                +
005dd0 e7ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4852 ) )
005dd1 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4852 ) )
005dd2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4852 ) )
005dd3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4852 ) )
                 	__POINTD1FN _0x120000,4852
005dd4 940e c274 	CALL SUBOPT_0x3
                 ; 0009 042E             continue;
005dd6 c02b      	RJMP _0x1200CD
                 ; 0009 042F         }
                 ; 0009 0430 
                 ; 0009 0431 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0432 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0433         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
005dd7 01fa      	MOVW R30,R20
005dd8 9633      	ADIW R30,3
005dd9 940e ccd8 	CALL SUBOPT_0x1A5
005ddb 85aa      	LDD  R26,Y+10
005ddc 85bb      	LDD  R27,Y+10+1
005ddd d0c9      	RCALL _ETH_checksum
005dde 010f      	MOVW R0,R30
005ddf 01fa      	MOVW R30,R20
005de0 9633      	ADIW R30,3
005de1 85a8      	LDD  R26,Y+8
005de2 85b9      	LDD  R27,Y+8+1
005de3 0fea      	ADD  R30,R26
005de4 1ffb      	ADC  R31,R27
005de5 0fe0      	ADD  R30,R16
005de6 1ff1      	ADC  R31,R17
005de7 81e0      	LD   R30,Z
005de8 940e cce2 	CALL SUBOPT_0x1A7
005dea f059      	BREQ _0x1200D3
                 ; 0009 0434             printDebug("<ETH_receive> checksum error\r\n");
                +
005deb e8ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 4873 ) )
005dec e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4873 ) )
005ded e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4873 ) )
005dee e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4873 ) )
                 	__POINTD1FN _0x120000,4873
005def 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0435             offset++;
                +
005df1 5f4f     +SUBI R20 , LOW ( - 1 )
005df2 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0436             total = offset;                                                     // roll back total analyse
                +
005df3 834e     +STD Y + 6 , R20
005df4 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0437         }
                 ; 0009 0438         else{                                                                   // got a valid packet
005df5 c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 0439 //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043A //            print_payload(&ptr[offset+3],len);
                 ; 0009 043B //            printDebug("\r\n******************\r\n");
                 ; 0009 043C 
                 ; 0009 043D             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
005df6 01fa      	MOVW R30,R20
005df7 9633      	ADIW R30,3
005df8 940e ccd8 	CALL SUBOPT_0x1A5
005dfa 85aa      	LDD  R26,Y+10
005dfb 85bb      	LDD  R27,Y+10+1
005dfc da7b      	RCALL _ETH_processPacket
                 ; 0009 043E             offset += 3+len;
005dfd 85e8      	LDD  R30,Y+8
005dfe 85f9      	LDD  R31,Y+8+1
005dff 9633      	ADIW R30,3
                +
005e00 0f4e     +ADD R20 , R30
005e01 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 043F         }
                 _0x1200D4:
                 ; 0009 0440 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
005e02 81ae      	LDD  R26,Y+6
005e03 81bf      	LDD  R27,Y+6+1
005e04 17a2      	CP   R26,R18
005e05 07b3      	CPC  R27,R19
005e06 f40c      	BRGE _0x1200CF
005e07 cf9a      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0441 
                 ; 0009 0442 
                 ; 0009 0443 
                 ; 0009 0444     free( ptr );
                 _0x20E007E:
005e08 01d8      	MOVW R26,R16
005e09 940e a76e 	CALL _free
                 ; 0009 0445 }
005e0b 940e e47c 	CALL __LOADLOCR6
005e0d 962a      	ADIW R28,10
005e0e 9508      	RET
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 0448 {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 0449     int     res;
                 ; 0009 044A     char    *sendPacket;
                 ; 0009 044B     int     packetLen   = 0;
                 ; 0009 044C 
                 ; 0009 044D     frameLen++;     // -- + frameID (1 Byte) -- //
005e0f 940e cce7 	CALL SUBOPT_0x1A8
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005e11 e040     +LDI R20 , LOW ( 0 )
005e12 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
005e13 85e9      	LDD  R30,Y+9
005e14 85fa      	LDD  R31,Y+9+1
005e15 9631      	ADIW R30,1
005e16 87e9      	STD  Y+9,R30
005e17 87fa      	STD  Y+9+1,R31
                 ; 0009 044E 
                 ; 0009 044F     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
005e18 9634      	ADIW R30,4
005e19 01af      	MOVW R20,R30
                 ; 0009 0450 
                 ; 0009 0451     if(packetLen > MAX_MTU){
                +
005e1a 3f45     +CPI R20 , LOW ( 501 )
005e1b e0e1     +LDI R30 , HIGH ( 501 )
005e1c 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005e1d f04c      	BRLT _0x1200D5
                 ; 0009 0452         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005e1e eaee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4904 ) )
005e1f e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4904 ) )
005e20 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4904 ) )
005e21 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4904 ) )
                 	__POINTD1FN _0x120000,4904
005e22 940e c46a 	CALL SUBOPT_0x49
                 ; 0009 0453         return -1;
005e24 efef      	LDI  R30,LOW(65535)
005e25 efff      	LDI  R31,HIGH(65535)
005e26 c07c      	RJMP _0x20E007D
                 ; 0009 0454     }
                 ; 0009 0455 
                 ; 0009 0456     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
005e27 01da      	MOVW R26,R20
005e28 940e a753 	CALL _malloc
005e2a 019f      	MOVW R18,R30
                 ; 0009 0457     if(sendPacket == NULL){
005e2b 2e02      	MOV  R0,R18
005e2c 2a03      	OR   R0,R19
005e2d f449      	BRNE _0x1200D6
                 ; 0009 0458         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005e2e eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4956 ) )
005e2f e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4956 ) )
005e30 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4956 ) )
005e31 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4956 ) )
                 	__POINTD1FN _0x120000,4956
005e32 940e c46a 	CALL SUBOPT_0x49
                 ; 0009 0459         return -1;
005e34 efef      	LDI  R30,LOW(65535)
005e35 efff      	LDI  R31,HIGH(65535)
005e36 c06c      	RJMP _0x20E007D
                 ; 0009 045A     }
                 ; 0009 045B 
                 ; 0009 045C     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
005e37 933a      	ST   -Y,R19
005e38 932a      	ST   -Y,R18
005e39 e0e0      	LDI  R30,LOW(0)
005e3a 93ea      	ST   -Y,R30
005e3b 01da      	MOVW R26,R20
005e3c 940e a7d5 	CALL _memset
                 ; 0009 045D 
                 ; 0009 045E     sendPacket[0] = 0x7E;
005e3e 01d9      	MOVW R26,R18
005e3f e7ee      	LDI  R30,LOW(126)
005e40 93ec      	ST   X,R30
                 ; 0009 045F     sendPacket[1] = (frameLen >> 8) & 0xFF;
005e41 85e9      	LDD  R30,Y+9
005e42 85fa      	LDD  R31,Y+9+1
005e43 940e e2c8 	CALL __ASRW8
                +
005e45 01d9     +MOVW R26 , R18
005e46 9611     +ADIW R26 , 1
005e47 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0460     sendPacket[2] = frameLen & 0xFF;
005e48 85e9      	LDD  R30,Y+9
                +
005e49 01d9     +MOVW R26 , R18
005e4a 9612     +ADIW R26 , 2
005e4b 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0461 
                 ; 0009 0462     if(frameID == 0x00){
005e4c 85e8      	LDD  R30,Y+8
005e4d 30e0      	CPI  R30,0
005e4e f419      	BRNE _0x1200D7
                 ; 0009 0463         frameID         = ETH_generateId();
005e4f 940e 6aef 	CALL _ETH_generateId
005e51 87e8      	STD  Y+8,R30
                 ; 0009 0464         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0465     }
                 ; 0009 0466 
                 ; 0009 0467     sendPacket[3] = frameID;
                 _0x1200D7:
005e52 85e8      	LDD  R30,Y+8
                +
005e53 01d9     +MOVW R26 , R18
005e54 9613     +ADIW R26 , 3
005e55 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 0468 
                 ; 0009 0469     memcpy(&sendPacket[4],frameData,frameLen);
005e56 01f9      	MOVW R30,R18
005e57 9634      	ADIW R30,4
005e58 93fa      	ST   -Y,R31
005e59 93ea      	ST   -Y,R30
005e5a 85ed      	LDD  R30,Y+13
005e5b 85fe      	LDD  R31,Y+13+1
005e5c 93fa      	ST   -Y,R31
005e5d 93ea      	ST   -Y,R30
005e5e 85ad      	LDD  R26,Y+13
005e5f 85be      	LDD  R27,Y+13+1
005e60 940e a790 	CALL _memcpy
                 ; 0009 046A     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
005e62 01fa      	MOVW R30,R20
005e63 9731      	SBIW R30,1
005e64 0fe2      	ADD  R30,R18
005e65 1ff3      	ADC  R31,R19
005e66 93ff      	PUSH R31
005e67 93ef      	PUSH R30
005e68 01f9      	MOVW R30,R18
005e69 9633      	ADIW R30,3
005e6a 93fa      	ST   -Y,R31
005e6b 93ea      	ST   -Y,R30
005e6c 85ab      	LDD  R26,Y+11
005e6d 85bc      	LDD  R27,Y+11+1
005e6e d038      	RCALL _ETH_checksum
005e6f 91af      	POP  R26
005e70 91bf      	POP  R27
005e71 93ec      	ST   X,R30
                 ; 0009 046B 
                 ; 0009 046C     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046D 
                 ; 0009 046E     if((timeout > 0) && (frameID != 0xFF)){
005e72 81ae      	LDD  R26,Y+6
005e73 81bf      	LDD  R27,Y+6+1
005e74 940e e45d 	CALL __CPW02
005e76 f41c      	BRGE _0x1200D9
005e77 85a8      	LDD  R26,Y+8
005e78 3faf      	CPI  R26,LOW(0xFF)
005e79 f409      	BRNE _0x1200DA
                 _0x1200D9:
005e7a c01a      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 046F         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
005e7b 85e8      	LDD  R30,Y+8
005e7c 93ea      	ST   -Y,R30
005e7d 933a      	ST   -Y,R19
005e7e 932a      	ST   -Y,R18
005e7f 935a      	ST   -Y,R21
005e80 934a      	ST   -Y,R20
005e81 85ab      	LDD  R26,Y+11
005e82 85bc      	LDD  R27,Y+11+1
005e83 940e 6a0f 	CALL _ETH_addWaitQueue
005e85 018f      	MOVW R16,R30
                 ; 0009 0470         if(res < 0){
005e86 2311      	TST  R17
005e87 f46a      	BRPL _0x1200DB
                 ; 0009 0471             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
005e88 e1e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5007 ) )
005e89 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5007 ) )
005e8a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5007 ) )
005e8b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5007 ) )
                 	__POINTD1FN _0x120000,5007
005e8c 940e e400 	CALL __PUTPARD1
005e8e 85ec      	LDD  R30,Y+12
005e8f 940e c388 	CALL SUBOPT_0x29
                 ; 0009 0472             free(sendPacket);
005e91 01d9      	MOVW R26,R18
005e92 940e c472 	CALL SUBOPT_0x4A
                 ; 0009 0473             return -1;
005e94 c00e      	RJMP _0x20E007D
                 ; 0009 0474         }
                 ; 0009 0475     }
                 _0x1200DB:
                 ; 0009 0476 
                 ; 0009 0477 
                 ; 0009 0478 //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 0479 //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047A //    }
                 ; 0009 047B 
                 ; 0009 047C //    printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 ; 0009 047D //    print_payload(sendPacket,packetLen);
                 ; 0009 047E     write_uart0(sendPacket,packetLen);
                 _0x1200D8:
005e95 933a      	ST   -Y,R19
005e96 932a      	ST   -Y,R18
005e97 01da      	MOVW R26,R20
005e98 940e 4115 	CALL _write_uart0
                 ; 0009 047F     free(sendPacket);
005e9a 01d9      	MOVW R26,R18
005e9b 940e a76e 	CALL _free
                 ; 0009 0480 
                 ; 0009 0481     //printDebug("-- Completed --\r\n");
                 ; 0009 0482     delay_ms(7);
005e9d 940e c2b7 	CALL SUBOPT_0xA
005e9f 940e e0a1 	CALL _delay_ms
                 ; 0009 0483 
                 ; 0009 0484     return 0;
005ea1 e0e0      	LDI  R30,LOW(0)
005ea2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E007D:
005ea3 940e e47c 	CALL __LOADLOCR6
005ea5 962d      	ADIW R28,13
005ea6 9508      	RET
                 ; 0009 0485 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 0488 {
                 _ETH_checksum:
                 ; 0009 0489     int i;
                 ; 0009 048A     char sum = 0;
                 ; 0009 048B 
                 ; 0009 048C     //printDebug("<checksum> \r\n");
                 ; 0009 048D     for (i=0;i<len;i++){
005ea7 940e c5d9 	CALL SUBOPT_0x7F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005ea9 e030      	LDI  R19,0
                +
005eaa e000     +LDI R16 , LOW ( 0 )
005eab e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005eac 81ec      	LDD  R30,Y+4
005ead 81fd      	LDD  R31,Y+4+1
005eae 170e      	CP   R16,R30
005eaf 071f      	CPC  R17,R31
005eb0 f43c      	BRGE _0x1200DE
                 ; 0009 048E         sum += buf[i];
005eb1 01f8      	MOVW R30,R16
005eb2 940e ccec 	CALL SUBOPT_0x1A9
005eb4 0f3e      	ADD  R19,R30
                 ; 0009 048F         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0490     }
                +
005eb5 5f0f     +SUBI R16 , LOW ( - 1 )
005eb6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005eb7 cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0491     return (0xff - (sum & 0xff));
005eb8 2fe3      	MOV  R30,R19
005eb9 940e c6a3 	CALL SUBOPT_0x9B
005ebb efaf      	LDI  R26,LOW(255)
005ebc e0b0      	LDI  R27,HIGH(255)
005ebd 940e e41d 	CALL __SWAPW12
005ebf 1bea      	SUB  R30,R26
005ec0 0bfb      	SBC  R31,R27
005ec1 940e e47e 	CALL __LOADLOCR4
005ec3 9628      	ADIW R28,8
005ec4 9508      	RET
                 ; 0009 0492 
                 ; 0009 0493 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049C {
                 _ETH_switchMode:
                 ; 0009 049D     if(mode == MODE_CONF){
005ec5 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005ec6 81e8      	LD   R30,Y
005ec7 30e0      	CPI  R30,0
005ec8 f451      	BRNE _0x1200DF
                 ; 0009 049E         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005ec9 e4e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5058 ) )
005eca e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5058 ) )
005ecb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5058 ) )
005ecc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5058 ) )
                 	__POINTD1FN _0x120000,5058
005ecd 940e c274 	CALL SUBOPT_0x3
                 ; 0009 049F         ETH_CONF;
005ecf 91e0 0102 	LDS  R30,258
005ed1 68e0      	ORI  R30,0x80
005ed2 c009      	RJMP _0x12011C
                 ; 0009 04A0     }
                 ; 0009 04A1     else{
                 _0x1200DF:
                 ; 0009 04A2         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005ed3 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 5099 ) )
005ed4 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5099 ) )
005ed5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5099 ) )
005ed6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5099 ) )
                 	__POINTD1FN _0x120000,5099
005ed7 940e c274 	CALL SUBOPT_0x3
                 ; 0009 04A3         ETH_NORM;
005ed9 91e0 0102 	LDS  R30,258
005edb 77ef      	ANDI R30,0x7F
                 _0x12011C:
005edc 93e0 0102 	STS  258,R30
                 ; 0009 04A4     }
                 ; 0009 04A5 
                 ; 0009 04A6     delay_ms(5);
005ede 940e c684 	CALL SUBOPT_0x97
                 ; 0009 04A7 
                 ; 0009 04A8     ETH_current_mode = mode;
005ee0 81e8      	LD   R30,Y
005ee1 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04A9 
                 ; 0009 04AA     delay_ms(5);
005ee3 940e c684 	CALL SUBOPT_0x97
                 ; 0009 04AB     ETH_OFF;
005ee5 98a4      	CBI  0x14,4
                 ; 0009 04AC     delay_ms(1500);
005ee6 edac      	LDI  R26,LOW(1500)
005ee7 e0b5      	LDI  R27,HIGH(1500)
005ee8 940e e0a1 	CALL _delay_ms
                 ; 0009 04AD     ETH_ON;
005eea 9aa4      	SBI  0x14,4
                 ; 0009 04AE     #asm("wdr")
005eeb 95a8      	wdr
                 ; 0009 04AF     delay_ms(2000);
005eec eda0      	LDI  R26,LOW(2000)
005eed e0b7      	LDI  R27,HIGH(2000)
005eee 940e e0a1 	CALL _delay_ms
                 ; 0009 04B0 
                 ; 0009 04B1     return ETH_MODE;
005ef0 91e0 0102 	LDS  R30,258
005ef2 78e0      	ANDI R30,LOW(0x80)
005ef3 9621      	ADIW R28,1
005ef4 9508      	RET
                 ; 0009 04B2 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B5 {
                 _ETH_getConfig:
                 ; 0009 04B6     TIMER   timeout;
                 ; 0009 04B7     char    getInfoCmd[] = ">R\r";
                 ; 0009 04B8     int     i=0;
                 ; 0009 04B9 
                 ; 0009 04BA     ETH_switchMode((unsigned char) MODE_CONF);
005ef5 93ba      	ST   -Y,R27
005ef6 93aa      	ST   -Y,R26
005ef7 9728      	SBIW R28,8
005ef8 e3ee      	LDI  R30,LOW(62)
005ef9 83e8      	ST   Y,R30
005efa e5e2      	LDI  R30,LOW(82)
005efb 83e9      	STD  Y+1,R30
005efc e0ed      	LDI  R30,LOW(13)
005efd 83ea      	STD  Y+2,R30
005efe e0e0      	LDI  R30,LOW(0)
005eff 83eb      	STD  Y+3,R30
005f00 940e caad 	CALL SUBOPT_0x14D
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
005f02 e0a0      	LDI  R26,LOW(0)
005f03 dfc1      	RCALL _ETH_switchMode
                 ; 0009 04BB     /*
                 ; 0009 04BC     if(mode != MODE_CONF){
                 ; 0009 04BD         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04BE         return -1;
                 ; 0009 04BF     }
                 ; 0009 04C0     */
                 ; 0009 04C1 
                 ; 0009 04C2     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005f04 e000     +LDI R16 , LOW ( 0 )
005f05 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E2:
                +
005f06 3405     +CPI R16 , LOW ( 325 )
005f07 e0e1     +LDI R30 , HIGH ( 325 )
005f08 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005f09 f42c      	BRGE _0x1200E3
                 ; 0009 04C3         configRd[i] = 0x00;
005f0a 940e ccf2 	CALL SUBOPT_0x1AA
                 ; 0009 04C4     }
                +
005f0c 5f0f     +SUBI R16 , LOW ( - 1 )
005f0d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f0e cff7      	RJMP _0x1200E2
                 _0x1200E3:
                 ; 0009 04C5     configLen       = 0;
005f0f 940e c5d3 	CALL SUBOPT_0x7E
                 ; 0009 04C6     config_start    = 0;
005f11 940e ccf5 	CALL SUBOPT_0x1AB
                 ; 0009 04C7     config_ready    = 0;
                 ; 0009 04C8     config_end      = 0;
                 ; 0009 04C9     config_response = 0;
                 ; 0009 04CA 
                 ; 0009 04CB     printDebug("<ETH_getConfig> Write to uart 0 :");
                +
005f13 e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5140 ) )
005f14 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5140 ) )
005f15 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5140 ) )
005f16 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5140 ) )
                 	__POINTD1FN _0x120000,5140
005f17 940e c274 	CALL SUBOPT_0x3
                 ; 0009 04CC     for(i=0;i<strlen(getInfoCmd);i++){
                +
005f19 e000     +LDI R16 , LOW ( 0 )
005f1a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E5:
005f1b 940e ccff 	CALL SUBOPT_0x1AC
005f1d f440      	BRSH _0x1200E6
                 ; 0009 04CD         putchar3(getInfoCmd[i]);
005f1e 940e c9df 	CALL SUBOPT_0x126
005f20 91ac      	LD   R26,X
005f21 940e 4187 	CALL _putchar3
                 ; 0009 04CE     }
                +
005f23 5f0f     +SUBI R16 , LOW ( - 1 )
005f24 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f25 cff5      	RJMP _0x1200E5
                 _0x1200E6:
                 ; 0009 04CF     printDebug("\r\n");
005f26 940e cd06 	CALL SUBOPT_0x1AD
                 ; 0009 04D0 
                 ; 0009 04D1     for(i=0;i<strlen(getInfoCmd);i++){
                +
005f28 e000     +LDI R16 , LOW ( 0 )
005f29 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E8:
005f2a 940e ccff 	CALL SUBOPT_0x1AC
005f2c f440      	BRSH _0x1200E9
                 ; 0009 04D2         putchar0(getInfoCmd[i]);
005f2d 940e c9df 	CALL SUBOPT_0x126
005f2f 91ac      	LD   R26,X
005f30 940e 40bb 	CALL _putchar0
                 ; 0009 04D3     }
                +
005f32 5f0f     +SUBI R16 , LOW ( - 1 )
005f33 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f34 cff5      	RJMP _0x1200E8
                 _0x1200E9:
                 ; 0009 04D4 
                 ; 0009 04D5     TIMER_setTimer(&timeout, 7);
005f35 940e c4bf 	CALL SUBOPT_0x56
005f37 940e cd0c 	CALL SUBOPT_0x1AE
                 ; 0009 04D6 
                 ; 0009 04D7     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200EA:
005f39 91e0 10f1 	LDS  R30,_config_ready
005f3b 30e0      	CPI  R30,0
005f3c f431      	BRNE _0x1200ED
005f3d 940e c4dc 	CALL SUBOPT_0x59
005f3f 940e 4201 	CALL _TIMER_checkTimerExceed
005f41 9730      	SBIW R30,0
005f42 f009      	BREQ _0x1200EE
                 _0x1200ED:
005f43 c004      	RJMP _0x1200EC
                 _0x1200EE:
                 ; 0009 04D8        delay_ms(50);
005f44 940e c5b0 	CALL SUBOPT_0x7A
                 ; 0009 04D9        #asm("wdr")
005f46 95a8      	wdr
                 ; 0009 04DA     }
005f47 cff1      	RJMP _0x1200EA
                 _0x1200EC:
                 ; 0009 04DB 
                 ; 0009 04DC     memcpy(ptr,&configRd[0],configLen);
005f48 940e cd12 	CALL SUBOPT_0x1AF
005f4a 940e cd17 	CALL SUBOPT_0x1B0
                 ; 0009 04DD 
                 ; 0009 04DE     *buflen    = configLen;
005f4c 91e0 10ee 	LDS  R30,_configLen
005f4e 91f0 10ef 	LDS  R31,_configLen+1
005f50 85aa      	LDD  R26,Y+10
005f51 85bb      	LDD  R27,Y+10+1
005f52 93ed      	ST   X+,R30
005f53 93fc      	ST   X,R31
                 ; 0009 04DF 
                 ; 0009 04E0     ETH_switchMode(MODE_NORM);
005f54 e8a0      	LDI  R26,LOW(128)
005f55 df6f      	RCALL _ETH_switchMode
                 ; 0009 04E1 
                 ; 0009 04E2     /*
                 ; 0009 04E3     if(mode != MODE_NORM){
                 ; 0009 04E4         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E5         return -1;
                 ; 0009 04E6     }
                 ; 0009 04E7     */
                 ; 0009 04E8 
                 ; 0009 04E9     if(config_response == 'S'){
005f56 91a0 10f3 	LDS  R26,_config_response
005f58 35a3      	CPI  R26,LOW(0x53)
005f59 f419      	BRNE _0x1200EF
                 ; 0009 04EA         return 0;
005f5a e0e0      	LDI  R30,LOW(0)
005f5b e0f0      	LDI  R31,HIGH(0)
005f5c c002      	RJMP _0x20E007C
                 ; 0009 04EB     }
                 ; 0009 04EC     else{
                 _0x1200EF:
                 ; 0009 04ED         return -1;
005f5d efef      	LDI  R30,LOW(65535)
005f5e efff      	LDI  R31,HIGH(65535)
                 ; 0009 04EE     }
                 ; 0009 04EF }
                 _0x20E007C:
005f5f 8119      	LDD  R17,Y+1
005f60 8108      	LDD  R16,Y+0
005f61 962e      	ADIW R28,14
005f62 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F2 {
                 _ETH_setConfig:
                 ; 0009 04F3     TIMER   timeout;
                 ; 0009 04F4     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F5     char    setInfoCmd[] = ">W";
                 ; 0009 04F6     int     i=0;
                 ; 0009 04F7     char    setStr[30];
                 ; 0009 04F8     int     readLen=0;
                 ; 0009 04F9     char    *ptr;
                 ; 0009 04FA 
                 ; 0009 04FB     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
005f63 93ba      	ST   -Y,R27
005f64 93aa      	ST   -Y,R26
005f65 97a9      	SBIW R28,41
005f66 e3ee      	LDI  R30,LOW(62)
005f67 8fee      	STD  Y+30,R30
005f68 e5e7      	LDI  R30,LOW(87)
005f69 8fef      	STD  Y+31,R30
005f6a e0e0      	LDI  R30,LOW(0)
005f6b a3e8      	STD  Y+32,R30
005f6c e3ee      	LDI  R30,LOW(62)
005f6d a3e9      	STD  Y+33,R30
005f6e e5e2      	LDI  R30,LOW(82)
005f6f a3ea      	STD  Y+34,R30
005f70 e0ed      	LDI  R30,LOW(13)
005f71 a3eb      	STD  Y+35,R30
005f72 e0e0      	LDI  R30,LOW(0)
005f73 a3ec      	STD  Y+36,R30
005f74 940e c45d 	CALL SUBOPT_0x46
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                +
005f76 e020     +LDI R18 , LOW ( 0 )
005f77 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005f78 e4a5      	LDI  R26,LOW(325)
005f79 e0b1      	LDI  R27,HIGH(325)
005f7a 940e cbec 	CALL SUBOPT_0x17B
                 ; 0009 04FC     if(ptr == NULL){
005f7c f449      	BRNE _0x1200F1
                 ; 0009 04FD         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                +
005f7d ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5174 ) )
005f7e e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5174 ) )
005f7f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5174 ) )
005f80 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5174 ) )
                 	__POINTD1FN _0x120000,5174
005f81 940e c274 	CALL SUBOPT_0x3
                 ; 0009 04FE         return -1;
005f83 efef      	LDI  R30,LOW(65535)
005f84 efff      	LDI  R31,HIGH(65535)
005f85 c1c7      	RJMP _0x20E007B
                 ; 0009 04FF     }
                 ; 0009 0500 
                 ; 0009 0501     ETH_switchMode((unsigned char) MODE_CONF);
                 _0x1200F1:
005f86 e0a0      	LDI  R26,LOW(0)
005f87 df3d      	RCALL _ETH_switchMode
                 ; 0009 0502 
                 ; 0009 0503     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0504     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005f88 e000     +LDI R16 , LOW ( 0 )
005f89 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F3:
                +
005f8a 3405     +CPI R16 , LOW ( 325 )
005f8b e0e1     +LDI R30 , HIGH ( 325 )
005f8c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005f8d f42c      	BRGE _0x1200F4
                 ; 0009 0505         configRd[i] = 0x00;
005f8e 940e ccf2 	CALL SUBOPT_0x1AA
                 ; 0009 0506     }
                +
005f90 5f0f     +SUBI R16 , LOW ( - 1 )
005f91 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f92 cff7      	RJMP _0x1200F3
                 _0x1200F4:
                 ; 0009 0507     configLen       = 0;
005f93 940e c5d3 	CALL SUBOPT_0x7E
                 ; 0009 0508     config_start    = 0;
005f95 940e ccf5 	CALL SUBOPT_0x1AB
                 ; 0009 0509     config_ready    = 0;
                 ; 0009 050A     config_end      = 0;
                 ; 0009 050B     config_response = 0;
                 ; 0009 050C 
                 ; 0009 050D     printDebug("<ETH_setConfig> Write to uart 0 :");
                +
005f97 eeee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5224 ) )
005f98 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5224 ) )
005f99 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5224 ) )
005f9a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5224 ) )
                 	__POINTD1FN _0x120000,5224
005f9b 940e c274 	CALL SUBOPT_0x3
                 ; 0009 050E     for(i=0;i<strlen(getInfoCmd);i++){
                +
005f9d e000     +LDI R16 , LOW ( 0 )
005f9e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F6:
005f9f 940e cd1e 	CALL SUBOPT_0x1B1
005fa1 f450      	BRSH _0x1200F7
                 ; 0009 050F         putchar3(getInfoCmd[i]);
005fa2 01de      	MOVW R26,R28
005fa3 9697      	ADIW R26,39
005fa4 0fa0      	ADD  R26,R16
005fa5 1fb1      	ADC  R27,R17
005fa6 91ac      	LD   R26,X
005fa7 940e 4187 	CALL _putchar3
                 ; 0009 0510     }
                +
005fa9 5f0f     +SUBI R16 , LOW ( - 1 )
005faa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005fab cff3      	RJMP _0x1200F6
                 _0x1200F7:
                 ; 0009 0511     printDebug("\r\n");
005fac 940e cd06 	CALL SUBOPT_0x1AD
                 ; 0009 0512 
                 ; 0009 0513     for(i=0;i<strlen(getInfoCmd);i++){
                +
005fae e000     +LDI R16 , LOW ( 0 )
005faf e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F9:
005fb0 940e cd1e 	CALL SUBOPT_0x1B1
005fb2 f450      	BRSH _0x1200FA
                 ; 0009 0514         putchar0(getInfoCmd[i]);
005fb3 01de      	MOVW R26,R28
005fb4 9697      	ADIW R26,39
005fb5 0fa0      	ADD  R26,R16
005fb6 1fb1      	ADC  R27,R17
005fb7 91ac      	LD   R26,X
005fb8 940e 40bb 	CALL _putchar0
                 ; 0009 0515     }
                +
005fba 5f0f     +SUBI R16 , LOW ( - 1 )
005fbb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005fbc cff3      	RJMP _0x1200F9
                 _0x1200FA:
                 ; 0009 0516 
                 ; 0009 0517     TIMER_setTimer(&timeout, 7);
005fbd 01fe      	MOVW R30,R28
005fbe 96bb      	ADIW R30,43
005fbf 93fa      	ST   -Y,R31
005fc0 93ea      	ST   -Y,R30
005fc1 940e cd0c 	CALL SUBOPT_0x1AE
                 ; 0009 0518 
                 ; 0009 0519     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200FB:
005fc3 91e0 10f1 	LDS  R30,_config_ready
005fc5 30e0      	CPI  R30,0
005fc6 f419      	BRNE _0x1200FE
005fc7 940e cd25 	CALL SUBOPT_0x1B2
005fc9 f009      	BREQ _0x1200FF
                 _0x1200FE:
005fca c004      	RJMP _0x1200FD
                 _0x1200FF:
                 ; 0009 051A        delay_ms(50);
005fcb 940e c5b0 	CALL SUBOPT_0x7A
                 ; 0009 051B        #asm("wdr")
005fcd 95a8      	wdr
                 ; 0009 051C     }
005fce cff4      	RJMP _0x1200FB
                 _0x1200FD:
                 ; 0009 051D 
                 ; 0009 051E     memcpy(ptr,&configRd[0],configLen);
005fcf 935a      	ST   -Y,R21
005fd0 934a      	ST   -Y,R20
005fd1 940e cd17 	CALL SUBOPT_0x1B0
                 ; 0009 051F     readLen = configLen;
                +
005fd3 9120 10ee+LDS R18 , 0 + ( _configLen )
005fd5 9130 10ef+LDS R19 , 0 + ( _configLen ) + 1
                 	__GETWRMN 18,19,0,_configLen
                 ; 0009 0520 
                 ; 0009 0521     if(config_response != 'S'){
005fd7 91a0 10f3 	LDS  R26,_config_response
005fd9 35a3      	CPI  R26,LOW(0x53)
005fda f051      	BREQ _0x120100
                 ; 0009 0522         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                +
005fdb e1e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 5258 ) )
005fdc e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5258 ) )
005fdd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5258 ) )
005fde e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5258 ) )
                 	__POINTD1FN _0x120000,5258
005fdf 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0523         free( ptr );
005fe1 01da      	MOVW R26,R20
005fe2 940e c472 	CALL SUBOPT_0x4A
                 ; 0009 0524         return -1;
005fe4 c168      	RJMP _0x20E007B
                 ; 0009 0525     }
                 ; 0009 0526 
                 ; 0009 0527     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 0528     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 _0x120100:
                 ; 0009 0529                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052A                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052B                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052C                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 052D                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 052E                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 052F                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0530                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0531                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0532                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0533                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0534                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
005fe5 940e c4bf 	CALL SUBOPT_0x56
                +
005fe7 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5311 ) )
005fe8 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5311 ) )
005fe9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5311 ) )
005fea e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5311 ) )
                 	__POINTD1FN _0x120000,5311
005feb 940e e400 	CALL __PUTPARD1
005fed adab      	LDD  R26,Y+59
005fee adbc      	LDD  R27,Y+59+1
005fef 940e cd2d 	CALL SUBOPT_0x1B3
005ff1 adeb      	LDD  R30,Y+59
005ff2 adfc      	LDD  R31,Y+59+1
005ff3 940e cd32 	CALL SUBOPT_0x1B4
005ff5 adeb      	LDD  R30,Y+59
005ff6 adfc      	LDD  R31,Y+59+1
005ff7 940e cd3a 	CALL SUBOPT_0x1B5
005ff9 940e cd43 	CALL SUBOPT_0x1B6
005ffb 940e cd4a 	CALL SUBOPT_0x1B7
005ffd 940e cd43 	CALL SUBOPT_0x1B6
005fff 940e cd4f 	CALL SUBOPT_0x1B8
006001 940e cd43 	CALL SUBOPT_0x1B6
006003 940e cd57 	CALL SUBOPT_0x1B9
006005 940e cd60 	CALL SUBOPT_0x1BA
006007 940e cd67 	CALL SUBOPT_0x1BB
006009 940e cd60 	CALL SUBOPT_0x1BA
00600b 940e cd6c 	CALL SUBOPT_0x1BC
00600d 940e cd60 	CALL SUBOPT_0x1BA
00600f 940e ccce 	CALL SUBOPT_0x1A3
006011 940e cd74 	CALL SUBOPT_0x1BD
006013 940e cd7b 	CALL SUBOPT_0x1BE
006015 940e cd82 	CALL SUBOPT_0x1BF
006017 940e cd7b 	CALL SUBOPT_0x1BE
006019 940e cd87 	CALL SUBOPT_0x1C0
00601b 940e cd7b 	CALL SUBOPT_0x1BE
00601d 940e cd8f 	CALL SUBOPT_0x1C1
                +
00601f 01de     +MOVW R26 , R28
006020 5ba7     +SUBI R26 , LOW ( - 73 )
006021 4fbf     +SBCI R27 , HIGH ( - 73 )
006022 900d     +LD R0 , X +
006023 91bc     +LD R27 , X
006024 2da0     +MOV R26 , R0
                 	__GETW2SX 73
006025 940e cd2d 	CALL SUBOPT_0x1B3
006027 940e cd92 	CALL SUBOPT_0x1C2
006029 940e cd32 	CALL SUBOPT_0x1B4
00602b 940e cd92 	CALL SUBOPT_0x1C2
00602d 940e cd3a 	CALL SUBOPT_0x1B5
00602f 940e cd99 	CALL SUBOPT_0x1C3
006031 940e cd4a 	CALL SUBOPT_0x1B7
006033 940e cd99 	CALL SUBOPT_0x1C3
006035 940e cd4f 	CALL SUBOPT_0x1B8
006037 940e cd99 	CALL SUBOPT_0x1C3
006039 940e cd57 	CALL SUBOPT_0x1B9
00603b 940e cda0 	CALL SUBOPT_0x1C4
00603d 940e cd67 	CALL SUBOPT_0x1BB
00603f 940e cda0 	CALL SUBOPT_0x1C4
006041 940e cd6c 	CALL SUBOPT_0x1BC
006043 940e cda0 	CALL SUBOPT_0x1C4
006045 940e ccce 	CALL SUBOPT_0x1A3
006047 940e cd74 	CALL SUBOPT_0x1BD
006049 940e cda7 	CALL SUBOPT_0x1C5
00604b 940e cd82 	CALL SUBOPT_0x1BF
00604d 940e cda7 	CALL SUBOPT_0x1C5
00604f 940e cd87 	CALL SUBOPT_0x1C0
006051 940e cda7 	CALL SUBOPT_0x1C5
006053 940e cd8f 	CALL SUBOPT_0x1C1
                +
006055 01de     +MOVW R26 , R28
006056 5aa9     +SUBI R26 , LOW ( - 87 )
006057 4fbf     +SBCI R27 , HIGH ( - 87 )
006058 900d     +LD R0 , X +
006059 91bc     +LD R27 , X
00605a 2da0     +MOV R26 , R0
                 	__GETW2SX 87
00605b 940e cd2d 	CALL SUBOPT_0x1B3
00605d 940e cdae 	CALL SUBOPT_0x1C6
00605f 940e cd32 	CALL SUBOPT_0x1B4
006061 940e cdae 	CALL SUBOPT_0x1C6
006063 940e cd3a 	CALL SUBOPT_0x1B5
006065 940e cdb5 	CALL SUBOPT_0x1C7
006067 940e cd4a 	CALL SUBOPT_0x1B7
006069 940e cdb5 	CALL SUBOPT_0x1C7
00606b 940e cd4f 	CALL SUBOPT_0x1B8
00606d 940e cdb5 	CALL SUBOPT_0x1C7
00606f 940e cd57 	CALL SUBOPT_0x1B9
006071 940e cdbc 	CALL SUBOPT_0x1C8
006073 940e cd67 	CALL SUBOPT_0x1BB
006075 940e cdbc 	CALL SUBOPT_0x1C8
006077 940e cd6c 	CALL SUBOPT_0x1BC
006079 940e cdbc 	CALL SUBOPT_0x1C8
00607b 940e ccce 	CALL SUBOPT_0x1A3
00607d 940e cd74 	CALL SUBOPT_0x1BD
00607f 940e cdc3 	CALL SUBOPT_0x1C9
006081 940e cd82 	CALL SUBOPT_0x1BF
006083 940e cdc3 	CALL SUBOPT_0x1C9
006085 940e cd87 	CALL SUBOPT_0x1C0
006087 940e cdc3 	CALL SUBOPT_0x1C9
006089 940e cd8f 	CALL SUBOPT_0x1C1
00608b e380      	LDI  R24,48
00608c 940e c186 	CALL _sprintf
00608e 96e6      	ADIW R28,54
                 ; 0009 0535 
                 ; 0009 0536     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
00608f 940e cdca 	CALL SUBOPT_0x1CA
006091 940e c2ea 	CALL SUBOPT_0x12
                 ; 0009 0537 
                 ; 0009 0538     memcpy((ptr+14),&setStr[0],24);
006093 01fa      	MOVW R30,R20
006094 963e      	ADIW R30,14
006095 940e cdd4 	CALL SUBOPT_0x1CB
006097 e1a8      	LDI  R26,LOW(24)
006098 940e cddb 	CALL SUBOPT_0x1CC
                 ; 0009 0539 
                 ; 0009 053A     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053B                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053C                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 053D                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 053E                 (server[9]*100) + (server[10]*10) + server[11]);
00609a 940e c4bf 	CALL SUBOPT_0x56
                +
00609c e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5343 ) )
00609d e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5343 ) )
00609e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5343 ) )
00609f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5343 ) )
                 	__POINTD1FN _0x120000,5343
0060a0 940e e400 	CALL __PUTPARD1
0060a2 a9ad      	LDD  R26,Y+53
0060a3 a9be      	LDD  R27,Y+53+1
0060a4 940e cd2d 	CALL SUBOPT_0x1B3
0060a6 a9ed      	LDD  R30,Y+53
0060a7 a9fe      	LDD  R31,Y+53+1
0060a8 940e cd32 	CALL SUBOPT_0x1B4
0060aa a9ed      	LDD  R30,Y+53
0060ab a9fe      	LDD  R31,Y+53+1
0060ac 940e cd3a 	CALL SUBOPT_0x1B5
0060ae ade9      	LDD  R30,Y+57
0060af adfa      	LDD  R31,Y+57+1
0060b0 940e cd4a 	CALL SUBOPT_0x1B7
0060b2 ade9      	LDD  R30,Y+57
0060b3 adfa      	LDD  R31,Y+57+1
0060b4 940e cd4f 	CALL SUBOPT_0x1B8
0060b6 ade9      	LDD  R30,Y+57
0060b7 adfa      	LDD  R31,Y+57+1
0060b8 940e cd57 	CALL SUBOPT_0x1B9
0060ba aded      	LDD  R30,Y+61
0060bb adfe      	LDD  R31,Y+61+1
0060bc 940e cd67 	CALL SUBOPT_0x1BB
0060be aded      	LDD  R30,Y+61
0060bf adfe      	LDD  R31,Y+61+1
0060c0 940e cd6c 	CALL SUBOPT_0x1BC
0060c2 aded      	LDD  R30,Y+61
0060c3 adfe      	LDD  R31,Y+61+1
0060c4 940e ccce 	CALL SUBOPT_0x1A3
0060c6 940e cd74 	CALL SUBOPT_0x1BD
0060c8 940e cdde 	CALL SUBOPT_0x1CD
0060ca 940e cd82 	CALL SUBOPT_0x1BF
0060cc 940e cdde 	CALL SUBOPT_0x1CD
0060ce 940e cd87 	CALL SUBOPT_0x1C0
0060d0 940e cdde 	CALL SUBOPT_0x1CD
0060d2 940e cd8f 	CALL SUBOPT_0x1C1
0060d4 e180      	LDI  R24,16
0060d5 940e c186 	CALL _sprintf
0060d7 9666      	ADIW R28,22
                 ; 0009 053F 
                 ; 0009 0540     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
0060d8 940e cdca 	CALL SUBOPT_0x1CA
0060da 940e c2ea 	CALL SUBOPT_0x12
                 ; 0009 0541 
                 ; 0009 0542     memcpy((ptr+42),&setStr[0],8);
0060dc 01fa      	MOVW R30,R20
0060dd 96ba      	ADIW R30,42
0060de 940e cdd4 	CALL SUBOPT_0x1CB
0060e0 e0a8      	LDI  R26,LOW(8)
0060e1 940e cddb 	CALL SUBOPT_0x1CC
                 ; 0009 0543 
                 ; 0009 0544 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0545 //    for(i=0;i<configLen;i++){
                 ; 0009 0546 //        putchar3(ptr[i]);
                 ; 0009 0547 //    }
                 ; 0009 0548 //    printDebug("\r\n\---\r\n");
                 ; 0009 0549 
                 ; 0009 054A     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054B     for(i=0;i<CONF_READ_BUFFER;i++){
                +
0060e3 e000     +LDI R16 , LOW ( 0 )
0060e4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120102:
                +
0060e5 3405     +CPI R16 , LOW ( 325 )
0060e6 e0e1     +LDI R30 , HIGH ( 325 )
0060e7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
0060e8 f42c      	BRGE _0x120103
                 ; 0009 054C         configRd[i] = 0x00;
0060e9 940e ccf2 	CALL SUBOPT_0x1AA
                 ; 0009 054D     }
                +
0060eb 5f0f     +SUBI R16 , LOW ( - 1 )
0060ec 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060ed cff7      	RJMP _0x120102
                 _0x120103:
                 ; 0009 054E     configLen       = 0;
0060ee 940e c5d3 	CALL SUBOPT_0x7E
                 ; 0009 054F     config_start    = 0;
0060f0 940e ccf5 	CALL SUBOPT_0x1AB
                 ; 0009 0550     config_ready    = 0;
                 ; 0009 0551     config_end      = 0;
                 ; 0009 0552     config_response = 0;
                 ; 0009 0553 
                 ; 0009 0554     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                +
0060f2 e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5394 ) )
0060f3 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5394 ) )
0060f4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5394 ) )
0060f5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5394 ) )
                 	__POINTD1FN _0x120000,5394
0060f6 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0555     for(i=0;i<strlen(setInfoCmd);i++){
                +
0060f8 e000     +LDI R16 , LOW ( 0 )
0060f9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120105:
0060fa 01de      	MOVW R26,R28
0060fb 9694      	ADIW R26,36
0060fc 940e a81c 	CALL _strlen
0060fe 170e      	CP   R16,R30
0060ff 071f      	CPC  R17,R31
006100 f488      	BRSH _0x120106
                 ; 0009 0556         putchar0(setInfoCmd[i]);
006101 01de      	MOVW R26,R28
006102 9694      	ADIW R26,36
006103 0fa0      	ADD  R26,R16
006104 1fb1      	ADC  R27,R17
006105 91ac      	LD   R26,X
006106 940e 40bb 	CALL _putchar0
                 ; 0009 0557         putchar3(setInfoCmd[i]);
006108 01de      	MOVW R26,R28
006109 9694      	ADIW R26,36
00610a 0fa0      	ADD  R26,R16
00610b 1fb1      	ADC  R27,R17
00610c 91ac      	LD   R26,X
00610d 940e 4187 	CALL _putchar3
                 ; 0009 0558     }
                +
00610f 5f0f     +SUBI R16 , LOW ( - 1 )
006110 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006111 cfe8      	RJMP _0x120105
                 _0x120106:
                 ; 0009 0559     for(i=12;i<readLen;i++){
                +
006112 e00c     +LDI R16 , LOW ( 12 )
006113 e010     +LDI R17 , HIGH ( 12 )
                 	__GETWRN 16,17,12
                 _0x120108:
                +
006114 1702     +CP R16 , R18
006115 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
006116 f47c      	BRGE _0x120109
                 ; 0009 055A         putchar0(ptr[i]);
006117 01f8      	MOVW R30,R16
006118 0fe4      	ADD  R30,R20
006119 1ff5      	ADC  R31,R21
00611a 81a0      	LD   R26,Z
00611b 940e 40bb 	CALL _putchar0
                 ; 0009 055B         putchar3(ptr[i]);
00611d 01f8      	MOVW R30,R16
00611e 0fe4      	ADD  R30,R20
00611f 1ff5      	ADC  R31,R21
006120 81a0      	LD   R26,Z
006121 940e 4187 	CALL _putchar3
                 ; 0009 055C     }
                +
006123 5f0f     +SUBI R16 , LOW ( - 1 )
006124 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006125 cfee      	RJMP _0x120108
                 _0x120109:
                 ; 0009 055D     putchar0('\r');
006126 e0ad      	LDI  R26,LOW(13)
006127 940e 40bb 	CALL _putchar0
                 ; 0009 055E     printDebug("\r\n\---\r\n");
                +
006129 ebea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5428 ) )
00612a e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5428 ) )
00612b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5428 ) )
00612c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5428 ) )
                 	__POINTD1FN _0x120000,5428
00612d 940e c274 	CALL SUBOPT_0x3
                 ; 0009 055F 
                 ; 0009 0560     TIMER_setTimer(&timeout, 10);
00612f 01fe      	MOVW R30,R28
006130 96bb      	ADIW R30,43
006131 940e c377 	CALL SUBOPT_0x27
                 ; 0009 0561 
                 ; 0009 0562     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x12010A:
006133 91e0 10f1 	LDS  R30,_config_ready
006135 30e0      	CPI  R30,0
006136 f419      	BRNE _0x12010D
006137 940e cd25 	CALL SUBOPT_0x1B2
006139 f009      	BREQ _0x12010E
                 _0x12010D:
00613a c004      	RJMP _0x12010C
                 _0x12010E:
                 ; 0009 0563        delay_ms(50);
00613b 940e c5b0 	CALL SUBOPT_0x7A
                 ; 0009 0564        #asm("wdr")
00613d 95a8      	wdr
                 ; 0009 0565     }
00613e cff4      	RJMP _0x12010A
                 _0x12010C:
                 ; 0009 0566 
                 ; 0009 0567     ETH_switchMode(MODE_NORM);
00613f e8a0      	LDI  R26,LOW(128)
006140 dd84      	RCALL _ETH_switchMode
                 ; 0009 0568 
                 ; 0009 0569     free( ptr );
006141 01da      	MOVW R26,R20
006142 940e a76e 	CALL _free
                 ; 0009 056A 
                 ; 0009 056B     if(config_response == 'S'){
006144 91a0 10f3 	LDS  R26,_config_response
006146 35a3      	CPI  R26,LOW(0x53)
006147 f419      	BRNE _0x12010F
                 ; 0009 056C         return 0;
006148 e0e0      	LDI  R30,LOW(0)
006149 e0f0      	LDI  R31,HIGH(0)
00614a c002      	RJMP _0x20E007B
                 ; 0009 056D     }
                 ; 0009 056E     else{
                 _0x12010F:
                 ; 0009 056F         return -1;
00614b efef      	LDI  R30,LOW(65535)
00614c efff      	LDI  R31,HIGH(65535)
                 ; 0009 0570     }
                 ; 0009 0571 }
                 _0x20E007B:
00614d 940e e47c 	CALL __LOADLOCR6
00614f 96e7      	ADIW R28,55
006150 9508      	RET
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0574 {
                 _ETH_reset:
                 ; 0009 0575     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
006151 ece2     +LDI R30 , LOW ( 2 * _0x120000 + ( 5436 ) )
006152 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5436 ) )
006153 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5436 ) )
006154 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5436 ) )
                 	__POINTD1FN _0x120000,5436
006155 940e c274 	CALL SUBOPT_0x3
                 ; 0009 0576     ETH_RESET   = 0;
006157 9872      	CBI  0xE,2
                 ; 0009 0577     delay_ms(3000);
006158 eba8      	LDI  R26,LOW(3000)
006159 e0bb      	LDI  R27,HIGH(3000)
00615a 940e e0a1 	CALL _delay_ms
                 ; 0009 0578     ETH_RESET   = 1;
00615c 9a72      	SBI  0xE,2
                 ; 0009 0579     delay_ms(1);
00615d 940e c59e 	CALL SUBOPT_0x75
00615f 940e e0a1 	CALL _delay_ms
                 ; 0009 057A     printDebug("...Done\r\n");
                +
006161 efe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5488 ) )
006162 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5488 ) )
006163 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5488 ) )
006164 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5488 ) )
                 	__POINTD1FN _0x120000,5488
006165 940e c274 	CALL SUBOPT_0x3
                 ; 0009 057B }
006167 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
006168 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00616a 940e cde5 	CALL SUBOPT_0x1CE
                 _0x140004:
                +
00616c 3008     +CPI R16 , LOW ( 8 )
00616d e0e0     +LDI R30 , HIGH ( 8 )
00616e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00616f f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
006170 940e cdea 	CALL SUBOPT_0x1CF
006172 81ac      	LDD  R26,Y+4
006173 81bd      	LDD  R27,Y+4+1
006174 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
006175 5f0f     +SUBI R16 , LOW ( - 1 )
006176 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006177 cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
006178 940e cdea 	CALL SUBOPT_0x1CF
00617a 940e cdf3 	CALL SUBOPT_0x1D0
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
00617c 940e c6a3 	CALL SUBOPT_0x9B
00617e 2ffe      	MOV  R31,R30
00617f e0e0      	LDI  R30,0
006180 010f      	MOVW R0,R30
006181 940e cdea 	CALL SUBOPT_0x1CF
006183 940e c6a3 	CALL SUBOPT_0x9B
006185 29e0      	OR   R30,R0
006186 29f1      	OR   R31,R1
006187 940e cdf8 	CALL SUBOPT_0x1D1
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
006189 85a0      	LDD  R26,Z+8
00618a 33a0      	CPI  R26,LOW(0x30)
00618b f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
00618c c1a9      	RJMP _0x20E007A
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
00618d 81ee      	LDD  R30,Y+6
00618e 81ff      	LDD  R31,Y+6+1
00618f 1be2      	SUB  R30,R18
006190 0bf3      	SBC  R31,R19
                +
006191 81ac     +LDD R26 , Y + 4
006192 81bd     +LDD R27 , Y + 4 + 1
006193 961b     +ADIW R26 , 11
006194 93ed     +ST X + , R30
006195 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
006196 81ec      	LDD  R30,Y+4
006197 81fd      	LDD  R31,Y+4+1
006198 85a3      	LDD  R26,Z+11
006199 85b4      	LDD  R27,Z+12
00619a 940e ce00 	CALL SUBOPT_0x1D2
                +
00619c 81ac     +LDD R26 , Y + 4
00619d 81bd     +LDD R27 , Y + 4 + 1
00619e 961d     +ADIW R26 , 13
00619f 93ed     +ST X + , R30
0061a0 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
0061a1 81ac      	LDD  R26,Y+4
0061a2 81bd      	LDD  R27,Y+4+1
0061a3 961d      	ADIW R26,13
0061a4 940e e3cc 	CALL __GETW1P
0061a6 9730      	SBIW R30,0
0061a7 f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
0061a8 e0e0     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
0061a9 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
0061aa e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
0061ab e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
0061ac 940e c274 	CALL SUBOPT_0x3
                 ; 000A 001D         return -1;
0061ae efef      	LDI  R30,LOW(65535)
0061af efff      	LDI  R31,HIGH(65535)
0061b0 c187      	RJMP _0x20E0079
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
0061b1 e000     +LDI R16 , LOW ( 0 )
0061b2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
0061b3 81ac      	LDD  R26,Y+4
0061b4 81bd      	LDD  R27,Y+4+1
0061b5 961b      	ADIW R26,11
0061b6 940e ce07 	CALL SUBOPT_0x1D3
0061b8 f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
0061b9 81ec      	LDD  R30,Y+4
0061ba 81fd      	LDD  R31,Y+4+1
0061bb 85a5      	LDD  R26,Z+13
0061bc 85b6      	LDD  R27,Z+14
0061bd 940e ce0c 	CALL SUBOPT_0x1D4
0061bf 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
0061c0 5f0f     +SUBI R16 , LOW ( - 1 )
0061c1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0061c2 cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
0061c3 c172      	RJMP _0x20E007A
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
0061c4 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
0061c6 e020     +LDI R18 , LOW ( 0 )
0061c7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0061c8 e2e6     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
0061c9 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
0061ca e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
0061cb e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
0061cc 940e c274 	CALL SUBOPT_0x3
                 ; 000A 003B     print_payload(pkt,len);
0061ce 940e cc7c 	CALL SUBOPT_0x194
0061d0 85a8      	LDD  R26,Y+8
0061d1 85b9      	LDD  R27,Y+8+1
0061d2 940e 9f7c 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
0061d4 e000     +LDI R16 , LOW ( 0 )
0061d5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
0061d6 3008     +CPI R16 , LOW ( 8 )
0061d7 e0e0     +LDI R30 , HIGH ( 8 )
0061d8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0061d9 f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
0061da 940e cdea 	CALL SUBOPT_0x1CF
0061dc 81ac      	LDD  R26,Y+4
0061dd 81bd      	LDD  R27,Y+4+1
0061de 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
0061df 5f0f     +SUBI R16 , LOW ( - 1 )
0061e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0061e1 cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
0061e2 940e cdea 	CALL SUBOPT_0x1CF
0061e4 940e cdf3 	CALL SUBOPT_0x1D0
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
0061e6 81ac     +LDD R26 , Y + 4
0061e7 81bd     +LDD R27 , Y + 4 + 1
0061e8 9619     +ADIW R26 , 9
0061e9 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
0061ea 81ec      	LDD  R30,Y+4
0061eb 81fd      	LDD  R31,Y+4+1
0061ec 85a0      	LDD  R26,Z+8
0061ed 31a0      	CPI  R26,LOW(0x10)
0061ee f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
0061ef e3ed     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
0061f0 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
0061f1 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
0061f2 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
0061f3 940e c274 	CALL SUBOPT_0x3
                 ; 000A 0047         st->confLen     =   0;
0061f5 81ac      	LDD  R26,Y+4
0061f6 81bd      	LDD  R27,Y+4+1
0061f7 961a      	ADIW R26,10
0061f8 940e c971 	CALL SUBOPT_0x114
                 ; 000A 0048         st->confSpec    =   NULL;
0061fa 81ac      	LDD  R26,Y+4
0061fb 81bd      	LDD  R27,Y+4+1
0061fc 961c      	ADIW R26,12
0061fd 940e c971 	CALL SUBOPT_0x114
                 ; 000A 0049         return 0;
0061ff c136      	RJMP _0x20E007A
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
006200 e5ec     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
006201 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
006202 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
006203 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
006204 940e c274 	CALL SUBOPT_0x3
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
006206 81ee      	LDD  R30,Y+6
006207 81ff      	LDD  R31,Y+6+1
006208 1be2      	SUB  R30,R18
006209 0bf3      	SBC  R31,R19
                +
00620a 81ac     +LDD R26 , Y + 4
00620b 81bd     +LDD R27 , Y + 4 + 1
00620c 961a     +ADIW R26 , 10
00620d 93ed     +ST X + , R30
00620e 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
00620f e7eb     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
006210 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
006211 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
006212 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
006213 940e e400 	CALL __PUTPARD1
006215 85a8      	LDD  R26,Y+8
006216 85b9      	LDD  R27,Y+8+1
006217 961a      	ADIW R26,10
006218 940e c33e 	CALL SUBOPT_0x1E
00621a 940e cc53 	CALL SUBOPT_0x18B
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
00621c 81ec      	LDD  R30,Y+4
00621d 81fd      	LDD  R31,Y+4+1
00621e 85a2      	LDD  R26,Z+10
00621f 85b3      	LDD  R27,Z+11
006220 940e ce00 	CALL SUBOPT_0x1D2
                +
006222 81ac     +LDD R26 , Y + 4
006223 81bd     +LDD R27 , Y + 4 + 1
006224 961c     +ADIW R26 , 12
006225 93ed     +ST X + , R30
006226 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
006227 81ac      	LDD  R26,Y+4
006228 81bd      	LDD  R27,Y+4+1
006229 961c      	ADIW R26,12
00622a 940e e3cc 	CALL __GETW1P
00622c 9730      	SBIW R30,0
00622d f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
00622e e9ef     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
00622f e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
006230 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
006231 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
006232 940e c274 	CALL SUBOPT_0x3
                 ; 000A 0056         return -1;
006234 efef      	LDI  R30,LOW(65535)
006235 efff      	LDI  R31,HIGH(65535)
006236 c101      	RJMP _0x20E0079
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
006237 e000     +LDI R16 , LOW ( 0 )
006238 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
006239 81ac      	LDD  R26,Y+4
00623a 81bd      	LDD  R27,Y+4+1
00623b 961a      	ADIW R26,10
00623c 940e ce07 	CALL SUBOPT_0x1D3
00623e f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
00623f 81ec      	LDD  R30,Y+4
006240 81fd      	LDD  R31,Y+4+1
006241 85a4      	LDD  R26,Z+12
006242 85b5      	LDD  R27,Z+13
006243 940e ce0c 	CALL SUBOPT_0x1D4
006245 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
006246 5f0f     +SUBI R16 , LOW ( - 1 )
006247 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006248 cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
006249 c0ec      	RJMP _0x20E007A
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
00624a 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00624c 940e cde5 	CALL SUBOPT_0x1CE
                 _0x140014:
                +
00624e 3008     +CPI R16 , LOW ( 8 )
00624f e0e0     +LDI R30 , HIGH ( 8 )
006250 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006251 f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
006252 940e cdea 	CALL SUBOPT_0x1CF
006254 81ac      	LDD  R26,Y+4
006255 81bd      	LDD  R27,Y+4+1
006256 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
006257 5f0f     +SUBI R16 , LOW ( - 1 )
006258 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006259 cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
00625a 940e cdea 	CALL SUBOPT_0x1CF
00625c 940e ce16 	CALL SUBOPT_0x1D5
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
00625e 81ae      	LDD  R26,Y+6
00625f 81bf      	LDD  R27,Y+6+1
006260 9717      	SBIW R26,7
006261 f414      	BRGE PC+3
006262 940c 62d1 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
006264 940e cdea 	CALL SUBOPT_0x1CF
006266 940e ce1b 	CALL SUBOPT_0x1D6
006268 940e ce23 	CALL SUBOPT_0x1D7
00626a 937f      	PUSH R23
00626b 936f      	PUSH R22
00626c 93ff      	PUSH R31
00626d 93ef      	PUSH R30
00626e 940e cdea 	CALL SUBOPT_0x1CF
006270 940e ce1b 	CALL SUBOPT_0x1D6
006272 940e e2d2 	CALL __LSLD16
006274 91af      	POP  R26
006275 91bf      	POP  R27
006276 918f      	POP  R24
006277 919f      	POP  R25
006278 940e e271 	CALL __ORD12
00627a 937f      	PUSH R23
00627b 936f      	PUSH R22
00627c 93ff      	PUSH R31
00627d 93ef      	PUSH R30
00627e 940e cdea 	CALL SUBOPT_0x1CF
006280 940e ce1b 	CALL SUBOPT_0x1D6
006282 940e ce29 	CALL SUBOPT_0x1D8
006284 91af      	POP  R26
006285 91bf      	POP  R27
006286 918f      	POP  R24
006287 919f      	POP  R25
006288 940e e271 	CALL __ORD12
00628a 937f      	PUSH R23
00628b 936f      	PUSH R22
00628c 93ff      	PUSH R31
00628d 93ef      	PUSH R30
00628e 940e cdea 	CALL SUBOPT_0x1CF
006290 940e ce1b 	CALL SUBOPT_0x1D6
006292 91af      	POP  R26
006293 91bf      	POP  R27
006294 918f      	POP  R24
006295 919f      	POP  R25
006296 940e ce2f 	CALL SUBOPT_0x1D9
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
006298 940e cdea 	CALL SUBOPT_0x1CF
00629a 940e ce1b 	CALL SUBOPT_0x1D6
00629c 940e ce23 	CALL SUBOPT_0x1D7
00629e 937f      	PUSH R23
00629f 936f      	PUSH R22
0062a0 93ff      	PUSH R31
0062a1 93ef      	PUSH R30
0062a2 940e cdea 	CALL SUBOPT_0x1CF
0062a4 940e ce1b 	CALL SUBOPT_0x1D6
0062a6 940e e2d2 	CALL __LSLD16
0062a8 91af      	POP  R26
0062a9 91bf      	POP  R27
0062aa 918f      	POP  R24
0062ab 919f      	POP  R25
0062ac 940e e271 	CALL __ORD12
0062ae 937f      	PUSH R23
0062af 936f      	PUSH R22
0062b0 93ff      	PUSH R31
0062b1 93ef      	PUSH R30
0062b2 940e cdea 	CALL SUBOPT_0x1CF
0062b4 940e ce1b 	CALL SUBOPT_0x1D6
0062b6 940e ce29 	CALL SUBOPT_0x1D8
0062b8 91af      	POP  R26
0062b9 91bf      	POP  R27
0062ba 918f      	POP  R24
0062bb 919f      	POP  R25
0062bc 940e e271 	CALL __ORD12
0062be 937f      	PUSH R23
0062bf 936f      	PUSH R22
0062c0 93ff      	PUSH R31
0062c1 93ef      	PUSH R30
0062c2 940e cdea 	CALL SUBOPT_0x1CF
0062c4 940e ce1b 	CALL SUBOPT_0x1D6
0062c6 91af      	POP  R26
0062c7 91bf      	POP  R27
0062c8 918f      	POP  R24
0062c9 919f      	POP  R25
0062ca 940e e271 	CALL __ORD12
                +
0062cc 81ac     +LDD R26 , Y + 4
0062cd 81bd     +LDD R27 , Y + 4 + 1
0062ce 961d     +ADIW R26 , 13
0062cf 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
0062d1 c064      	RJMP _0x20E007A
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
0062d2 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0062d4 940e cde5 	CALL SUBOPT_0x1CE
                 _0x140018:
                +
0062d6 3008     +CPI R16 , LOW ( 8 )
0062d7 e0e0     +LDI R30 , HIGH ( 8 )
0062d8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0062d9 f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
0062da 940e ce37 	CALL SUBOPT_0x1DA
0062dc 81ac      	LDD  R26,Y+4
0062dd 81bd      	LDD  R27,Y+4+1
0062de 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
0062df 5f0f     +SUBI R16 , LOW ( - 1 )
0062e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062e1 cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
0062e2 c0b2      	RJMP _0x20E0078
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
0062e3 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0062e5 940e cde5 	CALL SUBOPT_0x1CE
                 _0x14001B:
                +
0062e7 3008     +CPI R16 , LOW ( 8 )
0062e8 e0e0     +LDI R30 , HIGH ( 8 )
0062e9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0062ea f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
0062eb 940e cdea 	CALL SUBOPT_0x1CF
0062ed 81ac      	LDD  R26,Y+4
0062ee 81bd      	LDD  R27,Y+4+1
0062ef 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
0062f0 5f0f     +SUBI R16 , LOW ( - 1 )
0062f1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062f2 cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
0062f3 940e cdea 	CALL SUBOPT_0x1CF
0062f5 940e ce16 	CALL SUBOPT_0x1D5
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
0062f7 81ee      	LDD  R30,Y+6
0062f8 81ff      	LDD  R31,Y+6+1
0062f9 9732      	SBIW R30,2
0062fa 940e cdf8 	CALL SUBOPT_0x1D1
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
0062fc 940e ccc5 	CALL SUBOPT_0x1A1
0062fe f5b8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
0062ff 81ec      	LDD  R30,Y+4
006300 81fd      	LDD  R31,Y+4+1
006301 85a1      	LDD  R26,Z+9
006302 85b2      	LDD  R27,Z+10
006303 940e ce00 	CALL SUBOPT_0x1D2
                +
006305 81ac     +LDD R26 , Y + 4
006306 81bd     +LDD R27 , Y + 4 + 1
006307 961b     +ADIW R26 , 11
006308 93ed     +ST X + , R30
006309 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
00630a 81ac      	LDD  R26,Y+4
00630b 81bd      	LDD  R27,Y+4+1
00630c 961b      	ADIW R26,11
00630d 940e e3cc 	CALL __GETW1P
00630f 9730      	SBIW R30,0
006310 f499      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
006311 ece4     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
006312 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
006313 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
006314 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
006315 940e ce3b 	CALL SUBOPT_0x1DB
006317 85a1      	LDD  R26,Z+9
006318 85b2      	LDD  R27,Z+10
006319 e0e1      	LDI  R30,LOW(1)
00631a e0f0      	LDI  R31,HIGH(1)
00631b 940e e2f6 	CALL __MULW12U
00631d 940e c3d6 	CALL SUBOPT_0x34
00631f 940e c2ea 	CALL SUBOPT_0x12
                 ; 000A 00A3             return -1;
006321 efef      	LDI  R30,LOW(65535)
006322 efff      	LDI  R31,HIGH(65535)
006323 c014      	RJMP _0x20E0079
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
006324 e000     +LDI R16 , LOW ( 0 )
006325 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
006326 81ac      	LDD  R26,Y+4
006327 81bd      	LDD  R27,Y+4+1
006328 9619      	ADIW R26,9
006329 940e ce07 	CALL SUBOPT_0x1D3
00632b f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
00632c 81ec      	LDD  R30,Y+4
00632d 81fd      	LDD  R31,Y+4+1
00632e 85a3      	LDD  R26,Z+11
00632f 85b4      	LDD  R27,Z+12
006330 940e ce0c 	CALL SUBOPT_0x1D4
006332 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
006333 5f0f     +SUBI R16 , LOW ( - 1 )
006334 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006335 cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E007A:
006336 e0e0      	LDI  R30,LOW(0)
006337 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0079:
006338 940e e47e 	CALL __LOADLOCR4
00633a 962a      	ADIW R28,10
00633b 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
00633c 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00633e 940e cde5 	CALL SUBOPT_0x1CE
                 _0x140023:
                +
006340 3008     +CPI R16 , LOW ( 8 )
006341 e0e0     +LDI R30 , HIGH ( 8 )
006342 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006343 f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
006344 940e ce37 	CALL SUBOPT_0x1DA
006346 81ac      	LDD  R26,Y+4
006347 81bd      	LDD  R27,Y+4+1
006348 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
006349 5f0f     +SUBI R16 , LOW ( - 1 )
00634a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00634b cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
00634c 940e ce37 	CALL SUBOPT_0x1DA
00634e 940e ce16 	CALL SUBOPT_0x1D5
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
006350 940e ce37 	CALL SUBOPT_0x1DA
006352 940e ce1b 	CALL SUBOPT_0x1D6
006354 940e ce23 	CALL SUBOPT_0x1D7
006356 937f      	PUSH R23
006357 936f      	PUSH R22
006358 93ff      	PUSH R31
006359 93ef      	PUSH R30
00635a 940e ce37 	CALL SUBOPT_0x1DA
00635c 940e ce1b 	CALL SUBOPT_0x1D6
00635e 940e e2d2 	CALL __LSLD16
006360 91af      	POP  R26
006361 91bf      	POP  R27
006362 918f      	POP  R24
006363 919f      	POP  R25
006364 940e e271 	CALL __ORD12
006366 937f      	PUSH R23
006367 936f      	PUSH R22
006368 93ff      	PUSH R31
006369 93ef      	PUSH R30
00636a 940e ce37 	CALL SUBOPT_0x1DA
00636c 940e ce1b 	CALL SUBOPT_0x1D6
00636e 940e ce29 	CALL SUBOPT_0x1D8
006370 91af      	POP  R26
006371 91bf      	POP  R27
006372 918f      	POP  R24
006373 919f      	POP  R25
006374 940e e271 	CALL __ORD12
006376 937f      	PUSH R23
006377 936f      	PUSH R22
006378 93ff      	PUSH R31
006379 93ef      	PUSH R30
00637a 940e ce37 	CALL SUBOPT_0x1DA
00637c 940e ce1b 	CALL SUBOPT_0x1D6
00637e 91af      	POP  R26
00637f 91bf      	POP  R27
006380 918f      	POP  R24
006381 919f      	POP  R25
006382 940e ce2f 	CALL SUBOPT_0x1D9
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
006384 c01d      	RJMP _0x20E0077
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
006385 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006387 940e cde5 	CALL SUBOPT_0x1CE
                 _0x140026:
                +
006389 3008     +CPI R16 , LOW ( 8 )
00638a e0e0     +LDI R30 , HIGH ( 8 )
00638b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00638c f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
00638d 940e ce37 	CALL SUBOPT_0x1DA
00638f 81ac      	LDD  R26,Y+4
006390 81bd      	LDD  R27,Y+4+1
006391 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
006392 5f0f     +SUBI R16 , LOW ( - 1 )
006393 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006394 cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0078:
006395 01f9      	MOVW R30,R18
                +
006396 5f2f     +SUBI R18 , LOW ( - 1 )
006397 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006398 940e ccec 	CALL SUBOPT_0x1A9
00639a 940e ce16 	CALL SUBOPT_0x1D5
                 ; 000A 00CB     st->status      =   pkt[k++];
00639c 940e ce37 	CALL SUBOPT_0x1DA
                +
00639e 81ac     +LDD R26 , Y + 4
00639f 81bd     +LDD R27 , Y + 4 + 1
0063a0 9619     +ADIW R26 , 9
0063a1 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E0077:
0063a2 e0e0      	LDI  R30,LOW(0)
0063a3 e0f0      	LDI  R31,HIGH(0)
0063a4 940e e47e 	CALL __LOADLOCR4
0063a6 9628      	ADIW R28,8
0063a7 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
0063a8 940e c66b 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
0063aa 85a5      	LDD  R26,Z+13
0063ab 85b6      	LDD  R27,Z+14
0063ac 940e a76e 	CALL _free
                 ; 000A 00D3 }
0063ae c05e      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
0063af 940e c66b 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
0063b1 85a4      	LDD  R26,Z+12
0063b2 85b5      	LDD  R27,Z+13
0063b3 940e a76e 	CALL _free
                 ; 000A 00D8 }
0063b5 c057      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
0063b6 940e c66b 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
0063b8 85a3      	LDD  R26,Z+11
0063b9 85b4      	LDD  R27,Z+12
0063ba 940e a76e 	CALL _free
                 ; 000A 00DD }
0063bc c050      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
0063bd 93aa      	ST   -Y,R26
0063be 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
0063bf 81e9      	LDD  R30,Y+1
0063c0 7fe0      	ANDI R30,LOW(0xF0)
0063c1 2f1e      	MOV  R17,R30
0063c2 2fe1      	MOV  R30,R17
0063c3 940e c462 	CALL SUBOPT_0x47
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
0063c5 f419      	BRNE _0x160006
0063c6 eae1      	LDI  R30,LOW(161)
0063c7 e0f0      	LDI  R31,HIGH(161)
0063c8 c043      	RJMP _0x20E0075
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
0063c9 32e0      	CPI  R30,LOW(0x20)
0063ca e0a0      	LDI  R26,HIGH(0x20)
0063cb 07fa      	CPC  R31,R26
0063cc f419      	BRNE _0x160007
0063cd e0e8      	LDI  R30,LOW(8)
0063ce e0f0      	LDI  R31,HIGH(8)
0063cf c03c      	RJMP _0x20E0075
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
0063d0 33e0      	CPI  R30,LOW(0x30)
0063d1 e0a0      	LDI  R26,HIGH(0x30)
0063d2 07fa      	CPC  R31,R26
0063d3 f419      	BRNE _0x160008
0063d4 e1ed      	LDI  R30,LOW(29)
0063d5 e0f0      	LDI  R31,HIGH(29)
0063d6 c035      	RJMP _0x20E0075
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
0063d7 34e0      	CPI  R30,LOW(0x40)
0063d8 e0a0      	LDI  R26,HIGH(0x40)
0063d9 07fa      	CPC  R31,R26
0063da f419      	BRNE _0x160009
0063db e0e3      	LDI  R30,LOW(3)
0063dc e0f0      	LDI  R31,HIGH(3)
0063dd c02e      	RJMP _0x20E0075
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
0063de 35e0      	CPI  R30,LOW(0x50)
0063df e0a0      	LDI  R26,HIGH(0x50)
0063e0 07fa      	CPC  R31,R26
0063e1 f419      	BRNE _0x16000A
0063e2 e2e6      	LDI  R30,LOW(38)
0063e3 e0f0      	LDI  R31,HIGH(38)
0063e4 c027      	RJMP _0x20E0075
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
0063e5 36e0      	CPI  R30,LOW(0x60)
0063e6 e0a0      	LDI  R26,HIGH(0x60)
0063e7 07fa      	CPC  R31,R26
0063e8 f419      	BRNE _0x16000B
0063e9 e0e5      	LDI  R30,LOW(5)
0063ea e0f0      	LDI  R31,HIGH(5)
0063eb c020      	RJMP _0x20E0075
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
0063ec 37e0      	CPI  R30,LOW(0x70)
0063ed e0a0      	LDI  R26,HIGH(0x70)
0063ee 07fa      	CPC  R31,R26
0063ef f419      	BRNE _0x16000C
0063f0 e2e9      	LDI  R30,LOW(41)
0063f1 e0f0      	LDI  R31,HIGH(41)
0063f2 c019      	RJMP _0x20E0075
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
0063f3 38e0      	CPI  R30,LOW(0x80)
0063f4 e0a0      	LDI  R26,HIGH(0x80)
0063f5 07fa      	CPC  R31,R26
0063f6 f419      	BRNE _0x16000D
0063f7 e2e5      	LDI  R30,LOW(37)
0063f8 e0f0      	LDI  R31,HIGH(37)
0063f9 c012      	RJMP _0x20E0075
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
0063fa 39e0      	CPI  R30,LOW(0x90)
0063fb e0a0      	LDI  R26,HIGH(0x90)
0063fc 07fa      	CPC  R31,R26
0063fd f419      	BRNE _0x16000F
0063fe e1e2      	LDI  R30,LOW(18)
0063ff e0f0      	LDI  R31,HIGH(18)
006400 c00b      	RJMP _0x20E0075
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
006401 efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
006402 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
006403 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
006404 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
006405 940e e400 	CALL __PUTPARD1
006407 2fe1      	MOV  R30,R17
006408 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0018                                     return -1;
00640a efef      	LDI  R30,LOW(65535)
00640b efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E0075:
00640c 8118      	LDD  R17,Y+0
                 _0x20E0076:
00640d 9622      	ADIW R28,2
00640e 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
00640f 940e ce40 	CALL SUBOPT_0x1DC
006411 940e c45d 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
006413 e020     +LDI R18 , LOW ( 0 )
006414 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
006415 e050      	LDI  R21,0
006416 85ec      	LDD  R30,Y+12
006417 7fe0      	ANDI R30,LOW(0xF0)
006418 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
006419 2fe5      	MOV  R30,R21
00641a 940e c462 	CALL SUBOPT_0x47
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
00641c f011      	BREQ PC+3
00641d 940c 648d 	JMP _0x160013
00641f 940e c8cc 	CALL SUBOPT_0xF8
006421 940e ce43 	CALL SUBOPT_0x1DD
                 ; 000B 0029                                     if(cnfgStrc == NULL){
006423 f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
006424 e2e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
006425 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
006426 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
006427 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
006428 940e e400 	CALL __PUTPARD1
                +
00642a eae1     +LDI R30 , LOW ( 0xA1 )
00642b e0f0     +LDI R31 , HIGH ( 0xA1 )
00642c e060     +LDI R22 , BYTE3 ( 0xA1 )
00642d e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
00642e 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 002B                                         return -2;
006430 efee      	LDI  R30,LOW(65534)
006431 efff      	LDI  R31,HIGH(65534)
006432 c408      	RJMP _0x20E0074
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
006433 81ae      	LDD  R26,Y+6
006434 81bf      	LDD  R27,Y+6+1
006435 940e 496a 	CALL _getPropertiesConfig
006437 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
006438 2333      	TST  R19
006439 f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
00643a e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
00643b e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
00643c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
00643d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
00643e 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0031                                         free ( cnfgStrc );
006440 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 0032                                         return -3;
006442 efed      	LDI  R30,LOW(65533)
006443 efff      	LDI  R31,HIGH(65533)
006444 c3f6      	RJMP _0x20E0074
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
006445 e8ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
006446 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
006447 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
006448 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
006449 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
00644b 940e ce49 	CALL SUBOPT_0x1DE
00644d 940e c3d6 	CALL SUBOPT_0x34
00644f 940e c2ea 	CALL SUBOPT_0x12
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
006451 940e ce49 	CALL SUBOPT_0x1DE
006453 9674      	ADIW R30,20
006454 940e c3d6 	CALL SUBOPT_0x34
006456 940e c2ea 	CALL SUBOPT_0x12
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
006458 940e ce49 	CALL SUBOPT_0x1DE
00645a 96b8      	ADIW R30,40
00645b 940e c3d6 	CALL SUBOPT_0x34
00645d 940e c2ea 	CALL SUBOPT_0x12
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
00645f 940e ce49 	CALL SUBOPT_0x1DE
006461 5be0      	SUBI R30,LOW(-80)
006462 4fff      	SBCI R31,HIGH(-80)
006463 940e c3d6 	CALL SUBOPT_0x34
006465 940e c2ea 	CALL SUBOPT_0x12
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
006467 940e ce49 	CALL SUBOPT_0x1DE
006469 59ec      	SUBI R30,LOW(-100)
00646a 4fff      	SBCI R31,HIGH(-100)
00646b 940e c3d6 	CALL SUBOPT_0x34
00646d 940e c2ea 	CALL SUBOPT_0x12
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
00646f 940e ce49 	CALL SUBOPT_0x1DE
006471 57e4      	SUBI R30,LOW(-140)
006472 4fff      	SBCI R31,HIGH(-140)
006473 940e c3d6 	CALL SUBOPT_0x34
006475 940e c2ea 	CALL SUBOPT_0x12
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
006477 ebe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
006478 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
006479 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
00647a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
00647b 940e c9e9 	CALL SUBOPT_0x128
00647d 56a0      	SUBI R26,LOW(-160)
00647e 4fbf      	SBCI R27,HIGH(-160)
00647f 91ec      	LD   R30,X
006480 940e e2d7 	CALL __CBD1
006482 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
006484 940e ce4e 	CALL SUBOPT_0x1DF
006486 940e c8cc 	CALL SUBOPT_0xF8
006488 940e ce53 	CALL SUBOPT_0x1E0
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
00648a eae1      	LDI  R30,LOW(161)
00648b e0f0      	LDI  R31,HIGH(161)
00648c c3ae      	RJMP _0x20E0074
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
00648d 32e0      	CPI  R30,LOW(0x20)
00648e e0a0      	LDI  R26,HIGH(0x20)
00648f 07fa      	CPC  R31,R26
006490 f011      	BREQ PC+3
006491 940c 64fa 	JMP _0x160016
006493 940e ce56 	CALL SUBOPT_0x1E1
006495 940e ce43 	CALL SUBOPT_0x1DD
                 ; 000B 004A                                     if(cnfgStrc == NULL){
006497 f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
006498 ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
006499 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
00649a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
00649b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
00649c 940e e400 	CALL __PUTPARD1
                +
00649e e0e8     +LDI R30 , LOW ( 0x8 )
00649f e0f0     +LDI R31 , HIGH ( 0x8 )
0064a0 e060     +LDI R22 , BYTE3 ( 0x8 )
0064a1 e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
0064a2 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 004C                                         return -2;
0064a4 efee      	LDI  R30,LOW(65534)
0064a5 efff      	LDI  R31,HIGH(65534)
0064a6 c394      	RJMP _0x20E0074
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
0064a7 81ae      	LDD  R26,Y+6
0064a8 81bf      	LDD  R27,Y+6+1
0064a9 940e 49ff 	CALL _getOperatingConfig
0064ab 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
0064ac 2333      	TST  R19
0064ad f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
0064ae eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
0064af e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
0064b0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
0064b1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
0064b2 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0052                                         free ( cnfgStrc );
0064b4 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 0053                                         return -3;
0064b6 efed      	LDI  R30,LOW(65533)
0064b7 efff      	LDI  R31,HIGH(65533)
0064b8 c382      	RJMP _0x20E0074
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
0064b9 e1ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
0064ba e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
0064bb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
0064bc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
0064bd 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
0064bf e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
0064c0 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
0064c1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
0064c2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
0064c3 940e c9e9 	CALL SUBOPT_0x128
0064c5 91ec      	LD   R30,X
0064c6 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
0064c8 e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
0064c9 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
0064ca e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
0064cb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
0064cc 940e c9ee 	CALL SUBOPT_0x129
0064ce 81e1      	LDD  R30,Z+1
0064cf 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
0064d1 940e ce59 	CALL SUBOPT_0x1E2
0064d3 81e2      	LDD  R30,Z+2
0064d4 940e c388 	CALL SUBOPT_0x29
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
0064d6 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
0064d7 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
0064d8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
0064d9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
0064da 940e c274 	CALL SUBOPT_0x3
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0064dc e000     +LDI R16 , LOW ( 0 )
0064dd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
0064de 3005     +CPI R16 , LOW ( 5 )
0064df e0e0     +LDI R30 , HIGH ( 5 )
0064e0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0064e1 f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
0064e2 940e ce5e 	CALL SUBOPT_0x1E3
0064e4 940e c929 	CALL SUBOPT_0x107
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
0064e6 e0e4      	LDI  R30,LOW(4)
0064e7 e0f0      	LDI  R31,HIGH(4)
0064e8 17e0      	CP   R30,R16
0064e9 07f1      	CPC  R31,R17
0064ea f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
0064eb 940e ce63 	CALL SUBOPT_0x1E4
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
0064ed 5f0f     +SUBI R16 , LOW ( - 1 )
0064ee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0064ef cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
0064f0 940e ce4e 	CALL SUBOPT_0x1DF
0064f2 e0a8      	LDI  R26,LOW(8)
0064f3 940e cddb 	CALL SUBOPT_0x1CC
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
0064f5 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
0064f7 e0e8      	LDI  R30,LOW(8)
0064f8 e0f0      	LDI  R31,HIGH(8)
0064f9 c341      	RJMP _0x20E0074
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
0064fa 33e0      	CPI  R30,LOW(0x30)
0064fb e0a0      	LDI  R26,HIGH(0x30)
0064fc 07fa      	CPC  R31,R26
0064fd f011      	BREQ PC+3
0064fe 940c 65bb 	JMP _0x16001D
006500 940e ce69 	CALL SUBOPT_0x1E5
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
006502 e1ad      	LDI  R26,LOW(29)
006503 940e ce70 	CALL SUBOPT_0x1E6
                 ; 000B 0070                                     if(cnfgStrc == NULL){
006505 f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
006506 eae3     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
006507 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
006508 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
006509 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
00650a 940e e400 	CALL __PUTPARD1
                +
00650c e1ed     +LDI R30 , LOW ( 0x1D )
00650d e0f0     +LDI R31 , HIGH ( 0x1D )
00650e e060     +LDI R22 , BYTE3 ( 0x1D )
00650f e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
006510 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 0072                                         return -2;
006512 efee      	LDI  R30,LOW(65534)
006513 efff      	LDI  R31,HIGH(65534)
006514 c326      	RJMP _0x20E0074
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
006515 940e cc7c 	CALL SUBOPT_0x194
006517 85a8      	LDD  R26,Y+8
006518 85b9      	LDD  R27,Y+8+1
006519 940e 4a6d 	CALL _getSensorConfig
00651b 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
00651c 2333      	TST  R19
00651d f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
00651e ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
00651f e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
006520 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
006521 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
006522 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0078                                         free ( cnfgStrc );
006524 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 0079                                         return -3;
006526 efed      	LDI  R30,LOW(65533)
006527 efff      	LDI  R31,HIGH(65533)
006528 c312      	RJMP _0x20E0074
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
006529 e0e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
00652a e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
00652b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
00652c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
00652d 940e ce72 	CALL SUBOPT_0x1E7
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
00652f e2e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
006530 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
006531 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
006532 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
006533 940e c9e9 	CALL SUBOPT_0x128
006535 940e c33e 	CALL SUBOPT_0x1E
006537 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
006539 e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
00653a e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
00653b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
00653c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
00653d 940e c9e9 	CALL SUBOPT_0x128
00653f 9612      	ADIW R26,2
006540 940e c33e 	CALL SUBOPT_0x1E
006542 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
006544 e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
006545 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
006546 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
006547 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
006548 940e c9ee 	CALL SUBOPT_0x129
00654a 81e4      	LDD  R30,Z+4
00654b 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
00654d e6ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
00654e e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
00654f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
006550 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
006551 940e c9ee 	CALL SUBOPT_0x129
006553 81e5      	LDD  R30,Z+5
006554 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
006556 e8e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
006557 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
006558 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
006559 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
00655a 940e c9ee 	CALL SUBOPT_0x129
00655c 81e6      	LDD  R30,Z+6
00655d 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
00655f e9e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
006560 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
006561 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
006562 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
006563 940e c9ee 	CALL SUBOPT_0x129
006565 81e7      	LDD  R30,Z+7
006566 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
006568 940e ce59 	CALL SUBOPT_0x1E2
00656a 85e0      	LDD  R30,Z+8
00656b 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
00656d eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
00656e e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
00656f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
006570 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
006571 940e c9ee 	CALL SUBOPT_0x129
006573 940e ccab 	CALL SUBOPT_0x19C
006575 940e cca7 	CALL SUBOPT_0x19B
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
006577 ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
006578 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
006579 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
00657a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
00657b 940e c9e9 	CALL SUBOPT_0x128
00657d 961d      	ADIW R26,13
00657e 940e c33e 	CALL SUBOPT_0x1E
006580 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
006582 eded     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
006583 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
006584 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
006585 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
006586 940e c9ee 	CALL SUBOPT_0x129
                +
006588 85a7     +LDD R26 , Z + 15
006589 89b0     +LDD R27 , Z + 15 + 1
00658a 8981     +LDD R24 , Z + 15 + 2
00658b 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
00658c 940e cca7 	CALL SUBOPT_0x19B
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
00658e efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
00658f e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
006590 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
006591 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
006592 940e c9ee 	CALL SUBOPT_0x129
                +
006594 89a3     +LDD R26 , Z + 19
006595 89b4     +LDD R27 , Z + 19 + 1
006596 8985     +LDD R24 , Z + 19 + 2
006597 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
006598 940e cca7 	CALL SUBOPT_0x19B
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
00659a e0eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
00659b e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
00659c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
00659d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
00659e 940e c9e9 	CALL SUBOPT_0x128
0065a0 9657      	ADIW R26,23
0065a1 940e c33e 	CALL SUBOPT_0x1E
0065a3 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
0065a5 e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
0065a6 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
0065a7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
0065a8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
0065a9 940e c9ee 	CALL SUBOPT_0x129
                +
0065ab 8da1     +LDD R26 , Z + 25
0065ac 8db2     +LDD R27 , Z + 25 + 1
0065ad 8d83     +LDD R24 , Z + 25 + 2
0065ae 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
0065af 940e cca7 	CALL SUBOPT_0x19B
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
0065b1 940e ce4e 	CALL SUBOPT_0x1DF
0065b3 e1ad      	LDI  R26,LOW(29)
0065b4 940e cddb 	CALL SUBOPT_0x1CC
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
0065b6 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
0065b8 e1ed      	LDI  R30,LOW(29)
0065b9 e0f0      	LDI  R31,HIGH(29)
0065ba c280      	RJMP _0x20E0074
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
0065bb 34e0      	CPI  R30,LOW(0x40)
0065bc e0a0      	LDI  R26,HIGH(0x40)
0065bd 07fa      	CPC  R31,R26
0065be f011      	BREQ PC+3
0065bf 940c 6604 	JMP _0x160020
0065c1 940e ce69 	CALL SUBOPT_0x1E5
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
0065c3 940e c5a1 	CALL SUBOPT_0x76
0065c5 940e ce43 	CALL SUBOPT_0x1DD
                 ; 000B 0099                                     if(cnfgStrc == NULL){
0065c7 f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
0065c8 e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
0065c9 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
0065ca e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
0065cb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
0065cc 940e ce77 	CALL SUBOPT_0x1E8
                 ; 000B 009B                                         return -2;
0065ce efee      	LDI  R30,LOW(65534)
0065cf efff      	LDI  R31,HIGH(65534)
0065d0 c26a      	RJMP _0x20E0074
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
0065d1 940e cc7c 	CALL SUBOPT_0x194
0065d3 85a8      	LDD  R26,Y+8
0065d4 85b9      	LDD  R27,Y+8+1
0065d5 940e 4b55 	CALL _getAuxDinConfig
0065d7 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
0065d8 2333      	TST  R19
0065d9 f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
0065da e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
0065db e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
0065dc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
0065dd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
0065de 940e c274 	CALL SUBOPT_0x3
                 ; 000B 00A1                                         free ( cnfgStrc );
0065e0 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 00A2                                         return -3;
0065e2 efed      	LDI  R30,LOW(65533)
0065e3 efff      	LDI  R31,HIGH(65533)
0065e4 c256      	RJMP _0x20E0074
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
0065e5 e9e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
0065e6 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
0065e7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
0065e8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
0065e9 940e ce72 	CALL SUBOPT_0x1E7
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
0065eb 940e ce7e 	CALL SUBOPT_0x1E9
0065ed 91ec      	LD   R30,X
0065ee 940e c388 	CALL SUBOPT_0x29
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
0065f0 ede1     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
0065f1 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
0065f2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
0065f3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
0065f4 940e c9e9 	CALL SUBOPT_0x128
0065f6 9611      	ADIW R26,1
0065f7 940e c33e 	CALL SUBOPT_0x1E
0065f9 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
0065fb 940e ce4e 	CALL SUBOPT_0x1DF
0065fd 940e c5a1 	CALL SUBOPT_0x76
0065ff 940e ce53 	CALL SUBOPT_0x1E0
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
006601 e0e3      	LDI  R30,LOW(3)
006602 e0f0      	LDI  R31,HIGH(3)
006603 c237      	RJMP _0x20E0074
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
006604 35e0      	CPI  R30,LOW(0x50)
006605 e0a0      	LDI  R26,HIGH(0x50)
006606 07fa      	CPC  R31,R26
006607 f011      	BREQ PC+3
006608 940c 666a 	JMP _0x160023
00660a 940e ce69 	CALL SUBOPT_0x1E5
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
00660c e2a6      	LDI  R26,LOW(38)
00660d 940e ce70 	CALL SUBOPT_0x1E6
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
00660f f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
006610 eee9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
006611 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
006612 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
006613 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
006614 940e e400 	CALL __PUTPARD1
                +
006616 e2e6     +LDI R30 , LOW ( 0x26 )
006617 e0f0     +LDI R31 , HIGH ( 0x26 )
006618 e060     +LDI R22 , BYTE3 ( 0x26 )
006619 e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
00661a 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 00B9                                         return -2;
00661c efee      	LDI  R30,LOW(65534)
00661d efff      	LDI  R31,HIGH(65534)
00661e c21c      	RJMP _0x20E0074
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
00661f 940e cc7c 	CALL SUBOPT_0x194
006621 85a8      	LDD  R26,Y+8
006622 85b9      	LDD  R27,Y+8+1
006623 940e 4b8b 	CALL _getAuxDoutConfig
006625 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
006626 2333      	TST  R19
006627 f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
006628 e1ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
006629 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
00662a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
00662b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
00662c 940e c274 	CALL SUBOPT_0x3
                 ; 000B 00BF                                         free ( cnfgStrc );
00662e 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 00C0                                         return -3;
006630 efed      	LDI  R30,LOW(65533)
006631 efff      	LDI  R31,HIGH(65533)
006632 c208      	RJMP _0x20E0074
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
006633 e4e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
006634 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
006635 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
006636 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
006637 940e ce72 	CALL SUBOPT_0x1E7
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
006639 940e ce83 	CALL SUBOPT_0x1EA
00663b 91ec      	LD   R30,X
00663c 940e c388 	CALL SUBOPT_0x29
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
00663e e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
00663f e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
006640 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
006641 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
006642 940e c9ee 	CALL SUBOPT_0x129
006644 81e1      	LDD  R30,Z+1
006645 940e c388 	CALL SUBOPT_0x29
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
006647 940e ce88 	CALL SUBOPT_0x1EB
006649 81e2      	LDD  R30,Z+2
00664a 940e c388 	CALL SUBOPT_0x29
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
00664c 940e ce8d 	CALL SUBOPT_0x1EC
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
00664e e000     +LDI R16 , LOW ( 0 )
00664f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
006650 3203     +CPI R16 , LOW ( 35 )
006651 e0e0     +LDI R30 , HIGH ( 35 )
006652 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006653 f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
006654 940e ce5e 	CALL SUBOPT_0x1E3
006656 940e c929 	CALL SUBOPT_0x107
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
006658 940e ce93 	CALL SUBOPT_0x1ED
00665a f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
00665b 940e ce63 	CALL SUBOPT_0x1E4
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
00665d 5f0f     +SUBI R16 , LOW ( - 1 )
00665e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00665f cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
006660 940e ce4e 	CALL SUBOPT_0x1DF
006662 e2a6      	LDI  R26,LOW(38)
006663 940e cddb 	CALL SUBOPT_0x1CC
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
006665 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
006667 e2e6      	LDI  R30,LOW(38)
006668 e0f0      	LDI  R31,HIGH(38)
006669 c1d1      	RJMP _0x20E0074
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
00666a 36e0      	CPI  R30,LOW(0x60)
00666b e0a0      	LDI  R26,HIGH(0x60)
00666c 07fa      	CPC  R31,R26
00666d f011      	BREQ PC+3
00666e 940c 66b6 	JMP _0x16002A
006670 940e ce69 	CALL SUBOPT_0x1E5
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
006672 e0a5      	LDI  R26,LOW(5)
006673 940e ce70 	CALL SUBOPT_0x1E6
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
006675 f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
006676 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
006677 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
006678 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
006679 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
00667a 940e e400 	CALL __PUTPARD1
                +
00667c e0e5     +LDI R30 , LOW ( 0x5 )
00667d e0f0     +LDI R31 , HIGH ( 0x5 )
00667e e060     +LDI R22 , BYTE3 ( 0x5 )
00667f e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
006680 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 00E0                                         return -2;
006682 efee      	LDI  R30,LOW(65534)
006683 efff      	LDI  R31,HIGH(65534)
006684 c1b6      	RJMP _0x20E0074
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
006685 940e cc7c 	CALL SUBOPT_0x194
006687 85a8      	LDD  R26,Y+8
006688 85b9      	LDD  R27,Y+8+1
006689 940e 4c25 	CALL _getAuxAinConfig
00668b 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
00668c 2333      	TST  R19
00668d f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
00668e efec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
00668f e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
006690 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
006691 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
006692 940e c274 	CALL SUBOPT_0x3
                 ; 000B 00E6                                         free ( cnfgStrc );
006694 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 00E7                                         return -3;
006696 efed      	LDI  R30,LOW(65533)
006697 efff      	LDI  R31,HIGH(65533)
006698 c1a2      	RJMP _0x20E0074
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
006699 e2e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
00669a e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
00669b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
00669c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
00669d 940e ce72 	CALL SUBOPT_0x1E7
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
00669f 940e ce7e 	CALL SUBOPT_0x1E9
0066a1 91ec      	LD   R30,X
0066a2 940e c388 	CALL SUBOPT_0x29
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
0066a4 e4e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
0066a5 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
0066a6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
0066a7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
0066a8 940e c9ee 	CALL SUBOPT_0x129
0066aa 940e ce98 	CALL SUBOPT_0x1EE
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
0066ac 940e ce4e 	CALL SUBOPT_0x1DF
0066ae e0a5      	LDI  R26,LOW(5)
0066af 940e cddb 	CALL SUBOPT_0x1CC
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
0066b1 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
0066b3 e0e5      	LDI  R30,LOW(5)
0066b4 e0f0      	LDI  R31,HIGH(5)
0066b5 c185      	RJMP _0x20E0074
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
0066b6 37e0      	CPI  R30,LOW(0x70)
0066b7 e0a0      	LDI  R26,HIGH(0x70)
0066b8 07fa      	CPC  R31,R26
0066b9 f011      	BREQ PC+3
0066ba 940c 671f 	JMP _0x16002D
0066bc 940e ce69 	CALL SUBOPT_0x1E5
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
0066be e2a9      	LDI  R26,LOW(41)
0066bf 940e ce70 	CALL SUBOPT_0x1E6
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
0066c1 f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
0066c2 e5ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
0066c3 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
0066c4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
0066c5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
0066c6 940e e400 	CALL __PUTPARD1
                +
0066c8 e2e9     +LDI R30 , LOW ( 0x29 )
0066c9 e0f0     +LDI R31 , HIGH ( 0x29 )
0066ca e060     +LDI R22 , BYTE3 ( 0x29 )
0066cb e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
0066cc 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 00FE                                         return -2;
0066ce efee      	LDI  R30,LOW(65534)
0066cf efff      	LDI  R31,HIGH(65534)
0066d0 c16a      	RJMP _0x20E0074
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
0066d1 940e cc7c 	CALL SUBOPT_0x194
0066d3 85a8      	LDD  R26,Y+8
0066d4 85b9      	LDD  R27,Y+8+1
0066d5 940e 4c60 	CALL _getAuxAoutConfig
0066d7 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
0066d8 2333      	TST  R19
0066d9 f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
0066da e9e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
0066db e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
0066dc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
0066dd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
0066de 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0104                                         free ( cnfgStrc );
0066e0 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 0105                                         return -3;
0066e2 efed      	LDI  R30,LOW(65533)
0066e3 efff      	LDI  R31,HIGH(65533)
0066e4 c156      	RJMP _0x20E0074
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
0066e5 ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
0066e6 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
0066e7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
0066e8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
0066e9 940e ce72 	CALL SUBOPT_0x1E7
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
0066eb 940e ce83 	CALL SUBOPT_0x1EA
0066ed 91ec      	LD   R30,X
0066ee 940e c388 	CALL SUBOPT_0x29
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
0066f0 ede9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
0066f1 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
0066f2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
0066f3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
0066f4 940e c9ee 	CALL SUBOPT_0x129
0066f6 940e ce98 	CALL SUBOPT_0x1EE
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
0066f8 940e ce88 	CALL SUBOPT_0x1EB
0066fa 81e5      	LDD  R30,Z+5
0066fb 940e c388 	CALL SUBOPT_0x29
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
0066fd 940e ce8d 	CALL SUBOPT_0x1EC
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0066ff e000     +LDI R16 , LOW ( 0 )
006700 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
006701 3203     +CPI R16 , LOW ( 35 )
006702 e0e0     +LDI R30 , HIGH ( 35 )
006703 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006704 f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
006705 940e ce5e 	CALL SUBOPT_0x1E3
006707 9636      	ADIW R30,6
006708 0fe0      	ADD  R30,R16
006709 1ff1      	ADC  R31,R17
00670a 81e0      	LD   R30,Z
00670b 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
00670d 940e ce93 	CALL SUBOPT_0x1ED
00670f f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
006710 940e ce63 	CALL SUBOPT_0x1E4
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
006712 5f0f     +SUBI R16 , LOW ( - 1 )
006713 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006714 cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
006715 940e ce4e 	CALL SUBOPT_0x1DF
006717 e2a9      	LDI  R26,LOW(41)
006718 940e cddb 	CALL SUBOPT_0x1CC
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
00671a 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
00671c e2e9      	LDI  R30,LOW(41)
00671d e0f0      	LDI  R31,HIGH(41)
00671e c11c      	RJMP _0x20E0074
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
00671f 38e0      	CPI  R30,LOW(0x80)
006720 e0a0      	LDI  R26,HIGH(0x80)
006721 07fa      	CPC  R31,R26
006722 f011      	BREQ PC+3
006723 940c 677e 	JMP _0x160034
006725 e2a5      	LDI  R26,LOW(37)
006726 940e ce70 	CALL SUBOPT_0x1E6
                 ; 000B 0121                                     if(cnfgStrc == NULL){
006728 f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
006729 efe2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
00672a e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
00672b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
00672c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
00672d 940e e400 	CALL __PUTPARD1
                +
00672f e2e5     +LDI R30 , LOW ( 0x25 )
006730 e0f0     +LDI R31 , HIGH ( 0x25 )
006731 e060     +LDI R22 , BYTE3 ( 0x25 )
006732 e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
006733 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 0123                                         return -2;
006735 efee      	LDI  R30,LOW(65534)
006736 efff      	LDI  R31,HIGH(65534)
006737 c103      	RJMP _0x20E0074
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
006738 81ae      	LDD  R26,Y+6
006739 81bf      	LDD  R27,Y+6+1
00673a 940e 4ce5 	CALL _getBuzzerConfig
00673c 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
00673d 2333      	TST  R19
00673e f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
00673f e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
006740 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
006741 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
006742 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
006743 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0129                                         free ( cnfgStrc );
006745 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 012A                                         return -3;
006747 efed      	LDI  R30,LOW(65533)
006748 efff      	LDI  R31,HIGH(65533)
006749 c0f1      	RJMP _0x20E0074
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
00674a e4ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
00674b e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
00674c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
00674d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
00674e 940e c274 	CALL SUBOPT_0x3
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
006750 e6ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
006751 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
006752 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
006753 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
006754 940e c9e9 	CALL SUBOPT_0x128
006756 91ec      	LD   R30,X
006757 940e c388 	CALL SUBOPT_0x29
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
006759 940e ce88 	CALL SUBOPT_0x1EB
00675b 81e1      	LDD  R30,Z+1
00675c 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
00675e 940e ce8d 	CALL SUBOPT_0x1EC
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006760 e000     +LDI R16 , LOW ( 0 )
006761 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
006762 3203     +CPI R16 , LOW ( 35 )
006763 e0e0     +LDI R30 , HIGH ( 35 )
006764 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006765 f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
006766 940e ce5e 	CALL SUBOPT_0x1E3
006768 940e c9f8 	CALL SUBOPT_0x12B
00676a 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
00676c 940e ce93 	CALL SUBOPT_0x1ED
00676e f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
00676f 940e ce63 	CALL SUBOPT_0x1E4
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
006771 5f0f     +SUBI R16 , LOW ( - 1 )
006772 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006773 cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
006774 940e ce4e 	CALL SUBOPT_0x1DF
006776 e2a5      	LDI  R26,LOW(37)
006777 940e cddb 	CALL SUBOPT_0x1CC
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
006779 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
00677b e2e5      	LDI  R30,LOW(37)
00677c e0f0      	LDI  R31,HIGH(37)
00677d c0bd      	RJMP _0x20E0074
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
00677e 39e0      	CPI  R30,LOW(0x90)
00677f e0a0      	LDI  R26,HIGH(0x90)
006780 07fa      	CPC  R31,R26
006781 f011      	BREQ PC+3
006782 940c 67ee 	JMP _0x16003B
006784 e1a2      	LDI  R26,LOW(18)
006785 940e ce70 	CALL SUBOPT_0x1E6
                 ; 000B 0145                                     if(cnfgStrc == NULL){
006787 f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
006788 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
006789 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
00678a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
00678b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
00678c 940e e400 	CALL __PUTPARD1
                +
00678e e1e2     +LDI R30 , LOW ( 0x12 )
00678f e0f0     +LDI R31 , HIGH ( 0x12 )
006790 e060     +LDI R22 , BYTE3 ( 0x12 )
006791 e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
006792 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 0147                                         return -2;
006794 efee      	LDI  R30,LOW(65534)
006795 efff      	LDI  R31,HIGH(65534)
006796 c0a4      	RJMP _0x20E0074
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
006797 81ae      	LDD  R26,Y+6
006798 81bf      	LDD  R27,Y+6+1
006799 940e 4d7c 	CALL _getEnvAlarmConfig
00679b 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
00679c 2333      	TST  R19
00679d f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
00679e ece0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
00679f e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
0067a0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
0067a1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
0067a2 940e c274 	CALL SUBOPT_0x3
                 ; 000B 014D                                         free ( cnfgStrc );
0067a4 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 014E                                         return -3;
0067a6 efed      	LDI  R30,LOW(65533)
0067a7 efff      	LDI  R31,HIGH(65533)
0067a8 c092      	RJMP _0x20E0074
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
0067a9 eeea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
0067aa e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
0067ab e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
0067ac e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
0067ad 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
0067af e0e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
0067b0 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
0067b1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
0067b2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
0067b3 940e c9e9 	CALL SUBOPT_0x128
0067b5 940e ca02 	CALL SUBOPT_0x12D
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
0067b7 e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
0067b8 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
0067b9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
0067ba e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
0067bb 940e c9e9 	CALL SUBOPT_0x128
0067bd 9614      	ADIW R26,4
0067be 940e ca07 	CALL SUBOPT_0x12E
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
0067c0 e3eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
0067c1 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
0067c2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
0067c3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
0067c4 940e c9ee 	CALL SUBOPT_0x129
0067c6 940e ca0f 	CALL SUBOPT_0x130
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
0067c8 e5e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
0067c9 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
0067ca e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
0067cb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
0067cc 940e c9ee 	CALL SUBOPT_0x129
0067ce 940e ca16 	CALL SUBOPT_0x131
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
0067d0 e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
0067d1 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
0067d2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
0067d3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
0067d4 940e c9e9 	CALL SUBOPT_0x128
0067d6 961e      	ADIW R26,14
0067d7 940e ca07 	CALL SUBOPT_0x12E
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
0067d9 e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
0067da e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
0067db e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
0067dc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
0067dd 940e c9e9 	CALL SUBOPT_0x128
0067df 9650      	ADIW R26,16
0067e0 940e c33e 	CALL SUBOPT_0x1E
0067e2 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
0067e4 940e ce4e 	CALL SUBOPT_0x1DF
0067e6 e1a2      	LDI  R26,LOW(18)
0067e7 940e cddb 	CALL SUBOPT_0x1CC
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
0067e9 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
0067eb e1e2      	LDI  R30,LOW(18)
0067ec e0f0      	LDI  R31,HIGH(18)
0067ed c04d      	RJMP _0x20E0074
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
0067ee 3ae0      	CPI  R30,LOW(0xA0)
0067ef e0a0      	LDI  R26,HIGH(0xA0)
0067f0 07fa      	CPC  R31,R26
0067f1 f011      	BREQ PC+3
0067f2 940c 6834 	JMP _0x160041
0067f4 940e c5a1 	CALL SUBOPT_0x76
0067f6 940e ce43 	CALL SUBOPT_0x1DD
                 ; 000B 0164                                     if(cnfgStrc == NULL){
0067f8 f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
0067f9 e9ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
0067fa e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
0067fb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
0067fc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
0067fd 940e ce77 	CALL SUBOPT_0x1E8
                 ; 000B 0166                                         return -2;
0067ff efee      	LDI  R30,LOW(65534)
006800 efff      	LDI  R31,HIGH(65534)
006801 c039      	RJMP _0x20E0074
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
006802 81ae      	LDD  R26,Y+6
006803 81bf      	LDD  R27,Y+6+1
006804 940e 4e0f 	CALL _getStatusReportConfig
006806 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
006807 2333      	TST  R19
006808 f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
006809 ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
00680a e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
00680b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
00680c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
00680d 940e c274 	CALL SUBOPT_0x3
                 ; 000B 016C                                         free ( cnfgStrc );
00680f 940e cb29 	CALL SUBOPT_0x15E
                 ; 000B 016D                                         return -3;
006811 efed      	LDI  R30,LOW(65533)
006812 efff      	LDI  R31,HIGH(65533)
006813 c027      	RJMP _0x20E0074
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
006814 e0e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
006815 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
006816 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
006817 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
006818 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
00681a e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
00681b e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
00681c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
00681d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
00681e 940e c9e9 	CALL SUBOPT_0x128
006820 91ec      	LD   R30,X
006821 940e c388 	CALL SUBOPT_0x29
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
006823 e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
006824 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
006825 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
006826 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
006827 940e c9e9 	CALL SUBOPT_0x128
006829 9611      	ADIW R26,1
00682a 940e c33e 	CALL SUBOPT_0x1E
00682c 940e cc53 	CALL SUBOPT_0x18B
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
00682e 940e ce4e 	CALL SUBOPT_0x1DF
006830 940e c5a1 	CALL SUBOPT_0x76
006832 940e ce53 	CALL SUBOPT_0x1E0
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
006834 940e ce9d 	CALL SUBOPT_0x1EF
006836 2fe5      	MOV  R30,R21
006837 940e c388 	CALL SUBOPT_0x29
                 ; 000B 017D                                     return -1;
006839 efef      	LDI  R30,LOW(65535)
00683a efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E0074:
00683b 940e e47c 	CALL __LOADLOCR6
00683d 962d      	ADIW R28,13
00683e 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
00683f 93ba      	ST   -Y,R27
006840 93aa      	ST   -Y,R26
006841 940e c45d 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
006843 e030      	LDI  R19,0
                +
006844 e040     +LDI R20 , LOW ( 0 )
006845 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
006846 85ea      	LDD  R30,Y+10
006847 7fe0      	ANDI R30,LOW(0xF0)
006848 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
006849 e8e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
00684a e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
00684b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
00684c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
00684d 940e c9ee 	CALL SUBOPT_0x129
00684f 940e c881 	CALL SUBOPT_0xE9
                 ; 000B 018D     print_payload(conf,len);
006851 940e cc7c 	CALL SUBOPT_0x194
006853 85a8      	LDD  R26,Y+8
006854 85b9      	LDD  R27,Y+8+1
006855 940e 9f7c 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
006857 2fe3      	MOV  R30,R19
006858 940e c462 	CALL SUBOPT_0x47
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
00685a f4b9      	BRNE _0x160045
                +
00685b eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
00685c e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
00685d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
00685e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
00685f 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
006861 85a8      	LDD  R26,Y+8
006862 85b9      	LDD  R27,Y+8+1
006863 940e 4e4c 	CALL _setPropertiesConfig
006865 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
006866 2311      	TST  R17
006867 f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
006868 ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
006869 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
00686a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
00686b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
00686c 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0195                                         return -3;
00686e efed      	LDI  R30,LOW(65533)
00686f efff      	LDI  R31,HIGH(65533)
006870 c107      	RJMP _0x20E0073
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
006871 c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
006872 32e0      	CPI  R30,LOW(0x20)
006873 e0a0      	LDI  R26,HIGH(0x20)
006874 07fa      	CPC  R31,R26
006875 f4b9      	BRNE _0x160047
                +
006876 efe3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
006877 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
006878 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
006879 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
00687a 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
00687c 85a8      	LDD  R26,Y+8
00687d 85b9      	LDD  R27,Y+8+1
00687e 940e 4ec3 	CALL _setOperatingConfig
006880 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
006881 2311      	TST  R17
006882 f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
006883 e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
006884 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
006885 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
006886 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
006887 940e c274 	CALL SUBOPT_0x3
                 ; 000B 019D                                         return -3;
006889 efed      	LDI  R30,LOW(65533)
00688a efff      	LDI  R31,HIGH(65533)
00688b c0ec      	RJMP _0x20E0073
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
00688c c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
00688d 33e0      	CPI  R30,LOW(0x30)
00688e e0a0      	LDI  R26,HIGH(0x30)
00688f 07fa      	CPC  R31,R26
006890 f4c9      	BRNE _0x160049
006891 940e cea4 	CALL SUBOPT_0x1F0
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
006893 e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
006894 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
006895 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
006896 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
006897 940e c46a 	CALL SUBOPT_0x49
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
006899 940e ceaa 	CALL SUBOPT_0x1F1
00689b 940e 4f39 	CALL _setSensorConfig
00689d 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
00689e 2311      	TST  R17
00689f f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
0068a0 e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
0068a1 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
0068a2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
0068a3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
0068a4 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01A6                                         return -3;
0068a6 efed      	LDI  R30,LOW(65533)
0068a7 efff      	LDI  R31,HIGH(65533)
0068a8 c0cf      	RJMP _0x20E0073
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
0068a9 c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
0068aa 34e0      	CPI  R30,LOW(0x40)
0068ab e0a0      	LDI  R26,HIGH(0x40)
0068ac 07fa      	CPC  R31,R26
0068ad f4c9      	BRNE _0x16004B
0068ae 940e cea4 	CALL SUBOPT_0x1F0
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
0068b0 e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
0068b1 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
0068b2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
0068b3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
0068b4 940e c46a 	CALL SUBOPT_0x49
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
0068b6 940e ceaa 	CALL SUBOPT_0x1F1
0068b8 940e 5094 	CALL _setAuxDinConfig
0068ba 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
0068bb 2311      	TST  R17
0068bc f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
0068bd eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
0068be e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
0068bf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
0068c0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
0068c1 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01AF                                         return -3;
0068c3 efed      	LDI  R30,LOW(65533)
0068c4 efff      	LDI  R31,HIGH(65533)
0068c5 c0b2      	RJMP _0x20E0073
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
0068c6 c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
0068c7 35e0      	CPI  R30,LOW(0x50)
0068c8 e0a0      	LDI  R26,HIGH(0x50)
0068c9 07fa      	CPC  R31,R26
0068ca f4c9      	BRNE _0x16004D
0068cb 940e cea4 	CALL SUBOPT_0x1F0
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
0068cd ecef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
0068ce e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
0068cf e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
0068d0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
0068d1 940e c46a 	CALL SUBOPT_0x49
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
0068d3 940e ceaa 	CALL SUBOPT_0x1F1
0068d5 940e 50dc 	CALL _setAuxDoutConfig
0068d7 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
0068d8 2311      	TST  R17
0068d9 f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
0068da eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
0068db e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
0068dc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
0068dd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
0068de 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01B8                                         return -3;
0068e0 efed      	LDI  R30,LOW(65533)
0068e1 efff      	LDI  R31,HIGH(65533)
0068e2 c095      	RJMP _0x20E0073
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
0068e3 c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
0068e4 36e0      	CPI  R30,LOW(0x60)
0068e5 e0a0      	LDI  R26,HIGH(0x60)
0068e6 07fa      	CPC  R31,R26
0068e7 f4c9      	BRNE _0x16004F
0068e8 940e cea4 	CALL SUBOPT_0x1F0
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
0068ea e1e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
0068eb e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
0068ec e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
0068ed e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
0068ee 940e c46a 	CALL SUBOPT_0x49
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
0068f0 940e ceaa 	CALL SUBOPT_0x1F1
0068f2 940e 5162 	CALL _setAuxAinConfig
0068f4 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
0068f5 2311      	TST  R17
0068f6 f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
0068f7 e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
0068f8 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
0068f9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
0068fa e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
0068fb 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01C1                                         return -3;
0068fd efed      	LDI  R30,LOW(65533)
0068fe efff      	LDI  R31,HIGH(65533)
0068ff c078      	RJMP _0x20E0073
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
006900 c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
006901 37e0      	CPI  R30,LOW(0x70)
006902 e0a0      	LDI  R26,HIGH(0x70)
006903 07fa      	CPC  R31,R26
006904 f4c9      	BRNE _0x160051
006905 940e cea4 	CALL SUBOPT_0x1F0
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
006907 e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
006908 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
006909 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
00690a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
00690b 940e c46a 	CALL SUBOPT_0x49
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
00690d 940e ceaa 	CALL SUBOPT_0x1F1
00690f 940e 51a2 	CALL _setAuxAoutConfig
006911 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
006912 2311      	TST  R17
006913 f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
006914 e8e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
006915 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
006916 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
006917 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
006918 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01CA                                         return -3;
00691a efed      	LDI  R30,LOW(65533)
00691b efff      	LDI  R31,HIGH(65533)
00691c c05b      	RJMP _0x20E0073
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
00691d c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
00691e 38e0      	CPI  R30,LOW(0x80)
00691f e0a0      	LDI  R26,HIGH(0x80)
006920 07fa      	CPC  R31,R26
006921 f4b9      	BRNE _0x160053
                +
006922 eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
006923 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
006924 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
006925 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
006926 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
006928 85a8      	LDD  R26,Y+8
006929 85b9      	LDD  R27,Y+8+1
00692a 940e 5235 	CALL _setBuzzerConfig
00692c 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
00692d 2311      	TST  R17
00692e f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
00692f ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
006930 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
006931 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
006932 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
006933 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01D2                                         return -3;
006935 efed      	LDI  R30,LOW(65533)
006936 efff      	LDI  R31,HIGH(65533)
006937 c040      	RJMP _0x20E0073
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
006938 c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
006939 39e0      	CPI  R30,LOW(0x90)
00693a e0a0      	LDI  R26,HIGH(0x90)
00693b 07fa      	CPC  R31,R26
00693c f4b9      	BRNE _0x160055
                +
00693d efe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
00693e e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
00693f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
006940 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
006941 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
006943 85a8      	LDD  R26,Y+8
006944 85b9      	LDD  R27,Y+8+1
006945 940e 529b 	CALL _setEnvAlarmConfig
006947 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
006948 2311      	TST  R17
006949 f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
00694a e0ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
00694b e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
00694c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
00694d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
00694e 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01DA                                         return -3;
006950 efed      	LDI  R30,LOW(65533)
006951 efff      	LDI  R31,HIGH(65533)
006952 c025      	RJMP _0x20E0073
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
006953 c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
006954 3ae0      	CPI  R30,LOW(0xA0)
006955 e0a0      	LDI  R26,HIGH(0xA0)
006956 07fa      	CPC  R31,R26
006957 f4b1      	BRNE _0x160059
                +
006958 e3ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
006959 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
00695a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
00695b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
00695c 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
00695e 85a8      	LDD  R26,Y+8
00695f 85b9      	LDD  R27,Y+8+1
006960 940e 5318 	CALL _setStatusReportConfig
006962 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
006963 2311      	TST  R17
006964 f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
006965 e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
006966 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
006967 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
006968 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
006969 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01E2                                         return -3;
00696b efed      	LDI  R30,LOW(65533)
00696c efff      	LDI  R31,HIGH(65533)
00696d c00a      	RJMP _0x20E0073
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
00696e 940e ce9d 	CALL SUBOPT_0x1EF
006970 2fe3      	MOV  R30,R19
006971 940e c388 	CALL SUBOPT_0x29
                 ; 000B 01E6                                     return -1;
006973 efef      	LDI  R30,LOW(65535)
006974 efff      	LDI  R31,HIGH(65535)
006975 c002      	RJMP _0x20E0073
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
006976 e0e0      	LDI  R30,LOW(0)
006977 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0073:
006978 940e e47c 	CALL __LOADLOCR6
00697a 962b      	ADIW R28,11
00697b 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
00697c 940e e405 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
00697e 940e c617 	CALL SUBOPT_0x89
006980 940e c62a 	CALL SUBOPT_0x8C
006982 940e e470 	CALL __CPD21
006984 f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
006985 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
006986 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
006987 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
006988 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
006989 940e ceaf 	CALL SUBOPT_0x1F2
00698b 940e ceaf 	CALL SUBOPT_0x1F2
00698d 940e c34d 	CALL SUBOPT_0x21
                 ; 000B 01EF         return -1;
00698f efef      	LDI  R30,LOW(65535)
006990 efff      	LDI  R31,HIGH(65535)
006991 c0e4      	RJMP _0x20E0070
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
006992 e0e0      	LDI  R30,LOW(0)
006993 e0f0      	LDI  R31,HIGH(0)
006994 c0e1      	RJMP _0x20E0070
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
006995 940e ce40 	CALL SUBOPT_0x1DC
006997 931a      	ST   -Y,R17
006998 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
006999 940e ceb3 	CALL SUBOPT_0x1F3
00699b 85e8      	LDD  R30,Y+8
00699c 85f9      	LDD  R31,Y+8+1
00699d 940e c484 	CALL SUBOPT_0x4D
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
00699f 940e ceb8 	CALL SUBOPT_0x1F4
0069a1 f449      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
0069a2 eced     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
0069a3 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
0069a4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
0069a5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
0069a6 940e c274 	CALL SUBOPT_0x3
                 ; 000B 01FE         return -1;
0069a8 efef      	LDI  R30,LOW(65535)
0069a9 efff      	LDI  R31,HIGH(65535)
0069aa c018      	RJMP _0x20E0072
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
0069ab efe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
0069ac e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
0069ad e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
0069ae e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
0069af 940e cebc 	CALL SUBOPT_0x1F5
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
0069b1 940e c732 	CALL SUBOPT_0xB4
0069b3 940e 4812 	CALL _RTC_setBinary
0069b5 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
0069b6 2311      	TST  R17
0069b7 f44a      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
0069b8 e2ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
0069b9 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
0069ba e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
0069bb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
0069bc 940e cebc 	CALL SUBOPT_0x1F5
                 ; 000B 0206         return -1;
0069be efef      	LDI  R30,LOW(65535)
0069bf efff      	LDI  R31,HIGH(65535)
0069c0 c002      	RJMP _0x20E0072
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
0069c1 e0e0      	LDI  R30,LOW(0)
0069c2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0072:
0069c3 8119      	LDD  R17,Y+1
0069c4 8108      	LDD  R16,Y+0
0069c5 9628      	ADIW R28,8
0069c6 9508      	RET
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
0069c7 940e cec0 	CALL SUBOPT_0x1F6
                 ;	period -> Y+2
                 ;	res -> R16,R17
0069c9 940e ceb8 	CALL SUBOPT_0x1F4
0069cb f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
0069cc e5ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
0069cd e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
0069ce e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
0069cf e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
0069d0 940e c274 	CALL SUBOPT_0x3
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
0069d2 c023      	RJMP _0x16005E
                 _0x16005D:
0069d3 940e c732 	CALL SUBOPT_0xB4
                +
0069d5 32ac     +CPI R26 , LOW ( 0x12C )
0069d6 e0e1     +LDI R30 , HIGH ( 0x12C )
0069d7 07be     +CPC R27 , R30
0069d8 e0e0     +LDI R30 , BYTE3 ( 0x12C )
0069d9 078e     +CPC R24 , R30
0069da e0e0     +LDI R30 , BYTE4 ( 0x12C )
0069db 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
0069dc f050      	BRLO _0x160060
0069dd 940e c732 	CALL SUBOPT_0xB4
                +
0069df 38a1     +CPI R26 , LOW ( 0x15181 )
0069e0 e5e1     +LDI R30 , HIGH ( 0x15181 )
0069e1 07be     +CPC R27 , R30
0069e2 e0e1     +LDI R30 , BYTE3 ( 0x15181 )
0069e3 078e     +CPC R24 , R30
0069e4 e0e0     +LDI R30 , BYTE4 ( 0x15181 )
0069e5 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
0069e6 f048      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
0069e7 e8e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
0069e8 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
0069e9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
0069ea e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
0069eb 940e cebc 	CALL SUBOPT_0x1F5
                 ; 000B 0215         return -1;
0069ed efef      	LDI  R30,LOW(65535)
0069ee efff      	LDI  R31,HIGH(65535)
0069ef c018      	RJMP _0x20E0071
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
0069f0 eaea     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
0069f1 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
0069f2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
0069f3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
0069f4 940e cebc 	CALL SUBOPT_0x1F5
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
0069f6 940e c732 	CALL SUBOPT_0xB4
0069f8 940e 7e04 	CALL _ALARM_mute
0069fa 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
0069fb 2311      	TST  R17
0069fc f44a      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
0069fd ede5     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
0069fe e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
0069ff e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
006a00 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
006a01 940e cebc 	CALL SUBOPT_0x1F5
                 ; 000B 021E         return -1;
006a03 efef      	LDI  R30,LOW(65535)
006a04 efff      	LDI  R31,HIGH(65535)
006a05 c002      	RJMP _0x20E0071
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
006a06 e0e0      	LDI  R30,LOW(0)
006a07 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0071:
006a08 8119      	LDD  R17,Y+1
006a09 8108      	LDD  R16,Y+0
006a0a 9626      	ADIW R28,6
006a0b 9508      	RET
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
006a0c e0e0      	LDI  R30,LOW(0)
006a0d e0f0      	LDI  R31,HIGH(0)
006a0e 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
006a0f 940e c5e5 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
006a11 d0cd      	RCALL _ETH_findFreeSlotWaitQueue
006a12 2f0e      	MOV  R16,R30
006a13 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
006a14 2311      	TST  R17
006a15 f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
006a16 e0e2     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
006a17 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
006a18 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
006a19 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
006a1a 940e c274 	CALL SUBOPT_0x3
                 ; 000C 0017         return -1;
006a1c efef      	LDI  R30,LOW(65535)
006a1d efff      	LDI  R31,HIGH(65535)
006a1e c055      	RJMP _0x20E006F
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
006a1f 940e cb8e 	CALL SUBOPT_0x16F
                +
006a21 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
006a22 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
006a23 93ff      	PUSH R31
006a24 93ef      	PUSH R30
006a25 81ac      	LDD  R26,Y+4
006a26 81bd      	LDD  R27,Y+4+1
006a27 940e a753 	CALL _malloc
006a29 91af      	POP  R26
006a2a 91bf      	POP  R27
006a2b 93ed      	ST   X+,R30
006a2c 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
006a2d 940e cb8e 	CALL SUBOPT_0x16F
006a2f 940e cbcb 	CALL SUBOPT_0x176
006a31 9730      	SBIW R30,0
006a32 f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
006a33 e3e7     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
006a34 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
006a35 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
006a36 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
006a37 940e c98b 	CALL SUBOPT_0x118
                 ; 000C 001F         return -1;
006a39 efef      	LDI  R30,LOW(65535)
006a3a efff      	LDI  R31,HIGH(65535)
006a3b c038      	RJMP _0x20E006F
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
006a3c 940e cb8e 	CALL SUBOPT_0x16F
006a3e 940e cbcb 	CALL SUBOPT_0x176
006a40 93fa      	ST   -Y,R31
006a41 93ea      	ST   -Y,R30
006a42 940e cc7c 	CALL SUBOPT_0x194
006a44 85a8      	LDD  R26,Y+8
006a45 85b9      	LDD  R27,Y+8+1
006a46 940e a790 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
006a48 940e cb8e 	CALL SUBOPT_0x16F
                +
006a4a 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006a4b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006a4c 81ac      	LDD  R26,Y+4
006a4d 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
006a4e 940e cb8e 	CALL SUBOPT_0x16F
                +
006a50 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
006a51 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
006a52 85a8      	LDD  R26,Y+8
006a53 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
006a54 940e cb8e 	CALL SUBOPT_0x16F
006a56 940e cec5 	CALL SUBOPT_0x1F7
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
006a58 940e cb8e 	CALL SUBOPT_0x16F
                +
006a5a 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
006a5b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
006a5c 81aa      	LDD  R26,Y+2
006a5d 81bb      	LDD  R27,Y+2+1
006a5e 83a0      	STD  Z+0,R26
006a5f 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
006a60 940e cb8e 	CALL SUBOPT_0x16F
006a62 940e cbbd 	CALL SUBOPT_0x174
006a64 940e cbc2 	CALL SUBOPT_0x175
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
006a66 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
006a67 e5ee     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
006a68 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
006a69 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
006a6a e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
006a6b 940e ceca 	CALL SUBOPT_0x1F8
006a6d 01f8      	MOVW R30,R16
006a6e 940e e2dd 	CALL __CWD1
006a70 940e c34d 	CALL SUBOPT_0x21
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
006a72 2de7      	MOV  R30,R7
006a73 e0f0      	LDI  R31,0
                 _0x20E006F:
006a74 8119      	LDD  R17,Y+1
006a75 8108      	LDD  R16,Y+0
                 _0x20E0070:
006a76 9629      	ADIW R28,9
006a77 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a78 93aa      	ST   -Y,R26
006a79 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a7a e010      	LDI  R17,LOW(0)
                 _0x180006:
006a7b 301f      	CPI  R17,15
006a7c f4f8      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
006a7d 940e cecf 	CALL SUBOPT_0x1F9
006a7f 81e0      	LD   R30,Z
006a80 81a9      	LDD  R26,Y+1
006a81 17ea      	CP   R30,R26
006a82 f4b9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
006a83 e0ab      	LDI  R26,LOW(11)
006a84 9f1a      	MUL  R17,R26
006a85 01f0      	MOVW R30,R0
006a86 940e cbcb 	CALL SUBOPT_0x176
006a88 940e ced5 	CALL SUBOPT_0x1FA
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
006a8a 940e cee9 	CALL SUBOPT_0x1FB
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
006a8c 940e ceef 	CALL SUBOPT_0x1FC
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
006a8e 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
006a8f eae9     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
006a90 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
006a91 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
006a92 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
006a93 940e cf02 	CALL SUBOPT_0x1FD
006a95 940e cf07 	CALL SUBOPT_0x1FE
                 ; 000C 0044             return ETH_waitQCount;
006a97 2de7      	MOV  R30,R7
006a98 e0f0      	LDI  R31,0
006a99 c042      	RJMP _0x20E006D
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
006a9a 5f1f      	SUBI R17,-1
006a9b cfdf      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
006a9c efe6     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
006a9d e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
006a9e e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
006a9f e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
006aa0 940e e400 	CALL __PUTPARD1
006aa2 81ed      	LDD  R30,Y+5
006aa3 940e c388 	CALL SUBOPT_0x29
                 ; 000C 0048     return -1;
006aa5 efef      	LDI  R30,LOW(65535)
006aa6 efff      	LDI  R31,HIGH(65535)
006aa7 c034      	RJMP _0x20E006D
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006aa8 931a      	ST   -Y,R17
                 ;	i -> R17
006aa9 e010      	LDI  R17,LOW(0)
                 _0x18000A:
006aaa 301f      	CPI  R17,15
006aab f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
006aac e0ab      	LDI  R26,LOW(11)
006aad 9f1a      	MUL  R17,R26
006aae 01f0      	MOVW R30,R0
006aaf 940e cbcb 	CALL SUBOPT_0x176
006ab1 940e ced5 	CALL SUBOPT_0x1FA
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
006ab3 940e cee9 	CALL SUBOPT_0x1FB
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
006ab5 940e ceef 	CALL SUBOPT_0x1FC
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
006ab7 5f1f      	SUBI R17,-1
006ab8 cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
006ab9 c050      	RJMP _0x20E006B
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006aba 93aa      	ST   -Y,R26
006abb 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006abc e010      	LDI  R17,LOW(0)
                 _0x18000D:
006abd 301f      	CPI  R17,15
006abe f450      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
006abf 940e cecf 	CALL SUBOPT_0x1F9
006ac1 81e0      	LD   R30,Z
006ac2 81a9      	LDD  R26,Y+1
006ac3 17ea      	CP   R30,R26
006ac4 f411      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
006ac5 e0e1      	LDI  R30,LOW(1)
006ac6 c015      	RJMP _0x20E006D
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
006ac7 5f1f      	SUBI R17,-1
006ac8 cff4      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
006ac9 c011      	RJMP _0x20E006E
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
006aca 93aa      	ST   -Y,R26
006acb 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006acc e010      	LDI  R17,LOW(0)
                 _0x180011:
006acd 3614      	CPI  R17,100
006ace f460      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
006acf 940e c706 	CALL SUBOPT_0xAB
006ad1 51e4      	SUBI R30,LOW(-_sess_list)
006ad2 4efb      	SBCI R31,HIGH(-_sess_list)
006ad3 81e0      	LD   R30,Z
006ad4 81a9      	LDD  R26,Y+1
006ad5 17ea      	CP   R30,R26
006ad6 f411      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
006ad7 e0e1      	LDI  R30,LOW(1)
006ad8 c003      	RJMP _0x20E006D
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
006ad9 5f1f      	SUBI R17,-1
006ada cff2      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
                 _0x20E006E:
006adb e0e0      	LDI  R30,LOW(0)
                 _0x20E006D:
006adc 8118      	LDD  R17,Y+0
006add 9622      	ADIW R28,2
006ade 9508      	RET
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006adf 931a      	ST   -Y,R17
                 ;	i -> R17
006ae0 e010      	LDI  R17,LOW(0)
                 _0x180015:
006ae1 301f      	CPI  R17,15
006ae2 f450      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
006ae3 e0ab      	LDI  R26,LOW(11)
006ae4 9f1a      	MUL  R17,R26
006ae5 01f0      	MOVW R30,R0
                +
006ae6 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006ae7 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006ae8 81e0      	LD   R30,Z
006ae9 30e0      	CPI  R30,0
006aea f0f1      	BREQ _0x20E006C
                 ; 000C 0079             return i;
                 ; 000C 007A         }
                 ; 000C 007B     }
006aeb 5f1f      	SUBI R17,-1
006aec cff4      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
006aed efef      	LDI  R30,LOW(255)
006aee c01b      	RJMP _0x20E006B
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
006aef 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
006af0 940e a69e 	CALL _rand
006af2 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
006af3 2fa1      	MOV  R26,R17
006af4 dfc5      	RCALL _ETH_isIdExist
006af5 30e0      	CPI  R30,0
006af6 f441      	BRNE _0x18001B
006af7 3010      	CPI  R17,0
006af8 f031      	BREQ _0x18001B
006af9 3f1f      	CPI  R17,255
006afa f021      	BREQ _0x18001B
006afb 2fa1      	MOV  R26,R17
006afc dfcd      	RCALL _ETH_isIdUsed
006afd 30e0      	CPI  R30,0
006afe f009      	BREQ _0x18001A
                 _0x18001B:
006aff cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
006b00 01f4      	MOVW R30,R8
006b01 51e4      	SUBI R30,LOW(-_sess_list)
006b02 4efb      	SBCI R31,HIGH(-_sess_list)
006b03 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
006b04 01d4      	MOVW R26,R8
006b05 9611      	ADIW R26,1
006b06 940e cf0d 	CALL SUBOPT_0x1FF
006b08 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
                 _0x20E006C:
006b09 2fe1      	MOV  R30,R17
                 _0x20E006B:
006b0a 9119      	LD   R17,Y+
006b0b 9508      	RET
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;#include "ad595.h"
                 ;
                 ;struct sens_val_st      sensor[5];
                 ;
                 ;/******************
                 ;Y = mX + c
                 ;temp = (epFactor_B * adc) + epFactor_C
                 ;******************/
                 ;
                 ;eeprom float            epFactor_A[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_B[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_C[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet1[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef1[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef1[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet2[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef2[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef2[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet3[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef3[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef3[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epCalType[5]            = {CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT};
                 ;
                 ;flash float             epTMECTempSlope         = -0.1114;
                 ;flash float             epTMECTempOffset        = 63.73;
                 ;
                 ;flash float             epPT100TempSlope         = 1.0938;
                 ;flash float             epPT100TempOffset        = -208.42;
                 ;
                 ;//flash float             epPT100Temp_A           = 0.00005;
                 ;//flash float             epPT100Temp_B           = 0.1308;
                 ;//flash float             epPT100Temp_C           = -221.71;
                 ;
                 ;flash float             epPT100Temp_A           = 0.000633;
                 ;flash float             epPT100Temp_B           = 0.162124;
                 ;flash float             epPT100Temp_C           = -180.886306;
                 ;
                 ;// Parameter for sensor pt100
                 ;flash float             tempTable[15]           = {-80.0, -70.0, -60.0, -50.0, -40.0, -30.0, -20.0, -10.0, 0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0};
                 ;//flash float             voltTable[13]           = {0.7276, 0.7734, 0.8176, 0.8604, 0.9019, 0.9420, 0.9810, 1.0188, 1.0556, 1.0912, 1.1259, 1.1596, 1.1924};
                 ;flash float             adcTable[15]            = {290.7750, 309.0467, 326.7189, 343.8240, 360.3923, 376.4502, 392.0239,
                 ;                                                    407.1367, 421.8099, 436.0630, 449.9139, 463.3793, 476.4748, 489.2156, 501.6149};
                 ;
                 ;float iTCVoltData[5] = {0.0,0.0,0.0,0.0,0.0};
                 ;float iTCADCData[5] = {0.0,0.0,0.0,0.0,0.0};
                 ;/*============================================================*/
                 ;void iSensorGetADCValue(){
                 ; 000D 003C void iSensorGetADCValue(){
                 
                 	.CSEG
                 _iSensorGetADCValue:
                 ; 000D 003D     long viADCbuffer = 0;
                 ; 000D 003E     unsigned int viADCSmoothValue = 0;
                 ; 000D 003F     int i = 0,j = 0;
                 ; 000D 0040     viADCbuffer = 0;
006b0c 940e ccd1 	CALL SUBOPT_0x1A4
006b0e 940e c3e4 	CALL SUBOPT_0x37
                 ;	viADCbuffer -> Y+6
                 ;	viADCSmoothValue -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
006b10 940e cf12 	CALL SUBOPT_0x200
                 ; 000D 0041     printDebug("[iSensorGetValue]data[");
                +
006b12 e8e8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 0 ) )
006b13 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 0 ) )
006b14 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 0 ) )
006b15 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 0 ) )
                 	__POINTD1FN _0x1A0000,0
006b16 940e c274 	CALL SUBOPT_0x3
                 ; 000D 0042     for(i=0;i<5;i++){
                +
006b18 e020     +LDI R18 , LOW ( 0 )
006b19 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1A0004:
                +
006b1a 3025     +CPI R18 , LOW ( 5 )
006b1b e0e0     +LDI R30 , HIGH ( 5 )
006b1c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
006b1d f5c4      	BRGE _0x1A0005
                 ; 000D 0043         #asm("wdr")
006b1e 95a8      	wdr
                 ; 000D 0044         viADCbuffer = 0;
006b1f 940e cf12 	CALL SUBOPT_0x200
                 ; 000D 0045         for(j=0;j<30;j++){
                +
006b21 e040     +LDI R20 , LOW ( 0 )
006b22 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0007:
                +
006b23 314e     +CPI R20 , LOW ( 30 )
006b24 e0e0     +LDI R30 , HIGH ( 30 )
006b25 075e     +CPC R21 , R30
                 	__CPWRN 20,21,30
006b26 f46c      	BRGE _0x1A0008
                 ; 000D 0046             viADCbuffer += read_adc(8+i);
006b27 2fa2      	MOV  R26,R18
006b28 5fa8      	SUBI R26,-LOW(8)
006b29 940e 446f 	CALL _read_adc
006b2b 940e cf18 	CALL SUBOPT_0x201
006b2d 940e e258 	CALL __ADDD12
006b2f 940e c73c 	CALL SUBOPT_0xB6
                 ; 000D 0047         }
                +
006b31 5f4f     +SUBI R20 , LOW ( - 1 )
006b32 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
006b33 cfef      	RJMP _0x1A0007
                 _0x1A0008:
                 ; 000D 0048         viADCSmoothValue = (unsigned int)(viADCbuffer/30);
006b34 940e c4dc 	CALL SUBOPT_0x59
                +
006b36 e1ee     +LDI R30 , LOW ( 0x1E )
006b37 e0f0     +LDI R31 , HIGH ( 0x1E )
006b38 e060     +LDI R22 , BYTE3 ( 0x1E )
006b39 e070     +LDI R23 , BYTE4 ( 0x1E )
                 	__GETD1N 0x1E
006b3a 940e e379 	CALL __DIVD21
006b3c 018f      	MOVW R16,R30
                 ; 000D 0049         if(i==4){
006b3d e0e4      	LDI  R30,LOW(4)
006b3e e0f0      	LDI  R31,HIGH(4)
006b3f 17e2      	CP   R30,R18
006b40 07f3      	CPC  R31,R19
006b41 f429      	BRNE _0x1A0009
                 ; 000D 004A            printDebug("ch%d: %04d ",i+1,viADCSmoothValue);
                +
006b42 e9ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 23 ) )
006b43 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 23 ) )
006b44 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 23 ) )
006b45 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 23 ) )
                 	__POINTD1FN _0x1A0000,23
006b46 c004      	RJMP _0x1A00C3
                 ; 000D 004B         }else{
                 _0x1A0009:
                 ; 000D 004C            printDebug("ch%d: %04d, ",i+1,viADCSmoothValue);
                +
006b47 eaeb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 35 ) )
006b48 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 35 ) )
006b49 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 35 ) )
006b4a e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 35 ) )
                 	__POINTD1FN _0x1A0000,35
                 _0x1A00C3:
006b4b 940e e400 	CALL __PUTPARD1
006b4d 01f9      	MOVW R30,R18
006b4e 940e cf1d 	CALL SUBOPT_0x202
006b50 01f8      	MOVW R30,R16
006b51 940e ca5c 	CALL SUBOPT_0x13F
                 ; 000D 004D         }
                 ; 000D 004E 
                 ; 000D 004F     }
                +
006b53 5f2f     +SUBI R18 , LOW ( - 1 )
006b54 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006b55 cfc4      	RJMP _0x1A0004
                 _0x1A0005:
                 ; 000D 0050     printDebug("]\r\n");
                +
006b56 ebe8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 48 ) )
006b57 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 48 ) )
006b58 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 48 ) )
006b59 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 48 ) )
                 	__POINTD1FN _0x1A0000,48
006b5a 940e c274 	CALL SUBOPT_0x3
                 ; 000D 0051     return;
006b5c 940e e47c 	CALL __LOADLOCR6
006b5e 962a      	ADIW R28,10
006b5f 9508      	RET
                 ; 000D 0052 }
                 ;
                 ;void updateSensorADC(int ch)
                 ; 000D 0055 {
                 _updateSensorADC:
                 ; 000D 0056     int adc_raw                                     = 0;
                 ; 000D 0057 
                 ; 000D 0058     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006b60 940e c5e5 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	adc_raw -> R16,R17
                +
006b62 e000     +LDI R16 , LOW ( 0 )
006b63 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006b64 940e c3a4 	CALL SUBOPT_0x2E
006b66 f021      	BREQ _0x1A000C
006b67 940e c3a4 	CALL SUBOPT_0x2E
006b69 30e3      	CPI  R30,LOW(0x3)
006b6a f411      	BRNE _0x1A000B
                 _0x1A000C:
                 ; 000D 0059         adc_raw     = read_adc(8);
006b6b e0a8      	LDI  R26,LOW(8)
006b6c c009      	RJMP _0x1A00C4
                 ; 000D 005A     }
                 ; 000D 005B     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A000B:
006b6d 940e c670 	CALL SUBOPT_0x95
006b6f f021      	BREQ _0x1A0010
006b70 940e c3a4 	CALL SUBOPT_0x2E
006b72 30e2      	CPI  R30,LOW(0x2)
006b73 f429      	BRNE _0x1A000F
                 _0x1A0010:
                 ; 000D 005C         adc_raw     = read_adc(8+ch);
006b74 81aa      	LDD  R26,Y+2
006b75 5fa8      	SUBI R26,-LOW(8)
                 _0x1A00C4:
006b76 940e 446f 	CALL _read_adc
006b78 018f      	MOVW R16,R30
                 ; 000D 005D     }
                 ; 000D 005E 
                 ; 000D 005F     if( fabs(adcData[ch] - adc_raw) < 10){
                 _0x1A000F:
006b79 940e cf23 	CALL SUBOPT_0x203
006b7b 940e c32e 	CALL SUBOPT_0x1B
006b7d 940e cf27 	CALL SUBOPT_0x204
006b7f 940e c942 	CALL SUBOPT_0x10C
006b81 940e e234 	CALL __CMPF12
006b83 f508      	BRSH _0x1A0012
                 ; 000D 0060         adcData[ch] = (float)((adcData[ch] * 9.9) + (float)(adc_raw * 0.1))/10;           // Temp Sensor Low-Pass Filter
006b84 940e cf23 	CALL SUBOPT_0x203
006b86 0fea      	ADD  R30,R26
006b87 1ffb      	ADC  R31,R27
006b88 93ff      	PUSH R31
006b89 93ef      	PUSH R30
006b8a 940e cf23 	CALL SUBOPT_0x203
006b8c 940e c32e 	CALL SUBOPT_0x1B
                +
006b8e e6a6     +LDI R26 , LOW ( 0x411E6666 )
006b8f e6b6     +LDI R27 , HIGH ( 0x411E6666 )
006b90 e18e     +LDI R24 , BYTE3 ( 0x411E6666 )
006b91 e491     +LDI R25 , BYTE4 ( 0x411E6666 )
                 	__GETD2N 0x411E6666
006b92 940e e1a1 	CALL __MULF12
006b94 937f      	PUSH R23
006b95 936f      	PUSH R22
006b96 93ff      	PUSH R31
006b97 93ef      	PUSH R30
006b98 940e cf39 	CALL SUBOPT_0x205
006b9a 940e c6b4 	CALL SUBOPT_0x9E
006b9c 91af      	POP  R26
006b9d 91bf      	POP  R27
006b9e 918f      	POP  R24
006b9f 919f      	POP  R25
006ba0 940e c6bb 	CALL SUBOPT_0x9F
006ba2 91af      	POP  R26
006ba3 91bf      	POP  R27
006ba4 c0b0      	RJMP _0x1A00C5
                 ; 000D 0061         //printDebug("<updateSensorADC>        < 10\r\n");
                 ; 000D 0062     }
                 ; 000D 0063     else if( fabs(adcData[ch] - adc_raw) < 30){
                 _0x1A0012:
006ba5 940e cf23 	CALL SUBOPT_0x203
006ba7 940e c32e 	CALL SUBOPT_0x1B
006ba9 940e cf27 	CALL SUBOPT_0x204
                +
006bab e0e0     +LDI R30 , LOW ( 0x41F00000 )
006bac e0f0     +LDI R31 , HIGH ( 0x41F00000 )
006bad ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
006bae e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
006baf 940e e234 	CALL __CMPF12
006bb1 f518      	BRSH _0x1A0014
                 ; 000D 0064         adcData[ch] = (float)((adcData[ch] * 9.5) + (float)(adc_raw * 0.5))/10;           // Temp Sensor Low-Pass Filter
006bb2 940e cf23 	CALL SUBOPT_0x203
006bb4 0fea      	ADD  R30,R26
006bb5 1ffb      	ADC  R31,R27
006bb6 93ff      	PUSH R31
006bb7 93ef      	PUSH R30
006bb8 940e cf23 	CALL SUBOPT_0x203
006bba 940e c32e 	CALL SUBOPT_0x1B
                +
006bbc e0a0     +LDI R26 , LOW ( 0x41180000 )
006bbd e0b0     +LDI R27 , HIGH ( 0x41180000 )
006bbe e188     +LDI R24 , BYTE3 ( 0x41180000 )
006bbf e491     +LDI R25 , BYTE4 ( 0x41180000 )
                 	__GETD2N 0x41180000
006bc0 940e e1a1 	CALL __MULF12
006bc2 937f      	PUSH R23
006bc3 936f      	PUSH R22
006bc4 93ff      	PUSH R31
006bc5 93ef      	PUSH R30
006bc6 940e cf39 	CALL SUBOPT_0x205
006bc8 940e cf3f 	CALL SUBOPT_0x206
006bca 940e e1a1 	CALL __MULF12
006bcc 91af      	POP  R26
006bcd 91bf      	POP  R27
006bce 918f      	POP  R24
006bcf 919f      	POP  R25
006bd0 940e c6bb 	CALL SUBOPT_0x9F
006bd2 91af      	POP  R26
006bd3 91bf      	POP  R27
006bd4 c080      	RJMP _0x1A00C5
                 ; 000D 0065         //printDebug("<updateSensorADC>                < 30\r\n");
                 ; 000D 0066     }
                 ; 000D 0067     else if( fabs(adcData[ch] - adc_raw) < 50){
                 _0x1A0014:
006bd5 940e cf23 	CALL SUBOPT_0x203
006bd7 940e c32e 	CALL SUBOPT_0x1B
006bd9 940e cf27 	CALL SUBOPT_0x204
                +
006bdb e0e0     +LDI R30 , LOW ( 0x42480000 )
006bdc e0f0     +LDI R31 , HIGH ( 0x42480000 )
006bdd e468     +LDI R22 , BYTE3 ( 0x42480000 )
006bde e472     +LDI R23 , BYTE4 ( 0x42480000 )
                 	__GETD1N 0x42480000
006bdf 940e e234 	CALL __CMPF12
006be1 f528      	BRSH _0x1A0016
                 ; 000D 0068         adcData[ch] = (float)((adcData[ch] * 8.5) + (float)(adc_raw * 1.5))/10;           // Temp Sensor Low-Pass Filter
006be2 940e cf23 	CALL SUBOPT_0x203
006be4 0fea      	ADD  R30,R26
006be5 1ffb      	ADC  R31,R27
006be6 93ff      	PUSH R31
006be7 93ef      	PUSH R30
006be8 940e cf23 	CALL SUBOPT_0x203
006bea 940e c32e 	CALL SUBOPT_0x1B
                +
006bec e0a0     +LDI R26 , LOW ( 0x41080000 )
006bed e0b0     +LDI R27 , HIGH ( 0x41080000 )
006bee e088     +LDI R24 , BYTE3 ( 0x41080000 )
006bef e491     +LDI R25 , BYTE4 ( 0x41080000 )
                 	__GETD2N 0x41080000
006bf0 940e e1a1 	CALL __MULF12
006bf2 937f      	PUSH R23
006bf3 936f      	PUSH R22
006bf4 93ff      	PUSH R31
006bf5 93ef      	PUSH R30
006bf6 940e cf39 	CALL SUBOPT_0x205
                +
006bf8 e0a0     +LDI R26 , LOW ( 0x3FC00000 )
006bf9 e0b0     +LDI R27 , HIGH ( 0x3FC00000 )
006bfa ec80     +LDI R24 , BYTE3 ( 0x3FC00000 )
006bfb e39f     +LDI R25 , BYTE4 ( 0x3FC00000 )
                 	__GETD2N 0x3FC00000
006bfc 940e e1a1 	CALL __MULF12
006bfe 91af      	POP  R26
006bff 91bf      	POP  R27
006c00 918f      	POP  R24
006c01 919f      	POP  R25
006c02 940e c6bb 	CALL SUBOPT_0x9F
006c04 91af      	POP  R26
006c05 91bf      	POP  R27
006c06 c04e      	RJMP _0x1A00C5
                 ; 000D 0069         //printDebug("<updateSensorADC>                            < 50\r\n");
                 ; 000D 006A     }
                 ; 000D 006B     else if( fabs(adcData[ch] - adc_raw) < 100){
                 _0x1A0016:
006c07 940e cf23 	CALL SUBOPT_0x203
006c09 940e c32e 	CALL SUBOPT_0x1B
006c0b 940e cf27 	CALL SUBOPT_0x204
                +
006c0d e0e0     +LDI R30 , LOW ( 0x42C80000 )
006c0e e0f0     +LDI R31 , HIGH ( 0x42C80000 )
006c0f ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
006c10 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
006c11 940e e234 	CALL __CMPF12
006c13 f528      	BRSH _0x1A0018
                 ; 000D 006C         adcData[ch] = (float)((adcData[ch] * 7.0) + (float)(adc_raw * 3.0))/10;           // Temp Sensor Low-Pass Filter
006c14 940e cf23 	CALL SUBOPT_0x203
006c16 0fea      	ADD  R30,R26
006c17 1ffb      	ADC  R31,R27
006c18 93ff      	PUSH R31
006c19 93ef      	PUSH R30
006c1a 940e cf23 	CALL SUBOPT_0x203
006c1c 940e c32e 	CALL SUBOPT_0x1B
                +
006c1e e0a0     +LDI R26 , LOW ( 0x40E00000 )
006c1f e0b0     +LDI R27 , HIGH ( 0x40E00000 )
006c20 ee80     +LDI R24 , BYTE3 ( 0x40E00000 )
006c21 e490     +LDI R25 , BYTE4 ( 0x40E00000 )
                 	__GETD2N 0x40E00000
006c22 940e e1a1 	CALL __MULF12
006c24 937f      	PUSH R23
006c25 936f      	PUSH R22
006c26 93ff      	PUSH R31
006c27 93ef      	PUSH R30
006c28 940e cf39 	CALL SUBOPT_0x205
                +
006c2a e0a0     +LDI R26 , LOW ( 0x40400000 )
006c2b e0b0     +LDI R27 , HIGH ( 0x40400000 )
006c2c e480     +LDI R24 , BYTE3 ( 0x40400000 )
006c2d e490     +LDI R25 , BYTE4 ( 0x40400000 )
                 	__GETD2N 0x40400000
006c2e 940e e1a1 	CALL __MULF12
006c30 91af      	POP  R26
006c31 91bf      	POP  R27
006c32 918f      	POP  R24
006c33 919f      	POP  R25
006c34 940e c6bb 	CALL SUBOPT_0x9F
006c36 91af      	POP  R26
006c37 91bf      	POP  R27
006c38 c01c      	RJMP _0x1A00C5
                 ; 000D 006D         //printDebug("<updateSensorADC>                                    < 100\r\n");
                 ; 000D 006E     }
                 ; 000D 006F     else{
                 _0x1A0018:
                 ; 000D 0070         adcData[ch] = (float)((adcData[ch] * 5.0) + (float)(adc_raw * 5.0))/10;           // Temp Sensor Low-Pass Filter
006c39 940e cf23 	CALL SUBOPT_0x203
006c3b 0fea      	ADD  R30,R26
006c3c 1ffb      	ADC  R31,R27
006c3d 93ff      	PUSH R31
006c3e 93ef      	PUSH R30
006c3f 940e cf23 	CALL SUBOPT_0x203
006c41 940e c32e 	CALL SUBOPT_0x1B
006c43 940e cf44 	CALL SUBOPT_0x207
006c45 937f      	PUSH R23
006c46 936f      	PUSH R22
006c47 93ff      	PUSH R31
006c48 93ef      	PUSH R30
006c49 940e cf39 	CALL SUBOPT_0x205
006c4b 940e cf44 	CALL SUBOPT_0x207
006c4d 91af      	POP  R26
006c4e 91bf      	POP  R27
006c4f 918f      	POP  R24
006c50 919f      	POP  R25
006c51 940e c6bb 	CALL SUBOPT_0x9F
006c53 91af      	POP  R26
006c54 91bf      	POP  R27
                 _0x1A00C5:
006c55 940e e3db 	CALL __PUTDP1
                 ; 000D 0071         //printDebug("<updateSensorADC>                                            >= 100\r\n");
                 ; 000D 0072     }
                 ; 000D 0073 
                 ; 000D 0074     return;
006c57 8119      	LDD  R17,Y+1
006c58 8108      	LDD  R16,Y+0
006c59 9624      	ADIW R28,4
006c5a 9508      	RET
                 ; 000D 0075 }
                 ;/*============================================================*/
                 ;int sensorRead(int ch, struct sens_val_st *sensor)
                 ; 000D 0078 {
                 _sensorRead:
                 ; 000D 0079     static TIMER t[MAX_SENS_CHANNEL]                = {0,0,0,0,0};
                 ; 000D 007A     static char lastCheck[MAX_SENS_CHANNEL]         = {0xFF,0xFF,0xFF,0xFF,0xFF};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000D 007B     static char steadyState[MAX_SENS_CHANNEL]       = {0,0,0,0,0};
                 ; 000D 007C     char channelConnect                             = 0;
                 ; 000D 007D     float x_1 = 0.0;
                 ; 000D 007E     float x_2 = 0.0;
                 ; 000D 007F     float y_1 = 0.0;
                 ; 000D 0080     float y_2 = 0.0;
                 ; 000D 0081 
                 ; 000D 0082     const float  viZeroSet   = 1.667;
                 ; 000D 0083 
                 ; 000D 0084     unsigned long viADCbuffer;
                 ; 000D 0085     int i = 0;
                 ; 000D 0086     float offset = 0.0;
                 ; 000D 0087     float sensorRef1 = 0.0,sensorRef2 = 0.0,sensorRef3 = 0.0;
                 ; 000D 0088     float stdMeter1 = 0.0,stdMeter2 = 0.0,stdMeter3 = 0.0;        //standrad  meter
                 ; 000D 0089     float lowRange = 0.0;
                 ; 000D 008A     float stdMeterRange = 0.0;
                 ; 000D 008B     float factorAA = 0.0,factorBB = 0.0,factorCC = 0.0;
                 ; 000D 008C     float viSensorTempValue = 0.0;
                 ; 000D 008D     float viRawVoltValue = 0.0;
                 ; 000D 008E     float viRiaseUpVoltValue = 0.0;
                 ; 000D 008F 
                 ; 000D 0090     if( (ch<0) || (ch>=MAX_SENS_CHANNEL) ){
006c5b 93ba      	ST   -Y,R27
006c5c 93aa      	ST   -Y,R26
006c5d 97ef      	SBIW R28,63
006c5e 9765      	SBIW R28,21
006c5f e584      	LDI  R24,84
006c60 e0a0      	LDI  R26,LOW(0)
006c61 e0b0      	LDI  R27,HIGH(0)
006c62 e3e4      	LDI  R30,LOW(_0x1A001B*2)
006c63 e4f4      	LDI  R31,HIGH(_0x1A001B*2)
006c64 e060      	LDI  R22,BYTE3(_0x1A001B*2)
006c65 940e e483 	CALL __INITLOCB
006c67 940e e477 	CALL __SAVELOCR4
                 ;	ch -> Y+90
                 ;	*sensor -> Y+88
                 ;	channelConnect -> R17
                 ;	x_1 -> Y+84
                 ;	x_2 -> Y+80
                 ;	y_1 -> Y+76
                 ;	y_2 -> Y+72
                 ;	viZeroSet -> Y+68
                 ;	viADCbuffer -> Y+64
                 ;	i -> R18,R19
                 ;	offset -> Y+60
                 ;	sensorRef1 -> Y+56
                 ;	sensorRef2 -> Y+52
                 ;	sensorRef3 -> Y+48
                 ;	stdMeter1 -> Y+44
                 ;	stdMeter2 -> Y+40
                 ;	stdMeter3 -> Y+36
                 ;	lowRange -> Y+32
                 ;	stdMeterRange -> Y+28
                 ;	factorAA -> Y+24
                 ;	factorBB -> Y+20
                 ;	factorCC -> Y+16
                 ;	viSensorTempValue -> Y+12
                 ;	viRawVoltValue -> Y+8
                 ;	viRiaseUpVoltValue -> Y+4
006c69 e010      	LDI  R17,0
                +
006c6a e020     +LDI R18 , LOW ( 0 )
006c6b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
006c6c 01de     +MOVW R26 , R28
006c6d 5aa5     +SUBI R26 , LOW ( - 91 )
006c6e 4fbf     +SBCI R27 , HIGH ( - 91 )
006c6f 91ac     +LD R26 , X
                 	__GETB2SX 91
006c70 23aa      	TST  R26
006c71 f022      	BRMI _0x1A001D
006c72 940e cf4b 	CALL SUBOPT_0x208
006c74 9715      	SBIW R26,5
006c75 f06c      	BRLT _0x1A001C
                 _0x1A001D:
                 ; 000D 0091         printDebug("<sensorRead> ERR: ch value out of range\r\n");
                +
006c76 ebec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 52 ) )
006c77 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 52 ) )
006c78 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 52 ) )
006c79 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 52 ) )
                 	__POINTD1FN _0x1A0000,52
006c7a 940e c274 	CALL SUBOPT_0x3
                 ; 000D 0092         return -3;
006c7c efed      	LDI  R30,LOW(65533)
006c7d efff      	LDI  R31,HIGH(65533)
006c7e 940e e47e 	CALL __LOADLOCR4
006c80 96ef      	ADIW R28,63
006c81 966d      	ADIW R28,29
006c82 9508      	RET
                 ; 000D 0093     }
                 ; 000D 0094 
                 ; 000D 0095     // ----- Check Sensor Status (Connected-Disconnected) ----- //
                 ; 000D 0096     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A001C:
006c83 940e c3a4 	CALL SUBOPT_0x2E
006c85 f029      	BREQ _0x1A0020
006c86 940e c3a4 	CALL SUBOPT_0x2E
006c88 30e3      	CPI  R30,LOW(0x3)
006c89 f009      	BREQ _0x1A0020
006c8a c077      	RJMP _0x1A001F
                 _0x1A0020:
                 ; 000D 0097     /*bongkot comment*/
                 ; 000D 0098         SENSOR_SELECT(ch);
006c8b 940e c6c9 	CALL SUBOPT_0xA1
                +
006c8d 01fe     +MOVW R30 , R28
006c8e 5ae6     +SUBI R30 , LOW ( - 90 )
006c8f 4fff     +SBCI R31 , HIGH ( - 90 )
006c90 81e0     +LD R30 , Z
                 	__GETB1SX 90
006c91 940e c6d3 	CALL SUBOPT_0xA2
                 ; 000D 0099         delay_ms(20);                                               // -- for multiplex stable -- //
                 ; 000D 009A         channelConnect = SENSOR_CONNECT;
006c93 940e c3af 	CALL SUBOPT_0x2F
006c95 2f1e      	MOV  R17,R30
                 ; 000D 009B 
                 ; 000D 009C         //updateSensorADC(ch);
                 ; 000D 009D //        if(adcData[ch] < TMC_DISCON_LIMIT){
                 ; 000D 009E //            channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 009F //        }
                 ; 000D 00A0 //        else{
                 ; 000D 00A1 //            channelConnect  = SENS_NORMAL;
                 ; 000D 00A2 //        }
                 ; 000D 00A3          viADCbuffer = 0;
006c96 940e cf52 	CALL SUBOPT_0x209
                 ; 000D 00A4          for(i=0;i<20;i++){
                 _0x1A0023:
                +
006c98 3124     +CPI R18 , LOW ( 20 )
006c99 e0e0     +LDI R30 , HIGH ( 20 )
006c9a 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
006c9b f43c      	BRGE _0x1A0024
                 ; 000D 00A5             viADCbuffer += (unsigned long)(read_adc(8+ch));
006c9c 940e cf5d 	CALL SUBOPT_0x20A
006c9e 940e cf64 	CALL SUBOPT_0x20B
                 ; 000D 00A6          }
                +
006ca0 5f2f     +SUBI R18 , LOW ( - 1 )
006ca1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006ca2 cff5      	RJMP _0x1A0023
                 _0x1A0024:
                 ; 000D 00A7          viRawVoltValue = iAD595ADCToVolt(viADCbuffer,20.0);
006ca3 940e cf78 	CALL SUBOPT_0x20C
006ca5 940e cf81 	CALL SUBOPT_0x20D
                 ; 000D 00A8          //viSensorTempValue = iAD595ADCToVolt(viADCbuffer,20.0);
                 ; 000D 00A9          iTCVoltData[ch] = (float)(viRawVoltValue+0.213);
006ca7 940e cf8e 	CALL SUBOPT_0x20E
006ca9 940e cf95 	CALL SUBOPT_0x20F
006cab 0fea      	ADD  R30,R26
006cac 1ffb      	ADC  R31,R27
006cad 93ff      	PUSH R31
006cae 93ef      	PUSH R30
006caf 940e cf9a 	CALL SUBOPT_0x210
006cb1 91af      	POP  R26
006cb2 91bf      	POP  R27
006cb3 940e e3db 	CALL __PUTDP1
                 ; 000D 00AA          iTCADCData[ch]  = (float)(viADCbuffer/20.0);
006cb5 940e cf8e 	CALL SUBOPT_0x20E
006cb7 e6a4      	LDI  R26,LOW(_iTCADCData)
006cb8 e1b5      	LDI  R27,HIGH(_iTCADCData)
006cb9 940e cfa3 	CALL SUBOPT_0x211
006cbb 93ff      	PUSH R31
006cbc 93ef      	PUSH R30
006cbd 940e cf78 	CALL SUBOPT_0x20C
006cbf 940e e115 	CALL __CDF1U
006cc1 01df      	MOVW R26,R30
006cc2 01cb      	MOVW R24,R22
                +
006cc3 e0e0     +LDI R30 , LOW ( 0x41A00000 )
006cc4 e0f0     +LDI R31 , HIGH ( 0x41A00000 )
006cc5 ea60     +LDI R22 , BYTE3 ( 0x41A00000 )
006cc6 e471     +LDI R23 , BYTE4 ( 0x41A00000 )
                 	__GETD1N 0x41A00000
006cc7 940e e1ef 	CALL __DIVF21
006cc9 91af      	POP  R26
006cca 91bf      	POP  R27
006ccb 940e e3db 	CALL __PUTDP1
                 ; 000D 00AB 
                 ; 000D 00AC          printDebug("[sensorRead1]ch1[%04.2f|%0.2f],ch2[%04.2f|%0.2f],ch3[%04.2f|%0.2f],ch4[%04.2f|%0.2f],ch5[%04.2f|%0.2f]\r\n",iTCADCData[0],iTCVoltData[0],iTCADCData[1],iTCVoltData[1],iTCADCData[2],iTCVoltData[2],iTCADCData[3],iTCVoltDat                +
006ccd eee6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006cce e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006ccf e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006cd0 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006cd1 940e cfa8 	CALL SUBOPT_0x212
                 ; 000D 00AD 
                 ; 000D 00AE 
                 ; 000D 00AF //         if(viSensorTempValue < TMCP_SHORT_LIMIT){
                 ; 000D 00B0 //             //channelConnect  = SENS_ERR_SHORT;
                 ; 000D 00B1 //             channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00B2 //         }else if(viSensorTempValue > TMCP_OPEN_LIMIT){
                 ; 000D 00B3 //             channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 00B4 //         }else{
                 ; 000D 00B5 //             channelConnect  = SENS_NORMAL;
                 ; 000D 00B6 //         }
                 ; 000D 00B7 
                 ; 000D 00B8          viRiaseUpVoltValue = (float)(iTCVoltData[ch]-viZeroSet);
006cd3 940e cf8e 	CALL SUBOPT_0x20E
006cd5 940e cf95 	CALL SUBOPT_0x20F
006cd7 940e c32e 	CALL SUBOPT_0x1B
006cd9 940e d013 	CALL SUBOPT_0x213
006cdb 940e c6ef 	CALL SUBOPT_0xA7
                 ; 000D 00B9          iTCVoltData[ch] = viRiaseUpVoltValue;
006cdd 940e cf8e 	CALL SUBOPT_0x20E
006cdf 940e cf95 	CALL SUBOPT_0x20F
006ce1 0fea      	ADD  R30,R26
006ce2 1ffb      	ADC  R31,R27
006ce3 940e d01e 	CALL SUBOPT_0x214
                 ; 000D 00BA          printDebug("[sensorRead2]ch1[%04.2f|%0.2f],ch2[%04.2f|%0.2f],ch3[%04.2f|%0.2f],ch4[%04.2f|%0.2f],ch5[%04.2f|%0.2f]\r\n",iTCADCData[0],iTCVoltData[0],iTCADCData[1],iTCVoltData[1],iTCADCData[2],iTCVoltData[2],iTCADCData[3],iTCVoltDat                +
006ce5 e4ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 199 ) )
006ce6 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 199 ) )
006ce7 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 199 ) )
006ce8 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 199 ) )
                 	__POINTD1FN _0x1A0000,199
006ce9 940e cfa8 	CALL SUBOPT_0x212
                 ; 000D 00BB          if(viRiaseUpVoltValue < TMCP_SHORT_LIMIT){
006ceb 940e c6f4 	CALL SUBOPT_0xA8
006ced 940e d023 	CALL SUBOPT_0x215
006cef f410      	BRSH _0x1A0025
                 ; 000D 00BC              //channelConnect  = SENS_ERR_SHORT;
                 ; 000D 00BD              channelConnect  = SENS_ERR_DISCONNECT;
006cf0 e814      	LDI  R17,LOW(132)
                 ; 000D 00BE          }else if(viRiaseUpVoltValue > TMCP_OPEN_LIMIT){
006cf1 c00f      	RJMP _0x1A0026
                 _0x1A0025:
006cf2 940e c6f4 	CALL SUBOPT_0xA8
                +
006cf4 efe6     +LDI R30 , LOW ( 0x3FBC28F6 )
006cf5 e2f8     +LDI R31 , HIGH ( 0x3FBC28F6 )
006cf6 eb6c     +LDI R22 , BYTE3 ( 0x3FBC28F6 )
006cf7 e37f     +LDI R23 , BYTE4 ( 0x3FBC28F6 )
                 	__GETD1N 0x3FBC28F6
006cf8 940e e234 	CALL __CMPF12
006cfa f009      	BREQ PC+2
006cfb f410      	BRCC PC+3
006cfc 940c 6d00 	JMP  _0x1A0027
                 ; 000D 00BF              channelConnect  = SENS_ERR_DISCONNECT;
006cfe e814      	LDI  R17,LOW(132)
                 ; 000D 00C0          }else{
006cff c001      	RJMP _0x1A0028
                 _0x1A0027:
                 ; 000D 00C1              channelConnect  = SENS_NORMAL;
006d00 e010      	LDI  R17,LOW(0)
                 ; 000D 00C2          }
                 _0x1A0028:
                 _0x1A0026:
                 ; 000D 00C3 
                 ; 000D 00C4 
                 ; 000D 00C5 
                 ; 000D 00C6         /*bongkot test*/
                 ; 000D 00C7         //channelConnect  = SENS_NORMAL;
                 ; 000D 00C8         //printDebug("SENSOR:NORMAL\r\n");
                 ; 000D 00C9 
                 ; 000D 00CA 
                 ; 000D 00CB     }
                 ; 000D 00CC     else if(TEMP_SEL == TEMP_TMEC){
006d01 c04d      	RJMP _0x1A0029
                 _0x1A001F:
006d02 940e c3a4 	CALL SUBOPT_0x2E
006d04 30e1      	CPI  R30,LOW(0x1)
006d05 f519      	BRNE _0x1A002A
                 ; 000D 00CD 
                 ; 000D 00CE         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006d06 940e d02a 	CALL SUBOPT_0x216
                 ; 000D 00CF 
                 ; 000D 00D0         if(adcData[ch] < TMEC_SHORT_LIMIT){
006d08 940e c32e 	CALL SUBOPT_0x1B
006d0a 01df      	MOVW R26,R30
006d0b 01cb      	MOVW R24,R22
                +
006d0c e0e0     +LDI R30 , LOW ( 0x40000000 )
006d0d e0f0     +LDI R31 , HIGH ( 0x40000000 )
006d0e e060     +LDI R22 , BYTE3 ( 0x40000000 )
006d0f e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
006d10 940e e234 	CALL __CMPF12
006d12 f410      	BRSH _0x1A002B
                 ; 000D 00D1             channelConnect  = SENS_ERR_SHORT;
006d13 e910      	LDI  R17,LOW(144)
                 ; 000D 00D2         }
                 ; 000D 00D3         else if(adcData[ch] > TMEC_OPEN_LIMIT){
006d14 c013      	RJMP _0x1A002C
                 _0x1A002B:
006d15 940e d030 	CALL SUBOPT_0x217
006d17 940e c32e 	CALL SUBOPT_0x1B
006d19 01df      	MOVW R26,R30
006d1a 01cb      	MOVW R24,R22
                +
006d1b e0e0     +LDI R30 , LOW ( 0x447F4000 )
006d1c e4f0     +LDI R31 , HIGH ( 0x447F4000 )
006d1d e76f     +LDI R22 , BYTE3 ( 0x447F4000 )
006d1e e474     +LDI R23 , BYTE4 ( 0x447F4000 )
                 	__GETD1N 0x447F4000
006d1f 940e e234 	CALL __CMPF12
006d21 f009      	BREQ PC+2
006d22 f410      	BRCC PC+3
006d23 940c 6d27 	JMP  _0x1A002D
                 ; 000D 00D4             channelConnect  = SENS_ERR_DISCONNECT;
006d25 e814      	LDI  R17,LOW(132)
                 ; 000D 00D5         }
                 ; 000D 00D6         else{
006d26 c001      	RJMP _0x1A002E
                 _0x1A002D:
                 ; 000D 00D7             channelConnect  = SENS_NORMAL;
006d27 e010      	LDI  R17,LOW(0)
                 ; 000D 00D8         }
                 _0x1A002E:
                 _0x1A002C:
                 ; 000D 00D9     }
                 ; 000D 00DA     else if(TEMP_SEL == TEMP_PT100){
006d28 c026      	RJMP _0x1A002F
                 _0x1A002A:
006d29 940e c3a4 	CALL SUBOPT_0x2E
006d2b 30e2      	CPI  R30,LOW(0x2)
006d2c f511      	BRNE _0x1A0030
                 ; 000D 00DB 
                 ; 000D 00DC         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006d2d 940e d02a 	CALL SUBOPT_0x216
                 ; 000D 00DD 
                 ; 000D 00DE         if(adcData[ch] < PT100_SHORT_LIMIT){
006d2f 940e c32e 	CALL SUBOPT_0x1B
006d31 01df      	MOVW R26,R30
006d32 01cb      	MOVW R24,R22
                +
006d33 e0e0     +LDI R30 , LOW ( 0x41000000 )
006d34 e0f0     +LDI R31 , HIGH ( 0x41000000 )
006d35 e060     +LDI R22 , BYTE3 ( 0x41000000 )
006d36 e471     +LDI R23 , BYTE4 ( 0x41000000 )
                 	__GETD1N 0x41000000
006d37 940e e234 	CALL __CMPF12
006d39 f410      	BRSH _0x1A0031
                 ; 000D 00DF             channelConnect  = SENS_ERR_SHORT;
006d3a e910      	LDI  R17,LOW(144)
                 ; 000D 00E0         }
                 ; 000D 00E1         else if(adcData[ch] > PT100_OPEN_LIMIT){
006d3b c013      	RJMP _0x1A0032
                 _0x1A0031:
006d3c 940e d030 	CALL SUBOPT_0x217
006d3e 940e c32e 	CALL SUBOPT_0x1B
006d40 01df      	MOVW R26,R30
006d41 01cb      	MOVW R24,R22
                +
006d42 e0e0     +LDI R30 , LOW ( 0x44728000 )
006d43 e8f0     +LDI R31 , HIGH ( 0x44728000 )
006d44 e762     +LDI R22 , BYTE3 ( 0x44728000 )
006d45 e474     +LDI R23 , BYTE4 ( 0x44728000 )
                 	__GETD1N 0x44728000
006d46 940e e234 	CALL __CMPF12
006d48 f009      	BREQ PC+2
006d49 f410      	BRCC PC+3
006d4a 940c 6d4e 	JMP  _0x1A0033
                 ; 000D 00E2             channelConnect  = SENS_ERR_DISCONNECT;
006d4c e814      	LDI  R17,LOW(132)
                 ; 000D 00E3         }
                 ; 000D 00E4         else{
006d4d c001      	RJMP _0x1A0034
                 _0x1A0033:
                 ; 000D 00E5             channelConnect  = SENS_NORMAL;
006d4e e010      	LDI  R17,LOW(0)
                 ; 000D 00E6         }
                 _0x1A0034:
                 _0x1A0032:
                 ; 000D 00E7     }
                 ; 000D 00E8 
                 ; 000D 00E9     /*bongkot test*/
                 ; 000D 00EA     //sensor->status  = SENS_NORMAL;
                 ; 000D 00EB     //lastCheck[ch] = channelConnect;
                 ; 000D 00EC 
                 ; 000D 00ED     // ----- Confirm Sensor Status Stable ----- //
                 ; 000D 00EE     if(channelConnect != lastCheck[ch])
                 _0x1A0030:
                 _0x1A002F:
                 _0x1A0029:
006d4f 940e cf8e 	CALL SUBOPT_0x20E
006d51 57e4      	SUBI R30,LOW(-_lastCheck_S00D0002000)
006d52 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0002000)
006d53 81e0      	LD   R30,Z
006d54 17e1      	CP   R30,R17
006d55 f079      	BREQ _0x1A0035
                 ; 000D 00EF     {
                 ; 000D 00F0         TIMER_setTimer(&t[ch],5);
006d56 940e d033 	CALL SUBOPT_0x218
006d58 940e c339 	CALL SUBOPT_0x1D
006d5a 940e d039 	CALL SUBOPT_0x219
                 ; 000D 00F1         lastCheck[ch]       = channelConnect;
006d5c 940e cf8e 	CALL SUBOPT_0x20E
006d5e 57e4      	SUBI R30,LOW(-_lastCheck_S00D0002000)
006d5f 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0002000)
006d60 8310      	ST   Z,R17
                 ; 000D 00F2         steadyState[ch]     = 0;
006d61 940e d03f 	CALL SUBOPT_0x21A
006d63 e0a0      	LDI  R26,LOW(0)
006d64 c00f      	RJMP _0x1A00C6
                 ; 000D 00F3     }
                 ; 000D 00F4     else if(!steadyState[ch])
                 _0x1A0035:
006d65 940e d03f 	CALL SUBOPT_0x21A
006d67 81e0      	LD   R30,Z
006d68 30e0      	CPI  R30,0
006d69 f459      	BRNE _0x1A0037
                 ; 000D 00F5     {
                 ; 000D 00F6         if(TIMER_checkTimerExceed(t[ch])){
006d6a 940e d033 	CALL SUBOPT_0x218
006d6c 940e c32e 	CALL SUBOPT_0x1B
006d6e 940e c333 	CALL SUBOPT_0x1C
006d70 f021      	BREQ _0x1A0038
                 ; 000D 00F7             steadyState[ch] = 1;
006d71 940e d03f 	CALL SUBOPT_0x21A
006d73 e0a1      	LDI  R26,LOW(1)
                 _0x1A00C6:
006d74 83a0      	STD  Z+0,R26
                 ; 000D 00F8         }
                 ; 000D 00F9     }
                 _0x1A0038:
                 ; 000D 00FA 
                 ; 000D 00FB     /*bongkot test*/
                 ; 000D 00FC     //printDebug("SENSOR:channelConnect Status Stable\r\n");
                 ; 000D 00FD     //steadyState[ch] = 1;
                 ; 000D 00FE 
                 ; 000D 00FF     if(!steadyState[ch])
                 _0x1A0037:
006d75 940e d03f 	CALL SUBOPT_0x21A
006d77 81e0      	LD   R30,Z
006d78 30e0      	CPI  R30,0
006d79 f441      	BRNE _0x1A0039
                 ; 000D 0100     {
                 ; 000D 0101         //printDebug("<sensorRead> sensor %d state unstable\r\n",ch+1);
                 ; 000D 0102         sensor->status  = SENS_ERR_UNKNOWN;
006d7a 940e d043 	CALL SUBOPT_0x21B
006d7c 9614      	ADIW R26,4
006d7d efef      	LDI  R30,LOW(255)
006d7e 93ec      	ST   X,R30
                 ; 000D 0103         return -9;
006d7f efe7      	LDI  R30,LOW(65527)
006d80 efff      	LDI  R31,HIGH(65527)
006d81 c25f      	RJMP _0x20E006A
                 ; 000D 0104     }
                 ; 000D 0105 
                 ; 000D 0106     /*bongkot test*/
                 ; 000D 0107     //printDebug("SENSOR:steadyState ok\r\n");
                 ; 000D 0108 
                 ; 000D 0109 
                 ; 000D 010A     // ----- Return if Sensor Data is not available ----- //
                 ; 000D 010B     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED))
                 _0x1A0039:
006d82 940e c3a4 	CALL SUBOPT_0x2E
006d84 f021      	BREQ _0x1A003B
006d85 940e c3a4 	CALL SUBOPT_0x2E
006d87 30e3      	CPI  R30,LOW(0x3)
006d88 f431      	BRNE _0x1A003A
                 _0x1A003B:
                 ; 000D 010C     {   /*bongkot comment*/
                 ; 000D 010D //        if(!channelConnect){
                 ; 000D 010E //            sensor->status  = SENS_ERR_DISCONNECT;
                 ; 000D 010F //            return -2;
                 ; 000D 0110 //        }
                 ; 000D 0111         if(channelConnect != SENS_NORMAL){
006d89 3010      	CPI  R17,0
006d8a f019      	BREQ _0x1A003D
                 ; 000D 0112             sensor->status  = channelConnect;
006d8b 940e d04a 	CALL SUBOPT_0x21C
                 ; 000D 0113             return -2;
006d8d c253      	RJMP _0x20E006A
                 ; 000D 0114         }
                 ; 000D 0115        // updateSensorADC(ch);                            // -- update adcData[ch] -- //
                 ; 000D 0116     }
                 _0x1A003D:
                 ; 000D 0117     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
006d8e c00f      	RJMP _0x1A003E
                 _0x1A003A:
006d8f 940e c670 	CALL SUBOPT_0x95
006d91 f021      	BREQ _0x1A0040
006d92 940e c3a4 	CALL SUBOPT_0x2E
006d94 30e2      	CPI  R30,LOW(0x2)
006d95 f441      	BRNE _0x1A003F
                 _0x1A0040:
                 ; 000D 0118         if(channelConnect != SENS_NORMAL){
006d96 3010      	CPI  R17,0
006d97 f019      	BREQ _0x1A0042
                 ; 000D 0119             sensor->status  = channelConnect;
006d98 940e d04a 	CALL SUBOPT_0x21C
                 ; 000D 011A             return -2;
006d9a c246      	RJMP _0x20E006A
                 ; 000D 011B         }
                 ; 000D 011C 
                 ; 000D 011D         updateSensorADC(ch);                            // -- update adcData[ch] -- again ^_^ --- //
                 _0x1A0042:
006d9b 940e cf4b 	CALL SUBOPT_0x208
006d9d ddc2      	RCALL _updateSensorADC
                 ; 000D 011E     }
                 ; 000D 011F 
                 ; 000D 0120     switch(epCalType[ch]){
                 _0x1A003F:
                 _0x1A003E:
006d9e 940e cf4b 	CALL SUBOPT_0x208
006da0 5aa8      	SUBI R26,LOW(-_epCalType)
006da1 4fb9      	SBCI R27,HIGH(-_epCalType)
006da2 940e e42c 	CALL __EEPROMRDB
006da4 940e d054 	CALL SUBOPT_0x21D
                 ; 000D 0121         case CAL_SELFCOMPARE    :   // --- Same as CAL_EXTOFFSET --- //
006da6 f031      	BREQ _0x1A0047
                 ; 000D 0122         case CAL_EXTOFFSET      :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006da7 30e2      	CPI  R30,LOW(0x2)
006da8 e0a0      	LDI  R26,HIGH(0x2)
006da9 07fa      	CPC  R31,R26
006daa f011      	BREQ PC+3
006dab 940c 6e3a 	JMP _0x1A0048
                 _0x1A0047:
006dad 940e c3a4 	CALL SUBOPT_0x2E
006daf f021      	BREQ _0x1A004A
006db0 940e c3a4 	CALL SUBOPT_0x2E
006db2 30e3      	CPI  R30,LOW(0x3)
006db3 f5d1      	BRNE _0x1A0049
                 _0x1A004A:
                 ; 000D 0123                                         /*bongkot comment*/
                 ; 000D 0124                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]) + epFactor_C[ch];
                 ; 000D 0125                                          //sensor->value   +=    epFactor_C[ch];
                 ; 000D 0126                                          viADCbuffer = 0;
006db4 940e cf52 	CALL SUBOPT_0x209
                 ; 000D 0127                                          for(i=0;i<30;i++){
                 _0x1A004D:
                +
006db6 312e     +CPI R18 , LOW ( 30 )
006db7 e0e0     +LDI R30 , HIGH ( 30 )
006db8 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006db9 f43c      	BRGE _0x1A004E
                 ; 000D 0128                                             viADCbuffer += read_adc(8+ch);
006dba 940e cf5d 	CALL SUBOPT_0x20A
006dbc 940e d059 	CALL SUBOPT_0x21E
                 ; 000D 0129                                          }
                +
006dbe 5f2f     +SUBI R18 , LOW ( - 1 )
006dbf 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006dc0 cff5      	RJMP _0x1A004D
                 _0x1A004E:
                 ; 000D 012A 
                 ; 000D 012B                                          viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006dc1 940e d06d 	CALL SUBOPT_0x21F
                 ; 000D 012C                                          offset =  epTempRef1[ch] - epADCRef1[ch];
006dc3 940e d076 	CALL SUBOPT_0x220
006dc5 937f      	PUSH R23
006dc6 936f      	PUSH R22
006dc7 93ff      	PUSH R31
006dc8 93ef      	PUSH R30
006dc9 940e d080 	CALL SUBOPT_0x221
006dcb 91af      	POP  R26
006dcc 91bf      	POP  R27
006dcd 918f      	POP  R24
006dce 919f      	POP  R25
006dcf 940e d08a 	CALL SUBOPT_0x222
                +
006dd1 afec     +STD Y + 60 , R30
006dd2 affd     +STD Y + 60 + 1 , R31
006dd3 af6e     +STD Y + 60 + 2 , R22
006dd4 af7f     +STD Y + 60 + 3 , R23
                 	__PUTD1S 60
                 ; 000D 012D                                          printDebug("TempRaw(%f), TempRef(%f), Offset(%f)\r\n",viSensorTempValue,epTempRef1[ch],offset);
                +
006dd5 ebe8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 304 ) )
006dd6 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 304 ) )
006dd7 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 304 ) )
006dd8 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 304 ) )
                 	__POINTD1FN _0x1A0000,304
006dd9 940e c4e6 	CALL SUBOPT_0x5B
                +
006ddb 01fe     +MOVW R30 , R28
006ddc 59ee     +SUBI R30 , LOW ( - 98 )
006ddd 4fff     +SBCI R31 , HIGH ( - 98 )
006dde 9001     +LD R0 , Z +
006ddf 81f0     +LD R31 , Z
006de0 2de0     +MOV R30 , R0
                 	__GETW1SX 98
006de1 940e d08f 	CALL SUBOPT_0x223
006de3 940e e400 	CALL __PUTPARD1
006de5 940e d098 	CALL SUBOPT_0x224
006de7 940e c52b 	CALL SUBOPT_0x66
                 ; 000D 012E                                          sensor->value = viSensorTempValue + offset;
006de9 940e d0a3 	CALL SUBOPT_0x225
006deb 940e c2ba 	CALL SUBOPT_0xB
006ded c047      	RJMP _0x1A00C7
                 ; 000D 012F                                     }
                 ; 000D 0130                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0049:
006dee 940e c3a4 	CALL SUBOPT_0x2E
006df0 30e1      	CPI  R30,LOW(0x1)
006df1 f489      	BRNE _0x1A0050
                 ; 000D 0131 
                 ; 000D 0132                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epFactor_C[ch];
006df2 940e d030 	CALL SUBOPT_0x217
006df4 940e c32e 	CALL SUBOPT_0x1B
006df6 940e d0a8 	CALL SUBOPT_0x226
006df8 937f      	PUSH R23
006df9 936f      	PUSH R22
006dfa 93ff      	PUSH R31
006dfb 93ef      	PUSH R30
006dfc 940e d0af 	CALL SUBOPT_0x227
006dfe 91af      	POP  R26
006dff 91bf      	POP  R27
006e00 918f      	POP  R24
006e01 919f      	POP  R25
006e02 c032      	RJMP _0x1A00C7
                 ; 000D 0133                                     }
                 ; 000D 0134                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0050:
006e03 940e c3a4 	CALL SUBOPT_0x2E
006e05 30e2      	CPI  R30,LOW(0x2)
006e06 f591      	BRNE _0x1A0052
                 ; 000D 0135                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 0136                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 0137                                                              epFactor_C[ch];
006e07 940e d030 	CALL SUBOPT_0x217
006e09 940e c32e 	CALL SUBOPT_0x1B
006e0b 940e d0b9 	CALL SUBOPT_0x228
006e0d 937f      	PUSH R23
006e0e 936f      	PUSH R22
006e0f 93ff      	PUSH R31
006e10 93ef      	PUSH R30
006e11 940e d030 	CALL SUBOPT_0x217
006e13 940e c32e 	CALL SUBOPT_0x1B
006e15 91af      	POP  R26
006e16 91bf      	POP  R27
006e17 918f      	POP  R24
006e18 919f      	POP  R25
006e19 940e e1a1 	CALL __MULF12
006e1b 937f      	PUSH R23
006e1c 936f      	PUSH R22
006e1d 93ff      	PUSH R31
006e1e 93ef      	PUSH R30
006e1f 940e d030 	CALL SUBOPT_0x217
006e21 940e c32e 	CALL SUBOPT_0x1B
006e23 940e d0c0 	CALL SUBOPT_0x229
006e25 91af      	POP  R26
006e26 91bf      	POP  R27
006e27 918f      	POP  R24
006e28 919f      	POP  R25
006e29 940e e151 	CALL __ADDF12
006e2b 937f      	PUSH R23
006e2c 936f      	PUSH R22
006e2d 93ff      	PUSH R31
006e2e 93ef      	PUSH R30
006e2f 940e d0af 	CALL SUBOPT_0x227
006e31 91af      	POP  R26
006e32 91bf      	POP  R27
006e33 918f      	POP  R24
006e34 919f      	POP  R25
                 _0x1A00C7:
006e35 940e e151 	CALL __ADDF12
006e37 940e d0c7 	CALL SUBOPT_0x22A
                 ; 000D 0138 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epFactor_C[ch];
                 ; 000D 0139                                     }
                 ; 000D 013A                                     break;
                 _0x1A0052:
006e39 c1a0      	RJMP _0x1A0045
                 ; 000D 013B         case CAL_EXTLINEAR      :  {
                 _0x1A0048:
006e3a 30e3      	CPI  R30,LOW(0x3)
006e3b e0a0      	LDI  R26,HIGH(0x3)
006e3c 07fa      	CPC  R31,R26
006e3d f011      	BREQ PC+3
006e3e 940c 6ebb 	JMP _0x1A0053
                 ; 000D 013C                                         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006e40 940e c3a4 	CALL SUBOPT_0x2E
006e42 f029      	BREQ _0x1A0055
006e43 940e c3a4 	CALL SUBOPT_0x2E
006e45 30e3      	CPI  R30,LOW(0x3)
006e46 f009      	BREQ _0x1A0055
006e47 c054      	RJMP _0x1A0054
                 _0x1A0055:
                 ; 000D 013D                                                //sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
                 ; 000D 013E 
                 ; 000D 013F                                                viADCbuffer = 0;
006e48 940e cf52 	CALL SUBOPT_0x209
                 ; 000D 0140                                                  for(i=0;i<30;i++){
                 _0x1A0058:
                +
006e4a 312e     +CPI R18 , LOW ( 30 )
006e4b e0e0     +LDI R30 , HIGH ( 30 )
006e4c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006e4d f43c      	BRGE _0x1A0059
                 ; 000D 0141                                                     viADCbuffer += read_adc(8+ch);
006e4e 940e cf5d 	CALL SUBOPT_0x20A
006e50 940e d059 	CALL SUBOPT_0x21E
                 ; 000D 0142                                                  }
                +
006e52 5f2f     +SUBI R18 , LOW ( - 1 )
006e53 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006e54 cff5      	RJMP _0x1A0058
                 _0x1A0059:
                 ; 000D 0143 
                 ; 000D 0144                                                 sensorRef1 = iAD595ADCToTemp(epADCRef1[ch],1);
006e55 940e d080 	CALL SUBOPT_0x221
006e57 940e d0cb 	CALL SUBOPT_0x22B
006e59 940e a18f 	CALL _iAD595ADCToTemp
006e5b 940e d0d1 	CALL SUBOPT_0x22C
                 ; 000D 0145                                                 sensorRef2 = iAD595ADCToTemp(epADCRef2[ch],1);
006e5d 940e d0cb 	CALL SUBOPT_0x22B
006e5f 940e a18f 	CALL _iAD595ADCToTemp
                +
006e61 abec     +STD Y + 52 , R30
006e62 abfd     +STD Y + 52 + 1 , R31
006e63 ab6e     +STD Y + 52 + 2 , R22
006e64 ab7f     +STD Y + 52 + 3 , R23
                 	__PUTD1S 52
                 ; 000D 0146                                                 stdMeter1  = epTempRef1[ch];
006e65 940e d076 	CALL SUBOPT_0x220
006e67 940e d0df 	CALL SUBOPT_0x22D
                 ; 000D 0147                                                 stdMeter2  = epTempRef2[ch];
                 ; 000D 0148                                                 lowRange   =  sensorRef2 - sensorRef1;
                +
006e69 ada8     +LDD R26 , Y + 56
006e6a adb9     +LDD R27 , Y + 56 + 1
006e6b ad8a     +LDD R24 , Y + 56 + 2
006e6c ad9b     +LDD R25 , Y + 56 + 3
                 	__GETD2S 56
                +
006e6d a9ec     +LDD R30 , Y + 52
006e6e a9fd     +LDD R31 , Y + 52 + 1
006e6f a96e     +LDD R22 , Y + 52 + 2
006e70 a97f     +LDD R23 , Y + 52 + 3
                 	__GETD1S 52
006e71 940e e14a 	CALL __SUBF12
                +
006e73 a3e8     +STD Y + 32 , R30
006e74 a3f9     +STD Y + 32 + 1 , R31
006e75 a36a     +STD Y + 32 + 2 , R22
006e76 a37b     +STD Y + 32 + 3 , R23
                 	__PUTD1S 32
                 ; 000D 0149                                                 stdMeterRange = stdMeter2 - stdMeter1;
006e77 940e c710 	CALL SUBOPT_0xAE
                +
006e79 a5e8     +LDD R30 , Y + 40
006e7a a5f9     +LDD R31 , Y + 40 + 1
006e7b a56a     +LDD R22 , Y + 40 + 2
006e7c a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
006e7d 940e e14a 	CALL __SUBF12
                +
006e7f 8fec     +STD Y + 28 , R30
006e80 8ffd     +STD Y + 28 + 1 , R31
006e81 8f6e     +STD Y + 28 + 2 , R22
006e82 8f7f     +STD Y + 28 + 3 , R23
                 	__PUTD1S 28
                 ; 000D 014A                                                 viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006e83 940e d06d 	CALL SUBOPT_0x21F
                 ; 000D 014B                                                sensor->value = (((viSensorTempValue-sensorRef1)*stdMeterRange)/lowRange)+stdMeter1;
                +
006e85 ada8     +LDD R26 , Y + 56
006e86 adb9     +LDD R27 , Y + 56 + 1
006e87 ad8a     +LDD R24 , Y + 56 + 2
006e88 ad9b     +LDD R25 , Y + 56 + 3
                 	__GETD2S 56
006e89 940e c815 	CALL SUBOPT_0xD9
006e8b 940e e14a 	CALL __SUBF12
                +
006e8d 8dac     +LDD R26 , Y + 28
006e8e 8dbd     +LDD R27 , Y + 28 + 1
006e8f 8d8e     +LDD R24 , Y + 28 + 2
006e90 8d9f     +LDD R25 , Y + 28 + 3
                 	__GETD2S 28
006e91 940e e1a1 	CALL __MULF12
006e93 01df      	MOVW R26,R30
006e94 01cb      	MOVW R24,R22
006e95 940e c8af 	CALL SUBOPT_0xF3
006e97 940e e1ef 	CALL __DIVF21
006e99 940e c710 	CALL SUBOPT_0xAE
006e9b c01a      	RJMP _0x1A00C8
                 ; 000D 014C 
                 ; 000D 014D 
                 ; 000D 014E 
                 ; 000D 014F                                         }else{
                 _0x1A0054:
                 ; 000D 0150                                                sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
006e9c 940e d0f1 	CALL SUBOPT_0x22E
006e9e 937f      	PUSH R23
006e9f 936f      	PUSH R22
006ea0 93ff      	PUSH R31
006ea1 93ef      	PUSH R30
006ea2 940e d030 	CALL SUBOPT_0x217
006ea4 940e c32e 	CALL SUBOPT_0x1B
006ea6 91af      	POP  R26
006ea7 91bf      	POP  R27
006ea8 918f      	POP  R24
006ea9 919f      	POP  R25
006eaa 940e e1a1 	CALL __MULF12
006eac 937f      	PUSH R23
006ead 936f      	PUSH R22
006eae 93ff      	PUSH R31
006eaf 93ef      	PUSH R30
006eb0 940e d0af 	CALL SUBOPT_0x227
006eb2 91af      	POP  R26
006eb3 91bf      	POP  R27
006eb4 918f      	POP  R24
006eb5 919f      	POP  R25
                 _0x1A00C8:
006eb6 940e e151 	CALL __ADDF12
006eb8 940e d0c7 	CALL SUBOPT_0x22A
                 ; 000D 0151                                         }
                 ; 000D 0152 
                 ; 000D 0153                                         break;
006eba c11f      	RJMP _0x1A0045
                 ; 000D 0154                                     }
                 ; 000D 0155         case CAL_EXTPOLYNOMIAL  :   {   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0053:
006ebb 30e4      	CPI  R30,LOW(0x4)
006ebc e0a0      	LDI  R26,HIGH(0x4)
006ebd 07fa      	CPC  R31,R26
006ebe f011      	BREQ PC+3
006ebf 940c 6f74 	JMP _0x1A0063
006ec1 940e c3a4 	CALL SUBOPT_0x2E
006ec3 f029      	BREQ _0x1A005D
006ec4 940e c3a4 	CALL SUBOPT_0x2E
006ec6 30e3      	CPI  R30,LOW(0x3)
006ec7 f009      	BREQ _0x1A005D
006ec8 c060      	RJMP _0x1A005C
                 _0x1A005D:
                 ; 000D 0156                                             viADCbuffer = 0;
006ec9 940e cf52 	CALL SUBOPT_0x209
                 ; 000D 0157                                             for(i=0;i<30;i++){
                 _0x1A0060:
                +
006ecb 312e     +CPI R18 , LOW ( 30 )
006ecc e0e0     +LDI R30 , HIGH ( 30 )
006ecd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006ece f43c      	BRGE _0x1A0061
                 ; 000D 0158                                                 viADCbuffer += read_adc(8+ch);
006ecf 940e cf5d 	CALL SUBOPT_0x20A
006ed1 940e d059 	CALL SUBOPT_0x21E
                 ; 000D 0159                                             }
                +
006ed3 5f2f     +SUBI R18 , LOW ( - 1 )
006ed4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006ed5 cff5      	RJMP _0x1A0060
                 _0x1A0061:
                 ; 000D 015A                                             sensorRef1 = epADCRef1[ch];
006ed6 940e d080 	CALL SUBOPT_0x221
006ed8 940e d0d1 	CALL SUBOPT_0x22C
                 ; 000D 015B                                             sensorRef2 = epADCRef2[ch];
                +
006eda abec     +STD Y + 52 , R30
006edb abfd     +STD Y + 52 + 1 , R31
006edc ab6e     +STD Y + 52 + 2 , R22
006edd ab7f     +STD Y + 52 + 3 , R23
                 	__PUTD1S 52
                 ; 000D 015C                                             sensorRef3 = epADCRef3[ch];
006ede 940e cf8e 	CALL SUBOPT_0x20E
006ee0 940e d0fb 	CALL SUBOPT_0x22F
                +
006ee2 abe8     +STD Y + 48 , R30
006ee3 abf9     +STD Y + 48 + 1 , R31
006ee4 ab6a     +STD Y + 48 + 2 , R22
006ee5 ab7b     +STD Y + 48 + 3 , R23
                 	__PUTD1S 48
                 ; 000D 015D                                             stdMeter1 = epTempRef1[ch];
006ee6 940e d076 	CALL SUBOPT_0x220
006ee8 940e d0df 	CALL SUBOPT_0x22D
                 ; 000D 015E                                             stdMeter2 = epTempRef2[ch];
                 ; 000D 015F                                             stdMeter3 = epTempRef3[ch];
006eea 940e cf8e 	CALL SUBOPT_0x20E
006eec 940e d104 	CALL SUBOPT_0x230
                +
006eee a3ec     +STD Y + 36 , R30
006eef a3fd     +STD Y + 36 + 1 , R31
006ef0 a36e     +STD Y + 36 + 2 , R22
006ef1 a37f     +STD Y + 36 + 3 , R23
                 	__PUTD1S 36
                 ; 000D 0160                                             viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006ef2 940e d06d 	CALL SUBOPT_0x21F
                 ; 000D 0161                                             gaussian(sensorRef1,  sensorRef2,  sensorRef3, stdMeter1, stdMeter2, stdMeter3, &factorAA, &factorBB, &factorCC);
006ef4 940e d10d 	CALL SUBOPT_0x231
006ef6 940e d10d 	CALL SUBOPT_0x231
006ef8 940e d10d 	CALL SUBOPT_0x231
006efa 940e d10d 	CALL SUBOPT_0x231
006efc 940e d10d 	CALL SUBOPT_0x231
006efe 940e d10d 	CALL SUBOPT_0x231
006f00 01fe      	MOVW R30,R28
006f01 96f0      	ADIW R30,48
006f02 93fa      	ST   -Y,R31
006f03 93ea      	ST   -Y,R30
006f04 01fe      	MOVW R30,R28
006f05 96be      	ADIW R30,46
006f06 93fa      	ST   -Y,R31
006f07 93ea      	ST   -Y,R30
006f08 01de      	MOVW R26,R28
006f09 969c      	ADIW R26,44
006f0a 940e a0eb 	CALL _gaussian
                 ; 000D 0162                                             sensor->value = (factorAA*viSensorTempValue*viSensorTempValue) + (factorBB*viSensorTempValue) + factorCC;      //polynomail formula
006f0c 940e c815 	CALL SUBOPT_0xD9
006f0e 940e d114 	CALL SUBOPT_0x232
006f10 940e e1a1 	CALL __MULF12
006f12 940e c2ba 	CALL SUBOPT_0xB
006f14 940e e1a1 	CALL __MULF12
006f16 937f      	PUSH R23
006f17 936f      	PUSH R22
006f18 93ff      	PUSH R31
006f19 93ef      	PUSH R30
006f1a 940e c815 	CALL SUBOPT_0xD9
006f1c 940e d119 	CALL SUBOPT_0x233
006f1e 940e e1a1 	CALL __MULF12
006f20 91af      	POP  R26
006f21 91bf      	POP  R27
006f22 918f      	POP  R24
006f23 919f      	POP  R25
006f24 940e e151 	CALL __ADDF12
006f26 940e d11e 	CALL SUBOPT_0x234
006f28 c046      	RJMP _0x1A00C9
                 ; 000D 0163 
                 ; 000D 0164                                         }else{
                 _0x1A005C:
                 ; 000D 0165                                               sensor->value   =   (epFactor_A[ch]   * adcData[ch] * adcData[ch]) +
                 ; 000D 0166                                                         (epFactor_B[ch]   * adcData[ch]) +
                 ; 000D 0167                                                          epFactor_C[ch];
006f29 940e cf8e 	CALL SUBOPT_0x20E
006f2b 940e d123 	CALL SUBOPT_0x235
006f2d 940e e424 	CALL __EEPROMRDD
006f2f 937f      	PUSH R23
006f30 936f      	PUSH R22
006f31 93ff      	PUSH R31
006f32 93ef      	PUSH R30
006f33 940e d030 	CALL SUBOPT_0x217
006f35 940e c32e 	CALL SUBOPT_0x1B
006f37 91af      	POP  R26
006f38 91bf      	POP  R27
006f39 918f      	POP  R24
006f3a 919f      	POP  R25
006f3b 940e e1a1 	CALL __MULF12
006f3d 937f      	PUSH R23
006f3e 936f      	PUSH R22
006f3f 93ff      	PUSH R31
006f40 93ef      	PUSH R30
006f41 940e d030 	CALL SUBOPT_0x217
006f43 940e c32e 	CALL SUBOPT_0x1B
006f45 91af      	POP  R26
006f46 91bf      	POP  R27
006f47 918f      	POP  R24
006f48 919f      	POP  R25
006f49 940e e1a1 	CALL __MULF12
006f4b 937f      	PUSH R23
006f4c 936f      	PUSH R22
006f4d 93ff      	PUSH R31
006f4e 93ef      	PUSH R30
006f4f 940e d0f1 	CALL SUBOPT_0x22E
006f51 937f      	PUSH R23
006f52 936f      	PUSH R22
006f53 93ff      	PUSH R31
006f54 93ef      	PUSH R30
006f55 940e d030 	CALL SUBOPT_0x217
006f57 940e c32e 	CALL SUBOPT_0x1B
006f59 91af      	POP  R26
006f5a 91bf      	POP  R27
006f5b 918f      	POP  R24
006f5c 919f      	POP  R25
006f5d 940e e1a1 	CALL __MULF12
006f5f 91af      	POP  R26
006f60 91bf      	POP  R27
006f61 918f      	POP  R24
006f62 919f      	POP  R25
006f63 940e e151 	CALL __ADDF12
006f65 937f      	PUSH R23
006f66 936f      	PUSH R22
006f67 93ff      	PUSH R31
006f68 93ef      	PUSH R30
006f69 940e d0af 	CALL SUBOPT_0x227
006f6b 91af      	POP  R26
006f6c 91bf      	POP  R27
006f6d 918f      	POP  R24
006f6e 919f      	POP  R25
                 _0x1A00C9:
006f6f 940e e151 	CALL __ADDF12
006f71 940e d0c7 	CALL SUBOPT_0x22A
                 ; 000D 0168                                         }
                 ; 000D 0169 
                 ; 000D 016A                                         break;
006f73 c066      	RJMP _0x1A0045
                 ; 000D 016B                                     }
                 ; 000D 016C         default                 :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0063:
006f74 940e c3a4 	CALL SUBOPT_0x2E
006f76 f021      	BREQ _0x1A0065
006f77 940e c3a4 	CALL SUBOPT_0x2E
006f79 30e3      	CPI  R30,LOW(0x3)
006f7a f4d1      	BRNE _0x1A0064
                 _0x1A0065:
                 ; 000D 016D                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]);
                 ; 000D 016E                                          viADCbuffer = 0;
006f7b 940e cf52 	CALL SUBOPT_0x209
                 ; 000D 016F                                          for(i=0;i<20;i++){
                 _0x1A0068:
                +
006f7d 3124     +CPI R18 , LOW ( 20 )
006f7e e0e0     +LDI R30 , HIGH ( 20 )
006f7f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
006f80 f43c      	BRGE _0x1A0069
                 ; 000D 0170                                             viADCbuffer += (unsigned long)(read_adc(8+ch));
006f81 940e cf5d 	CALL SUBOPT_0x20A
006f83 940e cf64 	CALL SUBOPT_0x20B
                 ; 000D 0171                                          }
                +
006f85 5f2f     +SUBI R18 , LOW ( - 1 )
006f86 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006f87 cff5      	RJMP _0x1A0068
                 _0x1A0069:
                 ; 000D 0172                                          viRawVoltValue = iAD595ADCToVolt(viADCbuffer,20.0);
006f88 940e cf78 	CALL SUBOPT_0x20C
006f8a 940e cf81 	CALL SUBOPT_0x20D
                 ; 000D 0173 
                 ; 000D 0174                                          sensor->value = iAD595VoltToTemp((float)((viRawVoltValue+0.213)-viZeroSet));        //0.213 *2 = 0.426
006f8c 940e cf9a 	CALL SUBOPT_0x210
006f8e 940e d013 	CALL SUBOPT_0x213
006f90 01df      	MOVW R26,R30
006f91 01cb      	MOVW R24,R22
006f92 940e a322 	CALL _iAD595VoltToTemp
006f94 c03d      	RJMP _0x1A00CA
                 ; 000D 0175                                     }
                 ; 000D 0176                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0064:
006f95 940e c3a4 	CALL SUBOPT_0x2E
006f97 30e1      	CPI  R30,LOW(0x1)
006f98 f459      	BRNE _0x1A006B
                 ; 000D 0177                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epTMECTempOffset;
006f99 940e d030 	CALL SUBOPT_0x217
006f9b 940e c32e 	CALL SUBOPT_0x1B
006f9d 940e d0a8 	CALL SUBOPT_0x226
                +
006f9f e8a5     +LDI R26 , LOW ( 0x427EEB85 )
006fa0 eebb     +LDI R27 , HIGH ( 0x427EEB85 )
006fa1 e78e     +LDI R24 , BYTE3 ( 0x427EEB85 )
006fa2 e492     +LDI R25 , BYTE4 ( 0x427EEB85 )
                 	__GETD2N 0x427EEB85
006fa3 c02c      	RJMP _0x1A00CB
                 ; 000D 0178                                     }
                 ; 000D 0179                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A006B:
006fa4 940e c3a4 	CALL SUBOPT_0x2E
006fa6 30e2      	CPI  R30,LOW(0x2)
006fa7 f591      	BRNE _0x1A006D
                 ; 000D 017A                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 017B                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 017C                                                              epPT100Temp_C;
006fa8 940e d030 	CALL SUBOPT_0x217
006faa 940e c32e 	CALL SUBOPT_0x1B
006fac 940e d0b9 	CALL SUBOPT_0x228
006fae 937f      	PUSH R23
006faf 936f      	PUSH R22
006fb0 93ff      	PUSH R31
006fb1 93ef      	PUSH R30
006fb2 940e d030 	CALL SUBOPT_0x217
006fb4 940e c32e 	CALL SUBOPT_0x1B
006fb6 91af      	POP  R26
006fb7 91bf      	POP  R27
006fb8 918f      	POP  R24
006fb9 919f      	POP  R25
006fba 940e e1a1 	CALL __MULF12
006fbc 937f      	PUSH R23
006fbd 936f      	PUSH R22
006fbe 93ff      	PUSH R31
006fbf 93ef      	PUSH R30
006fc0 940e d030 	CALL SUBOPT_0x217
006fc2 940e c32e 	CALL SUBOPT_0x1B
006fc4 940e d0c0 	CALL SUBOPT_0x229
006fc6 91af      	POP  R26
006fc7 91bf      	POP  R27
006fc8 918f      	POP  R24
006fc9 919f      	POP  R25
006fca 940e e151 	CALL __ADDF12
                +
006fcc eea5     +LDI R26 , LOW ( 0xC334E2E5 )
006fcd eeb2     +LDI R27 , HIGH ( 0xC334E2E5 )
006fce e384     +LDI R24 , BYTE3 ( 0xC334E2E5 )
006fcf ec93     +LDI R25 , BYTE4 ( 0xC334E2E5 )
                 	__GETD2N 0xC334E2E5
                 _0x1A00CB:
006fd0 940e e151 	CALL __ADDF12
                 _0x1A00CA:
                +
006fd2 01de     +MOVW R26 , R28
006fd3 5aa8     +SUBI R26 , LOW ( - 88 )
006fd4 4fbf     +SBCI R27 , HIGH ( - 88 )
006fd5 900d     +LD R0 , X +
006fd6 91bc     +LD R27 , X
006fd7 2da0     +MOV R26 , R0
                 	__GETW2SX 88
006fd8 940e e3db 	CALL __PUTDP1
                 ; 000D 017D //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epPT100TempOffset;
                 ; 000D 017E //                                        getInterval(adcData[ch], &x_1, &x_2, &y_1, &y_2);
                 ; 000D 017F //                                        sensor->value = (((adcData[ch] - x_1) * (y_2 - y_1)) / (x_2 - x_1)) + y_1;
                 ; 000D 0180 
                 ; 000D 0181                                         // test
                 ; 000D 0182                                         //printDebug("ADC: %f, Value: %f \r\n", adcData[ch], sensor->value);
                 ; 000D 0183                                         //
                 ; 000D 0184                                     }
                 ; 000D 0185                                     break;
                 _0x1A006D:
                 ; 000D 0186     }
                 _0x1A0045:
                 ; 000D 0187     //printDebug("end read sensor.\r\n");
                 ; 000D 0188     sensor->status  = SENS_NORMAL;
006fda 940e d043 	CALL SUBOPT_0x21B
006fdc 9614      	ADIW R26,4
006fdd e0e0      	LDI  R30,LOW(0)
006fde 93ec      	ST   X,R30
                 ; 000D 0189 
                 ; 000D 018A     return 0;
006fdf e0e0      	LDI  R30,LOW(0)
006fe0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E006A:
006fe1 940e e47e 	CALL __LOADLOCR4
006fe3 96ef      	ADIW R28,63
006fe4 966d      	ADIW R28,29
006fe5 9508      	RET
                 ; 000D 018B }
                 ;/*============================================================*/
                 ;void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 018D void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 018E 
                 ; 000D 018F     int i = 0;
                 ; 000D 0190 
                 ; 000D 0191     for(i = 0; i < 15; i++) {
                 ;	adcRaw -> Y+10
                 ;	*x1 -> Y+8
                 ;	*x2 -> Y+6
                 ;	*y1 -> Y+4
                 ;	*y2 -> Y+2
                 ;	i -> R16,R17
                 ; 000D 0192         if(adcRaw <= adcTable[i]) {
                 ; 000D 0193             *x1 = adcTable[i-1];
                 ; 000D 0194             *y1 = tempTable[i-1];
                 ; 000D 0195             *x2 = adcTable[i];
                 ; 000D 0196             *y2 = tempTable[i];
                 ; 000D 0197             break;
                 ; 000D 0198         }
                 ; 000D 0199     }
                 ; 000D 019A 
                 ; 000D 019B     return;
                 ; 000D 019C }
                 ;/*============================================================*/
                 ;int sensorCalibrate1(int p1, int p2)
                 ; 000D 019F {
                 _sensorCalibrate1:
                 ; 000D 01A0     float p2_raw;
                 ; 000D 01A1 
                 ; 000D 01A2     if(operating_config.sensorEnable[p1] != 0x01){
006fe6 93ba      	ST   -Y,R27
006fe7 93aa      	ST   -Y,R26
006fe8 9724      	SBIW R28,4
                 ;	p1 -> Y+6
                 ;	p2 -> Y+4
                 ;	p2_raw -> Y+0
                +
006fe9 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006fea e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006feb 940e d12a 	CALL SUBOPT_0x236
006fed 91ac      	LD   R26,X
006fee 30a1      	CPI  R26,LOW(0x1)
006fef f061      	BREQ _0x1A0072
                 ; 000D 01A3         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p1+1);
                +
006ff0 edef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 343 ) )
006ff1 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 343 ) )
006ff2 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 343 ) )
006ff3 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 343 ) )
                 	__POINTD1FN _0x1A0000,343
006ff4 940e c9ee 	CALL SUBOPT_0x129
006ff6 9631      	ADIW R30,1
006ff7 940e c881 	CALL SUBOPT_0xE9
                 ; 000D 01A4         return -1;
006ff9 efef      	LDI  R30,LOW(65535)
006ffa efff      	LDI  R31,HIGH(65535)
006ffb c0b6      	RJMP _0x20E0069
                 ; 000D 01A5     }
                 ; 000D 01A6     if(operating_config.sensorEnable[p2] != 0x01){
                 _0x1A0072:
                +
006ffc ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006ffd e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006ffe 81ac      	LDD  R26,Y+4
006fff 81bd      	LDD  R27,Y+4+1
007000 940e d12f 	CALL SUBOPT_0x237
007002 f061      	BREQ _0x1A0073
                 ; 000D 01A7         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p2+1);
                +
007003 edef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 343 ) )
007004 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 343 ) )
007005 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 343 ) )
007006 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 343 ) )
                 	__POINTD1FN _0x1A0000,343
007007 940e ce3b 	CALL SUBOPT_0x1DB
007009 9631      	ADIW R30,1
00700a 940e c881 	CALL SUBOPT_0xE9
                 ; 000D 01A8         return -1;
00700c efef      	LDI  R30,LOW(65535)
00700d efff      	LDI  R31,HIGH(65535)
00700e c0a3      	RJMP _0x20E0069
                 ; 000D 01A9     }
                 ; 000D 01AA 
                 ; 000D 01AB     if(sensor[p1].status != SENS_NORMAL){
                 _0x1A0073:
00700f 81ae      	LDD  R26,Y+6
007010 81bf      	LDD  R27,Y+6+1
007011 940e d134 	CALL SUBOPT_0x238
007013 30e0      	CPI  R30,0
007014 f089      	BREQ _0x1A0074
                 ; 000D 01AC         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p1+1,sensor[p1].status);
                +
007015 e1e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 395 ) )
007016 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 395 ) )
007017 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 395 ) )
007018 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 395 ) )
                 	__POINTD1FN _0x1A0000,395
007019 940e c9ee 	CALL SUBOPT_0x129
00701b 940e cf1d 	CALL SUBOPT_0x202
00701d 85ae      	LDD  R26,Y+14
00701e 85bf      	LDD  R27,Y+14+1
00701f 940e d134 	CALL SUBOPT_0x238
007021 940e d13b 	CALL SUBOPT_0x239
                 ; 000D 01AD         return -1;
007023 efef      	LDI  R30,LOW(65535)
007024 efff      	LDI  R31,HIGH(65535)
007025 c08c      	RJMP _0x20E0069
                 ; 000D 01AE     }
                 ; 000D 01AF     if(sensor[p2].status != SENS_NORMAL){
                 _0x1A0074:
007026 81ac      	LDD  R26,Y+4
007027 81bd      	LDD  R27,Y+4+1
007028 940e d134 	CALL SUBOPT_0x238
00702a 30e0      	CPI  R30,0
00702b f089      	BREQ _0x1A0075
                 ; 000D 01B0         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p2+1,sensor[p2].status);
                +
00702c e1e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 395 ) )
00702d e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 395 ) )
00702e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 395 ) )
00702f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 395 ) )
                 	__POINTD1FN _0x1A0000,395
007030 940e ce3b 	CALL SUBOPT_0x1DB
007032 940e cf1d 	CALL SUBOPT_0x202
007034 85ac      	LDD  R26,Y+12
007035 85bd      	LDD  R27,Y+12+1
007036 940e d134 	CALL SUBOPT_0x238
007038 940e d13b 	CALL SUBOPT_0x239
                 ; 000D 01B1         return -1;
00703a efef      	LDI  R30,LOW(65535)
00703b efff      	LDI  R31,HIGH(65535)
00703c c075      	RJMP _0x20E0069
                 ; 000D 01B2     }
                 ; 000D 01B3 
                 ; 000D 01B4     epCalType[p2]   = CAL_SELFCOMPARE;
                 _0x1A0075:
00703d 81ac      	LDD  R26,Y+4
00703e 81bd      	LDD  R27,Y+4+1
00703f 5aa8      	SUBI R26,LOW(-_epCalType)
007040 4fb9      	SBCI R27,HIGH(-_epCalType)
007041 e0e1      	LDI  R30,LOW(1)
007042 940e e448 	CALL __EEPROMWRB
                 ; 000D 01B5 
                 ; 000D 01B6     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
007044 940e c3a4 	CALL SUBOPT_0x2E
007046 f021      	BREQ _0x1A0077
007047 940e c3a4 	CALL SUBOPT_0x2E
007049 30e3      	CPI  R30,LOW(0x3)
00704a f499      	BRNE _0x1A0076
                 _0x1A0077:
                 ; 000D 01B7         p2_raw          = (ADC_CONV_FAC*100 * adcData[p2]);
00704b 940e c3c2 	CALL SUBOPT_0x32
00704d 940e c3cf 	CALL SUBOPT_0x33
00704f 937f      	PUSH R23
007050 936f      	PUSH R22
007051 93ff      	PUSH R31
007052 93ef      	PUSH R30
007053 940e d140 	CALL SUBOPT_0x23A
007055 940e c32e 	CALL SUBOPT_0x1B
007057 91af      	POP  R26
007058 91bf      	POP  R27
007059 918f      	POP  R24
00705a 919f      	POP  R25
00705b 940e e1a1 	CALL __MULF12
00705d c033      	RJMP _0x1A00CC
                 ; 000D 01B8     }
                 ; 000D 01B9     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0076:
00705e 940e c3a4 	CALL SUBOPT_0x2E
007060 30e1      	CPI  R30,LOW(0x1)
007061 f439      	BRNE _0x1A007A
                 ; 000D 01BA         p2_raw          = epTMECTempSlope   * adcData[p2];
007062 940e d140 	CALL SUBOPT_0x23A
007064 940e c32e 	CALL SUBOPT_0x1B
007066 940e d0a8 	CALL SUBOPT_0x226
007068 c028      	RJMP _0x1A00CC
                 ; 000D 01BB     }
                 ; 000D 01BC     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A007A:
007069 940e c3a4 	CALL SUBOPT_0x2E
00706b 30e2      	CPI  R30,LOW(0x2)
00706c f531      	BRNE _0x1A007C
                 ; 000D 01BD         p2_raw          = (epPT100Temp_A    * adcData[p2] * adcData[p2]) +
                 ; 000D 01BE                           (epPT100Temp_B    * adcData[p2]);
00706d 940e d140 	CALL SUBOPT_0x23A
00706f 940e c32e 	CALL SUBOPT_0x1B
007071 940e d0b9 	CALL SUBOPT_0x228
007073 937f      	PUSH R23
007074 936f      	PUSH R22
007075 93ff      	PUSH R31
007076 93ef      	PUSH R30
007077 940e d140 	CALL SUBOPT_0x23A
007079 940e c32e 	CALL SUBOPT_0x1B
00707b 91af      	POP  R26
00707c 91bf      	POP  R27
00707d 918f      	POP  R24
00707e 919f      	POP  R25
00707f 940e e1a1 	CALL __MULF12
007081 937f      	PUSH R23
007082 936f      	PUSH R22
007083 93ff      	PUSH R31
007084 93ef      	PUSH R30
007085 940e d140 	CALL SUBOPT_0x23A
007087 940e c32e 	CALL SUBOPT_0x1B
007089 940e d0c0 	CALL SUBOPT_0x229
00708b 91af      	POP  R26
00708c 91bf      	POP  R27
00708d 918f      	POP  R24
00708e 919f      	POP  R25
00708f 940e e151 	CALL __ADDF12
                 _0x1A00CC:
007091 940e e3f6 	CALL __PUTD1S0
                 ; 000D 01BF     }
                 ; 000D 01C0 
                 ; 000D 01C1     epFactor_A[p2]  = 0;
                 _0x1A007C:
007093 81ec      	LDD  R30,Y+4
007094 81fd      	LDD  R31,Y+4+1
007095 940e d123 	CALL SUBOPT_0x235
007097 940e d144 	CALL SUBOPT_0x23B
                 ; 000D 01C2     epFactor_B[p2]  = 0;
007099 940e d14d 	CALL SUBOPT_0x23C
00709b 940e d144 	CALL SUBOPT_0x23B
                 ; 000D 01C3     epFactor_C[p2]  = sensor[p1].value - p2_raw;
00709d 940e d154 	CALL SUBOPT_0x23D
00709f 93ff      	PUSH R31
0070a0 93ef      	PUSH R30
0070a1 81ae      	LDD  R26,Y+6
0070a2 81bf      	LDD  R27,Y+6+1
0070a3 e0e5      	LDI  R30,LOW(5)
0070a4 940e e31e 	CALL __MULB1W2U
0070a6 940e c347 	CALL SUBOPT_0x20
0070a8 940e c62a 	CALL SUBOPT_0x8C
0070aa 940e e14a 	CALL __SUBF12
0070ac 91af      	POP  R26
0070ad 91bf      	POP  R27
0070ae 940e e438 	CALL __EEPROMWRD
                 ; 000D 01C4 
                 ; 000D 01C5     return 0;
0070b0 e0e0      	LDI  R30,LOW(0)
0070b1 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0069:
0070b2 9628      	ADIW R28,8
0070b3 9508      	RET
                 ; 000D 01C6 }
                 ;/*============================================================*/
                 ;int sensorCalibrate2(int prbId)
                 ; 000D 01C9 {
                 _sensorCalibrate2:
                 ; 000D 01CA     float p2_raw;
                 ; 000D 01CB     float tmpA,tmpB,tmpC;
                 ; 000D 01CC     //int i = 0;
                 ; 000D 01CD     //long viADCbuffer = 0;
                 ; 000D 01CE 
                 ; 000D 01CF     if(epIsPointSet1[prbId] == 0){
0070b4 93ba      	ST   -Y,R27
0070b5 93aa      	ST   -Y,R26
0070b6 9760      	SBIW R28,16
                 ;	prbId -> Y+16
                 ;	p2_raw -> Y+12
                 ;	tmpA -> Y+8
                 ;	tmpB -> Y+4
                 ;	tmpC -> Y+0
0070b7 89a8      	LDD  R26,Y+16
0070b8 89b9      	LDD  R27,Y+16+1
0070b9 52af      	SUBI R26,LOW(-_epIsPointSet1)
0070ba 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
0070bb 940e e42c 	CALL __EEPROMRDB
0070bd 30e0      	CPI  R30,0
0070be f461      	BRNE _0x1A007D
                 ; 000D 01D0         printDebug("<sensorCalibrate2> ABORT: sensor ch %d No set point found\r\n",prbId+1);
                +
0070bf e4ea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 450 ) )
0070c0 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 450 ) )
0070c1 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 450 ) )
0070c2 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 450 ) )
                 	__POINTD1FN _0x1A0000,450
0070c3 940e c87c 	CALL SUBOPT_0xE8
0070c5 9631      	ADIW R30,1
0070c6 940e c881 	CALL SUBOPT_0xE9
                 ; 000D 01D1         return -1;
0070c8 efef      	LDI  R30,LOW(65535)
0070c9 efff      	LDI  R31,HIGH(65535)
0070ca c16c      	RJMP _0x20E0068
                 ; 000D 01D2     }
                 ; 000D 01D3 
                 ; 000D 01D4     if(epIsPointSet2[prbId] == 0){
                 _0x1A007D:
0070cb 89a8      	LDD  R26,Y+16
0070cc 89b9      	LDD  R27,Y+16+1
0070cd 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0070ce 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0070cf 940e e42c 	CALL __EEPROMRDB
0070d1 30e0      	CPI  R30,0
0070d2 f011      	BREQ PC+3
0070d3 940c 714a 	JMP _0x1A007E
                 ; 000D 01D5         printDebug("<sensorCalibrate2> -- CAL_EXTOFFSET --\r\n");
                +
0070d5 e8e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 510 ) )
0070d6 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 510 ) )
0070d7 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 510 ) )
0070d8 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 510 ) )
                 	__POINTD1FN _0x1A0000,510
0070d9 940e c274 	CALL SUBOPT_0x3
                 ; 000D 01D6         epFactor_A[prbId]   = 0;
0070db 89e8      	LDD  R30,Y+16
0070dc 89f9      	LDD  R31,Y+16+1
0070dd 940e d123 	CALL SUBOPT_0x235
0070df 940e d157 	CALL SUBOPT_0x23E
                 ; 000D 01D7         epFactor_B[prbId]   = 0;
0070e1 89e8      	LDD  R30,Y+16
0070e2 89f9      	LDD  R31,Y+16+1
0070e3 940e d14d 	CALL SUBOPT_0x23C
0070e5 940e d157 	CALL SUBOPT_0x23E
                 ; 000D 01D8 
                 ; 000D 01D9         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0070e7 940e c3a4 	CALL SUBOPT_0x2E
0070e9 f021      	BREQ _0x1A0080
0070ea 940e c3a4 	CALL SUBOPT_0x2E
0070ec 30e3      	CPI  R30,LOW(0x3)
0070ed f489      	BRNE _0x1A007F
                 _0x1A0080:
                 ; 000D 01DA             p2_raw          = (ADC_CONV_FAC*100 * epADCRef1[prbId]);
0070ee 940e c3c2 	CALL SUBOPT_0x32
0070f0 940e c3cf 	CALL SUBOPT_0x33
0070f2 937f      	PUSH R23
0070f3 936f      	PUSH R22
0070f4 93ff      	PUSH R31
0070f5 93ef      	PUSH R30
0070f6 940e d15e 	CALL SUBOPT_0x23F
0070f8 91af      	POP  R26
0070f9 91bf      	POP  R27
0070fa 918f      	POP  R24
0070fb 919f      	POP  R25
0070fc 940e e1a1 	CALL __MULF12
0070fe c02b      	RJMP _0x1A00CD
                 ; 000D 01DB 
                 ; 000D 01DC 
                 ; 000D 01DD         }
                 ; 000D 01DE         else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A007F:
0070ff 940e c3a4 	CALL SUBOPT_0x2E
007101 30e1      	CPI  R30,LOW(0x1)
007102 f429      	BRNE _0x1A0083
                 ; 000D 01DF             p2_raw          = epTMECTempSlope   * epADCRef1[prbId];
007103 940e d15e 	CALL SUBOPT_0x23F
007105 940e d0a8 	CALL SUBOPT_0x226
007107 c022      	RJMP _0x1A00CD
                 ; 000D 01E0         }
                 ; 000D 01E1         else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0083:
007108 940e c3a4 	CALL SUBOPT_0x2E
00710a 30e2      	CPI  R30,LOW(0x2)
00710b f511      	BRNE _0x1A0085
                 ; 000D 01E2             p2_raw          = (epPT100Temp_A    * epADCRef1[prbId] * epADCRef1[prbId]) +
                 ; 000D 01E3                               (epPT100Temp_B    * epADCRef1[prbId]);
00710c 940e d15e 	CALL SUBOPT_0x23F
00710e 940e d0b9 	CALL SUBOPT_0x228
007110 937f      	PUSH R23
007111 936f      	PUSH R22
007112 93ff      	PUSH R31
007113 93ef      	PUSH R30
007114 940e d15e 	CALL SUBOPT_0x23F
007116 91af      	POP  R26
007117 91bf      	POP  R27
007118 918f      	POP  R24
007119 919f      	POP  R25
00711a 940e e1a1 	CALL __MULF12
00711c 937f      	PUSH R23
00711d 936f      	PUSH R22
00711e 93ff      	PUSH R31
00711f 93ef      	PUSH R30
007120 940e d15e 	CALL SUBOPT_0x23F
007122 940e d0c0 	CALL SUBOPT_0x229
007124 91af      	POP  R26
007125 91bf      	POP  R27
007126 918f      	POP  R24
007127 919f      	POP  R25
007128 940e e151 	CALL __ADDF12
                 _0x1A00CD:
                +
00712a 87ec     +STD Y + 12 , R30
00712b 87fd     +STD Y + 12 + 1 , R31
00712c 876e     +STD Y + 12 + 2 , R22
00712d 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 000D 01E4         }
                 ; 000D 01E5 
                 ; 000D 01E6         epFactor_C[prbId]   = epTempRef1[prbId] - p2_raw;
                 _0x1A0085:
00712e 89e8      	LDD  R30,Y+16
00712f 89f9      	LDD  R31,Y+16+1
007130 940e d154 	CALL SUBOPT_0x23D
007132 93ff      	PUSH R31
007133 93ef      	PUSH R30
007134 89e8      	LDD  R30,Y+16
007135 89f9      	LDD  R31,Y+16+1
007136 940e d08f 	CALL SUBOPT_0x223
007138 940e c2ba 	CALL SUBOPT_0xB
00713a 940e e14a 	CALL __SUBF12
00713c 91af      	POP  R26
00713d 91bf      	POP  R27
00713e 940e e438 	CALL __EEPROMWRD
                 ; 000D 01E7         epCalType[prbId]    = CAL_EXTOFFSET;
007140 940e d169 	CALL SUBOPT_0x240
007142 e0e2      	LDI  R30,LOW(2)
007143 940e e448 	CALL __EEPROMWRB
                 ; 000D 01E8         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
007145 940e d16e 	CALL SUBOPT_0x241
007147 940e d174 	CALL SUBOPT_0x242
                 ; 000D 01E9         return 0;
007149 c0eb      	RJMP _0x20E0067
                 ; 000D 01EA     }
                 ; 000D 01EB 
                 ; 000D 01EC     if(epIsPointSet3[prbId] == 0){
                 _0x1A007E:
00714a 89a8      	LDD  R26,Y+16
00714b 89b9      	LDD  R27,Y+16+1
00714c 5da5      	SUBI R26,LOW(-_epIsPointSet3)
00714d 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
00714e 940e e42c 	CALL __EEPROMRDB
007150 30e0      	CPI  R30,0
007151 f011      	BREQ PC+3
007152 940c 71ca 	JMP _0x1A0086
                 ; 000D 01ED         printDebug("<sensorCalibrate2> -- CAL_EXTLINEAR --\r\n");
                +
007154 ecee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 582 ) )
007155 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 582 ) )
007156 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 582 ) )
007157 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 582 ) )
                 	__POINTD1FN _0x1A0000,582
007158 940e c274 	CALL SUBOPT_0x3
                 ; 000D 01EE         epFactor_A[prbId]   = 0;
00715a 89e8      	LDD  R30,Y+16
00715b 89f9      	LDD  R31,Y+16+1
00715c 940e d123 	CALL SUBOPT_0x235
00715e 940e d157 	CALL SUBOPT_0x23E
                 ; 000D 01EF 
                 ; 000D 01F0         epFactor_B[prbId]   = (epTempRef2[prbId] - epTempRef1[prbId])/(epADCRef2[prbId] - epADCRef1[prbId]);
007160 89e8      	LDD  R30,Y+16
007161 89f9      	LDD  R31,Y+16+1
007162 eaa9      	LDI  R26,LOW(_epFactor_B)
007163 e0b5      	LDI  R27,HIGH(_epFactor_B)
007164 940e cfa3 	CALL SUBOPT_0x211
007166 93ff      	PUSH R31
007167 93ef      	PUSH R30
007168 940e d17b 	CALL SUBOPT_0x243
00716a 937f      	PUSH R23
00716b 936f      	PUSH R22
00716c 93ff      	PUSH R31
00716d 93ef      	PUSH R30
00716e 89e8      	LDD  R30,Y+16
00716f 89f9      	LDD  R31,Y+16+1
007170 940e d08f 	CALL SUBOPT_0x223
007172 91af      	POP  R26
007173 91bf      	POP  R27
007174 918f      	POP  R24
007175 919f      	POP  R25
007176 940e d08a 	CALL SUBOPT_0x222
007178 937f      	PUSH R23
007179 936f      	PUSH R22
00717a 93ff      	PUSH R31
00717b 93ef      	PUSH R30
00717c 940e d186 	CALL SUBOPT_0x244
00717e 937f      	PUSH R23
00717f 936f      	PUSH R22
007180 93ff      	PUSH R31
007181 93ef      	PUSH R30
007182 940e d15e 	CALL SUBOPT_0x23F
007184 91af      	POP  R26
007185 91bf      	POP  R27
007186 918f      	POP  R24
007187 919f      	POP  R25
007188 940e d08a 	CALL SUBOPT_0x222
00718a 91af      	POP  R26
00718b 91bf      	POP  R27
00718c 918f      	POP  R24
00718d 919f      	POP  R25
00718e 940e e1ef 	CALL __DIVF21
007190 91af      	POP  R26
007191 91bf      	POP  R27
007192 940e e438 	CALL __EEPROMWRD
                 ; 000D 01F1         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
007194 940e d191 	CALL SUBOPT_0x245
007196 940e d14d 	CALL SUBOPT_0x23C
007198 940e caa7 	CALL SUBOPT_0x14C
                 ; 000D 01F2 
                 ; 000D 01F3         epFactor_C[prbId]   = epTempRef2[prbId] - (epFactor_B[prbId] * epADCRef2[prbId]);
00719a 89e8      	LDD  R30,Y+16
00719b 89f9      	LDD  R31,Y+16+1
00719c 940e d154 	CALL SUBOPT_0x23D
00719e 93ff      	PUSH R31
00719f 93ef      	PUSH R30
0071a0 940e d17b 	CALL SUBOPT_0x243
0071a2 937f      	PUSH R23
0071a3 936f      	PUSH R22
0071a4 93ff      	PUSH R31
0071a5 93ef      	PUSH R30
0071a6 89e8      	LDD  R30,Y+16
0071a7 89f9      	LDD  R31,Y+16+1
0071a8 940e d14d 	CALL SUBOPT_0x23C
0071aa 940e e424 	CALL __EEPROMRDD
0071ac 937f      	PUSH R23
0071ad 936f      	PUSH R22
0071ae 93ff      	PUSH R31
0071af 93ef      	PUSH R30
0071b0 940e d186 	CALL SUBOPT_0x244
0071b2 91af      	POP  R26
0071b3 91bf      	POP  R27
0071b4 918f      	POP  R24
0071b5 919f      	POP  R25
0071b6 940e e1a1 	CALL __MULF12
0071b8 91af      	POP  R26
0071b9 91bf      	POP  R27
0071ba 918f      	POP  R24
0071bb 919f      	POP  R25
0071bc 940e d08a 	CALL SUBOPT_0x222
0071be 91af      	POP  R26
0071bf 91bf      	POP  R27
0071c0 940e e438 	CALL __EEPROMWRD
                 ; 000D 01F4         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
0071c2 940e d16e 	CALL SUBOPT_0x241
0071c4 940e d174 	CALL SUBOPT_0x242
                 ; 000D 01F5 
                 ; 000D 01F6         epCalType[prbId]    = CAL_EXTLINEAR;
0071c6 940e d169 	CALL SUBOPT_0x240
0071c8 e0e3      	LDI  R30,LOW(3)
0071c9 c069      	RJMP _0x1A00CE
                 ; 000D 01F7     }
                 ; 000D 01F8     else{
                 _0x1A0086:
                 ; 000D 01F9         printDebug("<sensorCalibrate2> -- CAL_EXTPOLYNOMIAL --\r\n");
                +
0071ca e1e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 654 ) )
0071cb e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 654 ) )
0071cc e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 654 ) )
0071cd e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 654 ) )
                 	__POINTD1FN _0x1A0000,654
0071ce 940e c274 	CALL SUBOPT_0x3
                 ; 000D 01FA 
                 ; 000D 01FB         gaussian(epADCRef1[prbId],  epADCRef2[prbId],  epADCRef3[prbId],
                 ; 000D 01FC                  epTempRef1[prbId], epTempRef2[prbId], epTempRef3[prbId],
                 ; 000D 01FD                  &tmpA, &tmpB, &tmpC);
0071d0 940e d15e 	CALL SUBOPT_0x23F
0071d2 940e c87c 	CALL SUBOPT_0xE8
0071d4 e0a3      	LDI  R26,LOW(_epADCRef2)
0071d5 e0b6      	LDI  R27,HIGH(_epADCRef2)
0071d6 940e d197 	CALL SUBOPT_0x246
0071d8 8de8      	LDD  R30,Y+24
0071d9 8df9      	LDD  R31,Y+24+1
0071da 940e d0fb 	CALL SUBOPT_0x22F
0071dc 940e c8a6 	CALL SUBOPT_0xF1
0071de 940e d08f 	CALL SUBOPT_0x223
0071e0 940e e400 	CALL __PUTPARD1
0071e2 a1e8      	LDD  R30,Y+32
0071e3 a1f9      	LDD  R31,Y+32+1
0071e4 e1a7      	LDI  R26,LOW(_epTempRef2)
0071e5 e0b6      	LDI  R27,HIGH(_epTempRef2)
0071e6 940e d197 	CALL SUBOPT_0x246
0071e8 a1ec      	LDD  R30,Y+36
0071e9 a1fd      	LDD  R31,Y+36+1
0071ea 940e d104 	CALL SUBOPT_0x230
0071ec 940e e400 	CALL __PUTPARD1
0071ee 01fe      	MOVW R30,R28
0071ef 96b0      	ADIW R30,32
0071f0 93fa      	ST   -Y,R31
0071f1 93ea      	ST   -Y,R30
0071f2 01fe      	MOVW R30,R28
0071f3 967e      	ADIW R30,30
0071f4 93fa      	ST   -Y,R31
0071f5 93ea      	ST   -Y,R30
0071f6 01de      	MOVW R26,R28
0071f7 965c      	ADIW R26,28
0071f8 940e a0eb 	CALL _gaussian
                 ; 000D 01FE 
                 ; 000D 01FF         epFactor_A[prbId]   = tmpA;
0071fa 89e8      	LDD  R30,Y+16
0071fb 89f9      	LDD  R31,Y+16+1
0071fc e9a5      	LDI  R26,LOW(_epFactor_A)
0071fd e0b5      	LDI  R27,HIGH(_epFactor_A)
0071fe 940e e2a7 	CALL __LSLW2
007200 0fae      	ADD  R26,R30
007201 1fbf      	ADC  R27,R31
007202 940e c491 	CALL SUBOPT_0x4F
007204 940e e438 	CALL __EEPROMWRD
                 ; 000D 0200         epFactor_B[prbId]   = tmpB;
007206 89e8      	LDD  R30,Y+16
007207 89f9      	LDD  R31,Y+16+1
007208 eaa9      	LDI  R26,LOW(_epFactor_B)
007209 e0b5      	LDI  R27,HIGH(_epFactor_B)
00720a 940e e2a7 	CALL __LSLW2
00720c 0fae      	ADD  R26,R30
00720d 1fbf      	ADC  R27,R31
00720e 940e c617 	CALL SUBOPT_0x89
007210 940e e438 	CALL __EEPROMWRD
                 ; 000D 0201         epFactor_C[prbId]   = tmpC;
007212 89e8      	LDD  R30,Y+16
007213 89f9      	LDD  R31,Y+16+1
007214 ebad      	LDI  R26,LOW(_epFactor_C)
007215 e0b5      	LDI  R27,HIGH(_epFactor_C)
007216 940e d1a0 	CALL SUBOPT_0x247
007218 940e c60b 	CALL SUBOPT_0x87
00721a 940e e438 	CALL __EEPROMWRD
                 ; 000D 0202 
                 ; 000D 0203         printDebug("<sensorCalibrate2> --A--> %f\r\n", epFactor_A[prbId]);
                +
00721c e4e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 699 ) )
00721d e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 699 ) )
00721e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 699 ) )
00721f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 699 ) )
                 	__POINTD1FN _0x1A0000,699
007220 940e c87c 	CALL SUBOPT_0xE8
007222 940e d123 	CALL SUBOPT_0x235
007224 940e caa7 	CALL SUBOPT_0x14C
                 ; 000D 0204         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
007226 940e d191 	CALL SUBOPT_0x245
007228 940e d14d 	CALL SUBOPT_0x23C
00722a 940e caa7 	CALL SUBOPT_0x14C
                 ; 000D 0205         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
00722c 940e d16e 	CALL SUBOPT_0x241
00722e 940e d174 	CALL SUBOPT_0x242
                 ; 000D 0206 
                 ; 000D 0207 
                 ; 000D 0208 
                 ; 000D 0209         epCalType[prbId]    = CAL_EXTPOLYNOMIAL;
007230 940e d169 	CALL SUBOPT_0x240
007232 e0e4      	LDI  R30,LOW(4)
                 _0x1A00CE:
007233 940e e448 	CALL __EEPROMWRB
                 ; 000D 020A     }
                 ; 000D 020B 
                 ; 000D 020C     return 0;
                 _0x20E0067:
007235 e0e0      	LDI  R30,LOW(0)
007236 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
007237 9662      	ADIW R28,18
007238 9508      	RET
                 ; 000D 020D }
                 ;/*============================================================*/
                 ;int sensorGetCurrentSetPoint(int ch,int pnt, unsigned char *buf)
                 ; 000D 0210 {
                 _sensorGetCurrentSetPoint:
                 ; 000D 0211     unsigned char   valStr[10];
                 ; 000D 0212     float           valTmp;
                 ; 000D 0213     //signed int      val;
                 ; 000D 0214     int             i;
                 ; 000D 0215 
                 ; 000D 0216     if(pnt == CALPOINT(1)){
007239 93ba      	ST   -Y,R27
00723a 93aa      	ST   -Y,R26
00723b 972e      	SBIW R28,14
00723c 931a      	ST   -Y,R17
00723d 930a      	ST   -Y,R16
                 ;	ch -> Y+20
                 ;	pnt -> Y+18
                 ;	*buf -> Y+16
                 ;	valStr -> Y+6
                 ;	valTmp -> Y+2
                 ;	i -> R16,R17
00723e 89aa      	LDD  R26,Y+18
00723f 89bb      	LDD  R27,Y+18+1
007240 36a5      	CPI  R26,LOW(0x65)
007241 e0e0      	LDI  R30,HIGH(0x65)
007242 07be      	CPC  R27,R30
007243 f551      	BRNE _0x1A0088
                 ; 000D 0217         if(epIsPointSet1[ch] == 1){
007244 89ac      	LDD  R26,Y+20
007245 89bd      	LDD  R27,Y+20+1
007246 52af      	SUBI R26,LOW(-_epIsPointSet1)
007247 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
007248 940e e42c 	CALL __EEPROMRDB
00724a 30e1      	CPI  R30,LOW(0x1)
00724b f4b9      	BRNE _0x1A0089
                 ; 000D 0218             valTmp  = epTempRef1[ch];
00724c 89ec      	LDD  R30,Y+20
00724d 89fd      	LDD  R31,Y+20+1
00724e 940e d08f 	CALL SUBOPT_0x223
007250 940e c728 	CALL SUBOPT_0xB2
                 ; 000D 0219             printDebug("<sensorGetCurrentSetPoint> tempRef1 = [%f][%f]\r\n",epTempRef1[ch],valTmp);
                +
007252 e6e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 730 ) )
007253 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 730 ) )
007254 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 730 ) )
007255 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 730 ) )
                 	__POINTD1FN _0x1A0000,730
007256 940e d1a5 	CALL SUBOPT_0x248
007258 940e d08f 	CALL SUBOPT_0x223
00725a 940e c4c4 	CALL SUBOPT_0x57
00725c 940e c34d 	CALL SUBOPT_0x21
                 ; 000D 021A             ftoa(valTmp,2,valStr);
00725e 940e c8a2 	CALL SUBOPT_0xF0
007260 940e d1aa 	CALL SUBOPT_0x249
                 ; 000D 021B             //val = (epTempRef1[ch] * 100);
                 ; 000D 021C         }
                 ; 000D 021D         else{
007262 c00a      	RJMP _0x1A008A
                 _0x1A0089:
                 ; 000D 021E             printDebug("<sensorGetCurrentSetPoint> tempRef1 not set [0.00]\r\n");
                +
007263 e9e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 779 ) )
007264 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 779 ) )
007265 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 779 ) )
007266 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 779 ) )
                 	__POINTD1FN _0x1A0000,779
007267 940e c274 	CALL SUBOPT_0x3
                 ; 000D 021F             sprintf(valStr,"0.00");                 //val = 0;
007269 940e c4bf 	CALL SUBOPT_0x56
00726b 940e d1b0 	CALL SUBOPT_0x24A
                 ; 000D 0220         }
                 _0x1A008A:
                 ; 000D 0221     }
                 ; 000D 0222     else if(pnt == CALPOINT(2)){
00726d c071      	RJMP _0x1A008B
                 _0x1A0088:
00726e 89aa      	LDD  R26,Y+18
00726f 89bb      	LDD  R27,Y+18+1
007270 36a6      	CPI  R26,LOW(0x66)
007271 e0e0      	LDI  R30,HIGH(0x66)
007272 07be      	CPC  R27,R30
007273 f591      	BRNE _0x1A008C
                 ; 000D 0223         if(epIsPointSet2[ch] == 1){
007274 89ac      	LDD  R26,Y+20
007275 89bd      	LDD  R27,Y+20+1
007276 50a2      	SUBI R26,LOW(-_epIsPointSet2)
007277 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
007278 940e e42c 	CALL __EEPROMRDB
00727a 30e1      	CPI  R30,LOW(0x1)
00727b f4f9      	BRNE _0x1A008D
                 ; 000D 0224             valTmp  = epTempRef2[ch];
00727c 89ec      	LDD  R30,Y+20
00727d 89fd      	LDD  R31,Y+20+1
00727e e1a7      	LDI  R26,LOW(_epTempRef2)
00727f e0b6      	LDI  R27,HIGH(_epTempRef2)
007280 940e d1a0 	CALL SUBOPT_0x247
007282 940e e424 	CALL __EEPROMRDD
007284 940e c728 	CALL SUBOPT_0xB2
                 ; 000D 0225             printDebug("<sensorGetCurrentSetPoint> tempRef2 = [%f][%f]\r\n",epTempRef2[ch],valTmp);
                +
007286 eced     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 837 ) )
007287 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 837 ) )
007288 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 837 ) )
007289 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 837 ) )
                 	__POINTD1FN _0x1A0000,837
00728a 940e d1a5 	CALL SUBOPT_0x248
00728c e1a7      	LDI  R26,LOW(_epTempRef2)
00728d e0b6      	LDI  R27,HIGH(_epTempRef2)
00728e 940e d1a0 	CALL SUBOPT_0x247
007290 940e e424 	CALL __EEPROMRDD
007292 940e c4c4 	CALL SUBOPT_0x57
007294 940e c34d 	CALL SUBOPT_0x21
                 ; 000D 0226             ftoa(valTmp,2,valStr);
007296 940e c8a2 	CALL SUBOPT_0xF0
007298 940e d1aa 	CALL SUBOPT_0x249
                 ; 000D 0227             //val = (epTempRef1[ch] * 100);
                 ; 000D 0228         }
                 ; 000D 0229         else{
00729a c00a      	RJMP _0x1A008E
                 _0x1A008D:
                 ; 000D 022A             printDebug("<sensorGetCurrentSetPoint> tempRef2 not set [0.00]\r\n");
                +
00729b efee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 886 ) )
00729c e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 886 ) )
00729d e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 886 ) )
00729e e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 886 ) )
                 	__POINTD1FN _0x1A0000,886
00729f 940e c274 	CALL SUBOPT_0x3
                 ; 000D 022B             sprintf(valStr,"0.00");                 //val = 0;
0072a1 940e c4bf 	CALL SUBOPT_0x56
0072a3 940e d1b0 	CALL SUBOPT_0x24A
                 ; 000D 022C         }
                 _0x1A008E:
                 ; 000D 022D         /*
                 ; 000D 022E         if(epIsPointSet2[ch] == 1){ val = (epTempRef2[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef2[ch]);}
                 ; 000D 022F         else{                       val = 0;        }
                 ; 000D 0230         */
                 ; 000D 0231     }
                 ; 000D 0232     else if(pnt == CALPOINT(3)){
0072a5 c039      	RJMP _0x1A008F
                 _0x1A008C:
0072a6 89aa      	LDD  R26,Y+18
0072a7 89bb      	LDD  R27,Y+18+1
0072a8 36a7      	CPI  R26,LOW(0x67)
0072a9 e0e0      	LDI  R30,HIGH(0x67)
0072aa 07be      	CPC  R27,R30
0072ab f551      	BRNE _0x1A0090
                 ; 000D 0233         if(epIsPointSet3[ch] == 1){
0072ac 89ac      	LDD  R26,Y+20
0072ad 89bd      	LDD  R27,Y+20+1
0072ae 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0072af 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0072b0 940e e42c 	CALL __EEPROMRDB
0072b2 30e1      	CPI  R30,LOW(0x1)
0072b3 f4b9      	BRNE _0x1A0091
                 ; 000D 0234             valTmp  = epTempRef3[ch];
0072b4 89ec      	LDD  R30,Y+20
0072b5 89fd      	LDD  R31,Y+20+1
0072b6 940e d104 	CALL SUBOPT_0x230
0072b8 940e c728 	CALL SUBOPT_0xB2
                 ; 000D 0235             printDebug("<sensorGetCurrentSetPoint> tempRef3 = [%f][%f]\r\n",epTempRef3[ch],valTmp);
                +
0072ba e3e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 939 ) )
0072bb e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 939 ) )
0072bc e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 939 ) )
0072bd e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 939 ) )
                 	__POINTD1FN _0x1A0000,939
0072be 940e d1a5 	CALL SUBOPT_0x248
0072c0 940e d104 	CALL SUBOPT_0x230
0072c2 940e c4c4 	CALL SUBOPT_0x57
0072c4 940e c34d 	CALL SUBOPT_0x21
                 ; 000D 0236             ftoa(valTmp,2,valStr);
0072c6 940e c8a2 	CALL SUBOPT_0xF0
0072c8 940e d1aa 	CALL SUBOPT_0x249
                 ; 000D 0237             //val = (epTempRef1[ch] * 100);
                 ; 000D 0238         }
                 ; 000D 0239         else{
0072ca c00a      	RJMP _0x1A0092
                 _0x1A0091:
                 ; 000D 023A             printDebug("<sensorGetCurrentSetPoint> tempRef3 not set [0.00]\r\n");
                +
0072cb e6e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 988 ) )
0072cc e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 988 ) )
0072cd e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 988 ) )
0072ce e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 988 ) )
                 	__POINTD1FN _0x1A0000,988
0072cf 940e c274 	CALL SUBOPT_0x3
                 ; 000D 023B             sprintf(valStr,"0.00");                 //val = 0;
0072d1 940e c4bf 	CALL SUBOPT_0x56
0072d3 940e d1b0 	CALL SUBOPT_0x24A
                 ; 000D 023C         }
                 _0x1A0092:
                 ; 000D 023D         /*
                 ; 000D 023E         if(epIsPointSet3[ch] == 1){ val = (epTempRef3[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef3[ch]);}
                 ; 000D 023F         else{                       val = 0;        }
                 ; 000D 0240         */
                 ; 000D 0241     }
                 ; 000D 0242     else{
0072d5 c009      	RJMP _0x1A0093
                 _0x1A0090:
                 ; 000D 0243         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
0072d6 940e d1bb 	CALL SUBOPT_0x24B
0072d8 89ee      	LDD  R30,Y+22
0072d9 89ff      	LDD  R31,Y+22+1
0072da 940e c881 	CALL SUBOPT_0xE9
                 ; 000D 0244         return -1;
0072dc efef      	LDI  R30,LOW(65535)
0072dd efff      	LDI  R31,HIGH(65535)
0072de c0d8      	RJMP _0x20E0066
                 ; 000D 0245     }
                 _0x1A0093:
                 _0x1A008F:
                 _0x1A008B:
                 ; 000D 0246     //printDebug("<sensorGetCurrentSetPoint> read val = [%d]\r\n",val);
                 ; 000D 0247     printDebug("<sensorGetCurrentSetPoint> read val(%d) = [%s]\r\n",strlen(valStr),valStr);
                +
0072df ede1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1097 ) )
0072e0 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1097 ) )
0072e1 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1097 ) )
0072e2 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1097 ) )
                 	__POINTD1FN _0x1A0000,1097
0072e3 940e e400 	CALL __PUTPARD1
0072e5 01de      	MOVW R26,R28
0072e6 961a      	ADIW R26,10
0072e7 940e a81c 	CALL _strlen
0072e9 940e c3d6 	CALL SUBOPT_0x34
0072eb 01fe      	MOVW R30,R28
0072ec 963e      	ADIW R30,14
0072ed 940e ca5c 	CALL SUBOPT_0x13F
                 ; 000D 0248 
                 ; 000D 0249     if(valStr[0] == '-'){
0072ef 81ae      	LDD  R26,Y+6
0072f0 32ad      	CPI  R26,LOW(0x2D)
0072f1 f011      	BREQ PC+3
0072f2 940c 7345 	JMP _0x1A0094
                 ; 000D 024A         buf[0] = 1;
0072f4 89a8      	LDD  R26,Y+16
0072f5 89b9      	LDD  R27,Y+16+1
0072f6 e0e1      	LDI  R30,LOW(1)
0072f7 93ec      	ST   X,R30
                 ; 000D 024B         if(strlen(valStr) == 7){
0072f8 940e d1c2 	CALL SUBOPT_0x24C
0072fa 30e7      	CPI  R30,LOW(0x7)
0072fb e0a0      	LDI  R26,HIGH(0x7)
0072fc 07fa      	CPC  R31,R26
0072fd f499      	BRNE _0x1A0095
                 ; 000D 024C             buf[1]  = valStr[1] - 0x30;     buf[2]  = valStr[2] - 0x30;     buf[3]  = valStr[3] - 0x30;
0072fe 81ef      	LDD  R30,Y+7
0072ff 53e0      	SUBI R30,LOW(48)
                +
007300 89a8     +LDD R26 , Y + 16
007301 89b9     +LDD R27 , Y + 16 + 1
007302 9611     +ADIW R26 , 1
007303 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
007304 85e8      	LDD  R30,Y+8
007305 940e d1c6 	CALL SUBOPT_0x24D
007307 85e9      	LDD  R30,Y+9
007308 940e d1cc 	CALL SUBOPT_0x24E
                 ; 000D 024D             buf[4]  = valStr[5] - 0x30;     buf[5]  = valStr[6] - 0x30;
00730a 85eb      	LDD  R30,Y+11
00730b 940e d1d2 	CALL SUBOPT_0x24F
00730d 85ec      	LDD  R30,Y+12
00730e 940e d1d8 	CALL SUBOPT_0x250
                 ; 000D 024E         }
                 ; 000D 024F         else if(strlen(valStr) == 6){
007310 c033      	RJMP _0x1A0096
                 _0x1A0095:
007311 940e d1c2 	CALL SUBOPT_0x24C
007313 30e6      	CPI  R30,LOW(0x6)
007314 e0a0      	LDI  R26,HIGH(0x6)
007315 07fa      	CPC  R31,R26
007316 f479      	BRNE _0x1A0097
                 ; 000D 0250             buf[1]  = 0;                    buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
007317 940e d1de 	CALL SUBOPT_0x251
007319 81ef      	LDD  R30,Y+7
00731a 940e d1c6 	CALL SUBOPT_0x24D
00731c 85e8      	LDD  R30,Y+8
00731d 940e d1cc 	CALL SUBOPT_0x24E
                 ; 000D 0251             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
00731f 85ea      	LDD  R30,Y+10
007320 940e d1d2 	CALL SUBOPT_0x24F
007322 85eb      	LDD  R30,Y+11
007323 940e d1d8 	CALL SUBOPT_0x250
                 ; 000D 0252         }
                 ; 000D 0253         else if(strlen(valStr) == 5){
007325 c01e      	RJMP _0x1A0098
                 _0x1A0097:
007326 940e d1c2 	CALL SUBOPT_0x24C
007328 30e5      	CPI  R30,LOW(0x5)
007329 e0a0      	LDI  R26,HIGH(0x5)
00732a 07fa      	CPC  R31,R26
00732b f489      	BRNE _0x1A0099
                 ; 000D 0254             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[1] - 0x30;
00732c 940e d1de 	CALL SUBOPT_0x251
00732e 89a8      	LDD  R26,Y+16
00732f 89b9      	LDD  R27,Y+16+1
007330 9612      	ADIW R26,2
007331 e0e0      	LDI  R30,LOW(0)
007332 93ec      	ST   X,R30
007333 81ef      	LDD  R30,Y+7
007334 940e d1cc 	CALL SUBOPT_0x24E
                 ; 000D 0255             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
007336 85e9      	LDD  R30,Y+9
007337 940e d1d2 	CALL SUBOPT_0x24F
007339 85ea      	LDD  R30,Y+10
00733a 940e d1d8 	CALL SUBOPT_0x250
                 ; 000D 0256         }
                 ; 000D 0257         else{
00733c c007      	RJMP _0x1A009A
                 _0x1A0099:
                 ; 000D 0258             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
00733d 940e d1e4 	CALL SUBOPT_0x252
00733f 940e c2ea 	CALL SUBOPT_0x12
                 ; 000D 0259             return -1;
007341 efef      	LDI  R30,LOW(65535)
007342 efff      	LDI  R31,HIGH(65535)
007343 c073      	RJMP _0x20E0066
                 ; 000D 025A         }
                 _0x1A009A:
                 _0x1A0098:
                 _0x1A0096:
                 ; 000D 025B     }
                 ; 000D 025C     else{
007344 c050      	RJMP _0x1A009B
                 _0x1A0094:
                 ; 000D 025D         buf[0] = 0;
007345 89a8      	LDD  R26,Y+16
007346 89b9      	LDD  R27,Y+16+1
007347 e0e0      	LDI  R30,LOW(0)
007348 93ec      	ST   X,R30
                 ; 000D 025E         if(strlen(valStr) == 6){
007349 940e d1c2 	CALL SUBOPT_0x24C
00734b 30e6      	CPI  R30,LOW(0x6)
00734c e0a0      	LDI  R26,HIGH(0x6)
00734d 07fa      	CPC  R31,R26
00734e f499      	BRNE _0x1A009C
                 ; 000D 025F             buf[1]  = valStr[0] - 0x30;     buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
00734f 81ee      	LDD  R30,Y+6
007350 53e0      	SUBI R30,LOW(48)
                +
007351 89a8     +LDD R26 , Y + 16
007352 89b9     +LDD R27 , Y + 16 + 1
007353 9611     +ADIW R26 , 1
007354 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
007355 81ef      	LDD  R30,Y+7
007356 940e d1c6 	CALL SUBOPT_0x24D
007358 85e8      	LDD  R30,Y+8
007359 940e d1cc 	CALL SUBOPT_0x24E
                 ; 000D 0260             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
00735b 85ea      	LDD  R30,Y+10
00735c 940e d1d2 	CALL SUBOPT_0x24F
00735e 85eb      	LDD  R30,Y+11
00735f 940e d1d8 	CALL SUBOPT_0x250
                 ; 000D 0261         }
                 ; 000D 0262         else if(strlen(valStr) == 5){
007361 c033      	RJMP _0x1A009D
                 _0x1A009C:
007362 940e d1c2 	CALL SUBOPT_0x24C
007364 30e5      	CPI  R30,LOW(0x5)
007365 e0a0      	LDI  R26,HIGH(0x5)
007366 07fa      	CPC  R31,R26
007367 f479      	BRNE _0x1A009E
                 ; 000D 0263             buf[1]  = 0;                    buf[2]  = valStr[0] - 0x30;     buf[3]  = valStr[1] - 0x30;
007368 940e d1de 	CALL SUBOPT_0x251
00736a 81ee      	LDD  R30,Y+6
00736b 940e d1c6 	CALL SUBOPT_0x24D
00736d 81ef      	LDD  R30,Y+7
00736e 940e d1cc 	CALL SUBOPT_0x24E
                 ; 000D 0264             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
007370 85e9      	LDD  R30,Y+9
007371 940e d1d2 	CALL SUBOPT_0x24F
007373 85ea      	LDD  R30,Y+10
007374 940e d1d8 	CALL SUBOPT_0x250
                 ; 000D 0265         }
                 ; 000D 0266         else if(strlen(valStr) == 4){
007376 c01e      	RJMP _0x1A009F
                 _0x1A009E:
007377 940e d1c2 	CALL SUBOPT_0x24C
007379 30e4      	CPI  R30,LOW(0x4)
00737a e0a0      	LDI  R26,HIGH(0x4)
00737b 07fa      	CPC  R31,R26
00737c f489      	BRNE _0x1A00A0
                 ; 000D 0267             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[0] - 0x30;
00737d 940e d1de 	CALL SUBOPT_0x251
00737f 89a8      	LDD  R26,Y+16
007380 89b9      	LDD  R27,Y+16+1
007381 9612      	ADIW R26,2
007382 e0e0      	LDI  R30,LOW(0)
007383 93ec      	ST   X,R30
007384 81ee      	LDD  R30,Y+6
007385 940e d1cc 	CALL SUBOPT_0x24E
                 ; 000D 0268             buf[4]  = valStr[2] - 0x30;     buf[5]  = valStr[3] - 0x30;
007387 85e8      	LDD  R30,Y+8
007388 940e d1d2 	CALL SUBOPT_0x24F
00738a 85e9      	LDD  R30,Y+9
00738b 940e d1d8 	CALL SUBOPT_0x250
                 ; 000D 0269         }
                 ; 000D 026A         else{
00738d c007      	RJMP _0x1A00A1
                 _0x1A00A0:
                 ; 000D 026B             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
00738e 940e d1e4 	CALL SUBOPT_0x252
007390 940e c2ea 	CALL SUBOPT_0x12
                 ; 000D 026C             return -1;
007392 efef      	LDI  R30,LOW(65535)
007393 efff      	LDI  R31,HIGH(65535)
007394 c022      	RJMP _0x20E0066
                 ; 000D 026D         }
                 _0x1A00A1:
                 _0x1A009F:
                 _0x1A009D:
                 ; 000D 026E     }
                 _0x1A009B:
                 ; 000D 026F 
                 ; 000D 0270     printDebug("<sensorGetCurrentSetPoint> buf read");
                +
007395 e3ec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1204 ) )
007396 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1204 ) )
007397 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1204 ) )
007398 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1204 ) )
                 	__POINTD1FN _0x1A0000,1204
007399 940e c274 	CALL SUBOPT_0x3
                 ; 000D 0271     for(i=0;i<6;i++){
                +
00739b e000     +LDI R16 , LOW ( 0 )
00739c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A00A3:
                +
00739d 3006     +CPI R16 , LOW ( 6 )
00739e e0e0     +LDI R30 , HIGH ( 6 )
00739f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
0073a0 f474      	BRGE _0x1A00A4
                 ; 000D 0272         printDebug("[%d]",buf[i]);
                +
0073a1 e6e0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1240 ) )
0073a2 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1240 ) )
0073a3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1240 ) )
0073a4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1240 ) )
                 	__POINTD1FN _0x1A0000,1240
0073a5 940e e400 	CALL __PUTPARD1
0073a7 01f8      	MOVW R30,R16
0073a8 89ac      	LDD  R26,Y+20
0073a9 89bd      	LDD  R27,Y+20+1
0073aa 940e cc25 	CALL SUBOPT_0x184
                 ; 000D 0273     }
                +
0073ac 5f0f     +SUBI R16 , LOW ( - 1 )
0073ad 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0073ae cfee      	RJMP _0x1A00A3
                 _0x1A00A4:
                 ; 000D 0274     printDebug("\r\n");
                +
0073af ebe9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 49 ) )
0073b0 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 49 ) )
0073b1 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 49 ) )
0073b2 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 49 ) )
                 	__POINTD1FN _0x1A0000,49
0073b3 940e c274 	CALL SUBOPT_0x3
                 ; 000D 0275 
                 ; 000D 0276     return 0;
0073b5 e0e0      	LDI  R30,LOW(0)
0073b6 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0066:
0073b7 8119      	LDD  R17,Y+1
0073b8 8108      	LDD  R16,Y+0
0073b9 9666      	ADIW R28,22
0073ba 9508      	RET
                 ; 000D 0277 }
                 ;/*============================================================*/
                 ;int sensorSetCurrentSetPoint(int ch,int pnt,unsigned char *buf)
                 ; 000D 027A {
                 _sensorSetCurrentSetPoint:
                 ; 000D 027B     float   val=0;
                 ; 000D 027C     long viADCbuffer = 0;
                 ; 000D 027D     int i = 0;
                 ; 000D 027E 
                 ; 000D 027F     if(operating_config.sensorEnable[ch] != 0x01){
0073bb 93ba      	ST   -Y,R27
0073bc 93aa      	ST   -Y,R26
0073bd 9728      	SBIW R28,8
0073be 940e d1ee 	CALL SUBOPT_0x253
0073c0 e0e0      	LDI  R30,LOW(0)
0073c1 83eb      	STD  Y+3,R30
0073c2 83ec      	STD  Y+4,R30
0073c3 83ed      	STD  Y+5,R30
0073c4 83ee      	STD  Y+6,R30
0073c5 83ef      	STD  Y+7,R30
0073c6 940e caad 	CALL SUBOPT_0x14D
                 ;	ch -> Y+14
                 ;	pnt -> Y+12
                 ;	*buf -> Y+10
                 ;	val -> Y+6
                 ;	viADCbuffer -> Y+2
                 ;	i -> R16,R17
                +
0073c8 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
0073c9 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
0073ca 85ae      	LDD  R26,Y+14
0073cb 85bf      	LDD  R27,Y+14+1
0073cc 940e d12f 	CALL SUBOPT_0x237
0073ce f061      	BREQ _0x1A00A5
                 ; 000D 0280         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d is disable\r\n",ch+1);
                +
0073cf e6e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1245 ) )
0073d0 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1245 ) )
0073d1 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1245 ) )
0073d2 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1245 ) )
                 	__POINTD1FN _0x1A0000,1245
0073d3 940e d1f3 	CALL SUBOPT_0x254
0073d5 9631      	ADIW R30,1
0073d6 940e c881 	CALL SUBOPT_0xE9
                 ; 000D 0281         return -1;
0073d8 efef      	LDI  R30,LOW(65535)
0073d9 efff      	LDI  R31,HIGH(65535)
0073da c149      	RJMP _0x20E0065
                 ; 000D 0282     }
                 ; 000D 0283 
                 ; 000D 0284     if(sensor[ch].status != SENS_NORMAL){
                 _0x1A00A5:
0073db 85ae      	LDD  R26,Y+14
0073dc 85bf      	LDD  R27,Y+14+1
0073dd 940e d134 	CALL SUBOPT_0x238
0073df 30e0      	CPI  R30,0
0073e0 f089      	BREQ _0x1A00A6
                 ; 000D 0285         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d error(0x%02X)\r\n",ch+1,sensor[ch].status);
                +
0073e1 eae1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1305 ) )
0073e2 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1305 ) )
0073e3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1305 ) )
0073e4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1305 ) )
                 	__POINTD1FN _0x1A0000,1305
0073e5 940e d1f3 	CALL SUBOPT_0x254
0073e7 940e cf1d 	CALL SUBOPT_0x202
0073e9 89ae      	LDD  R26,Y+22
0073ea 89bf      	LDD  R27,Y+22+1
0073eb 940e d134 	CALL SUBOPT_0x238
0073ed 940e d13b 	CALL SUBOPT_0x239
                 ; 000D 0286         return -1;
0073ef efef      	LDI  R30,LOW(65535)
0073f0 efff      	LDI  R31,HIGH(65535)
0073f1 c132      	RJMP _0x20E0065
                 ; 000D 0287     }
                 ; 000D 0288 
                 ; 000D 0289     printDebug("<sensorSetCurrentSetPoint> buf: [%d]/[%d][%d][%d][%d][%d]\r\n",
                 _0x1A00A6:
                 ; 000D 028A                                         buf[0],buf[1],buf[2],buf[3],buf[4],buf[5]);
                +
0073f2 eee0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1368 ) )
0073f3 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1368 ) )
0073f4 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1368 ) )
0073f5 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1368 ) )
                 	__POINTD1FN _0x1A0000,1368
0073f6 940e e400 	CALL __PUTPARD1
0073f8 85ae      	LDD  R26,Y+14
0073f9 85bf      	LDD  R27,Y+14+1
0073fa 91ec      	LD   R30,X
0073fb 940e c525 	CALL SUBOPT_0x65
0073fd 89ea      	LDD  R30,Y+18
0073fe 89fb      	LDD  R31,Y+18+1
0073ff 81e1      	LDD  R30,Z+1
007400 940e c525 	CALL SUBOPT_0x65
007402 89ee      	LDD  R30,Y+22
007403 89ff      	LDD  R31,Y+22+1
007404 81e2      	LDD  R30,Z+2
007405 940e c525 	CALL SUBOPT_0x65
007407 8dea      	LDD  R30,Y+26
007408 8dfb      	LDD  R31,Y+26+1
007409 81e3      	LDD  R30,Z+3
00740a 940e c525 	CALL SUBOPT_0x65
00740c 8dee      	LDD  R30,Y+30
00740d 8dff      	LDD  R31,Y+30+1
00740e 81e4      	LDD  R30,Z+4
00740f 940e c525 	CALL SUBOPT_0x65
007411 a1ea      	LDD  R30,Y+34
007412 a1fb      	LDD  R31,Y+34+1
007413 81e5      	LDD  R30,Z+5
007414 940e c525 	CALL SUBOPT_0x65
007416 e188      	LDI  R24,24
007417 940e 9ef8 	CALL _printDebug
007419 966c      	ADIW R28,28
                 ; 000D 028B 
                 ; 000D 028C     val =  (float) (0.0);
00741a 940e cf12 	CALL SUBOPT_0x200
                 ; 000D 028D     val += (float) (buf[1] * 100);
00741c 85ea      	LDD  R30,Y+10
00741d 85fb      	LDD  R31,Y+10+1
00741e 81e1      	LDD  R30,Z+1
00741f e6a4      	LDI  R26,LOW(100)
007420 940e d1f8 	CALL SUBOPT_0x255
                 ; 000D 028E     val += (float) (buf[2] * 10);
007422 81e2      	LDD  R30,Z+2
007423 e0aa      	LDI  R26,LOW(10)
007424 940e d1f8 	CALL SUBOPT_0x255
                 ; 000D 028F     val += (float) (buf[3]);
007426 81e3      	LDD  R30,Z+3
007427 27ff      	CLR  R31
007428 2766      	CLR  R22
007429 2777      	CLR  R23
00742a 940e e117 	CALL __CDF1
00742c 940e d207 	CALL SUBOPT_0x256
                 ; 000D 0290     val += (float) (buf[4] * 0.1);
00742e 81e4      	LDD  R30,Z+4
00742f 940e d210 	CALL SUBOPT_0x257
007431 940e c6b4 	CALL SUBOPT_0x9E
007433 940e d207 	CALL SUBOPT_0x256
                 ; 000D 0291     val += (float) (buf[5] * 0.01);
007435 81e5      	LDD  R30,Z+5
007436 940e d210 	CALL SUBOPT_0x257
                +
007438 e0aa     +LDI R26 , LOW ( 0x3C23D70A )
007439 edb7     +LDI R27 , HIGH ( 0x3C23D70A )
00743a e283     +LDI R24 , BYTE3 ( 0x3C23D70A )
00743b e39c     +LDI R25 , BYTE4 ( 0x3C23D70A )
                 	__GETD2N 0x3C23D70A
00743c 940e e1a1 	CALL __MULF12
00743e 940e c4dc 	CALL SUBOPT_0x59
007440 940e e151 	CALL __ADDF12
007442 940e c73c 	CALL SUBOPT_0xB6
                 ; 000D 0292     if(buf[0] == 1){    val *= (float) (-1.0);  }
007444 85aa      	LDD  R26,Y+10
007445 85bb      	LDD  R27,Y+10+1
007446 91ac      	LD   R26,X
007447 30a1      	CPI  R26,LOW(0x1)
007448 f451      	BRNE _0x1A00A7
007449 940e c4dc 	CALL SUBOPT_0x59
                +
00744b e0e0     +LDI R30 , LOW ( 0xBF800000 )
00744c e0f0     +LDI R31 , HIGH ( 0xBF800000 )
00744d e860     +LDI R22 , BYTE3 ( 0xBF800000 )
00744e eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
00744f 940e e1a1 	CALL __MULF12
007451 940e c73c 	CALL SUBOPT_0xB6
                 ; 000D 0293 
                 ; 000D 0294     printDebug("<sensorSetCurrentSetPoint> sensor %1d, point %1d, set to [%f]",ch+1,pnt,val);
                 _0x1A00A7:
                +
007453 e1ec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1428 ) )
007454 e4fa     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1428 ) )
007455 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1428 ) )
007456 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1428 ) )
                 	__POINTD1FN _0x1A0000,1428
007457 940e d1f3 	CALL SUBOPT_0x254
007459 9631      	ADIW R30,1
00745a 940e e2dd 	CALL __CWD1
00745c 940e c87c 	CALL SUBOPT_0xE8
00745e 940e d216 	CALL SUBOPT_0x258
007460 940e c49f 	CALL SUBOPT_0x51
                 ; 000D 0295 
                 ; 000D 0296     if(pnt == CALPOINT(1)){
007462 85ac      	LDD  R26,Y+12
007463 85bd      	LDD  R27,Y+12+1
007464 36a5      	CPI  R26,LOW(0x65)
007465 e0e0      	LDI  R30,HIGH(0x65)
007466 07be      	CPC  R27,R30
007467 f5e1      	BRNE _0x1A00A8
                 ; 000D 0297         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
007468 940e c3a4 	CALL SUBOPT_0x2E
00746a f021      	BREQ _0x1A00AA
00746b 940e c3a4 	CALL SUBOPT_0x2E
00746d 30e3      	CPI  R30,LOW(0x3)
00746e f4b1      	BRNE _0x1A00A9
                 _0x1A00AA:
                 ; 000D 0298            viADCbuffer = 0;
00746f 940e d21b 	CALL SUBOPT_0x259
                 ; 000D 0299              for(i=0;i<30;i++){
                 _0x1A00AD:
                +
007471 310e     +CPI R16 , LOW ( 30 )
007472 e0e0     +LDI R30 , HIGH ( 30 )
007473 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
007474 f42c      	BRGE _0x1A00AE
                 ; 000D 029A                 viADCbuffer += read_adc(8+ch);
007475 940e d223 	CALL SUBOPT_0x25A
                 ; 000D 029B              }
                +
007477 5f0f     +SUBI R16 , LOW ( - 1 )
007478 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007479 cff7      	RJMP _0x1A00AD
                 _0x1A00AE:
                 ; 000D 029C 
                 ; 000D 029D              epADCRef1[ch] = iAD595ADCToTemp(viADCbuffer,30);
00747a 940e d22f 	CALL SUBOPT_0x25B
00747c 93ff      	PUSH R31
00747d 93ef      	PUSH R30
00747e 940e c8a2 	CALL SUBOPT_0xF0
007480 940e d234 	CALL SUBOPT_0x25C
007482 91af      	POP  R26
007483 91bf      	POP  R27
007484 c007      	RJMP _0x1A00CF
                 ; 000D 029E         }else{
                 _0x1A00A9:
                 ; 000D 029F            epADCRef1[ch]       = adcData[ch];
007485 940e d22f 	CALL SUBOPT_0x25B
007487 940e d238 	CALL SUBOPT_0x25D
007489 940e c32e 	CALL SUBOPT_0x1B
00748b 01d0      	MOVW R26,R0
                 _0x1A00CF:
00748c 940e e438 	CALL __EEPROMWRD
                 ; 000D 02A0         }
                 ; 000D 02A1 
                 ; 000D 02A2 
                 ; 000D 02A3 
                 ; 000D 02A4         epTempRef1[ch]      = val;
00748e 85ee      	LDD  R30,Y+14
00748f 85ff      	LDD  R31,Y+14+1
007490 eeaa      	LDI  R26,LOW(_epTempRef1)
007491 e0b5      	LDI  R27,HIGH(_epTempRef1)
007492 940e d23d 	CALL SUBOPT_0x25E
                 ; 000D 02A5         //epADCRef1[ch]       = adcData[ch];
                 ; 000D 02A6         epIsPointSet1[ch]   = 1;
007494 52af      	SUBI R26,LOW(-_epIsPointSet1)
007495 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
007496 e0e1      	LDI  R30,LOW(1)
007497 940e d248 	CALL SUBOPT_0x25F
                 ; 000D 02A7         epIsPointSet2[ch]   = 0;                        // -- reset cal_point 2 -- //
007499 50a2      	SUBI R26,LOW(-_epIsPointSet2)
00749a 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
00749b e0e0      	LDI  R30,LOW(0)
00749c 940e d248 	CALL SUBOPT_0x25F
                 ; 000D 02A8         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
00749e 5da5      	SUBI R26,LOW(-_epIsPointSet3)
00749f 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0074a0 e0e0      	LDI  R30,LOW(0)
0074a1 940e e448 	CALL __EEPROMWRB
                 ; 000D 02A9     }
                 ; 000D 02AA     else if(pnt == CALPOINT(2)){
0074a3 c07e      	RJMP _0x1A00B0
                 _0x1A00A8:
0074a4 85ac      	LDD  R26,Y+12
0074a5 85bd      	LDD  R27,Y+12+1
0074a6 36a6      	CPI  R26,LOW(0x66)
0074a7 e0e0      	LDI  R30,HIGH(0x66)
0074a8 07be      	CPC  R27,R30
0074a9 f5b9      	BRNE _0x1A00B1
                 ; 000D 02AB 
                 ; 000D 02AC         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0074aa 940e c3a4 	CALL SUBOPT_0x2E
0074ac f021      	BREQ _0x1A00B3
0074ad 940e c3a4 	CALL SUBOPT_0x2E
0074af 30e3      	CPI  R30,LOW(0x3)
0074b0 f4b1      	BRNE _0x1A00B2
                 _0x1A00B3:
                 ; 000D 02AD            viADCbuffer = 0;
0074b1 940e d21b 	CALL SUBOPT_0x259
                 ; 000D 02AE              for(i=0;i<30;i++){
                 _0x1A00B6:
                +
0074b3 310e     +CPI R16 , LOW ( 30 )
0074b4 e0e0     +LDI R30 , HIGH ( 30 )
0074b5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
0074b6 f42c      	BRGE _0x1A00B7
                 ; 000D 02AF                 viADCbuffer += read_adc(8+ch);
0074b7 940e d223 	CALL SUBOPT_0x25A
                 ; 000D 02B0              }
                +
0074b9 5f0f     +SUBI R16 , LOW ( - 1 )
0074ba 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0074bb cff7      	RJMP _0x1A00B6
                 _0x1A00B7:
                 ; 000D 02B1 
                 ; 000D 02B2              epADCRef2[ch] = iAD595ADCToTemp(viADCbuffer,30);
0074bc 940e d24d 	CALL SUBOPT_0x260
0074be 93ff      	PUSH R31
0074bf 93ef      	PUSH R30
0074c0 940e c8a2 	CALL SUBOPT_0xF0
0074c2 940e d234 	CALL SUBOPT_0x25C
0074c4 91af      	POP  R26
0074c5 91bf      	POP  R27
0074c6 c007      	RJMP _0x1A00D0
                 ; 000D 02B3         }else{
                 _0x1A00B2:
                 ; 000D 02B4            epADCRef2[ch]       = adcData[ch];
0074c7 940e d24d 	CALL SUBOPT_0x260
0074c9 940e d238 	CALL SUBOPT_0x25D
0074cb 940e c32e 	CALL SUBOPT_0x1B
0074cd 01d0      	MOVW R26,R0
                 _0x1A00D0:
0074ce 940e e438 	CALL __EEPROMWRD
                 ; 000D 02B5         }
                 ; 000D 02B6 
                 ; 000D 02B7         epTempRef2[ch]      = val;
0074d0 85ee      	LDD  R30,Y+14
0074d1 85ff      	LDD  R31,Y+14+1
0074d2 e1a7      	LDI  R26,LOW(_epTempRef2)
0074d3 e0b6      	LDI  R27,HIGH(_epTempRef2)
0074d4 940e d23d 	CALL SUBOPT_0x25E
                 ; 000D 02B8         //epADCRef2[ch]       = adcData[ch];
                 ; 000D 02B9         epIsPointSet2[ch]   = 1;
0074d6 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0074d7 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0074d8 e0e1      	LDI  R30,LOW(1)
0074d9 940e d248 	CALL SUBOPT_0x25F
                 ; 000D 02BA         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
0074db 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0074dc 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0074dd e0e0      	LDI  R30,LOW(0)
0074de 940e e448 	CALL __EEPROMWRB
                 ; 000D 02BB     }
                 ; 000D 02BC     else if(pnt == CALPOINT(3)){
0074e0 c041      	RJMP _0x1A00B9
                 _0x1A00B1:
0074e1 85ac      	LDD  R26,Y+12
0074e2 85bd      	LDD  R27,Y+12+1
0074e3 36a7      	CPI  R26,LOW(0x67)
0074e4 e0e0      	LDI  R30,HIGH(0x67)
0074e5 07be      	CPC  R27,R30
0074e6 f591      	BRNE _0x1A00BA
                 ; 000D 02BD         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0074e7 940e c3a4 	CALL SUBOPT_0x2E
0074e9 f021      	BREQ _0x1A00BC
0074ea 940e c3a4 	CALL SUBOPT_0x2E
0074ec 30e3      	CPI  R30,LOW(0x3)
0074ed f4b1      	BRNE _0x1A00BB
                 _0x1A00BC:
                 ; 000D 02BE            viADCbuffer = 0;
0074ee 940e d21b 	CALL SUBOPT_0x259
                 ; 000D 02BF              for(i=0;i<30;i++){
                 _0x1A00BF:
                +
0074f0 310e     +CPI R16 , LOW ( 30 )
0074f1 e0e0     +LDI R30 , HIGH ( 30 )
0074f2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
0074f3 f42c      	BRGE _0x1A00C0
                 ; 000D 02C0                 viADCbuffer += read_adc(8+ch);
0074f4 940e d223 	CALL SUBOPT_0x25A
                 ; 000D 02C1              }
                +
0074f6 5f0f     +SUBI R16 , LOW ( - 1 )
0074f7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0074f8 cff7      	RJMP _0x1A00BF
                 _0x1A00C0:
                 ; 000D 02C2 
                 ; 000D 02C3              epADCRef3[ch] = iAD595ADCToTemp(viADCbuffer,30);
0074f9 940e d252 	CALL SUBOPT_0x261
0074fb 93ff      	PUSH R31
0074fc 93ef      	PUSH R30
0074fd 940e c8a2 	CALL SUBOPT_0xF0
0074ff 940e d234 	CALL SUBOPT_0x25C
007501 91af      	POP  R26
007502 91bf      	POP  R27
007503 c007      	RJMP _0x1A00D1
                 ; 000D 02C4         }else{
                 _0x1A00BB:
                 ; 000D 02C5            epADCRef3[ch]       = adcData[ch];
007504 940e d252 	CALL SUBOPT_0x261
007506 940e d238 	CALL SUBOPT_0x25D
007508 940e c32e 	CALL SUBOPT_0x1B
00750a 01d0      	MOVW R26,R0
                 _0x1A00D1:
00750b 940e e438 	CALL __EEPROMWRD
                 ; 000D 02C6         }
                 ; 000D 02C7 
                 ; 000D 02C8         epTempRef3[ch]      = val;
00750d 85ee      	LDD  R30,Y+14
00750e 85ff      	LDD  R31,Y+14+1
00750f e4a4      	LDI  R26,LOW(_epTempRef3)
007510 e0b6      	LDI  R27,HIGH(_epTempRef3)
007511 940e d23d 	CALL SUBOPT_0x25E
                 ; 000D 02C9         //epADCRef3[ch]       = adcData[ch];
                 ; 000D 02CA         epIsPointSet3[ch]   = 1;
007513 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007514 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007515 e0e1      	LDI  R30,LOW(1)
007516 940e e448 	CALL __EEPROMWRB
                 ; 000D 02CB     }
                 ; 000D 02CC     else{
007518 c009      	RJMP _0x1A00C2
                 _0x1A00BA:
                 ; 000D 02CD         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
007519 940e d1bb 	CALL SUBOPT_0x24B
00751b 89e8      	LDD  R30,Y+16
00751c 89f9      	LDD  R31,Y+16+1
00751d 940e c881 	CALL SUBOPT_0xE9
                 ; 000D 02CE         return -1;
00751f efef      	LDI  R30,LOW(65535)
007520 efff      	LDI  R31,HIGH(65535)
007521 c002      	RJMP _0x20E0065
                 ; 000D 02CF     }
                 _0x1A00C2:
                 _0x1A00B9:
                 _0x1A00B0:
                 ; 000D 02D0 
                 ; 000D 02D1     return 0;
007522 e0e0      	LDI  R30,LOW(0)
007523 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0065:
007524 8119      	LDD  R17,Y+1
007525 8108      	LDD  R16,Y+0
007526 9660      	ADIW R28,16
007527 9508      	RET
                 ; 000D 02D2 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
007528 940e e405 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
00752a 91a0 15fa 	LDS  R26,_dataQ_len
00752c 91b0 15fb 	LDS  R27,_dataQ_len+1
00752e 971a      	SBIW R26,10
00752f f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
007530 efef      	LDI  R30,LOW(65535)
007531 efff      	LDI  R31,HIGH(65535)
007532 940c 790d 	JMP  _0x20E005B
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
007534 940e d257 	CALL SUBOPT_0x262
007536 56ea      	SUBI R30,LOW(-_dataQ)
007537 4efa      	SBCI R31,HIGH(-_dataQ)
007538 940e d25d 	CALL SUBOPT_0x263
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
00753a 940e d257 	CALL SUBOPT_0x262
                +
00753c 56e6     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
00753d 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
00753e 81ac      	LDD  R26,Y+4
00753f 81bd      	LDD  R27,Y+4+1
007540 83a0      	STD  Z+0,R26
007541 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
007542 940e d257 	CALL SUBOPT_0x262
                +
007544 56e4     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007545 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007546 940e c62a 	CALL SUBOPT_0x8C
007548 940e d262 	CALL SUBOPT_0x264
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
00754a 01d5      	MOVW R26,R10
00754b 9611      	ADIW R26,1
00754c 940e d265 	CALL SUBOPT_0x265
00754e 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
00754f efaa      	LDI  R26,LOW(_dataQ_len)
007550 e1b5      	LDI  R27,HIGH(_dataQ_len)
007551 940e c5c8 	CALL SUBOPT_0x7C
                 ; 000E 0019 
                 ; 000E 001A     return 0;
007553 e0e0      	LDI  R30,LOW(0)
007554 e0f0      	LDI  R31,HIGH(0)
007555 940c 790d 	JMP  _0x20E005B
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
007557 93ba      	ST   -Y,R27
007558 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
007559 91e0 15fa 	LDS  R30,_dataQ_len
00755b 91f0 15fb 	LDS  R31,_dataQ_len+1
00755d 9730      	SBIW R30,0
00755e f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
00755f efef      	LDI  R30,LOW(65535)
007560 efff      	LDI  R31,HIGH(65535)
007561 940c 78f0 	JMP  _0x20E005C
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
007563 940e d26a 	CALL SUBOPT_0x266
007565 56ea      	SUBI R30,LOW(-_dataQ)
007566 4efa      	SBCI R31,HIGH(-_dataQ)
007567 940e d270 	CALL SUBOPT_0x267
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
007569 940e d26a 	CALL SUBOPT_0x266
                +
00756b 56e6     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
00756c 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
00756d 01df      	MOVW R26,R30
00756e 940e e3cc 	CALL __GETW1P
007570 81aa      	LDD  R26,Y+2
007571 81bb      	LDD  R27,Y+2+1
007572 93ed      	ST   X+,R30
007573 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
007574 940e d26a 	CALL SUBOPT_0x266
                +
007576 56e4     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007577 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007578 01df      	MOVW R26,R30
007579 940e e3d0 	CALL __GETD1P
00757b 81a8      	LD   R26,Y
00757c 81b9      	LDD  R27,Y+1
00757d 940e e3db 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
00757f 01d6      	MOVW R26,R12
007580 9611      	ADIW R26,1
007581 940e d265 	CALL SUBOPT_0x265
007583 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
007584 efaa      	LDI  R26,LOW(_dataQ_len)
007585 e1b5      	LDI  R27,HIGH(_dataQ_len)
007586 940c 78e9 	JMP  _0x20E005E
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
007588 931a      	ST   -Y,R17
                 ;	current_status -> R17
007589 e010      	LDI  R17,0
00758a 91e0 0103 	LDS  R30,259
00758c 78e0      	ANDI R30,LOW(0x80)
00758d e0f0      	LDI  R31,0
00758e 940e e2ae 	CALL __ASRW3
007590 940e e2ac 	CALL __ASRW4
007592 9730      	SBIW R30,0
007593 f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
007594 e0e0      	LDI  R30,LOW(0)
007595 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
007597 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
007599 e6e6     +LDI R30 , LOW ( 0x40866666 )
00759a e6f6     +LDI R31 , HIGH ( 0x40866666 )
00759b e866     +LDI R22 , BYTE3 ( 0x40866666 )
00759c e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
00759d 940e d278 	CALL SUBOPT_0x268
                 ; 000F 0035         return 0;
00759f c041      	RJMP _0x20E0064
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
0075a0 e0e1      	LDI  R30,LOW(1)
0075a1 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
0075a3 940e 44c4 	CALL _readBattery
0075a5 940e d278 	CALL SUBOPT_0x268
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
0075a7 940e d281 	CALL SUBOPT_0x269
0075a9 940e e459 	CALL __CPD10
0075ab f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
0075ac e0e0      	LDI  R30,LOW(0)
0075ad 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
0075af c02e      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
0075b0 940e d281 	CALL SUBOPT_0x269
0075b2 940e c39b 	CALL SUBOPT_0x2D
0075b4 940e e234 	CALL __CMPF12
0075b6 f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
0075b7 e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
0075b8 c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
0075b9 e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
0075ba 91a0 1601 	LDS  R26,_lastCheck_S00F0001000
0075bc 171a      	CP   R17,R26
0075bd f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
0075be e0e0      	LDI  R30,LOW(0)
0075bf 93e0 1600 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
0075c1 9310 1601 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
0075c3 91e0 1600 	LDS  R30,_t_flag_S00F0001000
0075c5 30e0      	CPI  R30,0
0075c6 f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
0075c7 efec      	LDI  R30,LOW(_t_S00F0001000)
0075c8 e1f5      	LDI  R31,HIGH(_t_S00F0001000)
0075c9 940e c377 	CALL SUBOPT_0x27
                 ; 000F 0053                 t_flag              = 1;
0075cb e0e1      	LDI  R30,LOW(1)
0075cc c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
0075cd 91a0 15fc 	LDS  R26,_t_S00F0001000
0075cf 91b0 15fd 	LDS  R27,_t_S00F0001000+1
0075d1 9180 15fe 	LDS  R24,_t_S00F0001000+2
0075d3 9190 15ff 	LDS  R25,_t_S00F0001000+3
0075d5 940e 4201 	CALL _TIMER_checkTimerExceed
0075d7 9730      	SBIW R30,0
0075d8 f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
0075d9 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
0075db e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
0075dc 93e0 1600 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
0075de e0e1      	LDI  R30,LOW(1)
0075df e0f0      	LDI  R31,HIGH(1)
0075e0 c002      	RJMP _0x20E0063
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0064:
0075e1 e0e0      	LDI  R30,LOW(0)
0075e2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0063:
0075e3 9119      	LD   R17,Y+
0075e4 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
0075e5 931a      	ST   -Y,R17
0075e6 930a      	ST   -Y,R16
                 ;	res -> R16,R17
0075e7 91e0 0100 	LDS  R30,256
0075e9 940e d28a 	CALL SUBOPT_0x26A
0075eb 9730      	SBIW R30,0
0075ec f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
0075ed e0e1      	LDI  R30,LOW(1)
0075ee 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
0075f0 efef      	LDI  R30,LOW(255)
0075f1 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
0075f3 e0e0      	LDI  R30,LOW(0)
0075f4 93e0 1421 	STS  _commLostTimer,R30
0075f6 93e0 1422 	STS  _commLostTimer+1,R30
0075f8 93e0 1423 	STS  _commLostTimer+2,R30
0075fa 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
0075fc e0e1      	LDI  R30,LOW(1)
0075fd e0f0      	LDI  R31,HIGH(1)
0075fe c047      	RJMP _0x20E0062
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
0075ff e0e0      	LDI  R30,LOW(0)
007600 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
007602 940e cb9f 	CALL SUBOPT_0x171
007604 940e c3fc 	CALL SUBOPT_0x3A
007606 f029      	BREQ _0x1E0013
007607 940e cb9f 	CALL SUBOPT_0x171
007609 940e e465 	CALL __CPD02
00760b f409      	BRNE _0x1E0014
                 _0x1E0013:
00760c c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
00760d e6e6     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
00760e e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
00760f e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
007610 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
007611 940e cbaf 	CALL SUBOPT_0x173
007613 940e cbaf 	CALL SUBOPT_0x173
007615 940e c34d 	CALL SUBOPT_0x21
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
007617 940e cb9f 	CALL SUBOPT_0x171
007619 940e 4201 	CALL _TIMER_checkTimerExceed
00761b 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
00761c 2311      	TST  R17
00761d f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
00761e efef      	LDI  R30,LOW(255)
00761f 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
007621 e0e0      	LDI  R30,LOW(0)
007622 e0f0      	LDI  R31,HIGH(0)
007623 c022      	RJMP _0x20E0062
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
007624 2e00      	MOV  R0,R16
007625 2a01      	OR   R0,R17
007626 f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
007627 91a0 1480 	LDS  R26,_serverCommStatus
007629 30a2      	CPI  R26,LOW(0x2)
00762a f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
00762b e9ea     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
00762c e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
00762d e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
00762e e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
00762f 940e c274 	CALL SUBOPT_0x3
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
007631 e0e2      	LDI  R30,LOW(2)
007632 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
007634 e0e1      	LDI  R30,LOW(1)
007635 e0f0      	LDI  R31,HIGH(1)
007636 c00f      	RJMP _0x20E0062
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
007637 91e0 1480 	LDS  R30,_serverCommStatus
007639 30e0      	CPI  R30,0
00763a f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
00763b ebee     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
00763c e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
00763d e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
00763e e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
00763f 940e c274 	CALL SUBOPT_0x3
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
007641 e0e0      	LDI  R30,LOW(0)
007642 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
007644 e0e0      	LDI  R30,LOW(0)
007645 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0062:
007646 9109      	LD   R16,Y+
007647 9119      	LD   R17,Y+
007648 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
007649 940e d28f 	CALL SUBOPT_0x26B
00764b f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
00764c e0e2      	LDI  R30,LOW(2)
00764d c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
00764e 940e c37f 	CALL SUBOPT_0x28
                +
007650 e0e0     +LDI R30 , LOW ( 0x400 )
007651 e0f4     +LDI R31 , HIGH ( 0x400 )
007652 e060     +LDI R22 , BYTE3 ( 0x400 )
007653 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
007654 940e e354 	CALL __DIVD21U
007656 01df      	MOVW R26,R30
                +
007657 91e0 1375+LDS R30 , _env_config + ( 16 )
007659 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
00765b 17ae      	CP   R26,R30
00765c 07bf      	CPC  R27,R31
00765d f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
00765e e0e1      	LDI  R30,LOW(1)
00765f c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
007660 e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
007661 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
007663 30e0      	CPI  R30,0
007664 f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
007665 e0e1      	LDI  R30,LOW(1)
007666 e0f0      	LDI  R31,HIGH(1)
007667 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
007668 c1aa      	RJMP _0x20E005F
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
007669 93ba      	ST   -Y,R27
00766a 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
00766b 81a9      	LDD  R26,Y+1
00766c 23aa      	TST  R26
00766d f022      	BRMI _0x1E0022
00766e 81a8      	LD   R26,Y
00766f 81b9      	LDD  R27,Y+1
007670 9715      	SBIW R26,5
007671 f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
007672 eee0     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
007673 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
007674 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
007675 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
007676 940e ca0a 	CALL SUBOPT_0x12F
007678 940e c881 	CALL SUBOPT_0xE9
                 ; 000F 00B1         return 0;
00767a e0e0      	LDI  R30,LOW(0)
00767b e0f0      	LDI  R31,HIGH(0)
00767c c01d      	RJMP _0x20E0061
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
00767d 940e d29a 	CALL SUBOPT_0x26C
                +
00767f 2f7e     +MOV R23 , R30
007680 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
007681 81a8      	LD   R26,Y
007682 81b9      	LDD  R27,Y+1
007683 940e d134 	CALL SUBOPT_0x238
                +
007685 2fa7     +MOV R26 , R23
007686 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
007687 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007688 940e d29a 	CALL SUBOPT_0x26C
00768a 81a0      	LD   R26,Z
00768b 3faf      	CPI  R26,LOW(0xFF)
00768c f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
00768d e0e0      	LDI  R30,LOW(0)
00768e e0f0      	LDI  R31,HIGH(0)
00768f c00a      	RJMP _0x20E0061
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
007690 940e d29a 	CALL SUBOPT_0x26C
007692 81e0      	LD   R30,Z
007693 30e0      	CPI  R30,0
007694 f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
007695 e0e1      	LDI  R30,LOW(1)
007696 e0f0      	LDI  R31,HIGH(1)
007697 c002      	RJMP _0x20E0061
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
007698 e0e0      	LDI  R30,LOW(0)
007699 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0061:
00769a 9622      	ADIW R28,2
00769b 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
00769c 940e c5e5 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
00769e e000     +LDI R16 , LOW ( 0 )
00769f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
0076a0 81ab      	LDD  R26,Y+3
0076a1 23aa      	TST  R26
0076a2 f022      	BRMI _0x1E0029
0076a3 81aa      	LDD  R26,Y+2
0076a4 81bb      	LDD  R27,Y+2+1
0076a5 9715      	SBIW R26,5
0076a6 f05c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
0076a7 e1e5     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
0076a8 e4fb     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
0076a9 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
0076aa e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
0076ab 940e c91f 	CALL SUBOPT_0x105
0076ad 940e c881 	CALL SUBOPT_0xE9
                 ; 000F 00CC         return 0;
0076af e0e0      	LDI  R30,LOW(0)
0076b0 e0f0      	LDI  R31,HIGH(0)
0076b1 c0cf      	RJMP _0x20E0060
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
0076b2 940e c9bb 	CALL SUBOPT_0x120
                +
0076b4 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
0076b5 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
0076b6 81e0      	LD   R30,Z
0076b7 30e0      	CPI  R30,0
0076b8 f019      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
0076b9 e0e0      	LDI  R30,LOW(0)
0076ba e0f0      	LDI  R31,HIGH(0)
0076bb c0c5      	RJMP _0x20E0060
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
0076bc 940e c9bb 	CALL SUBOPT_0x120
0076be 940e c347 	CALL SUBOPT_0x20
0076c0 937f      	PUSH R23
0076c1 936f      	PUSH R22
0076c2 93ff      	PUSH R31
0076c3 93ef      	PUSH R30
0076c4 940e c947 	CALL SUBOPT_0x10D
                +
0076c6 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
0076c7 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
0076c8 01df      	MOVW R26,R30
0076c9 940e e3d0 	CALL __GETD1P
0076cb 91af      	POP  R26
0076cc 91bf      	POP  R27
0076cd 918f      	POP  R24
0076ce 919f      	POP  R25
0076cf 940e e234 	CALL __CMPF12
0076d1 f508      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
0076d2 940e d29f 	CALL SUBOPT_0x26D
0076d4 81e0      	LD   R30,Z
0076d5 30e0      	CPI  R30,0
0076d6 f479      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
0076d7 940e d2a4 	CALL SUBOPT_0x26E
0076d9 940e c339 	CALL SUBOPT_0x1D
0076db 81ac      	LDD  R26,Y+4
0076dc 81bd      	LDD  R27,Y+4+1
0076dd 940e d2ab 	CALL SUBOPT_0x26F
0076df 940e c343 	CALL SUBOPT_0x1F
                 ; 000F 00D9             flag_lower[ch] = 1;
0076e1 940e d29f 	CALL SUBOPT_0x26D
0076e3 e0a1      	LDI  R26,LOW(1)
0076e4 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
0076e5 c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
0076e6 940e d2a4 	CALL SUBOPT_0x26E
0076e8 940e c32e 	CALL SUBOPT_0x1B
0076ea 940e c333 	CALL SUBOPT_0x1C
0076ec f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
0076ed 940e d2b3 	CALL SUBOPT_0x270
0076ef 60e1      	ORI  R30,1
0076f0 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
0076f1 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
0076f2 c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
0076f3 940e d29f 	CALL SUBOPT_0x26D
0076f5 e0a0      	LDI  R26,LOW(0)
0076f6 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
0076f7 940e d2b3 	CALL SUBOPT_0x270
0076f9 7fee      	ANDI R30,0xFE
0076fa 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
0076fb 940e c9bb 	CALL SUBOPT_0x120
0076fd 940e c347 	CALL SUBOPT_0x20
0076ff 937f      	PUSH R23
007700 936f      	PUSH R22
007701 93ff      	PUSH R31
007702 93ef      	PUSH R30
007703 940e c947 	CALL SUBOPT_0x10D
                +
007705 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
007706 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
007707 01df      	MOVW R26,R30
007708 940e e3d0 	CALL __GETD1P
00770a 91af      	POP  R26
00770b 91bf      	POP  R27
00770c 918f      	POP  R24
00770d 919f      	POP  R25
00770e 940e e234 	CALL __CMPF12
007710 f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
007711 940e d2b3 	CALL SUBOPT_0x270
007713 60e2      	ORI  R30,2
007714 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
007715 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
007716 c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
007717 940e d2b3 	CALL SUBOPT_0x270
007719 7fed      	ANDI R30,0xFD
00771a 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
00771b 940e c9bb 	CALL SUBOPT_0x120
00771d 940e c347 	CALL SUBOPT_0x20
00771f 937f      	PUSH R23
007720 936f      	PUSH R22
007721 93ff      	PUSH R31
007722 93ef      	PUSH R30
007723 940e c947 	CALL SUBOPT_0x10D
                +
007725 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
007726 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
007727 01df      	MOVW R26,R30
007728 940e e3d0 	CALL __GETD1P
00772a 91af      	POP  R26
00772b 91bf      	POP  R27
00772c 918f      	POP  R24
00772d 919f      	POP  R25
00772e 940e e234 	CALL __CMPF12
007730 f009      	BREQ PC+2
007731 f410      	BRCC PC+3
007732 940c 7755 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
007734 940e d2b9 	CALL SUBOPT_0x271
007736 81e0      	LD   R30,Z
007737 30e0      	CPI  R30,0
007738 f479      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
007739 940e d2a4 	CALL SUBOPT_0x26E
00773b 940e c339 	CALL SUBOPT_0x1D
00773d 81ac      	LDD  R26,Y+4
00773e 81bd      	LDD  R27,Y+4+1
00773f 940e d2be 	CALL SUBOPT_0x272
007741 940e c343 	CALL SUBOPT_0x1F
                 ; 000F 0101             flag_upper[ch] = 1;
007743 940e d2b9 	CALL SUBOPT_0x271
007745 e0a1      	LDI  R26,LOW(1)
007746 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
007747 c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
007748 940e d2a4 	CALL SUBOPT_0x26E
00774a 940e c32e 	CALL SUBOPT_0x1B
00774c 940e c333 	CALL SUBOPT_0x1C
00774e f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
00774f 940e d2b3 	CALL SUBOPT_0x270
007751 60e4      	ORI  R30,4
007752 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
007753 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
007754 c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
007755 940e d2b9 	CALL SUBOPT_0x271
007757 e0a0      	LDI  R26,LOW(0)
007758 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
007759 940e d2b3 	CALL SUBOPT_0x270
00775b 7feb      	ANDI R30,0xFB
00775c 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
00775d 940e c9bb 	CALL SUBOPT_0x120
00775f 940e c347 	CALL SUBOPT_0x20
007761 937f      	PUSH R23
007762 936f      	PUSH R22
007763 93ff      	PUSH R31
007764 93ef      	PUSH R30
007765 940e c947 	CALL SUBOPT_0x10D
                +
007767 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
007768 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
007769 01df      	MOVW R26,R30
00776a 940e e3d0 	CALL __GETD1P
00776c 91af      	POP  R26
00776d 91bf      	POP  R27
00776e 918f      	POP  R24
00776f 919f      	POP  R25
007770 940e e234 	CALL __CMPF12
007772 f009      	BREQ PC+2
007773 f410      	BRCC PC+3
007774 940c 777c 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
007776 940e d2b3 	CALL SUBOPT_0x270
007778 60e8      	ORI  R30,8
007779 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
00777a 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
00777b c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
00777c 940e d2b3 	CALL SUBOPT_0x270
00777e 7fe7      	ANDI R30,0XF7
00777f 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
007780 01f8      	MOVW R30,R16
                 _0x20E0060:
007781 8119      	LDD  R17,Y+1
007782 8108      	LDD  R16,Y+0
007783 9624      	ADIW R28,4
007784 9508      	RET
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
007785 940e e475 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
007787 ef1f      	LDI  R17,255
007788 940e c260 	CALL SUBOPT_0x0
                +
00778a e020     +LDI R18 , LOW ( 0 )
00778b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
00778c 3022     +CPI R18 , LOW ( 2 )
00778d e0e0     +LDI R30 , HIGH ( 2 )
00778e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00778f f014      	BRLT PC+3
007790 940c 77fd 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
007792 940e c2fc 	CALL SUBOPT_0x15
007794 81a0      	LD   R26,Z
007795 30a1      	CPI  R26,LOW(0x1)
007796 f011      	BREQ PC+3
007797 940c 77fa 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
007799 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
00779a 9730      	SBIW R30,0
00779b f441      	BRNE _0x1E0042
00779c 91e0 0103 	LDS  R30,259
00779e 940e d28a 	CALL SUBOPT_0x26A
0077a0 940e e2f1 	CALL __LNEGW1
0077a2 2f1e      	MOV  R17,R30
0077a3 c01b      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
0077a4 30e1      	CPI  R30,LOW(0x1)
0077a5 e0a0      	LDI  R26,HIGH(0x1)
0077a6 07fa      	CPC  R31,R26
0077a7 f451      	BRNE _0x1E0044
0077a8 91e0 0103 	LDS  R30,259
0077aa 70e8      	ANDI R30,LOW(0x8)
0077ab e0f0      	LDI  R31,0
0077ac 940e e2ae 	CALL __ASRW3
0077ae 940e e2f1 	CALL __LNEGW1
0077b0 2f1e      	MOV  R17,R30
0077b1 c00d      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
0077b2 e5e2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
0077b3 e4fb     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
0077b4 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
0077b5 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
0077b6 940e c2e2 	CALL SUBOPT_0x11
0077b8 940e c2ea 	CALL SUBOPT_0x12
0077ba e0e0      	LDI  R30,LOW(0)
0077bb e0f0      	LDI  R31,HIGH(0)
0077bc 940e e47c 	CALL __LOADLOCR6
0077be c131      	RJMP _0x20E005C
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
0077bf e2a8      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
0077c0 e1b6      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
0077c1 0fa2      	ADD  R26,R18
0077c2 1fb3      	ADC  R27,R19
0077c3 91ec      	LD   R30,X
0077c4 17e1      	CP   R30,R17
0077c5 f081      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
0077c6 01f9      	MOVW R30,R18
0077c7 e2a0      	LDI  R26,LOW(_t_S00F0006000)
0077c8 e1b6      	LDI  R27,HIGH(_t_S00F0006000)
0077c9 940e d2c6 	CALL SUBOPT_0x273
                +
0077cb e0a1     +LDI R26 , LOW ( 0x1 )
0077cc e0b0     +LDI R27 , HIGH ( 0x1 )
0077cd e080     +LDI R24 , BYTE3 ( 0x1 )
0077ce e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
0077cf 940e 4217 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
0077d1 01f9      	MOVW R30,R18
0077d2 5de8      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
0077d3 4ef9      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
0077d4 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
0077d5 c020      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
0077d6 e2aa      	LDI  R26,LOW(_steadyState_S00F0006000)
0077d7 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0077d8 940e c2d4 	CALL SUBOPT_0xF
0077da f4f9      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
0077db 01f9      	MOVW R30,R18
0077dc e2a0      	LDI  R26,LOW(_t_S00F0006000)
0077dd e1b6      	LDI  R27,HIGH(_t_S00F0006000)
0077de 940e d2ca 	CALL SUBOPT_0x274
0077e0 940e c333 	CALL SUBOPT_0x1C
0077e2 f099      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
0077e3 e2aa      	LDI  R26,LOW(_steadyState_S00F0006000)
0077e4 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0077e5 0fa2      	ADD  R26,R18
0077e6 1fb3      	ADC  R27,R19
0077e7 e0e1      	LDI  R30,LOW(1)
0077e8 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
0077e9 3010      	CPI  R17,0
0077ea f021      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
0077eb 940e c38e 	CALL SUBOPT_0x2A
0077ed e0e1      	LDI  R30,LOW(1)
0077ee c003      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
0077ef 940e c38e 	CALL SUBOPT_0x2A
0077f1 e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
0077f2 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
0077f3 5f4f     +SUBI R20 , LOW ( - 1 )
0077f4 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
0077f5 c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
0077f6 e2aa      	LDI  R26,LOW(_steadyState_S00F0006000)
0077f7 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0077f8 940e c2ef 	CALL SUBOPT_0x13
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
0077fa 5f2f     +SUBI R18 , LOW ( - 1 )
0077fb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0077fc cf8f      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
0077fd 01fa      	MOVW R30,R20
0077fe 940e e47c 	CALL __LOADLOCR6
007800 c0ef      	RJMP _0x20E005C
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
007801 91e0 1434 	LDS  R30,_d_out
007803 30e0      	CPI  R30,0
007804 f011      	BREQ _0x1E004C
007805 e0e1      	LDI  R30,LOW(1)
007806 c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
007807 e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
007808 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
00780a 91e0 1435+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
00780c 30e0      	CPI  R30,0
00780d f011      	BREQ _0x1E004E
00780e e0e1      	LDI  R30,LOW(1)
00780f c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
007810 e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
007811 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E005F:
007813 e0e0      	LDI  R30,LOW(0)
007814 e0f0      	LDI  R31,HIGH(0)
007815 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
007816 940e c5e5 	CALL SUBOPT_0x81
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
007818 e000     +LDI R16 , LOW ( 0 )
007819 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00781a 81aa      	LDD  R26,Y+2
00781b 81bb      	LDD  R27,Y+2+1
00781c 940e c971 	CALL SUBOPT_0x114
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
00781e 940e 5349 	CALL _isDeviceConfig
007820 9730      	SBIW R30,0
007821 f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
007822 81aa      	LDD  R26,Y+2
007823 81bb      	LDD  R27,Y+2+1
007824 91ed      	LD   R30,X+
007825 91fd      	LD   R31,X+
007826 68f0      	ORI  R31,HIGH(0x8000)
007827 c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
007828 81aa      	LDD  R26,Y+2
007829 81bb      	LDD  R27,Y+2+1
00782a 91ed      	LD   R30,X+
00782b 91fd      	LD   R31,X+
00782c 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
00782d 93fe      	ST   -X,R31
00782e 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
00782f 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
007831 30e0      	CPI  R30,0
007832 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
007833 81aa      	LDD  R26,Y+2
007834 81bb      	LDD  R27,Y+2+1
007835 91ed      	LD   R30,X+
007836 91fd      	LD   R31,X+
007837 64f0      	ORI  R31,HIGH(0x4000)
007838 c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
007839 81aa      	LDD  R26,Y+2
00783a 81bb      	LDD  R27,Y+2+1
00783b 91ed      	LD   R30,X+
00783c 91fd      	LD   R31,X+
00783d 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
00783e 93fe      	ST   -X,R31
00783f 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
007840 91a0 11b6 	LDS  R26,_operating_config
007842 31a0      	CPI  R26,LOW(0x10)
007843 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
007844 81aa      	LDD  R26,Y+2
007845 81bb      	LDD  R27,Y+2+1
007846 91ed      	LD   R30,X+
007847 91fd      	LD   R31,X+
007848 60f8      	ORI  R31,HIGH(0x800)
007849 c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
00784a 81aa      	LDD  R26,Y+2
00784b 81bb      	LDD  R27,Y+2+1
00784c 91ed      	LD   R30,X+
00784d 91fd      	LD   R31,X+
00784e 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
00784f 93fe      	ST   -X,R31
007850 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
007851 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
007853 30e0      	CPI  R30,0
007854 f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
007855 81aa      	LDD  R26,Y+2
007856 81bb      	LDD  R27,Y+2+1
007857 91ed      	LD   R30,X+
007858 91fd      	LD   R31,X+
007859 60f2      	ORI  R31,HIGH(0x200)
00785a c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
00785b 81aa      	LDD  R26,Y+2
00785c 81bb      	LDD  R27,Y+2+1
00785d 91ed      	LD   R30,X+
00785e 91fd      	LD   R31,X+
00785f 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
007860 93fe      	ST   -X,R31
007861 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
007862 e000     +LDI R16 , LOW ( 0 )
007863 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
007864 3005     +CPI R16 , LOW ( 5 )
007865 e0e0     +LDI R30 , HIGH ( 5 )
007866 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007867 f4a4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
007868 940e d2ce 	CALL SUBOPT_0x275
00786a f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
00786b 940e d2d5 	CALL SUBOPT_0x276
00786d 2be6      	OR   R30,R22
00786e 2bf7      	OR   R31,R23
00786f c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
007870 940e d2d5 	CALL SUBOPT_0x276
007872 95e0      	COM  R30
007873 95f0      	COM  R31
007874 23e6      	AND  R30,R22
007875 23f7      	AND  R31,R23
                 _0x1E0067:
007876 01dc      	MOVW R26,R24
007877 93ed      	ST   X+,R30
007878 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
007879 5f0f     +SUBI R16 , LOW ( - 1 )
00787a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00787b cfe8      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
00787c e7ef     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
00787d e4fb     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
00787e e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
00787f e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
007880 940e ca78 	CALL SUBOPT_0x144
007882 940e c33e 	CALL SUBOPT_0x1E
007884 940e cc53 	CALL SUBOPT_0x18B
                 ; 000F 0191 
                 ; 000F 0192     return 0;
007886 940e c809 	CALL SUBOPT_0xD6
007888 940c 7e02 	JMP  _0x20E0057
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
00788a 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
00788b 91a0 16a8 	LDS  R26,_eventQ_len
00788d 91b0 16a9 	LDS  R27,_eventQ_len+1
00788f 9754      	SBIW R26,20
007890 f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
007891 efef      	LDI  R30,LOW(65535)
007892 efff      	LDI  R31,HIGH(65535)
007893 c05c      	RJMP _0x20E005C
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
007894 940e d2e3 	CALL SUBOPT_0x277
007896 5de4      	SUBI R30,LOW(-_eventQ)
007897 4ef9      	SBCI R31,HIGH(-_eventQ)
007898 940e c732 	CALL SUBOPT_0xB4
00789a 940e d262 	CALL SUBOPT_0x264
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
00789c 940e d2e3 	CALL SUBOPT_0x277
                +
00789e 5de0     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
00789f 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0078a0 81a9      	LDD  R26,Y+1
0078a1 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
0078a2 940e d2e3 	CALL SUBOPT_0x277
                +
0078a4 5cef     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0078a5 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0078a6 81a8      	LD   R26,Y
0078a7 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
0078a8 91a0 16a4 	LDS  R26,_last_wr_eventQ
0078aa 91b0 16a5 	LDS  R27,_last_wr_eventQ+1
0078ac 9611      	ADIW R26,1
0078ad e1e4      	LDI  R30,LOW(20)
0078ae e0f0      	LDI  R31,HIGH(20)
0078af 940e e38d 	CALL __MODW21
0078b1 93e0 16a4 	STS  _last_wr_eventQ,R30
0078b3 93f0 16a5 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
0078b5 eaa8      	LDI  R26,LOW(_eventQ_len)
0078b6 e1b6      	LDI  R27,HIGH(_eventQ_len)
0078b7 91ed      	LD   R30,X+
0078b8 91fd      	LD   R31,X+
0078b9 9631      	ADIW R30,1
0078ba c031      	RJMP _0x20E005D
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
0078bb 93ba      	ST   -Y,R27
0078bc 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
0078bd 91e0 16a8 	LDS  R30,_eventQ_len
0078bf 91f0 16a9 	LDS  R31,_eventQ_len+1
0078c1 9730      	SBIW R30,0
0078c2 f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
0078c3 efef      	LDI  R30,LOW(65535)
0078c4 efff      	LDI  R31,HIGH(65535)
0078c5 c02a      	RJMP _0x20E005C
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
0078c6 940e d2eb 	CALL SUBOPT_0x278
0078c8 5de4      	SUBI R30,LOW(-_eventQ)
0078c9 4ef9      	SBCI R31,HIGH(-_eventQ)
0078ca 940e d270 	CALL SUBOPT_0x267
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
0078cc 940e d2eb 	CALL SUBOPT_0x278
                +
0078ce 5de0     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
0078cf 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0078d0 81e0      	LD   R30,Z
0078d1 81aa      	LDD  R26,Y+2
0078d2 81bb      	LDD  R27,Y+2+1
0078d3 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
0078d4 940e d2eb 	CALL SUBOPT_0x278
                +
0078d6 5cef     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0078d7 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0078d8 940e d2f3 	CALL SUBOPT_0x279
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
0078da 91a0 16a6 	LDS  R26,_last_rd_eventQ
0078dc 91b0 16a7 	LDS  R27,_last_rd_eventQ+1
0078de 9611      	ADIW R26,1
0078df e1e4      	LDI  R30,LOW(20)
0078e0 e0f0      	LDI  R31,HIGH(20)
0078e1 940e e38d 	CALL __MODW21
0078e3 93e0 16a6 	STS  _last_rd_eventQ,R30
0078e5 93f0 16a7 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
0078e7 eaa8      	LDI  R26,LOW(_eventQ_len)
0078e8 e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E005E:
0078e9 91ed      	LD   R30,X+
0078ea 91fd      	LD   R31,X+
0078eb 9731      	SBIW R30,1
                 _0x20E005D:
0078ec 93fe      	ST   -X,R31
0078ed 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
0078ee e0e0      	LDI  R30,LOW(0)
0078ef e0f0      	LDI  R31,HIGH(0)
                 _0x20E005C:
0078f0 9626      	ADIW R28,6
0078f1 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
0078f2 93ba      	ST   -Y,R27
0078f3 93aa      	ST   -Y,R26
0078f4 940e c3e4 	CALL SUBOPT_0x37
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
0078f6 e000     +LDI R16 , LOW ( 0 )
0078f7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
0078f8 81ee      	LDD  R30,Y+6
0078f9 81ff      	LDD  R31,Y+6+1
0078fa 170e      	CP   R16,R30
0078fb 071f      	CPC  R17,R31
0078fc f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
0078fd 01f8      	MOVW R30,R16
0078fe 85a8      	LDD  R26,Y+8
0078ff 85b9      	LDD  R27,Y+8+1
007900 0fae      	ADD  R26,R30
007901 1fbf      	ADC  R27,R31
007902 91ac      	LD   R26,X
007903 d00b      	RCALL _checkAlarmFromSrc
007904 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
007905 2b24     +OR R18 , R20
007906 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
007907 5f0f     +SUBI R16 , LOW ( - 1 )
007908 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007909 cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
00790a 01f9      	MOVW R30,R18
00790b 940e e47c 	CALL __LOADLOCR6
                 _0x20E005B:
00790d 962a      	ADIW R28,10
00790e 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
00790f 93aa      	ST   -Y,R26
007910 940e d2f8 	CALL SUBOPT_0x27A
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
007912 e020     +LDI R18 , LOW ( 0 )
007913 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
007914 81ec      	LDD  R30,Y+4
007915 e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
007916 3ce0      	CPI  R30,LOW(0xC0)
007917 e0a0      	LDI  R26,HIGH(0xC0)
007918 07fa      	CPC  R31,R26
007919 f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
00791a 91a0 146f 	LDS  R26,_sensorStatus
00791c 30a0      	CPI  R26,LOW(0x0)
00791d f011      	BREQ _0x22000D
00791e 3faf      	CPI  R26,LOW(0xFF)
00791f f421      	BRNE _0x22000F
                 _0x22000D:
007920 91a0 1474 	LDS  R26,_dataStatus
007922 30a0      	CPI  R26,LOW(0x0)
007923 f011      	BREQ _0x22000C
                 _0x22000F:
                +
007924 e021     +LDI R18 , LOW ( 1 )
007925 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
007926 c2b5      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
007927 3ce1      	CPI  R30,LOW(0xC1)
007928 e0a0      	LDI  R26,HIGH(0xC1)
007929 07fa      	CPC  R31,R26
00792a f439      	BRNE _0x220011
00792b 91e0 1474 	LDS  R30,_dataStatus
00792d 70e1      	ANDI R30,LOW(0x1)
00792e f011      	BREQ _0x220012
                +
00792f e021     +LDI R18 , LOW ( 1 )
007930 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
007931 c2aa      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
007932 3ce2      	CPI  R30,LOW(0xC2)
007933 e0a0      	LDI  R26,HIGH(0xC2)
007934 07fa      	CPC  R31,R26
007935 f439      	BRNE _0x220013
007936 91e0 1474 	LDS  R30,_dataStatus
007938 71e1      	ANDI R30,LOW(0x11)
007939 f011      	BREQ _0x220014
                +
00793a e021     +LDI R18 , LOW ( 1 )
00793b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
00793c c29f      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
00793d 3ce3      	CPI  R30,LOW(0xC3)
00793e e0a0      	LDI  R26,HIGH(0xC3)
00793f 07fa      	CPC  R31,R26
007940 f439      	BRNE _0x220015
007941 91e0 1474 	LDS  R30,_dataStatus
007943 70e2      	ANDI R30,LOW(0x2)
007944 f011      	BREQ _0x220016
                +
007945 e021     +LDI R18 , LOW ( 1 )
007946 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
007947 c294      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
007948 3ce4      	CPI  R30,LOW(0xC4)
007949 e0a0      	LDI  R26,HIGH(0xC4)
00794a 07fa      	CPC  R31,R26
00794b f439      	BRNE _0x220017
00794c 91e0 1474 	LDS  R30,_dataStatus
00794e 70e4      	ANDI R30,LOW(0x4)
00794f f011      	BREQ _0x220018
                +
007950 e021     +LDI R18 , LOW ( 1 )
007951 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
007952 c289      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
007953 3ce5      	CPI  R30,LOW(0xC5)
007954 e0a0      	LDI  R26,HIGH(0xC5)
007955 07fa      	CPC  R31,R26
007956 f439      	BRNE _0x220019
007957 91e0 1474 	LDS  R30,_dataStatus
007959 71e4      	ANDI R30,LOW(0x14)
00795a f011      	BREQ _0x22001A
                +
00795b e021     +LDI R18 , LOW ( 1 )
00795c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
00795d c27e      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
00795e 3ce6      	CPI  R30,LOW(0xC6)
00795f e0a0      	LDI  R26,HIGH(0xC6)
007960 07fa      	CPC  R31,R26
007961 f439      	BRNE _0x22001B
007962 91e0 1474 	LDS  R30,_dataStatus
007964 70e8      	ANDI R30,LOW(0x8)
007965 f011      	BREQ _0x22001C
                +
007966 e021     +LDI R18 , LOW ( 1 )
007967 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
007968 c273      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
007969 3ce7      	CPI  R30,LOW(0xC7)
00796a e0a0      	LDI  R26,HIGH(0xC7)
00796b 07fa      	CPC  R31,R26
00796c f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
00796d 91a0 146f 	LDS  R26,_sensorStatus
00796f 30a0      	CPI  R26,LOW(0x0)
007970 f011      	BREQ _0x22001F
007971 3faf      	CPI  R26,LOW(0xFF)
007972 f409      	BRNE _0x220020
                 _0x22001F:
007973 c002      	RJMP _0x22001E
                 _0x220020:
                +
007974 e021     +LDI R18 , LOW ( 1 )
007975 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
007976 c265      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
007977 3ce8      	CPI  R30,LOW(0xC8)
007978 e0a0      	LDI  R26,HIGH(0xC8)
007979 07fa      	CPC  R31,R26
00797a f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
00797b 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
00797d 30a0      	CPI  R26,LOW(0x0)
00797e f021      	BREQ _0x220023
                +
00797f 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
007981 3faf      	CPI  R26,LOW(0xFF)
007982 f421      	BRNE _0x220025
                 _0x220023:
                +
007983 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
007985 30a0      	CPI  R26,LOW(0x0)
007986 f011      	BREQ _0x220022
                 _0x220025:
                +
007987 e021     +LDI R18 , LOW ( 1 )
007988 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
007989 c252      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
00798a 3ce9      	CPI  R30,LOW(0xC9)
00798b e0a0      	LDI  R26,HIGH(0xC9)
00798c 07fa      	CPC  R31,R26
00798d f439      	BRNE _0x220027
                +
00798e 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007990 70e1      	ANDI R30,LOW(0x1)
007991 f011      	BREQ _0x220028
                +
007992 e021     +LDI R18 , LOW ( 1 )
007993 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
007994 c247      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
007995 3cea      	CPI  R30,LOW(0xCA)
007996 e0a0      	LDI  R26,HIGH(0xCA)
007997 07fa      	CPC  R31,R26
007998 f439      	BRNE _0x220029
                +
007999 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
00799b 71e1      	ANDI R30,LOW(0x11)
00799c f011      	BREQ _0x22002A
                +
00799d e021     +LDI R18 , LOW ( 1 )
00799e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
00799f c23c      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
0079a0 3ceb      	CPI  R30,LOW(0xCB)
0079a1 e0a0      	LDI  R26,HIGH(0xCB)
0079a2 07fa      	CPC  R31,R26
0079a3 f439      	BRNE _0x22002B
                +
0079a4 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0079a6 70e2      	ANDI R30,LOW(0x2)
0079a7 f011      	BREQ _0x22002C
                +
0079a8 e021     +LDI R18 , LOW ( 1 )
0079a9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
0079aa c231      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
0079ab 3cec      	CPI  R30,LOW(0xCC)
0079ac e0a0      	LDI  R26,HIGH(0xCC)
0079ad 07fa      	CPC  R31,R26
0079ae f439      	BRNE _0x22002D
                +
0079af 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0079b1 70e4      	ANDI R30,LOW(0x4)
0079b2 f011      	BREQ _0x22002E
                +
0079b3 e021     +LDI R18 , LOW ( 1 )
0079b4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
0079b5 c226      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
0079b6 3ced      	CPI  R30,LOW(0xCD)
0079b7 e0a0      	LDI  R26,HIGH(0xCD)
0079b8 07fa      	CPC  R31,R26
0079b9 f439      	BRNE _0x22002F
                +
0079ba 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0079bc 71e4      	ANDI R30,LOW(0x14)
0079bd f011      	BREQ _0x220030
                +
0079be e021     +LDI R18 , LOW ( 1 )
0079bf e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
0079c0 c21b      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
0079c1 3cee      	CPI  R30,LOW(0xCE)
0079c2 e0a0      	LDI  R26,HIGH(0xCE)
0079c3 07fa      	CPC  R31,R26
0079c4 f439      	BRNE _0x220031
                +
0079c5 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0079c7 70e8      	ANDI R30,LOW(0x8)
0079c8 f011      	BREQ _0x220032
                +
0079c9 e021     +LDI R18 , LOW ( 1 )
0079ca e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
0079cb c210      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
0079cc 3cef      	CPI  R30,LOW(0xCF)
0079cd e0a0      	LDI  R26,HIGH(0xCF)
0079ce 07fa      	CPC  R31,R26
0079cf f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0079d0 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0079d2 30a0      	CPI  R26,LOW(0x0)
0079d3 f021      	BREQ _0x220035
                +
0079d4 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0079d6 3faf      	CPI  R26,LOW(0xFF)
0079d7 f409      	BRNE _0x220036
                 _0x220035:
0079d8 c002      	RJMP _0x220034
                 _0x220036:
                +
0079d9 e021     +LDI R18 , LOW ( 1 )
0079da e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
0079db c200      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
0079dc 3de0      	CPI  R30,LOW(0xD0)
0079dd e0a0      	LDI  R26,HIGH(0xD0)
0079de 07fa      	CPC  R31,R26
0079df f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
0079e0 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0079e2 30a0      	CPI  R26,LOW(0x0)
0079e3 f021      	BREQ _0x220039
                +
0079e4 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0079e6 3faf      	CPI  R26,LOW(0xFF)
0079e7 f421      	BRNE _0x22003B
                 _0x220039:
                +
0079e8 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
0079ea 30a0      	CPI  R26,LOW(0x0)
0079eb f011      	BREQ _0x220038
                 _0x22003B:
                +
0079ec e021     +LDI R18 , LOW ( 1 )
0079ed e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
0079ee c1ed      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
0079ef 3de1      	CPI  R30,LOW(0xD1)
0079f0 e0a0      	LDI  R26,HIGH(0xD1)
0079f1 07fa      	CPC  R31,R26
0079f2 f439      	BRNE _0x22003D
                +
0079f3 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0079f5 70e1      	ANDI R30,LOW(0x1)
0079f6 f011      	BREQ _0x22003E
                +
0079f7 e021     +LDI R18 , LOW ( 1 )
0079f8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
0079f9 c1e2      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
0079fa 3de2      	CPI  R30,LOW(0xD2)
0079fb e0a0      	LDI  R26,HIGH(0xD2)
0079fc 07fa      	CPC  R31,R26
0079fd f439      	BRNE _0x22003F
                +
0079fe 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007a00 71e1      	ANDI R30,LOW(0x11)
007a01 f011      	BREQ _0x220040
                +
007a02 e021     +LDI R18 , LOW ( 1 )
007a03 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
007a04 c1d7      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
007a05 3de3      	CPI  R30,LOW(0xD3)
007a06 e0a0      	LDI  R26,HIGH(0xD3)
007a07 07fa      	CPC  R31,R26
007a08 f439      	BRNE _0x220041
                +
007a09 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007a0b 70e2      	ANDI R30,LOW(0x2)
007a0c f011      	BREQ _0x220042
                +
007a0d e021     +LDI R18 , LOW ( 1 )
007a0e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
007a0f c1cc      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
007a10 3de4      	CPI  R30,LOW(0xD4)
007a11 e0a0      	LDI  R26,HIGH(0xD4)
007a12 07fa      	CPC  R31,R26
007a13 f439      	BRNE _0x220043
                +
007a14 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007a16 70e4      	ANDI R30,LOW(0x4)
007a17 f011      	BREQ _0x220044
                +
007a18 e021     +LDI R18 , LOW ( 1 )
007a19 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
007a1a c1c1      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
007a1b 3de5      	CPI  R30,LOW(0xD5)
007a1c e0a0      	LDI  R26,HIGH(0xD5)
007a1d 07fa      	CPC  R31,R26
007a1e f439      	BRNE _0x220045
                +
007a1f 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007a21 71e4      	ANDI R30,LOW(0x14)
007a22 f011      	BREQ _0x220046
                +
007a23 e021     +LDI R18 , LOW ( 1 )
007a24 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
007a25 c1b6      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
007a26 3de6      	CPI  R30,LOW(0xD6)
007a27 e0a0      	LDI  R26,HIGH(0xD6)
007a28 07fa      	CPC  R31,R26
007a29 f439      	BRNE _0x220047
                +
007a2a 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007a2c 70e8      	ANDI R30,LOW(0x8)
007a2d f011      	BREQ _0x220048
                +
007a2e e021     +LDI R18 , LOW ( 1 )
007a2f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
007a30 c1ab      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
007a31 3de7      	CPI  R30,LOW(0xD7)
007a32 e0a0      	LDI  R26,HIGH(0xD7)
007a33 07fa      	CPC  R31,R26
007a34 f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007a35 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007a37 30a0      	CPI  R26,LOW(0x0)
007a38 f021      	BREQ _0x22004B
                +
007a39 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007a3b 3faf      	CPI  R26,LOW(0xFF)
007a3c f409      	BRNE _0x22004C
                 _0x22004B:
007a3d c002      	RJMP _0x22004A
                 _0x22004C:
                +
007a3e e021     +LDI R18 , LOW ( 1 )
007a3f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
007a40 c19b      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
007a41 3de8      	CPI  R30,LOW(0xD8)
007a42 e0a0      	LDI  R26,HIGH(0xD8)
007a43 07fa      	CPC  R31,R26
007a44 f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
007a45 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007a47 30a0      	CPI  R26,LOW(0x0)
007a48 f021      	BREQ _0x22004F
                +
007a49 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007a4b 3faf      	CPI  R26,LOW(0xFF)
007a4c f421      	BRNE _0x220051
                 _0x22004F:
                +
007a4d 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
007a4f 30a0      	CPI  R26,LOW(0x0)
007a50 f011      	BREQ _0x22004E
                 _0x220051:
                +
007a51 e021     +LDI R18 , LOW ( 1 )
007a52 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
007a53 c188      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
007a54 3de9      	CPI  R30,LOW(0xD9)
007a55 e0a0      	LDI  R26,HIGH(0xD9)
007a56 07fa      	CPC  R31,R26
007a57 f439      	BRNE _0x220053
                +
007a58 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a5a 70e1      	ANDI R30,LOW(0x1)
007a5b f011      	BREQ _0x220054
                +
007a5c e021     +LDI R18 , LOW ( 1 )
007a5d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
007a5e c17d      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
007a5f 3dea      	CPI  R30,LOW(0xDA)
007a60 e0a0      	LDI  R26,HIGH(0xDA)
007a61 07fa      	CPC  R31,R26
007a62 f439      	BRNE _0x220055
                +
007a63 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a65 71e1      	ANDI R30,LOW(0x11)
007a66 f011      	BREQ _0x220056
                +
007a67 e021     +LDI R18 , LOW ( 1 )
007a68 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
007a69 c172      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
007a6a 3deb      	CPI  R30,LOW(0xDB)
007a6b e0a0      	LDI  R26,HIGH(0xDB)
007a6c 07fa      	CPC  R31,R26
007a6d f439      	BRNE _0x220057
                +
007a6e 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a70 70e2      	ANDI R30,LOW(0x2)
007a71 f011      	BREQ _0x220058
                +
007a72 e021     +LDI R18 , LOW ( 1 )
007a73 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
007a74 c167      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
007a75 3dec      	CPI  R30,LOW(0xDC)
007a76 e0a0      	LDI  R26,HIGH(0xDC)
007a77 07fa      	CPC  R31,R26
007a78 f439      	BRNE _0x220059
                +
007a79 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a7b 70e4      	ANDI R30,LOW(0x4)
007a7c f011      	BREQ _0x22005A
                +
007a7d e021     +LDI R18 , LOW ( 1 )
007a7e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
007a7f c15c      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
007a80 3ded      	CPI  R30,LOW(0xDD)
007a81 e0a0      	LDI  R26,HIGH(0xDD)
007a82 07fa      	CPC  R31,R26
007a83 f439      	BRNE _0x22005B
                +
007a84 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a86 71e4      	ANDI R30,LOW(0x14)
007a87 f011      	BREQ _0x22005C
                +
007a88 e021     +LDI R18 , LOW ( 1 )
007a89 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
007a8a c151      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
007a8b 3dee      	CPI  R30,LOW(0xDE)
007a8c e0a0      	LDI  R26,HIGH(0xDE)
007a8d 07fa      	CPC  R31,R26
007a8e f439      	BRNE _0x22005D
                +
007a8f 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007a91 70e8      	ANDI R30,LOW(0x8)
007a92 f011      	BREQ _0x22005E
                +
007a93 e021     +LDI R18 , LOW ( 1 )
007a94 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
007a95 c146      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
007a96 3def      	CPI  R30,LOW(0xDF)
007a97 e0a0      	LDI  R26,HIGH(0xDF)
007a98 07fa      	CPC  R31,R26
007a99 f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007a9a 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007a9c 30a0      	CPI  R26,LOW(0x0)
007a9d f021      	BREQ _0x220061
                +
007a9e 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007aa0 3faf      	CPI  R26,LOW(0xFF)
007aa1 f409      	BRNE _0x220062
                 _0x220061:
007aa2 c002      	RJMP _0x220060
                 _0x220062:
                +
007aa3 e021     +LDI R18 , LOW ( 1 )
007aa4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
007aa5 c136      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
007aa6 3ee0      	CPI  R30,LOW(0xE0)
007aa7 e0a0      	LDI  R26,HIGH(0xE0)
007aa8 07fa      	CPC  R31,R26
007aa9 f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
007aaa 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007aac 30a0      	CPI  R26,LOW(0x0)
007aad f021      	BREQ _0x220065
                +
007aae 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007ab0 3faf      	CPI  R26,LOW(0xFF)
007ab1 f421      	BRNE _0x220067
                 _0x220065:
                +
007ab2 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
007ab4 30a0      	CPI  R26,LOW(0x0)
007ab5 f011      	BREQ _0x220064
                 _0x220067:
                +
007ab6 e021     +LDI R18 , LOW ( 1 )
007ab7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
007ab8 c123      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
007ab9 3ee1      	CPI  R30,LOW(0xE1)
007aba e0a0      	LDI  R26,HIGH(0xE1)
007abb 07fa      	CPC  R31,R26
007abc f439      	BRNE _0x220069
                +
007abd 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007abf 70e1      	ANDI R30,LOW(0x1)
007ac0 f011      	BREQ _0x22006A
                +
007ac1 e021     +LDI R18 , LOW ( 1 )
007ac2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
007ac3 c118      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
007ac4 3ee2      	CPI  R30,LOW(0xE2)
007ac5 e0a0      	LDI  R26,HIGH(0xE2)
007ac6 07fa      	CPC  R31,R26
007ac7 f439      	BRNE _0x22006B
                +
007ac8 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007aca 71e1      	ANDI R30,LOW(0x11)
007acb f011      	BREQ _0x22006C
                +
007acc e021     +LDI R18 , LOW ( 1 )
007acd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
007ace c10d      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
007acf 3ee3      	CPI  R30,LOW(0xE3)
007ad0 e0a0      	LDI  R26,HIGH(0xE3)
007ad1 07fa      	CPC  R31,R26
007ad2 f439      	BRNE _0x22006D
                +
007ad3 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007ad5 70e2      	ANDI R30,LOW(0x2)
007ad6 f011      	BREQ _0x22006E
                +
007ad7 e021     +LDI R18 , LOW ( 1 )
007ad8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
007ad9 c102      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
007ada 3ee4      	CPI  R30,LOW(0xE4)
007adb e0a0      	LDI  R26,HIGH(0xE4)
007adc 07fa      	CPC  R31,R26
007add f439      	BRNE _0x22006F
                +
007ade 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007ae0 70e4      	ANDI R30,LOW(0x4)
007ae1 f011      	BREQ _0x220070
                +
007ae2 e021     +LDI R18 , LOW ( 1 )
007ae3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
007ae4 c0f7      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
007ae5 3ee5      	CPI  R30,LOW(0xE5)
007ae6 e0a0      	LDI  R26,HIGH(0xE5)
007ae7 07fa      	CPC  R31,R26
007ae8 f439      	BRNE _0x220071
                +
007ae9 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007aeb 71e4      	ANDI R30,LOW(0x14)
007aec f011      	BREQ _0x220072
                +
007aed e021     +LDI R18 , LOW ( 1 )
007aee e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
007aef c0ec      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
007af0 3ee6      	CPI  R30,LOW(0xE6)
007af1 e0a0      	LDI  R26,HIGH(0xE6)
007af2 07fa      	CPC  R31,R26
007af3 f439      	BRNE _0x220073
                +
007af4 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
007af6 70e8      	ANDI R30,LOW(0x8)
007af7 f011      	BREQ _0x220074
                +
007af8 e021     +LDI R18 , LOW ( 1 )
007af9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
007afa c0e1      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
007afb 3ee7      	CPI  R30,LOW(0xE7)
007afc e0a0      	LDI  R26,HIGH(0xE7)
007afd 07fa      	CPC  R31,R26
007afe f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007aff 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007b01 30a0      	CPI  R26,LOW(0x0)
007b02 f021      	BREQ _0x220077
                +
007b03 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
007b05 3faf      	CPI  R26,LOW(0xFF)
007b06 f409      	BRNE _0x220078
                 _0x220077:
007b07 c002      	RJMP _0x220076
                 _0x220078:
                +
007b08 e021     +LDI R18 , LOW ( 1 )
007b09 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
007b0a c0d1      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
007b0b 37e1      	CPI  R30,LOW(0x71)
007b0c e0a0      	LDI  R26,HIGH(0x71)
007b0d 07fa      	CPC  R31,R26
007b0e f409      	BRNE _0x220079
007b0f c0cc      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
007b10 37e2      	CPI  R30,LOW(0x72)
007b11 e0a0      	LDI  R26,HIGH(0x72)
007b12 07fa      	CPC  R31,R26
007b13 f481      	BRNE _0x22007A
                +
007b14 e000     +LDI R16 , LOW ( 0 )
007b15 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007b16 3002     +CPI R16 , LOW ( 2 )
007b17 e0e0     +LDI R30 , HIGH ( 2 )
007b18 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007b19 f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
007b1a e7ac      	LDI  R26,LOW(_dinStatus)
007b1b e1b4      	LDI  R27,HIGH(_dinStatus)
007b1c 0fa0      	ADD  R26,R16
007b1d 1fb1      	ADC  R27,R17
007b1e 91ac      	LD   R26,X
007b1f 30a1      	CPI  R26,LOW(0x1)
007b20 f411      	BRNE _0x22007E
                +
007b21 e021     +LDI R18 , LOW ( 1 )
007b22 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
007b23 c0b8      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
007b24 37e3      	CPI  R30,LOW(0x73)
007b25 e0a0      	LDI  R26,HIGH(0x73)
007b26 07fa      	CPC  R31,R26
007b27 f471      	BRNE _0x22007F
                +
007b28 e000     +LDI R16 , LOW ( 0 )
007b29 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007b2a 3002     +CPI R16 , LOW ( 2 )
007b2b e0e0     +LDI R30 , HIGH ( 2 )
007b2c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007b2d f43c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
007b2e e7ac      	LDI  R26,LOW(_dinStatus)
007b2f e1b4      	LDI  R27,HIGH(_dinStatus)
007b30 940e d2fd 	CALL SUBOPT_0x27B
007b32 f411      	BRNE _0x220083
                +
007b33 e021     +LDI R18 , LOW ( 1 )
007b34 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
007b35 c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
007b36 34e0      	CPI  R30,LOW(0x40)
007b37 e0a0      	LDI  R26,HIGH(0x40)
007b38 07fa      	CPC  R31,R26
007b39 f409      	BRNE _0x220084
007b3a c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
007b3b 35e0      	CPI  R30,LOW(0x50)
007b3c e0a0      	LDI  R26,HIGH(0x50)
007b3d 07fa      	CPC  R31,R26
007b3e f439      	BRNE _0x220085
007b3f 91a0 147c 	LDS  R26,_dinStatus
007b41 30a1      	CPI  R26,LOW(0x1)
007b42 f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
007b43 e021     +LDI R18 , LOW ( 1 )
007b44 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
007b45 c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
007b46 36e0      	CPI  R30,LOW(0x60)
007b47 e0a0      	LDI  R26,HIGH(0x60)
007b48 07fa      	CPC  R31,R26
007b49 f439      	BRNE _0x220087
007b4a 91e0 147c 	LDS  R30,_dinStatus
007b4c 30e0      	CPI  R30,0
007b4d f411      	BRNE _0x220088
                +
007b4e e021     +LDI R18 , LOW ( 1 )
007b4f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
007b50 c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
007b51 34e1      	CPI  R30,LOW(0x41)
007b52 e0a0      	LDI  R26,HIGH(0x41)
007b53 07fa      	CPC  R31,R26
007b54 f409      	BRNE _0x220089
007b55 c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
007b56 35e1      	CPI  R30,LOW(0x51)
007b57 e0a0      	LDI  R26,HIGH(0x51)
007b58 07fa      	CPC  R31,R26
007b59 f439      	BRNE _0x22008A
                +
007b5a 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
007b5c 30a1      	CPI  R26,LOW(0x1)
007b5d f411      	BRNE _0x22008B
                +
007b5e e021     +LDI R18 , LOW ( 1 )
007b5f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
007b60 c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
007b61 36e1      	CPI  R30,LOW(0x61)
007b62 e0a0      	LDI  R26,HIGH(0x61)
007b63 07fa      	CPC  R31,R26
007b64 f439      	BRNE _0x22008C
                +
007b65 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
007b67 30e0      	CPI  R30,0
007b68 f411      	BRNE _0x22008D
                +
007b69 e021     +LDI R18 , LOW ( 1 )
007b6a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
007b6b c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
007b6c 38e0      	CPI  R30,LOW(0x80)
007b6d e0a0      	LDI  R26,HIGH(0x80)
007b6e 07fa      	CPC  R31,R26
007b6f f409      	BRNE _0x22008E
007b70 c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
007b71 38e1      	CPI  R30,LOW(0x81)
007b72 e0a0      	LDI  R26,HIGH(0x81)
007b73 07fa      	CPC  R31,R26
007b74 f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
007b75 c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
007b76 38e2      	CPI  R30,LOW(0x82)
007b77 e0a0      	LDI  R26,HIGH(0x82)
007b78 07fa      	CPC  R31,R26
007b79 f439      	BRNE _0x220090
007b7a 91a0 147a 	LDS  R26,_powerSrcStatus
007b7c 30a1      	CPI  R26,LOW(0x1)
007b7d f411      	BRNE _0x220091
                +
007b7e e021     +LDI R18 , LOW ( 1 )
007b7f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
007b80 c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
007b81 38e3      	CPI  R30,LOW(0x83)
007b82 e0a0      	LDI  R26,HIGH(0x83)
007b83 07fa      	CPC  R31,R26
007b84 f439      	BRNE _0x220092
007b85 91a0 147b 	LDS  R26,_batteryStatus
007b87 30a1      	CPI  R26,LOW(0x1)
007b88 f411      	BRNE _0x220093
                +
007b89 e021     +LDI R18 , LOW ( 1 )
007b8a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
007b8b c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
007b8c 38e4      	CPI  R30,LOW(0x84)
007b8d e0a0      	LDI  R26,HIGH(0x84)
007b8e 07fa      	CPC  R31,R26
007b8f f409      	BRNE _0x220094
007b90 c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
007b91 38e5      	CPI  R30,LOW(0x85)
007b92 e0a0      	LDI  R26,HIGH(0x85)
007b93 07fa      	CPC  R31,R26
007b94 f439      	BRNE _0x220095
007b95 91a0 14a7 	LDS  R26,_memoryAlarm
007b97 30a1      	CPI  R26,LOW(0x1)
007b98 f411      	BRNE _0x220096
                +
007b99 e021     +LDI R18 , LOW ( 1 )
007b9a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
007b9b c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
007b9c 38e6      	CPI  R30,LOW(0x86)
007b9d e0a0      	LDI  R26,HIGH(0x86)
007b9e 07fa      	CPC  R31,R26
007b9f f439      	BRNE _0x220097
007ba0 91a0 14a7 	LDS  R26,_memoryAlarm
007ba2 30a2      	CPI  R26,LOW(0x2)
007ba3 f411      	BRNE _0x220098
                +
007ba4 e021     +LDI R18 , LOW ( 1 )
007ba5 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
007ba6 c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
007ba7 38e7      	CPI  R30,LOW(0x87)
007ba8 e0a0      	LDI  R26,HIGH(0x87)
007ba9 07fa      	CPC  R31,R26
007baa f439      	BRNE _0x220099
007bab 91a0 1480 	LDS  R26,_serverCommStatus
007bad 30a2      	CPI  R26,LOW(0x2)
007bae f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
007baf e021     +LDI R18 , LOW ( 1 )
007bb0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
007bb1 c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
007bb2 39e0      	CPI  R30,LOW(0x90)
007bb3 e0a0      	LDI  R26,HIGH(0x90)
007bb4 07fa      	CPC  R31,R26
007bb5 f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
007bb6 39e1      	CPI  R30,LOW(0x91)
007bb7 e0a0      	LDI  R26,HIGH(0x91)
007bb8 07fa      	CPC  R31,R26
007bb9 f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
007bba c004      	RJMP _0x22009E
                 _0x22009D:
007bbb 39e2      	CPI  R30,LOW(0x92)
007bbc e0a0      	LDI  R26,HIGH(0x92)
007bbd 07fa      	CPC  R31,R26
007bbe f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
007bbf c004      	RJMP _0x2200A0
                 _0x22009F:
007bc0 39e3      	CPI  R30,LOW(0x93)
007bc1 e0a0      	LDI  R26,HIGH(0x93)
007bc2 07fa      	CPC  R31,R26
007bc3 f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
007bc4 c004      	RJMP _0x2200A2
                 _0x2200A1:
007bc5 39e4      	CPI  R30,LOW(0x94)
007bc6 e0a0      	LDI  R26,HIGH(0x94)
007bc7 07fa      	CPC  R31,R26
007bc8 f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
007bc9 c004      	RJMP _0x2200A4
                 _0x2200A3:
007bca 39ef      	CPI  R30,LOW(0x9F)
007bcb e0a0      	LDI  R26,HIGH(0x9F)
007bcc 07fa      	CPC  R31,R26
007bcd f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
007bce ede6     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
007bcf e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
007bd0 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
007bd1 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
007bd2 c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
007bd3 e0e9     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
007bd4 e4fc     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
007bd5 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
007bd6 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
007bd7 940e e400 	CALL __PUTPARD1
007bd9 85e8      	LDD  R30,Y+8
007bda 940e c388 	CALL SUBOPT_0x29
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
007bdc 01f9      	MOVW R30,R18
007bdd 940e e47e 	CALL __LOADLOCR4
007bdf 940c 7f67 	JMP  _0x20E0054
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
007be1 93ba      	ST   -Y,R27
007be2 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007be3 91e0 16ba 	LDS  R30,_mtncAlarm
007be5 91a0 1479 	LDS  R26,_mtncStatus
007be7 17ea      	CP   R30,R26
007be8 f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
007be9 91e0 1479 	LDS  R30,_mtncStatus
007beb 93e0 16ba 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
007bed 91e0 1479 	LDS  R30,_mtncStatus
007bef 81a8      	LD   R26,Y
007bf0 81b9      	LDD  R27,Y+1
007bf1 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
007bf2 e0e1      	LDI  R30,LOW(1)
007bf3 e0f0      	LDI  R31,HIGH(1)
007bf4 c0ee      	RJMP _0x20E0059
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
007bf5 c0eb      	RJMP _0x20E005A
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
007bf6 93ba      	ST   -Y,R27
007bf7 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007bf8 91e0 16bb 	LDS  R30,_powerSrcAlarm
007bfa 91a0 147a 	LDS  R26,_powerSrcStatus
007bfc 17ea      	CP   R30,R26
007bfd f1e1      	BREQ _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
007bfe 91e0 16c4 	LDS  R30,_lastCheck_S0110003000
007c00 17ea      	CP   R30,R26
007c01 f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
007c02 e0e0      	LDI  R30,LOW(0)
007c03 93e0 16c3 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
007c05 91e0 147a 	LDS  R30,_powerSrcStatus
007c07 93e0 16c4 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
007c09 91e0 16c3 	LDS  R30,_t_flag_S0110003000
007c0b 30e0      	CPI  R30,0
007c0c f499      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
007c0d 91a0 147a 	LDS  R26,_powerSrcStatus
007c0f 30a1      	CPI  R26,LOW(0x1)
007c10 f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
007c11 ebef      	LDI  R30,LOW(_t_S0110003000)
007c12 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007c13 940e cba8 	CALL SUBOPT_0x172
007c15 c004      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
007c16 ebef      	LDI  R30,LOW(_t_S0110003000)
007c17 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007c18 940e d302 	CALL SUBOPT_0x27C
                 _0x2200F2:
007c1a 940e 4217 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
007c1c e0e1      	LDI  R30,LOW(1)
007c1d 93e0 16c3 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
007c1f c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
007c20 91a0 16bf 	LDS  R26,_t_S0110003000
007c22 91b0 16c0 	LDS  R27,_t_S0110003000+1
007c24 9180 16c1 	LDS  R24,_t_S0110003000+2
007c26 9190 16c2 	LDS  R25,_t_S0110003000+3
007c28 940e 4201 	CALL _TIMER_checkTimerExceed
007c2a 9730      	SBIW R30,0
007c2b f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
007c2c 91e0 147a 	LDS  R30,_powerSrcStatus
007c2e 93e0 16bb 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
007c30 91e0 147a 	LDS  R30,_powerSrcStatus
007c32 940e d309 	CALL SUBOPT_0x27D
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
007c34 93e0 16c3 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
007c36 e0e1      	LDI  R30,LOW(1)
007c37 e0f0      	LDI  R31,HIGH(1)
007c38 c0aa      	RJMP _0x20E0059
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
007c39 c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
007c3a e0e0      	LDI  R30,LOW(0)
007c3b 93e0 16c3 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
007c3d c0a3      	RJMP _0x20E005A
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
007c3e 93ba      	ST   -Y,R27
007c3f 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007c40 940e d30e 	CALL SUBOPT_0x27E
007c42 f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
007c43 91e0 14a6 	LDS  R30,_batteryAlarm
007c45 91a0 147b 	LDS  R26,_batteryStatus
007c47 17ea      	CP   R30,R26
007c48 f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
007c49 91e0 16ca 	LDS  R30,_lastCheck_S0110004000
007c4b 17ea      	CP   R30,R26
007c4c f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
007c4d e0e0      	LDI  R30,LOW(0)
007c4e 93e0 16c9 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
007c50 91e0 147b 	LDS  R30,_batteryStatus
007c52 93e0 16ca 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
007c54 91e0 16c9 	LDS  R30,_t_flag_S0110004000
007c56 30e0      	CPI  R30,0
007c57 f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
007c58 ece5      	LDI  R30,LOW(_t_S0110004000)
007c59 e1f6      	LDI  R31,HIGH(_t_S0110004000)
007c5a 940e c377 	CALL SUBOPT_0x27
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
007c5c e0e1      	LDI  R30,LOW(1)
007c5d 93e0 16c9 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
007c5f c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
007c60 91a0 16c5 	LDS  R26,_t_S0110004000
007c62 91b0 16c6 	LDS  R27,_t_S0110004000+1
007c64 9180 16c7 	LDS  R24,_t_S0110004000+2
007c66 9190 16c8 	LDS  R25,_t_S0110004000+3
007c68 940e 4201 	CALL _TIMER_checkTimerExceed
007c6a 9730      	SBIW R30,0
007c6b f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
007c6c 91e0 147b 	LDS  R30,_batteryStatus
007c6e 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
007c70 91e0 147b 	LDS  R30,_batteryStatus
007c72 940e d309 	CALL SUBOPT_0x27D
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
007c74 93e0 16c9 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
007c76 e0e1      	LDI  R30,LOW(1)
007c77 e0f0      	LDI  R31,HIGH(1)
007c78 c06a      	RJMP _0x20E0059
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
007c79 c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
007c7a e0e0      	LDI  R30,LOW(0)
007c7b 93e0 16c9 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
007c7d c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
007c7e e0e0      	LDI  R30,LOW(0)
007c7f 93e0 16c5 	STS  _t_S0110004000,R30
007c81 93e0 16c6 	STS  _t_S0110004000+1,R30
007c83 93e0 16c7 	STS  _t_S0110004000+2,R30
007c85 93e0 16c8 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
007c87 93e0 16c9 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
007c89 e6e9      	LDI  R30,LOW(105)
007c8a 93e0 16ca 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
007c8c 91e0 14a6 	LDS  R30,_batteryAlarm
007c8e 30e0      	CPI  R30,0
007c8f f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
007c90 e0e0      	LDI  R30,LOW(0)
007c91 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
007c93 940e d319 	CALL SUBOPT_0x27F
                 ; 0011 0109             return 1;
007c95 c04d      	RJMP _0x20E0059
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
007c96 c04a      	RJMP _0x20E005A
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
007c97 93ba      	ST   -Y,R27
007c98 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007c99 940e d320 	CALL SUBOPT_0x280
007c9b f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
007c9c 91e0 14a7 	LDS  R30,_memoryAlarm
007c9e 91a0 1482 	LDS  R26,_memoryStatus
007ca0 17ea      	CP   R30,R26
007ca1 f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
007ca2 91e0 16cf 	LDS  R30,_t_flag_S0110005000
007ca4 30e0      	CPI  R30,0
007ca5 f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
007ca6 eceb      	LDI  R30,LOW(_t_S0110005000)
007ca7 e1f6      	LDI  R31,HIGH(_t_S0110005000)
007ca8 940e c404 	CALL SUBOPT_0x3B
                 ; 0011 011B                 t_flag          = 1;
007caa e0e1      	LDI  R30,LOW(1)
007cab 93e0 16cf 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
007cad c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
007cae 91a0 16cb 	LDS  R26,_t_S0110005000
007cb0 91b0 16cc 	LDS  R27,_t_S0110005000+1
007cb2 9180 16cd 	LDS  R24,_t_S0110005000+2
007cb4 9190 16ce 	LDS  R25,_t_S0110005000+3
007cb6 940e 4201 	CALL _TIMER_checkTimerExceed
007cb8 9730      	SBIW R30,0
007cb9 f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
007cba 91e0 1482 	LDS  R30,_memoryStatus
007cbc 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
007cbe 91e0 1482 	LDS  R30,_memoryStatus
007cc0 940e d309 	CALL SUBOPT_0x27D
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
007cc2 93e0 16cf 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
007cc4 e0e1      	LDI  R30,LOW(1)
007cc5 e0f0      	LDI  R31,HIGH(1)
007cc6 c01c      	RJMP _0x20E0059
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
007cc7 c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
007cc8 e0e0      	LDI  R30,LOW(0)
007cc9 93e0 16cf 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
007ccb c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
007ccc e0e0      	LDI  R30,LOW(0)
007ccd 93e0 16cb 	STS  _t_S0110005000,R30
007ccf 93e0 16cc 	STS  _t_S0110005000+1,R30
007cd1 93e0 16cd 	STS  _t_S0110005000+2,R30
007cd3 93e0 16ce 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
007cd5 93e0 16cf 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
007cd7 91e0 14a6 	LDS  R30,_batteryAlarm
007cd9 30e0      	CPI  R30,0
007cda f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
007cdb e0e0      	LDI  R30,LOW(0)
007cdc 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
007cde 940e d319 	CALL SUBOPT_0x27F
                 ; 0011 0136             return 1;
007ce0 c002      	RJMP _0x20E0059
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E005A:
007ce1 e0e0      	LDI  R30,LOW(0)
007ce2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0059:
007ce3 9622      	ADIW R28,2
007ce4 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
007ce5 940e c933 	CALL SUBOPT_0x109
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007ce7 f022      	BRMI _0x2200C7
007ce8 81aa      	LDD  R26,Y+2
007ce9 81bb      	LDD  R27,Y+2+1
007cea 9712      	SBIW R26,2
007ceb f04c      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
007cec e3e9     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
007ced e4fc     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
007cee e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
007cef e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
007cf0 940e c91f 	CALL SUBOPT_0x105
007cf2 940e c881 	CALL SUBOPT_0xE9
                 ; 0011 0145         return 0;
007cf4 c10b      	RJMP _0x20E0058
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
007cf5 940e d327 	CALL SUBOPT_0x281
007cf7 56ea      	SUBI R30,LOW(-_dinAlarm)
007cf8 4efb      	SBCI R31,HIGH(-_dinAlarm)
007cf9 81e0      	LD   R30,Z
007cfa 17ea      	CP   R30,R26
007cfb f411      	BRNE PC+3
007cfc 940c 7d3e 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
007cfe 940e d327 	CALL SUBOPT_0x281
007d00 52e6      	SUBI R30,LOW(-_lastCheck_S0110006000)
007d01 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
007d02 81e0      	LD   R30,Z
007d03 17ea      	CP   R30,R26
007d04 f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
007d05 940e d32f 	CALL SUBOPT_0x282
007d07 e0a0      	LDI  R26,LOW(0)
007d08 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
007d09 81aa      	LDD  R26,Y+2
007d0a 81bb      	LDD  R27,Y+2+1
007d0b 52a6      	SUBI R26,LOW(-_lastCheck_S0110006000)
007d0c 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
007d0d 940e d334 	CALL SUBOPT_0x283
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
007d0f 940e d32f 	CALL SUBOPT_0x282
007d11 81e0      	LD   R30,Z
007d12 30e0      	CPI  R30,0
007d13 f469      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
007d14 81ea      	LDD  R30,Y+2
007d15 81fb      	LDD  R31,Y+2+1
007d16 eda0      	LDI  R26,LOW(_t_S0110006000)
007d17 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007d18 940e d2c6 	CALL SUBOPT_0x273
007d1a 940e d039 	CALL SUBOPT_0x219
                 ; 0011 0151             t_flag[ch]          = 1;
007d1c 940e d32f 	CALL SUBOPT_0x282
007d1e e0a1      	LDI  R26,LOW(1)
007d1f 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
007d20 c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
007d21 81ea      	LDD  R30,Y+2
007d22 81fb      	LDD  R31,Y+2+1
007d23 eda0      	LDI  R26,LOW(_t_S0110006000)
007d24 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007d25 940e d2ca 	CALL SUBOPT_0x274
007d27 940e c333 	CALL SUBOPT_0x1C
007d29 f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
007d2a 81aa      	LDD  R26,Y+2
007d2b 81bb      	LDD  R27,Y+2+1
007d2c 56aa      	SUBI R26,LOW(-_dinAlarm)
007d2d 4ebb      	SBCI R27,HIGH(-_dinAlarm)
007d2e 940e d334 	CALL SUBOPT_0x283
                 ; 0011 0157                 *code           = dinStatus[ch];
007d30 81ea      	LDD  R30,Y+2
007d31 81fb      	LDD  R31,Y+2+1
007d32 58e4      	SUBI R30,LOW(-_dinStatus)
007d33 4efb      	SBCI R31,HIGH(-_dinStatus)
007d34 940e d2f3 	CALL SUBOPT_0x279
                 ; 0011 0158                 t_flag[ch]      = 0;
007d36 940e d32f 	CALL SUBOPT_0x282
007d38 e0a0      	LDI  R26,LOW(0)
007d39 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
007d3a e0e1      	LDI  R30,LOW(1)
007d3b e0f0      	LDI  R31,HIGH(1)
007d3c c0c5      	RJMP _0x20E0057
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
007d3d c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
007d3e 940e d32f 	CALL SUBOPT_0x282
007d40 e0a0      	LDI  R26,LOW(0)
007d41 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
007d42 c0bd      	RJMP _0x20E0058
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
007d43 940e d33b 	CALL SUBOPT_0x284
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007d45 59e1      	SUBI R30,LOW(-_sensorStatus)
007d46 4efb      	SBCI R31,HIGH(-_sensorStatus)
007d47 81a0      	LD   R26,Z
007d48 81ea      	LDD  R30,Y+2
007d49 81fb      	LDD  R31,Y+2+1
007d4a 57e4      	SUBI R30,LOW(-_sensorAlarm)
007d4b 4efb      	SBCI R31,HIGH(-_sensorAlarm)
007d4c 81e0      	LD   R30,Z
007d4d 17ea      	CP   R30,R26
007d4e f411      	BRNE PC+3
007d4f 940c 7da2 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
007d51 940e d340 	CALL SUBOPT_0x285
007d53 81a0      	LD   R26,Z
007d54 81ea      	LDD  R30,Y+2
007d55 81fb      	LDD  R31,Y+2+1
007d56 50eb      	SUBI R30,LOW(-_lastCheck_S0110007000)
007d57 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
007d58 81e0      	LD   R30,Z
007d59 17ea      	CP   R30,R26
007d5a f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
007d5b 940e d345 	CALL SUBOPT_0x286
007d5d e0a0      	LDI  R26,LOW(0)
007d5e 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
007d5f 81aa      	LDD  R26,Y+2
007d60 81bb      	LDD  R27,Y+2+1
007d61 50ab      	SUBI R26,LOW(-_lastCheck_S0110007000)
007d62 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
007d63 940e d340 	CALL SUBOPT_0x285
007d65 81e0      	LD   R30,Z
007d66 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
007d67 940e d345 	CALL SUBOPT_0x286
007d69 81e0      	LD   R30,Z
007d6a 30e0      	CPI  R30,0
007d6b f4c9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007d6c 940e d340 	CALL SUBOPT_0x285
007d6e 81a0      	LD   R26,Z
007d6f 3faf      	CPI  R26,LOW(0xFF)
007d70 f439      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
007d71 940e d34a 	CALL SUBOPT_0x287
                +
007d73 e1ae     +LDI R26 , LOW ( 0x1E )
007d74 e0b0     +LDI R27 , HIGH ( 0x1E )
007d75 e080     +LDI R24 , BYTE3 ( 0x1E )
007d76 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
007d77 c006      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
007d78 940e d34a 	CALL SUBOPT_0x287
                +
007d7a e0a3     +LDI R26 , LOW ( 0x3 )
007d7b e0b0     +LDI R27 , HIGH ( 0x3 )
007d7c e080     +LDI R24 , BYTE3 ( 0x3 )
007d7d e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
                 _0x2200F4:
007d7e 940e 4217 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
007d80 940e d345 	CALL SUBOPT_0x286
007d82 e0a1      	LDI  R26,LOW(1)
007d83 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
007d84 c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
007d85 81ea      	LDD  R30,Y+2
007d86 81fb      	LDD  R31,Y+2+1
007d87 edac      	LDI  R26,LOW(_t_S0110007000)
007d88 e1b6      	LDI  R27,HIGH(_t_S0110007000)
007d89 940e d2ca 	CALL SUBOPT_0x274
007d8b 940e c333 	CALL SUBOPT_0x1C
007d8d f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
007d8e 81aa      	LDD  R26,Y+2
007d8f 81bb      	LDD  R27,Y+2+1
007d90 57a4      	SUBI R26,LOW(-_sensorAlarm)
007d91 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
007d92 940e d340 	CALL SUBOPT_0x285
007d94 81e0      	LD   R30,Z
007d95 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
007d96 940e d340 	CALL SUBOPT_0x285
007d98 940e d2f3 	CALL SUBOPT_0x279
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
007d9a 940e d345 	CALL SUBOPT_0x286
007d9c e0a0      	LDI  R26,LOW(0)
007d9d 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
007d9e e0e1      	LDI  R30,LOW(1)
007d9f e0f0      	LDI  R31,HIGH(1)
007da0 c061      	RJMP _0x20E0057
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
007da1 c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
007da2 940e d345 	CALL SUBOPT_0x286
007da4 e0a0      	LDI  R26,LOW(0)
007da5 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
007da6 c059      	RJMP _0x20E0058
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
007da7 940e d33b 	CALL SUBOPT_0x284
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007da9 58ec      	SUBI R30,LOW(-_dataStatus)
007daa 4efb      	SBCI R31,HIGH(-_dataStatus)
007dab 81a0      	LD   R26,Z
007dac 81ea      	LDD  R30,Y+2
007dad 81fb      	LDD  R31,Y+2+1
007dae 56ef      	SUBI R30,LOW(-_dataAlarm)
007daf 4efb      	SBCI R31,HIGH(-_dataAlarm)
007db0 81e0      	LD   R30,Z
007db1 17ea      	CP   R30,R26
007db2 f411      	BRNE PC+3
007db3 940c 7dfc 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
007db5 940e d34f 	CALL SUBOPT_0x288
007db7 81e0      	LD   R30,Z
007db8 30e0      	CPI  R30,0
007db9 f489      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
007dba 81ea      	LDD  R30,Y+2
007dbb 81fb      	LDD  R31,Y+2+1
007dbc efaa      	LDI  R26,LOW(_t_S0110008000)
007dbd e1b6      	LDI  R27,HIGH(_t_S0110008000)
007dbe 940e d2c6 	CALL SUBOPT_0x273
                +
007dc0 e0a3     +LDI R26 , LOW ( 0x3 )
007dc1 e0b0     +LDI R27 , HIGH ( 0x3 )
007dc2 e080     +LDI R24 , BYTE3 ( 0x3 )
007dc3 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
007dc4 940e 4217 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
007dc6 940e d34f 	CALL SUBOPT_0x288
007dc8 e0a1      	LDI  R26,LOW(1)
007dc9 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
007dca c030      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
007dcb 81ea      	LDD  R30,Y+2
007dcc 81fb      	LDD  R31,Y+2+1
007dcd efaa      	LDI  R26,LOW(_t_S0110008000)
007dce e1b6      	LDI  R27,HIGH(_t_S0110008000)
007dcf 940e d2ca 	CALL SUBOPT_0x274
007dd1 940e c333 	CALL SUBOPT_0x1C
007dd3 f139      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
007dd4 81aa      	LDD  R26,Y+2
007dd5 81bb      	LDD  R27,Y+2+1
007dd6 56af      	SUBI R26,LOW(-_dataAlarm)
007dd7 4ebb      	SBCI R27,HIGH(-_dataAlarm)
007dd8 81ea      	LDD  R30,Y+2
007dd9 81fb      	LDD  R31,Y+2+1
007dda 58ec      	SUBI R30,LOW(-_dataStatus)
007ddb 4efb      	SBCI R31,HIGH(-_dataStatus)
007ddc 81e0      	LD   R30,Z
007ddd 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
007dde 81ea      	LDD  R30,Y+2
007ddf 81fb      	LDD  R31,Y+2+1
007de0 58ec      	SUBI R30,LOW(-_dataStatus)
007de1 4efb      	SBCI R31,HIGH(-_dataStatus)
007de2 940e d2f3 	CALL SUBOPT_0x279
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
007de4 940e d34f 	CALL SUBOPT_0x288
007de6 e0a0      	LDI  R26,LOW(0)
007de7 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
007de8 e6e9     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
007de9 e4fc     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
007dea e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
007deb e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
007dec 940e c91f 	CALL SUBOPT_0x105
007dee 9631      	ADIW R30,1
007def 940e e2dd 	CALL __CWD1
007df1 940e c9ee 	CALL SUBOPT_0x129
007df3 56ef      	SUBI R30,LOW(-_dataAlarm)
007df4 4efb      	SBCI R31,HIGH(-_dataAlarm)
007df5 81e0      	LD   R30,Z
007df6 940e d13b 	CALL SUBOPT_0x239
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
007df8 e0e1      	LDI  R30,LOW(1)
007df9 e0f0      	LDI  R31,HIGH(1)
007dfa c007      	RJMP _0x20E0057
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
007dfb c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
007dfc 940e d34f 	CALL SUBOPT_0x288
007dfe e0a0      	LDI  R26,LOW(0)
007dff 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
                 _0x20E0058:
007e00 e0e0      	LDI  R30,LOW(0)
007e01 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0057:
007e02 9624      	ADIW R28,4
007e03 9508      	RET
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
007e04 940e c604 	CALL SUBOPT_0x86
                 ;	period -> Y+0
007e06 f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
007e07 940e c369 	CALL SUBOPT_0x25
007e09 940e c36e 	CALL SUBOPT_0x26
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
007e0b e0e1      	LDI  R30,LOW(1)
007e0c c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
007e0d e8e7      	LDI  R30,LOW(_muteAlarmExpired)
007e0e e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
007e0f 93fa      	ST   -Y,R31
007e10 93ea      	ST   -Y,R30
007e11 940e c732 	CALL SUBOPT_0xB4
007e13 940e 4217 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
007e15 e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
007e16 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
007e18 e0e0      	LDI  R30,LOW(0)
007e19 e0f0      	LDI  R31,HIGH(0)
007e1a 940c 82b4 	JMP  _0x20E004A
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
007e1c 91e0 148b 	LDS  R30,_muteMode
007e1e 940e d054 	CALL SUBOPT_0x21D
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
007e20 f0f1      	BREQ _0x20E0055
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
007e21 30e2      	CPI  R30,LOW(0x2)
007e22 e0a0      	LDI  R26,HIGH(0x2)
007e23 07fa      	CPC  R31,R26
007e24 f469      	BRNE _0x2200E7
007e25 91a0 1487 	LDS  R26,_muteAlarmExpired
007e27 91b0 1488 	LDS  R27,_muteAlarmExpired+1
007e29 9180 1489 	LDS  R24,_muteAlarmExpired+2
007e2b 9190 148a 	LDS  R25,_muteAlarmExpired+3
007e2d 940e 4201 	CALL _TIMER_checkTimerExceed
007e2f 9730      	SBIW R30,0
007e30 f459      	BRNE _0x20E0056
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
007e31 c00d      	RJMP _0x20E0055
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
007e32 e9eb     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
007e33 e4fc     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
007e34 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
007e35 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
007e36 940e e400 	CALL __PUTPARD1
007e38 91e0 148b 	LDS  R30,_muteMode
007e3a 940e c388 	CALL SUBOPT_0x29
                 ; 0011 01FF                                 return 1;
                 _0x20E0056:
007e3c e0e1      	LDI  R30,LOW(1)
007e3d e0f0      	LDI  R31,HIGH(1)
007e3e 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0055:
007e3f e0e0      	LDI  R30,LOW(0)
007e40 e0f0      	LDI  R31,HIGH(0)
007e41 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
007e42 940e caad 	CALL SUBOPT_0x14D
                 ;	i -> R16,R17
                 _0x2200E9:
                +
007e44 3005     +CPI R16 , LOW ( 5 )
007e45 e0e0     +LDI R30 , HIGH ( 5 )
007e46 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007e47 f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
007e48 e8ac      	LDI  R26,LOW(_sensorAlarm)
007e49 e1b4      	LDI  R27,HIGH(_sensorAlarm)
007e4a 940e cab2 	CALL SUBOPT_0x14E
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
007e4c e9a1      	LDI  R26,LOW(_dataAlarm)
007e4d e1b4      	LDI  R27,HIGH(_dataAlarm)
007e4e 940e cab2 	CALL SUBOPT_0x14E
                 ; 0011 0210     }
                +
007e50 5f0f     +SUBI R16 , LOW ( - 1 )
007e51 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007e52 cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
007e53 e000     +LDI R16 , LOW ( 0 )
007e54 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
007e55 3100     +CPI R16 , LOW ( 16 )
007e56 e0e0     +LDI R30 , HIGH ( 16 )
007e57 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007e58 f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
007e59 e9a6      	LDI  R26,LOW(_dinAlarm)
007e5a e1b4      	LDI  R27,HIGH(_dinAlarm)
007e5b 0fa0      	ADD  R26,R16
007e5c 1fb1      	ADC  R27,R17
007e5d efef      	LDI  R30,LOW(255)
007e5e 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
007e5f 5f0f     +SUBI R16 , LOW ( - 1 )
007e60 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007e61 cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
007e62 e000     +LDI R16 , LOW ( 0 )
007e63 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
007e64 3100     +CPI R16 , LOW ( 16 )
007e65 e0e0     +LDI R30 , HIGH ( 16 )
007e66 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007e67 f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
007e68 eaaa      	LDI  R26,LOW(_ainAlarm)
007e69 e1b6      	LDI  R27,HIGH(_ainAlarm)
007e6a 0fa0      	ADD  R26,R16
007e6b 1fb1      	ADC  R27,R17
007e6c efef      	LDI  R30,LOW(255)
007e6d 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
007e6e 5f0f     +SUBI R16 , LOW ( - 1 )
007e6f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007e70 cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
007e71 efef      	LDI  R30,LOW(255)
007e72 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
007e73 e0e0      	LDI  R30,LOW(0)
007e74 93e0 16ba 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
007e76 93e0 16bb 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
007e78 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
007e7a 93e0 16bc 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
007e7c 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
007e7e 93e0 16bd 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
007e80 93e0 16be 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
007e82 940c 8306 	JMP  _0x20E0048
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 _OLED_showDateTime:
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
007e84 93ba      	ST   -Y,R27
007e85 93aa      	ST   -Y,R26
007e86 976a      	SBIW R28,26
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
007e87 940e c2b3 	CALL SUBOPT_0x9
007e89 8dac      	LDD  R26,Y+28
007e8a 8dbd      	LDD  R27,Y+28+1
007e8b 940e 48b4 	CALL _RTC_getDateTime
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                +
007e8d ecec     +LDI R30 , LOW ( 2 * _0x240000 + ( 0 ) )
007e8e e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 0 ) )
007e8f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 0 ) )
007e90 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 0 ) )
                 	__POINTD1FN _0x240000,0
007e91 940e c62d 	CALL SUBOPT_0x8D
007e93 940e c62d 	CALL SUBOPT_0x8D
007e95 940e c62d 	CALL SUBOPT_0x8D
007e97 940e e400 	CALL __PUTPARD1
007e99 e08c      	LDI  R24,12
007e9a d1de      	RCALL _printOLED
007e9b 9660      	ADIW R28,16
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                +
007e9c eded     +LDI R30 , LOW ( 2 * _0x240000 + ( 17 ) )
007e9d e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 17 ) )
007e9e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 17 ) )
007e9f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 17 ) )
                 	__POINTD1FN _0x240000,17
007ea0 940e c4e6 	CALL SUBOPT_0x5B
007ea2 940e c8ab 	CALL SUBOPT_0xF2
007ea4 940e d354 	CALL SUBOPT_0x289
                 ; 0012 0019 
                 ; 0012 001A }
007ea6 966c      	ADIW R28,28
007ea7 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 _OLED_showSensorValue:
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
007ea8 940e caad 	CALL SUBOPT_0x14D
                 ;	i -> R16,R17
                 _0x240004:
                +
007eaa 3005     +CPI R16 , LOW ( 5 )
007eab e0e0     +LDI R30 , HIGH ( 5 )
007eac 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007ead f014      	BRLT PC+3
007eae 940c 7f25 	JMP _0x240005
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
007eb0 940e d2ce 	CALL SUBOPT_0x275
007eb2 f411      	BRNE PC+3
007eb3 940c 7f1a 	JMP _0x240006
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
007eb5 940e d359 	CALL SUBOPT_0x28A
                +
007eb7 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007eb8 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007eb9 81e0      	LD   R30,Z
007eba 940e c393 	CALL SUBOPT_0x2B
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
007ebc f469      	BRNE _0x24000A
                +
007ebd eee9     +LDI R30 , LOW ( 2 * _0x240000 + ( 29 ) )
007ebe e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 29 ) )
007ebf e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 29 ) )
007ec0 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 29 ) )
                 	__POINTD1FN _0x240000,29
007ec1 940e d35f 	CALL SUBOPT_0x28B
007ec3 940e d359 	CALL SUBOPT_0x28A
007ec5 940e c347 	CALL SUBOPT_0x20
007ec7 940e d363 	CALL SUBOPT_0x28C
                 ; 0012 0028                                                 break;
007ec9 c04f      	RJMP _0x240009
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 _0x24000A:
007eca 38e1      	CPI  R30,LOW(0x81)
007ecb e0a0      	LDI  R26,HIGH(0x81)
007ecc 07fa      	CPC  R31,R26
007ecd f449      	BRNE _0x24000B
                +
007ece efe3     +LDI R30 , LOW ( 2 * _0x240000 + ( 39 ) )
007ecf e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 39 ) )
007ed0 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 39 ) )
007ed1 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 39 ) )
                 	__POINTD1FN _0x240000,39
007ed2 940e d35f 	CALL SUBOPT_0x28B
007ed4 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 002A                                                 break;
007ed6 c042      	RJMP _0x240009
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 _0x24000B:
007ed7 38e2      	CPI  R30,LOW(0x82)
007ed8 e0a0      	LDI  R26,HIGH(0x82)
007ed9 07fa      	CPC  R31,R26
007eda f449      	BRNE _0x24000C
                +
007edb efee     +LDI R30 , LOW ( 2 * _0x240000 + ( 50 ) )
007edc e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 50 ) )
007edd e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 50 ) )
007ede e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 50 ) )
                 	__POINTD1FN _0x240000,50
007edf 940e d35f 	CALL SUBOPT_0x28B
007ee1 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 002C                                                 break;
007ee3 c035      	RJMP _0x240009
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 _0x24000C:
007ee4 38e4      	CPI  R30,LOW(0x84)
007ee5 e0a0      	LDI  R26,HIGH(0x84)
007ee6 07fa      	CPC  R31,R26
007ee7 f449      	BRNE _0x24000D
                +
007ee8 e0e9     +LDI R30 , LOW ( 2 * _0x240000 + ( 61 ) )
007ee9 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 61 ) )
007eea e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 61 ) )
007eeb e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 61 ) )
                 	__POINTD1FN _0x240000,61
007eec 940e d35f 	CALL SUBOPT_0x28B
007eee 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 002E                                                 break;
007ef0 c028      	RJMP _0x240009
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 _0x24000D:
007ef1 39e0      	CPI  R30,LOW(0x90)
007ef2 e0a0      	LDI  R26,HIGH(0x90)
007ef3 07fa      	CPC  R31,R26
007ef4 f449      	BRNE _0x24000E
                +
007ef5 e1e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 72 ) )
007ef6 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 72 ) )
007ef7 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 72 ) )
007ef8 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 72 ) )
                 	__POINTD1FN _0x240000,72
007ef9 940e d35f 	CALL SUBOPT_0x28B
007efb 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 0030                                                 break;
007efd c01b      	RJMP _0x240009
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 _0x24000E:
007efe 3fef      	CPI  R30,LOW(0xFF)
007eff e0a0      	LDI  R26,HIGH(0xFF)
007f00 07fa      	CPC  R31,R26
007f01 f449      	BRNE _0x240010
                +
007f02 e1ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 83 ) )
007f03 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 83 ) )
007f04 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 83 ) )
007f05 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 83 ) )
                 	__POINTD1FN _0x240000,83
007f06 940e d35f 	CALL SUBOPT_0x28B
007f08 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 0032                                                 break;
007f0a c00e      	RJMP _0x240009
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 _0x240010:
                +
007f0b e2ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 98 ) )
007f0c e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 98 ) )
007f0d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 98 ) )
007f0e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 98 ) )
                 	__POINTD1FN _0x240000,98
007f0f 940e d35f 	CALL SUBOPT_0x28B
007f11 940e d359 	CALL SUBOPT_0x28A
                +
007f13 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007f14 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007f15 81e0      	LD   R30,Z
007f16 940e d13b 	CALL SUBOPT_0x239
                 ; 0012 0034                                                 return;
007f18 c3ed      	RJMP _0x20E0048
                 ; 0012 0035             }
                 _0x240009:
                 ; 0012 0036         }
                 ; 0012 0037         else{
007f19 c008      	RJMP _0x240011
                 _0x240006:
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                +
007f1a e6ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 158 ) )
007f1b e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 158 ) )
007f1c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 158 ) )
007f1d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 158 ) )
                 	__POINTD1FN _0x240000,158
007f1e 940e d35f 	CALL SUBOPT_0x28B
007f20 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 0039         }
                 _0x240011:
                 ; 0012 003A     }
                +
007f22 5f0f     +SUBI R16 , LOW ( - 1 )
007f23 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007f24 cf85      	RJMP _0x240004
                 _0x240005:
                 ; 0012 003B 
                 ; 0012 003C     return;
007f25 c3e0      	RJMP _0x20E0048
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 _OLED_showPowerStatus:
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
007f26 940e e405 	CALL __PUTPARD2
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
007f28 81ec      	LDD  R30,Y+4
007f29 30e0      	CPI  R30,0
007f2a f429      	BRNE _0x240012
                 ; 0012 0044         printOLED("CG1");
                +
007f2b e7e3     +LDI R30 , LOW ( 2 * _0x240000 + ( 167 ) )
007f2c e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 167 ) )
007f2d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 167 ) )
007f2e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 167 ) )
                 	__POINTD1FN _0x240000,167
007f2f c033      	RJMP _0x240056
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 _0x240012:
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
007f30 940e d36b 	CALL SUBOPT_0x28E
007f32 f428      	BRSH _0x240014
                 ; 0012 0049             printOLED("BL0");
                +
007f33 e7e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 171 ) )
007f34 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 171 ) )
007f35 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 171 ) )
007f36 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 171 ) )
                 	__POINTD1FN _0x240000,171
007f37 c02b      	RJMP _0x240056
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 _0x240014:
007f38 940e d36b 	CALL SUBOPT_0x28E
007f3a f018      	BRLO _0x240017
007f3b 940e d374 	CALL SUBOPT_0x28F
007f3d f008      	BRLO _0x240018
                 _0x240017:
007f3e c005      	RJMP _0x240016
                 _0x240018:
                 ; 0012 004C             printOLED("BL1");
                +
007f3f e7eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 175 ) )
007f40 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 175 ) )
007f41 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 175 ) )
007f42 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 175 ) )
                 	__POINTD1FN _0x240000,175
007f43 c01f      	RJMP _0x240056
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 _0x240016:
007f44 940e d374 	CALL SUBOPT_0x28F
007f46 f018      	BRLO _0x24001B
007f47 940e d37d 	CALL SUBOPT_0x290
007f49 f008      	BRLO _0x24001C
                 _0x24001B:
007f4a c005      	RJMP _0x24001A
                 _0x24001C:
                 ; 0012 004F             printOLED("BL2");
                +
007f4b e7ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 179 ) )
007f4c e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 179 ) )
007f4d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 179 ) )
007f4e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 179 ) )
                 	__POINTD1FN _0x240000,179
007f4f c013      	RJMP _0x240056
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 _0x24001A:
007f50 940e d37d 	CALL SUBOPT_0x290
007f52 f018      	BRLO _0x24001F
007f53 940e d386 	CALL SUBOPT_0x291
007f55 f008      	BRLO _0x240020
                 _0x24001F:
007f56 c005      	RJMP _0x24001E
                 _0x240020:
                 ; 0012 0052             printOLED("BL3");
                +
007f57 e8e3     +LDI R30 , LOW ( 2 * _0x240000 + ( 183 ) )
007f58 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 183 ) )
007f59 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 183 ) )
007f5a e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 183 ) )
                 	__POINTD1FN _0x240000,183
007f5b c007      	RJMP _0x240056
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 _0x24001E:
007f5c 940e d386 	CALL SUBOPT_0x291
007f5e f040      	BRLO _0x240022
                 ; 0012 0055             printOLED("BL4");
                +
007f5f e8e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 187 ) )
007f60 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 187 ) )
007f61 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 187 ) )
007f62 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 187 ) )
                 	__POINTD1FN _0x240000,187
                 _0x240056:
007f63 940e e400 	CALL __PUTPARD1
007f65 940e d38f 	CALL SUBOPT_0x292
                 ; 0012 0056         }
                 ; 0012 0057     }
                 _0x240022:
                 ; 0012 0058 }
                 _0x20E0054:
007f67 9625      	ADIW R28,5
007f68 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 _OLED_showInputStatus:
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
007f69 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007f6a 81aa      	LDD  R26,Y+2
007f6b 23aa      	TST  R26
007f6c f022      	BRMI _0x240024
007f6d 81a9      	LDD  R26,Y+1
007f6e 81ba      	LDD  R27,Y+1+1
007f6f 9718      	SBIW R26,8
007f70 f03c      	BRLT _0x240023
                 _0x240024:
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                +
007f71 e8eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 191 ) )
007f72 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 191 ) )
007f73 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 191 ) )
007f74 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 191 ) )
                 	__POINTD1FN _0x240000,191
007f75 940e c274 	CALL SUBOPT_0x3
                 ; 0012 005E         return;
007f77 c045      	RJMP _0x20E0052
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 _0x240023:
007f78 81a9      	LDD  R26,Y+1
007f79 81ba      	LDD  R27,Y+1+1
007f7a e0e3      	LDI  R30,LOW(3)
007f7b 940e e31e 	CALL __MULB1W2U
007f7d 5be1      	SUBI R30,LOW(-_din_config)
007f7e 4efd      	SBCI R31,HIGH(-_din_config)
007f7f 81a0      	LD   R26,Z
007f80 30a1      	CPI  R26,LOW(0x1)
007f81 f5d9      	BRNE _0x20E0052
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
007f82 81a8      	LD   R26,Y
007f83 30a0      	CPI  R26,LOW(0x0)
007f84 f011      	BREQ _0x240028
007f85 30a1      	CPI  R26,LOW(0x1)
007f86 f409      	BRNE _0x240029
                 _0x240028:
007f87 c001      	RJMP _0x240027
                 _0x240029:
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
007f88 c034      	RJMP _0x20E0052
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 _0x240027:
                +
007f89 ece2     +LDI R30 , LOW ( 2 * _0x240000 + ( 246 ) )
007f8a e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 246 ) )
007f8b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 246 ) )
007f8c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 246 ) )
                 	__POINTD1FN _0x240000,246
007f8d c024      	RJMP _0x20E0053
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 _OLED_showOutputStatus:
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
007f8e 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007f8f 81aa      	LDD  R26,Y+2
007f90 23aa      	TST  R26
007f91 f022      	BRMI _0x24002B
007f92 81a9      	LDD  R26,Y+1
007f93 81ba      	LDD  R27,Y+1+1
007f94 9718      	SBIW R26,8
007f95 f03c      	BRLT _0x24002A
                 _0x24002B:
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                +
007f96 eceb     +LDI R30 , LOW ( 2 * _0x240000 + ( 255 ) )
007f97 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 255 ) )
007f98 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 255 ) )
007f99 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 255 ) )
                 	__POINTD1FN _0x240000,255
007f9a 940e c274 	CALL SUBOPT_0x3
                 ; 0012 0071         return;
007f9c c020      	RJMP _0x20E0052
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 _0x24002A:
007f9d 81a9      	LDD  R26,Y+1
007f9e 81ba      	LDD  R27,Y+1+1
007f9f e2e6      	LDI  R30,LOW(38)
007fa0 940e e31e 	CALL __MULB1W2U
007fa2 58e1      	SUBI R30,LOW(-_dout_config)
007fa3 4efd      	SBCI R31,HIGH(-_dout_config)
007fa4 81a0      	LD   R26,Z
007fa5 30a1      	CPI  R26,LOW(0x1)
007fa6 f4b1      	BRNE _0x20E0052
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
007fa7 81a8      	LD   R26,Y
007fa8 30a0      	CPI  R26,LOW(0x0)
007fa9 f011      	BREQ _0x24002F
007faa 30a1      	CPI  R26,LOW(0x1)
007fab f409      	BRNE _0x240030
                 _0x24002F:
007fac c001      	RJMP _0x24002E
                 _0x240030:
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
007fad c00f      	RJMP _0x20E0052
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 _0x24002E:
                +
007fae e0e3     +LDI R30 , LOW ( 2 * _0x240000 + ( 311 ) )
007faf e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 311 ) )
007fb0 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 311 ) )
007fb1 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 311 ) )
                 	__POINTD1FN _0x240000,311
                 _0x20E0053:
007fb2 940e e400 	CALL __PUTPARD1
007fb4 81ed      	LDD  R30,Y+5
007fb5 81fe      	LDD  R31,Y+5+1
007fb6 940e d216 	CALL SUBOPT_0x258
007fb8 85e8      	LDD  R30,Y+8
007fb9 940e c525 	CALL SUBOPT_0x65
007fbb 940e d354 	CALL SUBOPT_0x289
                 ; 0012 007E }
                 _0x20E0052:
007fbd 9623      	ADIW R28,3
007fbe 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 _OLED_showServerCommStatus:
                 ; 0012 0082     printOLED("SC%1d",state);
007fbf 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007fc0 e0ec     +LDI R30 , LOW ( 2 * _0x240000 + ( 320 ) )
007fc1 e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 320 ) )
007fc2 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 320 ) )
007fc3 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 320 ) )
                 	__POINTD1FN _0x240000,320
007fc4 940e d394 	CALL SUBOPT_0x293
007fc6 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 0083 }
007fc8 c12e      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 _OLED_showLanStatus:
                 ; 0012 0087     printOLED("LC%1d",state);
007fc9 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007fca e1e2     +LDI R30 , LOW ( 2 * _0x240000 + ( 326 ) )
007fcb e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 326 ) )
007fcc e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 326 ) )
007fcd e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 326 ) )
                 	__POINTD1FN _0x240000,326
007fce 940e d394 	CALL SUBOPT_0x293
007fd0 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 0088 }
007fd2 c124      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 _OLED_showBuzzerStatus:
                 ; 0012 008C     printOLED("BZ%1d",state);
007fd3 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007fd4 e1e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 332 ) )
007fd5 e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 332 ) )
007fd6 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 332 ) )
007fd7 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 332 ) )
                 	__POINTD1FN _0x240000,332
007fd8 940e d394 	CALL SUBOPT_0x293
007fda 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 008D }
007fdc c11a      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 _OLED_showMemoryStatus:
                 ; 0012 0091     printOLED("MS%1d",state);
007fdd 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007fde e1ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 338 ) )
007fdf e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 338 ) )
007fe0 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 338 ) )
007fe1 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 338 ) )
                 	__POINTD1FN _0x240000,338
007fe2 940e d394 	CALL SUBOPT_0x293
007fe4 940e d366 	CALL SUBOPT_0x28D
                 ; 0012 0092 }
007fe6 c110      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 _OLED_showAlarmStatus:
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
007fe7 972a      	SBIW R28,10
007fe8 940e d2f8 	CALL SUBOPT_0x27A
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                +
007fea e000     +LDI R16 , LOW ( 0 )
007feb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x240032:
                +
007fec 3005     +CPI R16 , LOW ( 5 )
007fed e0e0     +LDI R30 , HIGH ( 5 )
007fee 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007fef f014      	BRLT PC+3
007ff0 940c 8031 	JMP _0x240033
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
007ff2 940e d2ce 	CALL SUBOPT_0x275
007ff4 f189      	BREQ _0x240034
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
007ff5 01f8      	MOVW R30,R16
007ff6 01de      	MOVW R26,R28
007ff7 9619      	ADIW R26,9
007ff8 0fea      	ADD  R30,R26
007ff9 1ffb      	ADC  R31,R27
007ffa 010f      	MOVW R0,R30
007ffb e8ac      	LDI  R26,LOW(_sensorAlarm)
007ffc e1b4      	LDI  R27,HIGH(_sensorAlarm)
007ffd 940e d2fd 	CALL SUBOPT_0x27B
007fff f011      	BREQ _0x240035
008000 e0e1      	LDI  R30,LOW(1)
008001 c001      	RJMP _0x240036
                 _0x240035:
008002 e0e0      	LDI  R30,LOW(0)
                 _0x240036:
008003 01d0      	MOVW R26,R0
008004 93ec      	ST   X,R30
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                +
008005 e1ad     +LDI R26 , 29
008006 9fa0     +MUL R26 , R16
008007 01f0     +MOVW R30 , R0
008008 9fa1     +MUL R26 , R17
008009 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
                +
00800a 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00800b 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00800c 81e0      	LD   R30,Z
00800d 30e0      	CPI  R30,0
00800e f081      	BREQ _0x240038
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
00800f 01f8      	MOVW R30,R16
008010 01de      	MOVW R26,R28
008011 9614      	ADIW R26,4
008012 0fea      	ADD  R30,R26
008013 1ffb      	ADC  R31,R27
008014 010f      	MOVW R0,R30
008015 e9a1      	LDI  R26,LOW(_dataAlarm)
008016 e1b4      	LDI  R27,HIGH(_dataAlarm)
008017 940e d2fd 	CALL SUBOPT_0x27B
008019 f011      	BREQ _0x240039
00801a e0e1      	LDI  R30,LOW(1)
00801b c001      	RJMP _0x24003A
                 _0x240039:
00801c e0e0      	LDI  R30,LOW(0)
                 _0x24003A:
00801d 01d0      	MOVW R26,R0
00801e c005      	RJMP _0x240057
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 _0x240038:
                 ; 0012 00A3                 flagData[i]     = 0;
00801f 01de      	MOVW R26,R28
008020 9614      	ADIW R26,4
008021 0fa0      	ADD  R26,R16
008022 1fb1      	ADC  R27,R17
008023 e0e0      	LDI  R30,LOW(0)
                 _0x240057:
008024 93ec      	ST   X,R30
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
008025 c008      	RJMP _0x24003D
                 _0x240034:
                 ; 0012 00A7             flagSens[i]         = 0;
008026 01de      	MOVW R26,R28
008027 9619      	ADIW R26,9
008028 940e cab2 	CALL SUBOPT_0x14E
                 ; 0012 00A8             flagData[i]         = 0;
00802a 01de      	MOVW R26,R28
00802b 9614      	ADIW R26,4
00802c 940e cab2 	CALL SUBOPT_0x14E
                 ; 0012 00A9         }
                 _0x24003D:
                 ; 0012 00AA 
                 ; 0012 00AB     }
                +
00802e 5f0f     +SUBI R16 , LOW ( - 1 )
00802f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008030 cfbb      	RJMP _0x240032
                 _0x240033:
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
008031 940e d30e 	CALL SUBOPT_0x27E
008033 f44c      	BRGE _0x24003E
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
008034 91e0 14a6 	LDS  R30,_batteryAlarm
008036 30e0      	CPI  R30,0
008037 f011      	BREQ _0x24003F
008038 e0e1      	LDI  R30,LOW(1)
008039 c001      	RJMP _0x240040
                 _0x24003F:
00803a e0e0      	LDI  R30,LOW(0)
                 _0x240040:
00803b 2f3e      	MOV  R19,R30
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
00803c c001      	RJMP _0x240042
                 _0x24003E:
                 ; 0012 00B1         flagBatt                = 0;
00803d e030      	LDI  R19,LOW(0)
                 ; 0012 00B2     }
                 _0x240042:
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
00803e 940e d320 	CALL SUBOPT_0x280
008040 f448      	BRSH _0x240043
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
008041 91e0 14a7 	LDS  R30,_memoryAlarm
008043 30e0      	CPI  R30,0
008044 f011      	BREQ _0x240044
008045 e0e1      	LDI  R30,LOW(1)
008046 c001      	RJMP _0x240045
                 _0x240044:
008047 e0e0      	LDI  R30,LOW(0)
                 _0x240045:
008048 2f2e      	MOV  R18,R30
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
008049 c001      	RJMP _0x240047
                 _0x240043:
                 ; 0012 00B8         flagMemo                = 0;
00804a e020      	LDI  R18,LOW(0)
                 ; 0012 00B9     }
                 _0x240047:
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                +
00804b e2e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 344 ) )
00804c e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 344 ) )
00804d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 344 ) )
00804e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 344 ) )
                 	__POINTD1FN _0x240000,344
00804f 940e e400 	CALL __PUTPARD1
008051 85ed      	LDD  R30,Y+13
008052 940e c525 	CALL SUBOPT_0x65
008054 89ea      	LDD  R30,Y+18
008055 940e c525 	CALL SUBOPT_0x65
008057 89ef      	LDD  R30,Y+23
008058 940e c525 	CALL SUBOPT_0x65
00805a 8dec      	LDD  R30,Y+28
00805b 940e c525 	CALL SUBOPT_0x65
00805d a1e9      	LDD  R30,Y+33
00805e 940e c525 	CALL SUBOPT_0x65
008060 8dec      	LDD  R30,Y+28
008061 940e c525 	CALL SUBOPT_0x65
008063 a1e9      	LDD  R30,Y+33
008064 940e c525 	CALL SUBOPT_0x65
008066 a1ee      	LDD  R30,Y+38
008067 940e c525 	CALL SUBOPT_0x65
008069 a5eb      	LDD  R30,Y+43
00806a 940e c525 	CALL SUBOPT_0x65
00806c a9e8      	LDD  R30,Y+48
00806d 940e c525 	CALL SUBOPT_0x65
00806f 2fe3      	MOV  R30,R19
008070 940e c525 	CALL SUBOPT_0x65
008072 2fe2      	MOV  R30,R18
008073 940e c525 	CALL SUBOPT_0x65
008075 e380      	LDI  R24,48
008076 d002      	RCALL _printOLED
008077 96e4      	ADIW R28,52
                 ; 0012 00BF 
                 ; 0012 00C0     return;
008078 c129      	RJMP _0x20E004F
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 _printOLED:
008079 92ff      	PUSH R15
00807a 2ef8      	MOV  R15,R24
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
00807b 97ef      	SBIW R28,63
00807c 9721      	SBIW R28,1
00807d 931a      	ST   -Y,R17
00807e 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
00807f 01de      	MOVW R26,R28
008080 96de      	ADIW R26,62
008081 940e e254 	CALL __ADDW2R15
008083 018d      	MOVW R16,R26
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
008084 940e ceb3 	CALL SUBOPT_0x1F3
008086 01de      	MOVW R26,R28
008087 5bac      	SUBI R26,LOW(-(68))
008088 4fbf      	SBCI R27,HIGH(-(68))
008089 940e d399 	CALL SUBOPT_0x294
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
00808b 98f0      	CBI  0x1E,0
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
00808c e0a1      	LDI  R26,LOW(1)
00808d 940e 4149 	CALL _putchar2
                 ; 0012 00DB     send_uart(2,strcmd);
00808f e0e2      	LDI  R30,LOW(2)
008090 93ea      	ST   -Y,R30
008091 01de      	MOVW R26,R28
008092 9613      	ADIW R26,3
008093 940e 4191 	CALL _send_uart
                 ; 0012 00DC     putchar2(0x04);
008095 e0a4      	LDI  R26,LOW(4)
008096 940e 4149 	CALL _putchar2
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
008098 01fe      	MOVW R30,R28
008099 96fe      	ADIW R30,62
00809a 940e d302 	CALL SUBOPT_0x27C
00809c 940e 4217 	CALL _TIMER_setTimer
                 ; 0012 00DF 
                 ; 0012 00E0     /*bongkot OLED assume flag_oled_ack = 1(OLED has connect and ack);*/
                 ; 0012 00E1     //flag_oled_ack = 1;
                 ; 0012 00E2 
                 ; 0012 00E3     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 _0x24004A:
00809e 99f0      	SBIC 0x1E,0
00809f c00c      	RJMP _0x24004D
                +
0080a0 01de     +MOVW R26 , R28
0080a1 5ca2     +SUBI R26 , LOW ( - 62 )
0080a2 4fbf     +SBCI R27 , HIGH ( - 62 )
0080a3 900d     +LD R0 , X +
0080a4 901d     +LD R1 , X +
0080a5 918d     +LD R24 , X +
0080a6 919c     +LD R25 , X
0080a7 01d0     +MOVW R26 , R0
                 	__GETD2SX 62
0080a8 940e 4201 	CALL _TIMER_checkTimerExceed
0080aa 9730      	SBIW R30,0
0080ab f009      	BREQ _0x24004E
                 _0x24004D:
0080ac c001      	RJMP _0x24004C
                 _0x24004E:
0080ad cff0      	RJMP _0x24004A
                 _0x24004C:
                 ; 0012 00E4 
                 ; 0012 00E5     if(!flag_oled_ack){
0080ae 99f0      	SBIC 0x1E,0
0080af c006      	RJMP _0x24004F
                 ; 0012 00E6         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                +
0080b0 e4eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 383 ) )
0080b1 e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 383 ) )
0080b2 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 383 ) )
0080b3 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 383 ) )
                 	__POINTD1FN _0x240000,383
0080b4 940e c274 	CALL SUBOPT_0x3
                 ; 0012 00E7     }
                 ; 0012 00E8 
                 ; 0012 00E9 }
                 _0x24004F:
0080b6 8119      	LDD  R17,Y+1
0080b7 8108      	LDD  R16,Y+0
0080b8 96ef      	ADIW R28,63
0080b9 9623      	ADIW R28,3
0080ba 90ff      	POP  R15
0080bb 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00F1 {
                 _OLED_reset:
                 ; 0012 00F2     OLED_RESET = 0;            // Active SOLED Reset
0080bc 98a5      	CBI  0x14,5
                 ; 0012 00F3     delay_ms(1);
0080bd 940e c59e 	CALL SUBOPT_0x75
0080bf 940e e0a1 	CALL _delay_ms
                 ; 0012 00F4     OLED_RESET = 1;            // Dective SOLED Reset for start use.
0080c1 9aa5      	SBI  0x14,5
                 ; 0012 00F5     delay_ms(1);
0080c2 940e c59e 	CALL SUBOPT_0x75
0080c4 940e e0a1 	CALL _delay_ms
                 ; 0012 00F6 
                 ; 0012 00F7 }
0080c6 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00FA {
                 _init_oled:
                 ; 0012 00FB     printDebug("Initializing OLED.. ");
                +
0080c7 e6e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
0080c8 e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
0080c9 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
0080ca e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
0080cb 940e c274 	CALL SUBOPT_0x3
                 ; 0012 00FC     flag_oled_ack = 0;
0080cd 98f0      	CBI  0x1E,0
                 ; 0012 00FD     OLED_reset();
0080ce dfed      	RCALL _OLED_reset
                 ; 0012 00FE     printDebug("OK\r\n");
                +
0080cf e7e9     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
0080d0 e4fe     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
0080d1 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
0080d2 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
0080d3 940e e400 	CALL __PUTPARD1
0080d5 e080      	LDI  R24,0
0080d6 940e 9ef8 	CALL _printDebug
0080d8 c1db      	RJMP _0x20E004A
                 ; 0012 00FF }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
0080d9 93aa      	ST   -Y,R26
                 ;	res -> Y+0
0080da 81a8      	LD   R26,Y
0080db 30a1      	CPI  R26,LOW(0x1)
0080dc f010      	BRLO _0x260005
0080dd 31a0      	CPI  R26,LOW(0x10)
0080de f008      	BRLO _0x260006
                 _0x260005:
0080df c017      	RJMP _0x260004
                 _0x260006:
                +
0080e0 e5e1     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
0080e1 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
0080e2 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
0080e3 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
0080e4 940e e400 	CALL __PUTPARD1
0080e6 81ec      	LDD  R30,Y+4
0080e7 e6aa      	LDI  R26,LOW(_error_msg*2)
0080e8 e0b1      	LDI  R27,HIGH(_error_msg*2)
0080e9 e080      	LDI  R24,BYTE3(_error_msg*2)
0080ea 27ff      	CLR  R31
0080eb 2766      	CLR  R22
0080ec 2777      	CLR  R23
0080ed 940e e2c3 	CALL __LSLD1
0080ef 940e e2c3 	CALL __LSLD1
0080f1 940e e258 	CALL __ADDD12
0080f3 940e e3e5 	CALL __GETD1PF
0080f5 940e cc53 	CALL SUBOPT_0x18B
                 _0x260004:
                 _0x20E0051:
0080f7 9621      	ADIW R28,1
0080f8 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
0080f9 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
0080fb 940e d28f 	CALL SUBOPT_0x26B
0080fd f449      	BRNE _0x260007
                +
0080fe e5ed     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
0080ff e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
008100 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
008101 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
008102 940e c274 	CALL SUBOPT_0x3
008104 efef      	LDI  R30,LOW(65535)
008105 efff      	LDI  R31,HIGH(65535)
008106 c09b      	RJMP _0x20E004F
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
008107 940e cd12 	CALL SUBOPT_0x1AF
008109 940e d3a2 	CALL SUBOPT_0x295
                 ; 0013 002F     if(res != FR_OK){
00810b f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
00810c e8e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
00810d e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
00810e e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
00810f e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
008110 940e c62d 	CALL SUBOPT_0x8D
008112 940e cc53 	CALL SUBOPT_0x18B
                 ; 0013 0031         error(res);
008114 940e d3a9 	CALL SUBOPT_0x296
                 ; 0013 0032         return -1;
008116 c08b      	RJMP _0x20E004F
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
008117 940e cd12 	CALL SUBOPT_0x1AF
008119 940e cc7c 	CALL SUBOPT_0x194
00811b 940e cc7c 	CALL SUBOPT_0x194
00811d b7ad      	IN   R26,SPL
00811e b7be      	IN   R27,SPH
00811f 9711      	SBIW R26,1
008120 933f      	PUSH R19
008121 932f      	PUSH R18
008122 940e b99a 	CALL _f_write
008124 912f      	POP  R18
008125 913f      	POP  R19
008126 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
008127 3010      	CPI  R17,0
008128 f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
008129 eae6     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
00812a e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
00812b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
00812c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
00812d 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0038         print_payload(data,len);
00812f 940e cb1f 	CALL SUBOPT_0x15C
008131 81ae      	LDD  R26,Y+6
008132 81bf      	LDD  R27,Y+6+1
008133 940e 9f7c 	CALL _print_payload
                 ; 0013 0039         error(res);
008135 2fa1      	MOV  R26,R17
008136 dfa2      	RCALL _error
                 ; 0013 003A         return -2;
008137 efee      	LDI  R30,LOW(65534)
008138 efff      	LDI  R31,HIGH(65534)
008139 c068      	RJMP _0x20E004F
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
00813a 81ec      	LDD  R30,Y+4
00813b 81fd      	LDD  R31,Y+4+1
00813c 17e2      	CP   R30,R18
00813d 07f3      	CPC  R31,R19
00813e f081      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
00813f ece8     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
008140 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
008141 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
008142 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
008143 940e e400 	CALL __PUTPARD1
008145 01f9      	MOVW R30,R18
008146 940e c3d6 	CALL SUBOPT_0x34
008148 85ec      	LDD  R30,Y+12
008149 85fd      	LDD  R31,Y+12+1
00814a 940e ca5c 	CALL SUBOPT_0x13F
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
00814c efed      	LDI  R30,LOW(65533)
00814d efff      	LDI  R31,HIGH(65533)
00814e c053      	RJMP _0x20E004F
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
00814f c050      	RJMP _0x20E0050
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
008150 940e c5d9 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
008152 940e d28f 	CALL SUBOPT_0x26B
008154 f449      	BRNE _0x26000B
                +
008155 efe5     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
008156 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
008157 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
008158 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
008159 940e c274 	CALL SUBOPT_0x3
00815b efef      	LDI  R30,LOW(65535)
00815c efff      	LDI  R31,HIGH(65535)
00815d c044      	RJMP _0x20E004F
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
00815e 940e cd12 	CALL SUBOPT_0x1AF
008160 940e d3a2 	CALL SUBOPT_0x295
                 ; 0013 004D     if(res != FR_OK){
008162 f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
008163 e1e7     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
008164 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
008165 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
008166 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
008167 940e c62d 	CALL SUBOPT_0x8D
008169 940e cc53 	CALL SUBOPT_0x18B
                 ; 0013 004F         error(res);
00816b 940e d3a9 	CALL SUBOPT_0x296
                 ; 0013 0050         return -1;
00816d c034      	RJMP _0x20E004F
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
00816e 940e cd12 	CALL SUBOPT_0x1AF
008170 940e cc7c 	CALL SUBOPT_0x194
008172 940e cc7c 	CALL SUBOPT_0x194
008174 b7ad      	IN   R26,SPL
008175 b7be      	IN   R27,SPH
008176 9711      	SBIW R26,1
008177 933f      	PUSH R19
008178 932f      	PUSH R18
008179 940e b837 	CALL _f_read
00817b 912f      	POP  R18
00817c 913f      	POP  R19
00817d 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
00817e 3010      	CPI  R17,0
00817f f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
008180 e3ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
008181 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
008182 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
008183 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
008184 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0056         error(res);
008186 2fa1      	MOV  R26,R17
008187 df51      	RCALL _error
                 ; 0013 0057         return -2;
008188 efee      	LDI  R30,LOW(65534)
008189 efff      	LDI  R31,HIGH(65534)
00818a c017      	RJMP _0x20E004F
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
00818b 81ec      	LDD  R30,Y+4
00818c 81fd      	LDD  R31,Y+4+1
00818d 17e2      	CP   R30,R18
00818e 07f3      	CPC  R31,R19
00818f f081      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
008190 e5ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
008191 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
008192 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
008193 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
008194 940e e400 	CALL __PUTPARD1
008196 01f9      	MOVW R30,R18
008197 940e c3d6 	CALL SUBOPT_0x34
008199 85ec      	LDD  R30,Y+12
00819a 85fd      	LDD  R31,Y+12+1
00819b 940e ca5c 	CALL SUBOPT_0x13F
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
00819d efed      	LDI  R30,LOW(65533)
00819e efff      	LDI  R31,HIGH(65533)
00819f c002      	RJMP _0x20E004F
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0050:
0081a0 e0e0      	LDI  R30,LOW(0)
0081a1 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004F:
0081a2 940e e47e 	CALL __LOADLOCR4
0081a4 962e      	ADIW R28,14
0081a5 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
0081a6 940e c89b 	CALL SUBOPT_0xEE
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
0081a8 e4e7      	LDI  R30,LOW(_root_path)
0081a9 e1f9      	LDI  R31,HIGH(_root_path)
0081aa 940e d3af 	CALL SUBOPT_0x297
0081ac e4a5      	LDI  R26,LOW(_pfat)
0081ad e1b9      	LDI  R27,HIGH(_pfat)
0081ae 940e bd62 	CALL _f_getfree
0081b0 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
0081b1 3010      	CPI  R17,0
0081b2 f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
0081b3 e8e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
0081b4 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
0081b5 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
0081b6 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
0081b7 940e d3b6 	CALL SUBOPT_0x298
0081b9 940e c2ea 	CALL SUBOPT_0x12
                 ; 0013 006F        error(res);
0081bb 2fa1      	MOV  R26,R17
0081bc 940e d3bc 	CALL SUBOPT_0x299
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
0081be c012      	RJMP _0x20E004E
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
0081bf 91e0 1945 	LDS  R30,_pfat
0081c1 91f0 1946 	LDS  R31,_pfat+1
0081c3 940e d3ca 	CALL SUBOPT_0x29A
0081c5 940e d3cd 	CALL SUBOPT_0x29B
0081c7 940e d3d2 	CALL SUBOPT_0x29C
0081c9 940e e2be 	CALL __LSRD1
0081cb 81ad      	LDD  R26,Y+5
0081cc 81be      	LDD  R27,Y+5+1
0081cd 940e e3db 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
0081cf e0e0      	LDI  R30,LOW(0)
0081d0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
0081d1 8118      	LDD  R17,Y+0
0081d2 9627      	ADIW R28,7
0081d3 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
0081d4 931a      	ST   -Y,R17
                 ;	res -> R17
0081d5 e0e0      	LDI  R30,LOW(0)
0081d6 93ea      	ST   -Y,R30
0081d7 e1a3      	LDI  R26,LOW(_fat)
0081d8 e1b7      	LDI  R27,HIGH(_fat)
0081d9 940e b6df 	CALL _f_mount
0081db 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
0081dc 3010      	CPI  R17,0
0081dd f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
0081de ebe6     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
0081df e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
0081e0 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
0081e1 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
0081e2 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0082         error(res);
0081e4 940e d3a9 	CALL SUBOPT_0x296
                 ; 0013 0083         return -1;
0081e6 c008      	RJMP _0x20E004D
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
0081e7 ede7     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
0081e8 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
0081e9 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
0081ea e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
0081eb 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0087     return 0;
0081ed e0e0      	LDI  R30,LOW(0)
0081ee e0f0      	LDI  R31,HIGH(0)
                 _0x20E004D:
0081ef 9119      	LD   R17,Y+
0081f0 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
0081f1 93aa      	ST   -Y,R26
0081f2 97ef      	SBIW R28,63
0081f3 9763      	SBIW R28,19
0081f4 50d2      	SUBI R29,2
0081f5 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
0081f6 940e d28f 	CALL SUBOPT_0x26B
0081f8 f449      	BRNE _0x260014
                +
0081f9 e7ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
0081fa e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
0081fb e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
0081fc e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
0081fd 940e c274 	CALL SUBOPT_0x3
0081ff efef      	LDI  R30,LOW(65535)
008200 efff      	LDI  R31,HIGH(65535)
008201 c048      	RJMP _0x20E004C
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
008202 01fe      	MOVW R30,R28
008203 9631      	ADIW R30,1
008204 93fa      	ST   -Y,R31
008205 93ea      	ST   -Y,R30
008206 940e d3d7 	CALL SUBOPT_0x29D
                +
008208 01fe     +MOVW R30 , R28
008209 5ae2     +SUBI R30 , LOW ( - 606 )
00820a 4ffd     +SBCI R31 , HIGH ( - 606 )
00820b 9001     +LD R0 , Z +
00820c 81f0     +LD R31 , Z
00820d 2de0     +MOV R30 , R0
                 	__GETW1SX 606
00820e 940e c3d6 	CALL SUBOPT_0x34
008210 e088      	LDI  R24,8
008211 940e c186 	CALL _sprintf
008213 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
008214 01de     +MOVW R26 , R28
008215 5aad     +SUBI R26 , LOW ( - 595 )
008216 4fbd     +SBCI R27 , HIGH ( - 595 )
008217 91ac     +LD R26 , X
                 	__GETB2SX 595
008218 30a1      	CPI  R26,LOW(0x1)
008219 f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
00821a 01fe      	MOVW R30,R28
00821b 96f3      	ADIW R30,51
00821c 940e d3af 	CALL SUBOPT_0x297
00821e e0aa      	LDI  R26,LOW(10)
00821f c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
008220 01fe      	MOVW R30,R28
008221 96f3      	ADIW R30,51
008222 940e d3af 	CALL SUBOPT_0x297
008224 e0a6      	LDI  R26,LOW(6)
                 _0x260021:
008225 940e b70a 	CALL _f_open
008227 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
008228 3018      	CPI  R17,8
008229 f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
00822a e0e0      	LDI  R30,LOW(0)
00822b e0f0      	LDI  R31,HIGH(0)
00822c c01d      	RJMP _0x20E004C
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
00822d 3010      	CPI  R17,0
00822e f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
00822f eae5     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
008230 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
008231 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
008232 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
008233 940e c274 	CALL SUBOPT_0x3
                 ; 0013 00DA         error(res);
008235 940e d3a9 	CALL SUBOPT_0x296
                 ; 0013 00DB         return -1;
008237 c012      	RJMP _0x20E004C
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
008238 01de      	MOVW R26,R28
008239 96d3      	ADIW R26,51
00823a 940e bbb7 	CALL _f_close
00823c 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
00823d 3010      	CPI  R17,0
00823e f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
00823f ece7     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
008240 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
008241 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
008242 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
008243 940e c274 	CALL SUBOPT_0x3
                 ; 0013 00E3         error(res);
008245 940e d3a9 	CALL SUBOPT_0x296
                 ; 0013 00E4         return -1;
008247 c002      	RJMP _0x20E004C
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
008248 e0e1      	LDI  R30,LOW(1)
008249 e0f0      	LDI  R31,HIGH(1)
                 _0x20E004C:
00824a 8118      	LDD  R17,Y+0
00824b 96ef      	ADIW R28,63
00824c 9667      	ADIW R28,23
00824d 5fde      	SUBI R29,-2
00824e 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
00824f 93ba      	ST   -Y,R27
008250 93aa      	ST   -Y,R26
008251 97e2      	SBIW R28,50
008252 931a      	ST   -Y,R17
008253 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
008254 940e d28f 	CALL SUBOPT_0x26B
008256 f449      	BRNE _0x26001B
                +
008257 eeea     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
008258 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
008259 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
00825a e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
00825b 940e c274 	CALL SUBOPT_0x3
00825d efef      	LDI  R30,LOW(65535)
00825e efff      	LDI  R31,HIGH(65535)
00825f c02a      	RJMP _0x20E004B
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
008260 940e ceb3 	CALL SUBOPT_0x1F3
008262 940e d3d7 	CALL SUBOPT_0x29D
008264 adee      	LDD  R30,Y+62
008265 adff      	LDD  R31,Y+62+1
008266 940e c3d6 	CALL SUBOPT_0x34
008268 e088      	LDI  R24,8
008269 940e c186 	CALL _sprintf
00826b 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
00826c a9ee      	LDD  R30,Y+54
00826d a9ff      	LDD  R31,Y+54+1
00826e 940e d3dc 	CALL SUBOPT_0x29E
008270 e0a3      	LDI  R26,LOW(3)
008271 940e b70a 	CALL _f_open
008273 2f0e      	MOV  R16,R30
008274 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
008275 2e00      	MOV  R0,R16
008276 2a01      	OR   R0,R17
008277 f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
008278 e0ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
008279 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
00827a e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
00827b e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
00827c 940e e400 	CALL __PUTPARD1
00827e ade8      	LDD  R30,Y+56
00827f adf9      	LDD  R31,Y+56+1
008280 940e c3d6 	CALL SUBOPT_0x34
008282 940e c2ea 	CALL SUBOPT_0x12
                 ; 0013 00F6         error(res);
008284 2fa0      	MOV  R26,R16
008285 940e d3bc 	CALL SUBOPT_0x299
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
008287 c002      	RJMP _0x20E004B
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
008288 e0e0      	LDI  R30,LOW(0)
008289 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004B:
00828a 8119      	LDD  R17,Y+1
00828b 8108      	LDD  R16,Y+0
00828c 96e8      	ADIW R28,56
00828d 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
00828e 940e c5e5 	CALL SUBOPT_0x81
                 ;	*file -> Y+2
                 ;	res -> R16,R17
008290 940e d28f 	CALL SUBOPT_0x26B
008292 f449      	BRNE _0x26001D
                +
008293 e3e1     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
008294 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
008295 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
008296 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
008297 940e c274 	CALL SUBOPT_0x3
008299 efef      	LDI  R30,LOW(65535)
00829a efff      	LDI  R31,HIGH(65535)
00829b c016      	RJMP _0x20E0049
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
00829c 81aa      	LDD  R26,Y+2
00829d 81bb      	LDD  R27,Y+2+1
00829e 940e bbb7 	CALL _f_close
0082a0 2f0e      	MOV  R16,R30
0082a1 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
0082a2 2e00      	MOV  R0,R16
0082a3 2a01      	OR   R0,R17
0082a4 f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
0082a5 e5e4     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
0082a6 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
0082a7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
0082a8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
0082a9 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0107         error(res);
0082ab 2fa0      	MOV  R26,R16
0082ac de2c      	RCALL _error
                 ; 0013 0108         return -1;
0082ad efef      	LDI  R30,LOW(65535)
0082ae efff      	LDI  R31,HIGH(65535)
0082af c002      	RJMP _0x20E0049
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
0082b0 e0e0      	LDI  R30,LOW(0)
0082b1 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0049:
0082b2 8119      	LDD  R17,Y+1
0082b3 8108      	LDD  R16,Y+0
                 _0x20E004A:
0082b4 9624      	ADIW R28,4
0082b5 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
0082b6 931a      	ST   -Y,R17
0082b7 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
0082b8 e7e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
0082b9 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
0082ba e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
0082bb e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
0082bc 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
0082be e1e3      	LDI  R30,LOW(_fat)
0082bf e1f7      	LDI  R31,HIGH(_fat)
0082c0 93e0 1945 	STS  _pfat,R30
0082c2 93f0 1946 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
0082c4 eea8      	LDI  R26,LOW(1000)
0082c5 e0b3      	LDI  R27,HIGH(1000)
0082c6 940e e0a1 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
0082c8 e9ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
0082c9 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
0082ca e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
0082cb e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
0082cc 940e c274 	CALL SUBOPT_0x3
                 ; 0013 011A     err = SD_mount();
0082ce df05      	RCALL _SD_mount
0082cf 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
0082d0 2311      	TST  R17
0082d1 f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
0082d2 ebec     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
0082d3 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
0082d4 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
0082d5 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
0082d6 940e c274 	CALL SUBOPT_0x3
                 ; 0013 011D         return -1;
0082d8 efef      	LDI  R30,LOW(65535)
0082d9 efff      	LDI  R31,HIGH(65535)
0082da c02b      	RJMP _0x20E0048
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
0082db edea     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
0082dc e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
0082dd e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
0082de e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
0082df 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
0082e1 eea8      	LDI  R26,LOW(1000)
0082e2 e0b3      	LDI  R27,HIGH(1000)
0082e3 940e e0a1 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
0082e5 e6ab      	LDI  R26,LOW(_sdFreeSpace)
0082e6 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
0082e7 debe      	RCALL _SD_readMemoryRemain
0082e8 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
0082e9 2311      	TST  R17
0082ea f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
0082eb efe9     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
0082ec e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
0082ed e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
0082ee e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
0082ef 940e c274 	CALL SUBOPT_0x3
                 ; 0013 0128         return -1;
0082f1 efef      	LDI  R30,LOW(65535)
0082f2 efff      	LDI  R31,HIGH(65535)
0082f3 c012      	RJMP _0x20E0048
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
0082f4 e2e2     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
0082f5 e5f3     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
0082f6 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
0082f7 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
0082f8 940e e400 	CALL __PUTPARD1
0082fa 91e0 146b 	LDS  R30,_sdFreeSpace
0082fc 91f0 146c 	LDS  R31,_sdFreeSpace+1
0082fe 9160 146d 	LDS  R22,_sdFreeSpace+2
008300 9170 146e 	LDS  R23,_sdFreeSpace+3
008302 940e cc53 	CALL SUBOPT_0x18B
                 ; 0013 012D 
                 ; 0013 012E     return 0;
008304 e0e0      	LDI  R30,LOW(0)
008305 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0048:
008306 9109      	LD   R16,Y+
008307 9119      	LD   R17,Y+
008308 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
008309 940e e405 	CALL __PUTPARD2
00830b 9728      	SBIW R28,8
00830c 940e e477 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
00830e 940e d3e3 	CALL SUBOPT_0x29F
008310 940e d3e8 	CALL SUBOPT_0x2A0
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
008312 f44a      	BRPL _0x280009
                +
008313 e8ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
008314 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
008315 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
008316 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
008317 940e c274 	CALL SUBOPT_0x3
008319 efef      	LDI  R30,LOW(65535)
00831a efff      	LDI  R31,HIGH(65535)
00831b c078      	RJMP _0x20E0047
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
00831c e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
00831d 940e d3ef 	CALL SUBOPT_0x2A1
00831f 940e d3f5 	CALL SUBOPT_0x2A2
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
008321 940e d3e3 	CALL SUBOPT_0x29F
008323 940e d3f9 	CALL SUBOPT_0x2A3
008325 b7ed      	IN   R30,SPL
008326 b7fe      	IN   R31,SPH
008327 9731      	SBIW R30,1
008328 93fa      	ST   -Y,R31
008329 93ea      	ST   -Y,R30
00832a 934f      	PUSH R20
00832b 933f      	PUSH R19
00832c 940e c59e 	CALL SUBOPT_0x75
00832e ddca      	RCALL _SD_writeData
00832f 913f      	POP  R19
008330 914f      	POP  R20
008331 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
008332 2311      	TST  R17
008333 f44a      	BRPL _0x28000A
                +
008334 ebea     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
008335 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
008336 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
008337 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
008338 940e c274 	CALL SUBOPT_0x3
00833a efef      	LDI  R30,LOW(65535)
00833b efff      	LDI  R31,HIGH(65535)
00833c c057      	RJMP _0x20E0047
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
00833d 940e d3e3 	CALL SUBOPT_0x29F
00833f 940e d3fe 	CALL SUBOPT_0x2A4
008341 940e e400 	CALL __PUTPARD1
008343 01fe      	MOVW R30,R28
008344 9678      	ADIW R30,24
008345 940e d402 	CALL SUBOPT_0x2A5
008347 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
008349 f44a      	BRPL _0x28000B
                +
00834a eee7     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
00834b e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
00834c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
00834d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
00834e 940e c274 	CALL SUBOPT_0x3
008350 efef      	LDI  R30,LOW(65535)
008351 efff      	LDI  R31,HIGH(65535)
008352 c041      	RJMP _0x20E0047
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
008353 940e d3e3 	CALL SUBOPT_0x29F
008355 940e d40b 	CALL SUBOPT_0x2A7
008357 01fe      	MOVW R30,R28
008358 9676      	ADIW R30,22
008359 93fa      	ST   -Y,R31
00835a 93ea      	ST   -Y,R30
00835b 940e c597 	CALL SUBOPT_0x73
00835d 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
00835f f44a      	BRPL _0x28000C
                +
008360 e1e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
008361 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
008362 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
008363 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
008364 940e c274 	CALL SUBOPT_0x3
008366 efef      	LDI  R30,LOW(65535)
008367 efff      	LDI  R31,HIGH(65535)
008368 c02b      	RJMP _0x20E0047
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
008369 940e d3e3 	CALL SUBOPT_0x29F
00836b 940e d414 	CALL SUBOPT_0x2A8
00836d 940e e400 	CALL __PUTPARD1
00836f 940e c54f 	CALL SUBOPT_0x6C
008371 940e c5a4 	CALL SUBOPT_0x77
008373 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
008375 f44a      	BRPL _0x28000D
                +
008376 e4e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
008377 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
008378 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
008379 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
00837a 940e c274 	CALL SUBOPT_0x3
00837c efef      	LDI  R30,LOW(65535)
00837d efff      	LDI  R31,HIGH(65535)
00837e c015      	RJMP _0x20E0047
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
00837f 940e d3e3 	CALL SUBOPT_0x29F
008381 940e d41b 	CALL SUBOPT_0x2A9
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
008383 f45a      	BRPL _0x28000E
                +
008384 e7e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
008385 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
008386 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
008387 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
008388 940e c62d 	CALL SUBOPT_0x8D
00838a 940e cc53 	CALL SUBOPT_0x18B
00838c efef      	LDI  R30,LOW(65535)
00838d efff      	LDI  R31,HIGH(65535)
00838e c005      	RJMP _0x20E0047
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
00838f e0e0      	LDI  R30,LOW(0)
008390 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
008392 85e8      	LDD  R30,Y+8
008393 85f9      	LDD  R31,Y+8+1
                 _0x20E0047:
008394 940e e47e 	CALL __LOADLOCR4
008396 9668      	ADIW R28,24
008397 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
008398 940e c876 	CALL SUBOPT_0xE7
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
00839a 940e d42a 	CALL SUBOPT_0x2AA
00839c 940e d42f 	CALL SUBOPT_0x2AB
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
00839e f44a      	BRPL _0x28000F
                +
00839f eae8     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
0083a0 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
0083a1 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
0083a2 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
0083a3 940e c274 	CALL SUBOPT_0x3
0083a5 efef      	LDI  R30,LOW(65535)
0083a6 efff      	LDI  R31,HIGH(65535)
0083a7 c1b9      	RJMP _0x20E0044
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
0083a8 940e d42a 	CALL SUBOPT_0x2AA
0083aa 940e d436 	CALL SUBOPT_0x2AC
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
0083ac f44a      	BRPL _0x280010
                +
0083ad ede4     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
0083ae e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
0083af e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
0083b0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
0083b1 940e c274 	CALL SUBOPT_0x3
0083b3 efef      	LDI  R30,LOW(65535)
0083b4 efff      	LDI  R31,HIGH(65535)
0083b5 c1ab      	RJMP _0x20E0044
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
0083b6 940e d43d 	CALL SUBOPT_0x2AD
0083b8 940e d443 	CALL SUBOPT_0x2AE
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
0083ba 940e d449 	CALL SUBOPT_0x2AF
0083bc f0b8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
0083bd e3e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
0083be e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
0083bf e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
0083c0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
0083c1 940e c274 	CALL SUBOPT_0x3
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0083c3 940e d450 	CALL SUBOPT_0x2B0
                 ; 0014 0050         if(res < 0)
0083c5 f442      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
0083c6 e5e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
0083c7 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
0083c8 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
0083c9 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
0083ca 940e c4fe 	CALL SUBOPT_0x5F
0083cc 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
0083ce e0e1      	LDI  R30,LOW(1)
0083cf 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
0083d1 e0e0      	LDI  R30,LOW(0)
0083d2 e0f0      	LDI  R31,HIGH(0)
0083d3 c18d      	RJMP _0x20E0044
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
0083d4 940e d3ef 	CALL SUBOPT_0x2A1
0083d6 940e d3f5 	CALL SUBOPT_0x2A2
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
0083d8 940e d42a 	CALL SUBOPT_0x2AA
0083da 940e d3f9 	CALL SUBOPT_0x2A3
0083dc b7ed      	IN   R30,SPL
0083dd b7fe      	IN   R31,SPH
0083de 9731      	SBIW R30,1
0083df 93fa      	ST   -Y,R31
0083e0 93ea      	ST   -Y,R30
0083e1 934f      	PUSH R20
0083e2 933f      	PUSH R19
0083e3 940e c59e 	CALL SUBOPT_0x75
0083e5 dd6a      	RCALL _SD_readData
0083e6 913f      	POP  R19
0083e7 914f      	POP  R20
0083e8 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
0083e9 2311      	TST  R17
0083ea f44a      	BRPL _0x280013
                +
0083eb e8e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
0083ec e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
0083ed e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
0083ee e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
0083ef 940e c274 	CALL SUBOPT_0x3
0083f1 efef      	LDI  R30,LOW(65535)
0083f2 efff      	LDI  R31,HIGH(65535)
0083f3 c16d      	RJMP _0x20E0044
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
0083f4 940e d42a 	CALL SUBOPT_0x2AA
0083f6 940e d3fe 	CALL SUBOPT_0x2A4
0083f8 940e c8a6 	CALL SUBOPT_0xF1
0083fa 940e d402 	CALL SUBOPT_0x2A5
0083fc 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
0083fe f44a      	BRPL _0x280014
                +
0083ff eaeb     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
008400 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
008401 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
008402 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
008403 940e c274 	CALL SUBOPT_0x3
008405 efef      	LDI  R30,LOW(65535)
008406 efff      	LDI  R31,HIGH(65535)
008407 c159      	RJMP _0x20E0044
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
008408 940e d42a 	CALL SUBOPT_0x2AA
00840a 940e d40b 	CALL SUBOPT_0x2A7
00840c 8dea      	LDD  R30,Y+26
00840d 8dfb      	LDD  R31,Y+26+1
00840e 93fa      	ST   -Y,R31
00840f 93ea      	ST   -Y,R30
008410 940e c597 	CALL SUBOPT_0x73
008412 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
008414 f44a      	BRPL _0x280015
                +
008415 edea     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
008416 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
008417 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
008418 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
008419 940e c274 	CALL SUBOPT_0x3
00841b efef      	LDI  R30,LOW(65535)
00841c efff      	LDI  R31,HIGH(65535)
00841d c143      	RJMP _0x20E0044
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
00841e 940e d42a 	CALL SUBOPT_0x2AA
008420 940e d414 	CALL SUBOPT_0x2A8
008422 940e d1a5 	CALL SUBOPT_0x248
008424 940e d402 	CALL SUBOPT_0x2A5
008426 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
008428 f44a      	BRPL _0x280016
                +
008429 e0e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
00842a e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
00842b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
00842c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
00842d 940e c274 	CALL SUBOPT_0x3
00842f efef      	LDI  R30,LOW(65535)
008430 efff      	LDI  R31,HIGH(65535)
008431 c12f      	RJMP _0x20E0044
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
008432 c124      	RJMP _0x20E0045
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
008433 93aa      	ST   -Y,R26
008434 9728      	SBIW R28,8
008435 940e e477 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
008437 940e d466 	CALL SUBOPT_0x2B2
008439 940e d3e8 	CALL SUBOPT_0x2A0
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
00843b f44a      	BRPL _0x280017
                +
00843c e3e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
00843d e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
00843e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
00843f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
008440 940e c274 	CALL SUBOPT_0x3
008442 efef      	LDI  R30,LOW(65535)
008443 efff      	LDI  R31,HIGH(65535)
008444 c076      	RJMP _0x20E0046
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
008445 e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
008446 940e d46b 	CALL SUBOPT_0x2B3
008448 940e d3f5 	CALL SUBOPT_0x2A2
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
00844a 940e d466 	CALL SUBOPT_0x2B2
00844c 940e d3f9 	CALL SUBOPT_0x2A3
00844e b7ed      	IN   R30,SPL
00844f b7fe      	IN   R31,SPH
008450 9731      	SBIW R30,1
008451 93fa      	ST   -Y,R31
008452 93ea      	ST   -Y,R30
008453 934f      	PUSH R20
008454 933f      	PUSH R19
008455 940e c59e 	CALL SUBOPT_0x75
008457 dca1      	RCALL _SD_writeData
008458 913f      	POP  R19
008459 914f      	POP  R20
00845a 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
00845b 2311      	TST  R17
00845c f44a      	BRPL _0x280018
                +
00845d e6e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
00845e e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
00845f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
008460 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
008461 940e c274 	CALL SUBOPT_0x3
008463 efef      	LDI  R30,LOW(65535)
008464 efff      	LDI  R31,HIGH(65535)
008465 c055      	RJMP _0x20E0046
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
008466 940e d466 	CALL SUBOPT_0x2B2
008468 940e d3fe 	CALL SUBOPT_0x2A4
00846a 940e e400 	CALL __PUTPARD1
00846c 01fe      	MOVW R30,R28
00846d 9674      	ADIW R30,20
00846e 940e d402 	CALL SUBOPT_0x2A5
008470 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
008472 f44a      	BRPL _0x280019
                +
008473 e8ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
008474 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
008475 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
008476 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
008477 940e c274 	CALL SUBOPT_0x3
008479 efef      	LDI  R30,LOW(65535)
00847a efff      	LDI  R31,HIGH(65535)
00847b c03f      	RJMP _0x20E0046
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
00847c 940e d466 	CALL SUBOPT_0x2B2
00847e 940e d40b 	CALL SUBOPT_0x2A7
008480 01fe      	MOVW R30,R28
008481 9673      	ADIW R30,19
008482 940e d471 	CALL SUBOPT_0x2B4
008484 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
008486 f44a      	BRPL _0x28001A
                +
008487 ece2     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
008488 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
008489 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
00848a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
00848b 940e c274 	CALL SUBOPT_0x3
00848d efef      	LDI  R30,LOW(65535)
00848e efff      	LDI  R31,HIGH(65535)
00848f c02b      	RJMP _0x20E0046
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
008490 940e d466 	CALL SUBOPT_0x2B2
008492 940e d475 	CALL SUBOPT_0x2B5
008494 940e e400 	CALL __PUTPARD1
008496 940e c54f 	CALL SUBOPT_0x6C
008498 940e c59e 	CALL SUBOPT_0x75
00849a 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
00849c f44a      	BRPL _0x28001B
                +
00849d eeee     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
00849e e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
00849f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
0084a0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
0084a1 940e c274 	CALL SUBOPT_0x3
0084a3 efef      	LDI  R30,LOW(65535)
0084a4 efff      	LDI  R31,HIGH(65535)
0084a5 c015      	RJMP _0x20E0046
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
0084a6 940e d466 	CALL SUBOPT_0x2B2
0084a8 940e d41b 	CALL SUBOPT_0x2A9
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
0084aa f45a      	BRPL _0x28001C
                +
0084ab e1ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
0084ac e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
0084ad e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
0084ae e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
0084af 940e c62d 	CALL SUBOPT_0x8D
0084b1 940e cc53 	CALL SUBOPT_0x18B
0084b3 efef      	LDI  R30,LOW(65535)
0084b4 efff      	LDI  R31,HIGH(65535)
0084b5 c005      	RJMP _0x20E0046
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
0084b6 e0e0      	LDI  R30,LOW(0)
0084b7 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
0084b9 85e8      	LDD  R30,Y+8
0084ba 85f9      	LDD  R31,Y+8+1
                 _0x20E0046:
0084bb 940e e47e 	CALL __LOADLOCR4
0084bd 9664      	ADIW R28,20
0084be 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
0084bf 940e c876 	CALL SUBOPT_0xE7
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0084c1 940e d42a 	CALL SUBOPT_0x2AA
0084c3 940e d42f 	CALL SUBOPT_0x2AB
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
0084c5 f44a      	BRPL _0x28001D
                +
0084c6 e5e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
0084c7 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
0084c8 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
0084c9 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
0084ca 940e c274 	CALL SUBOPT_0x3
0084cc efef      	LDI  R30,LOW(65535)
0084cd efff      	LDI  R31,HIGH(65535)
0084ce c092      	RJMP _0x20E0044
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
0084cf 940e d42a 	CALL SUBOPT_0x2AA
0084d1 940e d436 	CALL SUBOPT_0x2AC
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
0084d3 f44a      	BRPL _0x28001E
                +
0084d4 e7ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
0084d5 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
0084d6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
0084d7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
0084d8 940e c274 	CALL SUBOPT_0x3
0084da efef      	LDI  R30,LOW(65535)
0084db efff      	LDI  R31,HIGH(65535)
0084dc c084      	RJMP _0x20E0044
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
0084dd 940e d43d 	CALL SUBOPT_0x2AD
0084df 940e d443 	CALL SUBOPT_0x2AE
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
0084e1 940e d449 	CALL SUBOPT_0x2AF
0084e3 f0b8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
0084e4 eae8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
0084e5 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
0084e6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
0084e7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
0084e8 940e c274 	CALL SUBOPT_0x3
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0084ea 940e d47c 	CALL SUBOPT_0x2B6
                 ; 0014 00A9         if(res < 0)
0084ec f442      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
0084ed e5e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
0084ee e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
0084ef e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
0084f0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
0084f1 940e c545 	CALL SUBOPT_0x6A
0084f3 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
0084f5 e0e1      	LDI  R30,LOW(1)
0084f6 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
0084f8 e0e0      	LDI  R30,LOW(0)
0084f9 e0f0      	LDI  R31,HIGH(0)
0084fa c066      	RJMP _0x20E0044
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
0084fb 940e d46b 	CALL SUBOPT_0x2B3
0084fd 940e d3f5 	CALL SUBOPT_0x2A2
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
0084ff 940e d42a 	CALL SUBOPT_0x2AA
008501 940e d3f9 	CALL SUBOPT_0x2A3
008503 b7ed      	IN   R30,SPL
008504 b7fe      	IN   R31,SPH
008505 9731      	SBIW R30,1
008506 93fa      	ST   -Y,R31
008507 93ea      	ST   -Y,R30
008508 934f      	PUSH R20
008509 933f      	PUSH R19
00850a 940e c59e 	CALL SUBOPT_0x75
00850c dc43      	RCALL _SD_readData
00850d 913f      	POP  R19
00850e 914f      	POP  R20
00850f 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
008510 2311      	TST  R17
008511 f44a      	BRPL _0x280021
                +
008512 ece8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
008513 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
008514 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
008515 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
008516 940e c274 	CALL SUBOPT_0x3
008518 efef      	LDI  R30,LOW(65535)
008519 efff      	LDI  R31,HIGH(65535)
00851a c046      	RJMP _0x20E0044
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
00851b 940e d42a 	CALL SUBOPT_0x2AA
00851d 940e d3fe 	CALL SUBOPT_0x2A4
00851f 940e c8a6 	CALL SUBOPT_0xF1
008521 940e d402 	CALL SUBOPT_0x2A5
008523 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
008525 f44a      	BRPL _0x280022
                +
008526 efe3     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
008527 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
008528 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
008529 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
00852a 940e c274 	CALL SUBOPT_0x3
00852c efef      	LDI  R30,LOW(65535)
00852d efff      	LDI  R31,HIGH(65535)
00852e c032      	RJMP _0x20E0044
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
00852f 940e d42a 	CALL SUBOPT_0x2AA
008531 940e d40b 	CALL SUBOPT_0x2A7
008533 8dea      	LDD  R30,Y+26
008534 8dfb      	LDD  R31,Y+26+1
008535 940e d471 	CALL SUBOPT_0x2B4
008537 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
008539 f44a      	BRPL _0x280023
                +
00853a e2e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
00853b e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
00853c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
00853d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
00853e 940e c274 	CALL SUBOPT_0x3
008540 efef      	LDI  R30,LOW(65535)
008541 efff      	LDI  R31,HIGH(65535)
008542 c01e      	RJMP _0x20E0044
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
008543 940e d42a 	CALL SUBOPT_0x2AA
008545 940e d475 	CALL SUBOPT_0x2B5
008547 940e d1a5 	CALL SUBOPT_0x248
008549 940e d471 	CALL SUBOPT_0x2B4
00854b 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
00854d f44a      	BRPL _0x280024
                +
00854e e4ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
00854f e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
008550 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
008551 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
008552 940e c274 	CALL SUBOPT_0x3
008554 efef      	LDI  R30,LOW(65535)
008555 efff      	LDI  R31,HIGH(65535)
008556 c00a      	RJMP _0x20E0044
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E0045:
                +
008557 85e8     +LDD R30 , Y + 8
008558 85f9     +LDD R31 , Y + 8 + 1
008559 856a     +LDD R22 , Y + 8 + 2
00855a 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00855b 89a8      	LDD  R26,Y+16
00855c 89b9      	LDD  R27,Y+16+1
00855d 940e e3db 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
00855f e0e1      	LDI  R30,LOW(1)
008560 e0f0      	LDI  R31,HIGH(1)
                 _0x20E0044:
008561 940e e47e 	CALL __LOADLOCR4
008563 966a      	ADIW R28,26
008564 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
008565 940e c5e5 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
008567 940e d48d 	CALL SUBOPT_0x2B7
008569 940e d492 	CALL SUBOPT_0x2B8
00856b 940e cc7c 	CALL SUBOPT_0x194
00856d 940e c5a4 	CALL SUBOPT_0x77
00856f 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 00CE     if(res < 0)
008571 f44a      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
008572 e7e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
008573 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
008574 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
008575 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
008576 940e c274 	CALL SUBOPT_0x3
                 ; 0014 00D1         return -1;
008578 efef      	LDI  R30,LOW(65535)
008579 efff      	LDI  R31,HIGH(65535)
00857a c048      	RJMP _0x20E0042
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
00857b eae4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
00857c e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
00857d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
00857e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
00857f c03b      	RJMP _0x20E0043
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
008580 940e cec0 	CALL SUBOPT_0x1F6
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
008582 ece2     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
008583 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
008584 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
008585 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
008586 940e cebc 	CALL SUBOPT_0x1F5
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
008588 940e ceb3 	CALL SUBOPT_0x1F3
00858a 940e c5a4 	CALL SUBOPT_0x77
00858c 940e cb4b 	CALL SUBOPT_0x163
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
00858e 940e d492 	CALL SUBOPT_0x2B8
008590 01fe      	MOVW R30,R28
008591 9638      	ADIW R30,8
008592 940e d402 	CALL SUBOPT_0x2A5
008594 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 00E1     if(res < 0)
008596 f44a      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
008597 eee4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
008598 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
008599 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
00859a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
00859b 940e c274 	CALL SUBOPT_0x3
                 ; 0014 00E4         return -1;
00859d efef      	LDI  R30,LOW(65535)
00859e efff      	LDI  R31,HIGH(65535)
00859f c049      	RJMP _0x20E0040
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
0085a0 c046      	RJMP _0x20E0041
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
0085a1 940e c5e5 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
0085a3 940e d48d 	CALL SUBOPT_0x2B7
0085a5 940e d499 	CALL SUBOPT_0x2B9
0085a7 940e cc7c 	CALL SUBOPT_0x194
0085a9 940e c5a4 	CALL SUBOPT_0x77
0085ab 940e d461 	CALL SUBOPT_0x2B1
                 ; 0014 00EF     if(res < 0)
0085ad f44a      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
0085ae e0ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
0085af e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
0085b0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
0085b1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
0085b2 940e c274 	CALL SUBOPT_0x3
                 ; 0014 00F2         return -1;
0085b4 efef      	LDI  R30,LOW(65535)
0085b5 efff      	LDI  R31,HIGH(65535)
0085b6 c00c      	RJMP _0x20E0042
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
0085b7 e3e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
0085b8 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
0085b9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
0085ba e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
                 _0x20E0043:
0085bb 940e e400 	CALL __PUTPARD1
0085bd 81ae      	LDD  R26,Y+6
0085be 81bf      	LDD  R27,Y+6+1
0085bf 940e ca02 	CALL SUBOPT_0x12D
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
0085c1 e0e0      	LDI  R30,LOW(0)
0085c2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0042:
0085c3 8119      	LDD  R17,Y+1
0085c4 8108      	LDD  R16,Y+0
0085c5 9626      	ADIW R28,6
0085c6 9508      	RET
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
0085c7 940e cec0 	CALL SUBOPT_0x1F6
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
0085c9 e5e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
0085ca e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
0085cb e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
0085cc e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
0085cd 940e cebc 	CALL SUBOPT_0x1F5
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
0085cf 940e ceb3 	CALL SUBOPT_0x1F3
0085d1 940e c5a4 	CALL SUBOPT_0x77
0085d3 940e cb4b 	CALL SUBOPT_0x163
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
0085d5 940e d499 	CALL SUBOPT_0x2B9
0085d7 01fe      	MOVW R30,R28
0085d8 9638      	ADIW R30,8
0085d9 940e d402 	CALL SUBOPT_0x2A5
0085db 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 0102     if(res < 0)
0085dd f44a      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
0085de e7e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
0085df e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
0085e0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
0085e1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
0085e2 940e c274 	CALL SUBOPT_0x3
                 ; 0014 0105         return -1;
0085e4 efef      	LDI  R30,LOW(65535)
0085e5 efff      	LDI  R31,HIGH(65535)
0085e6 c002      	RJMP _0x20E0040
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
                 _0x20E0041:
0085e7 e0e0      	LDI  R30,LOW(0)
0085e8 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0040:
0085e9 8119      	LDD  R17,Y+1
0085ea 8108      	LDD  R16,Y+0
0085eb 9628      	ADIW R28,8
0085ec 9508      	RET
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
0085ed 940e ce40 	CALL SUBOPT_0x1DC
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
0085ef 81ec      	LDD  R30,Y+4
0085f0 81fd      	LDD  R31,Y+4+1
0085f1 940e c4dc 	CALL SUBOPT_0x59
0085f3 940e d3d2 	CALL SUBOPT_0x29C
                +
0085f5 5fe0     +SUBI R30 , LOW ( - 16 )
0085f6 4fff     +SBCI R31 , HIGH ( - 16 )
0085f7 4f6f     +SBCI R22 , BYTE3 ( - 16 )
0085f8 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
0085f9 940e c6c6 	CALL SUBOPT_0xA0
                 ; 0014 0115 
                 ; 0014 0116     return address;
0085fb 940e c60b 	CALL SUBOPT_0x87
0085fd 962a      	ADIW R28,10
0085fe 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
0085ff 93ba      	ST   -Y,R27
008600 93aa      	ST   -Y,R26
008601 97a0      	SBIW R28,32
008602 50d2      	SUBI R29,2
008603 931a      	ST   -Y,R17
008604 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
008605 01fe     +MOVW R30 , R28
008606 5de9     +SUBI R30 , LOW ( - 551 )
008607 4ffd     +SBCI R31 , HIGH ( - 551 )
008608 9001     +LD R0 , Z +
008609 81f0     +LD R31 , Z
00860a 2de0     +MOV R30 , R0
                 	__GETW1SX 551
00860b 93fa      	ST   -Y,R31
00860c 93ea      	ST   -Y,R30
                +
00860d 01de     +MOVW R26 , R28
00860e 5da8     +SUBI R26 , LOW ( - 552 )
00860f 4fbd     +SBCI R27 , HIGH ( - 552 )
008610 91ac     +LD R26 , X
                 	__GETB2SX 552
008611 dbdf      	RCALL _SD_createFile
008612 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
008613 2311      	TST  R17
008614 f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
008615 e9ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
008616 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
008617 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
008618 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
008619 940e d4a0 	CALL SUBOPT_0x2BA
00861b 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 0121         return -1;
00861d efef      	LDI  R30,LOW(65535)
00861e efff      	LDI  R31,HIGH(65535)
00861f c075      	RJMP _0x20E003E
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
008620 2e00      	MOV  R0,R16
008621 2a01      	OR   R0,R17
008622 f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
008623 ece9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
008624 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
008625 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
008626 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
008627 940e d4a0 	CALL SUBOPT_0x2BA
008629 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 0126         return 0;
00862b e0e0      	LDI  R30,LOW(0)
00862c e0f0      	LDI  R31,HIGH(0)
00862d c067      	RJMP _0x20E003E
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
00862e eeed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
00862f e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
008630 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
008631 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
008632 940e d4a0 	CALL SUBOPT_0x2BA
008634 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
008636 01fe     +MOVW R30 , R28
008637 5dee     +SUBI R30 , LOW ( - 546 )
008638 4ffd     +SBCI R31 , HIGH ( - 546 )
008639 9001     +LD R0 , Z +
00863a 81f0     +LD R31 , Z
00863b 2de0     +MOV R30 , R0
                 	__GETW1SX 546
00863c 9730      	SBIW R30,0
00863d f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
00863e e0eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
00863f e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
008640 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
008641 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
008642 940e c274 	CALL SUBOPT_0x3
                 ; 0014 012E             return 1;
008644 c04e      	RJMP _0x20E003F
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
008645 940e ceb3 	CALL SUBOPT_0x1F3
                +
008647 01de     +MOVW R26 , R28
008648 5da7     +SUBI R26 , LOW ( - 553 )
008649 4fbd     +SBCI R27 , HIGH ( - 553 )
00864a 900d     +LD R0 , X +
00864b 91bc     +LD R27 , X
00864c 2da0     +MOV R26 , R0
                 	__GETW2SX 553
00864d dc01      	RCALL _SD_openFile
00864e 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
00864f 2311      	TST  R17
008650 f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
008651 e3eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
008652 e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
008653 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
008654 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
008655 940e d4a0 	CALL SUBOPT_0x2BA
008657 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 0136             return -1;
008659 efef      	LDI  R30,LOW(65535)
00865a efff      	LDI  R31,HIGH(65535)
00865b c039      	RJMP _0x20E003E
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
00865c e6e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
00865d e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
00865e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
00865f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
008660 940e c274 	CALL SUBOPT_0x3
                 ; 0014 013B             print_payload(initString,len);
008662 940e d4aa 	CALL SUBOPT_0x2BB
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
008664 940e ceb3 	CALL SUBOPT_0x1F3
008666 940e d492 	CALL SUBOPT_0x2B8
                +
008668 01fe     +MOVW R30 , R28
008669 5de6     +SUBI R30 , LOW ( - 554 )
00866a 4ffd     +SBCI R31 , HIGH ( - 554 )
00866b 9001     +LD R0 , Z +
00866c 81f0     +LD R31 , Z
00866d 2de0     +MOV R30 , R0
                 	__GETW1SX 554
00866e 93fa      	ST   -Y,R31
00866f 93ea      	ST   -Y,R30
                +
008670 01de     +MOVW R26 , R28
008671 5da6     +SUBI R26 , LOW ( - 554 )
008672 4fbd     +SBCI R27 , HIGH ( - 554 )
008673 900d     +LD R0 , X +
008674 91bc     +LD R27 , X
008675 2da0     +MOV R26 , R0
                 	__GETW2SX 554
008676 940e d406 	CALL SUBOPT_0x2A6
                 ; 0014 013D             if(res < 0)
008678 f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
008679 e8ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
00867a e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
00867b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
00867c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
00867d 940e c274 	CALL SUBOPT_0x3
                 ; 0014 0140                 print_payload(initString,len);
00867f 940e d4aa 	CALL SUBOPT_0x2BB
                 ; 0014 0141                 return -1;
008681 efef      	LDI  R30,LOW(65535)
008682 efff      	LDI  R31,HIGH(65535)
008683 c011      	RJMP _0x20E003E
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
008684 01de      	MOVW R26,R28
008685 9612      	ADIW R26,2
008686 dc07      	RCALL _SD_closeFile
008687 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
008688 2311      	TST  R17
008689 f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
00868a ece1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
00868b e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
00868c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
00868d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
00868e 940e c274 	CALL SUBOPT_0x3
                 ; 0014 0148                 return -1;
008690 efef      	LDI  R30,LOW(65535)
008691 efff      	LDI  R31,HIGH(65535)
008692 c002      	RJMP _0x20E003E
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E003F:
008693 e0e1      	LDI  R30,LOW(1)
008694 e0f0      	LDI  R31,HIGH(1)
                 _0x20E003E:
008695 8119      	LDD  R17,Y+1
008696 8108      	LDD  R16,Y+0
008697 96a9      	ADIW R28,41
008698 5fde      	SUBI R29,-2
008699 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
00869a 940e e477 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
00869c e020     +LDI R18 , LOW ( 0 )
00869d e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00869e eeea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
00869f e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
0086a0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
0086a1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
0086a2 940e c274 	CALL SUBOPT_0x3
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
0086a4 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
0086a5 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
0086a6 940e c8c7 	CALL SUBOPT_0xF7
0086a8 940e d4ba 	CALL SUBOPT_0x2BC
                 ; 0014 0159     if(res < 0)
0086aa f442      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
0086ab 940e d4c5 	CALL SUBOPT_0x2BD
0086ad 940e c4fe 	CALL SUBOPT_0x5F
0086af 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 015C         ret = ret-1;
                +
0086b1 5021     +SUBI R18 , LOW ( 1 )
0086b2 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
0086b3 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0086b4 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0086b5 940e c8c7 	CALL SUBOPT_0xF7
0086b7 940e d4ba 	CALL SUBOPT_0x2BC
                 ; 0014 0160     if(res < 0)
0086b9 f442      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
0086ba 940e d4c5 	CALL SUBOPT_0x2BD
0086bc 940e c545 	CALL SUBOPT_0x6A
0086be 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 0163         ret = ret-1;
                +
0086c0 5021     +SUBI R18 , LOW ( 1 )
0086c1 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
0086c2 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
0086c3 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
0086c4 940e c8c7 	CALL SUBOPT_0xF7
0086c6 940e cc86 	CALL SUBOPT_0x196
0086c8 df36      	RCALL _LOG_createFile
0086c9 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
0086ca 2311      	TST  R17
0086cb f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
0086cc 940e d4c5 	CALL SUBOPT_0x2BD
0086ce 940e d4ca 	CALL SUBOPT_0x2BE
0086d0 940e c2ea 	CALL SUBOPT_0x12
                 ; 0014 016A         ret = ret-1;
                +
0086d2 5021     +SUBI R18 , LOW ( 1 )
0086d3 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
0086d4 01f9      	MOVW R30,R18
0086d5 940e e47e 	CALL __LOADLOCR4
0086d7 9624      	ADIW R28,4
0086d8 9508      	RET
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
0086d9 940e cec0 	CALL SUBOPT_0x1F6
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
0086db d0b1      	RCALL _findFreeSlotDataLogQueue
0086dc 2f0e      	MOV  R16,R30
0086dd 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
0086de 2311      	TST  R17
0086df f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
0086e0 e3e0     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
0086e1 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
0086e2 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
0086e3 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
0086e4 940e c274 	CALL SUBOPT_0x3
                 ; 0015 0017         return -1;
0086e6 efef      	LDI  R30,LOW(65535)
0086e7 efff      	LDI  R31,HIGH(65535)
0086e8 c038      	RJMP _0x20E003D
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
0086e9 940e cb8e 	CALL SUBOPT_0x16F
0086eb 52e8      	SUBI R30,LOW(-_dataLogQueue)
0086ec 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
0086ed 85ac      	LDD  R26,Y+12
0086ee 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
0086ef 940e cb8e 	CALL SUBOPT_0x16F
                +
0086f1 52e7     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
0086f2 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
0086f3 940e c810 	CALL SUBOPT_0xD8
0086f5 940e d262 	CALL SUBOPT_0x264
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
0086f7 940e cb8e 	CALL SUBOPT_0x16F
                +
0086f9 52e3     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
0086fa 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
0086fb 81ae      	LDD  R26,Y+6
0086fc 81bf      	LDD  R27,Y+6+1
0086fd 83a0      	STD  Z+0,R26
0086fe 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
0086ff 940e cb8e 	CALL SUBOPT_0x16F
                +
008701 52e1     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
008702 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
008703 940e c732 	CALL SUBOPT_0xB4
008705 940e d262 	CALL SUBOPT_0x264
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
008707 91e0 1a46 	LDS  R30,_dataLogQCount
008709 5fef      	SUBI R30,-LOW(1)
00870a 93e0 1a46 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
00870c e6e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
00870d e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
00870e e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
00870f e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
008710 940e e400 	CALL __PUTPARD1
008712 89e8      	LDD  R30,Y+16
008713 940e c525 	CALL SUBOPT_0x65
008715 01f8      	MOVW R30,R16
008716 940e d216 	CALL SUBOPT_0x258
008718 91e0 1a46 	LDS  R30,_dataLogQCount
00871a 940e c525 	CALL SUBOPT_0x65
00871c 940e c52b 	CALL SUBOPT_0x66
                 ; 0015 0021     return dataLogQCount;
00871e 91e0 1a46 	LDS  R30,_dataLogQCount
008720 e0f0      	LDI  R31,0
                 _0x20E003D:
008721 8119      	LDD  R17,Y+1
008722 8108      	LDD  R16,Y+0
008723 962d      	ADIW R28,13
008724 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
008725 940e c5e5 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
008727 91e0 1a46 	LDS  R30,_dataLogQCount
008729 30e0      	CPI  R30,0
00872a f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
00872b ece2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
00872c e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
00872d e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
00872e e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
00872f 940e c274 	CALL SUBOPT_0x3
                 ; 0015 002A         return -1;
008731 c0f3      	RJMP _0x20E003B
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
008732 e000     +LDI R16 , LOW ( 0 )
008733 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
008734 300a     +CPI R16 , LOW ( 10 )
008735 e0e0     +LDI R30 , HIGH ( 10 )
008736 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
008737 f54c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
008738 940e cb8e 	CALL SUBOPT_0x16F
00873a 52e8      	SUBI R30,LOW(-_dataLogQueue)
00873b 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00873c 81e0      	LD   R30,Z
00873d 85a8      	LDD  R26,Y+8
00873e 17ea      	CP   R30,R26
00873f f4f1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
008740 940e cb8e 	CALL SUBOPT_0x16F
                +
008742 52e7     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
008743 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
008744 940e d4d0 	CALL SUBOPT_0x2BF
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
008746 940e cb8e 	CALL SUBOPT_0x16F
                +
008748 52e3     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
008749 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00874a 01df      	MOVW R26,R30
00874b 940e e3cc 	CALL __GETW1P
00874d 81ac      	LDD  R26,Y+4
00874e 81bd      	LDD  R27,Y+4+1
00874f 93ed      	ST   X+,R30
008750 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
008751 940e cb8e 	CALL SUBOPT_0x16F
                +
008753 52e1     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
008754 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
008755 01df      	MOVW R26,R30
008756 940e e3d0 	CALL __GETD1P
008758 81aa      	LDD  R26,Y+2
008759 81bb      	LDD  R27,Y+2+1
00875a 940e e3db 	CALL __PUTDP1
                 ; 0015 0034 
                 ; 0015 0035             return i;
00875c 01f8      	MOVW R30,R16
00875d c0c9      	RJMP _0x20E003A
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
00875e 5f0f     +SUBI R16 , LOW ( - 1 )
00875f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008760 cfd3      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
008761 efe2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
008762 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
008763 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
008764 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
008765 c0ba      	RJMP _0x20E003C
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
008766 93aa      	ST   -Y,R26
008767 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
008768 e010      	LDI  R17,LOW(0)
                 _0x2A000A:
008769 301a      	CPI  R17,10
00876a f4e8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
00876b 940e d4d8 	CALL SUBOPT_0x2C0
00876d 81e0      	LD   R30,Z
00876e 81a9      	LDD  R26,Y+1
00876f 17ea      	CP   R30,R26
008770 f4a9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
008771 940e d4d8 	CALL SUBOPT_0x2C0
008773 940e d4de 	CALL SUBOPT_0x2C1
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
008775 91e0 1a46 	LDS  R30,_dataLogQCount
008777 50e1      	SUBI R30,LOW(1)
008778 93e0 1a46 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
00877a e3e2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
00877b e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
00877c e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
00877d e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
00877e 940e cf02 	CALL SUBOPT_0x1FD
008780 940e cf07 	CALL SUBOPT_0x1FE
                 ; 0015 004B             return dataLogQCount;
008782 91e0 1a46 	LDS  R30,_dataLogQCount
008784 e0f0      	LDI  R31,0
008785 c0d8      	RJMP _0x20E0038
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
008786 5f1f      	SUBI R17,-1
008787 cfe1      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
008788 e8e7     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
008789 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
00878a e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
00878b e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
00878c c0ca      	RJMP _0x20E0039
                 ; 0015 004F     return -1;
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
00878d 931a      	ST   -Y,R17
                 ;	i -> R17
00878e e010      	LDI  R17,LOW(0)
                 _0x2A000E:
00878f 301a      	CPI  R17,10
008790 f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
008791 940e d4d8 	CALL SUBOPT_0x2C0
008793 81e0      	LD   R30,Z
008794 30e0      	CPI  R30,0
008795 f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
008796 2fe1      	MOV  R30,R17
008797 c0e8      	RJMP _0x20E0037
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
008798 5f1f      	SUBI R17,-1
008799 cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
00879a efef      	LDI  R30,LOW(255)
00879b c0e4      	RJMP _0x20E0037
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
00879c 931a      	ST   -Y,R17
                 ;	i -> R17
00879d e010      	LDI  R17,LOW(0)
                 _0x2A0012:
00879e 301a      	CPI  R17,10
00879f f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
0087a0 940e d4d8 	CALL SUBOPT_0x2C0
0087a2 940e d4de 	CALL SUBOPT_0x2C1
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
0087a4 5f1f      	SUBI R17,-1
0087a5 cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
0087a6 c0d9      	RJMP _0x20E0037
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
0087a7 93aa      	ST   -Y,R26
0087a8 931a      	ST   -Y,R17
0087a9 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
0087aa d0b6      	RCALL _findFreeSlotEventLogQueue
0087ab 2f0e      	MOV  R16,R30
0087ac 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
0087ad 2311      	TST  R17
0087ae f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
0087af ece9     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
0087b0 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
0087b1 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
0087b2 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
0087b3 940e c274 	CALL SUBOPT_0x3
                 ; 0015 0076         return -1;
0087b5 c06f      	RJMP _0x20E003B
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
0087b6 940e d4f9 	CALL SUBOPT_0x2C2
0087b8 5be5      	SUBI R30,LOW(-_eventLogQueue)
0087b9 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0087ba 85a8      	LDD  R26,Y+8
0087bb 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
0087bc 940e d4f9 	CALL SUBOPT_0x2C2
                +
0087be 5be4     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
0087bf 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
0087c0 940e d01e 	CALL SUBOPT_0x214
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
0087c2 940e d4f9 	CALL SUBOPT_0x2C2
                +
0087c4 5be0     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
0087c5 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
0087c6 81ab      	LDD  R26,Y+3
0087c7 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
0087c8 940e d4f9 	CALL SUBOPT_0x2C2
                +
0087ca 5aef     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0087cb 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0087cc 81aa      	LDD  R26,Y+2
0087cd 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
0087ce 91e0 19d7 	LDS  R30,_eventLogQCount
0087d0 5fef      	SUBI R30,-LOW(1)
0087d1 93e0 19d7 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
0087d3 e0e1     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
0087d4 e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
0087d5 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
0087d6 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
0087d7 940e ceca 	CALL SUBOPT_0x1F8
0087d9 01f8      	MOVW R30,R16
0087da 940e d216 	CALL SUBOPT_0x258
0087dc 91e0 19d7 	LDS  R30,_eventLogQCount
0087de 940e c525 	CALL SUBOPT_0x65
0087e0 940e c52b 	CALL SUBOPT_0x66
                 ; 0015 0080     return eventLogQCount;
0087e2 91e0 19d7 	LDS  R30,_eventLogQCount
0087e4 e0f0      	LDI  R31,0
0087e5 c041      	RJMP _0x20E003A
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
0087e6 940e c5e5 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
0087e8 91e0 19d7 	LDS  R30,_eventLogQCount
0087ea 30e0      	CPI  R30,0
0087eb f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
0087ec e5ed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
0087ed e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
0087ee e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
0087ef e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
0087f0 940e c274 	CALL SUBOPT_0x3
                 ; 0015 0089         return -1;
0087f2 c032      	RJMP _0x20E003B
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
0087f3 e000     +LDI R16 , LOW ( 0 )
0087f4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
0087f5 3104     +CPI R16 , LOW ( 20 )
0087f6 e0e0     +LDI R30 , HIGH ( 20 )
0087f7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0087f8 f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
0087f9 940e d4f9 	CALL SUBOPT_0x2C2
0087fb 5be5      	SUBI R30,LOW(-_eventLogQueue)
0087fc 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0087fd 81e0      	LD   R30,Z
0087fe 85a8      	LDD  R26,Y+8
0087ff 17ea      	CP   R30,R26
008800 f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
008801 940e d4f9 	CALL SUBOPT_0x2C2
                +
008803 5be4     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
008804 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
008805 940e d4d0 	CALL SUBOPT_0x2BF
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
008807 940e d4f9 	CALL SUBOPT_0x2C2
                +
008809 5be0     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00880a 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00880b 81e0      	LD   R30,Z
00880c 81ac      	LDD  R26,Y+4
00880d 81bd      	LDD  R27,Y+4+1
00880e 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
00880f 940e d4f9 	CALL SUBOPT_0x2C2
                +
008811 5aef     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008812 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008813 81e0      	LD   R30,Z
008814 81aa      	LDD  R26,Y+2
008815 81bb      	LDD  R27,Y+2+1
008816 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
008817 01f8      	MOVW R30,R16
008818 c00e      	RJMP _0x20E003A
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
008819 5f0f     +SUBI R16 , LOW ( - 1 )
00881a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00881b cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
00881c e8ef     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
00881d e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
00881e e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
00881f e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E003C:
008820 940e e400 	CALL __PUTPARD1
008822 85ec      	LDD  R30,Y+12
008823 940e c388 	CALL SUBOPT_0x29
                 ; 0015 0099     return -1;
                 _0x20E003B:
008825 efef      	LDI  R30,LOW(65535)
008826 efff      	LDI  R31,HIGH(65535)
                 _0x20E003A:
008827 8119      	LDD  R17,Y+1
008828 8108      	LDD  R16,Y+0
008829 9629      	ADIW R28,9
00882a 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
00882b 93aa      	ST   -Y,R26
00882c 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
00882d e010      	LDI  R17,LOW(0)
                 _0x2A001B:
00882e 3114      	CPI  R17,20
00882f f518      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
008830 940e d4ff 	CALL SUBOPT_0x2C3
008832 81e0      	LD   R30,Z
008833 81a9      	LDD  R26,Y+1
008834 17ea      	CP   R30,R26
008835 f4d9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
008836 940e d4ff 	CALL SUBOPT_0x2C3
008838 940e d505 	CALL SUBOPT_0x2C4
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
00883a 940e d50b 	CALL SUBOPT_0x2C5
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
00883c 5aef     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00883d 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
00883e e0a0      	LDI  R26,LOW(0)
00883f 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
008840 91e0 19d7 	LDS  R30,_eventLogQCount
008842 50e1      	SUBI R30,LOW(1)
008843 93e0 19d7 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
008845 ede1     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
008846 e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
008847 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
008848 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
008849 940e cf02 	CALL SUBOPT_0x1FD
00884b 940e cf07 	CALL SUBOPT_0x1FE
                 ; 0015 00AA             return eventLogQCount;
00884d 91e0 19d7 	LDS  R30,_eventLogQCount
00884f e0f0      	LDI  R31,0
008850 c00d      	RJMP _0x20E0038
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
008851 5f1f      	SUBI R17,-1
008852 cfdb      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
008853 e2e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
008854 e5fe     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
008855 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
008856 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
                 _0x20E0039:
008857 940e e400 	CALL __PUTPARD1
008859 81ed      	LDD  R30,Y+5
00885a 940e c388 	CALL SUBOPT_0x29
                 ; 0015 00AE     return -1;
00885c efef      	LDI  R30,LOW(65535)
00885d efff      	LDI  R31,HIGH(65535)
                 _0x20E0038:
00885e 8118      	LDD  R17,Y+0
00885f 9622      	ADIW R28,2
008860 9508      	RET
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
008861 931a      	ST   -Y,R17
                 ;	i -> R17
008862 e010      	LDI  R17,LOW(0)
                 _0x2A001F:
008863 3114      	CPI  R17,20
008864 f448      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
008865 940e d4ff 	CALL SUBOPT_0x2C3
008867 81e0      	LD   R30,Z
008868 30e0      	CPI  R30,0
008869 f411      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
00886a 2fe1      	MOV  R30,R17
00886b c014      	RJMP _0x20E0037
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
00886c 5f1f      	SUBI R17,-1
00886d cff5      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
00886e efef      	LDI  R30,LOW(255)
00886f c010      	RJMP _0x20E0037
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
008870 931a      	ST   -Y,R17
                 ;	i -> R17
008871 e010      	LDI  R17,LOW(0)
                 _0x2A0023:
008872 3114      	CPI  R17,20
008873 f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
008874 940e d4ff 	CALL SUBOPT_0x2C3
008876 940e d505 	CALL SUBOPT_0x2C4
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
008878 940e d50b 	CALL SUBOPT_0x2C5
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
00887a 5aef     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00887b 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
00887c e0a0      	LDI  R26,LOW(0)
00887d 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
00887e 5f1f      	SUBI R17,-1
00887f cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
                 _0x20E0037:
008880 9119      	LD   R17,Y+
008881 9508      	RET
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 _MENU_processKey:
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
008882 93aa      	ST   -Y,R26
008883 97ef      	SBIW R28,63
008884 9761      	SBIW R28,17
008885 e48e      	LDI  R24,78
008886 e0a0      	LDI  R26,LOW(0)
008887 e0b0      	LDI  R27,HIGH(0)
008888 e6ea      	LDI  R30,LOW(_0x2C0003*2)
008889 e5fe      	LDI  R31,HIGH(_0x2C0003*2)
00888a e060      	LDI  R22,BYTE3(_0x2C0003*2)
00888b 940e e483 	CALL __INITLOCB
00888d 940e e475 	CALL __SAVELOCR6
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
00888f 91e0 14df 	LDS  R30,_currentPage
008891 30e0      	CPI  R30,0
008892 f451      	BRNE _0x2C0004
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                +
008893 01de     +MOVW R26 , R28
008894 5aaa     +SUBI R26 , LOW ( - 86 )
008895 4fbf     +SBCI R27 , HIGH ( - 86 )
008896 91ac     +LD R26 , X
                 	__GETB2SX 86
008897 30a1      	CPI  R26,LOW(0x1)
008898 f411      	BRNE _0x2C0005
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
008899 940e d516 	CALL SUBOPT_0x2C6
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 _0x2C0005:
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
00889b 940c 9800 	JMP  _0x2C0006
                 _0x2C0004:
00889d 91a0 14df 	LDS  R26,_currentPage
00889f 30a1      	CPI  R26,LOW(0x1)
0088a0 f011      	BREQ PC+3
0088a1 940c 88fd 	JMP _0x2C0007
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
0088a3 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
0088a5 f409      	BRNE _0x2C000B
0088a6 c04b      	RJMP _0x2C02B4
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000B:
0088a7 30e2      	CPI  R30,LOW(0x2)
0088a8 e0a0      	LDI  R26,HIGH(0x2)
0088a9 07fa      	CPC  R31,R26
0088aa f449      	BRNE _0x2C000C
0088ab 940e d52e 	CALL SUBOPT_0x2C8
0088ad f41c      	BRGE _0x2C000D
0088ae e0e3      	LDI  R30,LOW(3)
0088af 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C000D:
0088b1 940e d535 	CALL SUBOPT_0x2C9
0088b3 c047      	RJMP _0x2C000A
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000C:
0088b4 30e3      	CPI  R30,LOW(0x3)
0088b5 e0a0      	LDI  R26,HIGH(0x3)
0088b6 07fa      	CPC  R31,R26
0088b7 f451      	BRNE _0x2C000E
0088b8 940e d542 	CALL SUBOPT_0x2CA
0088ba 30a4      	CPI  R26,LOW(0x4)
0088bb f01c      	BRLT _0x2C000F
0088bc e0e0      	LDI  R30,LOW(0)
0088bd 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C000F:
0088bf 940e d535 	CALL SUBOPT_0x2C9
0088c1 c039      	RJMP _0x2C000A
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 _0x2C000E:
0088c2 30e4      	CPI  R30,LOW(0x4)
0088c3 e0a0      	LDI  R26,HIGH(0x4)
0088c4 07fa      	CPC  R31,R26
0088c5 f5a9      	BRNE _0x2C000A
0088c6 91e0 1a47 	LDS  R30,_cursor_S0160000000
0088c8 30e0      	CPI  R30,0
0088c9 f419      	BRNE _0x2C0011
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
0088ca 940e d548 	CALL SUBOPT_0x2CB
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
0088cc c02e      	RJMP _0x2C0012
                 _0x2C0011:
0088cd 91a0 1a47 	LDS  R26,_cursor_S0160000000
0088cf 30a1      	CPI  R26,LOW(0x1)
0088d0 f431      	BRNE _0x2C0013
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
0088d1 e0ee      	LDI  R30,LOW(14)
0088d2 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
0088d4 940e d561 	CALL SUBOPT_0x2CD
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
0088d6 c024      	RJMP _0x2C0014
                 _0x2C0013:
0088d7 91a0 1a47 	LDS  R26,_cursor_S0160000000
0088d9 30a2      	CPI  R26,LOW(0x2)
0088da f431      	BRNE _0x2C0015
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
0088db e1e1      	LDI  R30,LOW(17)
0088dc 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
0088de 940e d56e 	CALL SUBOPT_0x2CE
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
0088e0 c01a      	RJMP _0x2C0016
                 _0x2C0015:
0088e1 91a0 1a47 	LDS  R26,_cursor_S0160000000
0088e3 30a3      	CPI  R26,LOW(0x3)
0088e4 f469      	BRNE _0x2C0017
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
0088e5 e2e2      	LDI  R30,LOW(34)
0088e6 940e d57b 	CALL SUBOPT_0x2CF
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
0088e8 e0e1      	LDI  R30,LOW(1)
0088e9 940e d581 	CALL SUBOPT_0x2D0
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
0088eb 940e d58b 	CALL SUBOPT_0x2D1
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                +
0088ed eeed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 33 ) )
0088ee e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 33 ) )
0088ef e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 33 ) )
0088f0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 33 ) )
                 	__POINTD1FN _0x2C0000,33
0088f1 c005      	RJMP _0x2C02B5
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 _0x2C0017:
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 _0x2C02B4:
0088f2 e0e0      	LDI  R30,LOW(0)
0088f3 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
0088f5 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02B5:
0088f7 940e e400 	CALL __PUTPARD1
0088f9 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 0062                             }
                 _0x2C0016:
                 _0x2C0014:
                 _0x2C0012:
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 _0x2C000A:
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
0088fb 940c 9800 	JMP  _0x2C0019
                 _0x2C0007:
0088fd 91a0 14df 	LDS  R26,_currentPage
0088ff 30a2      	CPI  R26,LOW(0x2)
008900 f011      	BREQ PC+3
008901 940c 894c 	JMP _0x2C001A
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
008903 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
008905 f419      	BRNE _0x2C001E
008906 940e d516 	CALL SUBOPT_0x2C6
008908 c041      	RJMP _0x2C001D
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001E:
008909 30e2      	CPI  R30,LOW(0x2)
00890a e0a0      	LDI  R26,HIGH(0x2)
00890b 07fa      	CPC  R31,R26
00890c f449      	BRNE _0x2C001F
00890d 940e d52e 	CALL SUBOPT_0x2C8
00890f f41c      	BRGE _0x2C0020
008910 e0e1      	LDI  R30,LOW(1)
008911 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0020:
008913 940e d535 	CALL SUBOPT_0x2C9
008915 c034      	RJMP _0x2C001D
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001F:
008916 30e3      	CPI  R30,LOW(0x3)
008917 e0a0      	LDI  R26,HIGH(0x3)
008918 07fa      	CPC  R31,R26
008919 f451      	BRNE _0x2C0021
00891a 940e d542 	CALL SUBOPT_0x2CA
00891c 30a2      	CPI  R26,LOW(0x2)
00891d f01c      	BRLT _0x2C0022
00891e e0e0      	LDI  R30,LOW(0)
00891f 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0022:
008921 940e d535 	CALL SUBOPT_0x2C9
008923 c026      	RJMP _0x2C001D
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 _0x2C0021:
008924 30e4      	CPI  R30,LOW(0x4)
008925 e0a0      	LDI  R26,HIGH(0x4)
008926 07fa      	CPC  R31,R26
008927 f511      	BRNE _0x2C001D
008928 91e0 1a47 	LDS  R30,_cursor_S0160000000
00892a 30e0      	CPI  R30,0
00892b f431      	BRNE _0x2C0024
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
00892c e0e3      	LDI  R30,LOW(3)
00892d 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
00892f 940e d596 	CALL SUBOPT_0x2D3
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
008931 c018      	RJMP _0x2C0025
                 _0x2C0024:
008932 91a0 1a47 	LDS  R26,_cursor_S0160000000
008934 30a1      	CPI  R26,LOW(0x1)
008935 f459      	BRNE _0x2C0026
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
008936 e2e1      	LDI  R30,LOW(33)
008937 940e d5a3 	CALL SUBOPT_0x2D4
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
008939 e0e2      	LDI  R30,LOW(2)
00893a 940e d581 	CALL SUBOPT_0x2D0
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
00893c 940e d58b 	CALL SUBOPT_0x2D1
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
00893e 940e d5a9 	CALL SUBOPT_0x2D5
008940 c005      	RJMP _0x2C02B6
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 _0x2C0026:
                 ; 0016 007A                                 currentPage = P_MONITOR;
008941 e0e0      	LDI  R30,LOW(0)
008942 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
008944 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02B6:
008946 940e e400 	CALL __PUTPARD1
008948 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 007D                             }
                 _0x2C0025:
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 _0x2C001D:
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
00894a 940c 9800 	JMP  _0x2C0028
                 _0x2C001A:
00894c 91a0 14df 	LDS  R26,_currentPage
00894e 30a3      	CPI  R26,LOW(0x3)
00894f f011      	BREQ PC+3
008950 940c 8b29 	JMP _0x2C0029
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
008952 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008954 f419      	BRNE _0x2C002D
008955 940e d548 	CALL SUBOPT_0x2CB
008957 c1cf      	RJMP _0x2C002C
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002D:
008958 30e2      	CPI  R30,LOW(0x2)
008959 e0a0      	LDI  R26,HIGH(0x2)
00895a 07fa      	CPC  R31,R26
00895b f449      	BRNE _0x2C002E
00895c 940e d52e 	CALL SUBOPT_0x2C8
00895e f41c      	BRGE _0x2C002F
00895f e0e2      	LDI  R30,LOW(2)
008960 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C002F:
008962 940e d535 	CALL SUBOPT_0x2C9
008964 c1c2      	RJMP _0x2C002C
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002E:
008965 30e3      	CPI  R30,LOW(0x3)
008966 e0a0      	LDI  R26,HIGH(0x3)
008967 07fa      	CPC  R31,R26
008968 f451      	BRNE _0x2C0030
008969 940e d542 	CALL SUBOPT_0x2CA
00896b 30a3      	CPI  R26,LOW(0x3)
00896c f01c      	BRLT _0x2C0031
00896d e0e0      	LDI  R30,LOW(0)
00896e 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0031:
008970 940e d535 	CALL SUBOPT_0x2C9
008972 c1b4      	RJMP _0x2C002C
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 _0x2C0030:
008973 30e4      	CPI  R30,LOW(0x4)
008974 e0a0      	LDI  R26,HIGH(0x4)
008975 07fa      	CPC  R31,R26
008976 f011      	BREQ PC+3
008977 940c 8b27 	JMP _0x2C002C
008979 91e0 1a47 	LDS  R30,_cursor_S0160000000
00897b 30e0      	CPI  R30,0
00897c f531      	BRNE _0x2C0033
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
00897d e0e4      	LDI  R30,LOW(4)
00897e 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                +
008980 efe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 45 ) )
008981 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 45 ) )
008982 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 45 ) )
008983 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 45 ) )
                 	__POINTD1FN _0x2C0000,45
008984 940e d5ae 	CALL SUBOPT_0x2D6
                +
008986 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
008987 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
008988 940e c3d6 	CALL SUBOPT_0x34
                +
00898a e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
00898b e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
00898c 940e c3d6 	CALL SUBOPT_0x34
00898e 940e c52b 	CALL SUBOPT_0x66
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                +
008990 e0eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 63 ) )
008991 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 63 ) )
008992 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 63 ) )
008993 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 63 ) )
                 	__POINTD1FN _0x2C0000,63
008994 940e d5ae 	CALL SUBOPT_0x2D6
                +
008996 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
008997 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
008998 940e c3d6 	CALL SUBOPT_0x34
                +
00899a e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
00899b e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
00899c 940e c3d6 	CALL SUBOPT_0x34
00899e e08c      	LDI  R24,12
00899f 940e 8079 	CALL _printOLED
0089a1 9660      	ADIW R28,16
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
0089a2 c184      	RJMP _0x2C0034
                 _0x2C0033:
0089a3 91a0 1a47 	LDS  R26,_cursor_S0160000000
0089a5 30a1      	CPI  R26,LOW(0x1)
0089a6 f011      	BREQ PC+3
0089a7 940c 8a4d 	JMP _0x2C0035
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
0089a9 e0e5      	LDI  R30,LOW(5)
0089aa 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
0089ac 01fe      	MOVW R30,R28
0089ad 9638      	ADIW R30,8
0089ae 940e c8c7 	CALL SUBOPT_0xF7
0089b0 940e d5b4 	CALL SUBOPT_0x2D7
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
0089b2 940e d5c7 	CALL SUBOPT_0x2D8
0089b4 940e d5cb 	CALL SUBOPT_0x2D9
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
0089b6 91a0 11b6 	LDS  R26,_operating_config
0089b8 31a0      	CPI  R26,LOW(0x10)
0089b9 f439      	BRNE _0x2C0036
0089ba 940e d5cf 	CALL SUBOPT_0x2DA
                +
0089bc e1e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 75 ) )
0089bd e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 75 ) )
0089be e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 75 ) )
0089bf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 75 ) )
                 	__POINTD1FN _0x2C0000,75
0089c0 c011      	RJMP _0x2C02B7
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 _0x2C0036:
0089c1 91a0 11b6 	LDS  R26,_operating_config
0089c3 32a0      	CPI  R26,LOW(0x20)
0089c4 f439      	BRNE _0x2C0038
0089c5 940e d5cf 	CALL SUBOPT_0x2DA
                +
0089c7 e2e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 85 ) )
0089c8 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 85 ) )
0089c9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 85 ) )
0089ca e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 85 ) )
                 	__POINTD1FN _0x2C0000,85
0089cb c006      	RJMP _0x2C02B7
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 _0x2C0038:
0089cc 940e d5cf 	CALL SUBOPT_0x2DA
                +
0089ce e2ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 97 ) )
0089cf e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 97 ) )
0089d0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 97 ) )
0089d1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 97 ) )
                 	__POINTD1FN _0x2C0000,97
                 _0x2C02B7:
0089d2 940e e400 	CALL __PUTPARD1
0089d4 940e d5d4 	CALL SUBOPT_0x2DB
                 ; 0016 00A0                                 strcat(cmd,str);
0089d6 940e d5d9 	CALL SUBOPT_0x2DC
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
0089d8 940e d5cb 	CALL SUBOPT_0x2D9
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                +
0089da 91a0 11b7+LDS R26 , _operating_config + ( 1 )
                 	__GETB2MN _operating_config,1
0089dc 30a1      	CPI  R26,LOW(0x1)
0089dd f439      	BRNE _0x2C003A
0089de 940e d5cf 	CALL SUBOPT_0x2DA
                +
0089e0 e3e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
0089e1 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
0089e2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
0089e3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
0089e4 c006      	RJMP _0x2C02B8
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003A:
0089e5 940e d5cf 	CALL SUBOPT_0x2DA
                +
0089e7 e3ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
0089e8 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
0089e9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
0089ea e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B8:
0089eb 940e e400 	CALL __PUTPARD1
0089ed 940e d5d4 	CALL SUBOPT_0x2DB
                 ; 0016 00A5                                 strcat(cmd,str);
0089ef 940e d5d9 	CALL SUBOPT_0x2DC
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
0089f1 940e d5cb 	CALL SUBOPT_0x2D9
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                +
0089f3 91a0 11b8+LDS R26 , _operating_config + ( 2 )
                 	__GETB2MN _operating_config,2
0089f5 30a1      	CPI  R26,LOW(0x1)
0089f6 f439      	BRNE _0x2C003C
0089f7 940e d5cf 	CALL SUBOPT_0x2DA
                +
0089f9 e3e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
0089fa e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
0089fb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
0089fc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
0089fd c006      	RJMP _0x2C02B9
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003C:
0089fe 940e d5cf 	CALL SUBOPT_0x2DA
                +
008a00 e3ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
008a01 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
008a02 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
008a03 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B9:
008a04 940e e400 	CALL __PUTPARD1
008a06 940e d5d4 	CALL SUBOPT_0x2DB
                 ; 0016 00AA                                 strcat(cmd,str);
008a08 940e d5d9 	CALL SUBOPT_0x2DC
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
008a0a 940e d5cb 	CALL SUBOPT_0x2D9
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                +
008a0c e000     +LDI R16 , LOW ( 0 )
008a0d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
008a0e e020     +LDI R18 , LOW ( 0 )
008a0f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2C003F:
                +
008a10 3005     +CPI R16 , LOW ( 5 )
008a11 e0e0     +LDI R30 , HIGH ( 5 )
008a12 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008a13 f4c4      	BRGE _0x2C0040
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
008a14 940e d5e2 	CALL SUBOPT_0x2DD
008a16 81a0      	LD   R26,Z
008a17 30a1      	CPI  R26,LOW(0x1)
008a18 f421      	BRNE _0x2C0041
008a19 940e d5e7 	CALL SUBOPT_0x2DE
008a1b e4e5      	LDI  R30,LOW(69)
008a1c c003      	RJMP _0x2C02BA
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 _0x2C0041:
008a1d 940e d5e7 	CALL SUBOPT_0x2DE
008a1f e4e4      	LDI  R30,LOW(68)
                 _0x2C02BA:
008a20 93ec      	ST   X,R30
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                +
008a21 3004     +CPI R16 , LOW ( 4 )
008a22 e0e0     +LDI R30 , HIGH ( 4 )
008a23 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
008a24 f424      	BRGE _0x2C0043
                 ; 0016 00B1                                         str[j++] = '/';
008a25 940e d5e7 	CALL SUBOPT_0x2DE
008a27 e2ef      	LDI  R30,LOW(47)
008a28 93ec      	ST   X,R30
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 _0x2C0043:
                +
008a29 5f0f     +SUBI R16 , LOW ( - 1 )
008a2a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008a2b cfe4      	RJMP _0x2C003F
                 _0x2C0040:
                 ; 0016 00B5                                 str[j++]    = ',';
008a2c 940e d5e7 	CALL SUBOPT_0x2DE
008a2e e2ec      	LDI  R30,LOW(44)
008a2f 93ec      	ST   X,R30
                 ; 0016 00B6                                 str[j++]    = '\0';
008a30 940e d5e7 	CALL SUBOPT_0x2DE
008a32 e0e0      	LDI  R30,LOW(0)
008a33 93ec      	ST   X,R30
                 ; 0016 00B7                                 strcat(cmd,str);
008a34 01fe      	MOVW R30,R28
008a35 9638      	ADIW R30,8
008a36 93fa      	ST   -Y,R31
008a37 93ea      	ST   -Y,R30
008a38 01de      	MOVW R26,R28
008a39 96dc      	ADIW R26,60
008a3a 940e a7e5 	CALL _strcat
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                +
008a3c e4e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 123 ) )
008a3d e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 123 ) )
008a3e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 123 ) )
008a3f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 123 ) )
                 	__POINTD1FN _0x2C0000,123
008a40 940e d5ef 	CALL SUBOPT_0x2DF
008a42 940e c2ea 	CALL SUBOPT_0x12
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                +
008a44 e5e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 141 ) )
008a45 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 141 ) )
008a46 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 141 ) )
008a47 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 141 ) )
                 	__POINTD1FN _0x2C0000,141
008a48 940e d5ef 	CALL SUBOPT_0x2DF
008a4a 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
008a4c c0da      	RJMP _0x2C0044
                 _0x2C0035:
008a4d 91a0 1a47 	LDS  R26,_cursor_S0160000000
008a4f 30a2      	CPI  R26,LOW(0x2)
008a50 f011      	BREQ PC+3
008a51 940c 8b20 	JMP _0x2C0045
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
008a53 01fe      	MOVW R30,R28
008a54 9638      	ADIW R30,8
008a55 940e c8c7 	CALL SUBOPT_0xF7
008a57 940e d5b4 	CALL SUBOPT_0x2D7
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
008a59 e4a5      	LDI  R26,LOW(325)
008a5a e0b1      	LDI  R27,HIGH(325)
008a5b 940e a753 	CALL _malloc
                +
008a5d 01de     +MOVW R26 , R28
008a5e 5aac     +SUBI R26 , LOW ( - 84 )
008a5f 4fbf     +SBCI R27 , HIGH ( - 84 )
008a60 93ed     +ST X + , R30
008a61 93fc     +ST X , R31
                 	__PUTW1SX 84
                 ; 0016 00C2                                 if(msg == NULL){
008a62 940e d5f5 	CALL SUBOPT_0x2E0
008a64 9730      	SBIW R30,0
008a65 f449      	BRNE _0x2C0046
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                +
008a66 e5ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 146 ) )
008a67 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 146 ) )
008a68 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 146 ) )
008a69 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 146 ) )
                 	__POINTD1FN _0x2C0000,146
008a6a 940e c274 	CALL SUBOPT_0x3
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008a6c 940e d548 	CALL SUBOPT_0x2CB
008a6e c0b8      	RJMP _0x2C002C
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 _0x2C0046:
008a6f 940e d5f5 	CALL SUBOPT_0x2E0
008a71 93fa      	ST   -Y,R31
008a72 93ea      	ST   -Y,R30
008a73 01de      	MOVW R26,R28
008a74 5aac      	SUBI R26,LOW(-(84))
008a75 4fbf      	SBCI R27,HIGH(-(84))
008a76 940e 5ef5 	CALL _ETH_getConfig
008a78 01af      	MOVW R20,R30
                 ; 0016 00C8                                 if(res < 0){
008a79 2355      	TST  R21
008a7a f42a      	BRPL _0x2C0047
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                +
008a7b e9e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 198 ) )
008a7c e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 198 ) )
008a7d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 198 ) )
008a7e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 198 ) )
                 	__POINTD1FN _0x2C0000,198
008a7f c02c      	RJMP _0x2C02BB
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 _0x2C0047:
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                +
008a80 ebed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 241 ) )
008a81 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 241 ) )
008a82 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 241 ) )
008a83 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 241 ) )
                 	__POINTD1FN _0x2C0000,241
008a84 940e c274 	CALL SUBOPT_0x3
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                +
008a86 eee9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 285 ) )
008a87 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 285 ) )
008a88 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 285 ) )
008a89 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 285 ) )
                 	__POINTD1FN _0x2C0000,285
008a8a 940e e400 	CALL __PUTPARD1
                +
008a8c 01fe     +MOVW R30 , R28
008a8d 5aea     +SUBI R30 , LOW ( - 86 )
008a8e 4fff     +SBCI R31 , HIGH ( - 86 )
008a8f 9001     +LD R0 , Z +
008a90 81f0     +LD R31 , Z
008a91 2de0     +MOV R30 , R0
                 	__GETW1SX 86
008a92 940e c3d6 	CALL SUBOPT_0x34
008a94 940e c2ea 	CALL SUBOPT_0x12
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                +
008a96 e000     +LDI R16 , LOW ( 0 )
008a97 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C004A:
008a98 940e d5fc 	CALL SUBOPT_0x2E1
008a9a 170e      	CP   R16,R30
008a9b 071f      	CPC  R17,R31
008a9c f458      	BRSH _0x2C004B
                 ; 0016 00CF                                         putchar3(msg[i]);
008a9d 01f8      	MOVW R30,R16
008a9e 940e d603 	CALL SUBOPT_0x2E2
008aa0 0fae      	ADD  R26,R30
008aa1 1fbf      	ADC  R27,R31
008aa2 91ac      	LD   R26,X
008aa3 940e 4187 	CALL _putchar3
                 ; 0016 00D0                                     }
                +
008aa5 5f0f     +SUBI R16 , LOW ( - 1 )
008aa6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008aa7 cff0      	RJMP _0x2C004A
                 _0x2C004B:
                 ; 0016 00D1                                     printDebug("\r\n");
                +
008aa8 e8ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
008aa9 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
008aaa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
008aab e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
                 _0x2C02BB:
008aac 940e e400 	CALL __PUTPARD1
008aae 940e c3df 	CALL SUBOPT_0x36
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
008ab0 940e d5f5 	CALL SUBOPT_0x2E0
008ab2 93fa      	ST   -Y,R31
008ab3 93ea      	ST   -Y,R30
008ab4 940e d60a 	CALL SUBOPT_0x2E3
008ab6 940e 9a28 	CALL _getNetworkInfo
008ab8 01af      	MOVW R20,R30
                 ; 0016 00D5                                 if(res<0){
008ab9 2355      	TST  R21
008aba f45a      	BRPL _0x2C004C
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                +
008abb e0ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 322 ) )
008abc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 322 ) )
008abd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 322 ) )
008abe e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 322 ) )
                 	__POINTD1FN _0x2C0000,322
008abf 940e c274 	CALL SUBOPT_0x3
                 ; 0016 00D7                                     return;
008ac1 940e e47c 	CALL __LOADLOCR6
008ac3 96ef      	ADIW R28,63
008ac4 9668      	ADIW R28,24
008ac5 9508      	RET
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 _0x2C004C:
008ac6 e0e6      	LDI  R30,LOW(6)
008ac7 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008ac9 e3ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 366 ) )
008aca e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 366 ) )
008acb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 366 ) )
008acc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 366 ) )
                 	__POINTD1FN _0x2C0000,366
008acd 940e d619 	CALL SUBOPT_0x2E4
008acf 940e d62d 	CALL SUBOPT_0x2E5
008ad1 940e d63f 	CALL SUBOPT_0x2E6
008ad3 940e d651 	CALL SUBOPT_0x2E7
008ad5 940e d663 	CALL SUBOPT_0x2E8
008ad7 940e d675 	CALL SUBOPT_0x2E9
008ad9 940e d687 	CALL SUBOPT_0x2EA
008adb 940e d699 	CALL SUBOPT_0x2EB
008add 940e d6ab 	CALL SUBOPT_0x2EC
008adf 940e d6bd 	CALL SUBOPT_0x2ED
008ae1 940e d6cf 	CALL SUBOPT_0x2EE
008ae3 940e d6e1 	CALL SUBOPT_0x2EF
008ae5 940e d6f3 	CALL SUBOPT_0x2F0
008ae7 940e d705 	CALL SUBOPT_0x2F1
008ae9 940e d717 	CALL SUBOPT_0x2F2
008aeb 940e d729 	CALL SUBOPT_0x2F3
008aed e480      	LDI  R24,64
008aee 940e 9ef8 	CALL _printDebug
008af0 96ef      	ADIW R28,63
008af1 9625      	ADIW R28,5
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008af2 e8e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 437 ) )
008af3 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 437 ) )
008af4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 437 ) )
008af5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 437 ) )
                 	__POINTD1FN _0x2C0000,437
008af6 940e d619 	CALL SUBOPT_0x2E4
008af8 940e d62d 	CALL SUBOPT_0x2E5
008afa 940e d63f 	CALL SUBOPT_0x2E6
008afc 940e d651 	CALL SUBOPT_0x2E7
008afe 940e d663 	CALL SUBOPT_0x2E8
008b00 940e d675 	CALL SUBOPT_0x2E9
008b02 940e d687 	CALL SUBOPT_0x2EA
008b04 940e d699 	CALL SUBOPT_0x2EB
008b06 940e d6ab 	CALL SUBOPT_0x2EC
008b08 940e d6bd 	CALL SUBOPT_0x2ED
008b0a 940e d6cf 	CALL SUBOPT_0x2EE
008b0c 940e d6e1 	CALL SUBOPT_0x2EF
008b0e 940e d6f3 	CALL SUBOPT_0x2F0
008b10 940e d705 	CALL SUBOPT_0x2F1
008b12 940e d717 	CALL SUBOPT_0x2F2
008b14 940e d729 	CALL SUBOPT_0x2F3
008b16 e480      	LDI  R24,64
008b17 940e 8079 	CALL _printOLED
008b19 96ef      	ADIW R28,63
008b1a 9625      	ADIW R28,5
                 ; 0016 0100                                 free( msg );
008b1b 940e d603 	CALL SUBOPT_0x2E2
008b1d 940e a76e 	CALL _free
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
008b1f c007      	RJMP _0x2C004D
                 _0x2C0045:
                 ; 0016 0103                                 currentPage = P_MONITOR;
008b20 e0e0      	LDI  R30,LOW(0)
008b21 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
008b23 940e d591 	CALL SUBOPT_0x2D2
008b25 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 0106                             }
                 _0x2C004D:
                 _0x2C0044:
                 _0x2C0034:
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 _0x2C002C:
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
008b27 940c 9800 	JMP  _0x2C004E
                 _0x2C0029:
008b29 91a0 14df 	LDS  R26,_currentPage
008b2b 30a4      	CPI  R26,LOW(0x4)
008b2c f4b1      	BRNE _0x2C004F
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
008b2d 940e d73e 	CALL SUBOPT_0x2F5
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
008b2f f089      	BREQ _0x2C0052
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
008b30 30e3      	CPI  R30,LOW(0x3)
008b31 e0a0      	LDI  R26,HIGH(0x3)
008b32 07fa      	CPC  R31,R26
008b33 f069      	BREQ _0x2C0052
                 ; 0016 010F         case KEY_MODE   :
008b34 30e1      	CPI  R30,LOW(0x1)
008b35 e0a0      	LDI  R26,HIGH(0x1)
008b36 07fa      	CPC  R31,R26
008b37 f021      	BREQ _0x2C0056
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008b38 30e4      	CPI  R30,LOW(0x4)
008b39 e0a0      	LDI  R26,HIGH(0x4)
008b3a 07fa      	CPC  R31,R26
008b3b f429      	BRNE _0x2C0052
                 _0x2C0056:
008b3c e0e3      	LDI  R30,LOW(3)
008b3d 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
008b3f 940e d596 	CALL SUBOPT_0x2D3
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 _0x2C0052:
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
008b41 940c 9800 	JMP  _0x2C0058
                 _0x2C004F:
008b43 91a0 14df 	LDS  R26,_currentPage
008b45 30a5      	CPI  R26,LOW(0x5)
008b46 f4b1      	BRNE _0x2C0059
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
008b47 940e d73e 	CALL SUBOPT_0x2F5
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
008b49 f089      	BREQ _0x2C005C
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
008b4a 30e3      	CPI  R30,LOW(0x3)
008b4b e0a0      	LDI  R26,HIGH(0x3)
008b4c 07fa      	CPC  R31,R26
008b4d f069      	BREQ _0x2C005C
                 ; 0016 011B         case KEY_MODE   :
008b4e 30e1      	CPI  R30,LOW(0x1)
008b4f e0a0      	LDI  R26,HIGH(0x1)
008b50 07fa      	CPC  R31,R26
008b51 f021      	BREQ _0x2C0060
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008b52 30e4      	CPI  R30,LOW(0x4)
008b53 e0a0      	LDI  R26,HIGH(0x4)
008b54 07fa      	CPC  R31,R26
008b55 f429      	BRNE _0x2C005C
                 _0x2C0060:
008b56 e0e3      	LDI  R30,LOW(3)
008b57 940e d747 	CALL SUBOPT_0x2F6
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
008b59 940e d596 	CALL SUBOPT_0x2D3
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 _0x2C005C:
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
008b5b 940c 9800 	JMP  _0x2C0062
                 _0x2C0059:
008b5d 91a0 14df 	LDS  R26,_currentPage
008b5f 30a6      	CPI  R26,LOW(0x6)
008b60 f4b1      	BRNE _0x2C0063
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
008b61 940e d73e 	CALL SUBOPT_0x2F5
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
008b63 f089      	BREQ _0x2C0066
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
008b64 30e3      	CPI  R30,LOW(0x3)
008b65 e0a0      	LDI  R26,HIGH(0x3)
008b66 07fa      	CPC  R31,R26
008b67 f069      	BREQ _0x2C0066
                 ; 0016 0127         case KEY_MODE   :
008b68 30e1      	CPI  R30,LOW(0x1)
008b69 e0a0      	LDI  R26,HIGH(0x1)
008b6a 07fa      	CPC  R31,R26
008b6b f021      	BREQ _0x2C006A
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008b6c 30e4      	CPI  R30,LOW(0x4)
008b6d e0a0      	LDI  R26,HIGH(0x4)
008b6e 07fa      	CPC  R31,R26
008b6f f429      	BRNE _0x2C0066
                 _0x2C006A:
008b70 e0e3      	LDI  R30,LOW(3)
008b71 940e d74d 	CALL SUBOPT_0x2F7
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
008b73 940e d596 	CALL SUBOPT_0x2D3
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 _0x2C0066:
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
008b75 940c 9800 	JMP  _0x2C006C
                 _0x2C0063:
008b77 91a0 14df 	LDS  R26,_currentPage
008b79 30a7      	CPI  R26,LOW(0x7)
008b7a f011      	BREQ PC+3
008b7b 940c 8c01 	JMP _0x2C006D
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
008b7d 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
008b7f f441      	BRNE _0x2C0071
008b80 e0e2      	LDI  R30,LOW(2)
008b81 940e d747 	CALL SUBOPT_0x2F6
008b83 940e d753 	CALL SUBOPT_0x2F8
008b85 940e d758 	CALL SUBOPT_0x2F9
008b87 c077      	RJMP _0x2C0070
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0071:
008b88 30e2      	CPI  R30,LOW(0x2)
008b89 e0a0      	LDI  R26,HIGH(0x2)
008b8a 07fa      	CPC  R31,R26
008b8b f449      	BRNE _0x2C0072
008b8c 940e d52e 	CALL SUBOPT_0x2C8
008b8e f41c      	BRGE _0x2C0073
008b8f e0e1      	LDI  R30,LOW(1)
008b90 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0073:
008b92 940e d535 	CALL SUBOPT_0x2C9
008b94 c06a      	RJMP _0x2C0070
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0072:
008b95 30e3      	CPI  R30,LOW(0x3)
008b96 e0a0      	LDI  R26,HIGH(0x3)
008b97 07fa      	CPC  R31,R26
008b98 f451      	BRNE _0x2C0074
008b99 940e d542 	CALL SUBOPT_0x2CA
008b9b 30a2      	CPI  R26,LOW(0x2)
008b9c f01c      	BRLT _0x2C0075
008b9d e0e0      	LDI  R30,LOW(0)
008b9e 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0075:
008ba0 940e d535 	CALL SUBOPT_0x2C9
008ba2 c05c      	RJMP _0x2C0070
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 _0x2C0074:
008ba3 30e4      	CPI  R30,LOW(0x4)
008ba4 e0a0      	LDI  R26,HIGH(0x4)
008ba5 07fa      	CPC  R31,R26
008ba6 f011      	BREQ PC+3
008ba7 940c 8bff 	JMP _0x2C0070
008ba9 91e0 1a47 	LDS  R30,_cursor_S0160000000
008bab 30e0      	CPI  R30,0
008bac f561      	BRNE _0x2C0077
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
008bad e0e8      	LDI  R30,LOW(8)
008bae 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                +
008bb0 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
008bb2 93e0 1a86 	STS  _devEn_S0160000000,R30
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                +
008bb4 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
008bb6 93e0 1a87 	STS  _almEn_S0160000000,R30
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                +
008bb8 ebe4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 488 ) )
008bb9 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 488 ) )
008bba e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 488 ) )
008bbb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 488 ) )
                 	__POINTD1FN _0x2C0000,488
008bbc 940e d761 	CALL SUBOPT_0x2FA
008bbe 91e0 1a87 	LDS  R30,_almEn_S0160000000
008bc0 940e d13b 	CALL SUBOPT_0x239
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
008bc2 940e d767 	CALL SUBOPT_0x2FB
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                +
008bc4 eee0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 532 ) )
008bc5 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 532 ) )
008bc6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 532 ) )
008bc7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 532 ) )
                 	__POINTD1FN _0x2C0000,532
008bc8 940e d761 	CALL SUBOPT_0x2FA
008bca 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                +
008bcc eee7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 539 ) )
008bcd e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 539 ) )
008bce e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 539 ) )
008bcf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 539 ) )
                 	__POINTD1FN _0x2C0000,539
008bd0 940e e400 	CALL __PUTPARD1
008bd2 91e0 1a87 	LDS  R30,_almEn_S0160000000
008bd4 940e c525 	CALL SUBOPT_0x65
008bd6 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
008bd8 c026      	RJMP _0x2C0078
                 _0x2C0077:
008bd9 91a0 1a47 	LDS  R26,_cursor_S0160000000
008bdb 30a1      	CPI  R26,LOW(0x1)
008bdc f4d9      	BRNE _0x2C0079
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
008bdd e0e9      	LDI  R30,LOW(9)
008bde 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                +
008be0 eeee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008be1 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008be2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008be3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008be4 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 0146                                 for(i=0;i<12;i++){
                +
008be6 e000     +LDI R16 , LOW ( 0 )
008be7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C007B:
                +
008be8 300c     +CPI R16 , LOW ( 12 )
008be9 e0e0     +LDI R30 , HIGH ( 12 )
008bea 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008beb f45c      	BRGE _0x2C007C
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
008bec 940e d76c 	CALL SUBOPT_0x2FC
008bee e5a6      	LDI  R26,LOW(_setIp_S0160000000)
008bef e1ba      	LDI  R27,HIGH(_setIp_S0160000000)
008bf0 940e d774 	CALL SUBOPT_0x2FD
008bf2 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0148                                 }
                +
008bf4 5f0f     +SUBI R16 , LOW ( - 1 )
008bf5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008bf6 cff1      	RJMP _0x2C007B
                 _0x2C007C:
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
008bf7 c007      	RJMP _0x2C007D
                 _0x2C0079:
                 ; 0016 014B                                 currentPage = P_MONITOR;
008bf8 e0e0      	LDI  R30,LOW(0)
008bf9 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
008bfb 940e d591 	CALL SUBOPT_0x2D2
008bfd 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 014E                             }
                 _0x2C007D:
                 _0x2C0078:
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 _0x2C0070:
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
008bff 940c 9800 	JMP  _0x2C007E
                 _0x2C006D:
008c01 91a0 14df 	LDS  R26,_currentPage
008c03 30a8      	CPI  R26,LOW(0x8)
008c04 f011      	BREQ PC+3
008c05 940c 8c99 	JMP _0x2C007F
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
008c07 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
008c09 f431      	BRNE _0x2C0083
008c0a e0e7      	LDI  R30,LOW(7)
008c0b 940e d55b 	CALL SUBOPT_0x2CC
008c0d 940e d779 	CALL SUBOPT_0x2FE
008c0f c087      	RJMP _0x2C0082
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0083:
008c10 30e2      	CPI  R30,LOW(0x2)
008c11 e0a0      	LDI  R26,HIGH(0x2)
008c12 07fa      	CPC  R31,R26
008c13 f449      	BRNE _0x2C0084
008c14 940e d52e 	CALL SUBOPT_0x2C8
008c16 f41c      	BRGE _0x2C0085
008c17 e0e2      	LDI  R30,LOW(2)
008c18 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0085:
008c1a 940e d767 	CALL SUBOPT_0x2FB
008c1c c07a      	RJMP _0x2C0082
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0084:
008c1d 30e3      	CPI  R30,LOW(0x3)
008c1e e0a0      	LDI  R26,HIGH(0x3)
008c1f 07fa      	CPC  R31,R26
008c20 f451      	BRNE _0x2C0086
008c21 940e d542 	CALL SUBOPT_0x2CA
008c23 30a3      	CPI  R26,LOW(0x3)
008c24 f01c      	BRLT _0x2C0087
008c25 e0e0      	LDI  R30,LOW(0)
008c26 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0087:
008c28 940e d767 	CALL SUBOPT_0x2FB
008c2a c06c      	RJMP _0x2C0082
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0086:
008c2b 30e4      	CPI  R30,LOW(0x4)
008c2c e0a0      	LDI  R26,HIGH(0x4)
008c2d 07fa      	CPC  R31,R26
008c2e f011      	BREQ PC+3
008c2f 940c 8c97 	JMP _0x2C0082
008c31 91e0 1a47 	LDS  R30,_cursor_S0160000000
008c33 30e0      	CPI  R30,0
008c34 f4c9      	BRNE _0x2C0089
                 ; 0016 0159                                 devEn       = !devEn;
008c35 91e0 1a86 	LDS  R30,_devEn_S0160000000
008c37 940e e2ec 	CALL __LNEGB1
008c39 93e0 1a86 	STS  _devEn_S0160000000,R30
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                +
008c3b e0e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 564 ) )
008c3c e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 564 ) )
008c3d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 564 ) )
008c3e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 564 ) )
                 	__POINTD1FN _0x2C0000,564
008c3f 940e d77e 	CALL SUBOPT_0x2FF
008c41 91e0 1a86 	LDS  R30,_devEn_S0160000000
008c43 940e d13b 	CALL SUBOPT_0x239
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
008c45 940e d787 	CALL SUBOPT_0x300
008c47 91e0 1a86 	LDS  R30,_devEn_S0160000000
008c49 940e c525 	CALL SUBOPT_0x65
008c4b 940e d354 	CALL SUBOPT_0x289
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
008c4d c049      	RJMP _0x2C008A
                 _0x2C0089:
008c4e 91a0 1a47 	LDS  R26,_cursor_S0160000000
008c50 30a1      	CPI  R26,LOW(0x1)
008c51 f4c9      	BRNE _0x2C008B
                 ; 0016 015E                                 almEn       = !almEn;
008c52 91e0 1a87 	LDS  R30,_almEn_S0160000000
008c54 940e e2ec 	CALL __LNEGB1
008c56 93e0 1a87 	STS  _almEn_S0160000000,R30
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                +
008c58 e2e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 600 ) )
008c59 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 600 ) )
008c5a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 600 ) )
008c5b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 600 ) )
                 	__POINTD1FN _0x2C0000,600
008c5c 940e d77e 	CALL SUBOPT_0x2FF
008c5e 91e0 1a87 	LDS  R30,_almEn_S0160000000
008c60 940e d13b 	CALL SUBOPT_0x239
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
008c62 940e d787 	CALL SUBOPT_0x300
008c64 91e0 1a87 	LDS  R30,_almEn_S0160000000
008c66 940e c525 	CALL SUBOPT_0x65
008c68 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
008c6a c02c      	RJMP _0x2C008C
                 _0x2C008B:
008c6b 91a0 1a47 	LDS  R26,_cursor_S0160000000
008c6d 30a2      	CPI  R26,LOW(0x2)
008c6e f509      	BRNE _0x2C008D
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
008c6f 91e0 1a86 	LDS  R30,_devEn_S0160000000
                +
008c71 93e0 11b7+STS _operating_config + ( 1 ) , R30
                 	__PUTB1MN _operating_config,1
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
008c73 91e0 1a87 	LDS  R30,_almEn_S0160000000
                +
008c75 93e0 11b8+STS _operating_config + ( 2 ) , R30
                 	__PUTB1MN _operating_config,2
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
008c77 940e d78c 	CALL SUBOPT_0x301
                 ; 0016 0167                                 if(res < 0){
008c79 f452      	BRPL _0x2C008E
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008c7a 940e d793 	CALL SUBOPT_0x302
                 ; 0016 0169                                     currentPage = P_FAILED;
008c7c e2e5      	LDI  R30,LOW(37)
008c7d 940e d5a3 	CALL SUBOPT_0x2D4
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
008c7f 940e d799 	CALL SUBOPT_0x303
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
008c81 940e d7a0 	CALL SUBOPT_0x304
008c83 c007      	RJMP _0x2C02BC
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 _0x2C008E:
                 ; 0016 0170                                     currentPage = P_FINISH;
008c84 e2e4      	LDI  R30,LOW(36)
008c85 940e d5a3 	CALL SUBOPT_0x2D4
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
008c87 940e d799 	CALL SUBOPT_0x303
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
008c89 940e d7a5 	CALL SUBOPT_0x305
                 _0x2C02BC:
008c8b 940e e400 	CALL __PUTPARD1
008c8d 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
008c8f c007      	RJMP _0x2C0090
                 _0x2C008D:
                 ; 0016 0178                                 currentPage = P_MONITOR;
008c90 e0e0      	LDI  R30,LOW(0)
008c91 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
008c93 940e d591 	CALL SUBOPT_0x2D2
008c95 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 017B                             }
                 _0x2C0090:
                 _0x2C008C:
                 _0x2C008A:
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 _0x2C0082:
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
008c97 940c 9800 	JMP  _0x2C0091
                 _0x2C007F:
008c99 91a0 14df 	LDS  R26,_currentPage
008c9b 30a9      	CPI  R26,LOW(0x9)
008c9c f011      	BREQ PC+3
008c9d 940c 8d12 	JMP _0x2C0092
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
008c9f 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
008ca1 f431      	BRNE _0x2C0096
008ca2 e0e7      	LDI  R30,LOW(7)
008ca3 940e d747 	CALL SUBOPT_0x2F6
008ca5 940e d779 	CALL SUBOPT_0x2FE
008ca7 c068      	RJMP _0x2C0095
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C0096:
008ca8 30e2      	CPI  R30,LOW(0x2)
008ca9 e0a0      	LDI  R26,HIGH(0x2)
008caa 07fa      	CPC  R31,R26
008cab f451      	BRNE _0x2C0097
008cac 940e d542 	CALL SUBOPT_0x2CA
008cae 30ad      	CPI  R26,LOW(0xD)
008caf f01c      	BRLT _0x2C0098
008cb0 e0e0      	LDI  R30,LOW(0)
008cb1 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0098:
008cb3 940e d7aa 	CALL SUBOPT_0x306
008cb5 c05a      	RJMP _0x2C0095
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C0097:
008cb6 30e3      	CPI  R30,LOW(0x3)
008cb7 e0a0      	LDI  R26,HIGH(0x3)
008cb8 07fa      	CPC  R31,R26
008cb9 f449      	BRNE _0x2C0099
008cba 940e d52e 	CALL SUBOPT_0x2C8
008cbc f41c      	BRGE _0x2C009A
008cbd e0ec      	LDI  R30,LOW(12)
008cbe 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C009A:
008cc0 940e d7aa 	CALL SUBOPT_0x306
008cc2 c04d      	RJMP _0x2C0095
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 _0x2C0099:
008cc3 30e4      	CPI  R30,LOW(0x4)
008cc4 e0a0      	LDI  R26,HIGH(0x4)
008cc5 07fa      	CPC  R31,R26
008cc6 f011      	BREQ PC+3
008cc7 940c 8d10 	JMP _0x2C0095
008cc9 91a0 1a47 	LDS  R26,_cursor_S0160000000
008ccb 30ac      	CPI  R26,LOW(0xC)
008ccc f4f1      	BRNE _0x2C009C
                 ; 0016 0186                                 cursor = 0;
008ccd e0e0      	LDI  R30,LOW(0)
008cce 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
008cd0 e0ea      	LDI  R30,LOW(10)
008cd1 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0188                                 printOLED("SM");
                +
008cd3 e8e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008cd4 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008cd5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008cd6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008cd7 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 0189                                 for(i=0;i<12;i++){
                +
008cd9 e000     +LDI R16 , LOW ( 0 )
008cda e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C009E:
                +
008cdb 300c     +CPI R16 , LOW ( 12 )
008cdc e0e0     +LDI R30 , HIGH ( 12 )
008cdd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008cde f45c      	BRGE _0x2C009F
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
008cdf 940e d76c 	CALL SUBOPT_0x2FC
008ce1 e6a2      	LDI  R26,LOW(_setMask_S0160000000)
008ce2 e1ba      	LDI  R27,HIGH(_setMask_S0160000000)
008ce3 940e d774 	CALL SUBOPT_0x2FD
008ce5 940e d354 	CALL SUBOPT_0x289
                 ; 0016 018B                                 }
                +
008ce7 5f0f     +SUBI R16 , LOW ( - 1 )
008ce8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008ce9 cff1      	RJMP _0x2C009E
                 _0x2C009F:
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
008cea c025      	RJMP _0x2C00A0
                 _0x2C009C:
008ceb 91a0 1a47 	LDS  R26,_cursor_S0160000000
008ced 30ac      	CPI  R26,LOW(0xC)
008cee f4d4      	BRGE _0x2C00A1
                 ; 0016 018E                                 if((cursor%3) == 0){
008cef 940e d7af 	CALL SUBOPT_0x307
008cf1 f439      	BRNE _0x2C00A2
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
008cf2 940e d7ba 	CALL SUBOPT_0x308
008cf4 30e3      	CPI  R30,LOW(0x3)
008cf5 f010      	BRLO _0x2C00A3
008cf6 940e d7c3 	CALL SUBOPT_0x309
                 ; 0016 0190                                 }
                 _0x2C00A3:
                 ; 0016 0191                                 else{
008cf8 c006      	RJMP _0x2C00A4
                 _0x2C00A2:
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
008cf9 940e d7ba 	CALL SUBOPT_0x308
008cfb 30ea      	CPI  R30,LOW(0xA)
008cfc f010      	BRLO _0x2C00A5
008cfd 940e d7c3 	CALL SUBOPT_0x309
                 ; 0016 0193                                 }
                 _0x2C00A5:
                 _0x2C00A4:
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
008cff 940e d7cb 	CALL SUBOPT_0x30A
008d01 5aea      	SUBI R30,LOW(-_setIp_S0160000000)
008d02 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
008d03 81e0      	LD   R30,Z
008d04 940e c525 	CALL SUBOPT_0x65
008d06 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
008d08 c007      	RJMP _0x2C00A6
                 _0x2C00A1:
                 ; 0016 0198                                 currentPage = P_MONITOR;
008d09 e0e0      	LDI  R30,LOW(0)
008d0a 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
008d0c 940e d591 	CALL SUBOPT_0x2D2
008d0e 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 019B                             }
                 _0x2C00A6:
                 _0x2C00A0:
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 _0x2C0095:
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
008d10 940c 9800 	JMP  _0x2C00A7
                 _0x2C0092:
008d12 91a0 14df 	LDS  R26,_currentPage
008d14 30aa      	CPI  R26,LOW(0xA)
008d15 f011      	BREQ PC+3
008d16 940c 8d8f 	JMP _0x2C00A8
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
008d18 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
008d1a f441      	BRNE _0x2C00AC
008d1b e0e9      	LDI  R30,LOW(9)
008d1c 940e d55b 	CALL SUBOPT_0x2CC
                +
008d1e eeee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008d1f e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008d20 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008d21 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008d22 c066      	RJMP _0x2C02BD
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AC:
008d23 30e2      	CPI  R30,LOW(0x2)
008d24 e0a0      	LDI  R26,HIGH(0x2)
008d25 07fa      	CPC  R31,R26
008d26 f451      	BRNE _0x2C00AD
008d27 940e d542 	CALL SUBOPT_0x2CA
008d29 30ad      	CPI  R26,LOW(0xD)
008d2a f01c      	BRLT _0x2C00AE
008d2b e0e0      	LDI  R30,LOW(0)
008d2c 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00AE:
008d2e 940e d7aa 	CALL SUBOPT_0x306
008d30 c05c      	RJMP _0x2C00AB
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AD:
008d31 30e3      	CPI  R30,LOW(0x3)
008d32 e0a0      	LDI  R26,HIGH(0x3)
008d33 07fa      	CPC  R31,R26
008d34 f449      	BRNE _0x2C00AF
008d35 940e d52e 	CALL SUBOPT_0x2C8
008d37 f41c      	BRGE _0x2C00B0
008d38 e0ec      	LDI  R30,LOW(12)
008d39 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00B0:
008d3b 940e d7aa 	CALL SUBOPT_0x306
008d3d c04f      	RJMP _0x2C00AB
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00AF:
008d3e 30e4      	CPI  R30,LOW(0x4)
008d3f e0a0      	LDI  R26,HIGH(0x4)
008d40 07fa      	CPC  R31,R26
008d41 f011      	BREQ PC+3
008d42 940c 8d8d 	JMP _0x2C00AB
008d44 91a0 1a47 	LDS  R26,_cursor_S0160000000
008d46 30ac      	CPI  R26,LOW(0xC)
008d47 f4f1      	BRNE _0x2C00B2
                 ; 0016 01A6                                 cursor = 0;
008d48 e0e0      	LDI  R30,LOW(0)
008d49 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
008d4b e0eb      	LDI  R30,LOW(11)
008d4c 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01A8                                 printOLED("SG");
                +
008d4e e8e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008d4f e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008d50 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008d51 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008d52 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                +
008d54 e000     +LDI R16 , LOW ( 0 )
008d55 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00B4:
                +
008d56 300c     +CPI R16 , LOW ( 12 )
008d57 e0e0     +LDI R30 , HIGH ( 12 )
008d58 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008d59 f45c      	BRGE _0x2C00B5
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
008d5a 940e d76c 	CALL SUBOPT_0x2FC
008d5c e6ae      	LDI  R26,LOW(_setGw_S0160000000)
008d5d e1ba      	LDI  R27,HIGH(_setGw_S0160000000)
008d5e 940e d774 	CALL SUBOPT_0x2FD
008d60 940e d354 	CALL SUBOPT_0x289
                 ; 0016 01AB                                 }
                +
008d62 5f0f     +SUBI R16 , LOW ( - 1 )
008d63 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008d64 cff1      	RJMP _0x2C00B4
                 _0x2C00B5:
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
008d65 c027      	RJMP _0x2C00B6
                 _0x2C00B2:
008d66 91a0 1a47 	LDS  R26,_cursor_S0160000000
008d68 30ac      	CPI  R26,LOW(0xC)
008d69 f4d4      	BRGE _0x2C00B7
                 ; 0016 01AE                                 if((cursor%3) == 0){
008d6a 940e d7af 	CALL SUBOPT_0x307
008d6c f439      	BRNE _0x2C00B8
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
008d6d 940e d7db 	CALL SUBOPT_0x30B
008d6f 30e3      	CPI  R30,LOW(0x3)
008d70 f010      	BRLO _0x2C00B9
008d71 940e d7e4 	CALL SUBOPT_0x30C
                 ; 0016 01B0                                 }
                 _0x2C00B9:
                 ; 0016 01B1                                 else{
008d73 c006      	RJMP _0x2C00BA
                 _0x2C00B8:
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
008d74 940e d7db 	CALL SUBOPT_0x30B
008d76 30ea      	CPI  R30,LOW(0xA)
008d77 f010      	BRLO _0x2C00BB
008d78 940e d7e4 	CALL SUBOPT_0x30C
                 ; 0016 01B3                                 }
                 _0x2C00BB:
                 _0x2C00BA:
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
008d7a 940e d7cb 	CALL SUBOPT_0x30A
008d7c 59ee      	SUBI R30,LOW(-_setMask_S0160000000)
008d7d 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
008d7e 81e0      	LD   R30,Z
008d7f 940e c525 	CALL SUBOPT_0x65
008d81 940e d354 	CALL SUBOPT_0x289
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
008d83 c009      	RJMP _0x2C00BC
                 _0x2C00B7:
                 ; 0016 01B8                                 currentPage = P_MONITOR;
008d84 e0e0      	LDI  R30,LOW(0)
008d85 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
008d87 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02BD:
008d89 940e e400 	CALL __PUTPARD1
008d8b 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 01BB                             }
                 _0x2C00BC:
                 _0x2C00B6:
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 _0x2C00AB:
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
008d8d 940c 9800 	JMP  _0x2C00BD
                 _0x2C00A8:
008d8f 91a0 14df 	LDS  R26,_currentPage
008d91 30ab      	CPI  R26,LOW(0xB)
008d92 f011      	BREQ PC+3
008d93 940c 8e0c 	JMP _0x2C00BE
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
008d95 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
008d97 f441      	BRNE _0x2C00C2
008d98 e0ea      	LDI  R30,LOW(10)
008d99 940e d55b 	CALL SUBOPT_0x2CC
                +
008d9b e8e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008d9c e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008d9d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008d9e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008d9f c066      	RJMP _0x2C02BE
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C2:
008da0 30e2      	CPI  R30,LOW(0x2)
008da1 e0a0      	LDI  R26,HIGH(0x2)
008da2 07fa      	CPC  R31,R26
008da3 f451      	BRNE _0x2C00C3
008da4 940e d542 	CALL SUBOPT_0x2CA
008da6 30ad      	CPI  R26,LOW(0xD)
008da7 f01c      	BRLT _0x2C00C4
008da8 e0e0      	LDI  R30,LOW(0)
008da9 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00C4:
008dab 940e d7aa 	CALL SUBOPT_0x306
008dad c05c      	RJMP _0x2C00C1
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C3:
008dae 30e3      	CPI  R30,LOW(0x3)
008daf e0a0      	LDI  R26,HIGH(0x3)
008db0 07fa      	CPC  R31,R26
008db1 f449      	BRNE _0x2C00C5
008db2 940e d52e 	CALL SUBOPT_0x2C8
008db4 f41c      	BRGE _0x2C00C6
008db5 e0ec      	LDI  R30,LOW(12)
008db6 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00C6:
008db8 940e d7aa 	CALL SUBOPT_0x306
008dba c04f      	RJMP _0x2C00C1
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00C5:
008dbb 30e4      	CPI  R30,LOW(0x4)
008dbc e0a0      	LDI  R26,HIGH(0x4)
008dbd 07fa      	CPC  R31,R26
008dbe f011      	BREQ PC+3
008dbf 940c 8e0a 	JMP _0x2C00C1
008dc1 91a0 1a47 	LDS  R26,_cursor_S0160000000
008dc3 30ac      	CPI  R26,LOW(0xC)
008dc4 f4f1      	BRNE _0x2C00C8
                 ; 0016 01C6                                 cursor = 0;
008dc5 e0e0      	LDI  R30,LOW(0)
008dc6 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
008dc8 e0ec      	LDI  R30,LOW(12)
008dc9 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01C8                                 printOLED("SS");
                +
008dcb e8ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 702 ) )
008dcc e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 702 ) )
008dcd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 702 ) )
008dce e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 702 ) )
                 	__POINTD1FN _0x2C0000,702
008dcf 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                +
008dd1 e000     +LDI R16 , LOW ( 0 )
008dd2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00CA:
                +
008dd3 300c     +CPI R16 , LOW ( 12 )
008dd4 e0e0     +LDI R30 , HIGH ( 12 )
008dd5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008dd6 f45c      	BRGE _0x2C00CB
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
008dd7 940e d76c 	CALL SUBOPT_0x2FC
008dd9 e7aa      	LDI  R26,LOW(_setServer_S0160000000)
008dda e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
008ddb 940e d774 	CALL SUBOPT_0x2FD
008ddd 940e d354 	CALL SUBOPT_0x289
                 ; 0016 01CB                                 }
                +
008ddf 5f0f     +SUBI R16 , LOW ( - 1 )
008de0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008de1 cff1      	RJMP _0x2C00CA
                 _0x2C00CB:
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
008de2 c027      	RJMP _0x2C00CC
                 _0x2C00C8:
008de3 91a0 1a47 	LDS  R26,_cursor_S0160000000
008de5 30ac      	CPI  R26,LOW(0xC)
008de6 f4d4      	BRGE _0x2C00CD
                 ; 0016 01CE                                 if((cursor%3) == 0){
008de7 940e d7af 	CALL SUBOPT_0x307
008de9 f439      	BRNE _0x2C00CE
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
008dea 940e d7ec 	CALL SUBOPT_0x30D
008dec 30e3      	CPI  R30,LOW(0x3)
008ded f010      	BRLO _0x2C00CF
008dee 940e d7f5 	CALL SUBOPT_0x30E
                 ; 0016 01D0                                 }
                 _0x2C00CF:
                 ; 0016 01D1                                 else{
008df0 c006      	RJMP _0x2C00D0
                 _0x2C00CE:
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
008df1 940e d7ec 	CALL SUBOPT_0x30D
008df3 30ea      	CPI  R30,LOW(0xA)
008df4 f010      	BRLO _0x2C00D1
008df5 940e d7f5 	CALL SUBOPT_0x30E
                 ; 0016 01D3                                 }
                 _0x2C00D1:
                 _0x2C00D0:
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
008df7 940e d7cb 	CALL SUBOPT_0x30A
008df9 59e2      	SUBI R30,LOW(-_setGw_S0160000000)
008dfa 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
008dfb 81e0      	LD   R30,Z
008dfc 940e c525 	CALL SUBOPT_0x65
008dfe 940e d354 	CALL SUBOPT_0x289
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
008e00 c009      	RJMP _0x2C00D2
                 _0x2C00CD:
                 ; 0016 01D8                                 currentPage = P_MONITOR;
008e01 e0e0      	LDI  R30,LOW(0)
008e02 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
008e04 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02BE:
008e06 940e e400 	CALL __PUTPARD1
008e08 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 01DB                             }
                 _0x2C00D2:
                 _0x2C00CC:
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 _0x2C00C1:
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
008e0a 940c 9800 	JMP  _0x2C00D3
                 _0x2C00BE:
008e0c 91a0 14df 	LDS  R26,_currentPage
008e0e 30ac      	CPI  R26,LOW(0xC)
008e0f f011      	BREQ PC+3
008e10 940c 8e98 	JMP _0x2C00D4
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
008e12 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
008e14 f441      	BRNE _0x2C00D8
008e15 e0eb      	LDI  R30,LOW(11)
008e16 940e d55b 	CALL SUBOPT_0x2CC
                +
008e18 e8e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008e19 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008e1a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008e1b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008e1c c075      	RJMP _0x2C02BF
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D8:
008e1d 30e2      	CPI  R30,LOW(0x2)
008e1e e0a0      	LDI  R26,HIGH(0x2)
008e1f 07fa      	CPC  R31,R26
008e20 f451      	BRNE _0x2C00D9
008e21 940e d542 	CALL SUBOPT_0x2CA
008e23 30ad      	CPI  R26,LOW(0xD)
008e24 f01c      	BRLT _0x2C00DA
008e25 e0e0      	LDI  R30,LOW(0)
008e26 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00DA:
008e28 940e d7aa 	CALL SUBOPT_0x306
008e2a c06b      	RJMP _0x2C00D7
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D9:
008e2b 30e3      	CPI  R30,LOW(0x3)
008e2c e0a0      	LDI  R26,HIGH(0x3)
008e2d 07fa      	CPC  R31,R26
008e2e f449      	BRNE _0x2C00DB
008e2f 940e d52e 	CALL SUBOPT_0x2C8
008e31 f41c      	BRGE _0x2C00DC
008e32 e0ec      	LDI  R30,LOW(12)
008e33 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00DC:
008e35 940e d7aa 	CALL SUBOPT_0x306
008e37 c05e      	RJMP _0x2C00D7
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00DB:
008e38 30e4      	CPI  R30,LOW(0x4)
008e39 e0a0      	LDI  R26,HIGH(0x4)
008e3a 07fa      	CPC  R31,R26
008e3b f011      	BREQ PC+3
008e3c 940c 8e96 	JMP _0x2C00D7
008e3e 91a0 1a47 	LDS  R26,_cursor_S0160000000
008e40 30ac      	CPI  R26,LOW(0xC)
008e41 f569      	BRNE _0x2C00DE
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
008e42 e0ed      	LDI  R30,LOW(13)
008e43 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008e45 e8ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 705 ) )
008e46 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 705 ) )
008e47 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 705 ) )
008e48 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 705 ) )
                 	__POINTD1FN _0x2C0000,705
008e49 940e d619 	CALL SUBOPT_0x2E4
008e4b 940e d62d 	CALL SUBOPT_0x2E5
008e4d 940e d63f 	CALL SUBOPT_0x2E6
008e4f 940e d651 	CALL SUBOPT_0x2E7
008e51 940e d663 	CALL SUBOPT_0x2E8
008e53 940e d675 	CALL SUBOPT_0x2E9
008e55 940e d687 	CALL SUBOPT_0x2EA
008e57 940e d699 	CALL SUBOPT_0x2EB
008e59 940e d6ab 	CALL SUBOPT_0x2EC
008e5b 940e d6bd 	CALL SUBOPT_0x2ED
008e5d 940e d6cf 	CALL SUBOPT_0x2EE
008e5f 940e d6e1 	CALL SUBOPT_0x2EF
008e61 940e d6f3 	CALL SUBOPT_0x2F0
008e63 940e d705 	CALL SUBOPT_0x2F1
008e65 940e d717 	CALL SUBOPT_0x2F2
008e67 940e d729 	CALL SUBOPT_0x2F3
008e69 e480      	LDI  R24,64
008e6a 940e 8079 	CALL _printOLED
008e6c 96ef      	ADIW R28,63
008e6d 9625      	ADIW R28,5
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
008e6e c027      	RJMP _0x2C00DF
                 _0x2C00DE:
008e6f 91a0 1a47 	LDS  R26,_cursor_S0160000000
008e71 30ac      	CPI  R26,LOW(0xC)
008e72 f4d4      	BRGE _0x2C00E0
                 ; 0016 01FB                                 if((cursor%3) == 0){
008e73 940e d7af 	CALL SUBOPT_0x307
008e75 f439      	BRNE _0x2C00E1
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
008e76 940e d7fd 	CALL SUBOPT_0x30F
008e78 30e3      	CPI  R30,LOW(0x3)
008e79 f010      	BRLO _0x2C00E2
008e7a 940e d806 	CALL SUBOPT_0x310
                 ; 0016 01FD                                 }
                 _0x2C00E2:
                 ; 0016 01FE                                 else{
008e7c c006      	RJMP _0x2C00E3
                 _0x2C00E1:
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
008e7d 940e d7fd 	CALL SUBOPT_0x30F
008e7f 30ea      	CPI  R30,LOW(0xA)
008e80 f010      	BRLO _0x2C00E4
008e81 940e d806 	CALL SUBOPT_0x310
                 ; 0016 0200                                 }
                 _0x2C00E4:
                 _0x2C00E3:
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
008e83 940e d7cb 	CALL SUBOPT_0x30A
008e85 58e6      	SUBI R30,LOW(-_setServer_S0160000000)
008e86 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
008e87 81e0      	LD   R30,Z
008e88 940e c525 	CALL SUBOPT_0x65
008e8a 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
008e8c c009      	RJMP _0x2C00E5
                 _0x2C00E0:
                 ; 0016 0205                                 currentPage = P_MONITOR;
008e8d e0e0      	LDI  R30,LOW(0)
008e8e 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
008e90 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02BF:
008e92 940e e400 	CALL __PUTPARD1
008e94 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 0208                             }
                 _0x2C00E5:
                 _0x2C00DF:
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 _0x2C00D7:
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
008e96 940c 9800 	JMP  _0x2C00E6
                 _0x2C00D4:
008e98 91a0 14df 	LDS  R26,_currentPage
008e9a 30ad      	CPI  R26,LOW(0xD)
008e9b f571      	BRNE _0x2C00E7
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
008e9c 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
008e9e f431      	BRNE _0x2C00EB
008e9f e0e7      	LDI  R30,LOW(7)
008ea0 940e d747 	CALL SUBOPT_0x2F6
008ea2 940e d779 	CALL SUBOPT_0x2FE
008ea4 c023      	RJMP _0x2C00EA
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 _0x2C00EB:
008ea5 30e2      	CPI  R30,LOW(0x2)
008ea6 e0a0      	LDI  R26,HIGH(0x2)
008ea7 07fa      	CPC  R31,R26
008ea8 f0f9      	BREQ _0x2C00EA
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
008ea9 30e3      	CPI  R30,LOW(0x3)
008eaa e0a0      	LDI  R26,HIGH(0x3)
008eab 07fa      	CPC  R31,R26
008eac f0d9      	BREQ _0x2C00EA
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
008ead 30e4      	CPI  R30,LOW(0x4)
008eae e0a0      	LDI  R26,HIGH(0x4)
008eaf 07fa      	CPC  R31,R26
008eb0 f4b9      	BRNE _0x2C00EA
008eb1 e2e4      	LDI  R30,LOW(36)
008eb2 940e d5a3 	CALL SUBOPT_0x2D4
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
008eb4 e0ed      	LDI  R30,LOW(13)
008eb5 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
008eb7 940e d60a 	CALL SUBOPT_0x2E3
008eb9 940e 5f63 	CALL _ETH_setConfig
008ebb 01af      	MOVW R20,R30
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
008ebc 2355      	TST  R21
008ebd f432      	BRPL _0x2C00EF
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                +
008ebe ece0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 756 ) )
008ebf e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 756 ) )
008ec0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 756 ) )
008ec1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 756 ) )
                 	__POINTD1FN _0x2C0000,756
008ec2 940e c274 	CALL SUBOPT_0x3
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 _0x2C00EF:
008ec4 940e d7a5 	CALL SUBOPT_0x305
008ec6 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 _0x2C00EA:
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
008ec8 940c 9800 	JMP  _0x2C00F0
                 _0x2C00E7:
008eca 91a0 14df 	LDS  R26,_currentPage
008ecc 30ae      	CPI  R26,LOW(0xE)
008ecd f011      	BREQ PC+3
008ece 940c 8f1f 	JMP _0x2C00F1
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
008ed0 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
008ed2 f431      	BRNE _0x2C00F5
008ed3 e0e1      	LDI  R30,LOW(1)
008ed4 940e d747 	CALL SUBOPT_0x2F6
008ed6 940e d814 	CALL SUBOPT_0x312
008ed8 c044      	RJMP _0x2C00F4
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F5:
008ed9 30e2      	CPI  R30,LOW(0x2)
008eda e0a0      	LDI  R26,HIGH(0x2)
008edb 07fa      	CPC  R31,R26
008edc f449      	BRNE _0x2C00F6
008edd 940e d52e 	CALL SUBOPT_0x2C8
008edf f41c      	BRGE _0x2C00F7
008ee0 e0e1      	LDI  R30,LOW(1)
008ee1 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00F7:
008ee3 940e d535 	CALL SUBOPT_0x2C9
008ee5 c037      	RJMP _0x2C00F4
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F6:
008ee6 30e3      	CPI  R30,LOW(0x3)
008ee7 e0a0      	LDI  R26,HIGH(0x3)
008ee8 07fa      	CPC  R31,R26
008ee9 f451      	BRNE _0x2C00F8
008eea 940e d542 	CALL SUBOPT_0x2CA
008eec 30a2      	CPI  R26,LOW(0x2)
008eed f01c      	BRLT _0x2C00F9
008eee e0e0      	LDI  R30,LOW(0)
008eef 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C00F9:
008ef1 940e d535 	CALL SUBOPT_0x2C9
008ef3 c029      	RJMP _0x2C00F4
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 _0x2C00F8:
008ef4 30e4      	CPI  R30,LOW(0x4)
008ef5 e0a0      	LDI  R26,HIGH(0x4)
008ef6 07fa      	CPC  R31,R26
008ef7 f529      	BRNE _0x2C00F4
008ef8 91e0 1a47 	LDS  R30,_cursor_S0160000000
008efa 30e0      	CPI  R30,0
008efb f431      	BRNE _0x2C00FB
                 ; 0016 0229                                 currentPage = P_PRB_V;
008efc e0ef      	LDI  R30,LOW(15)
008efd 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
008eff 940e d819 	CALL SUBOPT_0x313
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
008f01 c01b      	RJMP _0x2C00FC
                 _0x2C00FB:
008f02 91a0 1a47 	LDS  R26,_cursor_S0160000000
008f04 30a1      	CPI  R26,LOW(0x1)
008f05 f471      	BRNE _0x2C00FD
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
008f06 e2e1      	LDI  R30,LOW(33)
008f07 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
008f09 e1e0      	LDI  R30,LOW(16)
008f0a 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
008f0c e0ee      	LDI  R30,LOW(14)
008f0d 940e d581 	CALL SUBOPT_0x2D0
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
008f0f 940e d58b 	CALL SUBOPT_0x2D1
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
008f11 940e d5a9 	CALL SUBOPT_0x2D5
008f13 c005      	RJMP _0x2C02C0
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 _0x2C00FD:
                 ; 0016 0237                                 currentPage = P_MONITOR;
008f14 e0e0      	LDI  R30,LOW(0)
008f15 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
008f17 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02C0:
008f19 940e e400 	CALL __PUTPARD1
008f1b 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 023A                             }
                 _0x2C00FC:
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 _0x2C00F4:
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
008f1d 940c 9800 	JMP  _0x2C00FF
                 _0x2C00F1:
008f1f 91a0 14df 	LDS  R26,_currentPage
008f21 30af      	CPI  R26,LOW(0xF)
008f22 f549      	BRNE _0x2C0100
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
008f23 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
008f25 f0f9      	BREQ _0x2C02C1
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
008f26 30e2      	CPI  R30,LOW(0x2)
008f27 e0a0      	LDI  R26,HIGH(0x2)
008f28 07fa      	CPC  R31,R26
008f29 f451      	BRNE _0x2C0105
008f2a 940e d542 	CALL SUBOPT_0x2CA
008f2c 30a5      	CPI  R26,LOW(0x5)
008f2d f01c      	BRLT _0x2C0106
008f2e e0e0      	LDI  R30,LOW(0)
008f2f 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0106:
008f31 940e d819 	CALL SUBOPT_0x313
008f33 c016      	RJMP _0x2C0103
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 _0x2C0105:
008f34 30e3      	CPI  R30,LOW(0x3)
008f35 e0a0      	LDI  R26,HIGH(0x3)
008f36 07fa      	CPC  R31,R26
008f37 f449      	BRNE _0x2C0107
008f38 940e d52e 	CALL SUBOPT_0x2C8
008f3a f41c      	BRGE _0x2C0108
008f3b e0e4      	LDI  R30,LOW(4)
008f3c 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0108:
008f3e 940e d819 	CALL SUBOPT_0x313
008f40 c009      	RJMP _0x2C0103
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 _0x2C0107:
008f41 30e4      	CPI  R30,LOW(0x4)
008f42 e0a0      	LDI  R26,HIGH(0x4)
008f43 07fa      	CPC  R31,R26
008f44 f429      	BRNE _0x2C0103
                 _0x2C02C1:
008f45 e0ee      	LDI  R30,LOW(14)
008f46 940e d55b 	CALL SUBOPT_0x2CC
008f48 940e d561 	CALL SUBOPT_0x2CD
                 ; 0016 0245         }
                 _0x2C0103:
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
008f4a 940c 9800 	JMP  _0x2C010A
                 _0x2C0100:
008f4c 91a0 14df 	LDS  R26,_currentPage
008f4e 31a0      	CPI  R26,LOW(0x10)
008f4f f011      	BREQ PC+3
008f50 940c 8fd5 	JMP _0x2C010B
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
008f52 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
008f54 f431      	BRNE _0x2C010F
008f55 e0ee      	LDI  R30,LOW(14)
008f56 940e d747 	CALL SUBOPT_0x2F6
008f58 940e d561 	CALL SUBOPT_0x2CD
008f5a c078      	RJMP _0x2C010E
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C010F:
008f5b 30e2      	CPI  R30,LOW(0x2)
008f5c e0a0      	LDI  R26,HIGH(0x2)
008f5d 07fa      	CPC  R31,R26
008f5e f449      	BRNE _0x2C0110
008f5f 940e d52e 	CALL SUBOPT_0x2C8
008f61 f41c      	BRGE _0x2C0111
008f62 e0e5      	LDI  R30,LOW(5)
008f63 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0111:
008f65 940e d535 	CALL SUBOPT_0x2C9
008f67 c06b      	RJMP _0x2C010E
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0110:
008f68 30e3      	CPI  R30,LOW(0x3)
008f69 e0a0      	LDI  R26,HIGH(0x3)
008f6a 07fa      	CPC  R31,R26
008f6b f451      	BRNE _0x2C0112
008f6c 940e d542 	CALL SUBOPT_0x2CA
008f6e 30a6      	CPI  R26,LOW(0x6)
008f6f f01c      	BRLT _0x2C0113
008f70 e0e0      	LDI  R30,LOW(0)
008f71 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0113:
008f73 940e d535 	CALL SUBOPT_0x2C9
008f75 c05d      	RJMP _0x2C010E
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 _0x2C0112:
008f76 30e4      	CPI  R30,LOW(0x4)
008f77 e0a0      	LDI  R26,HIGH(0x4)
008f78 07fa      	CPC  R31,R26
008f79 f011      	BREQ PC+3
008f7a 940c 8fd3 	JMP _0x2C010E
008f7c 91a0 1a47 	LDS  R26,_cursor_S0160000000
008f7e 30a5      	CPI  R26,LOW(0x5)
008f7f f49c      	BRGE _0x2C0115
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
008f80 940e d820 	CALL SUBOPT_0x314
008f82 57a8      	SUBI R26,LOW(-_prbEn_S0160000000)
008f83 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
008f84 940e d824 	CALL SUBOPT_0x315
008f86 940e e2ec 	CALL __LNEGB1
008f88 940e d82b 	CALL SUBOPT_0x316
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
008f8a 940e d833 	CALL SUBOPT_0x317
008f8c 940e d824 	CALL SUBOPT_0x315
008f8e 940e c525 	CALL SUBOPT_0x65
008f90 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
008f92 c040      	RJMP _0x2C0116
                 _0x2C0115:
008f93 91a0 1a47 	LDS  R26,_cursor_S0160000000
008f95 30a5      	CPI  R26,LOW(0x5)
008f96 f5a9      	BRNE _0x2C0117
                 ; 0016 0252                                 currentPage = P_FINISH;
008f97 940e d83a 	CALL SUBOPT_0x318
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
008f99 e0e0      	LDI  R30,LOW(0)
008f9a 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
008f9c e000     +LDI R16 , LOW ( 0 )
008f9d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0119:
                +
008f9e 3005     +CPI R16 , LOW ( 5 )
008f9f e0e0     +LDI R30 , HIGH ( 5 )
008fa0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008fa1 f46c      	BRGE _0x2C011A
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
008fa2 940e d5e2 	CALL SUBOPT_0x2DD
008fa4 010f      	MOVW R0,R30
008fa5 e8a8      	LDI  R26,LOW(_prbEn_S0160000000)
008fa6 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
008fa7 0fa0      	ADD  R26,R16
008fa8 1fb1      	ADC  R27,R17
008fa9 91ec      	LD   R30,X
008faa 01d0      	MOVW R26,R0
008fab 93ec      	ST   X,R30
                 ; 0016 0257                                 }
                +
008fac 5f0f     +SUBI R16 , LOW ( - 1 )
008fad 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008fae cfef      	RJMP _0x2C0119
                 _0x2C011A:
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
008faf 940e d78c 	CALL SUBOPT_0x301
                 ; 0016 025A                                 if(res < 0){
008fb1 f472      	BRPL _0x2C011B
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008fb2 940e d793 	CALL SUBOPT_0x302
                 ; 0016 025C                                     currentPage = P_FAILED;
008fb4 e2e5      	LDI  R30,LOW(37)
008fb5 93e0 14df 	STS  _currentPage,R30
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
008fb7 e0ee      	LDI  R30,LOW(14)
008fb8 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
008fba e1e0      	LDI  R30,LOW(16)
008fbb 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
008fbd 940e d7a0 	CALL SUBOPT_0x304
008fbf c007      	RJMP _0x2C02C2
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 _0x2C011B:
                 ; 0016 0263                                     currentPage = P_FINISH;
008fc0 940e d83a 	CALL SUBOPT_0x318
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
008fc2 e1e0      	LDI  R30,LOW(16)
008fc3 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
008fc5 940e d7a5 	CALL SUBOPT_0x305
                 _0x2C02C2:
008fc7 940e e400 	CALL __PUTPARD1
008fc9 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
008fcb c007      	RJMP _0x2C011D
                 _0x2C0117:
                 ; 0016 026B                                 currentPage = P_MONITOR;
008fcc e0e0      	LDI  R30,LOW(0)
008fcd 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
008fcf 940e d591 	CALL SUBOPT_0x2D2
008fd1 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 026E                             }
                 _0x2C011D:
                 _0x2C0116:
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 _0x2C010E:
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
008fd3 940c 9800 	JMP  _0x2C011E
                 _0x2C010B:
008fd5 91a0 14df 	LDS  R26,_currentPage
008fd7 31a1      	CPI  R26,LOW(0x11)
008fd8 f011      	BREQ PC+3
008fd9 940c 9035 	JMP _0x2C011F
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
008fdb 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
008fdd f431      	BRNE _0x2C0123
008fde e0e1      	LDI  R30,LOW(1)
008fdf 940e d74d 	CALL SUBOPT_0x2F7
008fe1 940e d814 	CALL SUBOPT_0x312
008fe3 c050      	RJMP _0x2C0122
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0123:
008fe4 30e2      	CPI  R30,LOW(0x2)
008fe5 e0a0      	LDI  R26,HIGH(0x2)
008fe6 07fa      	CPC  R31,R26
008fe7 f449      	BRNE _0x2C0124
008fe8 940e d52e 	CALL SUBOPT_0x2C8
008fea f41c      	BRGE _0x2C0125
008feb e0e1      	LDI  R30,LOW(1)
008fec 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0125:
008fee 940e d535 	CALL SUBOPT_0x2C9
008ff0 c043      	RJMP _0x2C0122
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0124:
008ff1 30e3      	CPI  R30,LOW(0x3)
008ff2 e0a0      	LDI  R26,HIGH(0x3)
008ff3 07fa      	CPC  R31,R26
008ff4 f451      	BRNE _0x2C0126
008ff5 940e d542 	CALL SUBOPT_0x2CA
008ff7 30a2      	CPI  R26,LOW(0x2)
008ff8 f01c      	BRLT _0x2C0127
008ff9 e0e0      	LDI  R30,LOW(0)
008ffa 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0127:
008ffc 940e d535 	CALL SUBOPT_0x2C9
008ffe c035      	RJMP _0x2C0122
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 _0x2C0126:
008fff 30e4      	CPI  R30,LOW(0x4)
009000 e0a0      	LDI  R26,HIGH(0x4)
009001 07fa      	CPC  R31,R26
009002 f589      	BRNE _0x2C0122
009003 91e0 1a47 	LDS  R30,_cursor_S0160000000
009005 30e0      	CPI  R30,0
009006 f491      	BRNE _0x2C0129
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
009007 e1e2      	LDI  R30,LOW(18)
009008 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
00900a 91e0 148b 	LDS  R30,_muteMode
00900c 93e0 1a8d 	STS  _mute_S0160000000,R30
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
00900e 940e d841 	CALL SUBOPT_0x319
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
009010 940e d787 	CALL SUBOPT_0x300
009012 91e0 1a8d 	LDS  R30,_mute_S0160000000
009014 940e c525 	CALL SUBOPT_0x65
009016 940e d354 	CALL SUBOPT_0x289
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
009018 c01b      	RJMP _0x2C012A
                 _0x2C0129:
009019 91a0 1a47 	LDS  R26,_cursor_S0160000000
00901b 30a1      	CPI  R26,LOW(0x1)
00901c f471      	BRNE _0x2C012B
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
00901d e2e1      	LDI  R30,LOW(33)
00901e 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
009020 e1e3      	LDI  R30,LOW(19)
009021 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
009023 e1e1      	LDI  R30,LOW(17)
009024 940e d581 	CALL SUBOPT_0x2D0
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
009026 940e d58b 	CALL SUBOPT_0x2D1
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
009028 940e d5a9 	CALL SUBOPT_0x2D5
00902a c005      	RJMP _0x2C02C3
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 _0x2C012B:
                 ; 0016 0288                                 currentPage = P_MONITOR;
00902b e0e0      	LDI  R30,LOW(0)
00902c 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
00902e 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02C3:
009030 940e e400 	CALL __PUTPARD1
009032 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 028B                             }
                 _0x2C012A:
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 _0x2C0122:
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
009034 c7cb      	RJMP _0x2C012D
                 _0x2C011F:
009035 91a0 14df 	LDS  R26,_currentPage
009037 31a2      	CPI  R26,LOW(0x12)
009038 f011      	BREQ PC+3
009039 940c 9093 	JMP _0x2C012E
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
00903b 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
00903d f431      	BRNE _0x2C0132
00903e e1e1      	LDI  R30,LOW(17)
00903f 940e d55b 	CALL SUBOPT_0x2CC
009041 940e d56e 	CALL SUBOPT_0x2CE
009043 c04e      	RJMP _0x2C0131
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0132:
009044 30e2      	CPI  R30,LOW(0x2)
009045 e0a0      	LDI  R26,HIGH(0x2)
009046 07fa      	CPC  R31,R26
009047 f449      	BRNE _0x2C0133
009048 940e d52e 	CALL SUBOPT_0x2C8
00904a f41c      	BRGE _0x2C0134
00904b e0e1      	LDI  R30,LOW(1)
00904c 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0134:
00904e 940e d841 	CALL SUBOPT_0x319
009050 c041      	RJMP _0x2C0131
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0133:
009051 30e3      	CPI  R30,LOW(0x3)
009052 e0a0      	LDI  R26,HIGH(0x3)
009053 07fa      	CPC  R31,R26
009054 f451      	BRNE _0x2C0135
009055 940e d542 	CALL SUBOPT_0x2CA
009057 30a2      	CPI  R26,LOW(0x2)
009058 f01c      	BRLT _0x2C0136
009059 e0e0      	LDI  R30,LOW(0)
00905a 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0136:
00905c 940e d841 	CALL SUBOPT_0x319
00905e c033      	RJMP _0x2C0131
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0135:
00905f 30e4      	CPI  R30,LOW(0x4)
009060 e0a0      	LDI  R26,HIGH(0x4)
009061 07fa      	CPC  R31,R26
009062 f579      	BRNE _0x2C0131
009063 91e0 1a47 	LDS  R30,_cursor_S0160000000
009065 30e0      	CPI  R30,0
009066 f479      	BRNE _0x2C0138
                 ; 0016 0296                                 mute       = !mute;
009067 91e0 1a8d 	LDS  R30,_mute_S0160000000
009069 940e e2ec 	CALL __LNEGB1
00906b 93e0 1a8d 	STS  _mute_S0160000000,R30
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
00906d 940e d787 	CALL SUBOPT_0x300
00906f 91e0 1a8d 	LDS  R30,_mute_S0160000000
009071 940e c525 	CALL SUBOPT_0x65
009073 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
009075 c01c      	RJMP _0x2C0139
                 _0x2C0138:
009076 91a0 1a47 	LDS  R26,_cursor_S0160000000
009078 30a1      	CPI  R26,LOW(0x1)
009079 f479      	BRNE _0x2C013A
                 ; 0016 029A                                 currentPage = P_FINISH;
00907a 940e d846 	CALL SUBOPT_0x31A
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
00907c e1e2      	LDI  R30,LOW(18)
00907d 93e0 1a49 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 029D                                 muteMode    = mute;
00907f 91e0 1a8d 	LDS  R30,_mute_S0160000000
009081 93e0 148b 	STS  _muteMode,R30
                 ; 0016 029E                                 cursor      = 0;
009083 e0e0      	LDI  R30,LOW(0)
009084 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 029F                                 printOLED("FI");
009086 940e d7a5 	CALL SUBOPT_0x305
009088 c005      	RJMP _0x2C02C4
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 _0x2C013A:
                 ; 0016 02A2                                 currentPage = P_MONITOR;
009089 e0e0      	LDI  R30,LOW(0)
00908a 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
00908c 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02C4:
00908e 940e e400 	CALL __PUTPARD1
009090 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 02A5                             }
                 _0x2C0139:
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 _0x2C0131:
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
009092 c76d      	RJMP _0x2C013C
                 _0x2C012E:
009093 91a0 14df 	LDS  R26,_currentPage
009095 31a3      	CPI  R26,LOW(0x13)
009096 f011      	BREQ PC+3
009097 940c 90f5 	JMP _0x2C013D
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
009099 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
00909b f431      	BRNE _0x2C0141
00909c e1e1      	LDI  R30,LOW(17)
00909d 940e d747 	CALL SUBOPT_0x2F6
00909f 940e d56e 	CALL SUBOPT_0x2CE
0090a1 c052      	RJMP _0x2C0140
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0141:
0090a2 30e2      	CPI  R30,LOW(0x2)
0090a3 e0a0      	LDI  R26,HIGH(0x2)
0090a4 07fa      	CPC  R31,R26
0090a5 f481      	BRNE _0x2C0142
0090a6 91a0 1a47 	LDS  R26,_cursor_S0160000000
0090a8 30a4      	CPI  R26,LOW(0x4)
0090a9 f414      	BRGE _0x2C0143
0090aa 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0143:
0090ac 940e d542 	CALL SUBOPT_0x2CA
0090ae 30a5      	CPI  R26,LOW(0x5)
0090af f01c      	BRLT _0x2C0144
0090b0 e0e0      	LDI  R30,LOW(0)
0090b1 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0144:
0090b3 940e d852 	CALL SUBOPT_0x31C
0090b5 c03e      	RJMP _0x2C0140
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0142:
0090b6 30e3      	CPI  R30,LOW(0x3)
0090b7 e0a0      	LDI  R26,HIGH(0x3)
0090b8 07fa      	CPC  R31,R26
0090b9 f479      	BRNE _0x2C0145
0090ba 91a0 1a47 	LDS  R26,_cursor_S0160000000
0090bc 30a4      	CPI  R26,LOW(0x4)
0090bd f414      	BRGE _0x2C0146
0090be 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0146:
0090c0 940e d52e 	CALL SUBOPT_0x2C8
0090c2 f41c      	BRGE _0x2C0147
0090c3 e0e4      	LDI  R30,LOW(4)
0090c4 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0147:
0090c6 940e d852 	CALL SUBOPT_0x31C
0090c8 c02b      	RJMP _0x2C0140
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 _0x2C0145:
0090c9 30e4      	CPI  R30,LOW(0x4)
0090ca e0a0      	LDI  R26,HIGH(0x4)
0090cb 07fa      	CPC  R31,R26
0090cc f539      	BRNE _0x2C0140
0090cd 91a0 1a47 	LDS  R26,_cursor_S0160000000
0090cf 30a4      	CPI  R26,LOW(0x4)
0090d0 f471      	BRNE _0x2C0149
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
0090d1 e1e4      	LDI  R30,LOW(20)
0090d2 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
0090d4 940e d857 	CALL SUBOPT_0x31D
0090d6 940e d58b 	CALL SUBOPT_0x2D1
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                +
0090d8 efef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 819 ) )
0090d9 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 819 ) )
0090da e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 819 ) )
0090db e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 819 ) )
                 	__POINTD1FN _0x2C0000,819
0090dc 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
0090de c015      	RJMP _0x2C014A
                 _0x2C0149:
0090df 91a0 1a47 	LDS  R26,_cursor_S0160000000
0090e1 30a4      	CPI  R26,LOW(0x4)
0090e2 f48c      	BRGE _0x2C014B
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
0090e3 940e d820 	CALL SUBOPT_0x314
0090e5 5ba2      	SUBI R26,LOW(-_newPwd_S0160000000)
0090e6 4eb5      	SBCI R27,HIGH(-_newPwd_S0160000000)
0090e7 940e d85f 	CALL SUBOPT_0x31E
0090e9 f024      	BRLT _0x2C014C
0090ea 940e d864 	CALL SUBOPT_0x31F
0090ec e0a0      	LDI  R26,LOW(0)
0090ed 83a0      	STD  Z+0,R26
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 _0x2C014C:
0090ee 940e d86a 	CALL SUBOPT_0x320
0090f0 940e d864 	CALL SUBOPT_0x31F
0090f2 940e d871 	CALL SUBOPT_0x321
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 _0x2C014B:
                 _0x2C014A:
                 ; 0016 02BC         }
                 _0x2C0140:
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
0090f4 c70b      	RJMP _0x2C014D
                 _0x2C013D:
0090f5 91a0 14df 	LDS  R26,_currentPage
0090f7 31a4      	CPI  R26,LOW(0x14)
0090f8 f011      	BREQ PC+3
0090f9 940c 9185 	JMP _0x2C014E
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
0090fb 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
0090fd f431      	BRNE _0x2C0152
0090fe e1e1      	LDI  R30,LOW(17)
0090ff 940e d747 	CALL SUBOPT_0x2F6
009101 940e d56e 	CALL SUBOPT_0x2CE
009103 c080      	RJMP _0x2C0151
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0152:
009104 30e2      	CPI  R30,LOW(0x2)
009105 e0a0      	LDI  R26,HIGH(0x2)
009106 07fa      	CPC  R31,R26
009107 f481      	BRNE _0x2C0153
009108 91a0 1a47 	LDS  R26,_cursor_S0160000000
00910a 30a4      	CPI  R26,LOW(0x4)
00910b f414      	BRGE _0x2C0154
00910c 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0154:
00910e 940e d542 	CALL SUBOPT_0x2CA
009110 30a5      	CPI  R26,LOW(0x5)
009111 f01c      	BRLT _0x2C0155
009112 e0e0      	LDI  R30,LOW(0)
009113 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0155:
009115 940e d852 	CALL SUBOPT_0x31C
009117 c06c      	RJMP _0x2C0151
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0153:
009118 30e3      	CPI  R30,LOW(0x3)
009119 e0a0      	LDI  R26,HIGH(0x3)
00911a 07fa      	CPC  R31,R26
00911b f479      	BRNE _0x2C0156
00911c 91a0 1a47 	LDS  R26,_cursor_S0160000000
00911e 30a4      	CPI  R26,LOW(0x4)
00911f f414      	BRGE _0x2C0157
009120 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0157:
009122 940e d52e 	CALL SUBOPT_0x2C8
009124 f41c      	BRGE _0x2C0158
009125 e0e4      	LDI  R30,LOW(4)
009126 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0158:
009128 940e d852 	CALL SUBOPT_0x31C
00912a c059      	RJMP _0x2C0151
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 _0x2C0156:
00912b 30e4      	CPI  R30,LOW(0x4)
00912c e0a0      	LDI  R26,HIGH(0x4)
00912d 07fa      	CPC  R31,R26
00912e f011      	BREQ PC+3
00912f 940c 9184 	JMP _0x2C0151
009131 91a0 1a47 	LDS  R26,_cursor_S0160000000
009133 30a4      	CPI  R26,LOW(0x4)
009134 f5d1      	BRNE _0x2C015A
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
009135 940e d875 	CALL SUBOPT_0x322
009137 e5e2      	LDI  R30,LOW(_confPwd_S0160000000)
009138 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
009139 940e d402 	CALL SUBOPT_0x2A5
00913b 940e a777 	CALL _memcmp
00913d 30e0      	CPI  R30,0
00913e f0e1      	BREQ _0x2C015B
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                +
00913f e0eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 831 ) )
009140 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 831 ) )
009141 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 831 ) )
009142 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 831 ) )
                 	__POINTD1FN _0x2C0000,831
009143 940e c274 	CALL SUBOPT_0x3
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
009145 940e d875 	CALL SUBOPT_0x322
009147 940e d87a 	CALL SUBOPT_0x323
009149 940e a7d5 	CALL _memset
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
00914b 940e d857 	CALL SUBOPT_0x31D
00914d 940e a7d5 	CALL _memset
                 ; 0016 02CC                                     currentPage = P_FAILED;
00914f e2e5      	LDI  R30,LOW(37)
009150 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
009152 e1e1      	LDI  R30,LOW(17)
009153 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
009155 e1e4      	LDI  R30,LOW(20)
009156 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
009158 940e d7a0 	CALL SUBOPT_0x304
00915a c00f      	RJMP _0x2C02C5
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 _0x2C015B:
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
00915b 940e d87e 	CALL SUBOPT_0x324
00915d e5e2      	LDI  R30,LOW(_confPwd_S0160000000)
00915e e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00915f 940e d402 	CALL SUBOPT_0x2A5
009161 940e 9baf 	CALL _r2ecpy
                 ; 0016 02D4                                     currentPage = P_FINISH;
009163 940e d846 	CALL SUBOPT_0x31A
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
009165 e1e4      	LDI  R30,LOW(20)
009166 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
009168 940e d7a5 	CALL SUBOPT_0x305
                 _0x2C02C5:
00916a 940e e400 	CALL __PUTPARD1
00916c 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
00916e c015      	RJMP _0x2C015D
                 _0x2C015A:
00916f 91a0 1a47 	LDS  R26,_cursor_S0160000000
009171 30a4      	CPI  R26,LOW(0x4)
009172 f48c      	BRGE _0x2C015E
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
009173 940e d820 	CALL SUBOPT_0x314
009175 5aae      	SUBI R26,LOW(-_confPwd_S0160000000)
009176 4eb5      	SBCI R27,HIGH(-_confPwd_S0160000000)
009177 940e d85f 	CALL SUBOPT_0x31E
009179 f024      	BRLT _0x2C015F
00917a 940e d887 	CALL SUBOPT_0x325
00917c e0a0      	LDI  R26,LOW(0)
00917d 83a0      	STD  Z+0,R26
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 _0x2C015F:
00917e 940e d86a 	CALL SUBOPT_0x320
009180 940e d887 	CALL SUBOPT_0x325
009182 940e d871 	CALL SUBOPT_0x321
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 _0x2C015E:
                 _0x2C015D:
                 ; 0016 02E1         }
                 _0x2C0151:
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
009184 c67b      	RJMP _0x2C0160
                 _0x2C014E:
009185 91a0 14df 	LDS  R26,_currentPage
009187 31a5      	CPI  R26,LOW(0x15)
009188 f011      	BREQ PC+3
009189 940c 921a 	JMP _0x2C0161
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
00918b 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
00918d f419      	BRNE _0x2C0165
00918e 940e d88d 	CALL SUBOPT_0x326
009190 c088      	RJMP _0x2C0164
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0165:
009191 30e2      	CPI  R30,LOW(0x2)
009192 e0a0      	LDI  R26,HIGH(0x2)
009193 07fa      	CPC  R31,R26
009194 f449      	BRNE _0x2C0166
009195 940e d52e 	CALL SUBOPT_0x2C8
009197 f41c      	BRGE _0x2C0167
009198 e0e3      	LDI  R30,LOW(3)
009199 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0167:
00919b 940e d535 	CALL SUBOPT_0x2C9
00919d c07b      	RJMP _0x2C0164
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0166:
00919e 30e3      	CPI  R30,LOW(0x3)
00919f e0a0      	LDI  R26,HIGH(0x3)
0091a0 07fa      	CPC  R31,R26
0091a1 f451      	BRNE _0x2C0168
0091a2 940e d542 	CALL SUBOPT_0x2CA
0091a4 30a4      	CPI  R26,LOW(0x4)
0091a5 f01c      	BRLT _0x2C0169
0091a6 e0e0      	LDI  R30,LOW(0)
0091a7 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0169:
0091a9 940e d535 	CALL SUBOPT_0x2C9
0091ab c06d      	RJMP _0x2C0164
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 _0x2C0168:
0091ac 30e4      	CPI  R30,LOW(0x4)
0091ad e0a0      	LDI  R26,HIGH(0x4)
0091ae 07fa      	CPC  R31,R26
0091af f011      	BREQ PC+3
0091b0 940c 9219 	JMP _0x2C0164
0091b2 91e0 1a47 	LDS  R30,_cursor_S0160000000
0091b4 30e0      	CPI  R30,0
0091b5 f571      	BRNE _0x2C016B
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
0091b6 e1e6      	LDI  R30,LOW(22)
0091b7 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
0091b9 e8ae      	LDI  R26,LOW(_vRef_S0160000000)
0091ba e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
0091bb 940e 99ba 	CALL _get_current_vref
0091bd 01af      	MOVW R20,R30
                 ; 0016 02ED                                 if(res < 0){
0091be 2355      	TST  R21
0091bf f44a      	BRPL _0x2C016C
                 ; 0016 02EE                                     vRef[0] = 2;
0091c0 e0e2      	LDI  R30,LOW(2)
0091c1 93e0 1a8e 	STS  _vRef_S0160000000,R30
                 ; 0016 02EF                                     vRef[1] = 5;
0091c3 e0e5      	LDI  R30,LOW(5)
                +
0091c4 93e0 1a8f+STS _vRef_S0160000000 + ( 1 ) , R30
                 	__PUTB1MN _vRef_S0160000000,1
                 ; 0016 02F0                                     vRef[2] = 6;
0091c6 e0e6      	LDI  R30,LOW(6)
                +
0091c7 93e0 1a90+STS _vRef_S0160000000 + ( 2 ) , R30
                 	__PUTB1MN _vRef_S0160000000,2
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 _0x2C016C:
                +
0091c9 e3ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 878 ) )
0091ca e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 878 ) )
0091cb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 878 ) )
0091cc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 878 ) )
                 	__POINTD1FN _0x2C0000,878
0091cd 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                +
0091cf e000     +LDI R16 , LOW ( 0 )
0091d0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C016E:
                +
0091d1 3003     +CPI R16 , LOW ( 3 )
0091d2 e0e0     +LDI R30 , HIGH ( 3 )
0091d3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
0091d4 f474      	BRGE _0x2C016F
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
0091d5 940e d894 	CALL SUBOPT_0x327
0091d7 01f8      	MOVW R30,R16
0091d8 940e d216 	CALL SUBOPT_0x258
0091da e8ae      	LDI  R26,LOW(_vRef_S0160000000)
0091db e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
0091dc 940e d774 	CALL SUBOPT_0x2FD
0091de 940e d354 	CALL SUBOPT_0x289
                 ; 0016 02F5                                 }
                +
0091e0 5f0f     +SUBI R16 , LOW ( - 1 )
0091e1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0091e2 cfee      	RJMP _0x2C016E
                 _0x2C016F:
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
0091e3 c035      	RJMP _0x2C0170
                 _0x2C016B:
0091e4 91a0 1a47 	LDS  R26,_cursor_S0160000000
0091e6 30a1      	CPI  R26,LOW(0x1)
0091e7 f459      	BRNE _0x2C0171
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
0091e8 e1e7      	LDI  R30,LOW(23)
0091e9 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
0091eb e0e0      	LDI  R30,LOW(0)
0091ec 93e0 1a91 	STS  _prb1_S0160000000,R30
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
0091ee 940e d89b 	CALL SUBOPT_0x328
0091f0 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
0091f2 c026      	RJMP _0x2C0172
                 _0x2C0171:
0091f3 91a0 1a47 	LDS  R26,_cursor_S0160000000
0091f5 30a2      	CPI  R26,LOW(0x2)
0091f6 f469      	BRNE _0x2C0173
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
0091f7 e1ea      	LDI  R30,LOW(26)
0091f8 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
0091fa e0e0      	LDI  R30,LOW(0)
0091fb 93e0 1a91 	STS  _prb1_S0160000000,R30
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
0091fd 940e d8a6 	CALL SUBOPT_0x329
0091ff 940e d8ad 	CALL SUBOPT_0x32A
009201 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
009203 c015      	RJMP _0x2C0174
                 _0x2C0173:
009204 91a0 1a47 	LDS  R26,_cursor_S0160000000
009206 30a3      	CPI  R26,LOW(0x3)
009207 f441      	BRNE _0x2C0175
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
009208 e2e0      	LDI  R30,LOW(32)
009209 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                +
00920b e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 902 ) )
00920c e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 902 ) )
00920d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 902 ) )
00920e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 902 ) )
                 	__POINTD1FN _0x2C0000,902
00920f c005      	RJMP _0x2C02C6
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 _0x2C0175:
                 ; 0016 0309                                 currentPage = P_MONITOR;
009210 e0e0      	LDI  R30,LOW(0)
009211 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
009213 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02C6:
009215 940e e400 	CALL __PUTPARD1
009217 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 030C                             }
                 _0x2C0174:
                 _0x2C0172:
                 _0x2C0170:
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 _0x2C0164:
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
009219 c5e6      	RJMP _0x2C0177
                 _0x2C0161:
00921a 91a0 14df 	LDS  R26,_currentPage
00921c 31a6      	CPI  R26,LOW(0x16)
00921d f011      	BREQ PC+3
00921e 940c 9281 	JMP _0x2C0178
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
009220 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
009222 f431      	BRNE _0x2C017C
009223 e1e5      	LDI  R30,LOW(21)
009224 940e d55b 	CALL SUBOPT_0x2CC
009226 940e d8b2 	CALL SUBOPT_0x32B
009228 c057      	RJMP _0x2C017B
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017C:
009229 30e2      	CPI  R30,LOW(0x2)
00922a e0a0      	LDI  R26,HIGH(0x2)
00922b 07fa      	CPC  R31,R26
00922c f451      	BRNE _0x2C017D
00922d 940e d542 	CALL SUBOPT_0x2CA
00922f 30a4      	CPI  R26,LOW(0x4)
009230 f01c      	BRLT _0x2C017E
009231 e0e0      	LDI  R30,LOW(0)
009232 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C017E:
009234 940e d8b7 	CALL SUBOPT_0x32C
009236 c049      	RJMP _0x2C017B
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017D:
009237 30e3      	CPI  R30,LOW(0x3)
009238 e0a0      	LDI  R26,HIGH(0x3)
009239 07fa      	CPC  R31,R26
00923a f449      	BRNE _0x2C017F
00923b 940e d52e 	CALL SUBOPT_0x2C8
00923d f41c      	BRGE _0x2C0180
00923e e0e3      	LDI  R30,LOW(3)
00923f 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0180:
009241 940e d8b7 	CALL SUBOPT_0x32C
009243 c03c      	RJMP _0x2C017B
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 _0x2C017F:
009244 30e4      	CPI  R30,LOW(0x4)
009245 e0a0      	LDI  R26,HIGH(0x4)
009246 07fa      	CPC  R31,R26
009247 f5c1      	BRNE _0x2C017B
009248 91a0 1a47 	LDS  R26,_cursor_S0160000000
00924a 30a3      	CPI  R26,LOW(0x3)
00924b f481      	BRNE _0x2C0182
                 ; 0016 0317                                 currentPage = P_FINISH;
00924c e2e4      	LDI  R30,LOW(36)
00924d 940e d57b 	CALL SUBOPT_0x2CF
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
00924f e1e6      	LDI  R30,LOW(22)
009250 93e0 1a49 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 031A                                 set_vref(&vRef[0]);
009252 e8ae      	LDI  R26,LOW(_vRef_S0160000000)
009253 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
009254 940e 9b49 	CALL _set_vref
                 ; 0016 031B                                 cursor = 0;
009256 e0e0      	LDI  R30,LOW(0)
009257 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 031C                                 printOLED("FI");
009259 940e d7a5 	CALL SUBOPT_0x305
00925b c020      	RJMP _0x2C02C7
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 _0x2C0182:
00925c 91a0 1a47 	LDS  R26,_cursor_S0160000000
00925e 30a3      	CPI  R26,LOW(0x3)
00925f f4bc      	BRGE _0x2C0184
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
009260 940e d820 	CALL SUBOPT_0x314
009262 57a2      	SUBI R26,LOW(-_vRef_S0160000000)
009263 4eb5      	SBCI R27,HIGH(-_vRef_S0160000000)
009264 940e d85f 	CALL SUBOPT_0x31E
009266 f020      	BRLO _0x2C0185
009267 940e d8bc 	CALL SUBOPT_0x32D
009269 e0a0      	LDI  R26,LOW(0)
00926a 83a0      	STD  Z+0,R26
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 _0x2C0185:
00926b 940e d894 	CALL SUBOPT_0x327
00926d 940e d833 	CALL SUBOPT_0x317
00926f 940e d8bc 	CALL SUBOPT_0x32D
009271 81e0      	LD   R30,Z
009272 940e c525 	CALL SUBOPT_0x65
009274 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
009276 c009      	RJMP _0x2C0186
                 _0x2C0184:
                 ; 0016 0323                                 currentPage = P_MONITOR;
009277 e0e0      	LDI  R30,LOW(0)
009278 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
00927a 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02C7:
00927c 940e e400 	CALL __PUTPARD1
00927e 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 0326                             }
                 _0x2C0186:
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 _0x2C017B:
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
009280 c57f      	RJMP _0x2C0187
                 _0x2C0178:
009281 91a0 14df 	LDS  R26,_currentPage
009283 31a7      	CPI  R26,LOW(0x17)
009284 f011      	BREQ PC+3
009285 940c 92dc 	JMP _0x2C0188
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
009287 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
009289 f449      	BRNE _0x2C018C
00928a e1e5      	LDI  R30,LOW(21)
00928b 940e d747 	CALL SUBOPT_0x2F6
00928d e0e0      	LDI  R30,LOW(0)
00928e 93e0 1a91 	STS  _prb1_S0160000000,R30
009290 940e d8b2 	CALL SUBOPT_0x32B
009292 c048      	RJMP _0x2C018B
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018C:
009293 30e2      	CPI  R30,LOW(0x2)
009294 e0a0      	LDI  R26,HIGH(0x2)
009295 07fa      	CPC  R31,R26
009296 f451      	BRNE _0x2C018D
009297 940e d542 	CALL SUBOPT_0x2CA
009299 30a2      	CPI  R26,LOW(0x2)
00929a f01c      	BRLT _0x2C018E
00929b e0e0      	LDI  R30,LOW(0)
00929c 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C018E:
00929e 940e d8c2 	CALL SUBOPT_0x32E
0092a0 c03a      	RJMP _0x2C018B
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018D:
0092a1 30e3      	CPI  R30,LOW(0x3)
0092a2 e0a0      	LDI  R26,HIGH(0x3)
0092a3 07fa      	CPC  R31,R26
0092a4 f449      	BRNE _0x2C018F
0092a5 940e d52e 	CALL SUBOPT_0x2C8
0092a7 f41c      	BRGE _0x2C0190
0092a8 e0e1      	LDI  R30,LOW(1)
0092a9 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0190:
0092ab 940e d8c2 	CALL SUBOPT_0x32E
0092ad c02d      	RJMP _0x2C018B
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 _0x2C018F:
0092ae 30e4      	CPI  R30,LOW(0x4)
0092af e0a0      	LDI  R26,HIGH(0x4)
0092b0 07fa      	CPC  R31,R26
0092b1 f549      	BRNE _0x2C018B
0092b2 91e0 1a47 	LDS  R30,_cursor_S0160000000
0092b4 30e0      	CPI  R30,0
0092b5 f469      	BRNE _0x2C0192
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
0092b6 940e d8c7 	CALL SUBOPT_0x32F
0092b8 f018      	BRLO _0x2C0193
0092b9 e0e0      	LDI  R30,LOW(0)
0092ba 93e0 1a91 	STS  _prb1_S0160000000,R30
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 _0x2C0193:
0092bc 940e d8ce 	CALL SUBOPT_0x330
0092be 940e d8ad 	CALL SUBOPT_0x32A
0092c0 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
0092c2 c018      	RJMP _0x2C0194
                 _0x2C0192:
0092c3 91a0 1a47 	LDS  R26,_cursor_S0160000000
0092c5 30a1      	CPI  R26,LOW(0x1)
0092c6 f469      	BRNE _0x2C0195
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
0092c7 e1e8      	LDI  R30,LOW(24)
0092c8 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
0092ca e0e0      	LDI  R30,LOW(0)
0092cb 93e0 1a92 	STS  _prb2_S0160000000,R30
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
0092cd 940e d8a6 	CALL SUBOPT_0x329
0092cf 940e d8d5 	CALL SUBOPT_0x331
0092d1 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
0092d3 c007      	RJMP _0x2C0196
                 _0x2C0195:
                 ; 0016 033B                                 currentPage = P_MONITOR;
0092d4 e0e0      	LDI  R30,LOW(0)
0092d5 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
0092d7 940e d591 	CALL SUBOPT_0x2D2
0092d9 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 033E                             }
                 _0x2C0196:
                 _0x2C0194:
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 _0x2C018B:
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
0092db c524      	RJMP _0x2C0197
                 _0x2C0188:
0092dc 91a0 14df 	LDS  R26,_currentPage
0092de 31a8      	CPI  R26,LOW(0x18)
0092df f011      	BREQ PC+3
0092e0 940c 933a 	JMP _0x2C0198
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
0092e2 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
0092e4 f459      	BRNE _0x2C019C
0092e5 e1e7      	LDI  R30,LOW(23)
0092e6 940e d55b 	CALL SUBOPT_0x2CC
0092e8 e0e0      	LDI  R30,LOW(0)
0092e9 93e0 1a92 	STS  _prb2_S0160000000,R30
0092eb 940e d89b 	CALL SUBOPT_0x328
0092ed 940e d366 	CALL SUBOPT_0x28D
0092ef c049      	RJMP _0x2C019B
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019C:
0092f0 30e2      	CPI  R30,LOW(0x2)
0092f1 e0a0      	LDI  R26,HIGH(0x2)
0092f2 07fa      	CPC  R31,R26
0092f3 f451      	BRNE _0x2C019D
0092f4 940e d542 	CALL SUBOPT_0x2CA
0092f6 30a2      	CPI  R26,LOW(0x2)
0092f7 f01c      	BRLT _0x2C019E
0092f8 e0e0      	LDI  R30,LOW(0)
0092f9 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C019E:
0092fb 940e d8c2 	CALL SUBOPT_0x32E
0092fd c03b      	RJMP _0x2C019B
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019D:
0092fe 30e3      	CPI  R30,LOW(0x3)
0092ff e0a0      	LDI  R26,HIGH(0x3)
009300 07fa      	CPC  R31,R26
009301 f449      	BRNE _0x2C019F
009302 940e d52e 	CALL SUBOPT_0x2C8
009304 f41c      	BRGE _0x2C01A0
009305 e0e1      	LDI  R30,LOW(1)
009306 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C01A0:
009308 940e d8c2 	CALL SUBOPT_0x32E
00930a c02e      	RJMP _0x2C019B
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 _0x2C019F:
00930b 30e4      	CPI  R30,LOW(0x4)
00930c e0a0      	LDI  R26,HIGH(0x4)
00930d 07fa      	CPC  R31,R26
00930e f551      	BRNE _0x2C019B
00930f 91e0 1a47 	LDS  R30,_cursor_S0160000000
009311 30e0      	CPI  R30,0
009312 f489      	BRNE _0x2C01A2
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
009313 91a0 1a92 	LDS  R26,_prb2_S0160000000
009315 5faf      	SUBI R26,-LOW(1)
009316 93a0 1a92 	STS  _prb2_S0160000000,R26
009318 30a5      	CPI  R26,LOW(0x5)
009319 f018      	BRLO _0x2C01A3
00931a e0e0      	LDI  R30,LOW(0)
00931b 93e0 1a92 	STS  _prb2_S0160000000,R30
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 _0x2C01A3:
00931d 940e d8ce 	CALL SUBOPT_0x330
00931f 940e d8d5 	CALL SUBOPT_0x331
009321 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
009323 c015      	RJMP _0x2C01A4
                 _0x2C01A2:
009324 91a0 1a47 	LDS  R26,_cursor_S0160000000
009326 30a1      	CPI  R26,LOW(0x1)
009327 f451      	BRNE _0x2C01A5
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
009328 e1e9      	LDI  R30,LOW(25)
009329 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
00932b 940e d8da 	CALL SUBOPT_0x332
00932d 940e d8d5 	CALL SUBOPT_0x331
00932f 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
009331 c007      	RJMP _0x2C01A6
                 _0x2C01A5:
                 ; 0016 0352                                 currentPage = P_MONITOR;
009332 e0e0      	LDI  R30,LOW(0)
009333 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
009335 940e d591 	CALL SUBOPT_0x2D2
009337 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 0355                             }
                 _0x2C01A6:
                 _0x2C01A4:
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 _0x2C019B:
                 ; 0016 0358     }
                 ; 0016 0359     else if ( currentPage == P_CAL1_CONFIRM )
009339 c4c6      	RJMP _0x2C01A7
                 _0x2C0198:
00933a 91a0 14df 	LDS  R26,_currentPage
00933c 31a9      	CPI  R26,LOW(0x19)
00933d f599      	BRNE _0x2C01A8
                 ; 0016 035A     {
                 ; 0016 035B         switch(key){
00933e 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 035C         case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
009340 f451      	BRNE _0x2C01AC
009341 e1e8      	LDI  R30,LOW(24)
009342 940e d55b 	CALL SUBOPT_0x2CC
009344 940e d8a6 	CALL SUBOPT_0x329
009346 940e d8d5 	CALL SUBOPT_0x331
009348 940e d366 	CALL SUBOPT_0x28D
00934a c025      	RJMP _0x2C01AB
                 ; 0016 035D         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C01AC:
00934b 30e2      	CPI  R30,LOW(0x2)
00934c e0a0      	LDI  R26,HIGH(0x2)
00934d 07fa      	CPC  R31,R26
00934e f109      	BREQ _0x2C01AB
                 ; 0016 035E         case KEY_DOWN   :   /* no operation */                                                                  break;
00934f 30e3      	CPI  R30,LOW(0x3)
009350 e0a0      	LDI  R26,HIGH(0x3)
009351 07fa      	CPC  R31,R26
009352 f0e9      	BREQ _0x2C01AB
                 ; 0016 035F         case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
009353 30e4      	CPI  R30,LOW(0x4)
009354 e0a0      	LDI  R26,HIGH(0x4)
009355 07fa      	CPC  R31,R26
009356 f4c9      	BRNE _0x2C01AB
009357 940e d8e1 	CALL SUBOPT_0x333
009359 91a0 1a92 	LDS  R26,_prb2_S0160000000
00935b 27bb      	CLR  R27
00935c 940e 6fe6 	CALL _sensorCalibrate1
00935e 01af      	MOVW R20,R30
                 ; 0016 0360                             if(res < 0){
00935f 2355      	TST  R21
009360 f432      	BRPL _0x2C01B0
                 ; 0016 0361                                 currentPage = P_FAILED;
009361 e2e5      	LDI  R30,LOW(37)
009362 940e d8e7 	CALL SUBOPT_0x334
                 ; 0016 0362                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364                                 cursor      = 0;
                 ; 0016 0365                                 printOLED("FL");
009364 940e d7a0 	CALL SUBOPT_0x304
009366 c005      	RJMP _0x2C02C8
                 ; 0016 0366                             }
                 ; 0016 0367                             else{
                 _0x2C01B0:
                 ; 0016 0368                                 currentPage = P_FINISH;
009367 e2e4      	LDI  R30,LOW(36)
009368 940e d8e7 	CALL SUBOPT_0x334
                 ; 0016 0369                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B                                 cursor      = 0;
                 ; 0016 036C                                 printOLED("FI");
00936a 940e d7a5 	CALL SUBOPT_0x305
                 _0x2C02C8:
00936c 940e e400 	CALL __PUTPARD1
00936e 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 036D                             }
                 ; 0016 036E                             break;
                 ; 0016 036F         }
                 _0x2C01AB:
                 ; 0016 0370     }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
009370 c48f      	RJMP _0x2C01B2
                 _0x2C01A8:
009371 91a0 14df 	LDS  R26,_currentPage
009373 31aa      	CPI  R26,LOW(0x1A)
009374 f011      	BREQ PC+3
009375 940c 93c2 	JMP _0x2C01B3
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
009377 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
009379 f431      	BRNE _0x2C01B7
00937a e1e5      	LDI  R30,LOW(21)
00937b 940e d74d 	CALL SUBOPT_0x2F7
00937d 940e d8b2 	CALL SUBOPT_0x32B
00937f c041      	RJMP _0x2C01B6
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B7:
009380 30e2      	CPI  R30,LOW(0x2)
009381 e0a0      	LDI  R26,HIGH(0x2)
009382 07fa      	CPC  R31,R26
009383 f451      	BRNE _0x2C01B8
009384 940e d542 	CALL SUBOPT_0x2CA
009386 30a2      	CPI  R26,LOW(0x2)
009387 f01c      	BRLT _0x2C01B9
009388 e0e0      	LDI  R30,LOW(0)
009389 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C01B9:
00938b 940e d8c2 	CALL SUBOPT_0x32E
00938d c033      	RJMP _0x2C01B6
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B8:
00938e 30e3      	CPI  R30,LOW(0x3)
00938f e0a0      	LDI  R26,HIGH(0x3)
009390 07fa      	CPC  R31,R26
009391 f449      	BRNE _0x2C01BA
009392 940e d52e 	CALL SUBOPT_0x2C8
009394 f41c      	BRGE _0x2C01BB
009395 e0e1      	LDI  R30,LOW(1)
009396 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C01BB:
009398 940e d8c2 	CALL SUBOPT_0x32E
00939a c026      	RJMP _0x2C01B6
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 _0x2C01BA:
00939b 30e4      	CPI  R30,LOW(0x4)
00939c e0a0      	LDI  R26,HIGH(0x4)
00939d 07fa      	CPC  R31,R26
00939e f511      	BRNE _0x2C01B6
00939f 91e0 1a47 	LDS  R30,_cursor_S0160000000
0093a1 30e0      	CPI  R30,0
0093a2 f469      	BRNE _0x2C01BD
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
0093a3 940e d8c7 	CALL SUBOPT_0x32F
0093a5 f018      	BRLO _0x2C01BE
0093a6 e0e0      	LDI  R30,LOW(0)
0093a7 93e0 1a91 	STS  _prb1_S0160000000,R30
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 _0x2C01BE:
0093a9 940e d8ce 	CALL SUBOPT_0x330
0093ab 940e d8ad 	CALL SUBOPT_0x32A
0093ad 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
0093af c011      	RJMP _0x2C01BF
                 _0x2C01BD:
0093b0 91a0 1a47 	LDS  R26,_cursor_S0160000000
0093b2 30a1      	CPI  R26,LOW(0x1)
0093b3 f431      	BRNE _0x2C01C0
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
0093b4 e1eb      	LDI  R30,LOW(27)
0093b5 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
0093b7 940e d8ee 	CALL SUBOPT_0x335
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
0093b9 c007      	RJMP _0x2C01C1
                 _0x2C01C0:
                 ; 0016 0381                                 currentPage = P_MONITOR;
0093ba e0e0      	LDI  R30,LOW(0)
0093bb 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
0093bd 940e d591 	CALL SUBOPT_0x2D2
0093bf 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 0384                             }
                 _0x2C01C1:
                 _0x2C01BF:
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 _0x2C01B6:
                 ; 0016 0387     }
                 ; 0016 0388     else if ( currentPage == P_CAL2_MENU )
0093c1 c43e      	RJMP _0x2C01C2
                 _0x2C01B3:
0093c2 91a0 14df 	LDS  R26,_currentPage
0093c4 31ab      	CPI  R26,LOW(0x1B)
0093c5 f011      	BREQ PC+3
0093c6 940c 9476 	JMP _0x2C01C3
                 ; 0016 0389     {
                 ; 0016 038A         switch(key){
0093c8 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 038B         case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
0093ca f451      	BRNE _0x2C01C7
0093cb e1ea      	LDI  R30,LOW(26)
0093cc 940e d55b 	CALL SUBOPT_0x2CC
0093ce 940e d8a6 	CALL SUBOPT_0x329
0093d0 940e d8ad 	CALL SUBOPT_0x32A
0093d2 940e d366 	CALL SUBOPT_0x28D
0093d4 c0a0      	RJMP _0x2C01C6
                 ; 0016 038C         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C7:
0093d5 30e2      	CPI  R30,LOW(0x2)
0093d6 e0a0      	LDI  R26,HIGH(0x2)
0093d7 07fa      	CPC  R31,R26
0093d8 f449      	BRNE _0x2C01C8
0093d9 940e d52e 	CALL SUBOPT_0x2C8
0093db f41c      	BRGE _0x2C01C9
0093dc e0e3      	LDI  R30,LOW(3)
0093dd 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C01C9:
0093df 940e d535 	CALL SUBOPT_0x2C9
0093e1 c093      	RJMP _0x2C01C6
                 ; 0016 038D         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C8:
0093e2 30e3      	CPI  R30,LOW(0x3)
0093e3 e0a0      	LDI  R26,HIGH(0x3)
0093e4 07fa      	CPC  R31,R26
0093e5 f451      	BRNE _0x2C01CA
0093e6 940e d542 	CALL SUBOPT_0x2CA
0093e8 30a4      	CPI  R26,LOW(0x4)
0093e9 f01c      	BRLT _0x2C01CB
0093ea e0e0      	LDI  R30,LOW(0)
0093eb 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C01CB:
0093ed 940e d535 	CALL SUBOPT_0x2C9
0093ef c085      	RJMP _0x2C01C6
                 ; 0016 038E         case KEY_OK     :   if(cursor < 3){
                 _0x2C01CA:
0093f0 30e4      	CPI  R30,LOW(0x4)
0093f1 e0a0      	LDI  R26,HIGH(0x4)
0093f2 07fa      	CPC  R31,R26
0093f3 f011      	BREQ PC+3
0093f4 940c 9475 	JMP _0x2C01C6
0093f6 91a0 1a47 	LDS  R26,_cursor_S0160000000
0093f8 30a3      	CPI  R26,LOW(0x3)
0093f9 f014      	BRLT PC+3
0093fa 940c 9460 	JMP _0x2C01CD
                 ; 0016 038F                                 if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
0093fc 91e0 1a47 	LDS  R30,_cursor_S0160000000
0093fe 30e0      	CPI  R30,0
0093ff f411      	BRNE _0x2C01CE
009400 e1ec      	LDI  R30,LOW(28)
009401 c00b      	RJMP _0x2C02C9
                 ; 0016 0390                                 else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 _0x2C01CE:
009402 91a0 1a47 	LDS  R26,_cursor_S0160000000
009404 30a1      	CPI  R26,LOW(0x1)
009405 f411      	BRNE _0x2C01D0
009406 e1ed      	LDI  R30,LOW(29)
009407 c005      	RJMP _0x2C02C9
                 ; 0016 0391                                 else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 _0x2C01D0:
009408 91a0 1a47 	LDS  R26,_cursor_S0160000000
00940a 30a2      	CPI  R26,LOW(0x2)
00940b f419      	BRNE _0x2C01D2
00940c e1ee      	LDI  R30,LOW(30)
                 _0x2C02C9:
00940d 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0392 
                 ; 0016 0393                                 printOLED("CP%1d%1d",cursor+1,prb1+1);
                 _0x2C01D2:
                +
00940f e7e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 941 ) )
009410 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 941 ) )
009411 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 941 ) )
009412 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 941 ) )
                 	__POINTD1FN _0x2C0000,941
009413 940e e400 	CALL __PUTPARD1
009415 91e0 1a47 	LDS  R30,_cursor_S0160000000
009417 e0f0      	LDI  R31,0
009418 fde7      	SBRC R30,7
009419 efff      	SER  R31
00941a 940e cf1d 	CALL SUBOPT_0x202
00941c 940e d8ad 	CALL SUBOPT_0x32A
00941e 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0394 
                 ; 0016 0395                                 res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
009420 940e d8e1 	CALL SUBOPT_0x333
009422 91e0 1a47 	LDS  R30,_cursor_S0160000000
009424 e0f0      	LDI  R31,0
009425 fde7      	SBRC R30,7
009426 efff      	SER  R31
009427 59eb      	SUBI R30,LOW(-101)
009428 4fff      	SBCI R31,HIGH(-101)
009429 940e d8f3 	CALL SUBOPT_0x336
00942b 940e 7239 	CALL _sensorGetCurrentSetPoint
00942d 01af      	MOVW R20,R30
                 ; 0016 0396                                 if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
00942e 2355      	TST  R21
00942f f442      	BRPL _0x2C01D3
009430 e9e3      	LDI  R30,LOW(_calPnt_S0160000000)
009431 e1fa      	LDI  R31,HIGH(_calPnt_S0160000000)
009432 940e c8c7 	CALL SUBOPT_0xF7
009434 e0a6      	LDI  R26,LOW(6)
009435 e0b0      	LDI  R27,0
009436 940e a7d5 	CALL _memset
                 ; 0016 0397                                 for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 _0x2C01D3:
                +
009438 e000     +LDI R16 , LOW ( 0 )
009439 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C01D5:
                +
00943a 3006     +CPI R16 , LOW ( 6 )
00943b e0e0     +LDI R30 , HIGH ( 6 )
00943c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
00943d f4f4      	BRGE _0x2C01D6
00943e 940e d8f8 	CALL SUBOPT_0x337
009440 01f8      	MOVW R30,R16
009441 940e d216 	CALL SUBOPT_0x258
009443 e9a3      	LDI  R26,LOW(_calPnt_S0160000000)
009444 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
009445 940e d774 	CALL SUBOPT_0x2FD
009447 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0398                                                     printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                +
009449 e8eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 959 ) )
00944a e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 959 ) )
00944b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 959 ) )
00944c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 959 ) )
                 	__POINTD1FN _0x2C0000,959
00944d 940e e400 	CALL __PUTPARD1
00944f 01f8      	MOVW R30,R16
009450 940e d216 	CALL SUBOPT_0x258
009452 e9a3      	LDI  R26,LOW(_calPnt_S0160000000)
009453 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
009454 0fa0      	ADD  R26,R16
009455 1fb1      	ADC  R27,R17
009456 91ec      	LD   R30,X
009457 940e d13b 	CALL SUBOPT_0x239
                +
009459 5f0f     +SUBI R16 , LOW ( - 1 )
00945a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00945b cfde      	RJMP _0x2C01D5
                 _0x2C01D6:
                 ; 0016 0399                                 cursor      = 0;
00945c e0e0      	LDI  R30,LOW(0)
00945d 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 039A                             }
                 ; 0016 039B                             else if(cursor == 3){       // -- Calculate
00945f c015      	RJMP _0x2C01D7
                 _0x2C01CD:
009460 91a0 1a47 	LDS  R26,_cursor_S0160000000
009462 30a3      	CPI  R26,LOW(0x3)
009463 f451      	BRNE _0x2C01D8
                 ; 0016 039C                                 currentPage = P_CAL2_CONFIRM;
009464 e1ef      	LDI  R30,LOW(31)
009465 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 039D                                 cursor      = 0;
                 ; 0016 039E                                 printOLED("CC%1d",prb1+1);
009467 940e d8da 	CALL SUBOPT_0x332
009469 940e d8ad 	CALL SUBOPT_0x32A
00946b 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 039F                             }
                 ; 0016 03A0                             else{                       // -- Exit -- should not occur
00946d c007      	RJMP _0x2C01D9
                 _0x2C01D8:
                 ; 0016 03A1                                 currentPage = P_MONITOR;
00946e e0e0      	LDI  R30,LOW(0)
00946f 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 03A2                                 cursor      = 0;
                 ; 0016 03A3                                 printOLED("M0");
009471 940e d591 	CALL SUBOPT_0x2D2
009473 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 03A4                             }
                 _0x2C01D9:
                 _0x2C01D7:
                 ; 0016 03A5             break;
                 ; 0016 03A6         }
                 _0x2C01C6:
                 ; 0016 03A7     }
                 ; 0016 03A8     else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
009475 c38a      	RJMP _0x2C01DA
                 _0x2C01C3:
009476 91a0 14df 	LDS  R26,_currentPage
009478 31ac      	CPI  R26,LOW(0x1C)
009479 f029      	BREQ _0x2C01DC
00947a 31ad      	CPI  R26,LOW(0x1D)
00947b f019      	BREQ _0x2C01DC
00947c 31ae      	CPI  R26,LOW(0x1E)
00947d f009      	BREQ _0x2C01DC
00947e c0c7      	RJMP _0x2C01DB
                 _0x2C01DC:
                 ; 0016 03A9     {
                 ; 0016 03AA         switch(key){
00947f 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 03AB         case KEY_MODE   :   currentPage = P_CAL2_MENU;
009481 f4c9      	BRNE _0x2C01E1
009482 e1eb      	LDI  R30,LOW(27)
009483 93e0 14df 	STS  _currentPage,R30
                 ; 0016 03AC                             if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
009485 91a0 14df 	LDS  R26,_currentPage
009487 31ac      	CPI  R26,LOW(0x1C)
009488 f411      	BRNE _0x2C01E2
009489 e0e0      	LDI  R30,LOW(0)
00948a c00b      	RJMP _0x2C02CA
                 ; 0016 03AD                             else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 _0x2C01E2:
00948b 91a0 14df 	LDS  R26,_currentPage
00948d 31ad      	CPI  R26,LOW(0x1D)
00948e f411      	BRNE _0x2C01E4
00948f e0e1      	LDI  R30,LOW(1)
009490 c005      	RJMP _0x2C02CA
                 ; 0016 03AE                             else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 _0x2C01E4:
009491 91a0 14df 	LDS  R26,_currentPage
009493 31ae      	CPI  R26,LOW(0x1E)
009494 f419      	BRNE _0x2C01E6
009495 e0e2      	LDI  R30,LOW(2)
                 _0x2C02CA:
009496 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 03AF                             printOLED("M8%1d",cursor);                                                                      break;
                 _0x2C01E6:
009498 940e d8ee 	CALL SUBOPT_0x335
00949a c0aa      	RJMP _0x2C01E0
                 ; 0016 03B0         case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E1:
00949b 30e2      	CPI  R30,LOW(0x2)
00949c e0a0      	LDI  R26,HIGH(0x2)
00949d 07fa      	CPC  R31,R26
00949e f451      	BRNE _0x2C01E7
00949f 940e d542 	CALL SUBOPT_0x2CA
0094a1 30a7      	CPI  R26,LOW(0x7)
0094a2 f01c      	BRLT _0x2C01E8
0094a3 e0e0      	LDI  R30,LOW(0)
0094a4 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C01E8:
0094a6 940e d8ff 	CALL SUBOPT_0x338
0094a8 c09c      	RJMP _0x2C01E0
                 ; 0016 03B1         case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E7:
0094a9 30e3      	CPI  R30,LOW(0x3)
0094aa e0a0      	LDI  R26,HIGH(0x3)
0094ab 07fa      	CPC  R31,R26
0094ac f449      	BRNE _0x2C01E9
0094ad 940e d52e 	CALL SUBOPT_0x2C8
0094af f41c      	BRGE _0x2C01EA
0094b0 e0e6      	LDI  R30,LOW(6)
0094b1 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C01EA:
0094b3 940e d8ff 	CALL SUBOPT_0x338
0094b5 c08f      	RJMP _0x2C01E0
                 ; 0016 03B2         case KEY_OK     :   if(cursor == 6){
                 _0x2C01E9:
0094b6 30e4      	CPI  R30,LOW(0x4)
0094b7 e0a0      	LDI  R26,HIGH(0x4)
0094b8 07fa      	CPC  R31,R26
0094b9 f011      	BREQ PC+3
0094ba 940c 9545 	JMP _0x2C01E0
0094bc 91a0 1a47 	LDS  R26,_cursor_S0160000000
0094be 30a6      	CPI  R26,LOW(0x6)
0094bf f011      	BREQ PC+3
0094c0 940c 9506 	JMP _0x2C01EC
                 ; 0016 03B3 
                 ; 0016 03B4                                 if(currentPage == P_CAL2_SPT1){
0094c2 91a0 14df 	LDS  R26,_currentPage
0094c4 31ac      	CPI  R26,LOW(0x1C)
0094c5 f451      	BRNE _0x2C01ED
                 ; 0016 03B5                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
0094c6 940e d8e1 	CALL SUBOPT_0x333
0094c8 e6e5      	LDI  R30,LOW(101)
0094c9 e0f0      	LDI  R31,HIGH(101)
0094ca 940e d8f3 	CALL SUBOPT_0x336
0094cc 940e 73bb 	CALL _sensorSetCurrentSetPoint
0094ce 01af      	MOVW R20,R30
                 ; 0016 03B6                                 }
                 ; 0016 03B7                                 else if(currentPage == P_CAL2_SPT2){
0094cf c01e      	RJMP _0x2C01EE
                 _0x2C01ED:
0094d0 91a0 14df 	LDS  R26,_currentPage
0094d2 31ad      	CPI  R26,LOW(0x1D)
0094d3 f451      	BRNE _0x2C01EF
                 ; 0016 03B8                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
0094d4 940e d8e1 	CALL SUBOPT_0x333
0094d6 e6e6      	LDI  R30,LOW(102)
0094d7 e0f0      	LDI  R31,HIGH(102)
0094d8 940e d8f3 	CALL SUBOPT_0x336
0094da 940e 73bb 	CALL _sensorSetCurrentSetPoint
0094dc 01af      	MOVW R20,R30
                 ; 0016 03B9                                 }
                 ; 0016 03BA                                 else if(currentPage == P_CAL2_SPT3){
0094dd c010      	RJMP _0x2C01F0
                 _0x2C01EF:
0094de 91a0 14df 	LDS  R26,_currentPage
0094e0 31ae      	CPI  R26,LOW(0x1E)
0094e1 f451      	BRNE _0x2C01F1
                 ; 0016 03BB                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
0094e2 940e d8e1 	CALL SUBOPT_0x333
0094e4 e6e7      	LDI  R30,LOW(103)
0094e5 e0f0      	LDI  R31,HIGH(103)
0094e6 940e d8f3 	CALL SUBOPT_0x336
0094e8 940e 73bb 	CALL _sensorSetCurrentSetPoint
0094ea 01af      	MOVW R20,R30
                 ; 0016 03BC                                 }
                 ; 0016 03BD                                 else{
0094eb c002      	RJMP _0x2C01F2
                 _0x2C01F1:
                 ; 0016 03BE                                     // -- should not occur -- //
                 ; 0016 03BF                                     res = -1;
                +
0094ec ef4f     +LDI R20 , LOW ( - 1 )
0094ed ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 ; 0016 03C0                                 }
                 _0x2C01F2:
                 _0x2C01F0:
                 _0x2C01EE:
                 ; 0016 03C1 
                 ; 0016 03C2                                 if(res < 0){
0094ee 2355      	TST  R21
0094ef f44a      	BRPL _0x2C01F3
                 ; 0016 03C3                                     currentPage = P_FAILED;
0094f0 940e d904 	CALL SUBOPT_0x339
                 ; 0016 03C4                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5                                     tmpPrevPage = currentPage;
0094f2 91e0 14df 	LDS  R30,_currentPage
0094f4 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 03C6                                     cursor      = 0;
                 ; 0016 03C7                                     printOLED("FL");
0094f6 940e d7a0 	CALL SUBOPT_0x304
0094f8 c008      	RJMP _0x2C02CB
                 ; 0016 03C8                                 }
                 ; 0016 03C9                                 else{
                 _0x2C01F3:
                 ; 0016 03CA                                     currentPage = P_FINISH;
0094f9 940e d90b 	CALL SUBOPT_0x33A
                 ; 0016 03CB                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC                                     tmpPrevPage = currentPage;
0094fb 91e0 14df 	LDS  R30,_currentPage
0094fd 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 03CD                                     cursor      = 0;
                 ; 0016 03CE                                     printOLED("FI");
0094ff 940e d7a5 	CALL SUBOPT_0x305
                 _0x2C02CB:
009501 940e e400 	CALL __PUTPARD1
009503 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 03CF                                 }
                 ; 0016 03D0                             }
                 ; 0016 03D1                             else if(cursor == 0){   // toggle '+' & '-'
009505 c03f      	RJMP _0x2C01F5
                 _0x2C01EC:
009506 91e0 1a47 	LDS  R30,_cursor_S0160000000
009508 30e0      	CPI  R30,0
009509 f4c9      	BRNE _0x2C01F6
                 ; 0016 03D2                                 if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
00950a 940e d820 	CALL SUBOPT_0x314
00950c 56ad      	SUBI R26,LOW(-_calPnt_S0160000000)
00950d 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
00950e 91ec      	LD   R30,X
00950f 5fef      	SUBI R30,-LOW(1)
009510 93ec      	ST   X,R30
009511 30e2      	CPI  R30,LOW(0x2)
009512 f020      	BRLO _0x2C01F7
009513 940e d912 	CALL SUBOPT_0x33B
009515 e0a0      	LDI  R26,LOW(0)
009516 83a0      	STD  Z+0,R26
                 ; 0016 03D3                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01F7:
009517 940e d8f8 	CALL SUBOPT_0x337
009519 940e d833 	CALL SUBOPT_0x317
00951b 940e d912 	CALL SUBOPT_0x33B
00951d 81e0      	LD   R30,Z
00951e 940e c525 	CALL SUBOPT_0x65
009520 940e d354 	CALL SUBOPT_0x289
                 ; 0016 03D4                             }
                 ; 0016 03D5                             else if(cursor < 6){
009522 c022      	RJMP _0x2C01F8
                 _0x2C01F6:
009523 91a0 1a47 	LDS  R26,_cursor_S0160000000
009525 30a6      	CPI  R26,LOW(0x6)
009526 f4bc      	BRGE _0x2C01F9
                 ; 0016 03D6                                 if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
009527 940e d820 	CALL SUBOPT_0x314
009529 56ad      	SUBI R26,LOW(-_calPnt_S0160000000)
00952a 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
00952b 940e d85f 	CALL SUBOPT_0x31E
00952d f020      	BRLO _0x2C01FA
00952e 940e d912 	CALL SUBOPT_0x33B
009530 e0a0      	LDI  R26,LOW(0)
009531 83a0      	STD  Z+0,R26
                 ; 0016 03D7                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01FA:
009532 940e d8f8 	CALL SUBOPT_0x337
009534 940e d833 	CALL SUBOPT_0x317
009536 940e d912 	CALL SUBOPT_0x33B
009538 81e0      	LD   R30,Z
009539 940e c525 	CALL SUBOPT_0x65
00953b 940e d354 	CALL SUBOPT_0x289
                 ; 0016 03D8                             }
                 ; 0016 03D9                             else{                       // -- Exit -- should not occur
00953d c007      	RJMP _0x2C01FB
                 _0x2C01F9:
                 ; 0016 03DA                                 currentPage = P_MONITOR;
00953e e0e0      	LDI  R30,LOW(0)
00953f 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 03DB                                 cursor      = 0;
                 ; 0016 03DC                                 printOLED("M0");
009541 940e d591 	CALL SUBOPT_0x2D2
009543 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 03DD                             }
                 _0x2C01FB:
                 _0x2C01F8:
                 _0x2C01F5:
                 ; 0016 03DE             break;
                 ; 0016 03DF         }
                 _0x2C01E0:
                 ; 0016 03E0     }
                 ; 0016 03E1     else if ( currentPage == P_CAL2_CONFIRM )
009545 c2ba      	RJMP _0x2C01FC
                 _0x2C01DB:
009546 91a0 14df 	LDS  R26,_currentPage
009548 31af      	CPI  R26,LOW(0x1F)
009549 f589      	BRNE _0x2C01FD
                 ; 0016 03E2     {
                 ; 0016 03E3         switch(key){
00954a 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 03E4         case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
00954c f431      	BRNE _0x2C0201
00954d e1eb      	LDI  R30,LOW(27)
00954e 940e d747 	CALL SUBOPT_0x2F6
009550 940e d8ee 	CALL SUBOPT_0x335
009552 c027      	RJMP _0x2C0200
                 ; 0016 03E5         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C0201:
009553 30e2      	CPI  R30,LOW(0x2)
009554 e0a0      	LDI  R26,HIGH(0x2)
009555 07fa      	CPC  R31,R26
009556 f119      	BREQ _0x2C0200
                 ; 0016 03E6         case KEY_DOWN   :   /* no operation */                                                                  break;
009557 30e3      	CPI  R30,LOW(0x3)
009558 e0a0      	LDI  R26,HIGH(0x3)
009559 07fa      	CPC  R31,R26
00955a f0f9      	BREQ _0x2C0200
                 ; 0016 03E7         case KEY_OK     :   res = sensorCalibrate2(prb1);
00955b 30e4      	CPI  R30,LOW(0x4)
00955c e0a0      	LDI  R26,HIGH(0x4)
00955d 07fa      	CPC  R31,R26
00955e f4d9      	BRNE _0x2C0200
00955f 91a0 1a91 	LDS  R26,_prb1_S0160000000
009561 27bb      	CLR  R27
009562 940e 70b4 	CALL _sensorCalibrate2
009564 01af      	MOVW R20,R30
                 ; 0016 03E8                             if(res < 0){
009565 2355      	TST  R21
009566 f442      	BRPL _0x2C0205
                 ; 0016 03E9                                 currentPage = P_FAILED;
009567 940e d904 	CALL SUBOPT_0x339
                 ; 0016 03EA                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB                                 tmpPrevPage = P_CAL2_CONFIRM;
009569 e1ef      	LDI  R30,LOW(31)
00956a 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 03EC                                 cursor      = 0;
                 ; 0016 03ED                                 printOLED("FL");
00956c 940e d7a0 	CALL SUBOPT_0x304
00956e c007      	RJMP _0x2C02CC
                 ; 0016 03EE                             }
                 ; 0016 03EF                             else{
                 _0x2C0205:
                 ; 0016 03F0                                 currentPage = P_FINISH;
00956f 940e d90b 	CALL SUBOPT_0x33A
                 ; 0016 03F1                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2                                 tmpPrevPage = P_CAL2_CONFIRM;
009571 e1ef      	LDI  R30,LOW(31)
009572 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 03F3                                 cursor      = 0;
                 ; 0016 03F4                                 printOLED("FI");
009574 940e d7a5 	CALL SUBOPT_0x305
                 _0x2C02CC:
009576 940e e400 	CALL __PUTPARD1
009578 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 03F5                             }
                 ; 0016 03F6                             break;
                 ; 0016 03F7         }
                 _0x2C0200:
                 ; 0016 03F8     }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
00957a c285      	RJMP _0x2C0207
                 _0x2C01FD:
00957b 91a0 14df 	LDS  R26,_currentPage
00957d 32a0      	CPI  R26,LOW(0x20)
00957e f591      	BRNE _0x2C0208
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
00957f 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
009581 f449      	BRNE _0x2C020C
009582 e1e5      	LDI  R30,LOW(21)
009583 93e0 14df 	STS  _currentPage,R30
009585 e0e3      	LDI  R30,LOW(3)
009586 93e0 1a47 	STS  _cursor_S0160000000,R30
009588 940e d8b2 	CALL SUBOPT_0x32B
00958a c025      	RJMP _0x2C020B
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C020C:
00958b 30e2      	CPI  R30,LOW(0x2)
00958c e0a0      	LDI  R26,HIGH(0x2)
00958d 07fa      	CPC  R31,R26
00958e f109      	BREQ _0x2C020B
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
00958f 30e3      	CPI  R30,LOW(0x3)
009590 e0a0      	LDI  R26,HIGH(0x3)
009591 07fa      	CPC  R31,R26
009592 f0e9      	BREQ _0x2C020B
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
009593 30e4      	CPI  R30,LOW(0x4)
009594 e0a0      	LDI  R26,HIGH(0x4)
009595 07fa      	CPC  R31,R26
009596 f4c9      	BRNE _0x2C020B
009597 e4ee      	LDI  R30,LOW(_newPwd_S0160000000)
009598 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
009599 940e c8c7 	CALL SUBOPT_0xF7
00959b 940e c5a4 	CALL SUBOPT_0x77
00959d 940e a7d5 	CALL _memset
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
00959f 940e d87e 	CALL SUBOPT_0x324
0095a1 e4ee      	LDI  R30,LOW(_newPwd_S0160000000)
0095a2 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
0095a3 940e d402 	CALL SUBOPT_0x2A5
0095a5 d609      	RCALL _r2ecpy
                 ; 0016 0401                             currentPage = P_FINISH;
0095a6 e2e4      	LDI  R30,LOW(36)
0095a7 940e d57b 	CALL SUBOPT_0x2CF
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
0095a9 e2e0      	LDI  R30,LOW(32)
0095aa 940e d80e 	CALL SUBOPT_0x311
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
0095ac 940e d7a5 	CALL SUBOPT_0x305
0095ae 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 _0x2C020B:
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
0095b0 c24f      	RJMP _0x2C0210
                 _0x2C0208:
0095b1 91a0 14df 	LDS  R26,_currentPage
0095b3 32a1      	CPI  R26,LOW(0x21)
0095b4 f011      	BREQ PC+3
0095b5 940c 9692 	JMP _0x2C0211
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
0095b7 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
0095b9 f569      	BRNE _0x2C0215
0095ba 91e0 1a49 	LDS  R30,_tmpPrevPage_S0160000000
0095bc e0f0      	LDI  R31,0
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
0095bd 30e2      	CPI  R30,LOW(0x2)
0095be e0a0      	LDI  R26,HIGH(0x2)
0095bf 07fa      	CPC  R31,R26
0095c0 f431      	BRNE _0x2C0219
0095c1 e0e2      	LDI  R30,LOW(2)
0095c2 940e d747 	CALL SUBOPT_0x2F6
0095c4 940e d753 	CALL SUBOPT_0x2F8
0095c6 c013      	RJMP _0x2C02CD
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0219:
0095c7 30ee      	CPI  R30,LOW(0xE)
0095c8 e0a0      	LDI  R26,HIGH(0xE)
0095c9 07fa      	CPC  R31,R26
0095ca f431      	BRNE _0x2C021A
0095cb e0ee      	LDI  R30,LOW(14)
0095cc 940e d747 	CALL SUBOPT_0x2F6
0095ce 940e d918 	CALL SUBOPT_0x33C
0095d0 c009      	RJMP _0x2C02CD
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C021A:
0095d1 31e1      	CPI  R30,LOW(0x11)
0095d2 e0a0      	LDI  R26,HIGH(0x11)
0095d3 07fa      	CPC  R31,R26
0095d4 f459      	BRNE _0x2C0218
0095d5 e1e1      	LDI  R30,LOW(17)
0095d6 940e d747 	CALL SUBOPT_0x2F6
0095d8 940e d91d 	CALL SUBOPT_0x33D
                 _0x2C02CD:
0095da 940e e400 	CALL __PUTPARD1
0095dc 940e d833 	CALL SUBOPT_0x317
0095de 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0410                             }
                 _0x2C0218:
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
0095e0 940e d922 	CALL SUBOPT_0x33E
0095e2 940e d87a 	CALL SUBOPT_0x323
0095e4 940e a7d5 	CALL _memset
0095e6 c0aa      	RJMP _0x2C0214
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0215:
0095e7 30e2      	CPI  R30,LOW(0x2)
0095e8 e0a0      	LDI  R26,HIGH(0x2)
0095e9 07fa      	CPC  R31,R26
0095ea f481      	BRNE _0x2C021C
0095eb 91a0 1a47 	LDS  R26,_cursor_S0160000000
0095ed 30a4      	CPI  R26,LOW(0x4)
0095ee f414      	BRGE _0x2C021D
0095ef 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C021D:
0095f1 940e d542 	CALL SUBOPT_0x2CA
0095f3 30a5      	CPI  R26,LOW(0x5)
0095f4 f01c      	BRLT _0x2C021E
0095f5 e0e0      	LDI  R30,LOW(0)
0095f6 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C021E:
0095f8 940e d852 	CALL SUBOPT_0x31C
0095fa c096      	RJMP _0x2C0214
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C021C:
0095fb 30e3      	CPI  R30,LOW(0x3)
0095fc e0a0      	LDI  R26,HIGH(0x3)
0095fd 07fa      	CPC  R31,R26
0095fe f479      	BRNE _0x2C021F
0095ff 91a0 1a47 	LDS  R26,_cursor_S0160000000
009601 30a4      	CPI  R26,LOW(0x4)
009602 f414      	BRGE _0x2C0220
009603 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C0220:
009605 940e d52e 	CALL SUBOPT_0x2C8
009607 f41c      	BRGE _0x2C0221
009608 e0e4      	LDI  R30,LOW(4)
009609 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C0221:
00960b 940e d852 	CALL SUBOPT_0x31C
00960d c083      	RJMP _0x2C0214
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 _0x2C021F:
00960e 30e4      	CPI  R30,LOW(0x4)
00960f e0a0      	LDI  R26,HIGH(0x4)
009610 07fa      	CPC  R31,R26
009611 f011      	BREQ PC+3
009612 940c 9691 	JMP _0x2C0214
009614 91a0 1a47 	LDS  R26,_cursor_S0160000000
009616 30a4      	CPI  R26,LOW(0x4)
009617 f011      	BREQ PC+3
009618 940c 967c 	JMP _0x2C0223
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
00961a 940e d922 	CALL SUBOPT_0x33E
00961c 940e d5fc 	CALL SUBOPT_0x2E1
00961e 940e d402 	CALL SUBOPT_0x2A5
009620 d5a1      	RCALL _recmp
009621 9730      	SBIW R30,0
009622 f061      	BREQ _0x2C0224
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
009623 e2e3      	LDI  R30,LOW(35)
009624 940e d55b 	CALL SUBOPT_0x2CC
009626 940e d927 	CALL SUBOPT_0x33F
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
009628 940e d922 	CALL SUBOPT_0x33E
00962a 940e d87a 	CALL SUBOPT_0x323
00962c 940e a7d5 	CALL _memset
                 ; 0016 041D                                     break;
00962e c062      	RJMP _0x2C0214
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 _0x2C0224:
00962f 940e d92c 	CALL SUBOPT_0x340
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
009631 f431      	BRNE _0x2C0228
009632 e0e7      	LDI  R30,LOW(7)
009633 940e d55b 	CALL SUBOPT_0x2CC
009635 940e d779 	CALL SUBOPT_0x2FE
009637 c043      	RJMP _0x2C0227
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 _0x2C0228:
009638 31e0      	CPI  R30,LOW(0x10)
009639 e0a0      	LDI  R26,HIGH(0x10)
00963a 07fa      	CPC  R31,R26
00963b f521      	BRNE _0x2C0229
00963c e1e0      	LDI  R30,LOW(16)
00963d 940e d55b 	CALL SUBOPT_0x2CC
                +
00963f eae8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 988 ) )
009640 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 988 ) )
009641 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 988 ) )
009642 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 988 ) )
                 	__POINTD1FN _0x2C0000,988
009643 940e d73b 	CALL SUBOPT_0x2F4
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
009645 e000     +LDI R16 , LOW ( 0 )
009646 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C022B:
                +
009647 3005     +CPI R16 , LOW ( 5 )
009648 e0e0     +LDI R30 , HIGH ( 5 )
009649 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00964a f4a4      	BRGE _0x2C022C
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
00964b 01d8      	MOVW R26,R16
00964c 57a8      	SUBI R26,LOW(-_prbEn_S0160000000)
00964d 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
00964e 940e d5e2 	CALL SUBOPT_0x2DD
009650 81e0      	LD   R30,Z
009651 940e d82b 	CALL SUBOPT_0x316
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
009653 01f8      	MOVW R30,R16
009654 940e d216 	CALL SUBOPT_0x258
009656 e8a8      	LDI  R26,LOW(_prbEn_S0160000000)
009657 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
009658 940e d774 	CALL SUBOPT_0x2FD
00965a 940e d354 	CALL SUBOPT_0x289
                 ; 0016 0427                                                       }
                +
00965c 5f0f     +SUBI R16 , LOW ( - 1 )
00965d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00965e cfe8      	RJMP _0x2C022B
                 _0x2C022C:
                 ; 0016 0428                                                       break;
00965f c01b      	RJMP _0x2C0227
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 _0x2C0229:
009660 31e3      	CPI  R30,LOW(0x13)
009661 e0a0      	LDI  R26,HIGH(0x13)
009662 07fa      	CPC  R31,R26
009663 f471      	BRNE _0x2C022E
009664 e1e3      	LDI  R30,LOW(19)
009665 93e0 14df 	STS  _currentPage,R30
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
009667 940e d875 	CALL SUBOPT_0x322
009669 940e d87a 	CALL SUBOPT_0x323
00966b 940e d58b 	CALL SUBOPT_0x2D1
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                +
00966d eaeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 991 ) )
00966e e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 991 ) )
00966f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 991 ) )
009670 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 991 ) )
                 	__POINTD1FN _0x2C0000,991
009671 c005      	RJMP _0x2C02CE
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 _0x2C022E:
                 ; 0016 042F                                                       currentPage = P_MONITOR;
009672 e0e0      	LDI  R30,LOW(0)
009673 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
009675 940e d591 	CALL SUBOPT_0x2D2
                 _0x2C02CE:
009677 940e e400 	CALL __PUTPARD1
009679 940e d38f 	CALL SUBOPT_0x292
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 _0x2C0227:
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
00967b c015      	RJMP _0x2C022F
                 _0x2C0223:
00967c 91a0 1a47 	LDS  R26,_cursor_S0160000000
00967e 30a4      	CPI  R26,LOW(0x4)
00967f f48c      	BRGE _0x2C0230
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
009680 940e d820 	CALL SUBOPT_0x314
009682 5ba6      	SUBI R26,LOW(-_entPwd_S0160000000)
009683 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
009684 940e d85f 	CALL SUBOPT_0x31E
009686 f024      	BRLT _0x2C0231
009687 940e d933 	CALL SUBOPT_0x341
009689 e0a0      	LDI  R26,LOW(0)
00968a 83a0      	STD  Z+0,R26
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0231:
00968b 940e d86a 	CALL SUBOPT_0x320
00968d 940e d933 	CALL SUBOPT_0x341
00968f 940e d871 	CALL SUBOPT_0x321
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 _0x2C0230:
                 _0x2C022F:
                 ; 0016 043A         }
                 _0x2C0214:
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
009691 c16e      	RJMP _0x2C0232
                 _0x2C0211:
009692 91a0 14df 	LDS  R26,_currentPage
009694 32a2      	CPI  R26,LOW(0x22)
009695 f011      	BREQ PC+3
009696 940c 970d 	JMP _0x2C0233
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
009698 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
00969a f419      	BRNE _0x2C0237
00969b 940e d88d 	CALL SUBOPT_0x326
00969d c06e      	RJMP _0x2C0236
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0237:
00969e 30e2      	CPI  R30,LOW(0x2)
00969f e0a0      	LDI  R26,HIGH(0x2)
0096a0 07fa      	CPC  R31,R26
0096a1 f481      	BRNE _0x2C0238
0096a2 91a0 1a47 	LDS  R26,_cursor_S0160000000
0096a4 30a4      	CPI  R26,LOW(0x4)
0096a5 f414      	BRGE _0x2C0239
0096a6 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C0239:
0096a8 940e d542 	CALL SUBOPT_0x2CA
0096aa 30a5      	CPI  R26,LOW(0x5)
0096ab f01c      	BRLT _0x2C023A
0096ac e0e0      	LDI  R30,LOW(0)
0096ad 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C023A:
0096af 940e d852 	CALL SUBOPT_0x31C
0096b1 c05a      	RJMP _0x2C0236
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0238:
0096b2 30e3      	CPI  R30,LOW(0x3)
0096b3 e0a0      	LDI  R26,HIGH(0x3)
0096b4 07fa      	CPC  R31,R26
0096b5 f479      	BRNE _0x2C023B
0096b6 91a0 1a47 	LDS  R26,_cursor_S0160000000
0096b8 30a4      	CPI  R26,LOW(0x4)
0096b9 f414      	BRGE _0x2C023C
0096ba 940e d84d 	CALL SUBOPT_0x31B
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C023C:
0096bc 940e d52e 	CALL SUBOPT_0x2C8
0096be f41c      	BRGE _0x2C023D
0096bf e0e4      	LDI  R30,LOW(4)
0096c0 93e0 1a47 	STS  _cursor_S0160000000,R30
                 _0x2C023D:
0096c2 940e d852 	CALL SUBOPT_0x31C
0096c4 c047      	RJMP _0x2C0236
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 _0x2C023B:
0096c5 30e4      	CPI  R30,LOW(0x4)
0096c6 e0a0      	LDI  R26,HIGH(0x4)
0096c7 07fa      	CPC  R31,R26
0096c8 f011      	BREQ PC+3
0096c9 940c 970c 	JMP _0x2C0236
0096cb 91a0 1a47 	LDS  R26,_cursor_S0160000000
0096cd 30a4      	CPI  R26,LOW(0x4)
0096ce f541      	BRNE _0x2C023F
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
0096cf 940e d922 	CALL SUBOPT_0x33E
                +
0096d1 01fe     +MOVW R30 , R28
0096d2 5be0     +SUBI R30 , LOW ( - 80 )
0096d3 4fff     +SBCI R31 , HIGH ( - 80 )
0096d4 9001     +LD R0 , Z +
0096d5 81f0     +LD R31 , Z
0096d6 2de0     +MOV R30 , R0
                 	__GETW1SX 80
0096d7 940e d402 	CALL SUBOPT_0x2A5
0096d9 d4e8      	RCALL _recmp
0096da 9730      	SBIW R30,0
0096db f079      	BREQ _0x2C0240
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
0096dc e0e1      	LDI  R30,LOW(1)
0096dd 93e0 1a49 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
0096df e2e3      	LDI  R30,LOW(35)
0096e0 940e d55b 	CALL SUBOPT_0x2CC
0096e2 940e d927 	CALL SUBOPT_0x33F
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
0096e4 940e d922 	CALL SUBOPT_0x33E
0096e6 940e d87a 	CALL SUBOPT_0x323
0096e8 940e a7d5 	CALL _memset
                 ; 0016 044B                                     break;
0096ea c021      	RJMP _0x2C0236
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 _0x2C0240:
0096eb e1e5      	LDI  R30,LOW(21)
0096ec 940e d55b 	CALL SUBOPT_0x2CC
0096ee 940e d8b2 	CALL SUBOPT_0x32B
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
0096f0 940e d922 	CALL SUBOPT_0x33E
0096f2 940e d87a 	CALL SUBOPT_0x323
0096f4 940e a7d5 	CALL _memset
                 ; 0016 0451                                 break;
0096f6 c015      	RJMP _0x2C0236
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 _0x2C023F:
0096f7 91a0 1a47 	LDS  R26,_cursor_S0160000000
0096f9 30a4      	CPI  R26,LOW(0x4)
0096fa f48c      	BRGE _0x2C0242
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
0096fb 940e d820 	CALL SUBOPT_0x314
0096fd 5ba6      	SUBI R26,LOW(-_entPwd_S0160000000)
0096fe 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
0096ff 940e d85f 	CALL SUBOPT_0x31E
009701 f024      	BRLT _0x2C0243
009702 940e d933 	CALL SUBOPT_0x341
009704 e0a0      	LDI  R26,LOW(0)
009705 83a0      	STD  Z+0,R26
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0243:
009706 940e d86a 	CALL SUBOPT_0x320
009708 940e d933 	CALL SUBOPT_0x341
00970a 940e d871 	CALL SUBOPT_0x321
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 _0x2C0242:
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 _0x2C0236:
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
00970c c0f3      	RJMP _0x2C0244
                 _0x2C0233:
00970d 91a0 14df 	LDS  R26,_currentPage
00970f 32a3      	CPI  R26,LOW(0x23)
009710 f011      	BREQ PC+3
009711 940c 9757 	JMP _0x2C0245
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
009713 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
009715 f409      	BRNE _0x2C0249
009716 c03f      	RJMP _0x2C0248
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C0249:
009717 30e2      	CPI  R30,LOW(0x2)
009718 e0a0      	LDI  R26,HIGH(0x2)
009719 07fa      	CPC  R31,R26
00971a f1d9      	BREQ _0x2C0248
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
00971b 30e3      	CPI  R30,LOW(0x3)
00971c e0a0      	LDI  R26,HIGH(0x3)
00971d 07fa      	CPC  R31,R26
00971e f1b9      	BREQ _0x2C0248
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
00971f 30e4      	CPI  R30,LOW(0x4)
009720 e0a0      	LDI  R26,HIGH(0x4)
009721 07fa      	CPC  R31,R26
009722 f599      	BRNE _0x2C0248
009723 91e0 1a49 	LDS  R30,_tmpPrevPage_S0160000000
009725 940e d054 	CALL SUBOPT_0x21D
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
009727 f459      	BRNE _0x2C0250
009728 e0e1      	LDI  R30,LOW(1)
009729 93e0 14df 	STS  _currentPage,R30
00972b e0e3      	LDI  R30,LOW(3)
00972c 93e0 1a47 	STS  _cursor_S0160000000,R30
                +
00972e ecec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00972f e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
009730 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
009731 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
009732 c01d      	RJMP _0x2C02CF
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 _0x2C0250:
009733 30e2      	CPI  R30,LOW(0x2)
009734 e0a0      	LDI  R26,HIGH(0x2)
009735 07fa      	CPC  R31,R26
009736 f431      	BRNE _0x2C0251
009737 e0e2      	LDI  R30,LOW(2)
009738 940e d747 	CALL SUBOPT_0x2F6
00973a 940e d753 	CALL SUBOPT_0x2F8
00973c c013      	RJMP _0x2C02CF
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0251:
00973d 30ee      	CPI  R30,LOW(0xE)
00973e e0a0      	LDI  R26,HIGH(0xE)
00973f 07fa      	CPC  R31,R26
009740 f431      	BRNE _0x2C0252
009741 e0ee      	LDI  R30,LOW(14)
009742 940e d747 	CALL SUBOPT_0x2F6
009744 940e d918 	CALL SUBOPT_0x33C
009746 c009      	RJMP _0x2C02CF
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C0252:
009747 31e1      	CPI  R30,LOW(0x11)
009748 e0a0      	LDI  R26,HIGH(0x11)
009749 07fa      	CPC  R31,R26
00974a f459      	BRNE _0x2C024F
00974b e1e1      	LDI  R30,LOW(17)
00974c 940e d747 	CALL SUBOPT_0x2F6
00974e 940e d91d 	CALL SUBOPT_0x33D
                 _0x2C02CF:
009750 940e e400 	CALL __PUTPARD1
009752 940e d833 	CALL SUBOPT_0x317
009754 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 0469                             }
                 _0x2C024F:
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 _0x2C0248:
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
009756 c0a9      	RJMP _0x2C0254
                 _0x2C0245:
009757 91a0 14df 	LDS  R26,_currentPage
009759 32a4      	CPI  R26,LOW(0x24)
00975a f019      	BREQ _0x2C0256
00975b 32a5      	CPI  R26,LOW(0x25)
00975c f009      	BREQ _0x2C0256
00975d c0a2      	RJMP _0x2C0255
                 _0x2C0256:
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
00975e 940e d529 	CALL SUBOPT_0x2C7
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
009760 f409      	BRNE _0x2C025B
009761 c09e      	RJMP _0x2C025A
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C025B:
009762 30e2      	CPI  R30,LOW(0x2)
009763 e0a0      	LDI  R26,HIGH(0x2)
009764 07fa      	CPC  R31,R26
009765 f409      	BRNE _0x2C025C
009766 c099      	RJMP _0x2C025A
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 _0x2C025C:
009767 30e3      	CPI  R30,LOW(0x3)
009768 e0a0      	LDI  R26,HIGH(0x3)
009769 07fa      	CPC  R31,R26
00976a f409      	BRNE _0x2C025D
00976b c094      	RJMP _0x2C025A
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 _0x2C025D:
00976c 30e4      	CPI  R30,LOW(0x4)
00976d e0a0      	LDI  R26,HIGH(0x4)
00976e 07fa      	CPC  R31,R26
00976f f011      	BREQ PC+3
009770 940c 9800 	JMP _0x2C025A
009772 940e d92c 	CALL SUBOPT_0x340
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
009774 f499      	BRNE _0x2C0262
009775 e0e7      	LDI  R30,LOW(7)
009776 940e d939 	CALL SUBOPT_0x342
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
009778 30a8      	CPI  R26,LOW(0x8)
009779 f411      	BRNE _0x2C0263
00977a e0e0      	LDI  R30,LOW(0)
00977b c005      	RJMP _0x2C02D0
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 _0x2C0263:
00977c 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
00977e 30ad      	CPI  R26,LOW(0xD)
00977f f419      	BRNE _0x2C0265
009780 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D0:
009781 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 _0x2C0265:
                +
009783 efea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
009784 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
009785 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
009786 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
009787 c06e      	RJMP _0x2C02D1
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 _0x2C0262:
009788 30ee      	CPI  R30,LOW(0xE)
009789 e0a0      	LDI  R26,HIGH(0xE)
00978a 07fa      	CPC  R31,R26
00978b f431      	BRNE _0x2C0266
00978c e0ee      	LDI  R30,LOW(14)
00978d 940e d747 	CALL SUBOPT_0x2F6
00978f 940e d918 	CALL SUBOPT_0x33C
009791 c064      	RJMP _0x2C02D1
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 _0x2C0266:
009792 31e1      	CPI  R30,LOW(0x11)
009793 e0a0      	LDI  R26,HIGH(0x11)
009794 07fa      	CPC  R31,R26
009795 f489      	BRNE _0x2C0267
009796 e1e1      	LDI  R30,LOW(17)
009797 940e d939 	CALL SUBOPT_0x342
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
009799 31a2      	CPI  R26,LOW(0x12)
00979a f411      	BRNE _0x2C0268
00979b e0e0      	LDI  R30,LOW(0)
00979c c005      	RJMP _0x2C02D2
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 _0x2C0268:
00979d 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
00979f 31a4      	CPI  R26,LOW(0x14)
0097a0 f419      	BRNE _0x2C026A
0097a1 e0e1      	LDI  R30,LOW(1)
                 _0x2C02D2:
0097a2 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 _0x2C026A:
0097a4 940e d91d 	CALL SUBOPT_0x33D
0097a6 c04f      	RJMP _0x2C02D1
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 _0x2C0267:
0097a7 31e5      	CPI  R30,LOW(0x15)
0097a8 e0a0      	LDI  R26,HIGH(0x15)
0097a9 07fa      	CPC  R31,R26
0097aa f4c9      	BRNE _0x2C026B
0097ab e1e5      	LDI  R30,LOW(21)
0097ac 940e d939 	CALL SUBOPT_0x342
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
0097ae 31a6      	CPI  R26,LOW(0x16)
0097af f411      	BRNE _0x2C026C
0097b0 e0e0      	LDI  R30,LOW(0)
0097b1 c00b      	RJMP _0x2C02D3
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 _0x2C026C:
0097b2 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
0097b4 31ab      	CPI  R26,LOW(0x1B)
0097b5 f411      	BRNE _0x2C026E
0097b6 e0e2      	LDI  R30,LOW(2)
0097b7 c005      	RJMP _0x2C02D3
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 _0x2C026E:
0097b8 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
0097ba 32a0      	CPI  R26,LOW(0x20)
0097bb f419      	BRNE _0x2C0270
0097bc e0e3      	LDI  R30,LOW(3)
                 _0x2C02D3:
0097bd 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 _0x2C0270:
                +
0097bf e5e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
0097c0 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
0097c1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
0097c2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
0097c3 c032      	RJMP _0x2C02D1
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 _0x2C026B:
0097c4 31e8      	CPI  R30,LOW(0x18)
0097c5 e0a0      	LDI  R26,HIGH(0x18)
0097c6 07fa      	CPC  R31,R26
0097c7 f461      	BRNE _0x2C0271
0097c8 e1e8      	LDI  R30,LOW(24)
0097c9 940e d55b 	CALL SUBOPT_0x2CC
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
0097cb 940e d8a6 	CALL SUBOPT_0x329
0097cd 91e0 1a92 	LDS  R30,_prb2_S0160000000
0097cf e0f0      	LDI  R31,0
0097d0 9631      	ADIW R30,1
0097d1 940e e2dd 	CALL __CWD1
0097d3 c028      	RJMP _0x2C02D4
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 _0x2C0271:
0097d4 31eb      	CPI  R30,LOW(0x1B)
0097d5 e0a0      	LDI  R26,HIGH(0x1B)
0097d6 07fa      	CPC  R31,R26
0097d7 f541      	BRNE _0x2C0261
0097d8 e1eb      	LDI  R30,LOW(27)
0097d9 940e d939 	CALL SUBOPT_0x342
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
0097db 31ac      	CPI  R26,LOW(0x1C)
0097dc f411      	BRNE _0x2C0273
0097dd e0e0      	LDI  R30,LOW(0)
0097de c011      	RJMP _0x2C02D5
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 _0x2C0273:
0097df 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
0097e1 31ad      	CPI  R26,LOW(0x1D)
0097e2 f411      	BRNE _0x2C0275
0097e3 e0e1      	LDI  R30,LOW(1)
0097e4 c00b      	RJMP _0x2C02D5
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 _0x2C0275:
0097e5 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
0097e7 31ae      	CPI  R26,LOW(0x1E)
0097e8 f411      	BRNE _0x2C0277
0097e9 e0e2      	LDI  R30,LOW(2)
0097ea c005      	RJMP _0x2C02D5
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 _0x2C0277:
0097eb 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
0097ed 31af      	CPI  R26,LOW(0x1F)
0097ee f419      	BRNE _0x2C0279
0097ef e0e3      	LDI  R30,LOW(3)
                 _0x2C02D5:
0097f0 93e0 1a47 	STS  _cursor_S0160000000,R30
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 _0x2C0279:
                +
0097f2 e7e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
0097f3 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
0097f4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
0097f5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
                 _0x2C02D1:
0097f6 940e e400 	CALL __PUTPARD1
0097f8 91e0 1a47 	LDS  R30,_cursor_S0160000000
0097fa 940e e2d7 	CALL __CBD1
                 _0x2C02D4:
0097fc 940e e400 	CALL __PUTPARD1
0097fe 940e d366 	CALL SUBOPT_0x28D
                 ; 0016 048D                             }
                 _0x2C0261:
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 _0x2C025A:
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 _0x2C0255:
                 _0x2C0254:
                 _0x2C0244:
                 _0x2C0232:
                 _0x2C0210:
                 _0x2C0207:
                 _0x2C01FC:
                 _0x2C01DA:
                 _0x2C01C2:
                 _0x2C01B2:
                 _0x2C01A7:
                 _0x2C0197:
                 _0x2C0187:
                 _0x2C0177:
                 _0x2C0160:
                 _0x2C014D:
                 _0x2C013C:
                 _0x2C012D:
                 _0x2C011E:
                 _0x2C010A:
                 _0x2C00FF:
                 _0x2C00F0:
                 _0x2C00E6:
                 _0x2C00D3:
                 _0x2C00BD:
                 _0x2C00A7:
                 _0x2C0091:
                 _0x2C007E:
                 _0x2C006C:
                 _0x2C0062:
                 _0x2C0058:
                 _0x2C004E:
                 _0x2C0028:
                 _0x2C0019:
                 _0x2C0006:
009800 940e e47c 	CALL __LOADLOCR6
009802 96ef      	ADIW R28,63
009803 9668      	ADIW R28,24
009804 9508      	RET
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 _showProbeConfig:
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
009805 93ba      	ST   -Y,R27
009806 93aa      	ST   -Y,R26
009807 9764      	SBIW R28,20
009808 e184      	LDI  R24,20
009809 e0a0      	LDI  R26,LOW(0)
00980a e0b0      	LDI  R27,HIGH(0)
00980b ebe8      	LDI  R30,LOW(_0x2C027A*2)
00980c e5fe      	LDI  R31,HIGH(_0x2C027A*2)
00980d e060      	LDI  R22,BYTE3(_0x2C027A*2)
00980e 940e e483 	CALL __INITLOCB
009810 940e d2f8 	CALL SUBOPT_0x27A
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                +
009812 e020     +LDI R18 , LOW ( 0 )
009813 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
009814 8da8      	LDD  R26,Y+24
009815 8db9      	LDD  R27,Y+24+1
009816 e1ed      	LDI  R30,LOW(29)
009817 940e e31e 	CALL __MULB1W2U
009819 54e2      	SUBI R30,LOW(-_sensor_config)
00981a 4efe      	SBCI R31,HIGH(-_sensor_config)
00981b 01df      	MOVW R26,R30
00981c 940e d93e 	CALL SUBOPT_0x343
00981e 01de      	MOVW R26,R28
00981f 9656      	ADIW R26,22
009820 d0ae      	RCALL _get_current_sampling
009821 018f      	MOVW R16,R30
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
009822 2311      	TST  R17
009823 f42a      	BRPL _0x2C027B
                 ; 0016 04A8         val[0] = 0;
009824 e0e0      	LDI  R30,LOW(0)
009825 8bec      	STD  Y+20,R30
                 ; 0016 04A9         val[1] = 0;
009826 8bed      	STD  Y+21,R30
                 ; 0016 04AA         val[2] = 0;
009827 8bee      	STD  Y+22,R30
                 ; 0016 04AB         val[3] = 0;
009828 8bef      	STD  Y+23,R30
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 _0x2C027B:
                +
009829 e020     +LDI R18 , LOW ( 0 )
00982a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0016 04AF     sampling += val[0] * 100;
00982b 89ac      	LDD  R26,Y+20
00982c e6e4      	LDI  R30,LOW(100)
00982d 02ea      	MULS R30,R26
00982e 01f0      	MOVW R30,R0
                +
00982f 0f2e     +ADD R18 , R30
009830 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B0     sampling += val[1] * 10;
009831 89ad      	LDD  R26,Y+21
009832 e0ea      	LDI  R30,LOW(10)
009833 02ea      	MULS R30,R26
009834 01f0      	MOVW R30,R0
                +
009835 0f2e     +ADD R18 , R30
009836 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B1     sampling += val[2];
009837 89ee      	LDD  R30,Y+22
009838 e0f0      	LDI  R31,0
009839 fde7      	SBRC R30,7
00983a efff      	SER  R31
                +
00983b 0f2e     +ADD R18 , R30
00983c 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
00983d 940e c4e1 	CALL SUBOPT_0x5A
00983f e0e0      	LDI  R30,LOW(0)
009840 93ea      	ST   -Y,R30
009841 940e ce56 	CALL SUBOPT_0x1E1
009843 940e a7d5 	CALL _memset
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                +
009845 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
009846 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
009847 8da8      	LDD  R26,Y+24
009848 8db9      	LDD  R27,Y+24+1
009849 940e d12f 	CALL SUBOPT_0x237
00984b f439      	BRNE _0x2C027C
00984c 940e c4e1 	CALL SUBOPT_0x5A
                +
00984e eaee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 994 ) )
00984f e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 994 ) )
009850 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 994 ) )
009851 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 994 ) )
                 	__POINTD1FN _0x2C0000,994
009852 c006      	RJMP _0x2C02D6
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 _0x2C027C:
009853 940e c4e1 	CALL SUBOPT_0x5A
                +
009855 ebe2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 998 ) )
009856 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 998 ) )
009857 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 998 ) )
009858 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 998 ) )
                 	__POINTD1FN _0x2C0000,998
                 _0x2C02D6:
009859 940e e400 	CALL __PUTPARD1
00985b 940e d5d4 	CALL SUBOPT_0x2DB
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
00985d 01fe      	MOVW R30,R28
00985e 9634      	ADIW R30,4
00985f 940e c8c7 	CALL SUBOPT_0xF7
009861 940e ce56 	CALL SUBOPT_0x1E1
009863 940e a7d5 	CALL _memset
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
009865 8da8      	LDD  R26,Y+24
009866 8db9      	LDD  R27,Y+24+1
009867 e1ed      	LDI  R30,LOW(29)
009868 940e e31e 	CALL __MULB1W2U
                +
00986a 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00986b 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00986c 81a0      	LD   R26,Z
00986d 30a1      	CPI  R26,LOW(0x1)
00986e f449      	BRNE _0x2C027E
00986f 01fe      	MOVW R30,R28
009870 9634      	ADIW R30,4
009871 93fa      	ST   -Y,R31
009872 93ea      	ST   -Y,R30
                +
009873 ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1002 ) )
009874 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1002 ) )
009875 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1002 ) )
009876 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1002 ) )
                 	__POINTD1FN _0x2C0000,1002
009877 c008      	RJMP _0x2C02D7
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 _0x2C027E:
009878 01fe      	MOVW R30,R28
009879 9634      	ADIW R30,4
00987a 93fa      	ST   -Y,R31
00987b 93ea      	ST   -Y,R30
                +
00987c ebed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1009 ) )
00987d e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1009 ) )
00987e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1009 ) )
00987f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1009 ) )
                 	__POINTD1FN _0x2C0000,1009
                 _0x2C02D7:
009880 940e e400 	CALL __PUTPARD1
009882 940e d5d4 	CALL SUBOPT_0x2DB
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                +
009884 ece5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1017 ) )
009885 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1017 ) )
009886 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1017 ) )
009887 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1017 ) )
                 	__POINTD1FN _0x2C0000,1017
009888 940e c8a6 	CALL SUBOPT_0xF1
00988a 940e d216 	CALL SUBOPT_0x258
00988c 940e d943 	CALL SUBOPT_0x344
00988e 01fe      	MOVW R30,R28
00988f 967c      	ADIW R30,28
009890 940e c3d6 	CALL SUBOPT_0x34
009892 01fe      	MOVW R30,R28
009893 9678      	ADIW R30,24
009894 940e c3d6 	CALL SUBOPT_0x34
009896 940e d948 	CALL SUBOPT_0x345
009898 a9ac      	LDD  R26,Y+52
009899 a9bd      	LDD  R27,Y+52+1
00989a 940e d2ab 	CALL SUBOPT_0x26F
00989c 940e d951 	CALL SUBOPT_0x346
00989e 940e d95c 	CALL SUBOPT_0x347
0098a0 940e d965 	CALL SUBOPT_0x348
0098a2 940e d96c 	CALL SUBOPT_0x349
0098a4 e28c      	LDI  R24,44
0098a5 940e 9ef8 	CALL _printDebug
0098a7 96e0      	ADIW R28,48
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                +
0098a8 ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1035 ) )
0098a9 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1035 ) )
0098aa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1035 ) )
0098ab e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1035 ) )
                 	__POINTD1FN _0x2C0000,1035
0098ac 940e c8a6 	CALL SUBOPT_0xF1
0098ae 940e d216 	CALL SUBOPT_0x258
0098b0 940e d943 	CALL SUBOPT_0x344
0098b2 01fe      	MOVW R30,R28
0098b3 967c      	ADIW R30,28
0098b4 940e c3d6 	CALL SUBOPT_0x34
0098b6 01fe      	MOVW R30,R28
0098b7 9678      	ADIW R30,24
0098b8 940e c3d6 	CALL SUBOPT_0x34
0098ba 940e d948 	CALL SUBOPT_0x345
0098bc a9ac      	LDD  R26,Y+52
0098bd a9bd      	LDD  R27,Y+52+1
0098be 940e d2ab 	CALL SUBOPT_0x26F
0098c0 940e d951 	CALL SUBOPT_0x346
0098c2 940e d95c 	CALL SUBOPT_0x347
0098c4 940e d965 	CALL SUBOPT_0x348
0098c6 940e d96c 	CALL SUBOPT_0x349
0098c8 e28c      	LDI  R24,44
0098c9 940e 8079 	CALL _printOLED
0098cb 96e0      	ADIW R28,48
                 ; 0016 04CF 
                 ; 0016 04D0 }
0098cc 940e e47e 	CALL __LOADLOCR4
0098ce c157      	RJMP _0x20E0035
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 _get_current_sampling:
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
0098cf 940e d97b 	CALL SUBOPT_0x34A
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                +
0098d1 e0e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1078 ) )
0098d2 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1078 ) )
0098d3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1078 ) )
0098d4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1078 ) )
                 	__POINTD1FN _0x2C0000,1078
0098d5 940e c274 	CALL SUBOPT_0x3
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
0098d7 85aa      	LDD  R26,Y+10
0098d8 85bb      	LDD  R27,Y+10+1
0098d9 e1e0      	LDI  R30,LOW(3600)
0098da e0fe      	LDI  R31,HIGH(3600)
0098db 940e e33c 	CALL __DIVW21U
0098dd 01af      	MOVW R20,R30
                 ; 0016 04DA     hr_c = period % 3600;
0098de 85aa      	LDD  R26,Y+10
0098df 85bb      	LDD  R27,Y+10+1
0098e0 e1e0      	LDI  R30,LOW(3600)
0098e1 e0fe      	LDI  R31,HIGH(3600)
0098e2 940e e38a 	CALL __MODW21U
0098e4 83ee      	STD  Y+6,R30
0098e5 83ff      	STD  Y+6+1,R31
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
0098e6 2400      	CLR  R0
0098e7 1604      	CP   R0,R20
0098e8 0605      	CPC  R0,R21
0098e9 f440      	BRSH _0x2C0281
                +
0098ea 3e48     +CPI R20 , LOW ( 1000 )
0098eb e0e3     +LDI R30 , HIGH ( 1000 )
0098ec 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
0098ed f420      	BRSH _0x2C0281
0098ee 81ae      	LDD  R26,Y+6
0098ef 81bf      	LDD  R27,Y+6+1
0098f0 9710      	SBIW R26,0
0098f1 f009      	BREQ _0x2C0282
                 _0x2C0281:
0098f2 c00b      	RJMP _0x2C0280
                 _0x2C0282:
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                +
0098f3 e3e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1126 ) )
0098f4 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1126 ) )
0098f5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1126 ) )
0098f6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1126 ) )
                 	__POINTD1FN _0x2C0000,1126
0098f7 940e d981 	CALL SUBOPT_0x34B
0098f9 940e c2ea 	CALL SUBOPT_0x12
                 ; 0016 04DD         val[0] = hr / 100;
0098fb 940e d986 	CALL SUBOPT_0x34C
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
0098fd c0b8      	RJMP _0x20E0036
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 _0x2C0280:
0098fe 85aa      	LDD  R26,Y+10
0098ff 85bb      	LDD  R27,Y+10+1
009900 e3ec      	LDI  R30,LOW(60)
009901 e0f0      	LDI  R31,HIGH(60)
009902 940e e33c 	CALL __DIVW21U
009904 018f      	MOVW R16,R30
                 ; 0016 04E6     min_c = period % 60;
009905 85aa      	LDD  R26,Y+10
009906 85bb      	LDD  R27,Y+10+1
009907 e3ec      	LDI  R30,LOW(60)
009908 e0f0      	LDI  R31,HIGH(60)
009909 940e e38a 	CALL __MODW21U
00990b 019f      	MOVW R18,R30
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
00990c 2400      	CLR  R0
00990d 1600      	CP   R0,R16
00990e 0601      	CPC  R0,R17
00990f f440      	BRSH _0x2C0284
                +
009910 3e08     +CPI R16 , LOW ( 1000 )
009911 e0e3     +LDI R30 , HIGH ( 1000 )
009912 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
009913 f420      	BRSH _0x2C0284
009914 2400      	CLR  R0
009915 1602      	CP   R0,R18
009916 0603      	CPC  R0,R19
009917 f009      	BREQ _0x2C0285
                 _0x2C0284:
009918 c00b      	RJMP _0x2C0283
                 _0x2C0285:
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                +
009919 e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1158 ) )
00991a e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1158 ) )
00991b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1158 ) )
00991c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1158 ) )
                 	__POINTD1FN _0x2C0000,1158
00991d 940e d9b2 	CALL SUBOPT_0x34D
00991f 940e c2ea 	CALL SUBOPT_0x12
                 ; 0016 04E9         val[0] = min / 100;
009921 940e d9b7 	CALL SUBOPT_0x34E
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
009923 c092      	RJMP _0x20E0036
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 _0x2C0283:
009924 85aa      	LDD  R26,Y+10
009925 85bb      	LDD  R27,Y+10+1
009926 3ea8      	CPI  R26,LOW(0x3E8)
009927 e0e3      	LDI  R30,HIGH(0x3E8)
009928 07be      	CPC  R27,R30
009929 f5a8      	BRSH _0x2C0286
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                +
00992a e7e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1191 ) )
00992b e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1191 ) )
00992c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1191 ) )
00992d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1191 ) )
                 	__POINTD1FN _0x2C0000,1191
00992e 940e e400 	CALL __PUTPARD1
009930 85ee      	LDD  R30,Y+14
009931 85ff      	LDD  R31,Y+14+1
009932 940e c3d6 	CALL SUBOPT_0x34
009934 940e c2ea 	CALL SUBOPT_0x12
                 ; 0016 04F3         val[0] = period / 100;
009936 940e d9e3 	CALL SUBOPT_0x34F
009938 940e e33c 	CALL __DIVW21U
00993a 85a8      	LDD  R26,Y+8
00993b 85b9      	LDD  R27,Y+8+1
00993c 93ec      	ST   X,R30
                 ; 0016 04F4         val[1] = (period % 100) / 10;
00993d 940e d9e3 	CALL SUBOPT_0x34F
00993f 940e e38a 	CALL __MODW21U
009941 01df      	MOVW R26,R30
009942 e0ea      	LDI  R30,LOW(10)
009943 e0f0      	LDI  R31,HIGH(10)
009944 940e e33c 	CALL __DIVW21U
                +
009946 85a8     +LDD R26 , Y + 8
009947 85b9     +LDD R27 , Y + 8 + 1
009948 9611     +ADIW R26 , 1
009949 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
00994a 940e d9e3 	CALL SUBOPT_0x34F
00994c 940e e38a 	CALL __MODW21U
00994e 01df      	MOVW R26,R30
00994f e0ea      	LDI  R30,LOW(10)
009950 e0f0      	LDI  R31,HIGH(10)
009951 940e e38a 	CALL __MODW21U
                +
009953 85a8     +LDD R26 , Y + 8
009954 85b9     +LDD R27 , Y + 8 + 1
009955 9612     +ADIW R26 , 2
009956 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
                 ; 0016 04F6         val[3] = 0;
009957 85a8      	LDD  R26,Y+8
009958 85b9      	LDD  R27,Y+8+1
009959 9613      	ADIW R26,3
00995a e0e0      	LDI  R30,LOW(0)
00995b 93ec      	ST   X,R30
                 ; 0016 04F7         return 0;
00995c e0e0      	LDI  R30,LOW(0)
00995d e0f0      	LDI  R31,HIGH(0)
00995e c057      	RJMP _0x20E0036
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 _0x2C0286:
                +
00995f 3e08     +CPI R16 , LOW ( 1000 )
009960 e0e3     +LDI R30 , HIGH ( 1000 )
009961 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
009962 f4d0      	BRSH _0x2C0287
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                +
009963 e9e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1224 ) )
009964 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1224 ) )
009965 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1224 ) )
009966 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1224 ) )
                 	__POINTD1FN _0x2C0000,1224
009967 940e d9b2 	CALL SUBOPT_0x34D
009969 01f9      	MOVW R30,R18
00996a 940e ca5c 	CALL SUBOPT_0x13F
                 ; 0016 04FC         if(min_c > 30){
                +
00996c 312f     +CPI R18 , LOW ( 31 )
00996d e0e0     +LDI R30 , HIGH ( 31 )
00996e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
00996f f010      	BRLO _0x2C0288
                 ; 0016 04FD             min++;
                +
009970 5f0f     +SUBI R16 , LOW ( - 1 )
009971 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 _0x2C0288:
                +
009972 ebec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1264 ) )
009973 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1264 ) )
009974 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1264 ) )
009975 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1264 ) )
                 	__POINTD1FN _0x2C0000,1264
009976 940e d9b2 	CALL SUBOPT_0x34D
009978 940e c2ea 	CALL SUBOPT_0x12
                 ; 0016 0500         val[0] = min / 100;
00997a 940e d9b7 	CALL SUBOPT_0x34E
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
00997c c039      	RJMP _0x20E0036
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 _0x2C0287:
                +
00997d 3e48     +CPI R20 , LOW ( 1000 )
00997e e0e3     +LDI R30 , HIGH ( 1000 )
00997f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
009980 f568      	BRSH _0x2C0289
                 ; 0016 0508         min   = hr_c / 60;
009981 81ae      	LDD  R26,Y+6
009982 81bf      	LDD  R27,Y+6+1
009983 e3ec      	LDI  R30,LOW(60)
009984 e0f0      	LDI  R31,HIGH(60)
009985 940e e33c 	CALL __DIVW21U
009987 018f      	MOVW R16,R30
                 ; 0016 0509         min_c = hr_c % 60;
009988 81ae      	LDD  R26,Y+6
009989 81bf      	LDD  R27,Y+6+1
00998a e3ec      	LDI  R30,LOW(60)
00998b e0f0      	LDI  R31,HIGH(60)
00998c 940e e38a 	CALL __MODW21U
00998e 019f      	MOVW R18,R30
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                +
00998f ecea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1278 ) )
009990 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1278 ) )
009991 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1278 ) )
009992 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1278 ) )
                 	__POINTD1FN _0x2C0000,1278
009993 940e d981 	CALL SUBOPT_0x34B
009995 01f8      	MOVW R30,R16
009996 940e c3d6 	CALL SUBOPT_0x34
009998 01f9      	MOVW R30,R18
009999 940e c3d6 	CALL SUBOPT_0x34
00999b 940e c52b 	CALL SUBOPT_0x66
                 ; 0016 050B         if(min > 30){
                +
00999d 310f     +CPI R16 , LOW ( 31 )
00999e e0e0     +LDI R30 , HIGH ( 31 )
00999f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,31
0099a0 f010      	BRLO _0x2C028A
                 ; 0016 050C             hr++;
                +
0099a1 5f4f     +SUBI R20 , LOW ( - 1 )
0099a2 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 _0x2C028A:
                +
0099a3 efe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1325 ) )
0099a4 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1325 ) )
0099a5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1325 ) )
0099a6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1325 ) )
                 	__POINTD1FN _0x2C0000,1325
0099a7 940e d981 	CALL SUBOPT_0x34B
0099a9 940e c2ea 	CALL SUBOPT_0x12
                 ; 0016 050F         val[0] = hr / 100;
0099ab 940e d986 	CALL SUBOPT_0x34C
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
0099ad c008      	RJMP _0x20E0036
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 _0x2C0289:
                +
0099ae e0e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1338 ) )
0099af e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1338 ) )
0099b0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1338 ) )
0099b1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1338 ) )
                 	__POINTD1FN _0x2C0000,1338
0099b2 940e c274 	CALL SUBOPT_0x3
                 ; 0016 0517     return -1;
0099b4 efef      	LDI  R30,LOW(65535)
0099b5 efff      	LDI  R31,HIGH(65535)
                 _0x20E0036:
0099b6 940e e47c 	CALL __LOADLOCR6
0099b8 962c      	ADIW R28,12
0099b9 9508      	RET
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 _get_current_vref:
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
0099ba 93ba      	ST   -Y,R27
0099bb 93aa      	ST   -Y,R26
0099bc 9762      	SBIW R28,18
0099bd 940e e475 	CALL __SAVELOCR6
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
0099bf 940e d9e8 	CALL SUBOPT_0x350
0099c1 940e d9ed 	CALL SUBOPT_0x351
0099c3 940e e234 	CALL __CMPF12
0099c5 f009      	BREQ PC+2
0099c6 f410      	BRCC PC+3
0099c7 940c 99cc 	JMP  _0x2C028B
                 ; 0016 0526         return -1;
0099c9 efef      	LDI  R30,LOW(65535)
0099ca efff      	LDI  R31,HIGH(65535)
0099cb c058      	RJMP _0x20E0034
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 _0x2C028B:
0099cc 940e d9e8 	CALL SUBOPT_0x350
0099ce 940e d9f1 	CALL SUBOPT_0x352
                 ; 0016 052A     ftoa(vref,2,valTmp);
0099d0 940e d9f6 	CALL SUBOPT_0x353
0099d2 e0e2      	LDI  R30,LOW(2)
0099d3 93ea      	ST   -Y,R30
0099d4 01de      	MOVW R26,R28
0099d5 9653      	ADIW R26,19
0099d6 940e a4f0 	CALL _ftoa
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
0099d8 01de      	MOVW R26,R28
0099d9 961e      	ADIW R26,14
0099da 940e a81c 	CALL _strlen
0099dc 30e4      	CPI  R30,LOW(0x4)
0099dd e0a0      	LDI  R26,HIGH(0x4)
0099de 07fa      	CPC  R31,R26
0099df f019      	BREQ _0x2C028C
0099e0 efef      	LDI  R30,LOW(65535)
0099e1 efff      	LDI  R31,HIGH(65535)
0099e2 c041      	RJMP _0x20E0034
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 _0x2C028C:
                +
0099e3 e2eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1375 ) )
0099e4 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1375 ) )
0099e5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1375 ) )
0099e6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1375 ) )
                 	__POINTD1FN _0x2C0000,1375
0099e7 940e e400 	CALL __PUTPARD1
0099e9 940e d9e8 	CALL SUBOPT_0x350
0099eb 940e e400 	CALL __PUTPARD1
0099ed 01fe      	MOVW R30,R28
0099ee 9676      	ADIW R30,22
0099ef 940e ca5c 	CALL SUBOPT_0x13F
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
0099f1 85ee      	LDD  R30,Y+14
0099f2 53e0      	SUBI R30,LOW(48)
0099f3 8da8      	LDD  R26,Y+24
0099f4 8db9      	LDD  R27,Y+24+1
0099f5 93ec      	ST   X,R30
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
0099f6 89e8      	LDD  R30,Y+16
0099f7 53e0      	SUBI R30,LOW(48)
                +
0099f8 8da8     +LDD R26 , Y + 24
0099f9 8db9     +LDD R27 , Y + 24 + 1
0099fa 9611     +ADIW R26 , 1
0099fb 93ec     +ST X , R30
                 	__PUTB1SNS 24,1
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
0099fc 89e9      	LDD  R30,Y+17
0099fd 53e0      	SUBI R30,LOW(48)
                +
0099fe 8da8     +LDD R26 , Y + 24
0099ff 8db9     +LDD R27 , Y + 24 + 1
009a00 9612     +ADIW R26 , 2
009a01 93ec     +ST X , R30
                 	__PUTB1SNS 24,2
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                +
009a02 e5e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1417 ) )
009a03 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1417 ) )
009a04 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1417 ) )
009a05 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1417 ) )
                 	__POINTD1FN _0x2C0000,1417
009a06 940e c274 	CALL SUBOPT_0x3
                 ; 0016 0540     for(i=0;i<3;i++){
                +
009a08 e000     +LDI R16 , LOW ( 0 )
009a09 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C028E:
                +
009a0a 3003     +CPI R16 , LOW ( 3 )
009a0b e0e0     +LDI R30 , HIGH ( 3 )
009a0c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
009a0d f474      	BRGE _0x2C028F
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                +
009a0e e7e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1444 ) )
009a0f e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1444 ) )
009a10 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1444 ) )
009a11 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1444 ) )
                 	__POINTD1FN _0x2C0000,1444
009a12 940e e400 	CALL __PUTPARD1
009a14 01f8      	MOVW R30,R16
009a15 8dac      	LDD  R26,Y+28
009a16 8dbd      	LDD  R27,Y+28+1
009a17 940e cc25 	CALL SUBOPT_0x184
                 ; 0016 0542     }
                +
009a19 5f0f     +SUBI R16 , LOW ( - 1 )
009a1a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009a1b cfee      	RJMP _0x2C028E
                 _0x2C028F:
                 ; 0016 0543     printDebug("\r\n");
                +
009a1c e8ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
009a1d e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
009a1e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
009a1f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
009a20 940e c274 	CALL SUBOPT_0x3
                 ; 0016 0544 
                 ; 0016 0545     return 0;
009a22 e0e0      	LDI  R30,LOW(0)
009a23 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0034:
009a24 940e e47c 	CALL __LOADLOCR6
                 _0x20E0035:
009a26 966a      	ADIW R28,26
009a27 9508      	RET
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 _getNetworkInfo:
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
009a28 93ba      ; 0016 0551     offset = 7;
009a29 93aa      	ST   -Y,R27
009a2a 9760      	ST   -Y,R26
009a2b 940e e477 	SBIW R28,16
                 	CALL __SAVELOCR4
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                +
009a2d e027     +LDI R18 , LOW ( 7 )
009a2e e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
009a2f 0189      	MOVW R16,R18
                 _0x2C0291:
009a30 940e d9fb 	CALL SUBOPT_0x354
009a32 f554      	BRGE _0x2C0292
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009a33 940e da00 	CALL SUBOPT_0x355
009a35 0fea      	ADD  R30,R26
009a36 1ffb      	ADC  R31,R27
009a37 93ff      	PUSH R31
009a38 93ef      	PUSH R30
009a39 940e da06 	CALL SUBOPT_0x356
009a3b 93ef      	PUSH R30
009a3c 940e da14 	CALL SUBOPT_0x357
009a3e 91af      	POP  R26
009a3f 0fea      	ADD  R30,R26
009a40 91af      	POP  R26
009a41 91bf      	POP  R27
009a42 940e da1f 	CALL SUBOPT_0x358
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
009a44 940e da28 	CALL SUBOPT_0x359
009a46 940e da2e 	CALL SUBOPT_0x35A
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
009a48 9631      	ADIW R30,1
009a49 940e da28 	CALL SUBOPT_0x359
009a4b 940e da39 	CALL SUBOPT_0x35B
009a4d 940e cf0d 	CALL SUBOPT_0x1FF
009a4f 940e da3e 	CALL SUBOPT_0x35C
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
009a51 9632      	ADIW R30,2
009a52 940e da28 	CALL SUBOPT_0x359
009a54 940e da39 	CALL SUBOPT_0x35B
009a56 940e d265 	CALL SUBOPT_0x265
009a58 01db      	MOVW R26,R22
009a59 93ec      	ST   X,R30
                 ; 0016 0557     }
                +
009a5a 5f0f     +SUBI R16 , LOW ( - 1 )
009a5b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009a5c cfd3      	RJMP _0x2C0291
                 _0x2C0292:
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                +
009a5d e02b     +LDI R18 , LOW ( 11 )
009a5e e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
009a5f 0189      	MOVW R16,R18
                 _0x2C0294:
009a60 940e d9fb 	CALL SUBOPT_0x354
009a62 f554      	BRGE _0x2C0295
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009a63 940e da45 	CALL SUBOPT_0x35D
009a65 0fea      	ADD  R30,R26
009a66 1ffb      	ADC  R31,R27
009a67 93ff      	PUSH R31
009a68 93ef      	PUSH R30
009a69 940e da06 	CALL SUBOPT_0x356
009a6b 93ef      	PUSH R30
009a6c 940e da14 	CALL SUBOPT_0x357
009a6e 91af      	POP  R26
009a6f 0fea      	ADD  R30,R26
009a70 91af      	POP  R26
009a71 91bf      	POP  R27
009a72 940e da1f 	CALL SUBOPT_0x358
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
009a74 940e da4b 	CALL SUBOPT_0x35E
009a76 940e da2e 	CALL SUBOPT_0x35A
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
009a78 9631      	ADIW R30,1
009a79 940e da4b 	CALL SUBOPT_0x35E
009a7b 940e da39 	CALL SUBOPT_0x35B
009a7d 940e cf0d 	CALL SUBOPT_0x1FF
009a7f 940e da3e 	CALL SUBOPT_0x35C
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
009a81 9632      	ADIW R30,2
009a82 940e da4b 	CALL SUBOPT_0x35E
009a84 940e da39 	CALL SUBOPT_0x35B
009a86 940e d265 	CALL SUBOPT_0x265
009a88 01db      	MOVW R26,R22
009a89 93ec      	ST   X,R30
                 ; 0016 055F     }
                +
009a8a 5f0f     +SUBI R16 , LOW ( - 1 )
009a8b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009a8c cfd3      	RJMP _0x2C0294
                 _0x2C0295:
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                +
009a8d e02f     +LDI R18 , LOW ( 15 )
009a8e e030     +LDI R19 , HIGH ( 15 )
                 	__GETWRN 18,19,15
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
009a8f 0189      	MOVW R16,R18
                 _0x2C0297:
009a90 940e d9fb 	CALL SUBOPT_0x354
009a92 f554      	BRGE _0x2C0298
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009a93 940e da51 	CALL SUBOPT_0x35F
009a95 0fea      	ADD  R30,R26
009a96 1ffb      	ADC  R31,R27
009a97 93ff      	PUSH R31
009a98 93ef      	PUSH R30
009a99 940e da06 	CALL SUBOPT_0x356
009a9b 93ef      	PUSH R30
009a9c 940e da14 	CALL SUBOPT_0x357
009a9e 91af      	POP  R26
009a9f 0fea      	ADD  R30,R26
009aa0 91af      	POP  R26
009aa1 91bf      	POP  R27
009aa2 940e da1f 	CALL SUBOPT_0x358
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
009aa4 940e da57 	CALL SUBOPT_0x360
009aa6 940e da2e 	CALL SUBOPT_0x35A
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
009aa8 9631      	ADIW R30,1
009aa9 940e da57 	CALL SUBOPT_0x360
009aab 940e da39 	CALL SUBOPT_0x35B
009aad 940e cf0d 	CALL SUBOPT_0x1FF
009aaf 940e da3e 	CALL SUBOPT_0x35C
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
009ab1 9632      	ADIW R30,2
009ab2 940e da57 	CALL SUBOPT_0x360
009ab4 940e da39 	CALL SUBOPT_0x35B
009ab6 940e d265 	CALL SUBOPT_0x265
009ab8 01db      	MOVW R26,R22
009ab9 93ec      	ST   X,R30
                 ; 0016 0567     }
                +
009aba 5f0f     +SUBI R16 , LOW ( - 1 )
009abb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009abc cfd3      	RJMP _0x2C0297
                 _0x2C0298:
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                +
009abd e125     +LDI R18 , LOW ( 21 )
009abe e030     +LDI R19 , HIGH ( 21 )
                 	__GETWRN 18,19,21
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
009abf 0189      	MOVW R16,R18
                 _0x2C029A:
009ac0 940e d9fb 	CALL SUBOPT_0x354
009ac2 f5ac      	BRGE _0x2C029B
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
009ac3 01f8      	MOVW R30,R16
009ac4 1be2      	SUB  R30,R18
009ac5 0bf3      	SBC  R31,R19
009ac6 01de      	MOVW R26,R28
009ac7 9614      	ADIW R26,4
009ac8 0fea      	ADD  R30,R26
009ac9 1ffb      	ADC  R31,R27
009aca 93ff      	PUSH R31
009acb 93ef      	PUSH R30
009acc 940e da06 	CALL SUBOPT_0x356
009ace 93ef      	PUSH R30
009acf 940e da14 	CALL SUBOPT_0x357
009ad1 91af      	POP  R26
009ad2 0fea      	ADD  R30,R26
009ad3 91af      	POP  R26
009ad4 91bf      	POP  R27
009ad5 940e da1f 	CALL SUBOPT_0x358
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
009ad7 940e da5d 	CALL SUBOPT_0x361
009ad9 940e da67 	CALL SUBOPT_0x362
009adb 01df      	MOVW R26,R30
009adc e6e4      	LDI  R30,LOW(100)
009add e0f0      	LDI  R31,HIGH(100)
009ade 940e e34f 	CALL __DIVW21
009ae0 01db      	MOVW R26,R22
009ae1 940e da1f 	CALL SUBOPT_0x358
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
009ae3 9631      	ADIW R30,1
009ae4 940e da5d 	CALL SUBOPT_0x361
009ae6 91ac      	LD   R26,X
009ae7 27bb      	CLR  R27
009ae8 940e cf0d 	CALL SUBOPT_0x1FF
009aea 940e da3e 	CALL SUBOPT_0x35C
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
009aec 9632      	ADIW R30,2
009aed 940e da5d 	CALL SUBOPT_0x361
009aef 91ac      	LD   R26,X
009af0 27bb      	CLR  R27
009af1 940e d265 	CALL SUBOPT_0x265
009af3 01db      	MOVW R26,R22
009af4 93ec      	ST   X,R30
                 ; 0016 056F     }
                +
009af5 5f0f     +SUBI R16 , LOW ( - 1 )
009af6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009af7 cfc8      	RJMP _0x2C029A
                 _0x2C029B:
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                +
009af8 e7e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1449 ) )
009af9 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1449 ) )
009afa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1449 ) )
009afb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1449 ) )
                 	__POINTD1FN _0x2C0000,1449
009afc 940e e400 	CALL __PUTPARD1
009afe 89ec      	LDD  R30,Y+20
009aff 940e c525 	CALL SUBOPT_0x65
009b01 8de9      	LDD  R30,Y+25
009b02 940e c525 	CALL SUBOPT_0x65
009b04 8dee      	LDD  R30,Y+30
009b05 940e c525 	CALL SUBOPT_0x65
009b07 a1eb      	LDD  R30,Y+35
009b08 940e c525 	CALL SUBOPT_0x65
009b0a 940e cb3a 	CALL SUBOPT_0x161
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                +
009b0c e9ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1486 ) )
009b0d e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1486 ) )
009b0e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1486 ) )
009b0f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1486 ) )
                 	__POINTD1FN _0x2C0000,1486
009b10 940e e400 	CALL __PUTPARD1
009b12 89e8      	LDD  R30,Y+16
009b13 940e c525 	CALL SUBOPT_0x65
009b15 89ed      	LDD  R30,Y+21
009b16 940e c525 	CALL SUBOPT_0x65
009b18 8dea      	LDD  R30,Y+26
009b19 940e c525 	CALL SUBOPT_0x65
009b1b 8def      	LDD  R30,Y+31
009b1c 940e c525 	CALL SUBOPT_0x65
009b1e 940e cb3a 	CALL SUBOPT_0x161
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                +
009b20 ebef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1523 ) )
009b21 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1523 ) )
009b22 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1523 ) )
009b23 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1523 ) )
                 	__POINTD1FN _0x2C0000,1523
009b24 940e ceca 	CALL SUBOPT_0x1F8
009b26 89e9      	LDD  R30,Y+17
009b27 940e c525 	CALL SUBOPT_0x65
009b29 89ee      	LDD  R30,Y+22
009b2a 940e c525 	CALL SUBOPT_0x65
009b2c 8deb      	LDD  R30,Y+27
009b2d 940e c525 	CALL SUBOPT_0x65
009b2f 940e cb3a 	CALL SUBOPT_0x161
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                +
009b31 eee4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1560 ) )
009b32 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1560 ) )
009b33 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1560 ) )
009b34 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1560 ) )
                 	__POINTD1FN _0x2C0000,1560
009b35 940e e400 	CALL __PUTPARD1
009b37 85e8      	LDD  R30,Y+8
009b38 940e c525 	CALL SUBOPT_0x65
009b3a 85ed      	LDD  R30,Y+13
009b3b 940e c525 	CALL SUBOPT_0x65
009b3d 89ea      	LDD  R30,Y+18
009b3e 940e c525 	CALL SUBOPT_0x65
009b40 89ef      	LDD  R30,Y+23
009b41 940e c525 	CALL SUBOPT_0x65
009b43 940e cb3a 	CALL SUBOPT_0x161
                 ; 0016 0575 
                 ; 0016 0576     return 0;
009b45 940e cab7 	CALL SUBOPT_0x14F
009b47 966e      	ADIW R28,30
009b48 9508      	RET
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 _set_vref:
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
009b49 940e c89b ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
009b4b 930a      	CALL SUBOPT_0xEE
                 	ST   -Y,R16
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
009b4c 81ae      ;	tmpf -> Y+2
009b4d 81bf      	LDD  R26,Y+6
009b4e 940e cd2d 	LDD  R27,Y+6+1
009b50 81ee      	CALL SUBOPT_0x1B3
009b51 81ff      	LDD  R30,Y+6
009b52 940e cd32 	LDD  R31,Y+6+1
009b54 81ee      	CALL SUBOPT_0x1B4
009b55 81ff      	LDD  R30,Y+6
009b56 940e d3ca 	LDD  R31,Y+6+1
009b58 0fea      	CALL SUBOPT_0x29A
009b59 1ffb      	ADD  R30,R26
009b5a 018f      	ADC  R31,R27
                 	MOVW R16,R30
009b5b 940e cf39 ; 0016 05D9     tmpf = (float) (tmp / 100.0);
009b5d 01df      	CALL SUBOPT_0x205
009b5e 01cb      	MOVW R26,R30
                +
009b5f e0e0     +LDI R30 , LOW ( 0x42C80000 )
009b60 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
009b61 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
009b62 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
009b63 940e e1ef 	CALL __DIVF21
009b65 940e c728 	CALL SUBOPT_0xB2
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                +
009b67 e0e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1597 ) )
009b68 e6f5     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1597 ) )
009b69 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1597 ) )
009b6a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1597 ) )
                 	__POINTD1FN _0x2C0000,1597
009b6b 940e c9e9 	CALL SUBOPT_0x128
009b6d 91ec      	LD   R30,X
009b6e 940e c525 	CALL SUBOPT_0x65
009b70 85ee      	LDD  R30,Y+14
009b71 85ff      	LDD  R31,Y+14+1
009b72 81e1      	LDD  R30,Z+1
009b73 940e c525 	CALL SUBOPT_0x65
009b75 89ea      	LDD  R30,Y+18
009b76 89fb      	LDD  R31,Y+18+1
009b77 81e2      	LDD  R30,Z+2
009b78 940e c525 	CALL SUBOPT_0x65
009b7a 01f8      	MOVW R30,R16
009b7b 940e d216 	CALL SUBOPT_0x258
009b7d 940e c77e 	CALL SUBOPT_0xC2
009b7f 940e e400 	CALL __PUTPARD1
009b81 e184      	LDI  R24,20
009b82 940e 9ef8 	CALL _printDebug
009b84 9668      	ADIW R28,24
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
009b85 940e c72d 	CALL SUBOPT_0xB3
009b87 e8a9      	LDI  R26,LOW(_eep_vref_val)
009b88 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009b89 940e e438 	CALL __EEPROMWRD
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
009b8b c07a      	RJMP _0x20E0033
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 _h2i:
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
009b8c 93aa      	ST   -Y,R26
                 ;	hex -> Y+0
009b8d 81a8      	LD   R26,Y
009b8e 34a1      	CPI  R26,LOW(0x41)
009b8f f010      	BRLO _0x2C029D
009b90 34a7      	CPI  R26,LOW(0x47)
009b91 f008      	BRLO _0x2C029E
                 _0x2C029D:
009b92 c004      	RJMP _0x2C029C
                 _0x2C029E:
009b93 940e da6a 	CALL SUBOPT_0x363
009b95 97f7      	SBIW R30,55
009b96 c210      	RJMP _0x20E0030
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 _0x2C029C:
009b97 81a8      	LD   R26,Y
009b98 36a1      	CPI  R26,LOW(0x61)
009b99 f010      	BRLO _0x2C02A1
009b9a 36a7      	CPI  R26,LOW(0x67)
009b9b f008      	BRLO _0x2C02A2
                 _0x2C02A1:
009b9c c005      	RJMP _0x2C02A0
                 _0x2C02A2:
009b9d 940e da6a 	CALL SUBOPT_0x363
009b9f 55e7      	SUBI R30,LOW(87)
009ba0 40f0      	SBCI R31,HIGH(87)
009ba1 c205      	RJMP _0x20E0030
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 _0x2C02A0:
009ba2 81a8      	LD   R26,Y
009ba3 33a0      	CPI  R26,LOW(0x30)
009ba4 f010      	BRLO _0x2C02A5
009ba5 33aa      	CPI  R26,LOW(0x3A)
009ba6 f008      	BRLO _0x2C02A6
                 _0x2C02A5:
009ba7 c004      	RJMP _0x2C02A4
                 _0x2C02A6:
009ba8 940e da6a 	CALL SUBOPT_0x363
009baa 97f0      	SBIW R30,48
009bab c1fb      	RJMP _0x20E0030
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 _0x2C02A4:
009bac e0e0      	LDI  R30,LOW(0)
009bad e0f0      	LDI  R31,HIGH(0)
009bae c1f8      	RJMP _0x20E0030
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 _r2ecpy:
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
009baf 940e c5e5 	CALL SUBOPT_0x81
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009bb1 e000     +LDI R16 , LOW ( 0 )
009bb2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AB:
009bb3 940e c5ea 	CALL SUBOPT_0x82
009bb5 f45c      	BRGE _0x2C02AC
                 ; 0016 05FE         dest[i] = src[i];
009bb6 01f8      	MOVW R30,R16
009bb7 940e ccdd 	CALL SUBOPT_0x1A6
009bb9 010f      	MOVW R0,R30
009bba 940e c5ef 	CALL SUBOPT_0x83
009bbc 940e ca22 	CALL SUBOPT_0x133
                 ; 0016 05FF     }
                +
009bbe 5f0f     +SUBI R16 , LOW ( - 1 )
009bbf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009bc0 cff2      	RJMP _0x2C02AB
                 _0x2C02AC:
                 ; 0016 0600     return 0;
009bc1 c044      	RJMP _0x20E0033
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 _recmp:
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
009bc2 940e c5e5 	CALL SUBOPT_0x81
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009bc4 e000     +LDI R16 , LOW ( 0 )
009bc5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AE:
009bc6 940e c5ea 	CALL SUBOPT_0x82
009bc8 f544      	BRGE _0x2C02AF
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                +
009bc9 e2ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1635 ) )
009bca e6f5     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1635 ) )
009bcb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1635 ) )
009bcc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1635 ) )
                 	__POINTD1FN _0x2C0000,1635
009bcd 940e e400 	CALL __PUTPARD1
009bcf 01f8      	MOVW R30,R16
009bd0 85aa      	LDD  R26,Y+10
009bd1 85bb      	LDD  R27,Y+10+1
009bd2 0fae      	ADD  R26,R30
009bd3 1fbf      	ADC  R27,R31
009bd4 91ec      	LD   R30,X
009bd5 940e c525 	CALL SUBOPT_0x65
009bd7 01f8      	MOVW R30,R16
009bd8 85ac      	LDD  R26,Y+12
009bd9 85bd      	LDD  R27,Y+12+1
009bda 0fae      	ADD  R26,R30
009bdb 1fbf      	ADC  R27,R31
009bdc 940e e42c 	CALL __EEPROMRDB
009bde 940e c525 	CALL SUBOPT_0x65
009be0 e8ad      	LDI  R26,LOW(_userPwd)
009be1 e0b5      	LDI  R27,HIGH(_userPwd)
009be2 940e c8cf 	CALL SUBOPT_0xF9
009be4 940e c525 	CALL SUBOPT_0x65
009be6 e9a1      	LDI  R26,LOW(_servicePwd)
009be7 e0b5      	LDI  R27,HIGH(_servicePwd)
009be8 940e c8cf 	CALL SUBOPT_0xF9
009bea 940e c525 	CALL SUBOPT_0x65
009bec 940e cb3a 	CALL SUBOPT_0x161
                 ; 0016 0609     }
                +
009bee 5f0f     +SUBI R16 , LOW ( - 1 )
009bef 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009bf0 cfd5      	RJMP _0x2C02AE
                 _0x2C02AF:
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                +
009bf1 e000     +LDI R16 , LOW ( 0 )
009bf2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02B1:
009bf3 940e c5ea 	CALL SUBOPT_0x82
009bf5 f484      	BRGE _0x2C02B2
                 ; 0016 060C         if(src1[i] != src2[i]){
009bf6 01f8      	MOVW R30,R16
009bf7 940e d12a 	CALL SUBOPT_0x236
009bf9 900c      	LD   R0,X
009bfa 940e c5ef 	CALL SUBOPT_0x83
009bfc 940e e42c 	CALL __EEPROMRDB
009bfe 15e0      	CP   R30,R0
009bff f019      	BREQ _0x2C02B3
                 ; 0016 060D             return -1;
009c00 efef      	LDI  R30,LOW(65535)
009c01 efff      	LDI  R31,HIGH(65535)
009c02 c005      	RJMP _0x20E0032
                 ; 0016 060E         }
                 ; 0016 060F     }
                 _0x2C02B3:
                +
009c03 5f0f     +SUBI R16 , LOW ( - 1 )
009c04 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009c05 cfed      	RJMP _0x2C02B1
                 _0x2C02B2:
                 ; 0016 0610     return 0;
                 _0x20E0033:
009c06 e0e0      	LDI  R30,LOW(0)
009c07 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0032:
009c08 8119      	LDD  R17,Y+1
009c09 8108      	LDD  R16,Y+0
009c0a 9628      	ADIW R28,8
009c0b 9508      	RET
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 ;#include "adc.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;#include "sensor.h"
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;flash unsigned char cmdGetADCSensor[]       = "$CMDGAS";         // -- Get ADC sensor value -- //   ,chID(1)
                 ;
                 ;//flash unsigned char cmdSetSensorType[]   = "$CMDSST";        // -- Set Type Sensor -- //   $CMDSST,01#     //01=TMEC,02=PT100,03=K (AD595)
                 ;
                 ;
                 ;
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void iGetSensorValue(){
                 ; 0017 0027 void iGetSensorValue(){
                 
                 	.CSEG
                 _iGetSensorValue:
                 ; 0017 0028     printDebug("[Get ADC of sensor]\r\n");
                +
009c0c e6ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
009c0d e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
009c0e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
009c0f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
009c10 940e c274 	CALL SUBOPT_0x3
                 ; 0017 0029     iSensorGetADCValue();
009c12 940e 6b0c 	CALL _iSensorGetADCValue
                 ; 0017 002A }
009c14 9508      	RET
                 ;int debugSetSensorType(){
                 ; 0017 002B int debugSetSensorType(){
                 ; 0017 002C     unsigned char i=0;
                 ; 0017 002D     unsigned char buffer[4];
                 ; 0017 002E     unsigned int sensorType;
                 ; 0017 002F     unsigned int pointID;
                 ; 0017 0030     float pointValue;         //std value
                 ; 0017 0031 
                 ; 0017 0032 
                 ; 0017 0033     printDebug("\r\n<Debug>SetCal: \r\n");
                 ;	i -> R17
                 ;	buffer -> Y+10
                 ;	sensorType -> R18,R19
                 ;	pointID -> R20,R21
                 ;	pointValue -> Y+6
                 ; 0017 0034     memset(buffer,0,sizeof(buffer));
                 ; 0017 0035     for(i=0;i<2;i++){
                 ; 0017 0036        buffer[i] = rxPackage3[i+8];
                 ; 0017 0037     }
                 ; 0017 0038     sensorType = atoi(buffer);
                 ; 0017 0039     printDebug("Sensor Type:%d \r\n",sensorType);
                 ; 0017 003A 
                 ; 0017 003B 
                 ; 0017 003C     return 0;
                 ; 0017 003D }
                 ;
                 ;int DEBUG_setDateTime(void)
                 ; 0017 0040 {
                 _DEBUG_setDateTime:
                 ; 0017 0041     unsigned char   i;
                 ; 0017 0042     unsigned char   buffer[32];
                 ; 0017 0043     int             tz;
                 ; 0017 0044 
                 ; 0017 0045     struct rtc_structure rtcSet;
                 ; 0017 0046 
                 ; 0017 0047     for(i=0;i<4;i++)
009c15 97ea      	SBIW R28,58
009c16 940e e477 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
009c18 e010      	LDI  R17,LOW(0)
                 _0x2E0008:
009c19 3014      	CPI  R17,4
009c1a f450      	BRSH _0x2E0009
                 ; 0017 0048     {
                 ; 0017 0049         buffer[i] = rxPackage3[i+8];
009c1b 940e c706 	CALL SUBOPT_0xAB
009c1d 940e da6d 	CALL SUBOPT_0x364
                +
009c1f 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009c20 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009c21 81e0      	LD   R30,Z
009c22 93ec      	ST   X,R30
                 ; 0017 004A     }
009c23 5f1f      	SUBI R17,-1
009c24 cff4      	RJMP _0x2E0008
                 _0x2E0009:
                 ; 0017 004B     buffer[4] = 0;
009c25 940e da72 	CALL SUBOPT_0x365
                 ; 0017 004C 
                 ; 0017 004D     rtcSet.year = atol(buffer);
009c27 940e c6ef 	CALL SUBOPT_0xA7
                 ; 0017 004E 
                 ; 0017 004F     printDebug("get year = %d\r\n",rtcSet.year);
                +
009c29 eae6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 60 ) )
009c2a e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 60 ) )
009c2b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 60 ) )
009c2c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 60 ) )
                 	__POINTD1FN _0x2E0000,60
009c2d 940e ceaf 	CALL SUBOPT_0x1F2
009c2f 940e cc53 	CALL SUBOPT_0x18B
                 ; 0017 0050 
                 ; 0017 0051     for(i=0;i<2;i++)
009c31 e010      	LDI  R17,LOW(0)
                 _0x2E000B:
009c32 3012      	CPI  R17,2
009c33 f450      	BRSH _0x2E000C
                 ; 0017 0052     {
                 ; 0017 0053         buffer[i] = rxPackage3[i+13];
009c34 940e c706 	CALL SUBOPT_0xAB
009c36 940e da6d 	CALL SUBOPT_0x364
                +
009c38 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
009c39 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
009c3a 81e0      	LD   R30,Z
009c3b 93ec      	ST   X,R30
                 ; 0017 0054     }
009c3c 5f1f      	SUBI R17,-1
009c3d cff4      	RJMP _0x2E000B
                 _0x2E000C:
                 ; 0017 0055     buffer[2] = 0;
009c3e 940e da78 	CALL SUBOPT_0x366
                 ; 0017 0056 
                 ; 0017 0057     rtcSet.month = atol(buffer);
009c40 940e da7e 	CALL SUBOPT_0x367
                 ; 0017 0058 
                 ; 0017 0059     printDebug("get month = %d\r\n",rtcSet.month);
                +
009c42 ebe6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 76 ) )
009c43 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 76 ) )
009c44 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 76 ) )
009c45 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 76 ) )
                 	__POINTD1FN _0x2E0000,76
009c46 940e c62d 	CALL SUBOPT_0x8D
009c48 940e cc53 	CALL SUBOPT_0x18B
                 ; 0017 005A 
                 ; 0017 005B     for(i=0;i<2;i++)
009c4a e010      	LDI  R17,LOW(0)
                 _0x2E000E:
009c4b 3012      	CPI  R17,2
009c4c f450      	BRSH _0x2E000F
                 ; 0017 005C     {
                 ; 0017 005D         buffer[i] = rxPackage3[i+16];
009c4d 940e c706 	CALL SUBOPT_0xAB
009c4f 940e da6d 	CALL SUBOPT_0x364
                +
009c51 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
009c52 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
009c53 81e0      	LD   R30,Z
009c54 93ec      	ST   X,R30
                 ; 0017 005E     }
009c55 5f1f      	SUBI R17,-1
009c56 cff4      	RJMP _0x2E000E
                 _0x2E000F:
                 ; 0017 005F     buffer[2] = 0;
009c57 940e da78 	CALL SUBOPT_0x366
                 ; 0017 0060 
                 ; 0017 0061     rtcSet.date = atol(buffer);
009c59 940e c886 	CALL SUBOPT_0xEA
                 ; 0017 0062 
                 ; 0017 0063     printDebug("get date = %d\r\n",rtcSet.date);
                +
009c5b ece7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 93 ) )
009c5c e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 93 ) )
009c5d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 93 ) )
009c5e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 93 ) )
                 	__POINTD1FN _0x2E0000,93
009c5f 940e c4e6 	CALL SUBOPT_0x5B
009c61 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 0064 
                 ; 0017 0065     for(i=0;i<2;i++)
009c63 e010      	LDI  R17,LOW(0)
                 _0x2E0011:
009c64 3012      	CPI  R17,2
009c65 f450      	BRSH _0x2E0012
                 ; 0017 0066     {
                 ; 0017 0067         buffer[i] = rxPackage3[i+19];
009c66 940e c706 	CALL SUBOPT_0xAB
009c68 940e da6d 	CALL SUBOPT_0x364
                +
009c6a 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
009c6b 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
009c6c 81e0      	LD   R30,Z
009c6d 93ec      	ST   X,R30
                 ; 0017 0068     }
009c6e 5f1f      	SUBI R17,-1
009c6f cff4      	RJMP _0x2E0011
                 _0x2E0012:
                 ; 0017 0069     buffer[2] = 0;
009c70 940e da78 	CALL SUBOPT_0x366
                 ; 0017 006A 
                 ; 0017 006B     rtcSet.hour = atol(buffer);
009c72 940e da83 	CALL SUBOPT_0x368
                 ; 0017 006C 
                 ; 0017 006D     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
009c74 ede7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 109 ) )
009c75 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 109 ) )
009c76 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 109 ) )
009c77 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 109 ) )
                 	__POINTD1FN _0x2E0000,109
009c78 940e e400 	CALL __PUTPARD1
009c7a 940e c827 	CALL SUBOPT_0xDC
009c7c 940e cc53 	CALL SUBOPT_0x18B
                 ; 0017 006E 
                 ; 0017 006F     for(i=0;i<2;i++)
009c7e e010      	LDI  R17,LOW(0)
                 _0x2E0014:
009c7f 3012      	CPI  R17,2
009c80 f450      	BRSH _0x2E0015
                 ; 0017 0070     {
                 ; 0017 0071         buffer[i] = rxPackage3[i+22];
009c81 940e c706 	CALL SUBOPT_0xAB
009c83 940e da6d 	CALL SUBOPT_0x364
                +
009c85 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
009c86 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
009c87 81e0      	LD   R30,Z
009c88 93ec      	ST   X,R30
                 ; 0017 0072     }
009c89 5f1f      	SUBI R17,-1
009c8a cff4      	RJMP _0x2E0014
                 _0x2E0015:
                 ; 0017 0073     buffer[2] = 0;
009c8b 940e da78 	CALL SUBOPT_0x366
                 ; 0017 0074 
                 ; 0017 0075     rtcSet.min = atol(buffer);
009c8d 940e da88 	CALL SUBOPT_0x369
                 ; 0017 0076 
                 ; 0017 0077     printDebug("get min = %d\r\n",rtcSet.min);
                +
009c8f eee7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 125 ) )
009c90 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 125 ) )
009c91 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 125 ) )
009c92 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 125 ) )
                 	__POINTD1FN _0x2E0000,125
009c93 940e e400 	CALL __PUTPARD1
009c95 940e c8ab 	CALL SUBOPT_0xF2
009c97 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 0078 
                 ; 0017 0079     for(i=0;i<2;i++)
009c99 e010      	LDI  R17,LOW(0)
                 _0x2E0017:
009c9a 3012      	CPI  R17,2
009c9b f450      	BRSH _0x2E0018
                 ; 0017 007A     {
                 ; 0017 007B         buffer[i] = rxPackage3[i+25];
009c9c 940e c706 	CALL SUBOPT_0xAB
009c9e 940e da6d 	CALL SUBOPT_0x364
                +
009ca0 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
009ca1 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
009ca2 81e0      	LD   R30,Z
009ca3 93ec      	ST   X,R30
                 ; 0017 007C     }
009ca4 5f1f      	SUBI R17,-1
009ca5 cff4      	RJMP _0x2E0017
                 _0x2E0018:
                 ; 0017 007D     buffer[2] = 0;
009ca6 940e da78 	CALL SUBOPT_0x366
                 ; 0017 007E 
                 ; 0017 007F     rtcSet.sec = atol(buffer);
                +
009ca8 8fe8     +STD Y + 24 , R30
009ca9 8ff9     +STD Y + 24 + 1 , R31
009caa 8f6a     +STD Y + 24 + 2 , R22
009cab 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ; 0017 0080 
                 ; 0017 0081     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
009cac efe6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 140 ) )
009cad e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 140 ) )
009cae e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 140 ) )
009caf e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 140 ) )
                 	__POINTD1FN _0x2E0000,140
009cb0 940e da8d 	CALL SUBOPT_0x36A
009cb2 940e cc53 	CALL SUBOPT_0x18B
                 ; 0017 0082 
                 ; 0017 0083     for(i=0;i<3;i++)
009cb4 e010      	LDI  R17,LOW(0)
                 _0x2E001A:
009cb5 3013      	CPI  R17,3
009cb6 f450      	BRSH _0x2E001B
                 ; 0017 0084     {
                 ; 0017 0085         buffer[i] = rxPackage3[i+28];
009cb7 940e c706 	CALL SUBOPT_0xAB
009cb9 940e da6d 	CALL SUBOPT_0x364
                +
009cbb 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
009cbc 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
009cbd 81e0      	LD   R30,Z
009cbe 93ec      	ST   X,R30
                 ; 0017 0086     }
009cbf 5f1f      	SUBI R17,-1
009cc0 cff4      	RJMP _0x2E001A
                 _0x2E001B:
                 ; 0017 0087     buffer[4] = 0;
009cc1 940e da72 	CALL SUBOPT_0x365
                 ; 0017 0088 
                 ; 0017 0089     tz = atol(buffer);
009cc3 019f      	MOVW R18,R30
                 ; 0017 008A 
                 ; 0017 008B     printDebug("get timezone = %+d\r\n",tz);
                +
009cc4 e0e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 155 ) )
009cc5 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 155 ) )
009cc6 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 155 ) )
009cc7 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 155 ) )
                 	__POINTD1FN _0x2E0000,155
009cc8 940e c2e2 	CALL SUBOPT_0x11
009cca 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 008C 
                 ; 0017 008D     RTC_setDateTime(rtcSet,tz);
009ccc 01fe      	MOVW R30,R28
009ccd 9634      	ADIW R30,4
009cce e1aa      	LDI  R26,26
009ccf 940e e40a 	CALL __PUTPARL
009cd1 01d9      	MOVW R26,R18
009cd2 940e 4850 	CALL _RTC_setDateTime
                 ; 0017 008E 
                 ; 0017 008F     return 0;
009cd4 940e cab7 	CALL SUBOPT_0x14F
009cd6 96ee      	ADIW R28,62
009cd7 9508      	RET
                 ; 0017 0090 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 0093 {
                 _DEBUG_resetAlarm:
                 ; 0017 0094     resetAlarm();
009cd8 940e 7e42 	CALL _resetAlarm
                 ; 0017 0095 
                 ; 0017 0096     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
009cda e1ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 176 ) )
009cdb e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 176 ) )
009cdc e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 176 ) )
009cdd e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 176 ) )
                 	__POINTD1FN _0x2E0000,176
009cde 940e c274 	CALL SUBOPT_0x3
                 ; 0017 0097 }
009ce0 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 009A {
                 _DEBUG_ClearLogFile:
                 ; 0017 009B     int         res;
                 ; 0017 009C 
                 ; 0017 009D     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
009ce1 931a      	ST   -Y,R17
009ce2 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
009ce3 e3ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 211 ) )
009ce4 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 211 ) )
009ce5 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 211 ) )
009ce6 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 211 ) )
                 	__POINTD1FN _0x2E0000,211
009ce7 940e c274 	CALL SUBOPT_0x3
                 ; 0017 009E 
                 ; 0017 009F     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
009ce9 940e d450 	CALL SUBOPT_0x2B0
                 ; 0017 00A0     if(res < 0)
009ceb f432      	BRPL _0x2E001C
                 ; 0017 00A1     {
                 ; 0017 00A2         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
009cec 940e da94 	CALL SUBOPT_0x36B
009cee 940e c4fe 	CALL SUBOPT_0x5F
009cf0 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 00A3     }
                 ; 0017 00A4 
                 ; 0017 00A5     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E001C:
009cf2 940e d47c 	CALL SUBOPT_0x2B6
                 ; 0017 00A6     if(res < 0)
009cf4 f432      	BRPL _0x2E001D
                 ; 0017 00A7     {
                 ; 0017 00A8         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
009cf5 940e da94 	CALL SUBOPT_0x36B
009cf7 940e c545 	CALL SUBOPT_0x6A
009cf9 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 00A9     }
                 ; 0017 00AA 
                 ; 0017 00AB     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E001D:
009cfb ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
009cfc e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
009cfd 93fa      	ST   -Y,R31
009cfe 93ea      	ST   -Y,R30
009cff e0e1      	LDI  R30,LOW(1)
009d00 93ea      	ST   -Y,R30
009d01 940e cc86 	CALL SUBOPT_0x196
009d03 940e 85ff 	CALL _LOG_createFile
009d05 018f      	MOVW R16,R30
                 ; 0017 00AC     if(res < 0)
009d06 2311      	TST  R17
009d07 f432      	BRPL _0x2E001E
                 ; 0017 00AD     {
                 ; 0017 00AE         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
009d08 940e da94 	CALL SUBOPT_0x36B
009d0a 940e d4ca 	CALL SUBOPT_0x2BE
009d0c 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 00AF     }
                 ; 0017 00B0 
                 ; 0017 00B1     return;
                 _0x2E001E:
009d0e 9109      	LD   R16,Y+
009d0f 9119      	LD   R17,Y+
009d10 9508      	RET
                 ; 0017 00B2 }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 00B5 {
                 _DEBUG_setRealVref:
                 ; 0017 00B6     unsigned char i;
                 ; 0017 00B7     unsigned char rxStrSetVREF[6];
                 ; 0017 00B8 
                 ; 0017 00B9     for(i=0;i<=5;i++)
009d11 9726      	SBIW R28,6
009d12 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
009d13 e010      	LDI  R17,LOW(0)
                 _0x2E0020:
009d14 3016      	CPI  R17,6
009d15 f450      	BRSH _0x2E0021
                 ; 0017 00BA     {
                 ; 0017 00BB         rxStrSetVREF[i] = rxPackage3[i+8];
009d16 940e c706 	CALL SUBOPT_0xAB
009d18 940e da99 	CALL SUBOPT_0x36C
                +
009d1a 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009d1b 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009d1c 81e0      	LD   R30,Z
009d1d 93ec      	ST   X,R30
                 ; 0017 00BC     }
009d1e 5f1f      	SUBI R17,-1
009d1f cff4      	RJMP _0x2E0020
                 _0x2E0021:
                 ; 0017 00BD     rxStrSetVREF[5] = '\0';
009d20 e0e0      	LDI  R30,LOW(0)
009d21 83ee      	STD  Y+6,R30
                 ; 0017 00BE     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
009d22 e9ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 304 ) )
009d23 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 304 ) )
009d24 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 304 ) )
009d25 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 304 ) )
                 	__POINTD1FN _0x2E0000,304
009d26 940e e400 	CALL __PUTPARD1
009d28 01fe      	MOVW R30,R28
009d29 9635      	ADIW R30,5
009d2a 940e c3d6 	CALL SUBOPT_0x34
009d2c 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 00BF     eep_vref_val = (atof(rxStrSetVREF));
009d2e 01de      	MOVW R26,R28
009d2f 9611      	ADIW R26,1
009d30 940e a5ad 	CALL _atof
009d32 e8a9      	LDI  R26,LOW(_eep_vref_val)
009d33 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009d34 940e e438 	CALL __EEPROMWRD
                 ; 0017 00C0     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
009d36 ece8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 350 ) )
009d37 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 350 ) )
009d38 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 350 ) )
009d39 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 350 ) )
                 	__POINTD1FN _0x2E0000,350
009d3a 940e e400 	CALL __PUTPARD1
009d3c e8a9      	LDI  R26,LOW(_eep_vref_val)
009d3d e0b5      	LDI  R27,HIGH(_eep_vref_val)
009d3e 940e caa7 	CALL SUBOPT_0x14C
                 ; 0017 00C1 }
009d40 8118      	LDD  R17,Y+0
009d41 9627      	ADIW R28,7
009d42 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 00C4 {
                 _DEBUG_sensorSelect:
                 ; 0017 00C5     unsigned char ch[2];
                 ; 0017 00C6 
                 ; 0017 00C7     if(TEMP_SEL != TEMP_TYPE_K){
009d43 9722      	SBIW R28,2
                 ;	ch -> Y+0
009d44 940e c3a4 	CALL SUBOPT_0x2E
009d46 f039      	BREQ _0x2E0022
                 ; 0017 00C8         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
009d47 efe1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 391 ) )
009d48 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 391 ) )
009d49 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 391 ) )
009d4a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 391 ) )
                 	__POINTD1FN _0x2E0000,391
009d4b 940e c274 	CALL SUBOPT_0x3
                 ; 0017 00C9         return;
009d4d c044      	RJMP _0x20E0031
                 ; 0017 00CA     }
                 ; 0017 00CB 
                 ; 0017 00CC     if(rxPackage3[8] == 'N'){
                 _0x2E0022:
                +
009d4e 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009d50 34ae      	CPI  R26,LOW(0x4E)
009d51 f449      	BRNE _0x2E0023
                 ; 0017 00CD         hwCalId     = 9;
009d52 940e da9e 	CALL SUBOPT_0x36D
                 ; 0017 00CE         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
009d54 e2e4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 442 ) )
009d55 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 442 ) )
009d56 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 442 ) )
009d57 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 442 ) )
                 	__POINTD1FN _0x2E0000,442
009d58 940e c274 	CALL SUBOPT_0x3
                 ; 0017 00CF     }
                 ; 0017 00D0     else if(isdigit(rxPackage3[8])){
009d5a c037      	RJMP _0x2E0024
                 _0x2E0023:
                +
009d5b 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009d5d 940e c1e4 	CALL _isdigit
009d5f 30e0      	CPI  R30,0
009d60 f109      	BREQ _0x2E0025
                 ; 0017 00D1         ch[0]       = rxPackage3[8];
                +
009d61 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009d63 83e8      	ST   Y,R30
                 ; 0017 00D2         ch[1]       = '\0';
009d64 e0e0      	LDI  R30,LOW(0)
009d65 83e9      	STD  Y+1,R30
                 ; 0017 00D3         hwCalId     = atoi(ch);
009d66 01de      	MOVW R26,R28
009d67 940e a473 	CALL _atoi
009d69 93e0 10f4 	STS  _hwCalId,R30
009d6b 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 00D4 
                 ; 0017 00D5         SENSOR_SELECT(hwCalId);
009d6d 940e c6c9 	CALL SUBOPT_0xA1
009d6f 91e0 10f4 	LDS  R30,_hwCalId
009d71 0fee      	LSL  R30
009d72 2bea      	OR   R30,R26
009d73 2da0      	MOV  R26,R0
009d74 93ec      	ST   X,R30
                 ; 0017 00D6         delay_ms(50);           // -- for multiplex stable -- //
009d75 940e c5b0 	CALL SUBOPT_0x7A
                 ; 0017 00D7 
                 ; 0017 00D8         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
009d77 e4ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 483 ) )
009d78 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 483 ) )
009d79 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 483 ) )
009d7a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 483 ) )
                 	__POINTD1FN _0x2E0000,483
009d7b 940e c3b6 	CALL SUBOPT_0x30
009d7d 940e c3d6 	CALL SUBOPT_0x34
009d7f 940e c2ea 	CALL SUBOPT_0x12
                 ; 0017 00D9     }
                 ; 0017 00DA     else{
009d81 c010      	RJMP _0x2E0026
                 _0x2E0025:
                 ; 0017 00DB         hwCalId     = 9;
009d82 940e da9e 	CALL SUBOPT_0x36D
                 ; 0017 00DC         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
009d84 e7e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 527 ) )
009d85 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 527 ) )
009d86 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 527 ) )
009d87 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 527 ) )
                 	__POINTD1FN _0x2E0000,527
009d88 940e e400 	CALL __PUTPARD1
                +
009d8a 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009d8c 940e c525 	CALL SUBOPT_0x65
                +
009d8e 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009d90 940e d13b 	CALL SUBOPT_0x239
                 ; 0017 00DD     }
                 _0x2E0026:
                 _0x2E0024:
                 ; 0017 00DE 
                 ; 0017 00DF     return;
                 _0x20E0031:
009d92 9622      	ADIW R28,2
009d93 9508      	RET
                 ; 0017 00E0 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 00E3 {
                 _DEBUG_setDeviceEnable:
                 ; 0017 00E4     if(flag){
009d94 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
009d95 81e8      	LD   R30,Y
009d96 30e0      	CPI  R30,0
009d97 f021      	BREQ _0x2E0027
                 ; 0017 00E5         config_oper.deviceEnable        =   0x01;
                +
009d98 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009d99 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009d9a e0e1      	LDI  R30,LOW(1)
009d9b c003      	RJMP _0x2E0068
                 ; 0017 00E6     }
                 ; 0017 00E7     else{
                 _0x2E0027:
                 ; 0017 00E8         config_oper.deviceEnable        =   0x00;
                +
009d9c eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009d9d e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009d9e e0e0      	LDI  R30,LOW(0)
                 _0x2E0068:
009d9f 940e e448 	CALL __EEPROMWRB
                 ; 0017 00E9     }
                 ; 0017 00EA 
                 ; 0017 00EB     config_oper_flag                    =   0x01;
009da1 e4a3      	LDI  R26,LOW(_config_oper_flag)
009da2 e0b5      	LDI  R27,HIGH(_config_oper_flag)
009da3 940e ca27 	CALL SUBOPT_0x134
                 ; 0017 00EC     is_operating_config_update          =   1;
009da5 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 00ED 
                 ; 0017 00EE     return;
                 _0x20E0030:
009da7 9621      	ADIW R28,1
009da8 9508      	RET
                 ; 0017 00EF }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 00F2 {
                 _DEBUG_setSerialNumber:
                 ; 0017 00F3     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 00F4     unsigned char i;
                 ; 0017 00F5     unsigned char set_str[24];
                 ; 0017 00F6 
                 ; 0017 00F7     for(i=0;i<24;i++){
009da9 9768      	SBIW R28,24
009daa 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
009dab e010      	LDI  R17,LOW(0)
                 _0x2E002A:
009dac 3118      	CPI  R17,24
009dad f598      	BRSH _0x2E002B
                 ; 0017 00F8         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
009dae 940e c706 	CALL SUBOPT_0xAB
                +
009db0 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009db1 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009db2 81a0      	LD   R26,Z
009db3 32ac      	CPI  R26,LOW(0x2C)
009db4 f021      	BREQ _0x2E002D
009db5 940e c201 	CALL _isxdigit
009db7 30e0      	CPI  R30,0
009db8 f009      	BREQ _0x2E002E
                 _0x2E002D:
009db9 c013      	RJMP _0x2E002C
                 _0x2E002E:
                 ; 0017 00F9             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
009dba ebe8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 590 ) )
009dbb e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 590 ) )
009dbc e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 590 ) )
009dbd e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 590 ) )
                 	__POINTD1FN _0x2E0000,590
009dbe 940e daa5 	CALL SUBOPT_0x36E
                +
009dc0 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009dc1 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009dc2 81e0      	LD   R30,Z
009dc3 940e c525 	CALL SUBOPT_0x65
009dc5 940e c706 	CALL SUBOPT_0xAB
                +
009dc7 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009dc8 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009dc9 81e0      	LD   R30,Z
009dca 940e d13b 	CALL SUBOPT_0x239
                 ; 0017 00FA             return;
009dcc c09d      	RJMP _0x20E002F
                 ; 0017 00FB         }
                 ; 0017 00FC         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E002C:
009dcd 940e c706 	CALL SUBOPT_0xAB
009dcf 010f      	MOVW R0,R30
009dd0 01de      	MOVW R26,R28
009dd1 9611      	ADIW R26,1
009dd2 0fea      	ADD  R30,R26
009dd3 1ffb      	ADC  R31,R27
009dd4 93ff      	PUSH R31
009dd5 93ef      	PUSH R30
009dd6 01f0      	MOVW R30,R0
                +
009dd7 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009dd8 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009dd9 81a0      	LD   R26,Z
009dda 940e c210 	CALL _tolower
009ddc 91af      	POP  R26
009ddd 91bf      	POP  R27
009dde 93ec      	ST   X,R30
                 ; 0017 00FD     }
009ddf 5f1f      	SUBI R17,-1
009de0 cfcb      	RJMP _0x2E002A
                 _0x2E002B:
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
009de1 efe5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 651 ) )
009de2 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 651 ) )
009de3 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 651 ) )
009de4 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 651 ) )
                 	__POINTD1FN _0x2E0000,651
009de5 940e c274 	CALL SUBOPT_0x3
                 ; 0017 0100 
                 ; 0017 0101     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
009de7 e2e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 703 ) )
009de8 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 703 ) )
009de9 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 703 ) )
009dea e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 703 ) )
                 	__POINTD1FN _0x2E0000,703
009deb 940e c274 	CALL SUBOPT_0x3
                 ; 0017 0102     for(i=0;i<24;i++){
009ded e010      	LDI  R17,LOW(0)
                 _0x2E0030:
009dee 3118      	CPI  R17,24
009def f010      	BRLO PC+3
009df0 940c 9e5b 	JMP _0x2E0031
                 ; 0017 0103         if((i%3) == 0)      {   continue;                       }
009df2 940e daa9 	CALL SUBOPT_0x36F
009df4 9730      	SBIW R30,0
009df5 f409      	BRNE _0x2E0032
009df6 c062      	RJMP _0x2E002F
                 ; 0017 0104         else if((i%3) == 1) {
                 _0x2E0032:
009df7 940e daa9 	CALL SUBOPT_0x36F
009df9 30e1      	CPI  R30,LOW(0x1)
009dfa e0a0      	LDI  R26,HIGH(0x1)
009dfb 07fa      	CPC  R31,R26
009dfc f581      	BRNE _0x2E0034
                 ; 0017 0105 
                 ; 0017 0106             printDebug("[%c",set_str[i]);
                +
009dfd e5e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 743 ) )
009dfe e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 743 ) )
009dff e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 743 ) )
009e00 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 743 ) )
                 	__POINTD1FN _0x2E0000,743
009e01 940e daa5 	CALL SUBOPT_0x36E
009e03 01de      	MOVW R26,R28
009e04 9615      	ADIW R26,5
009e05 940e cc25 	CALL SUBOPT_0x184
                 ; 0017 0107 
                 ; 0017 0108             DEVICE_SERIAL[i/3]      = 0x00;
009e07 940e dab0 	CALL SUBOPT_0x370
009e09 01df      	MOVW R26,R30
009e0a e0e0      	LDI  R30,LOW(0)
009e0b 940e e448 	CALL __EEPROMWRB
                 ; 0017 0109 
                 ; 0017 010A             if(isdigit(set_str[i])){
009e0d 940e c706 	CALL SUBOPT_0xAB
009e0f 940e da99 	CALL SUBOPT_0x36C
009e11 940e dab9 	CALL SUBOPT_0x371
009e13 f051      	BREQ _0x2E0035
                 ; 0017 010B                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
009e14 940e dab0 	CALL SUBOPT_0x370
009e16 010f      	MOVW R0,R30
009e17 940e c706 	CALL SUBOPT_0xAB
009e19 940e da99 	CALL SUBOPT_0x36C
009e1b 91ec      	LD   R30,X
009e1c 53e0      	SUBI R30,LOW(48)
009e1d c009      	RJMP _0x2E0069
                 ; 0017 010C             }
                 ; 0017 010D             else{
                 _0x2E0035:
                 ; 0017 010E                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
009e1e 940e dab0 	CALL SUBOPT_0x370
009e20 010f      	MOVW R0,R30
009e21 940e c706 	CALL SUBOPT_0xAB
009e23 940e da99 	CALL SUBOPT_0x36C
009e25 91ec      	LD   R30,X
009e26 55e7      	SUBI R30,LOW(87)
                 _0x2E0069:
009e27 95e2      	SWAP R30
009e28 7fe0      	ANDI R30,0xF0
009e29 01d0      	MOVW R26,R0
009e2a 940e e448 	CALL __EEPROMWRB
                 ; 0017 010F             }
                 ; 0017 0110         }
                 ; 0017 0111         else if((i%3) == 2) {
009e2c c02c      	RJMP _0x2E0037
                 _0x2E0034:
009e2d 940e daa9 	CALL SUBOPT_0x36F
009e2f 30e2      	CPI  R30,LOW(0x2)
009e30 e0a0      	LDI  R26,HIGH(0x2)
009e31 07fa      	CPC  R31,R26
009e32 f531      	BRNE _0x2E0038
                 ; 0017 0112 
                 ; 0017 0113             printDebug("%c]",set_str[i]);
                +
009e33 e5e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 747 ) )
009e34 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 747 ) )
009e35 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 747 ) )
009e36 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 747 ) )
                 	__POINTD1FN _0x2E0000,747
009e37 940e daa5 	CALL SUBOPT_0x36E
009e39 01de      	MOVW R26,R28
009e3a 9615      	ADIW R26,5
009e3b 940e cc25 	CALL SUBOPT_0x184
                 ; 0017 0114 
                 ; 0017 0115             if(isdigit(set_str[i])){
009e3d 940e c706 	CALL SUBOPT_0xAB
009e3f 940e da99 	CALL SUBOPT_0x36C
009e41 940e dab9 	CALL SUBOPT_0x371
009e43 f049      	BREQ _0x2E0039
                 ; 0017 0116                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
009e44 940e dab0 	CALL SUBOPT_0x370
009e46 940e dabe 	CALL SUBOPT_0x372
009e48 940e da99 	CALL SUBOPT_0x36C
009e4a 91ec      	LD   R30,X
009e4b 53e0      	SUBI R30,LOW(48)
009e4c c008      	RJMP _0x2E006A
                 ; 0017 0117             }
                 ; 0017 0118             else{
                 _0x2E0039:
                 ; 0017 0119                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
009e4d 940e dab0 	CALL SUBOPT_0x370
009e4f 940e dabe 	CALL SUBOPT_0x372
009e51 940e da99 	CALL SUBOPT_0x36C
009e53 91ec      	LD   R30,X
009e54 55e7      	SUBI R30,LOW(87)
                 _0x2E006A:
009e55 29e0      	OR   R30,R0
009e56 01db      	MOVW R26,R22
009e57 940e e448 	CALL __EEPROMWRB
                 ; 0017 011A             }
                 ; 0017 011B         }
                 ; 0017 011C     }
                 _0x2E0038:
                 _0x2E0037:
                 _0x2E002F:
009e59 5f1f      	SUBI R17,-1
009e5a cf93      	RJMP _0x2E0030
                 _0x2E0031:
                 ; 0017 011D 
                 ; 0017 011E     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
009e5b e5e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 751 ) )
009e5c e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 751 ) )
009e5d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 751 ) )
009e5e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 751 ) )
                 	__POINTD1FN _0x2E0000,751
009e5f 940e c274 	CALL SUBOPT_0x3
                 ; 0017 011F     for(i=0;i<8;i++){
009e61 e010      	LDI  R17,LOW(0)
                 _0x2E003C:
009e62 3018      	CPI  R17,8
009e63 f420      	BRSH _0x2E003D
                 ; 0017 0120         printDebug("[%02X]",DEVICE_SERIAL[i]);
009e64 940e dac5 	CALL SUBOPT_0x373
                 ; 0017 0121     }
009e66 5f1f      	SUBI R17,-1
009e67 cffa      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 0122     printDebug("\r\n");
009e68 940e dad1 	CALL SUBOPT_0x374
                 ; 0017 0123 
                 ; 0017 0124     return;
                 _0x20E002F:
009e6a 8118      	LDD  R17,Y+0
009e6b 9669      	ADIW R28,25
009e6c 9508      	RET
                 ; 0017 0125 }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 0128 {
                 _DEBUG_readSerialNumber:
                 ; 0017 0129     unsigned char i;
                 ; 0017 012A 
                 ; 0017 012B     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
009e6d 931a      	ST   -Y,R17
                 ;	i -> R17
                +
009e6e e9e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 808 ) )
009e6f e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 808 ) )
009e70 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 808 ) )
009e71 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 808 ) )
                 	__POINTD1FN _0x2E0000,808
009e72 940e c274 	CALL SUBOPT_0x3
                 ; 0017 012C     for(i=0;i<8;i++){
009e74 e010      	LDI  R17,LOW(0)
                 _0x2E003F:
009e75 3018      	CPI  R17,8
009e76 f420      	BRSH _0x2E0040
                 ; 0017 012D         printDebug("[%02X]",DEVICE_SERIAL[i]);
009e77 940e dac5 	CALL SUBOPT_0x373
                 ; 0017 012E     }
009e79 5f1f      	SUBI R17,-1
009e7a cffa      	RJMP _0x2E003F
                 _0x2E0040:
                 ; 0017 012F     printDebug("\r\n");
009e7b 940e dad1 	CALL SUBOPT_0x374
                 ; 0017 0130 
                 ; 0017 0131     return;
009e7d 9119      	LD   R17,Y+
009e7e 9508      	RET
                 ; 0017 0132 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 013A {
                 _debug_req:
                 ; 0017 013B     flag_PackageTerminate3 = 0;
009e7f e0e0      	LDI  R30,LOW(0)
009e80 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 013C 
                 ; 0017 013D     printDebug("Get Debug Req.:");
                +
009e82 ebeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 849 ) )
009e83 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 849 ) )
009e84 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 849 ) )
009e85 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 849 ) )
                 	__POINTD1FN _0x2E0000,849
009e86 940e c274 	CALL SUBOPT_0x3
                 ; 0017 013E 
                 ; 0017 013F 
                 ; 0017 0140     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
009e88 940e dad7 	CALL SUBOPT_0x375
                +
009e8a eaea     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009e8b e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009e8c e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009e8d e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
009e8e 940e dadc 	CALL SUBOPT_0x376
009e90 f411      	BRNE _0x2E0041
                 ; 0017 0141         DEBUG_setDateTime();
009e91 dd83      	RCALL _DEBUG_setDateTime
                 ; 0017 0142     }
                 ; 0017 0143     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
009e92 c064      	RJMP _0x2E0042
                 _0x2E0041:
009e93 940e dad7 	CALL SUBOPT_0x375
                +
009e95 ebe2     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009e96 e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009e97 e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009e98 e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
009e99 940e dadc 	CALL SUBOPT_0x376
009e9b f411      	BRNE _0x2E0043
                 ; 0017 0144         DEBUG_resetAlarm();
009e9c de3b      	RCALL _DEBUG_resetAlarm
                 ; 0017 0145     }
                 ; 0017 0146     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
009e9d c059      	RJMP _0x2E0044
                 _0x2E0043:
009e9e 940e dad7 	CALL SUBOPT_0x375
                +
009ea0 ebea     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
009ea1 e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
009ea2 e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
009ea3 e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
009ea4 940e dadc 	CALL SUBOPT_0x376
009ea6 f411      	BRNE _0x2E0045
                 ; 0017 0147         DEBUG_ClearLogFile();
009ea7 de39      	RCALL _DEBUG_ClearLogFile
                 ; 0017 0148     }
                 ; 0017 0149     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
009ea8 c04e      	RJMP _0x2E0046
                 _0x2E0045:
009ea9 940e dad7 	CALL SUBOPT_0x375
                +
009eab ece2     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
009eac e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
009ead e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
009eae e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
009eaf 940e dadc 	CALL SUBOPT_0x376
009eb1 f411      	BRNE _0x2E0047
                 ; 0017 014A         DEBUG_setRealVref();
009eb2 de5e      	RCALL _DEBUG_setRealVref
                 ; 0017 014B     }
                 ; 0017 014C     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
009eb3 c043      	RJMP _0x2E0048
                 _0x2E0047:
009eb4 940e dad7 	CALL SUBOPT_0x375
                +
009eb6 ecea     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
009eb7 e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
009eb8 e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
009eb9 e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
009eba 940e dadc 	CALL SUBOPT_0x376
009ebc f411      	BRNE _0x2E0049
                 ; 0017 014D         DEBUG_sensorSelect();
009ebd de85      	RCALL _DEBUG_sensorSelect
                 ; 0017 014E     }
                 ; 0017 014F     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
009ebe c038      	RJMP _0x2E004A
                 _0x2E0049:
009ebf 940e dad7 	CALL SUBOPT_0x375
                +
009ec1 ede2     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
009ec2 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
009ec3 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
009ec4 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
009ec5 940e dadc 	CALL SUBOPT_0x376
009ec7 f419      	BRNE _0x2E004B
                 ; 0017 0150         DEBUG_setDeviceEnable(1);
009ec8 e0a1      	LDI  R26,LOW(1)
009ec9 deca      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0151     }
                 ; 0017 0152     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
009eca c02c      	RJMP _0x2E004C
                 _0x2E004B:
009ecb 940e dad7 	CALL SUBOPT_0x375
                +
009ecd edea     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
009ece e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
009ecf e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
009ed0 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
009ed1 940e dadc 	CALL SUBOPT_0x376
009ed3 f419      	BRNE _0x2E004D
                 ; 0017 0153         DEBUG_setDeviceEnable(0);
009ed4 e0a0      	LDI  R26,LOW(0)
009ed5 debe      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0154     }
                 ; 0017 0155     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
009ed6 c020      	RJMP _0x2E004E
                 _0x2E004D:
009ed7 940e dad7 	CALL SUBOPT_0x375
                +
009ed9 eee2     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
009eda e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
009edb e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
009edc e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
009edd 940e dadc 	CALL SUBOPT_0x376
009edf f411      	BRNE _0x2E004F
                 ; 0017 0156         DEBUG_setSerialNumber();
009ee0 dec8      	RCALL _DEBUG_setSerialNumber
                 ; 0017 0157     }
                 ; 0017 0158     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
009ee1 c015      	RJMP _0x2E0050
                 _0x2E004F:
009ee2 940e dad7 	CALL SUBOPT_0x375
                +
009ee4 eeea     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
009ee5 e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
009ee6 e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
009ee7 e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
009ee8 940e dadc 	CALL SUBOPT_0x376
009eea f411      	BRNE _0x2E0051
                 ; 0017 0159         DEBUG_readSerialNumber();
009eeb df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 015A     }
                 ; 0017 015B     else if(!strncmpf(rxPackage3,cmdGetADCSensor,7)){
009eec c00a      	RJMP _0x2E0052
                 _0x2E0051:
009eed 940e dad7 	CALL SUBOPT_0x375
                +
009eef efe2     +LDI R30 , LOW ( 2 * _cmdGetADCSensor + ( 0 ) )
009ef0 e0f1     +LDI R31 , HIGH ( 2 * _cmdGetADCSensor + ( 0 ) )
009ef1 e060     +LDI R22 , BYTE3 ( 2 * _cmdGetADCSensor + ( 0 ) )
009ef2 e070     +LDI R23 , BYTE4 ( 2 * _cmdGetADCSensor + ( 0 ) )
                 	__POINTD1FN _cmdGetADCSensor,0
009ef3 940e dadc 	CALL SUBOPT_0x376
009ef5 f409      	BRNE _0x2E0053
                 ; 0017 015C         iGetSensorValue();
009ef6 dd15      	RCALL _iGetSensorValue
                 ; 0017 015D     }
                 ; 0017 015E 
                 ; 0017 015F     return;
                 _0x2E0053:
                 _0x2E0052:
                 _0x2E0050:
                 _0x2E004E:
                 _0x2E004C:
                 _0x2E004A:
                 _0x2E0048:
                 _0x2E0046:
                 _0x2E0044:
                 _0x2E0042:
009ef7 9508      	RET
                 ; 0017 0160 }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 0163 {
                 _printDebug:
009ef8 92ff      	PUSH R15
009ef9 2ef8      	MOV  R15,R24
                 ; 0017 0164     char textBuffer[256];
                 ; 0017 0165     va_list argptr;
                 ; 0017 0166 
                 ; 0017 0167     va_start(argptr, fmtstr);
009efa 50d1      	SUBI R29,1
009efb 931a      	ST   -Y,R17
009efc 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
009efd 01de      	MOVW R26,R28
009efe 50a2      	SUBI R26,LOW(-(254))
009eff 4fbf      	SBCI R27,HIGH(-(254))
009f00 940e e254 	CALL __ADDW2R15
009f02 018d      	MOVW R16,R26
                 ; 0017 0168     vsprintf(textBuffer,fmtstr,argptr);
009f03 940e ceb3 	CALL SUBOPT_0x1F3
009f05 01de      	MOVW R26,R28
009f06 5fac      	SUBI R26,LOW(-(260))
009f07 4fbe      	SBCI R27,HIGH(-(260))
009f08 940e d399 	CALL SUBOPT_0x294
                 ; 0017 0169     send_uart(3,textBuffer);
009f0a e0e3      	LDI  R30,LOW(3)
009f0b 93ea      	ST   -Y,R30
009f0c 01de      	MOVW R26,R28
009f0d 9613      	ADIW R26,3
009f0e 940e 4191 	CALL _send_uart
                 ; 0017 016A     va_end(argptr);
                 ; 0017 016B 
                 ; 0017 016C     return;
009f10 8119      	LDD  R17,Y+1
009f11 8108      	LDD  R16,Y+0
009f12 9622      	ADIW R28,2
009f13 5fdf      	SUBI R29,-1
009f14 90ff      	POP  R15
009f15 9508      	RET
                 ; 0017 016D }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 0170 {
                 _print_hex_ascii_line:
                 ; 0017 0171 
                 ; 0017 0172     int i;
                 ; 0017 0173     int gap;
                 ; 0017 0174     const unsigned char *ch;
                 ; 0017 0175 
                 ; 0017 0176     // offset //
                 ; 0017 0177     printDebug("%05d   ", offset);
009f16 940e cce7 	CALL SUBOPT_0x1A8
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
009f18 eceb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 865 ) )
009f19 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 865 ) )
009f1a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 865 ) )
009f1b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 865 ) )
                 	__POINTD1FN _0x2E0000,865
009f1c 940e c9ee 	CALL SUBOPT_0x129
009f1e 940e c881 	CALL SUBOPT_0xE9
                 ; 0017 0178 
                 ; 0017 0179 
                 ; 0017 017A     // hex //
                 ; 0017 017B     ch = payload;
                +
009f20 854a     +LDD R20 , Y + 10
009f21 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 017C     for(i = 0; i < len; i++) {
                +
009f22 e000     +LDI R16 , LOW ( 0 )
009f23 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0055:
009f24 85e8      	LDD  R30,Y+8
009f25 85f9      	LDD  R31,Y+8+1
009f26 170e      	CP   R16,R30
009f27 071f      	CPC  R17,R31
009f28 f494      	BRGE _0x2E0056
                 ; 0017 017D         printDebug("%02x ", *ch);
                +
009f29 ede3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 873 ) )
009f2a e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 873 ) )
009f2b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 873 ) )
009f2c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 873 ) )
                 	__POINTD1FN _0x2E0000,873
009f2d 940e dae3 	CALL SUBOPT_0x377
                 ; 0017 017E 
                 ; 0017 017F         ch++;
                +
009f2f 5f4f     +SUBI R20 , LOW ( - 1 )
009f30 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 0180         // print extra space after 8th byte for visual aid //
                 ; 0017 0181         if (i == 7){
009f31 e0e7      	LDI  R30,LOW(7)
009f32 e0f0      	LDI  R31,HIGH(7)
009f33 17e0      	CP   R30,R16
009f34 07f1      	CPC  R31,R17
009f35 f411      	BRNE _0x2E0057
                 ; 0017 0182             printDebug(" ");
009f36 940e dae9 	CALL SUBOPT_0x378
                 ; 0017 0183 
                 ; 0017 0184         }
                 ; 0017 0185     }
                 _0x2E0057:
                +
009f38 5f0f     +SUBI R16 , LOW ( - 1 )
009f39 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009f3a cfe9      	RJMP _0x2E0055
                 _0x2E0056:
                 ; 0017 0186     // print space to handle line less than 8 bytes //
                 ; 0017 0187     if (len < 8){
009f3b 85a8      	LDD  R26,Y+8
009f3c 85b9      	LDD  R27,Y+8+1
009f3d 9718      	SBIW R26,8
009f3e f414      	BRGE _0x2E0058
                 ; 0017 0188         printDebug(" ");
009f3f 940e dae9 	CALL SUBOPT_0x378
                 ; 0017 0189 
                 ; 0017 018A     }
                 ; 0017 018B 
                 ; 0017 018C     // fill hex gap with spaces if not full line //
                 ; 0017 018D     if (len < 16) {
                 _0x2E0058:
009f41 85a8      	LDD  R26,Y+8
009f42 85b9      	LDD  R27,Y+8+1
009f43 9750      	SBIW R26,16
009f44 f48c      	BRGE _0x2E0059
                 ; 0017 018E         gap = 16 - len;
009f45 85a8      	LDD  R26,Y+8
009f46 85b9      	LDD  R27,Y+8+1
009f47 e1e0      	LDI  R30,LOW(16)
009f48 e0f0      	LDI  R31,HIGH(16)
009f49 1bea      	SUB  R30,R26
009f4a 0bfb      	SBC  R31,R27
009f4b 019f      	MOVW R18,R30
                 ; 0017 018F         for (i = 0; i < gap; i++) {
                +
009f4c e000     +LDI R16 , LOW ( 0 )
009f4d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005B:
                +
009f4e 1702     +CP R16 , R18
009f4f 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
009f50 f42c      	BRGE _0x2E005C
                 ; 0017 0190             printDebug("   ");
009f51 940e daef 	CALL SUBOPT_0x379
                 ; 0017 0191 
                 ; 0017 0192         }
                +
009f53 5f0f     +SUBI R16 , LOW ( - 1 )
009f54 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009f55 cff8      	RJMP _0x2E005B
                 _0x2E005C:
                 ; 0017 0193     }
                 ; 0017 0194     printDebug("   ");
                 _0x2E0059:
009f56 940e daef 	CALL SUBOPT_0x379
                 ; 0017 0195 
                 ; 0017 0196 
                 ; 0017 0197     // ascii (if printable) //
                 ; 0017 0198     ch = payload;
                +
009f58 854a     +LDD R20 , Y + 10
009f59 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0199     for(i = 0; i < len; i++) {
                +
009f5a e000     +LDI R16 , LOW ( 0 )
009f5b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005E:
009f5c 85e8      	LDD  R30,Y+8
009f5d 85f9      	LDD  R31,Y+8+1
009f5e 170e      	CP   R16,R30
009f5f 071f      	CPC  R17,R31
009f60 f4c4      	BRGE _0x2E005F
                 ; 0017 019A         if (isprint(*ch)){
009f61 01da      	MOVW R26,R20
009f62 91ac      	LD   R26,X
009f63 940e c1ed 	CALL _isprint
009f65 30e0      	CPI  R30,0
009f66 f039      	BREQ _0x2E0060
                 ; 0017 019B             printDebug("%c", *ch);
                +
009f67 e5e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 744 ) )
009f68 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 744 ) )
009f69 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 744 ) )
009f6a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 744 ) )
                 	__POINTD1FN _0x2E0000,744
009f6b 940e dae3 	CALL SUBOPT_0x377
                 ; 0017 019C 
                 ; 0017 019D         }
                 ; 0017 019E         else{
009f6d c006      	RJMP _0x2E0061
                 _0x2E0060:
                 ; 0017 019F             printDebug(".");
                +
009f6e ede9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 879 ) )
009f6f e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 879 ) )
009f70 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 879 ) )
009f71 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 879 ) )
                 	__POINTD1FN _0x2E0000,879
009f72 940e c274 	CALL SUBOPT_0x3
                 ; 0017 01A0 
                 ; 0017 01A1         }
                 _0x2E0061:
                 ; 0017 01A2         ch++;
                +
009f74 5f4f     +SUBI R20 , LOW ( - 1 )
009f75 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 01A3     }
                +
009f76 5f0f     +SUBI R16 , LOW ( - 1 )
009f77 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009f78 cfe3      	RJMP _0x2E005E
                 _0x2E005F:
                 ; 0017 01A4 
                 ; 0017 01A5     printDebug("\r\n");
009f79 940e dad1 	CALL SUBOPT_0x374
                 ; 0017 01A6 
                 ; 0017 01A7 
                 ; 0017 01A8 return;
009f7b c0ee      	RJMP _0x20E002D
                 ; 0017 01A9 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 01AC {
                 _print_payload:
                 ; 0017 01AD 
                 ; 0017 01AE     int len_rem = len;
                 ; 0017 01AF     int line_width = 16;            // number of bytes per line //
                 ; 0017 01B0     int line_len;
                 ; 0017 01B1     int offset = 0;                    // zero-based offset counter //
                 ; 0017 01B2     const unsigned char *ch = payload;
                 ; 0017 01B3 
                 ; 0017 01B4     if (len <= 0)
009f7c 93ba      	ST   -Y,R27
009f7d 93aa      	ST   -Y,R26
009f7e 9724      	SBIW R28,4
009f7f e0e0      	LDI  R30,LOW(0)
009f80 83ea      	STD  Y+2,R30
009f81 83eb      	STD  Y+3,R30
009f82 940e e475 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
009f84 850a     +LDD R16 , Y + 10
009f85 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
009f86 e120     +LDI R18 , LOW ( 16 )
009f87 e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
009f88 85ec      	LDD  R30,Y+12
009f89 85fd      	LDD  R31,Y+12+1
009f8a 83ee      	STD  Y+6,R30
009f8b 83ff      	STD  Y+6+1,R31
009f8c 85aa      	LDD  R26,Y+10
009f8d 85bb      	LDD  R27,Y+10+1
009f8e 940e e45d 	CALL __CPW02
009f90 f574      	BRGE _0x20E002E
                 ; 0017 01B5         return;
                 ; 0017 01B6 
                 ; 0017 01B7     // data fits on one line //
                 ; 0017 01B8     if (len <= line_width) {
009f91 172a      	CP   R18,R26
009f92 073b      	CPC  R19,R27
009f93 f03c      	BRLT _0x2E0063
                 ; 0017 01B9         print_hex_ascii_line(ch, len, offset);
009f94 940e cb1f 	CALL SUBOPT_0x15C
009f96 940e cd12 	CALL SUBOPT_0x1AF
009f98 940e daf5 	CALL SUBOPT_0x37A
                 ; 0017 01BA         return;
009f9a c024      	RJMP _0x20E002E
                 ; 0017 01BB     }
                 ; 0017 01BC     // data spans multiple lines //
                 ; 0017 01BD     for ( ;; ) {
                 _0x2E0063:
                 _0x2E0065:
                 ; 0017 01BE         // compute current line length //
                 ; 0017 01BF         line_len = line_width % len_rem;
009f9b 01f8      	MOVW R30,R16
009f9c 01d9      	MOVW R26,R18
009f9d 940e e38d 	CALL __MODW21
009f9f 01af      	MOVW R20,R30
                 ; 0017 01C0         // print line //
                 ; 0017 01C1         print_hex_ascii_line(ch, line_len, offset);
009fa0 940e cb1f 	CALL SUBOPT_0x15C
009fa2 935a      	ST   -Y,R21
009fa3 934a      	ST   -Y,R20
009fa4 940e daf5 	CALL SUBOPT_0x37A
                 ; 0017 01C2         // compute total remaining //
                 ; 0017 01C3         len_rem = len_rem - line_len;
                +
009fa6 1b04     +SUB R16 , R20
009fa7 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 01C4         // shift pointer to remaining bytes to print //
                 ; 0017 01C5         ch = ch + line_len;
009fa8 01fa      	MOVW R30,R20
009fa9 940e ccdd 	CALL SUBOPT_0x1A6
009fab 83ee      	STD  Y+6,R30
009fac 83ff      	STD  Y+6+1,R31
                 ; 0017 01C6         // add offset //
                 ; 0017 01C7         offset = offset + line_width;
009fad 01f9      	MOVW R30,R18
009fae 85a8      	LDD  R26,Y+8
009faf 85b9      	LDD  R27,Y+8+1
009fb0 0fea      	ADD  R30,R26
009fb1 1ffb      	ADC  R31,R27
009fb2 87e8      	STD  Y+8,R30
009fb3 87f9      	STD  Y+8+1,R31
                 ; 0017 01C8         // check if we have line width chars or less //
                 ; 0017 01C9         if (len_rem <= line_width) {
                +
009fb4 1720     +CP R18 , R16
009fb5 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009fb6 f03c      	BRLT _0x2E0067
                 ; 0017 01CA             // print last line and get out //
                 ; 0017 01CB             print_hex_ascii_line(ch, len_rem, offset);
009fb7 940e cb1f 	CALL SUBOPT_0x15C
009fb9 931a      	ST   -Y,R17
009fba 930a      	ST   -Y,R16
009fbb 940e daf5 	CALL SUBOPT_0x37A
                 ; 0017 01CC             break;
009fbd c001      	RJMP _0x2E0066
                 ; 0017 01CD         }
                 ; 0017 01CE     }
                 _0x2E0067:
009fbe cfdc      	RJMP _0x2E0065
                 _0x2E0066:
                 ; 0017 01CF 
                 ; 0017 01D0     return;
                 _0x20E002E:
009fbf 940e e47c 	CALL __LOADLOCR6
009fc1 962e      	ADIW R28,14
009fc2 9508      	RET
                 ; 0017 01D1 }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 _forwardSubstitution:
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
009fc3 9726      	SBIW R28,6
009fc4 940e c45d 	CALL SUBOPT_0x46
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 _0x300005:
009fc6 940e daf9 	CALL SUBOPT_0x37B
009fc8 170e      	CP   R16,R30
009fc9 071f      	CPC  R17,R31
009fca f014      	BRLT PC+3
009fcb 940c a06a 	JMP _0x300006
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                +
009fcd 870a     +STD Y + 10 , R16
009fce 871b     +STD Y + 10 + 1 , R17
                 	__PUTWSR 16,17,10
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
009fcf 01f8      	MOVW R30,R16
009fd0 9631      	ADIW R30,1
009fd1 019f      	MOVW R18,R30
                 _0x300008:
009fd2 940e daf9 	CALL SUBOPT_0x37B
009fd4 172e      	CP   R18,R30
009fd5 073f      	CPC  R19,R31
009fd6 f4dc      	BRGE _0x300009
                 ; 0018 0011             if (a[j][i] > a[max][i])
009fd7 940e dafe 	CALL SUBOPT_0x37C
009fd9 940e db04 	CALL SUBOPT_0x37D
009fdb 937f      	PUSH R23
009fdc 936f      	PUSH R22
009fdd 93ff      	PUSH R31
009fde 93ef      	PUSH R30
009fdf 940e db08 	CALL SUBOPT_0x37E
009fe1 940e db04 	CALL SUBOPT_0x37D
009fe3 91af      	POP  R26
009fe4 91bf      	POP  R27
009fe5 918f      	POP  R24
009fe6 919f      	POP  R25
009fe7 940e e234 	CALL __CMPF12
009fe9 f009      	BREQ PC+2
009fea f410      	BRCC PC+3
009feb 940c 9fef 	JMP  _0x30000A
                 ; 0018 0012                 max = j;
                +
009fed 872a     +STD Y + 10 , R18
009fee 873b     +STD Y + 10 + 1 , R19
                 	__PUTWSR 18,19,10
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 _0x30000A:
                +
009fef 5f2f     +SUBI R18 , LOW ( - 1 )
009ff0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009ff1 cfe0      	RJMP _0x300008
                 _0x300009:
                +
009ff2 e020     +LDI R18 , LOW ( 0 )
009ff3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30000C:
009ff4 940e daf9 	CALL SUBOPT_0x37B
009ff6 9631      	ADIW R30,1
009ff7 172e      	CP   R18,R30
009ff8 073f      	CPC  R19,R31
009ff9 f4dc      	BRGE _0x30000D
                 ; 0018 0015             t = a[max][j];
009ffa 940e db08 	CALL SUBOPT_0x37E
009ffc 940e db0f 	CALL SUBOPT_0x37F
009ffe 940e c73c 	CALL SUBOPT_0xB6
                 ; 0018 0016             a[max][j] = a[i][j];
00a000 940e db08 	CALL SUBOPT_0x37E
00a002 940e db13 	CALL SUBOPT_0x380
00a004 010f      	MOVW R0,R30
00a005 940e db17 	CALL SUBOPT_0x381
00a007 940e db0f 	CALL SUBOPT_0x37F
00a009 01d0      	MOVW R26,R0
00a00a 940e e3db 	CALL __PUTDP1
                 ; 0018 0017             a[i][j] = t;
00a00c 940e db17 	CALL SUBOPT_0x381
00a00e 940e db13 	CALL SUBOPT_0x380
00a010 940e d25d 	CALL SUBOPT_0x263
                 ; 0018 0018         }
                +
00a012 5f2f     +SUBI R18 , LOW ( - 1 )
00a013 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a014 cfdf      	RJMP _0x30000C
                 _0x30000D:
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                +
00a015 9120 1a99+LDS R18 , 0 + ( _n )
00a017 9130 1a9a+LDS R19 , 0 + ( _n ) + 1
                 	__GETWRMN 18,19,0,_n
                 _0x30000F:
                +
00a019 1720     +CP R18 , R16
00a01a 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
00a01b f414      	BRGE PC+3
00a01c 940c a067 	JMP _0x300010
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
00a01e 01f8      	MOVW R30,R16
00a01f 9631      	ADIW R30,1
00a020 01af      	MOVW R20,R30
                 _0x300012:
00a021 940e daf9 	CALL SUBOPT_0x37B
00a023 174e      	CP   R20,R30
00a024 075f      	CPC  R21,R31
00a025 f5f4      	BRGE _0x300013
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
00a026 01fa      	MOVW R30,R20
00a027 940e e2a3 	CALL __LSLW4
00a029 56e5      	SUBI R30,LOW(-_a)
00a02a 4ef5      	SBCI R31,HIGH(-_a)
00a02b 010f      	MOVW R0,R30
00a02c 940e db13 	CALL SUBOPT_0x380
00a02e 93ff      	PUSH R31
00a02f 93ef      	PUSH R30
00a030 01df      	MOVW R26,R30
00a031 940e e3d0 	CALL __GETD1P
00a033 937f      	PUSH R23
00a034 936f      	PUSH R22
00a035 93ff      	PUSH R31
00a036 93ef      	PUSH R30
00a037 01d0      	MOVW R26,R0
00a038 01f8      	MOVW R30,R16
00a039 940e d2ca 	CALL SUBOPT_0x274
00a03b 937f      	PUSH R23
00a03c 936f      	PUSH R22
00a03d 93ff      	PUSH R31
00a03e 93ef      	PUSH R30
00a03f 940e db17 	CALL SUBOPT_0x381
00a041 940e db04 	CALL SUBOPT_0x37D
00a043 91af      	POP  R26
00a044 91bf      	POP  R27
00a045 918f      	POP  R24
00a046 919f      	POP  R25
00a047 940e e1ef 	CALL __DIVF21
00a049 937f      	PUSH R23
00a04a 936f      	PUSH R22
00a04b 93ff      	PUSH R31
00a04c 93ef      	PUSH R30
00a04d 940e db17 	CALL SUBOPT_0x381
00a04f 940e db0f 	CALL SUBOPT_0x37F
00a051 91af      	POP  R26
00a052 91bf      	POP  R27
00a053 918f      	POP  R24
00a054 919f      	POP  R25
00a055 940e e1a1 	CALL __MULF12
00a057 91af      	POP  R26
00a058 91bf      	POP  R27
00a059 918f      	POP  R24
00a05a 919f      	POP  R25
00a05b 940e d08a 	CALL SUBOPT_0x222
00a05d 91af      	POP  R26
00a05e 91bf      	POP  R27
00a05f 940e e3db 	CALL __PUTDP1
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                +
00a061 5f4f     +SUBI R20 , LOW ( - 1 )
00a062 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00a063 cfbd      	RJMP _0x300012
                 _0x300013:
                 ; 0018 002B         }
                +
00a064 5021     +SUBI R18 , LOW ( 1 )
00a065 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
00a066 cfb2      	RJMP _0x30000F
                 _0x300010:
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                +
00a067 5f0f     +SUBI R16 , LOW ( - 1 )
00a068 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a069 cf5c      	RJMP _0x300005
                 _0x300006:
                 ; 0018 003A }
                 _0x20E002D:
00a06a 940e e47c 	CALL __LOADLOCR6
00a06c 962c      	ADIW R28,12
00a06d 9508      	RET
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 _reverseElimination:
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
00a06e 940e e475 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
00a070 940e daf9 	CALL SUBOPT_0x37B
00a072 9731      	SBIW R30,1
00a073 018f      	MOVW R16,R30
                 _0x300015:
00a074 2311      	TST  R17
00a075 f412      	BRPL PC+3
00a076 940c a0e7 	JMP _0x300016
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
00a078 940e db17 	CALL SUBOPT_0x381
00a07a 01df      	MOVW R26,R30
00a07b 940e daf9 	CALL SUBOPT_0x37B
00a07d 940e cfa3 	CALL SUBOPT_0x211
00a07f 93ff      	PUSH R31
00a080 93ef      	PUSH R30
00a081 940e db17 	CALL SUBOPT_0x381
00a083 01df      	MOVW R26,R30
00a084 940e daf9 	CALL SUBOPT_0x37B
00a086 940e d2ca 	CALL SUBOPT_0x274
00a088 937f      	PUSH R23
00a089 936f      	PUSH R22
00a08a 93ff      	PUSH R31
00a08b 93ef      	PUSH R30
00a08c 940e db17 	CALL SUBOPT_0x381
00a08e 940e db04 	CALL SUBOPT_0x37D
00a090 91af      	POP  R26
00a091 91bf      	POP  R27
00a092 918f      	POP  R24
00a093 919f      	POP  R25
00a094 940e e1ef 	CALL __DIVF21
00a096 91af      	POP  R26
00a097 91bf      	POP  R27
00a098 940e e3db 	CALL __PUTDP1
                 ; 0018 0041         a[i][i] = 1;
00a09a 940e db17 	CALL SUBOPT_0x381
00a09c 01df      	MOVW R26,R30
00a09d 01f8      	MOVW R30,R16
00a09e 940e d1a0 	CALL SUBOPT_0x247
00a0a0 940e db1d 	CALL SUBOPT_0x382
00a0a2 940e e3db 	CALL __PUTDP1
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
00a0a4 01f8      	MOVW R30,R16
00a0a5 9731      	SBIW R30,1
00a0a6 019f      	MOVW R18,R30
                 _0x300018:
00a0a7 2333      	TST  R19
00a0a8 f1da      	BRMI _0x300019
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
00a0a9 940e dafe 	CALL SUBOPT_0x37C
00a0ab 010f      	MOVW R0,R30
00a0ac 01df      	MOVW R26,R30
00a0ad 940e daf9 	CALL SUBOPT_0x37B
00a0af 940e cfa3 	CALL SUBOPT_0x211
00a0b1 93ff      	PUSH R31
00a0b2 93ef      	PUSH R30
00a0b3 01df      	MOVW R26,R30
00a0b4 940e e3d0 	CALL __GETD1P
00a0b6 937f      	PUSH R23
00a0b7 936f      	PUSH R22
00a0b8 93ff      	PUSH R31
00a0b9 93ef      	PUSH R30
00a0ba 01d0      	MOVW R26,R0
00a0bb 01f8      	MOVW R30,R16
00a0bc 940e d2ca 	CALL SUBOPT_0x274
00a0be 937f      	PUSH R23
00a0bf 936f      	PUSH R22
00a0c0 93ff      	PUSH R31
00a0c1 93ef      	PUSH R30
00a0c2 940e db17 	CALL SUBOPT_0x381
00a0c4 01df      	MOVW R26,R30
00a0c5 940e daf9 	CALL SUBOPT_0x37B
00a0c7 940e d2ca 	CALL SUBOPT_0x274
00a0c9 91af      	POP  R26
00a0ca 91bf      	POP  R27
00a0cb 918f      	POP  R24
00a0cc 919f      	POP  R25
00a0cd 940e e1a1 	CALL __MULF12
00a0cf 91af      	POP  R26
00a0d0 91bf      	POP  R27
00a0d1 918f      	POP  R24
00a0d2 919f      	POP  R25
00a0d3 940e d08a 	CALL SUBOPT_0x222
00a0d5 91af      	POP  R26
00a0d6 91bf      	POP  R27
00a0d7 940e e3db 	CALL __PUTDP1
                 ; 0018 0044             a[j][i] = 0;
00a0d9 940e dafe 	CALL SUBOPT_0x37C
00a0db 01df      	MOVW R26,R30
00a0dc 01f8      	MOVW R30,R16
00a0dd 940e d1a0 	CALL SUBOPT_0x247
00a0df 940e c634 	CALL SUBOPT_0x8E
                 ; 0018 0045         }
                +
00a0e1 5021     +SUBI R18 , LOW ( 1 )
00a0e2 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
00a0e3 cfc3      	RJMP _0x300018
                 _0x300019:
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                +
00a0e4 5001     +SUBI R16 , LOW ( 1 )
00a0e5 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
00a0e6 cf8d      	RJMP _0x300015
                 _0x300016:
                 ; 0018 0052 }
00a0e7 940e e47c 	CALL __LOADLOCR6
00a0e9 9626      	ADIW R28,6
00a0ea 9508      	RET
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 _gaussian:
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
00a0eb 940e c5d9 	CALL SUBOPT_0x7F
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
00a0ed 940e db1d 	CALL SUBOPT_0x382
00a0ef 93e0 1a9b 	STS  _a,R30
00a0f1 93f0 1a9c 	STS  _a+1,R31
00a0f3 9360 1a9d 	STS  _a+2,R22
00a0f5 9370 1a9e 	STS  _a+3,R23
00a0f7 940e c759 	CALL SUBOPT_0xBB
                +
00a0f9 93e0 1a9f+STS _a + ( 4 ) , R30
00a0fb 93f0 1aa0+STS _a + ( 4 ) + 1 , R31
00a0fd 9360 1aa1+STS _a + ( 4 ) + 2 , R22
00a0ff 9370 1aa2+STS _a + ( 4 ) + 3 , R23
                 	__PUTD1MN _a,4
00a101 940e c759 	CALL SUBOPT_0xBB
00a103 940e c763 	CALL SUBOPT_0xBD
00a105 940e e1a1 	CALL __MULF12
                +
00a107 93e0 1aa3+STS _a + ( 8 ) , R30
00a109 93f0 1aa4+STS _a + ( 8 ) + 1 , R31
00a10b 9360 1aa5+STS _a + ( 8 ) + 2 , R22
00a10d 9370 1aa6+STS _a + ( 8 ) + 3 , R23
                 	__PUTD1MN _a,8
00a10f 940e c7ff 	CALL SUBOPT_0xD4
                +
00a111 93e0 1aa7+STS _a + ( 12 ) , R30
00a113 93f0 1aa8+STS _a + ( 12 ) + 1 , R31
00a115 9360 1aa9+STS _a + ( 12 ) + 2 , R22
00a117 9370 1aaa+STS _a + ( 12 ) + 3 , R23
                 	__PUTD1MN _a,12
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                +
00a119 eaeb     +LDI R30 , LOW ( _a + ( 16 ) )
00a11a e1fa     +LDI R31 , HIGH ( _a + ( 16 ) )
                 	__POINTW1MN _a,16
00a11b 940e db22 	CALL SUBOPT_0x383
00a11d 940e c7f0 	CALL SUBOPT_0xD1
                +
00a11f 93e0 1aaf+STS _a + ( 20 ) , R30
00a121 93f0 1ab0+STS _a + ( 20 ) + 1 , R31
00a123 9360 1ab1+STS _a + ( 20 ) + 2 , R22
00a125 9370 1ab2+STS _a + ( 20 ) + 3 , R23
                 	__PUTD1MN _a,20
00a127 940e c7f0 	CALL SUBOPT_0xD1
00a129 940e c74c 	CALL SUBOPT_0xB9
00a12b 940e e1a1 	CALL __MULF12
                +
00a12d 93e0 1ab3+STS _a + ( 24 ) , R30
00a12f 93f0 1ab4+STS _a + ( 24 ) + 1 , R31
00a131 9360 1ab5+STS _a + ( 24 ) + 2 , R22
00a133 9370 1ab6+STS _a + ( 24 ) + 3 , R23
                 	__PUTD1MN _a,24
00a135 940e c503 	CALL SUBOPT_0x60
                +
00a137 93e0 1ab7+STS _a + ( 28 ) , R30
00a139 93f0 1ab8+STS _a + ( 28 ) + 1 , R31
00a13b 9360 1ab9+STS _a + ( 28 ) + 2 , R22
00a13d 9370 1aba+STS _a + ( 28 ) + 3 , R23
                 	__PUTD1MN _a,28
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                +
00a13f ebeb     +LDI R30 , LOW ( _a + ( 32 ) )
00a140 e1fa     +LDI R31 , HIGH ( _a + ( 32 ) )
                 	__POINTW1MN _a,32
00a141 940e db22 	CALL SUBOPT_0x383
00a143 940e c77e 	CALL SUBOPT_0xC2
                +
00a145 93e0 1abf+STS _a + ( 36 ) , R30
00a147 93f0 1ac0+STS _a + ( 36 ) + 1 , R31
00a149 9360 1ac1+STS _a + ( 36 ) + 2 , R22
00a14b 9370 1ac2+STS _a + ( 36 ) + 3 , R23
                 	__PUTD1MN _a,36
00a14d 940e c77e 	CALL SUBOPT_0xC2
00a14f 940e c7f5 	CALL SUBOPT_0xD2
00a151 940e e1a1 	CALL __MULF12
                +
00a153 93e0 1ac3+STS _a + ( 40 ) , R30
00a155 93f0 1ac4+STS _a + ( 40 ) + 1 , R31
00a157 9360 1ac5+STS _a + ( 40 ) + 2 , R22
00a159 9370 1ac6+STS _a + ( 40 ) + 3 , R23
                 	__PUTD1MN _a,40
00a15b 940e c804 	CALL SUBOPT_0xD5
                +
00a15d 93e0 1ac7+STS _a + ( 44 ) , R30
00a15f 93f0 1ac8+STS _a + ( 44 ) + 1 , R31
00a161 9360 1ac9+STS _a + ( 44 ) + 2 , R22
00a163 9370 1aca+STS _a + ( 44 ) + 3 , R23
                 	__PUTD1MN _a,44
                 ; 0018 005C 
                 ; 0018 005D /*  bongkot printDebug disable
                 ; 0018 005E     printDebug("\r\n<gaussian> --- start ---\r\n");
                 ; 0018 005F     for (i = 0; i < n; ++i) {
                 ; 0018 0060         printDebug("\t\t");
                 ; 0018 0061         for (j = 0; j < n + 1; ++j)
                 ; 0018 0062             printDebug("%.2f\t", a[i][j]);
                 ; 0018 0063         printDebug("\r\n");
                 ; 0018 0064     }
                 ; 0018 0065 */
                 ; 0018 0066     forwardSubstitution();
00a165 de5d      	RCALL _forwardSubstitution
                 ; 0018 0067     reverseElimination();
00a166 df07      	RCALL _reverseElimination
                 ; 0018 0068 /*  bongkot printDebug disable
                 ; 0018 0069     printDebug("\r\n<gaussian> --- finish ---\r\n");
                 ; 0018 006A     for (i = 0; i < n; ++i) {
                 ; 0018 006B         printDebug("\t\t");
                 ; 0018 006C         for (j = 0; j < n + 1; ++j)
                 ; 0018 006D             printDebug("%.2f\t", a[i][j]);
                 ; 0018 006E         printDebug("\r\n");
                 ; 0018 006F     }
                 ; 0018 0070 */
                 ; 0018 0071     *resA = a[2][3];
                +
00a167 91e0 1ac7+LDS R30 , _a + ( 44 )
00a169 91f0 1ac8+LDS R31 , _a + ( 44 ) + 1
00a16b 9160 1ac9+LDS R22 , _a + ( 44 ) + 2
00a16d 9170 1aca+LDS R23 , _a + ( 44 ) + 3
                 	__GETD1MN _a,44
00a16f 85a8      	LDD  R26,Y+8
00a170 85b9      	LDD  R27,Y+8+1
00a171 940e e3db 	CALL __PUTDP1
                 ; 0018 0072     *resB = a[1][3];
                +
00a173 91e0 1ab7+LDS R30 , _a + ( 28 )
00a175 91f0 1ab8+LDS R31 , _a + ( 28 ) + 1
00a177 9160 1ab9+LDS R22 , _a + ( 28 ) + 2
00a179 9170 1aba+LDS R23 , _a + ( 28 ) + 3
                 	__GETD1MN _a,28
00a17b 81ae      	LDD  R26,Y+6
00a17c 81bf      	LDD  R27,Y+6+1
00a17d 940e e3db 	CALL __PUTDP1
                 ; 0018 0073     *resC = a[0][3];
                +
00a17f 91e0 1aa7+LDS R30 , _a + ( 12 )
00a181 91f0 1aa8+LDS R31 , _a + ( 12 ) + 1
00a183 9160 1aa9+LDS R22 , _a + ( 12 ) + 2
00a185 9170 1aaa+LDS R23 , _a + ( 12 ) + 3
                 	__GETD1MN _a,12
00a187 81ac      	LDD  R26,Y+4
00a188 81bd      	LDD  R27,Y+4+1
00a189 940e e3db 	CALL __PUTDP1
                 ; 0018 0074 
                 ; 0018 0075 /*  bongkot printDebug disable  */
                 ; 0018 0076 //    printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                 ; 0018 0077 
                 ; 0018 0078     return;
00a18b 940e e47e 	CALL __LOADLOCR4
00a18d 96a2      	ADIW R28,34
00a18e 9508      	RET
                 ; 0018 0079 }
                 ;#include "smoothFilter.h"
                 ;
                 ;int indexWrite = 0;
                 ;int gItemSize = 0;
                 ;unsigned int * smoothBuffer;
                 ;iSmoothData_t iSmoothData;
                 ;
                 ;pviSmoothHandle_t pviSmoothSensorHandle;
                 ;
                 ;iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 ; 0019 000A iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 
                 	.CSEG
                 ; 0019 000B     int * ptrSmoothBuffer;
                 ; 0019 000C     iSmoothData_t iSmoothData;
                 ; 0019 000D     iSmoothData.status = 0;
                 ;	*pviSmoothHandle_p -> Y+12
                 ;	adcValue_p -> Y+10
                 ;	*ptrSmoothBuffer -> R16,R17
                 ;	iSmoothData -> Y+2
                 ; 0019 000E     if(indexWrite<gItemSize){
                 ; 0019 000F         iSmoothData.status = 0;
                 ; 0019 0010         ptrSmoothBuffer = pviSmoothHandle_p;
                 ; 0019 0011         *ptrSmoothBuffer = adcValue_p;
                 ; 0019 0012         indexWrite++;
                 ; 0019 0013     }else if(indexWrite==gItemSize){
                 ; 0019 0014        iSmoothData.status = 1;
                 ; 0019 0015        indexWrite = 0;
                 ; 0019 0016        gItemSize = 0;
                 ; 0019 0017        free(smoothBuffer);
                 ; 0019 0018     }
                 ; 0019 0019 
                 ; 0019 001A 
                 ; 0019 001B     return iSmoothData;
                 ; 0019 001C }
                 ;
                 ;pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001E pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001F    pviSmoothHandle_t  pviSmoothHandle;
                 ; 0019 0020    smoothBuffer = (int *)malloc(itemSize);
                 ;	itemSize -> Y+2
                 ;	*pviSmoothHandle -> R16,R17
                 ; 0019 0021    if(smoothBuffer!=NULL){
                 ; 0019 0022      pviSmoothHandle = smoothBuffer;
                 ; 0019 0023      gItemSize = itemSize;
                 ; 0019 0024    }else{
                 ; 0019 0025      return   pviSmoothHandle = (int *)0;
                 ; 0019 0026    }
                 ; 0019 0027    return  pviSmoothHandle;
                 ; 0019 0028 }
                 ;#include "ad595.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;
                 ;float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 ; 001A 0005 float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 
                 	.CSEG
                 _iAD595ADCToTemp:
                 ; 001A 0006      int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 0007      float  viADCToVolt = 0.0;
                 ; 001A 0008      //const float  viZeroSet   = 1.68;
                 ; 001A 0009      const float  viZeroSet   = 1.667;
                 ; 001A 000A      float viVoltUpLevel = 0.0;
                 ; 001A 000B      float ivTempValue = 0.0;
                 ; 001A 000C      float factorA = 0.0;
                 ; 001A 000D      float factorB = 0.0;
                 ; 001A 000E      float factorC = 0.0;
                 ; 001A 000F 
                 ; 001A 0010      /////////range 1 Temp C(-10 to -100)
                 ; 001A 0011      float viVoltPoint1_1 = -0.094;
                 ; 001A 0012      float viVoltPoint2_1 = -0.552;
                 ; 001A 0013      float viVoltPoint3_1 = -0.876;
                 ; 001A 0014      float viTempOutPoint1_1 = -10.0;
                 ; 001A 0015      float viTempOutPoint2_1 = -60.0;
                 ; 001A 0016      float viTempOutPoint3_1 = -100.0;
                 ; 001A 0017 
                 ; 001A 0018      /////////range 2 Temp C(-100 to -200)
                 ; 001A 0019      float viVoltPoint1_2 = -0.876;
                 ; 001A 001A      float viVoltPoint2_2 = -1.269;
                 ; 001A 001B      float viVoltPoint3_2 = -1.454;
                 ; 001A 001C      float viTempOutPoint1_2 = -100.0;
                 ; 001A 001D      float viTempOutPoint2_2 = -160.0;
                 ; 001A 001E      float viTempOutPoint3_2 = -200.0;
                 ; 001A 001F 
                 ; 001A 0020      const float viVoltPointTable[5][3]  = {
                 ; 001A 0021             {-0.094,-0.189,-0.375},           //-10 to -40
                 ; 001A 0022             {-0.375,-0.552,-0.719},           //-40 to -80
                 ; 001A 0023             {-0.719,-0.876,-1.021},           //-80 to -120
                 ; 001A 0024             {-1.021,-1.152,-1.269},           //-120 to -160
                 ; 001A 0025             {-1.269,-1.370,-1.454}            //-160 to -200
                 ; 001A 0026      };
                 ; 001A 0027 
                 ; 001A 0028      const float viTempOutPointTable[5][3]  = {
                 ; 001A 0029             {-10.0,-20.0,-40.0},           //-10 to -40
                 ; 001A 002A             {-40.0,-60.0,-80.0},           //-40 to -80
                 ; 001A 002B             {-80.0,-100.0,-120.0},           //-80 to -120
                 ; 001A 002C             {-120.0,-140.0,-160.0},           //-120 to -160
                 ; 001A 002D             {-160.0,-180.0,-200.0}            //-160 to -200
                 ; 001A 002E      };
                 ; 001A 002F 
                 ; 001A 0030      viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
00a18f 93ba      	ST   -Y,R27
00a190 93aa      	ST   -Y,R26
00a191 940e db28 	CALL SUBOPT_0x384
00a193 edee      	LDI  R30,LOW(_0x340003*2)
00a194 e6f8      	LDI  R31,HIGH(_0x340003*2)
00a195 e060      	LDI  R22,BYTE3(_0x340003*2)
00a196 940e e483 	CALL __INITLOCB
00a198 931a      	ST   -Y,R17
00a199 930a      	ST   -Y,R16
                 ;	viADC_p -> Y+200
                 ;	viADCLoop_p -> Y+198
                 ;	viADCSmooth -> R16,R17
                 ;	viADCToVolt -> Y+194
                 ;	viZeroSet -> Y+190
                 ;	viVoltUpLevel -> Y+186
                 ;	ivTempValue -> Y+182
                 ;	factorA -> Y+178
                 ;	factorB -> Y+174
                 ;	factorC -> Y+170
                 ;	viVoltPoint1_1 -> Y+166
                 ;	viVoltPoint2_1 -> Y+162
                 ;	viVoltPoint3_1 -> Y+158
                 ;	viTempOutPoint1_1 -> Y+154
                 ;	viTempOutPoint2_1 -> Y+150
                 ;	viTempOutPoint3_1 -> Y+146
                 ;	viVoltPoint1_2 -> Y+142
                 ;	viVoltPoint2_2 -> Y+138
                 ;	viVoltPoint3_2 -> Y+134
                 ;	viTempOutPoint1_2 -> Y+130
                 ;	viTempOutPoint2_2 -> Y+126
                 ;	viTempOutPoint3_2 -> Y+122
                 ;	viVoltPointTable -> Y+62
                 ;	viTempOutPointTable -> Y+2
                +
00a19a 01fe     +MOVW R30 , R28
00a19b 53ea     +SUBI R30 , LOW ( - 198 )
00a19c 4fff     +SBCI R31 , HIGH ( - 198 )
00a19d 9001     +LD R0 , Z +
00a19e 81f0     +LD R31 , Z
00a19f 2de0     +MOV R30 , R0
                 	__GETW1SX 198
                +
00a1a0 01de     +MOVW R26 , R28
00a1a1 53a8     +SUBI R26 , LOW ( - 200 )
00a1a2 4fbf     +SBCI R27 , HIGH ( - 200 )
00a1a3 900d     +LD R0 , X +
00a1a4 901d     +LD R1 , X +
00a1a5 918d     +LD R24 , X +
00a1a6 919c     +LD R25 , X
00a1a7 01d0     +MOVW R26 , R0
                 	__GETD2SX 200
00a1a8 940e e2dd 	CALL __CWD1
00a1aa 940e e379 	CALL __DIVD21
00a1ac 018f      	MOVW R16,R30
00a1ad 940e cf39 	CALL SUBOPT_0x205
00a1af 01df      	MOVW R26,R30
00a1b0 01cb      	MOVW R24,R22
00a1b1 940e db30 	CALL SUBOPT_0x385
                +
00a1b3 01de     +MOVW R26 , R28
00a1b4 53ae     +SUBI R26 , LOW ( - 194 )
00a1b5 4fbf     +SBCI R27 , HIGH ( - 194 )
00a1b6 93ed     +ST X + , R30
00a1b7 93fd     +ST X + , R31
00a1b8 936d     +ST X + , R22
00a1b9 937c     +ST X , R23
                 	__PUTD1SX 194
                 ; 001A 0031      viVoltUpLevel = viADCToVolt - viZeroSet;
                +
00a1ba e4a2     +LDI R26 , LOW ( 0x3FD56042 )
00a1bb e6b0     +LDI R27 , HIGH ( 0x3FD56042 )
00a1bc ed85     +LDI R24 , BYTE3 ( 0x3FD56042 )
00a1bd e39f     +LDI R25 , BYTE4 ( 0x3FD56042 )
                 	__GETD2N 0x3FD56042
00a1be 940e e14a 	CALL __SUBF12
                +
00a1c0 01de     +MOVW R26 , R28
00a1c1 54a6     +SUBI R26 , LOW ( - 186 )
00a1c2 4fbf     +SBCI R27 , HIGH ( - 186 )
00a1c3 93ed     +ST X + , R30
00a1c4 93fd     +ST X + , R31
00a1c5 936d     +ST X + , R22
00a1c6 937c     +ST X , R23
                 	__PUTD1SX 186
                 ; 001A 0032 
                 ; 001A 0033 
                 ; 001A 0034 //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 0035 //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0036 //          printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0037 //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.876)) ){
                 ; 001A 0038 //
                 ; 001A 0039 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 003A //        gaussian(viVoltPoint1_1,  viVoltPoint2_1,  viVoltPoint3_1, viTempOutPoint1_1, viTempOutPoint2_1, viTempOutPoint3_1, &factorA, &factorB, &factorC);
                 ; 001A 003B //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 003C //
                 ; 001A 003D //         printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 003E //     }else if((viVoltUpLevel < (-0.876)) && (viVoltUpLevel >= (-1.454)) ){
                 ; 001A 003F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0040 //        gaussian(viVoltPoint1_2,  viVoltPoint2_2,  viVoltPoint3_2, viTempOutPoint1_2, viTempOutPoint2_2, viTempOutPoint3_2, &factorA, &factorB, &factorC);
                 ; 001A 0041 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0042 //
                 ; 001A 0043 //         printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0044 //     }else if(viVoltUpLevel < ((-1.454)+10.0)){
                 ; 001A 0045 //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0046 //         printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0047 //     }
                 ; 001A 0048 
                 ; 001A 0049 
                 ; 001A 004A //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 004B //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 004C //        //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 004D //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 ; 001A 004E //
                 ; 001A 004F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0050 //        gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
                 ; 001A 0051 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0052 //
                 ; 001A 0053 //        // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0054 //     }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 ; 001A 0055 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0056 //        gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                 ; 001A 0057 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0058 //
                 ; 001A 0059 //        // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 005A //     }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 ; 001A 005B //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 005C //        gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                 ; 001A 005D //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 005E //
                 ; 001A 005F //        // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0060 //     }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 ; 001A 0061 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0062 //        gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                 ; 001A 0063 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0064 //
                 ; 001A 0065 //        // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0066 //     }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.464)) ){        //-1.454 + 20.0   | 20 = +compencess
                 ; 001A 0067 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0068 //        gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                 ; 001A 0069 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 006A //
                 ; 001A 006B //         //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 006C //     }
                 ; 001A 006D //     else if(viVoltUpLevel < (-1.464)){
                 ; 001A 006E //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 006F //         //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0070 //     }
                 ; 001A 0071 //     //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 0072 
                 ; 001A 0073 
                 ; 001A 0074      if(viVoltUpLevel >= (-0.094)){
00a1c7 940e db3d 	CALL SUBOPT_0x386
00a1c9 f008      	BRLO _0x340004
                 ; 001A 0075           ivTempValue = (viVoltUpLevel*1000) / 10.0;
00a1ca c118      	RJMP _0x340034
                 ; 001A 0076         //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0077      }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 _0x340004:
00a1cb 940e db3d 	CALL SUBOPT_0x386
00a1cd f428      	BRSH _0x340007
00a1ce 940e db4c 	CALL SUBOPT_0x387
00a1d0 940e db55 	CALL SUBOPT_0x388
00a1d2 f408      	BRSH _0x340008
                 _0x340007:
00a1d3 c02d      	RJMP _0x340006
                 _0x340008:
                 ; 001A 0078 
                 ; 001A 0079         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 007A         gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
00a1d4 940e db5c 	CALL SUBOPT_0x389
                +
00a1d6 01fe     +MOVW R30 , R28
00a1d7 5bea     +SUBI R30 , LOW ( - 70 )
00a1d8 4fff     +SBCI R31 , HIGH ( - 70 )
00a1d9 9001     +LD R0 , Z +
00a1da 9011     +LD R1 , Z +
00a1db 9161     +LD R22 , Z +
00a1dc 8170     +LD R23 , Z
00a1dd 01f0     +MOVW R30 , R0
                 	__GETD1SX 70
00a1de 940e e400 	CALL __PUTPARD1
                +
00a1e0 01fe     +MOVW R30 , R28
00a1e1 5be2     +SUBI R30 , LOW ( - 78 )
00a1e2 4fff     +SBCI R31 , HIGH ( - 78 )
00a1e3 9001     +LD R0 , Z +
00a1e4 9011     +LD R1 , Z +
00a1e5 9161     +LD R22 , Z +
00a1e6 8170     +LD R23 , Z
00a1e7 01f0     +MOVW R30 , R0
                 	__GETD1SX 78
00a1e8 940e c496 	CALL SUBOPT_0x50
00a1ea 940e c77e 	CALL SUBOPT_0xC2
00a1ec 940e e400 	CALL __PUTPARD1
00a1ee 940e c759 	CALL SUBOPT_0xBB
00a1f0 940e db67 	CALL SUBOPT_0x38A
                 ; 001A 007B         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a1f2 937f      	PUSH R23
00a1f3 936f      	PUSH R22
00a1f4 93ff      	PUSH R31
00a1f5 93ef      	PUSH R30
00a1f6 940e db8e 	CALL SUBOPT_0x38B
00a1f8 940e db97 	CALL SUBOPT_0x38C
00a1fa 91af      	POP  R26
00a1fb 91bf      	POP  R27
00a1fc 918f      	POP  R24
00a1fd 919f      	POP  R25
00a1fe 940e dba2 	CALL SUBOPT_0x38D
00a200 c0ee      	RJMP _0x340035
                 ; 001A 007C 
                 ; 001A 007D         // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 007E      }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 _0x340006:
00a201 940e db4c 	CALL SUBOPT_0x387
00a203 940e db55 	CALL SUBOPT_0x388
00a205 f418      	BRSH _0x34000B
00a206 940e dbaf 	CALL SUBOPT_0x38E
00a208 f408      	BRSH _0x34000C
                 _0x34000B:
00a209 c02c      	RJMP _0x34000A
                 _0x34000C:
                 ; 001A 007F         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0080         gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                +
00a20a 01fe     +MOVW R30 , R28
00a20b 5be6     +SUBI R30 , LOW ( - 74 )
00a20c 4fff     +SBCI R31 , HIGH ( - 74 )
00a20d 9001     +LD R0 , Z +
00a20e 9011     +LD R1 , Z +
00a20f 9161     +LD R22 , Z +
00a210 8170     +LD R23 , Z
00a211 01f0     +MOVW R30 , R0
                 	__GETD1SX 74
00a212 940e dbb7 	CALL SUBOPT_0x38F
00a214 9670      	ADIW R30,16
00a215 940e c5a7 	CALL SUBOPT_0x78
00a217 01fe      	MOVW R30,R28
00a218 5bea      	SUBI R30,LOW(-(70))
00a219 4fff      	SBCI R31,HIGH(-(70))
00a21a 9674      	ADIW R30,20
00a21b 940e c5a7 	CALL SUBOPT_0x78
00a21d 940e c7f0 	CALL SUBOPT_0xD1
00a21f 940e e400 	CALL __PUTPARD1
00a221 940e c783 	CALL SUBOPT_0xC3
00a223 940e e400 	CALL __PUTPARD1
00a225 940e cb54 	CALL SUBOPT_0x165
00a227 940e dbbd 	CALL SUBOPT_0x390
                 ; 001A 0081         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a229 937f      	PUSH R23
00a22a 936f      	PUSH R22
00a22b 93ff      	PUSH R31
00a22c 93ef      	PUSH R30
00a22d 940e dbdb 	CALL SUBOPT_0x391
00a22f 91af      	POP  R26
00a230 91bf      	POP  R27
00a231 918f      	POP  R24
00a232 919f      	POP  R25
00a233 940e dba2 	CALL SUBOPT_0x38D
00a235 c0b9      	RJMP _0x340035
                 ; 001A 0082 
                 ; 001A 0083         // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0084      }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 _0x34000A:
00a236 940e dbaf 	CALL SUBOPT_0x38E
00a238 f418      	BRSH _0x34000F
00a239 940e dbdd 	CALL SUBOPT_0x392
00a23b f408      	BRSH _0x340010
                 _0x34000F:
00a23c c030      	RJMP _0x34000E
                 _0x340010:
                 ; 001A 0085         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0086         gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                +
00a23d 01fe     +MOVW R30 , R28
00a23e 5aea     +SUBI R30 , LOW ( - 86 )
00a23f 4fff     +SBCI R31 , HIGH ( - 86 )
00a240 9001     +LD R0 , Z +
00a241 9011     +LD R1 , Z +
00a242 9161     +LD R22 , Z +
00a243 8170     +LD R23 , Z
00a244 01f0     +MOVW R30 , R0
                 	__GETD1SX 86
00a245 940e dbb7 	CALL SUBOPT_0x38F
00a247 967c      	ADIW R30,28
00a248 940e c5a7 	CALL SUBOPT_0x78
00a24a 01fe      	MOVW R30,R28
00a24b 5bea      	SUBI R30,LOW(-(70))
00a24c 4fff      	SBCI R31,HIGH(-(70))
00a24d 96b0      	ADIW R30,32
00a24e 940e c5a7 	CALL SUBOPT_0x78
00a250 940e c768 	CALL SUBOPT_0xBE
00a252 940e e400 	CALL __PUTPARD1
                +
00a254 a5ee     +LDD R30 , Y + 46
00a255 a5ff     +LDD R31 , Y + 46 + 1
00a256 a968     +LDD R22 , Y + 46 + 2
00a257 a979     +LDD R23 , Y + 46 + 3
                 	__GETD1S 46
00a258 940e e400 	CALL __PUTPARD1
                +
00a25a a9ee     +LDD R30 , Y + 54
00a25b a9ff     +LDD R31 , Y + 54 + 1
00a25c ad68     +LDD R22 , Y + 54 + 2
00a25d ad79     +LDD R23 , Y + 54 + 3
                 	__GETD1S 54
00a25e 940e db67 	CALL SUBOPT_0x38A
                 ; 001A 0087         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a260 937f      	PUSH R23
00a261 936f      	PUSH R22
00a262 93ff      	PUSH R31
00a263 93ef      	PUSH R30
00a264 940e dbdb 	CALL SUBOPT_0x391
00a266 91af      	POP  R26
00a267 91bf      	POP  R27
00a268 918f      	POP  R24
00a269 919f      	POP  R25
00a26a 940e dba2 	CALL SUBOPT_0x38D
00a26c c082      	RJMP _0x340035
                 ; 001A 0088 
                 ; 001A 0089         // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 008A      }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 _0x34000E:
00a26d 940e dbdd 	CALL SUBOPT_0x392
00a26f f418      	BRSH _0x340013
00a270 940e dbe5 	CALL SUBOPT_0x393
00a272 f408      	BRSH _0x340014
                 _0x340013:
00a273 c033      	RJMP _0x340012
                 _0x340014:
                 ; 001A 008B         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 008C         gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                +
00a274 01fe     +MOVW R30 , R28
00a275 59ee     +SUBI R30 , LOW ( - 98 )
00a276 4fff     +SBCI R31 , HIGH ( - 98 )
00a277 9001     +LD R0 , Z +
00a278 9011     +LD R1 , Z +
00a279 9161     +LD R22 , Z +
00a27a 8170     +LD R23 , Z
00a27b 01f0     +MOVW R30 , R0
                 	__GETD1SX 98
00a27c 940e dbb7 	CALL SUBOPT_0x38F
00a27e 96b8      	ADIW R30,40
00a27f 940e c5a7 	CALL SUBOPT_0x78
00a281 01fe      	MOVW R30,R28
00a282 5bea      	SUBI R30,LOW(-(70))
00a283 4fff      	SBCI R31,HIGH(-(70))
00a284 96bc      	ADIW R30,44
00a285 940e c5a7 	CALL SUBOPT_0x78
                +
00a287 a9ea     +LDD R30 , Y + 50
00a288 a9fb     +LDD R31 , Y + 50 + 1
00a289 a96c     +LDD R22 , Y + 50 + 2
00a28a a97d     +LDD R23 , Y + 50 + 3
                 	__GETD1S 50
00a28b 940e e400 	CALL __PUTPARD1
                +
00a28d adea     +LDD R30 , Y + 58
00a28e adfb     +LDD R31 , Y + 58 + 1
00a28f ad6c     +LDD R22 , Y + 58 + 2
00a290 ad7d     +LDD R23 , Y + 58 + 3
                 	__GETD1S 58
00a291 940e e400 	CALL __PUTPARD1
00a293 01fe      	MOVW R30,R28
00a294 96fa      	ADIW R30,58
00a295 9638      	ADIW R30,8
00a296 940e c5a7 	CALL SUBOPT_0x78
00a298 940e dbbd 	CALL SUBOPT_0x390
                 ; 001A 008D         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a29a 937f      	PUSH R23
00a29b 936f      	PUSH R22
00a29c 93ff      	PUSH R31
00a29d 93ef      	PUSH R30
00a29e 940e dbdb 	CALL SUBOPT_0x391
00a2a0 91af      	POP  R26
00a2a1 91bf      	POP  R27
00a2a2 918f      	POP  R24
00a2a3 919f      	POP  R25
00a2a4 940e dba2 	CALL SUBOPT_0x38D
00a2a6 c048      	RJMP _0x340035
                 ; 001A 008E 
                 ; 001A 008F         // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0090      }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.504)) ){        //-1.454 + 50.0   | 50 = +compencess
                 _0x340012:
00a2a7 940e dbe5 	CALL SUBOPT_0x393
00a2a9 f428      	BRSH _0x340017
00a2aa 940e db4c 	CALL SUBOPT_0x387
00a2ac 940e d023 	CALL SUBOPT_0x215
00a2ae f408      	BRSH _0x340018
                 _0x340017:
00a2af c02e      	RJMP _0x340016
                 _0x340018:
                 ; 001A 0091         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0092         gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                +
00a2b0 01fe     +MOVW R30 , R28
00a2b1 59e2     +SUBI R30 , LOW ( - 110 )
00a2b2 4fff     +SBCI R31 , HIGH ( - 110 )
00a2b3 9001     +LD R0 , Z +
00a2b4 9011     +LD R1 , Z +
00a2b5 9161     +LD R22 , Z +
00a2b6 8170     +LD R23 , Z
00a2b7 01f0     +MOVW R30 , R0
                 	__GETD1SX 110
00a2b8 940e dbb7 	CALL SUBOPT_0x38F
00a2ba 96f4      	ADIW R30,52
00a2bb 940e c5a7 	CALL SUBOPT_0x78
00a2bd 01fe      	MOVW R30,R28
00a2be 5bea      	SUBI R30,LOW(-(70))
00a2bf 4fff      	SBCI R31,HIGH(-(70))
00a2c0 96f8      	ADIW R30,56
00a2c1 940e c5a7 	CALL SUBOPT_0x78
00a2c3 940e db5c 	CALL SUBOPT_0x389
00a2c5 01fe      	MOVW R30,R28
00a2c6 9672      	ADIW R30,18
00a2c7 96f4      	ADIW R30,52
00a2c8 940e c5a7 	CALL SUBOPT_0x78
00a2ca 01fe      	MOVW R30,R28
00a2cb 9676      	ADIW R30,22
00a2cc 96f8      	ADIW R30,56
00a2cd 940e c5a7 	CALL SUBOPT_0x78
00a2cf 940e dbbd 	CALL SUBOPT_0x390
                 ; 001A 0093         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a2d1 937f      	PUSH R23
00a2d2 936f      	PUSH R22
00a2d3 93ff      	PUSH R31
00a2d4 93ef      	PUSH R30
00a2d5 940e dbdb 	CALL SUBOPT_0x391
00a2d7 91af      	POP  R26
00a2d8 91bf      	POP  R27
00a2d9 918f      	POP  R24
00a2da 919f      	POP  R25
00a2db 940e dba2 	CALL SUBOPT_0x38D
00a2dd c011      	RJMP _0x340035
                 ; 001A 0094 
                 ; 001A 0095          //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0096      }
                 ; 001A 0097      else if(viVoltUpLevel < (-1.504)){
                 _0x340016:
00a2de 940e db4c 	CALL SUBOPT_0x387
00a2e0 940e d023 	CALL SUBOPT_0x215
00a2e2 f498      	BRSH _0x34001A
                 ; 001A 0098         ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 _0x340034:
                +
00a2e3 01de     +MOVW R26 , R28
00a2e4 54a6     +SUBI R26 , LOW ( - 186 )
00a2e5 4fbf     +SBCI R27 , HIGH ( - 186 )
00a2e6 900d     +LD R0 , X +
00a2e7 901d     +LD R1 , X +
00a2e8 918d     +LD R24 , X +
00a2e9 919c     +LD R25 , X
00a2ea 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
00a2eb 940e dbed 	CALL SUBOPT_0x394
00a2ed 940e e1ef 	CALL __DIVF21
                 _0x340035:
                +
00a2ef 01de     +MOVW R26 , R28
00a2f0 54aa     +SUBI R26 , LOW ( - 182 )
00a2f1 4fbf     +SBCI R27 , HIGH ( - 182 )
00a2f2 93ed     +ST X + , R30
00a2f3 93fd     +ST X + , R31
00a2f4 936d     +ST X + , R22
00a2f5 937c     +ST X , R23
                 	__PUTD1SX 182
                 ; 001A 0099          //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 009A      }
                 ; 001A 009B      //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 009C      return ivTempValue;
                 _0x34001A:
                +
00a2f6 01fe     +MOVW R30 , R28
00a2f7 54ea     +SUBI R30 , LOW ( - 182 )
00a2f8 4fff     +SBCI R31 , HIGH ( - 182 )
00a2f9 9001     +LD R0 , Z +
00a2fa 9011     +LD R1 , Z +
00a2fb 9161     +LD R22 , Z +
00a2fc 8170     +LD R23 , Z
00a2fd 01f0     +MOVW R30 , R0
                 	__GETD1SX 182
00a2fe 8119      	LDD  R17,Y+1
00a2ff 8108      	LDD  R16,Y+0
00a300 96ef      	ADIW R28,63
00a301 96ef      	ADIW R28,63
00a302 96ef      	ADIW R28,63
00a303 962f      	ADIW R28,15
00a304 9508      	RET
                 ; 001A 009D }
                 ;
                 ;float iAD595ADCToVolt(unsigned long viADC_p,float viADCLoop_p){            //Volt Uplevel
                 ; 001A 009F float iAD595ADCToVolt(unsigned long viADC_p,float viADCLoop_p){
                 _iAD595ADCToVolt:
                 ; 001A 00A0      float    viADCSmooth =  (float)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 00A1      float  viADCToVolt = 0.0;
                 ; 001A 00A2      //const float  viZeroSet   = 1.68;
                 ; 001A 00A3      const float  viZeroSet   = 1.667;
                 ; 001A 00A4      float viVoltUpLevel = 0.0;
                 ; 001A 00A5      float ivVoltValue = 0.0;
                 ; 001A 00A6 
                 ; 001A 00A7      viADCToVolt = (float)((viADCSmooth/1024.0)*3.30);          //- 0  +
00a305 940e e405 	CALL __PUTPARD2
00a307 9764      	SBIW R28,20
00a308 e180      	LDI  R24,16
00a309 e0a0      	LDI  R26,LOW(0)
00a30a e0b0      	LDI  R27,HIGH(0)
00a30b eae2      	LDI  R30,LOW(_0x34001B*2)
00a30c e6f9      	LDI  R31,HIGH(_0x34001B*2)
00a30d e060      	LDI  R22,BYTE3(_0x34001B*2)
00a30e 940e e483 	CALL __INITLOCB
                 ;	viADC_p -> Y+24
                 ;	viADCLoop_p -> Y+20
                 ;	viADCSmooth -> Y+16
                 ;	viADCToVolt -> Y+12
                 ;	viZeroSet -> Y+8
                 ;	viVoltUpLevel -> Y+4
                 ;	ivVoltValue -> Y+0
00a310 940e c827 	CALL SUBOPT_0xDC
00a312 940e d114 	CALL SUBOPT_0x232
00a314 940e e412 	CALL __CDF2U
00a316 940e e1ef 	CALL __DIVF21
00a318 940e dbf4 	CALL SUBOPT_0x395
00a31a 940e db30 	CALL SUBOPT_0x385
00a31c 940e c890 	CALL SUBOPT_0xEC
                 ; 001A 00A8      viVoltUpLevel = viADCToVolt;
00a31e 940e c70e 	CALL SUBOPT_0xAD
                 ; 001A 00A9      //viVoltUpLevel = viADCToVolt - viZeroSet;
                 ; 001A 00AA 
                 ; 001A 00AB 
                 ; 001A 00AC      return viVoltUpLevel;
00a320 966c      	ADIW R28,28
00a321 9508      	RET
                 ; 001A 00AD }
                 ;
                 ;float iAD595VoltToTemp(float viVolt_arg){
                 ; 001A 00AF float iAD595VoltToTemp(float viVolt_arg){
                 _iAD595VoltToTemp:
                 ; 001A 00B0      //int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 00B1      float  viADCToVolt = 0.0;
                 ; 001A 00B2      //const float  viZeroSet   = 1.68;
                 ; 001A 00B3      const float  viZeroSet   = 1.667;
                 ; 001A 00B4      float viVoltUpLevel = 0.0;
                 ; 001A 00B5      float ivTempValue = 0.0;
                 ; 001A 00B6      float factorA = 0.0;
                 ; 001A 00B7      float factorB = 0.0;
                 ; 001A 00B8      float factorC = 0.0;
                 ; 001A 00B9 
                 ; 001A 00BA      /////////range 1 Temp C(-10 to -100)
                 ; 001A 00BB      float viVoltPoint1_1 = -0.094;
                 ; 001A 00BC      float viVoltPoint2_1 = -0.552;
                 ; 001A 00BD      float viVoltPoint3_1 = -0.876;
                 ; 001A 00BE      float viTempOutPoint1_1 = -10.0;
                 ; 001A 00BF      float viTempOutPoint2_1 = -60.0;
                 ; 001A 00C0      float viTempOutPoint3_1 = -100.0;
                 ; 001A 00C1 
                 ; 001A 00C2      /////////range 2 Temp C(-100 to -200)
                 ; 001A 00C3      float viVoltPoint1_2 = -0.876;
                 ; 001A 00C4      float viVoltPoint2_2 = -1.269;
                 ; 001A 00C5      float viVoltPoint3_2 = -1.454;
                 ; 001A 00C6      float viTempOutPoint1_2 = -100.0;
                 ; 001A 00C7      float viTempOutPoint2_2 = -160.0;
                 ; 001A 00C8      float viTempOutPoint3_2 = -200.0;
                 ; 001A 00C9 
                 ; 001A 00CA      const float viVoltPointTable[5][3]  = {
                 ; 001A 00CB             {-0.094,-0.189,-0.375},           //-10 to -40
                 ; 001A 00CC             {-0.375,-0.552,-0.719},           //-40 to -80
                 ; 001A 00CD             {-0.719,-0.876,-1.021},           //-80 to -120
                 ; 001A 00CE             {-1.021,-1.152,-1.269},           //-120 to -160
                 ; 001A 00CF             {-1.269,-1.370,-1.454}            //-160 to -200
                 ; 001A 00D0      };
                 ; 001A 00D1 
                 ; 001A 00D2      const float viTempOutPointTable[5][3]  = {
                 ; 001A 00D3             {-10.0,-20.0,-40.0},           //-10 to -40
                 ; 001A 00D4             {-40.0,-60.0,-80.0},           //-40 to -80
                 ; 001A 00D5             {-80.0,-100.0,-120.0},           //-80 to -120
                 ; 001A 00D6             {-120.0,-140.0,-160.0},           //-120 to -160
                 ; 001A 00D7             {-160.0,-180.0,-200.0}            //-160 to -200
                 ; 001A 00D8      };
                 ; 001A 00D9 
                 ; 001A 00DA      //viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
                 ; 001A 00DB      viVoltUpLevel = viVolt_arg;
00a322 940e e405 	CALL __PUTPARD2
00a324 940e db28 	CALL SUBOPT_0x384
00a326 ebe2      	LDI  R30,LOW(_0x34001C*2)
00a327 e6f9      	LDI  R31,HIGH(_0x34001C*2)
00a328 e060      	LDI  R22,BYTE3(_0x34001C*2)
00a329 940e e483 	CALL __INITLOCB
                 ;	viVolt_arg -> Y+196
                 ;	viADCToVolt -> Y+192
                 ;	viZeroSet -> Y+188
                 ;	viVoltUpLevel -> Y+184
                 ;	ivTempValue -> Y+180
                 ;	factorA -> Y+176
                 ;	factorB -> Y+172
                 ;	factorC -> Y+168
                 ;	viVoltPoint1_1 -> Y+164
                 ;	viVoltPoint2_1 -> Y+160
                 ;	viVoltPoint3_1 -> Y+156
                 ;	viTempOutPoint1_1 -> Y+152
                 ;	viTempOutPoint2_1 -> Y+148
                 ;	viTempOutPoint3_1 -> Y+144
                 ;	viVoltPoint1_2 -> Y+140
                 ;	viVoltPoint2_2 -> Y+136
                 ;	viVoltPoint3_2 -> Y+132
                 ;	viTempOutPoint1_2 -> Y+128
                 ;	viTempOutPoint2_2 -> Y+124
                 ;	viTempOutPoint3_2 -> Y+120
                 ;	viVoltPointTable -> Y+60
                 ;	viTempOutPointTable -> Y+0
                +
00a32b 01fe     +MOVW R30 , R28
00a32c 53ec     +SUBI R30 , LOW ( - 196 )
00a32d 4fff     +SBCI R31 , HIGH ( - 196 )
00a32e 9001     +LD R0 , Z +
00a32f 9011     +LD R1 , Z +
00a330 9161     +LD R22 , Z +
00a331 8170     +LD R23 , Z
00a332 01f0     +MOVW R30 , R0
                 	__GETD1SX 196
                +
00a333 01de     +MOVW R26 , R28
00a334 54a8     +SUBI R26 , LOW ( - 184 )
00a335 4fbf     +SBCI R27 , HIGH ( - 184 )
00a336 93ed     +ST X + , R30
00a337 93fd     +ST X + , R31
00a338 936d     +ST X + , R22
00a339 937c     +ST X , R23
                 	__PUTD1SX 184
                 ; 001A 00DC 
                 ; 001A 00DD 
                 ; 001A 00DE      if(viVoltUpLevel >= (-0.094)){
00a33a 940e dbf7 	CALL SUBOPT_0x396
00a33c f008      	BRLO _0x34001D
                 ; 001A 00DF           ivTempValue = (viVoltUpLevel*1000) / 10.0;
00a33d c10d      	RJMP _0x340036
                 ; 001A 00E0         //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00E1      }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 _0x34001D:
00a33e 940e dbf7 	CALL SUBOPT_0x396
00a340 f428      	BRSH _0x340020
00a341 940e dc06 	CALL SUBOPT_0x397
00a343 940e db55 	CALL SUBOPT_0x388
00a345 f408      	BRSH _0x340021
                 _0x340020:
00a346 c02f      	RJMP _0x34001F
                 _0x340021:
                 ; 001A 00E2 
                 ; 001A 00E3         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00E4         gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
00a347 940e d0a3 	CALL SUBOPT_0x225
00a349 940e e400 	CALL __PUTPARD1
                +
00a34b 01fe     +MOVW R30 , R28
00a34c 5bec     +SUBI R30 , LOW ( - 68 )
00a34d 4fff     +SBCI R31 , HIGH ( - 68 )
00a34e 9001     +LD R0 , Z +
00a34f 9011     +LD R1 , Z +
00a350 9161     +LD R22 , Z +
00a351 8170     +LD R23 , Z
00a352 01f0     +MOVW R30 , R0
                 	__GETD1SX 68
00a353 940e e400 	CALL __PUTPARD1
                +
00a355 01fe     +MOVW R30 , R28
00a356 5be4     +SUBI R30 , LOW ( - 76 )
00a357 4fff     +SBCI R31 , HIGH ( - 76 )
00a358 9001     +LD R0 , Z +
00a359 9011     +LD R1 , Z +
00a35a 9161     +LD R22 , Z +
00a35b 8170     +LD R23 , Z
00a35c 01f0     +MOVW R30 , R0
                 	__GETD1SX 76
00a35d 940e c62d 	CALL SUBOPT_0x8D
00a35f 940e e400 	CALL __PUTPARD1
00a361 940e c827 	CALL SUBOPT_0xDC
00a363 940e da8d 	CALL SUBOPT_0x36A
00a365 940e dc0f 	CALL SUBOPT_0x398
                 ; 001A 00E5         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a367 937f      	PUSH R23
00a368 936f      	PUSH R22
00a369 93ff      	PUSH R31
00a36a 93ef      	PUSH R30
00a36b 940e dc36 	CALL SUBOPT_0x399
00a36d 940e dc3f 	CALL SUBOPT_0x39A
00a36f 91af      	POP  R26
00a370 91bf      	POP  R27
00a371 918f      	POP  R24
00a372 919f      	POP  R25
00a373 940e dc4a 	CALL SUBOPT_0x39B
00a375 c0e1      	RJMP _0x340037
                 ; 001A 00E6 
                 ; 001A 00E7         // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00E8      }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 _0x34001F:
00a376 940e dc06 	CALL SUBOPT_0x397
00a378 940e db55 	CALL SUBOPT_0x388
00a37a f418      	BRSH _0x340024
00a37b 940e dc57 	CALL SUBOPT_0x39C
00a37d f408      	BRSH _0x340025
                 _0x340024:
00a37e c023      	RJMP _0x340023
                 _0x340025:
                 ; 001A 00E9         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00EA         gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
00a37f 940e d098 	CALL SUBOPT_0x224
00a381 01fe      	MOVW R30,R28
00a382 5ce0      	SUBI R30,LOW(-(64))
00a383 4fff      	SBCI R31,HIGH(-(64))
00a384 9670      	ADIW R30,16
00a385 940e c5a7 	CALL SUBOPT_0x78
00a387 01fe      	MOVW R30,R28
00a388 5bec      	SUBI R30,LOW(-(68))
00a389 4fff      	SBCI R31,HIGH(-(68))
00a38a 9674      	ADIW R30,20
00a38b 940e c5a7 	CALL SUBOPT_0x78
00a38d 940e c8ab 	CALL SUBOPT_0xF2
00a38f 940e c8af 	CALL SUBOPT_0xF3
00a391 940e c8b4 	CALL SUBOPT_0xF4
00a393 940e dc5f 	CALL SUBOPT_0x39D
                 ; 001A 00EB         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a395 937f      	PUSH R23
00a396 936f      	PUSH R22
00a397 93ff      	PUSH R31
00a398 93ef      	PUSH R30
00a399 940e dc7d 	CALL SUBOPT_0x39E
00a39b 91af      	POP  R26
00a39c 91bf      	POP  R27
00a39d 918f      	POP  R24
00a39e 919f      	POP  R25
00a39f 940e dc4a 	CALL SUBOPT_0x39B
00a3a1 c0b5      	RJMP _0x340037
                 ; 001A 00EC 
                 ; 001A 00ED         // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00EE      }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 _0x340023:
00a3a2 940e dc57 	CALL SUBOPT_0x39C
00a3a4 f418      	BRSH _0x340028
00a3a5 940e dc7f 	CALL SUBOPT_0x39F
00a3a7 f408      	BRSH _0x340029
                 _0x340028:
00a3a8 c032      	RJMP _0x340027
                 _0x340029:
                 ; 001A 00EF         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00F0         gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                +
00a3a9 01fe     +MOVW R30 , R28
00a3aa 5aec     +SUBI R30 , LOW ( - 84 )
00a3ab 4fff     +SBCI R31 , HIGH ( - 84 )
00a3ac 9001     +LD R0 , Z +
00a3ad 9011     +LD R1 , Z +
00a3ae 9161     +LD R22 , Z +
00a3af 8170     +LD R23 , Z
00a3b0 01f0     +MOVW R30 , R0
                 	__GETD1SX 84
00a3b1 940e dc87 	CALL SUBOPT_0x3A0
00a3b3 967c      	ADIW R30,28
00a3b4 940e c5a7 	CALL SUBOPT_0x78
00a3b6 01fe      	MOVW R30,R28
00a3b7 5bec      	SUBI R30,LOW(-(68))
00a3b8 4fff      	SBCI R31,HIGH(-(68))
00a3b9 96b0      	ADIW R30,32
00a3ba 940e c5a7 	CALL SUBOPT_0x78
                +
00a3bc a1ec     +LDD R30 , Y + 36
00a3bd a1fd     +LDD R31 , Y + 36 + 1
00a3be a16e     +LDD R22 , Y + 36 + 2
00a3bf a17f     +LDD R23 , Y + 36 + 3
                 	__GETD1S 36
00a3c0 940e e400 	CALL __PUTPARD1
                +
00a3c2 a5ec     +LDD R30 , Y + 44
00a3c3 a5fd     +LDD R31 , Y + 44 + 1
00a3c4 a56e     +LDD R22 , Y + 44 + 2
00a3c5 a57f     +LDD R23 , Y + 44 + 3
                 	__GETD1S 44
00a3c6 940e e400 	CALL __PUTPARD1
                +
00a3c8 a9ec     +LDD R30 , Y + 52
00a3c9 a9fd     +LDD R31 , Y + 52 + 1
00a3ca a96e     +LDD R22 , Y + 52 + 2
00a3cb a97f     +LDD R23 , Y + 52 + 3
                 	__GETD1S 52
00a3cc 940e dc0f 	CALL SUBOPT_0x398
                 ; 001A 00F1         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a3ce 937f      	PUSH R23
00a3cf 936f      	PUSH R22
00a3d0 93ff      	PUSH R31
00a3d1 93ef      	PUSH R30
00a3d2 940e dc7d 	CALL SUBOPT_0x39E
00a3d4 91af      	POP  R26
00a3d5 91bf      	POP  R27
00a3d6 918f      	POP  R24
00a3d7 919f      	POP  R25
00a3d8 940e dc4a 	CALL SUBOPT_0x39B
00a3da c07c      	RJMP _0x340037
                 ; 001A 00F2 
                 ; 001A 00F3         // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00F4      }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 _0x340027:
00a3db 940e dc7f 	CALL SUBOPT_0x39F
00a3dd f418      	BRSH _0x34002C
00a3de 940e dc8d 	CALL SUBOPT_0x3A1
00a3e0 f408      	BRSH _0x34002D
                 _0x34002C:
00a3e1 c02b      	RJMP _0x34002B
                 _0x34002D:
                 ; 001A 00F5         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00F6         gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                +
00a3e2 01fe     +MOVW R30 , R28
00a3e3 5ae0     +SUBI R30 , LOW ( - 96 )
00a3e4 4fff     +SBCI R31 , HIGH ( - 96 )
00a3e5 9001     +LD R0 , Z +
00a3e6 9011     +LD R1 , Z +
00a3e7 9161     +LD R22 , Z +
00a3e8 8170     +LD R23 , Z
00a3e9 01f0     +MOVW R30 , R0
                 	__GETD1SX 96
00a3ea 940e dc87 	CALL SUBOPT_0x3A0
00a3ec 96b8      	ADIW R30,40
00a3ed 940e c5a7 	CALL SUBOPT_0x78
00a3ef 01fe      	MOVW R30,R28
00a3f0 5bec      	SUBI R30,LOW(-(68))
00a3f1 4fff      	SBCI R31,HIGH(-(68))
00a3f2 96bc      	ADIW R30,44
00a3f3 940e c5a7 	CALL SUBOPT_0x78
00a3f5 940e c8bd 	CALL SUBOPT_0xF5
00a3f7 940e d10d 	CALL SUBOPT_0x231
00a3f9 01fe      	MOVW R30,R28
00a3fa 96f8      	ADIW R30,56
00a3fb 9638      	ADIW R30,8
00a3fc 940e c5a7 	CALL SUBOPT_0x78
00a3fe 940e dc5f 	CALL SUBOPT_0x39D
                 ; 001A 00F7         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a400 937f      	PUSH R23
00a401 936f      	PUSH R22
00a402 93ff      	PUSH R31
00a403 93ef      	PUSH R30
00a404 940e dc7d 	CALL SUBOPT_0x39E
00a406 91af      	POP  R26
00a407 91bf      	POP  R27
00a408 918f      	POP  R24
00a409 919f      	POP  R25
00a40a 940e dc4a 	CALL SUBOPT_0x39B
00a40c c04a      	RJMP _0x340037
                 ; 001A 00F8 
                 ; 001A 00F9         // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 00FA      }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.504)) ){        //-1.454 + 50.0   | 50 = +compencess
                 _0x34002B:
00a40d 940e dc8d 	CALL SUBOPT_0x3A1
00a40f f428      	BRSH _0x340030
00a410 940e dc06 	CALL SUBOPT_0x397
00a412 940e d023 	CALL SUBOPT_0x215
00a414 f408      	BRSH _0x340031
                 _0x340030:
00a415 c030      	RJMP _0x34002F
                 _0x340031:
                 ; 001A 00FB         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 00FC         gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                +
00a416 01fe     +MOVW R30 , R28
00a417 59e4     +SUBI R30 , LOW ( - 108 )
00a418 4fff     +SBCI R31 , HIGH ( - 108 )
00a419 9001     +LD R0 , Z +
00a41a 9011     +LD R1 , Z +
00a41b 9161     +LD R22 , Z +
00a41c 8170     +LD R23 , Z
00a41d 01f0     +MOVW R30 , R0
                 	__GETD1SX 108
00a41e 940e dc87 	CALL SUBOPT_0x3A0
00a420 96f4      	ADIW R30,52
00a421 940e c5a7 	CALL SUBOPT_0x78
00a423 01fe      	MOVW R30,R28
00a424 5bec      	SUBI R30,LOW(-(68))
00a425 4fff      	SBCI R31,HIGH(-(68))
00a426 96f8      	ADIW R30,56
00a427 940e c5a7 	CALL SUBOPT_0x78
00a429 940e d0a3 	CALL SUBOPT_0x225
00a42b 940e e400 	CALL __PUTPARD1
00a42d 01fe      	MOVW R30,R28
00a42e 9670      	ADIW R30,16
00a42f 96f4      	ADIW R30,52
00a430 940e c5a7 	CALL SUBOPT_0x78
00a432 01fe      	MOVW R30,R28
00a433 9674      	ADIW R30,20
00a434 96f8      	ADIW R30,56
00a435 940e c5a7 	CALL SUBOPT_0x78
00a437 940e dc5f 	CALL SUBOPT_0x39D
                 ; 001A 00FD         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a439 937f      	PUSH R23
00a43a 936f      	PUSH R22
00a43b 93ff      	PUSH R31
00a43c 93ef      	PUSH R30
00a43d 940e dc7d 	CALL SUBOPT_0x39E
00a43f 91af      	POP  R26
00a440 91bf      	POP  R27
00a441 918f      	POP  R24
00a442 919f      	POP  R25
00a443 940e dc4a 	CALL SUBOPT_0x39B
00a445 c011      	RJMP _0x340037
                 ; 001A 00FE 
                 ; 001A 00FF          //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0100      }
                 ; 001A 0101      else if(viVoltUpLevel < (-1.504)){
                 _0x34002F:
00a446 940e dc06 	CALL SUBOPT_0x397
00a448 940e d023 	CALL SUBOPT_0x215
00a44a f498      	BRSH _0x340033
                 ; 001A 0102         ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 _0x340036:
                +
00a44b 01de     +MOVW R26 , R28
00a44c 54a8     +SUBI R26 , LOW ( - 184 )
00a44d 4fbf     +SBCI R27 , HIGH ( - 184 )
00a44e 900d     +LD R0 , X +
00a44f 901d     +LD R1 , X +
00a450 918d     +LD R24 , X +
00a451 919c     +LD R25 , X
00a452 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
00a453 940e dbed 	CALL SUBOPT_0x394
00a455 940e e1ef 	CALL __DIVF21
                 _0x340037:
                +
00a457 01de     +MOVW R26 , R28
00a458 54ac     +SUBI R26 , LOW ( - 180 )
00a459 4fbf     +SBCI R27 , HIGH ( - 180 )
00a45a 93ed     +ST X + , R30
00a45b 93fd     +ST X + , R31
00a45c 936d     +ST X + , R22
00a45d 937c     +ST X , R23
                 	__PUTD1SX 180
                 ; 001A 0103          //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0104      }
                 ; 001A 0105      //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 0106      return ivTempValue;
                 _0x340033:
                +
00a45e 01fe     +MOVW R30 , R28
00a45f 54ec     +SUBI R30 , LOW ( - 180 )
00a460 4fff     +SBCI R31 , HIGH ( - 180 )
00a461 9001     +LD R0 , Z +
00a462 9011     +LD R1 , Z +
00a463 9161     +LD R22 , Z +
00a464 8170     +LD R23 , Z
00a465 01f0     +MOVW R30 , R0
                 	__GETD1SX 180
00a466 96ef      	ADIW R28,63
00a467 96ef      	ADIW R28,63
00a468 96ef      	ADIW R28,63
00a469 962b      	ADIW R28,11
00a46a 9508      	RET
                 ; 001A 0107 }
                 ;#include <stdlib.h>
                 ;#include "gaussianAD595.h"
                 ;#include "debug.h"
                 ;
                 
                 	.CSEG
                 _fabs:
00a46b 940e e405 	CALL __PUTPARD2
00a46d 91e9          ld   r30,y+
00a46e 91f9          ld   r31,y+
00a46f 9169          ld   r22,y+
00a470 9179          ld   r23,y+
00a471 777f          cbr  r23,0x80
00a472 9508          ret
                 _atoi:
00a473 93ba      	ST   -Y,R27
00a474 93aa      	ST   -Y,R26
00a475 81b9         	ldd  r27,y+1
00a476 81a8         	ld   r26,y
                 __atoi0:
00a477 91ec         	ld   r30,x
00a478 2f8a              mov  r24,r26
00a479 2fae      	MOV  R26,R30
00a47a 940e c1f6 	CALL _isspace
00a47c 2fa8              mov  r26,r24
00a47d 23ee         	tst  r30
00a47e f011         	breq __atoi1
00a47f 9611         	adiw r26,1
00a480 cff6         	rjmp __atoi0
                 __atoi1:
00a481 94e8         	clt
00a482 91ec         	ld   r30,x
00a483 32ed         	cpi  r30,'-'
00a484 f411         	brne __atoi2
00a485 9468         	set
00a486 c002         	rjmp __atoi3
                 __atoi2:
00a487 32eb         	cpi  r30,'+'
00a488 f409         	brne __atoi4
                 __atoi3:
00a489 9611         	adiw r26,1
                 __atoi4:
00a48a 2766         	clr  r22
00a48b 2777         	clr  r23
                 __atoi5:
00a48c 91ec         	ld   r30,x
00a48d 2f8a              mov  r24,r26
00a48e 2fae      	MOV  R26,R30
00a48f 940e c1e4 	CALL _isdigit
00a491 2fa8              mov  r26,r24
00a492 23ee         	tst  r30
00a493 f079         	breq __atoi6
00a494 01fb         	movw r30,r22
00a495 0f66         	lsl  r22
00a496 1f77         	rol  r23
00a497 0f66         	lsl  r22
00a498 1f77         	rol  r23
00a499 0f6e         	add  r22,r30
00a49a 1f7f         	adc  r23,r31
00a49b 0f66         	lsl  r22
00a49c 1f77         	rol  r23
00a49d 91ed         	ld   r30,x+
00a49e 27ff         	clr  r31
00a49f 53e0         	subi r30,'0'
00a4a0 0f6e         	add  r22,r30
00a4a1 1f7f         	adc  r23,r31
00a4a2 cfe9         	rjmp __atoi5
                 __atoi6:
00a4a3 01fb         	movw r30,r22
00a4a4 f41e         	brtc __atoi7
00a4a5 95e0         	com  r30
00a4a6 95f0         	com  r31
00a4a7 9631         	adiw r30,1
                 __atoi7:
00a4a8 9622         	adiw r28,2
00a4a9 9508         	ret
                 _atol:
00a4aa 93ba      	ST   -Y,R27
00a4ab 93aa      	ST   -Y,R26
00a4ac 81b9          ldd  r27,y+1
00a4ad 81a8          ld   r26,y
                 __atol0:
00a4ae 91ec          ld   r30,x
00a4af 93af          push r26
00a4b0 2fae      	MOV  R26,R30
00a4b1 940e c1f6 	CALL _isspace
00a4b3 91af          pop  r26
00a4b4 23ee          tst  r30
00a4b5 f011          breq __atol1
00a4b6 9611          adiw r26,1
00a4b7 cff6          rjmp __atol0
                 __atol1:
00a4b8 94e8          clt
00a4b9 91ec          ld   r30,x
00a4ba 32ed          cpi  r30,'-'
00a4bb f411          brne __atol2
00a4bc 9468          set
00a4bd c002          rjmp __atol3
                 __atol2:
00a4be 32eb          cpi  r30,'+'
00a4bf f409          brne __atol4
                 __atol3:
00a4c0 9611          adiw r26,1
                 __atol4:
00a4c1 2400          clr  r0
00a4c2 2411          clr  r1
00a4c3 2788          clr  r24
00a4c4 2799          clr  r25
                 __atol5:
00a4c5 91ec          ld   r30,x
00a4c6 93af          push r26
00a4c7 2fae      	MOV  R26,R30
00a4c8 940e c1e4 	CALL _isdigit
00a4ca 91af          pop  r26
00a4cb 23ee          tst  r30
00a4cc f089          breq __atol6
00a4cd 01f0          movw r30,r0
00a4ce 01bc          movw r22,r24
00a4cf d01b          rcall __atol8
00a4d0 d01a          rcall __atol8
00a4d1 0e0e          add  r0,r30
00a4d2 1e1f          adc  r1,r31
00a4d3 1f86          adc  r24,r22
00a4d4 1f97          adc  r25,r23
00a4d5 d015          rcall __atol8
00a4d6 91ed          ld   r30,x+
00a4d7 27ff          clr  r31
00a4d8 53e0          subi r30,'0'
00a4d9 0e0e          add  r0,r30
00a4da 1e1f          adc  r1,r31
00a4db 1f8f          adc  r24,r31
00a4dc 1f9f          adc  r25,r31
00a4dd cfe7          rjmp __atol5
                 __atol6:
00a4de 01f0          movw r30,r0
00a4df 01bc          movw r22,r24
00a4e0 f446          brtc __atol7
00a4e1 95e0          com  r30
00a4e2 95f0          com  r31
00a4e3 9560          com  r22
00a4e4 9570          com  r23
00a4e5 2788          clr  r24
00a4e6 9631          adiw r30,1
00a4e7 1f68          adc  r22,r24
00a4e8 1f78          adc  r23,r24
                 __atol7:
00a4e9 9622          adiw r28,2
00a4ea 9508          ret
                 
                 __atol8:
00a4eb 0c00          lsl  r0
00a4ec 1c11          rol  r1
00a4ed 1f88          rol  r24
00a4ee 1f99          rol  r25
00a4ef 9508          ret
                 _ftoa:
00a4f0 93ba      	ST   -Y,R27
00a4f1 93aa      	ST   -Y,R26
00a4f2 9724      	SBIW R28,4
00a4f3 940e d1ee 	CALL SUBOPT_0x253
00a4f5 e3ef      	LDI  R30,LOW(63)
00a4f6 83eb      	STD  Y+3,R30
00a4f7 931a      	ST   -Y,R17
00a4f8 930a      	ST   -Y,R16
00a4f9 85eb      	LDD  R30,Y+11
00a4fa 85fc      	LDD  R31,Y+11+1
00a4fb 3fef      	CPI  R30,LOW(0xFFFF)
00a4fc efaf      	LDI  R26,HIGH(0xFFFF)
00a4fd 07fa      	CPC  R31,R26
00a4fe f449      	BRNE _0x200000D
00a4ff 940e cb1f 	CALL SUBOPT_0x15C
                +
00a501 e7a8     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00a502 e6ba     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
00a503 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
00a504 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
00a505 940e a7f6 	CALL _strcpyf
00a507 c0a1      	RJMP _0x20E002C
                 _0x200000D:
00a508 3fef      	CPI  R30,LOW(0x7FFF)
00a509 e7af      	LDI  R26,HIGH(0x7FFF)
00a50a 07fa      	CPC  R31,R26
00a50b f449      	BRNE _0x200000C
00a50c 940e cb1f 	CALL SUBOPT_0x15C
                +
00a50e e7a9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00a50f e6ba     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
00a510 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
00a511 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
00a512 940e a7f6 	CALL _strcpyf
00a514 c094      	RJMP _0x20E002C
                 _0x200000C:
00a515 85ac      	LDD  R26,Y+12
00a516 23aa      	TST  R26
00a517 f452      	BRPL _0x200000F
00a518 940e c54a 	CALL SUBOPT_0x6B
00a51a 940e e0ab 	CALL __ANEGF1
00a51c 940e dc95 	CALL SUBOPT_0x3A2
00a51e 940e dc9a 	CALL SUBOPT_0x3A3
00a520 e2ed      	LDI  R30,LOW(45)
00a521 93ec      	ST   X,R30
                 _0x200000F:
00a522 85a8      	LDD  R26,Y+8
00a523 30a7      	CPI  R26,LOW(0x7)
00a524 f010      	BRLO _0x2000010
00a525 e0e6      	LDI  R30,LOW(6)
00a526 87e8      	STD  Y+8,R30
                 _0x2000010:
00a527 8518      	LDD  R17,Y+8
                 _0x2000011:
00a528 2fe1      	MOV  R30,R17
00a529 5011      	SUBI R17,1
00a52a 30e0      	CPI  R30,0
00a52b f029      	BREQ _0x2000013
00a52c 940e dca1 	CALL SUBOPT_0x3A4
00a52e 940e c728 	CALL SUBOPT_0xB2
00a530 cff7      	RJMP _0x2000011
                 _0x2000013:
00a531 940e dcaa 	CALL SUBOPT_0x3A5
00a533 940e e151 	CALL __ADDF12
00a535 940e dc95 	CALL SUBOPT_0x3A2
00a537 e010      	LDI  R17,LOW(0)
00a538 940e db1d 	CALL SUBOPT_0x382
00a53a 940e c728 	CALL SUBOPT_0xB2
                 _0x2000014:
00a53c 940e dcaa 	CALL SUBOPT_0x3A5
00a53e 940e e234 	CALL __CMPF12
00a540 f098      	BRLO _0x2000016
00a541 940e c732 	CALL SUBOPT_0xB4
00a543 940e dcb1 	CALL SUBOPT_0x3A6
00a545 940e c728 	CALL SUBOPT_0xB2
00a547 5f1f      	SUBI R17,-LOW(1)
00a548 3217      	CPI  R17,39
00a549 f048      	BRLO _0x2000017
00a54a 940e cb1f 	CALL SUBOPT_0x15C
                +
00a54c e7ad     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
00a54d e6ba     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
00a54e e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
00a54f e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
00a550 940e a7f6 	CALL _strcpyf
00a552 c056      	RJMP _0x20E002C
                 _0x2000017:
00a553 cfe8      	RJMP _0x2000014
                 _0x2000016:
00a554 3010      	CPI  R17,0
00a555 f429      	BRNE _0x2000018
00a556 940e dc9a 	CALL SUBOPT_0x3A3
00a558 e3e0      	LDI  R30,LOW(48)
00a559 93ec      	ST   X,R30
00a55a c026      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
00a55b 2fe1      	MOV  R30,R17
00a55c 5011      	SUBI R17,1
00a55d 30e0      	CPI  R30,0
00a55e f111      	BREQ _0x200001C
00a55f 940e dca1 	CALL SUBOPT_0x3A4
00a561 940e dcb6 	CALL SUBOPT_0x3A7
00a563 01df      	MOVW R26,R30
00a564 01cb      	MOVW R24,R22
00a565 940e c249 	CALL _floor
00a567 940e c728 	CALL SUBOPT_0xB2
00a569 940e dcaa 	CALL SUBOPT_0x3A5
00a56b 940e e1ef 	CALL __DIVF21
00a56d 940e e0de 	CALL __CFD1U
00a56f 2f0e      	MOV  R16,R30
00a570 940e dc9a 	CALL SUBOPT_0x3A3
00a572 940e dcbb 	CALL SUBOPT_0x3A8
00a574 940e c732 	CALL SUBOPT_0xB4
00a576 940e dcc1 	CALL SUBOPT_0x3A9
00a578 940e e1a1 	CALL __MULF12
00a57a 940e dcc6 	CALL SUBOPT_0x3AA
00a57c 940e d08a 	CALL SUBOPT_0x222
00a57e 940e dc95 	CALL SUBOPT_0x3A2
00a580 cfda      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
00a581 85e8      	LDD  R30,Y+8
00a582 30e0      	CPI  R30,0
00a583 f109      	BREQ _0x20E002B
00a584 940e dc9a 	CALL SUBOPT_0x3A3
00a586 e2ee      	LDI  R30,LOW(46)
00a587 93ec      	ST   X,R30
                 _0x200001E:
00a588 85e8      	LDD  R30,Y+8
00a589 50e1      	SUBI R30,LOW(1)
00a58a 87e8      	STD  Y+8,R30
00a58b 5fef      	SUBI R30,-LOW(1)
00a58c f0c1      	BREQ _0x2000020
00a58d 940e dcc6 	CALL SUBOPT_0x3AA
00a58f 940e dcb1 	CALL SUBOPT_0x3A6
00a591 940e dc95 	CALL SUBOPT_0x3A2
00a593 940e c54a 	CALL SUBOPT_0x6B
00a595 940e e0de 	CALL __CFD1U
00a597 2f0e      	MOV  R16,R30
00a598 940e dc9a 	CALL SUBOPT_0x3A3
00a59a 940e dcbb 	CALL SUBOPT_0x3A8
00a59c 940e dcc6 	CALL SUBOPT_0x3AA
00a59e 940e dcc1 	CALL SUBOPT_0x3A9
00a5a0 940e d08a 	CALL SUBOPT_0x222
00a5a2 940e dc95 	CALL SUBOPT_0x3A2
00a5a4 cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002B:
00a5a5 81ae      	LDD  R26,Y+6
00a5a6 81bf      	LDD  R27,Y+6+1
00a5a7 e0e0      	LDI  R30,LOW(0)
00a5a8 93ec      	ST   X,R30
                 _0x20E002C:
00a5a9 8119      	LDD  R17,Y+1
00a5aa 8108      	LDD  R16,Y+0
00a5ab 962d      	ADIW R28,13
00a5ac 9508      	RET
                 _atof:
00a5ad 93ba      	ST   -Y,R27
00a5ae 93aa      	ST   -Y,R26
00a5af 972a      	SBIW R28,10
00a5b0 940e e475 	CALL __SAVELOCR6
00a5b2 e0e0      	LDI  R30,LOW(0)
                +
00a5b3 87e8     +STD Y + 8 , R30
00a5b4 87e9     +STD Y + 8 + 1 , R30
00a5b5 87ea     +STD Y + 8 + 2 , R30
00a5b6 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
00a5b7 89a8      	LDD  R26,Y+16
00a5b8 89b9      	LDD  R27,Y+16+1
00a5b9 91ec      	LD   R30,X
00a5ba 2f5e      	MOV  R21,R30
00a5bb 2fae      	MOV  R26,R30
00a5bc 940e c1f6 	CALL _isspace
00a5be 30e0      	CPI  R30,0
00a5bf f019      	BREQ _0x200003E
00a5c0 940e dccb 	CALL SUBOPT_0x3AB
00a5c2 cff4      	RJMP _0x200003C
                 _0x200003E:
00a5c3 e0e0      	LDI  R30,LOW(0)
00a5c4 83ef      	STD  Y+7,R30
00a5c5 325b      	CPI  R21,43
00a5c6 f021      	BREQ _0x2000073
00a5c7 325d      	CPI  R21,45
00a5c8 f439      	BRNE _0x2000041
00a5c9 e0e1      	LDI  R30,LOW(1)
00a5ca 83ef      	STD  Y+7,R30
                 _0x2000073:
00a5cb 89e8      	LDD  R30,Y+16
00a5cc 89f9      	LDD  R31,Y+16+1
00a5cd 9631      	ADIW R30,1
00a5ce 8be8      	STD  Y+16,R30
00a5cf 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
00a5d0 e0e0      	LDI  R30,LOW(0)
00a5d1 2f4e      	MOV  R20,R30
00a5d2 2f5e      	MOV  R21,R30
                +
00a5d3 8908     +LDD R16 , Y + 16
00a5d4 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
00a5d5 89a8      	LDD  R26,Y+16
00a5d6 89b9      	LDD  R27,Y+16+1
00a5d7 940e dab9 	CALL SUBOPT_0x371
00a5d9 f449      	BRNE _0x2000045
00a5da 89a8      	LDD  R26,Y+16
00a5db 89b9      	LDD  R27,Y+16+1
00a5dc 91ac      	LD   R26,X
00a5dd e2ee      	LDI  R30,LOW(46)
00a5de 940e e2e7 	CALL __EQB12
00a5e0 2f5e      	MOV  R21,R30
00a5e1 30e0      	CPI  R30,0
00a5e2 f021      	BREQ _0x2000044
                 _0x2000045:
00a5e3 2b45      	OR   R20,R21
00a5e4 940e dccb 	CALL SUBOPT_0x3AB
00a5e6 cfee      	RJMP _0x2000042
                 _0x2000044:
                +
00a5e7 8928     +LDD R18 , Y + 16
00a5e8 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
00a5e9 3040      	CPI  R20,0
00a5ea f0e9      	BREQ _0x2000047
00a5eb 89e8      	LDD  R30,Y+16
00a5ec 89f9      	LDD  R31,Y+16+1
00a5ed 9731      	SBIW R30,1
00a5ee 8be8      	STD  Y+16,R30
00a5ef 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
00a5f0 89a8      	LDD  R26,Y+16
00a5f1 89b9      	LDD  R27,Y+16+1
00a5f2 91ac      	LD   R26,X
00a5f3 32ae      	CPI  R26,LOW(0x2E)
00a5f4 f099      	BREQ _0x200004A
00a5f5 89a8      	LDD  R26,Y+16
00a5f6 89b9      	LDD  R27,Y+16+1
00a5f7 940e da67 	CALL SUBOPT_0x362
00a5f9 97f0      	SBIW R30,48
00a5fa 940e c810 	CALL SUBOPT_0xD8
00a5fc 940e dcc1 	CALL SUBOPT_0x3A9
00a5fe 940e c6bb 	CALL SUBOPT_0x9F
00a600 940e da7e 	CALL SUBOPT_0x367
00a602 89e8      	LDD  R30,Y+16
00a603 89f9      	LDD  R31,Y+16+1
00a604 9731      	SBIW R30,1
00a605 8be8      	STD  Y+16,R30
00a606 8bf9      	STD  Y+16+1,R31
00a607 cfe8      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00a608 940e db1d 	CALL SUBOPT_0x382
00a60a 940e c886 	CALL SUBOPT_0xEA
                 _0x200004B:
00a60c 89a8      	LDD  R26,Y+16
00a60d 89b9      	LDD  R27,Y+16+1
00a60e 9711      	SBIW R26,1
00a60f 8ba8      	STD  Y+16,R26
00a610 8bb9      	STD  Y+16+1,R27
00a611 17a0      	CP   R26,R16
00a612 07b1      	CPC  R27,R17
00a613 f0a0      	BRLO _0x200004D
00a614 940e da67 	CALL SUBOPT_0x362
00a616 97f0      	SBIW R30,48
00a617 940e c2ba 	CALL SUBOPT_0xB
00a619 940e dcc1 	CALL SUBOPT_0x3A9
00a61b 940e e1a1 	CALL __MULF12
00a61d 940e c810 	CALL SUBOPT_0xD8
00a61f 940e e151 	CALL __ADDF12
00a621 940e da7e 	CALL SUBOPT_0x367
00a623 940e dcd1 	CALL SUBOPT_0x3AC
00a625 940e c886 	CALL SUBOPT_0xEA
00a627 cfe4      	RJMP _0x200004B
                 _0x200004D:
00a628 01d9      	MOVW R26,R18
                +
00a629 5f2f     +SUBI R18 , LOW ( - 1 )
00a62a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a62b 915c      	LD   R21,X
00a62c 3655      	CPI  R21,101
00a62d f019      	BREQ _0x200004F
00a62e 3455      	CPI  R21,69
00a62f f009      	BREQ _0x200004F
00a630 c057      	RJMP _0x200004E
                 _0x200004F:
00a631 e0e0      	LDI  R30,LOW(0)
00a632 2f4e      	MOV  R20,R30
00a633 83ee      	STD  Y+6,R30
00a634 01d9      	MOVW R26,R18
00a635 915c      	LD   R21,X
00a636 325b      	CPI  R21,43
00a637 f021      	BREQ _0x2000074
00a638 325d      	CPI  R21,45
00a639 f421      	BRNE _0x2000053
00a63a e0e1      	LDI  R30,LOW(1)
00a63b 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
00a63c 5f2f     +SUBI R18 , LOW ( - 1 )
00a63d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
00a63e 01d9      	MOVW R26,R18
                +
00a63f 5f2f     +SUBI R18 , LOW ( - 1 )
00a640 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a641 91ec      	LD   R30,X
00a642 2f5e      	MOV  R21,R30
00a643 2fae      	MOV  R26,R30
00a644 940e c1e4 	CALL _isdigit
00a646 30e0      	CPI  R30,0
00a647 f039      	BREQ _0x2000056
00a648 e0aa      	LDI  R26,LOW(10)
00a649 024a      	MULS R20,R26
00a64a 01f0      	MOVW R30,R0
00a64b 0fe5      	ADD  R30,R21
00a64c 53e0      	SUBI R30,LOW(48)
00a64d 2f4e      	MOV  R20,R30
00a64e cfef      	RJMP _0x2000054
                 _0x2000056:
00a64f 3247      	CPI  R20,39
00a650 f068      	BRLO _0x2000057
00a651 81ef      	LDD  R30,Y+7
00a652 30e0      	CPI  R30,0
00a653 f029      	BREQ _0x2000058
                +
00a654 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
00a655 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
00a656 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
00a657 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
00a658 c03a      	RJMP _0x20E002A
                 _0x2000058:
                +
00a659 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
00a65a efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
00a65b e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
00a65c e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
00a65d c035      	RJMP _0x20E002A
                 _0x2000057:
00a65e e250      	LDI  R21,LOW(32)
00a65f 940e db1d 	CALL SUBOPT_0x382
00a661 940e c886 	CALL SUBOPT_0xEA
                 _0x2000059:
00a663 3050      	CPI  R21,0
00a664 f079      	BREQ _0x200005B
00a665 940e c815 	CALL SUBOPT_0xD9
00a667 940e c2ba 	CALL SUBOPT_0xB
00a669 940e dcd4 	CALL SUBOPT_0x3AD
00a66b 2fe4      	MOV  R30,R20
00a66c 23e5      	AND  R30,R21
00a66d f021      	BREQ _0x200005C
00a66e 940e dcd1 	CALL SUBOPT_0x3AC
00a670 940e c886 	CALL SUBOPT_0xEA
                 _0x200005C:
00a672 9556      	LSR  R21
00a673 cfef      	RJMP _0x2000059
                 _0x200005B:
00a674 81ee      	LDD  R30,Y+6
00a675 30e0      	CPI  R30,0
00a676 f039      	BREQ _0x200005D
00a677 940e c815 	CALL SUBOPT_0xD9
00a679 940e c810 	CALL SUBOPT_0xD8
00a67b 940e e1ef 	CALL __DIVF21
00a67d c006      	RJMP _0x2000075
                 _0x200005D:
00a67e 940e c815 	CALL SUBOPT_0xD9
00a680 940e c810 	CALL SUBOPT_0xD8
00a682 940e e1a1 	CALL __MULF12
                 _0x2000075:
                +
00a684 87e8     +STD Y + 8 , R30
00a685 87f9     +STD Y + 8 + 1 , R31
00a686 876a     +STD Y + 8 + 2 , R22
00a687 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
00a688 81ef      	LDD  R30,Y+7
00a689 30e0      	CPI  R30,0
00a68a f031      	BREQ _0x200005F
00a68b 940e c491 	CALL SUBOPT_0x4F
00a68d 940e e0ab 	CALL __ANEGF1
00a68f 940e da7e 	CALL SUBOPT_0x367
                 _0x200005F:
00a691 940e c491 	CALL SUBOPT_0x4F
                 _0x20E002A:
00a693 940e e47c 	CALL __LOADLOCR6
00a695 9662      	ADIW R28,18
00a696 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
00a697 940e c66b 	CALL SUBOPT_0x94
00a699 940e e2dd 	CALL __CWD1
00a69b 940e dcd8 	CALL SUBOPT_0x3AE
00a69d c0d7      	RJMP _0x20E0027
                 _rand:
00a69e 91e0 1ad1 	LDS  R30,__seed_G100
00a6a0 91f0 1ad2 	LDS  R31,__seed_G100+1
00a6a2 9160 1ad3 	LDS  R22,__seed_G100+2
00a6a4 9170 1ad4 	LDS  R23,__seed_G100+3
                +
00a6a6 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
00a6a7 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
00a6a8 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
00a6a9 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
00a6aa 940e e2fe 	CALL __MULD12U
                +
00a6ac 59ee     +SUBI R30 , LOW ( - 30562 )
00a6ad 48f8     +SBCI R31 , HIGH ( - 30562 )
00a6ae 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
00a6af 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
00a6b0 940e dcd8 	CALL SUBOPT_0x3AE
00a6b2 01fb      	movw r30,r22
00a6b3 77ff      	andi r31,0x7F
00a6b4 9508      	RET
                 _allocate_block_G100:
00a6b5 940e d97b 	CALL SUBOPT_0x34A
                +
00a6b7 e80a     +LDI R16 , LOW ( 7562 )
00a6b8 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
00a6b9 01d8      	MOVW R26,R16
00a6ba 940e c971 	CALL SUBOPT_0x114
                 _0x2000061:
00a6bc 2e00      	MOV  R0,R16
00a6bd 2a01      	OR   R0,R17
00a6be f199      	BREQ _0x2000063
00a6bf 01d8      	MOVW R26,R16
00a6c0 940e e3cc 	CALL __GETW1P
00a6c2 0fe0      	ADD  R30,R16
00a6c3 1ff1      	ADC  R31,R17
00a6c4 9634      	ADIW R30,4
00a6c5 01af      	MOVW R20,R30
00a6c6 9612      	ADIW R26,2
00a6c7 940e e3cc 	CALL __GETW1P
00a6c9 019f      	MOVW R18,R30
00a6ca 9730      	SBIW R30,0
00a6cb f019      	BREQ _0x2000064
                +
00a6cc 832e     +STD Y + 6 , R18
00a6cd 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
00a6ce c004      	RJMP _0x2000065
                 _0x2000064:
00a6cf e0e0      	LDI  R30,LOW(8704)
00a6d0 e2f2      	LDI  R31,HIGH(8704)
00a6d1 83ee      	STD  Y+6,R30
00a6d2 83ff      	STD  Y+6+1,R31
                 _0x2000065:
00a6d3 81ae      	LDD  R26,Y+6
00a6d4 81bf      	LDD  R27,Y+6+1
00a6d5 1ba4      	SUB  R26,R20
00a6d6 0bb5      	SBC  R27,R21
00a6d7 85e8      	LDD  R30,Y+8
00a6d8 85f9      	LDD  R31,Y+8+1
00a6d9 9634      	ADIW R30,4
00a6da 17ae      	CP   R26,R30
00a6db 07bf      	CPC  R27,R31
00a6dc f098      	BRLO _0x2000066
00a6dd 01fa      	MOVW R30,R20
                +
00a6de 01d8     +MOVW R26 , R16
00a6df 9612     +ADIW R26 , 2
00a6e0 93ed     +ST X + , R30
00a6e1 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
00a6e2 01f9      	MOVW R30,R18
                +
00a6e3 01da     +MOVW R26 , R20
00a6e4 9612     +ADIW R26 , 2
00a6e5 93ed     +ST X + , R30
00a6e6 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
00a6e7 85e8      	LDD  R30,Y+8
00a6e8 85f9      	LDD  R31,Y+8+1
00a6e9 01da      	MOVW R26,R20
00a6ea 93ed      	ST   X+,R30
00a6eb 93fc      	ST   X,R31
                +
00a6ec 5f4c     +SUBI R20 , LOW ( - 4 )
00a6ed 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
00a6ee 01fa      	MOVW R30,R20
00a6ef c004      	RJMP _0x20E0029
                 _0x2000066:
00a6f0 0189      	MOVW R16,R18
00a6f1 cfca      	RJMP _0x2000061
                 _0x2000063:
00a6f2 e0e0      	LDI  R30,LOW(0)
00a6f3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0029:
00a6f4 940e e47c 	CALL __LOADLOCR6
00a6f6 962a      	ADIW R28,10
00a6f7 9508      	RET
                 _find_prev_block_G100:
00a6f8 940e c5d9 	CALL SUBOPT_0x7F
                +
00a6fa e80a     +LDI R16 , LOW ( 7562 )
00a6fb e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
00a6fc 2e00      	MOV  R0,R16
00a6fd 2a01      	OR   R0,R17
00a6fe f079      	BREQ _0x2000069
00a6ff 01d8      	MOVW R26,R16
00a700 9612      	ADIW R26,2
00a701 940e e3cc 	CALL __GETW1P
00a703 019f      	MOVW R18,R30
00a704 01df      	MOVW R26,R30
00a705 81ec      	LDD  R30,Y+4
00a706 81fd      	LDD  R31,Y+4+1
00a707 17ea      	CP   R30,R26
00a708 07fb      	CPC  R31,R27
00a709 f411      	BRNE _0x200006A
00a70a 01f8      	MOVW R30,R16
00a70b c004      	RJMP _0x20E0028
                 _0x200006A:
00a70c 0189      	MOVW R16,R18
00a70d cfee      	RJMP _0x2000067
                 _0x2000069:
00a70e e0e0      	LDI  R30,LOW(0)
00a70f e0f0      	LDI  R31,HIGH(0)
                 _0x20E0028:
00a710 940e e47e 	CALL __LOADLOCR4
00a712 9626      	ADIW R28,6
00a713 9508      	RET
                 _realloc:
00a714 940e d97b 	CALL SUBOPT_0x34A
00a716 85ea      	LDD  R30,Y+10
00a717 85fb      	LDD  R31,Y+10+1
00a718 9730      	SBIW R30,0
00a719 f1a9      	BREQ _0x200006B
00a71a 9734      	SBIW R30,4
00a71b 018f      	MOVW R16,R30
00a71c 01d8      	MOVW R26,R16
00a71d dfda      	RCALL _find_prev_block_G100
00a71e 019f      	MOVW R18,R30
00a71f 9730      	SBIW R30,0
00a720 f171      	BREQ _0x200006C
00a721 01d8      	MOVW R26,R16
00a722 9612      	ADIW R26,2
00a723 940e e3cc 	CALL __GETW1P
                +
00a725 01d9     +MOVW R26 , R18
00a726 9612     +ADIW R26 , 2
00a727 93ed     +ST X + , R30
00a728 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
00a729 85e8      	LDD  R30,Y+8
00a72a 85f9      	LDD  R31,Y+8+1
00a72b 9730      	SBIW R30,0
00a72c f111      	BREQ _0x200006D
00a72d 85a8      	LDD  R26,Y+8
00a72e 85b9      	LDD  R27,Y+8+1
00a72f df85      	RCALL _allocate_block_G100
00a730 01af      	MOVW R20,R30
00a731 9730      	SBIW R30,0
00a732 f0b9      	BREQ _0x200006E
00a733 01d8      	MOVW R26,R16
00a734 940e dce1 	CALL SUBOPT_0x3AF
00a736 01df      	MOVW R26,R30
00a737 85e8      	LDD  R30,Y+8
00a738 85f9      	LDD  R31,Y+8+1
00a739 17ae      	CP   R26,R30
00a73a 07bf      	CPC  R27,R31
00a73b f420      	BRSH _0x200006F
00a73c 81ee      	LDD  R30,Y+6
00a73d 81ff      	LDD  R31,Y+6+1
00a73e 87e8      	STD  Y+8,R30
00a73f 87f9      	STD  Y+8+1,R31
                 _0x200006F:
00a740 935a      	ST   -Y,R21
00a741 934a      	ST   -Y,R20
00a742 940e cd12 	CALL SUBOPT_0x1AF
00a744 85ac      	LDD  R26,Y+12
00a745 85bd      	LDD  R27,Y+12+1
00a746 940e a7b6 	CALL _memmove
00a748 940c adee 	JMP  _0x20E001F
                 _0x200006E:
00a74a 01f8      	MOVW R30,R16
                +
00a74b 01d9     +MOVW R26 , R18
00a74c 9612     +ADIW R26 , 2
00a74d 93ed     +ST X + , R30
00a74e 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
00a74f e0e0      	LDI  R30,LOW(0)
00a750 e0f0      	LDI  R31,HIGH(0)
00a751 940c adef 	JMP  _0x20E001E
                 _malloc:
00a753 940e c5e5 	CALL SUBOPT_0x81
                +
00a755 e000     +LDI R16 , LOW ( 0 )
00a756 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a757 81ea      	LDD  R30,Y+2
00a758 81fb      	LDD  R31,Y+2+1
00a759 9730      	SBIW R30,0
00a75a f071      	BREQ _0x2000070
00a75b 81aa      	LDD  R26,Y+2
00a75c 81bb      	LDD  R27,Y+2+1
00a75d df57      	RCALL _allocate_block_G100
00a75e 018f      	MOVW R16,R30
00a75f 9730      	SBIW R30,0
00a760 f041      	BREQ _0x2000071
00a761 931a      	ST   -Y,R17
00a762 930a      	ST   -Y,R16
00a763 e0e0      	LDI  R30,LOW(0)
00a764 93ea      	ST   -Y,R30
00a765 81ad      	LDD  R26,Y+5
00a766 81be      	LDD  R27,Y+5+1
00a767 940e a7d5 	CALL _memset
                 _0x2000071:
                 _0x2000070:
00a769 01f8      	MOVW R30,R16
00a76a 8119      	LDD  R17,Y+1
00a76b 8108      	LDD  R16,Y+0
00a76c 940c a81a 	JMP  _0x20E0026
                 _free:
00a76e 940e c66b 	CALL SUBOPT_0x94
00a770 93fa      	ST   -Y,R31
00a771 93ea      	ST   -Y,R30
00a772 940e c8c4 	CALL SUBOPT_0xF6
00a774 df9f      	RCALL _realloc
                 _0x20E0027:
00a775 9622      	ADIW R28,2
00a776 9508      	RET
                 
                 	.CSEG
                 _memcmp:
00a777 93ba      	ST   -Y,R27
00a778 93aa      	ST   -Y,R26
00a779 2766          clr  r22
00a77a 2777          clr  r23
00a77b 9189          ld   r24,y+
00a77c 9199          ld   r25,y+
00a77d 91e9          ld   r30,y+
00a77e 91f9          ld   r31,y+
00a77f 91a9          ld   r26,y+
00a780 91b9          ld   r27,y+
                 memcmp0:
00a781 9600          adiw r24,0
00a782 f029          breq memcmp1
00a783 9701          sbiw r24,1
00a784 916d          ld   r22,x+
00a785 9171          ld   r23,z+
00a786 1767          cp   r22,r23
00a787 f3c9          breq memcmp0
                 memcmp1:
00a788 1b67          sub  r22,r23
00a789 f410          brcc memcmp2
00a78a efef          ldi  r30,-1
00a78b 9508          ret
                 memcmp2:
00a78c e0e0          ldi  r30,0
00a78d f009          breq memcmp3
00a78e 95e3          inc  r30
                 memcmp3:
00a78f 9508          ret
                 _memcpy:
00a790 93ba      	ST   -Y,R27
00a791 93aa      	ST   -Y,R26
00a792 8199          ldd  r25,y+1
00a793 8188          ld   r24,y
00a794 9600          adiw r24,0
00a795 f041          breq memcpy1
00a796 81bd          ldd  r27,y+5
00a797 81ac          ldd  r26,y+4
00a798 81fb          ldd  r31,y+3
00a799 81ea          ldd  r30,y+2
                 memcpy0:
00a79a 9161          ld   r22,z+
00a79b 936d          st   x+,r22
00a79c 9701          sbiw r24,1
00a79d f7e1          brne memcpy0
                 memcpy1:
00a79e 81fd          ldd  r31,y+5
00a79f 81ec          ldd  r30,y+4
00a7a0 940c ae10 	JMP  _0x20E001D
                 _memcpyf:
00a7a2 93ba      	ST   -Y,R27
00a7a3 93aa      	ST   -Y,R26
00a7a4 8199          ldd  r25,y+1
00a7a5 8188          ld   r24,y
00a7a6 9600          adiw r24,0
00a7a7 f051          breq memcpyf1
00a7a8 81bf          ldd  r27,y+7
00a7a9 81ae          ldd  r26,y+6
00a7aa 816c          ldd  r22,y+4
00a7ab 81fb          ldd  r31,y+3
00a7ac 81ea          ldd  r30,y+2
00a7ad bf6b          out  rampz,r22
                 memcpyf0:
00a7ae 9007          elpm r0,z+
00a7af 920d          st   x+,r0
00a7b0 9701          sbiw r24,1
00a7b1 f7e1          brne memcpyf0
                 memcpyf1:
00a7b2 81ff          ldd  r31,y+7
00a7b3 81ee          ldd  r30,y+6
00a7b4 940c adcb 	JMP  _0x20E0020
                 _memmove:
00a7b6 93ba      	ST   -Y,R27
00a7b7 93aa      	ST   -Y,R26
00a7b8 8199          ldd  r25,y+1
00a7b9 8188          ld   r24,y
00a7ba 9600          adiw r24,0
00a7bb f0a9          breq memmove3
00a7bc 81bd          ldd  r27,y+5
00a7bd 81ac          ldd  r26,y+4
00a7be 81fb          ldd  r31,y+3
00a7bf 81ea          ldd  r30,y+2
00a7c0 17ea          cp   r30,r26
00a7c1 07fb          cpc  r31,r27
00a7c2 f071          breq memmove3
00a7c3 f02c          brlt memmove1
                 memmove0:
00a7c4 9161          ld   r22,z+
00a7c5 936d          st   x+,r22
00a7c6 9701          sbiw r24,1
00a7c7 f7e1          brne memmove0
00a7c8 c008          rjmp memmove3
                 memmove1:
00a7c9 0fa8          add  r26,r24
00a7ca 1fb9          adc  r27,r25
00a7cb 0fe8          add  r30,r24
00a7cc 1ff9          adc  r31,r25
                 memmove2:
00a7cd 9162          ld   r22,-z
00a7ce 936e          st   -x,r22
00a7cf 9701          sbiw r24,1
00a7d0 f7e1          brne memmove2
                 memmove3:
00a7d1 81fd          ldd  r31,y+5
00a7d2 81ec          ldd  r30,y+4
00a7d3 940c ae10 	JMP  _0x20E001D
                 _memset:
00a7d5 93ba      	ST   -Y,R27
00a7d6 93aa      	ST   -Y,R26
00a7d7 81b9          ldd  r27,y+1
00a7d8 81a8          ld   r26,y
00a7d9 9610          adiw r26,0
00a7da f031          breq memset1
00a7db 81fc          ldd  r31,y+4
00a7dc 81eb          ldd  r30,y+3
00a7dd 816a          ldd  r22,y+2
                 memset0:
00a7de 9361          st   z+,r22
00a7df 9711          sbiw r26,1
00a7e0 f7e9          brne memset0
                 memset1:
00a7e1 81eb          ldd  r30,y+3
00a7e2 81fc          ldd  r31,y+4
00a7e3 9625      	ADIW R28,5
00a7e4 9508      	RET
                 _strcat:
00a7e5 93ba      	ST   -Y,R27
00a7e6 93aa      	ST   -Y,R26
00a7e7 91e9          ld   r30,y+
00a7e8 91f9          ld   r31,y+
00a7e9 91a9          ld   r26,y+
00a7ea 91b9          ld   r27,y+
00a7eb 01cd          movw r24,r26
                 strcat0:
00a7ec 916d          ld   r22,x+
00a7ed 2366          tst  r22
00a7ee f7e9          brne strcat0
00a7ef 9711          sbiw r26,1
                 strcat1:
00a7f0 9161          ld   r22,z+
00a7f1 936d          st   x+,r22
00a7f2 2366          tst  r22
00a7f3 f7e1          brne strcat1
00a7f4 01fc          movw r30,r24
00a7f5 9508          ret
                 _strcpyf:
00a7f6 940e e405 	CALL __PUTPARD2
00a7f8 91e9          ld   r30,y+
00a7f9 91f9          ld   r31,y+
00a7fa 9169          ld   r22,y+
00a7fb 9179          ld   r23,y+
00a7fc 91a9          ld   r26,y+
00a7fd 91b9          ld   r27,y+
00a7fe 01cd          movw r24,r26
00a7ff bf6b          out  rampz,r22
                 strcpyf0:
00a800 9007          elpm r0,z+
00a801 920d          st   x+,r0
00a802 2000          tst  r0
00a803 f7e1          brne strcpyf0
00a804 01fc          movw r30,r24
00a805 9508          ret
                 _strcspn:
00a806 93ba      	ST   -Y,R27
00a807 93aa      	ST   -Y,R26
00a808 81bb          ldd  r27,y+3
00a809 81aa          ldd  r26,y+2
00a80a 2788          clr  r24
00a80b 2799          clr  r25
                 strcspn0:
00a80c 916d          ld   r22,x+
00a80d 2366          tst  r22
00a80e f051          breq strcspn2
00a80f 81f9          ldd  r31,y+1
00a810 81e8          ld   r30,y
                 strcspn1:
00a811 9171          ld   r23,z+
00a812 2377          tst  r23
00a813 f019          breq strcspn3
00a814 1767          cp   r22,r23
00a815 f019          breq strcspn2
00a816 cffa          rjmp strcspn1
                 strcspn3:
00a817 9601          adiw r24,1
00a818 cff3          rjmp strcspn0
                 strcspn2:
00a819 01fc          movw r30,r24
                 _0x20E0026:
00a81a 9624      	ADIW R28,4
00a81b 9508      	RET
                 _strlen:
00a81c 93ba      	ST   -Y,R27
00a81d 93aa      	ST   -Y,R26
00a81e 91a9          ld   r26,y+
00a81f 91b9          ld   r27,y+
00a820 27ee          clr  r30
00a821 27ff          clr  r31
                 strlen0:
00a822 916d          ld   r22,x+
00a823 2366          tst  r22
00a824 f011          breq strlen1
00a825 9631          adiw r30,1
00a826 cffb          rjmp strlen0
                 strlen1:
00a827 9508          ret
                 _strlenf:
00a828 940e e405 	CALL __PUTPARD2
00a82a 27aa          clr  r26
00a82b 27bb          clr  r27
00a82c 91e9          ld   r30,y+
00a82d 91f9          ld   r31,y+
00a82e 9169          ld   r22,y+
00a82f 9179          ld   r23,y+
00a830 bf6b          out  rampz,r22
                 strlenf0:
00a831 9007          elpm r0,z+
00a832 2000          tst  r0
00a833 f011          breq strlenf1
00a834 9611          adiw r26,1
00a835 cffb          rjmp strlenf0
                 strlenf1:
00a836 01fd          movw r30,r26
00a837 9508          ret
                 _strncmpf:
00a838 93aa      	ST   -Y,R26
00a839 9179          ld   r23,y+
00a83a 91e9          ld   r30,y+
00a83b 91f9          ld   r31,y+
00a83c 9169          ld   r22,y+
00a83d 9009          ld   r0,y+
00a83e 91a9          ld   r26,y+
00a83f 91b9          ld   r27,y+
00a840 2400          clr  r0
00a841 2411          clr  r1
00a842 bf6b          out  rampz,r22
                 strncmpf0:
00a843 2377          tst  r23
00a844 f049          breq strncmpf1
00a845 957a          dec  r23
00a846 901d          ld   r1,x+
00a847 9007          elpm r0,z+
00a848 1401          cp   r0,r1
00a849 f421          brne strncmpf1
00a84a 2000          tst  r0
00a84b f7b9          brne strncmpf0
                 strncmpf3:
00a84c 27ee          clr  r30
00a84d c005          rjmp strncmpf2
                 strncmpf1:
00a84e 1810          sub  r1,r0
00a84f f3e1          breq strncmpf3
00a850 e0e1          ldi  r30,1
00a851 f408          brcc strncmpf2
00a852 50e2          subi r30,2
                 strncmpf2:
00a853 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
00a854 931a      	ST   -Y,R17
00a855 e3e2      	LDI  R30,LOW(50)
00a856 93e0 1ad7 	STS  _timer2_G102,R30
00a858 efef      	LDI  R30,LOW(255)
00a859 bdee      	OUT  0x2E,R30
                 _0x2040004:
00a85a b5ed      	IN   R30,0x2D
00a85b ffe7      	SBRS R30,7
00a85c cffd      	RJMP _0x2040004
                 _0x2040008:
00a85d efef      	LDI  R30,LOW(255)
00a85e bdee      	OUT  0x2E,R30
                 _0x204000A:
00a85f b5ed      	IN   R30,0x2D
00a860 ffe7      	SBRS R30,7
00a861 cffd      	RJMP _0x204000A
00a862 b51e      	IN   R17,46
00a863 3f1f      	CPI  R17,255
00a864 f021      	BREQ _0x204000D
00a865 91e0 1ad7 	LDS  R30,_timer2_G102
00a867 30e0      	CPI  R30,0
00a868 f409      	BRNE _0x204000E
                 _0x204000D:
00a869 c001      	RJMP _0x2040009
                 _0x204000E:
00a86a cff2      	RJMP _0x2040008
                 _0x2040009:
00a86b 2fe1      	MOV  R30,R17
00a86c 9119      	LD   R17,Y+
00a86d 9508      	RET
                 _release_spi_G102:
00a86e 9a28      	SBI  0x5,0
00a86f efef      	LDI  R30,LOW(255)
00a870 bdee      	OUT  0x2E,R30
                 _0x204000F:
00a871 b5ed      	IN   R30,0x2D
00a872 ffe7      	SBRS R30,7
00a873 cffd      	RJMP _0x204000F
00a874 9508      	RET
                 _rx_datablock_G102:
00a875 93ba      	ST   -Y,R27
00a876 93aa      	ST   -Y,R26
00a877 940e e477 	CALL __SAVELOCR4
00a879 e0ea      	LDI  R30,LOW(10)
00a87a 93e0 1ad6 	STS  _timer1_G102,R30
                 _0x2040013:
00a87c efef      	LDI  R30,LOW(255)
00a87d bdee      	OUT  0x2E,R30
                 _0x2040015:
00a87e b5ed      	IN   R30,0x2D
00a87f ffe7      	SBRS R30,7
00a880 cffd      	RJMP _0x2040015
00a881 b51e      	IN   R17,46
00a882 3f1f      	CPI  R17,255
00a883 f421      	BRNE _0x2040018
00a884 91e0 1ad6 	LDS  R30,_timer1_G102
00a886 30e0      	CPI  R30,0
00a887 f409      	BRNE _0x2040019
                 _0x2040018:
00a888 c001      	RJMP _0x2040014
                 _0x2040019:
00a889 cff2      	RJMP _0x2040013
                 _0x2040014:
00a88a 3f1e      	CPI  R17,254
00a88b f021      	BREQ _0x204001A
00a88c e0e0      	LDI  R30,LOW(0)
00a88d 940e e47e 	CALL __LOADLOCR4
00a88f c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
00a890 812e     +LDD R18 , Y + 6
00a891 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
00a892 efef      	LDI  R30,LOW(255)
00a893 bdee      	OUT  0x2E,R30
                 _0x204001E:
00a894 b5ed      	IN   R30,0x2D
00a895 ffe7      	SBRS R30,7
00a896 cffd      	RJMP _0x204001E
00a897 933f      	PUSH R19
00a898 932f      	PUSH R18
                +
00a899 5f2f     +SUBI R18 , LOW ( - 1 )
00a89a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a89b b5ee      	IN   R30,0x2E
00a89c 91af      	POP  R26
00a89d 91bf      	POP  R27
00a89e 93ec      	ST   X,R30
00a89f efef      	LDI  R30,LOW(255)
00a8a0 bdee      	OUT  0x2E,R30
                 _0x2040021:
00a8a1 b5ed      	IN   R30,0x2D
00a8a2 ffe7      	SBRS R30,7
00a8a3 cffd      	RJMP _0x2040021
00a8a4 933f      	PUSH R19
00a8a5 932f      	PUSH R18
                +
00a8a6 5f2f     +SUBI R18 , LOW ( - 1 )
00a8a7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a8a8 b5ee      	IN   R30,0x2E
00a8a9 91af      	POP  R26
00a8aa 91bf      	POP  R27
00a8ab 93ec      	ST   X,R30
00a8ac efef      	LDI  R30,LOW(255)
00a8ad bdee      	OUT  0x2E,R30
                 _0x2040024:
00a8ae b5ed      	IN   R30,0x2D
00a8af ffe7      	SBRS R30,7
00a8b0 cffd      	RJMP _0x2040024
00a8b1 933f      	PUSH R19
00a8b2 932f      	PUSH R18
                +
00a8b3 5f2f     +SUBI R18 , LOW ( - 1 )
00a8b4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a8b5 b5ee      	IN   R30,0x2E
00a8b6 91af      	POP  R26
00a8b7 91bf      	POP  R27
00a8b8 93ec      	ST   X,R30
00a8b9 efef      	LDI  R30,LOW(255)
00a8ba bdee      	OUT  0x2E,R30
                 _0x2040027:
00a8bb b5ed      	IN   R30,0x2D
00a8bc ffe7      	SBRS R30,7
00a8bd cffd      	RJMP _0x2040027
00a8be 933f      	PUSH R19
00a8bf 932f      	PUSH R18
                +
00a8c0 5f2f     +SUBI R18 , LOW ( - 1 )
00a8c1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a8c2 b5ee      	IN   R30,0x2E
00a8c3 91af      	POP  R26
00a8c4 91bf      	POP  R27
00a8c5 93ec      	ST   X,R30
00a8c6 81ec      	LDD  R30,Y+4
00a8c7 81fd      	LDD  R31,Y+4+1
00a8c8 9734      	SBIW R30,4
00a8c9 83ec      	STD  Y+4,R30
00a8ca 83fd      	STD  Y+4+1,R31
00a8cb f631      	BRNE _0x204001C
00a8cc efef      	LDI  R30,LOW(255)
00a8cd bdee      	OUT  0x2E,R30
                 _0x204002A:
00a8ce b5ed      	IN   R30,0x2D
00a8cf ffe7      	SBRS R30,7
00a8d0 cffd      	RJMP _0x204002A
00a8d1 efef      	LDI  R30,LOW(255)
00a8d2 bdee      	OUT  0x2E,R30
                 _0x204002D:
00a8d3 b5ed      	IN   R30,0x2D
00a8d4 ffe7      	SBRS R30,7
00a8d5 cffd      	RJMP _0x204002D
00a8d6 e0e1      	LDI  R30,LOW(1)
00a8d7 940e e47e 	CALL __LOADLOCR4
00a8d9 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
00a8da 93aa      	ST   -Y,R26
00a8db 940e e477 	CALL __SAVELOCR4
00a8dd df76      	RCALL _wait_ready_G102
00a8de 3fef      	CPI  R30,LOW(0xFF)
00a8df f021      	BREQ _0x2040030
00a8e0 e0e0      	LDI  R30,LOW(0)
00a8e1 940e e47e 	CALL __LOADLOCR4
00a8e3 c4b3      	RJMP _0x20E0021
                 _0x2040030:
00a8e4 81ec      	LDD  R30,Y+4
00a8e5 bdee      	OUT  0x2E,R30
                 _0x2040031:
00a8e6 b5ed      	IN   R30,0x2D
00a8e7 ffe7      	SBRS R30,7
00a8e8 cffd      	RJMP _0x2040031
00a8e9 81ac      	LDD  R26,Y+4
00a8ea 3fad      	CPI  R26,LOW(0xFD)
00a8eb f171      	BREQ _0x2040034
00a8ec e000      	LDI  R16,LOW(0)
                +
00a8ed 812d     +LDD R18 , Y + 5
00a8ee 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
00a8ef 01d9      	MOVW R26,R18
                +
00a8f0 5f2f     +SUBI R18 , LOW ( - 1 )
00a8f1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a8f2 91ec      	LD   R30,X
00a8f3 bdee      	OUT  0x2E,R30
                 _0x2040038:
00a8f4 b5ed      	IN   R30,0x2D
00a8f5 ffe7      	SBRS R30,7
00a8f6 cffd      	RJMP _0x2040038
00a8f7 01d9      	MOVW R26,R18
                +
00a8f8 5f2f     +SUBI R18 , LOW ( - 1 )
00a8f9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a8fa 91ec      	LD   R30,X
00a8fb bdee      	OUT  0x2E,R30
                 _0x204003B:
00a8fc b5ed      	IN   R30,0x2D
00a8fd ffe7      	SBRS R30,7
00a8fe cffd      	RJMP _0x204003B
00a8ff 5001      	SUBI R16,LOW(1)
00a900 3000      	CPI  R16,0
00a901 f769      	BRNE _0x2040036
00a902 efef      	LDI  R30,LOW(255)
00a903 bdee      	OUT  0x2E,R30
                 _0x204003E:
00a904 b5ed      	IN   R30,0x2D
00a905 ffe7      	SBRS R30,7
00a906 cffd      	RJMP _0x204003E
00a907 efef      	LDI  R30,LOW(255)
00a908 bdee      	OUT  0x2E,R30
                 _0x2040041:
00a909 b5ed      	IN   R30,0x2D
00a90a ffe7      	SBRS R30,7
00a90b cffd      	RJMP _0x2040041
00a90c efef      	LDI  R30,LOW(255)
00a90d bdee      	OUT  0x2E,R30
                 _0x2040044:
00a90e b5ed      	IN   R30,0x2D
00a90f ffe7      	SBRS R30,7
00a910 cffd      	RJMP _0x2040044
00a911 b51e      	IN   R17,46
00a912 2fe1      	MOV  R30,R17
00a913 71ef      	ANDI R30,LOW(0x1F)
00a914 30e5      	CPI  R30,LOW(0x5)
00a915 f021      	BREQ _0x2040047
00a916 e0e0      	LDI  R30,LOW(0)
00a917 940e e47e 	CALL __LOADLOCR4
00a919 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
00a91a e0e1      	LDI  R30,LOW(1)
00a91b 940e e47e 	CALL __LOADLOCR4
00a91d c479      	RJMP _0x20E0021
                 _send_cmd_G102:
00a91e 940e e405 	CALL __PUTPARD2
00a920 931a      	ST   -Y,R17
00a921 930a      	ST   -Y,R16
00a922 81ee      	LDD  R30,Y+6
00a923 78e0      	ANDI R30,LOW(0x80)
00a924 f089      	BREQ _0x2040048
00a925 81ee      	LDD  R30,Y+6
00a926 77ef      	ANDI R30,0x7F
00a927 83ee      	STD  Y+6,R30
00a928 e7e7      	LDI  R30,LOW(119)
00a929 93ea      	ST   -Y,R30
                +
00a92a e0a0     +LDI R26 , LOW ( 0x0 )
00a92b e0b0     +LDI R27 , HIGH ( 0x0 )
00a92c e080     +LDI R24 , BYTE3 ( 0x0 )
00a92d e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a92e dfef      	RCALL _send_cmd_G102
00a92f 2f0e      	MOV  R16,R30
00a930 3002      	CPI  R16,2
00a931 f020      	BRLO _0x2040049
00a932 2fe0      	MOV  R30,R16
00a933 8119      	LDD  R17,Y+1
00a934 8108      	LDD  R16,Y+0
00a935 c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
00a936 9a28      	SBI  0x5,0
00a937 9828      	CBI  0x5,0
00a938 df1b      	RCALL _wait_ready_G102
00a939 3fef      	CPI  R30,LOW(0xFF)
00a93a f021      	BREQ _0x204004A
00a93b efef      	LDI  R30,LOW(255)
00a93c 8119      	LDD  R17,Y+1
00a93d 8108      	LDD  R16,Y+0
00a93e c458      	RJMP _0x20E0021
                 _0x204004A:
00a93f 81ee      	LDD  R30,Y+6
00a940 bdee      	OUT  0x2E,R30
                 _0x204004B:
00a941 b5ed      	IN   R30,0x2D
00a942 ffe7      	SBRS R30,7
00a943 cffd      	RJMP _0x204004B
00a944 81ed      	LDD  R30,Y+5
00a945 bdee      	OUT  0x2E,R30
                 _0x204004E:
00a946 b5ed      	IN   R30,0x2D
00a947 ffe7      	SBRS R30,7
00a948 cffd      	RJMP _0x204004E
00a949 81ec      	LDD  R30,Y+4
00a94a bdee      	OUT  0x2E,R30
                 _0x2040051:
00a94b b5ed      	IN   R30,0x2D
00a94c ffe7      	SBRS R30,7
00a94d cffd      	RJMP _0x2040051
00a94e 81eb      	LDD  R30,Y+3
00a94f bdee      	OUT  0x2E,R30
                 _0x2040054:
00a950 b5ed      	IN   R30,0x2D
00a951 ffe7      	SBRS R30,7
00a952 cffd      	RJMP _0x2040054
00a953 81ea      	LDD  R30,Y+2
00a954 bdee      	OUT  0x2E,R30
                 _0x2040057:
00a955 b5ed      	IN   R30,0x2D
00a956 ffe7      	SBRS R30,7
00a957 cffd      	RJMP _0x2040057
00a958 e011      	LDI  R17,LOW(1)
00a959 81ae      	LDD  R26,Y+6
00a95a 34a0      	CPI  R26,LOW(0x40)
00a95b f411      	BRNE _0x204005A
00a95c e915      	LDI  R17,LOW(149)
00a95d c004      	RJMP _0x204005B
                 _0x204005A:
00a95e 81ae      	LDD  R26,Y+6
00a95f 34a8      	CPI  R26,LOW(0x48)
00a960 f409      	BRNE _0x204005C
00a961 e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
00a962 bd1e      	OUT  0x2E,R17
                 _0x204005D:
00a963 b5ed      	IN   R30,0x2D
00a964 ffe7      	SBRS R30,7
00a965 cffd      	RJMP _0x204005D
00a966 81ae      	LDD  R26,Y+6
00a967 34ac      	CPI  R26,LOW(0x4C)
00a968 f429      	BRNE _0x2040060
00a969 efef      	LDI  R30,LOW(255)
00a96a bdee      	OUT  0x2E,R30
                 _0x2040061:
00a96b b5ed      	IN   R30,0x2D
00a96c ffe7      	SBRS R30,7
00a96d cffd      	RJMP _0x2040061
                 _0x2040060:
00a96e ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
00a96f efef      	LDI  R30,LOW(255)
00a970 bdee      	OUT  0x2E,R30
                 _0x2040067:
00a971 b5ed      	IN   R30,0x2D
00a972 ffe7      	SBRS R30,7
00a973 cffd      	RJMP _0x2040067
00a974 b50e      	IN   R16,46
00a975 ff07      	SBRS R16,7
00a976 c003      	RJMP _0x204006A
00a977 5011      	SUBI R17,LOW(1)
00a978 3010      	CPI  R17,0
00a979 f409      	BRNE _0x204006B
                 _0x204006A:
00a97a c001      	RJMP _0x2040066
                 _0x204006B:
00a97b cff3      	RJMP _0x2040065
                 _0x2040066:
00a97c 2fe0      	MOV  R30,R16
00a97d 8119      	LDD  R17,Y+1
00a97e 8108      	LDD  R16,Y+0
00a97f c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
00a980 93ba      	ST   -Y,R27
00a981 93aa      	ST   -Y,R26
00a982 931a      	ST   -Y,R17
00a983 e014      	LDI  R17,4
                 _0x204006D:
00a984 efef      	LDI  R30,LOW(255)
00a985 bdee      	OUT  0x2E,R30
                 _0x204006F:
00a986 b5ed      	IN   R30,0x2D
00a987 ffe7      	SBRS R30,7
00a988 cffd      	RJMP _0x204006F
00a989 81a9      	LDD  R26,Y+1
00a98a 81ba      	LDD  R27,Y+1+1
00a98b 9611      	ADIW R26,1
00a98c 83a9      	STD  Y+1,R26
00a98d 83ba      	STD  Y+1+1,R27
00a98e 9711      	SBIW R26,1
00a98f b5ee      	IN   R30,0x2E
00a990 93ec      	ST   X,R30
00a991 5011      	SUBI R17,LOW(1)
00a992 3010      	CPI  R17,0
00a993 f781      	BRNE _0x204006D
00a994 c554      	RJMP _0x20E001B
                 _disk_initialize:
00a995 93aa      	ST   -Y,R26
00a996 9724      	SBIW R28,4
00a997 940e e477 	CALL __SAVELOCR4
00a999 85e8      	LDD  R30,Y+8
00a99a 30e0      	CPI  R30,0
00a99b f011      	BREQ _0x2040072
00a99c e0e1      	LDI  R30,LOW(1)
00a99d c0c4      	RJMP _0x20E0025
                 _0x2040072:
00a99e 9808      	CBI  0x1,0
00a99f 9809      	CBI  0x1,1
00a9a0 e0ea      	LDI  R30,LOW(10)
00a9a1 93e0 1ad6 	STS  _timer1_G102,R30
                 _0x2040073:
00a9a3 91e0 1ad6 	LDS  R30,_timer1_G102
00a9a5 30e0      	CPI  R30,0
00a9a6 f7e1      	BRNE _0x2040073
00a9a7 91e0 1ad5 	LDS  R30,_status_G102
00a9a9 70e2      	ANDI R30,LOW(0x2)
00a9aa f009      	BREQ _0x2040076
00a9ab c0b4      	RJMP _0x20E0024
                 _0x2040076:
00a9ac 9a20      	SBI  0x4,0
00a9ad 9a28      	SBI  0x5,0
00a9ae b1e5      	IN   R30,0x5
00a9af 7fe9      	ANDI R30,LOW(0xF9)
00a9b0 b9e5      	OUT  0x5,R30
00a9b1 9a2b      	SBI  0x5,3
00a9b2 9823      	CBI  0x4,3
00a9b3 b1e4      	IN   R30,0x4
00a9b4 60e7      	ORI  R30,LOW(0x7)
00a9b5 b9e4      	OUT  0x4,R30
00a9b6 e5e2      	LDI  R30,LOW(82)
00a9b7 bdec      	OUT  0x2C,R30
00a9b8 e0e0      	LDI  R30,LOW(0)
00a9b9 bded      	OUT  0x2D,R30
00a9ba ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
00a9bb e01a      	LDI  R17,LOW(10)
                 _0x204007B:
00a9bc efef      	LDI  R30,LOW(255)
00a9bd bdee      	OUT  0x2E,R30
                 _0x204007D:
00a9be b5ed      	IN   R30,0x2D
00a9bf ffe7      	SBRS R30,7
00a9c0 cffd      	RJMP _0x204007D
00a9c1 5011      	SUBI R17,LOW(1)
00a9c2 3010      	CPI  R17,0
00a9c3 f7c1      	BRNE _0x204007B
00a9c4 e4e0      	LDI  R30,LOW(64)
00a9c5 93ea      	ST   -Y,R30
                +
00a9c6 e0a0     +LDI R26 , LOW ( 0x0 )
00a9c7 e0b0     +LDI R27 , HIGH ( 0x0 )
00a9c8 e080     +LDI R24 , BYTE3 ( 0x0 )
00a9c9 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a9ca df53      	RCALL _send_cmd_G102
00a9cb 2f0e      	MOV  R16,R30
00a9cc 5031      	SUBI R19,LOW(1)
00a9cd 3001      	CPI  R16,1
00a9ce f011      	BREQ _0x2040080
00a9cf 3030      	CPI  R19,0
00a9d0 f409      	BRNE _0x2040081
                 _0x2040080:
00a9d1 c001      	RJMP _0x2040079
                 _0x2040081:
00a9d2 cfe8      	RJMP _0x2040078
                 _0x2040079:
00a9d3 e030      	LDI  R19,LOW(0)
00a9d4 3001      	CPI  R16,1
00a9d5 f011      	BREQ PC+3
00a9d6 940c aa40 	JMP _0x2040082
00a9d8 e6e4      	LDI  R30,LOW(100)
00a9d9 93e0 1ad6 	STS  _timer1_G102,R30
00a9db e4e8      	LDI  R30,LOW(72)
00a9dc 93ea      	ST   -Y,R30
                +
00a9dd eaaa     +LDI R26 , LOW ( 0x1AA )
00a9de e0b1     +LDI R27 , HIGH ( 0x1AA )
00a9df e080     +LDI R24 , BYTE3 ( 0x1AA )
00a9e0 e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
00a9e1 df3c      	RCALL _send_cmd_G102
00a9e2 30e1      	CPI  R30,LOW(0x1)
00a9e3 f591      	BRNE _0x2040083
00a9e4 01de      	MOVW R26,R28
00a9e5 9614      	ADIW R26,4
00a9e6 df99      	RCALL _rx_spi4_G102
00a9e7 81ae      	LDD  R26,Y+6
00a9e8 30a1      	CPI  R26,LOW(0x1)
00a9e9 f419      	BRNE _0x2040085
00a9ea 81af      	LDD  R26,Y+7
00a9eb 3aaa      	CPI  R26,LOW(0xAA)
00a9ec f009      	BREQ _0x2040086
                 _0x2040085:
00a9ed c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
00a9ee 91e0 1ad6 	LDS  R30,_timer1_G102
00a9f0 30e0      	CPI  R30,0
00a9f1 f049      	BREQ _0x204008A
00a9f2 eee9      	LDI  R30,LOW(233)
00a9f3 93ea      	ST   -Y,R30
                +
00a9f4 e0a0     +LDI R26 , LOW ( 0x40000000 )
00a9f5 e0b0     +LDI R27 , HIGH ( 0x40000000 )
00a9f6 e080     +LDI R24 , BYTE3 ( 0x40000000 )
00a9f7 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00a9f8 df25      	RCALL _send_cmd_G102
00a9f9 30e0      	CPI  R30,0
00a9fa f409      	BRNE _0x204008B
                 _0x204008A:
00a9fb c001      	RJMP _0x2040089
                 _0x204008B:
00a9fc cff1      	RJMP _0x2040087
                 _0x2040089:
00a9fd 91e0 1ad6 	LDS  R30,_timer1_G102
00a9ff 30e0      	CPI  R30,0
00aa00 f049      	BREQ _0x204008D
00aa01 e7ea      	LDI  R30,LOW(122)
00aa02 93ea      	ST   -Y,R30
                +
00aa03 e0a0     +LDI R26 , LOW ( 0x0 )
00aa04 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa05 e080     +LDI R24 , BYTE3 ( 0x0 )
00aa06 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa07 df16      	RCALL _send_cmd_G102
00aa08 30e0      	CPI  R30,0
00aa09 f009      	BREQ _0x204008E
                 _0x204008D:
00aa0a c00a      	RJMP _0x204008C
                 _0x204008E:
00aa0b 01de      	MOVW R26,R28
00aa0c 9614      	ADIW R26,4
00aa0d df72      	RCALL _rx_spi4_G102
00aa0e 81ec      	LDD  R30,Y+4
00aa0f 74e0      	ANDI R30,LOW(0x40)
00aa10 f011      	BREQ _0x204008F
00aa11 e0ec      	LDI  R30,LOW(12)
00aa12 c001      	RJMP _0x2040090
                 _0x204008F:
00aa13 e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
00aa14 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
00aa15 c02a      	RJMP _0x2040092
                 _0x2040083:
00aa16 eee9      	LDI  R30,LOW(233)
00aa17 93ea      	ST   -Y,R30
                +
00aa18 e0a0     +LDI R26 , LOW ( 0x0 )
00aa19 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa1a e080     +LDI R24 , BYTE3 ( 0x0 )
00aa1b e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa1c df01      	RCALL _send_cmd_G102
00aa1d 30e2      	CPI  R30,LOW(0x2)
00aa1e f418      	BRSH _0x2040093
00aa1f e032      	LDI  R19,LOW(2)
00aa20 ee09      	LDI  R16,LOW(233)
00aa21 c002      	RJMP _0x2040094
                 _0x2040093:
00aa22 e031      	LDI  R19,LOW(1)
00aa23 e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
00aa24 91e0 1ad6 	LDS  R30,_timer1_G102
00aa26 30e0      	CPI  R30,0
00aa27 f041      	BREQ _0x2040098
00aa28 930a      	ST   -Y,R16
                +
00aa29 e0a0     +LDI R26 , LOW ( 0x0 )
00aa2a e0b0     +LDI R27 , HIGH ( 0x0 )
00aa2b e080     +LDI R24 , BYTE3 ( 0x0 )
00aa2c e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa2d def0      	RCALL _send_cmd_G102
00aa2e 30e0      	CPI  R30,0
00aa2f f409      	BRNE _0x2040099
                 _0x2040098:
00aa30 c001      	RJMP _0x2040097
                 _0x2040099:
00aa31 cff2      	RJMP _0x2040095
                 _0x2040097:
00aa32 91e0 1ad6 	LDS  R30,_timer1_G102
00aa34 30e0      	CPI  R30,0
00aa35 f049      	BREQ _0x204009B
00aa36 e5e0      	LDI  R30,LOW(80)
00aa37 93ea      	ST   -Y,R30
                +
00aa38 e0a0     +LDI R26 , LOW ( 0x200 )
00aa39 e0b2     +LDI R27 , HIGH ( 0x200 )
00aa3a e080     +LDI R24 , BYTE3 ( 0x200 )
00aa3b e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00aa3c dee1      	RCALL _send_cmd_G102
00aa3d 30e0      	CPI  R30,0
00aa3e f009      	BREQ _0x204009A
                 _0x204009B:
00aa3f e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
00aa40 9330 1ad8 	STS  _card_type_G102,R19
00aa42 de2b      	RCALL _release_spi_G102
00aa43 3030      	CPI  R19,0
00aa44 f051      	BREQ _0x204009D
00aa45 91e0 1ad5 	LDS  R30,_status_G102
00aa47 7fee      	ANDI R30,0xFE
00aa48 93e0 1ad5 	STS  _status_G102,R30
00aa4a e5e0      	LDI  R30,LOW(80)
00aa4b bdec      	OUT  0x2C,R30
00aa4c e0e1      	LDI  R30,LOW(1)
00aa4d bded      	OUT  0x2D,R30
00aa4e c011      	RJMP _0x204009E
                 _0x204009D:
00aa4f 9828      	CBI  0x5,0
00aa50 de03      	RCALL _wait_ready_G102
00aa51 de1c      	RCALL _release_spi_G102
00aa52 e0e0      	LDI  R30,LOW(0)
00aa53 bdec      	OUT  0x2C,R30
00aa54 b1e4      	IN   R30,0x4
00aa55 7fe0      	ANDI R30,LOW(0xF0)
00aa56 b9e4      	OUT  0x4,R30
00aa57 b1e5      	IN   R30,0x5
00aa58 7fe0      	ANDI R30,LOW(0xF0)
00aa59 b9e5      	OUT  0x5,R30
00aa5a 9820      	CBI  0x4,0
00aa5b 91e0 1ad5 	LDS  R30,_status_G102
00aa5d 60e1      	ORI  R30,1
00aa5e 93e0 1ad5 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
00aa60 91e0 1ad5 	LDS  R30,_status_G102
                 _0x20E0025:
00aa62 940e e47e 	CALL __LOADLOCR4
00aa64 9629      	ADIW R28,9
00aa65 9508      	RET
                 _disk_status:
00aa66 93aa      	ST   -Y,R26
00aa67 81e8      	LD   R30,Y
00aa68 30e0      	CPI  R30,0
00aa69 f011      	BREQ _0x204009F
00aa6a e0e1      	LDI  R30,LOW(1)
00aa6b c002      	RJMP _0x20E0023
                 _0x204009F:
00aa6c 91e0 1ad5 	LDS  R30,_status_G102
                 _0x20E0023:
00aa6e 9621      	ADIW R28,1
00aa6f 9508      	RET
                 _disk_read:
00aa70 93aa      	ST   -Y,R26
00aa71 81ef      	LDD  R30,Y+7
00aa72 30e0      	CPI  R30,0
00aa73 f419      	BRNE _0x20400A1
00aa74 81e8      	LD   R30,Y
00aa75 30e0      	CPI  R30,0
00aa76 f411      	BRNE _0x20400A0
                 _0x20400A1:
00aa77 e0e4      	LDI  R30,LOW(4)
00aa78 c352      	RJMP _0x20E0020
                 _0x20400A0:
00aa79 91e0 1ad5 	LDS  R30,_status_G102
00aa7b 70e1      	ANDI R30,LOW(0x1)
00aa7c f011      	BREQ _0x20400A3
00aa7d e0e3      	LDI  R30,LOW(3)
00aa7e c34c      	RJMP _0x20E0020
                 _0x20400A3:
00aa7f 91e0 1ad8 	LDS  R30,_card_type_G102
00aa81 70e8      	ANDI R30,LOW(0x8)
00aa82 f471      	BRNE _0x20400A4
                +
00aa83 81e9     +LDD R30 , Y + 1
00aa84 81fa     +LDD R31 , Y + 1 + 1
00aa85 816b     +LDD R22 , Y + 1 + 2
00aa86 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00aa87 e0a0     +LDI R26 , LOW ( 0x200 )
00aa88 e0b2     +LDI R27 , HIGH ( 0x200 )
00aa89 e080     +LDI R24 , BYTE3 ( 0x200 )
00aa8a e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00aa8b 940e e2fe 	CALL __MULD12U
                +
00aa8d 83e9     +STD Y + 1 , R30
00aa8e 83fa     +STD Y + 1 + 1 , R31
00aa8f 836b     +STD Y + 1 + 2 , R22
00aa90 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
00aa91 81a8      	LD   R26,Y
00aa92 30a1      	CPI  R26,LOW(0x1)
00aa93 f4b1      	BRNE _0x20400A5
00aa94 e5e1      	LDI  R30,LOW(81)
00aa95 93ea      	ST   -Y,R30
                +
00aa96 81aa     +LDD R26 , Y + 2
00aa97 81bb     +LDD R27 , Y + 2 + 1
00aa98 818c     +LDD R24 , Y + 2 + 2
00aa99 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00aa9a de83      	RCALL _send_cmd_G102
00aa9b 30e0      	CPI  R30,0
00aa9c f449      	BRNE _0x20400A7
00aa9d 81ed      	LDD  R30,Y+5
00aa9e 81fe      	LDD  R31,Y+5+1
00aa9f 93fa      	ST   -Y,R31
00aaa0 93ea      	ST   -Y,R30
00aaa1 e0a0      	LDI  R26,LOW(512)
00aaa2 e0b2      	LDI  R27,HIGH(512)
00aaa3 ddd1      	RCALL _rx_datablock_G102
00aaa4 30e0      	CPI  R30,0
00aaa5 f409      	BRNE _0x20400A8
                 _0x20400A7:
00aaa6 c002      	RJMP _0x20400A6
                 _0x20400A8:
00aaa7 e0e0      	LDI  R30,LOW(0)
00aaa8 83e8      	ST   Y,R30
                 _0x20400A6:
00aaa9 c023      	RJMP _0x20400A9
                 _0x20400A5:
00aaaa e5e2      	LDI  R30,LOW(82)
00aaab 93ea      	ST   -Y,R30
                +
00aaac 81aa     +LDD R26 , Y + 2
00aaad 81bb     +LDD R27 , Y + 2 + 1
00aaae 818c     +LDD R24 , Y + 2 + 2
00aaaf 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00aab0 de6d      	RCALL _send_cmd_G102
00aab1 30e0      	CPI  R30,0
00aab2 f4d1      	BRNE _0x20400AA
                 _0x20400AC:
00aab3 81ed      	LDD  R30,Y+5
00aab4 81fe      	LDD  R31,Y+5+1
00aab5 93fa      	ST   -Y,R31
00aab6 93ea      	ST   -Y,R30
00aab7 e0a0      	LDI  R26,LOW(512)
00aab8 e0b2      	LDI  R27,HIGH(512)
00aab9 ddbb      	RCALL _rx_datablock_G102
00aaba 30e0      	CPI  R30,0
00aabb f051      	BREQ _0x20400AD
00aabc 81ed      	LDD  R30,Y+5
00aabd 81fe      	LDD  R31,Y+5+1
00aabe 50e0      	SUBI R30,LOW(-512)
00aabf 4ffe      	SBCI R31,HIGH(-512)
00aac0 83ed      	STD  Y+5,R30
00aac1 83fe      	STD  Y+5+1,R31
00aac2 81e8      	LD   R30,Y
00aac3 50e1      	SUBI R30,LOW(1)
00aac4 83e8      	ST   Y,R30
00aac5 f769      	BRNE _0x20400AC
                 _0x20400AD:
00aac6 e4ec      	LDI  R30,LOW(76)
00aac7 93ea      	ST   -Y,R30
                +
00aac8 e0a0     +LDI R26 , LOW ( 0x0 )
00aac9 e0b0     +LDI R27 , HIGH ( 0x0 )
00aaca e080     +LDI R24 , BYTE3 ( 0x0 )
00aacb e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aacc de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
00aacd dda0      	RCALL _release_spi_G102
00aace 81e8      	LD   R30,Y
00aacf 30e0      	CPI  R30,0
00aad0 f011      	BREQ _0x20400AF
00aad1 e0e1      	LDI  R30,LOW(1)
00aad2 c001      	RJMP _0x20400B0
                 _0x20400AF:
00aad3 e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
00aad4 c2f6      	RJMP _0x20E0020
                 _disk_write:
00aad5 93aa      	ST   -Y,R26
00aad6 81ef      	LDD  R30,Y+7
00aad7 30e0      	CPI  R30,0
00aad8 f419      	BRNE _0x20400B3
00aad9 81e8      	LD   R30,Y
00aada 30e0      	CPI  R30,0
00aadb f411      	BRNE _0x20400B2
                 _0x20400B3:
00aadc e0e4      	LDI  R30,LOW(4)
00aadd c2ed      	RJMP _0x20E0020
                 _0x20400B2:
00aade 91e0 1ad5 	LDS  R30,_status_G102
00aae0 70e1      	ANDI R30,LOW(0x1)
00aae1 f011      	BREQ _0x20400B5
00aae2 e0e3      	LDI  R30,LOW(3)
00aae3 c2e7      	RJMP _0x20E0020
                 _0x20400B5:
00aae4 91e0 1ad5 	LDS  R30,_status_G102
00aae6 70e4      	ANDI R30,LOW(0x4)
00aae7 f011      	BREQ _0x20400B6
00aae8 e0e2      	LDI  R30,LOW(2)
00aae9 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
00aaea 91e0 1ad8 	LDS  R30,_card_type_G102
00aaec 70e8      	ANDI R30,LOW(0x8)
00aaed f471      	BRNE _0x20400B7
                +
00aaee 81e9     +LDD R30 , Y + 1
00aaef 81fa     +LDD R31 , Y + 1 + 1
00aaf0 816b     +LDD R22 , Y + 1 + 2
00aaf1 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00aaf2 e0a0     +LDI R26 , LOW ( 0x200 )
00aaf3 e0b2     +LDI R27 , HIGH ( 0x200 )
00aaf4 e080     +LDI R24 , BYTE3 ( 0x200 )
00aaf5 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00aaf6 940e e2fe 	CALL __MULD12U
                +
00aaf8 83e9     +STD Y + 1 , R30
00aaf9 83fa     +STD Y + 1 + 1 , R31
00aafa 836b     +STD Y + 1 + 2 , R22
00aafb 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
00aafc 81a8      	LD   R26,Y
00aafd 30a1      	CPI  R26,LOW(0x1)
00aafe f4a9      	BRNE _0x20400B8
00aaff e5e8      	LDI  R30,LOW(88)
00ab00 93ea      	ST   -Y,R30
                +
00ab01 81aa     +LDD R26 , Y + 2
00ab02 81bb     +LDD R27 , Y + 2 + 1
00ab03 818c     +LDD R24 , Y + 2 + 2
00ab04 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00ab05 de18      	RCALL _send_cmd_G102
00ab06 30e0      	CPI  R30,0
00ab07 f441      	BRNE _0x20400BA
00ab08 81ed      	LDD  R30,Y+5
00ab09 81fe      	LDD  R31,Y+5+1
00ab0a 93fa      	ST   -Y,R31
00ab0b 93ea      	ST   -Y,R30
00ab0c efae      	LDI  R26,LOW(254)
00ab0d ddcc      	RCALL _tx_datablock_G102
00ab0e 30e0      	CPI  R30,0
00ab0f f409      	BRNE _0x20400BB
                 _0x20400BA:
00ab10 c002      	RJMP _0x20400B9
                 _0x20400BB:
00ab11 e0e0      	LDI  R30,LOW(0)
00ab12 83e8      	ST   Y,R30
                 _0x20400B9:
00ab13 c030      	RJMP _0x20400BC
                 _0x20400B8:
00ab14 91e0 1ad8 	LDS  R30,_card_type_G102
00ab16 70e6      	ANDI R30,LOW(0x6)
00ab17 f039      	BREQ _0x20400BD
00ab18 ede7      	LDI  R30,LOW(215)
00ab19 93ea      	ST   -Y,R30
00ab1a 81a9      	LDD  R26,Y+1
00ab1b 27bb      	CLR  R27
00ab1c 2788      	CLR  R24
00ab1d 2799      	CLR  R25
00ab1e ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
00ab1f e5e9      	LDI  R30,LOW(89)
00ab20 93ea      	ST   -Y,R30
                +
00ab21 81aa     +LDD R26 , Y + 2
00ab22 81bb     +LDD R27 , Y + 2 + 1
00ab23 818c     +LDD R24 , Y + 2 + 2
00ab24 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00ab25 ddf8      	RCALL _send_cmd_G102
00ab26 30e0      	CPI  R30,0
00ab27 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
00ab28 81ed      	LDD  R30,Y+5
00ab29 81fe      	LDD  R31,Y+5+1
00ab2a 93fa      	ST   -Y,R31
00ab2b 93ea      	ST   -Y,R30
00ab2c efac      	LDI  R26,LOW(252)
00ab2d ddac      	RCALL _tx_datablock_G102
00ab2e 30e0      	CPI  R30,0
00ab2f f051      	BREQ _0x20400C1
00ab30 81ed      	LDD  R30,Y+5
00ab31 81fe      	LDD  R31,Y+5+1
00ab32 50e0      	SUBI R30,LOW(-512)
00ab33 4ffe      	SBCI R31,HIGH(-512)
00ab34 83ed      	STD  Y+5,R30
00ab35 83fe      	STD  Y+5+1,R31
00ab36 81e8      	LD   R30,Y
00ab37 50e1      	SUBI R30,LOW(1)
00ab38 83e8      	ST   Y,R30
00ab39 f771      	BRNE _0x20400C0
                 _0x20400C1:
00ab3a e0e0      	LDI  R30,LOW(0)
00ab3b e0f0      	LDI  R31,HIGH(0)
00ab3c 93fa      	ST   -Y,R31
00ab3d 93ea      	ST   -Y,R30
00ab3e efad      	LDI  R26,LOW(253)
00ab3f dd9a      	RCALL _tx_datablock_G102
00ab40 30e0      	CPI  R30,0
00ab41 f411      	BRNE _0x20400C3
00ab42 e0e1      	LDI  R30,LOW(1)
00ab43 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
00ab44 dd29      	RCALL _release_spi_G102
00ab45 81e8      	LD   R30,Y
00ab46 30e0      	CPI  R30,0
00ab47 f011      	BREQ _0x20400C4
00ab48 e0e1      	LDI  R30,LOW(1)
00ab49 c001      	RJMP _0x20400C5
                 _0x20400C4:
00ab4a e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
00ab4b c27f      	RJMP _0x20E0020
                 _disk_ioctl:
00ab4c 93ba      	ST   -Y,R27
00ab4d 93aa      	ST   -Y,R26
00ab4e 9760      	SBIW R28,16
00ab4f 940e e475 	CALL __SAVELOCR6
00ab51 8de9      	LDD  R30,Y+25
00ab52 30e0      	CPI  R30,0
00ab53 f011      	BREQ _0x20400C7
00ab54 e0e4      	LDI  R30,LOW(4)
00ab55 c182      	RJMP _0x20E0022
                 _0x20400C7:
00ab56 e011      	LDI  R17,LOW(1)
00ab57 91e0 1ad5 	LDS  R30,_status_G102
00ab59 70e1      	ANDI R30,LOW(0x1)
00ab5a f011      	BREQ _0x20400C8
00ab5b e0e3      	LDI  R30,LOW(3)
00ab5c c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
00ab5d 894e     +LDD R20 , Y + 22
00ab5e 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
00ab5f 8de8      	LDD  R30,Y+24
00ab60 30e0      	CPI  R30,0
00ab61 f431      	BRNE _0x20400CC
00ab62 9828      	CBI  0x5,0
00ab63 dcf0      	RCALL _wait_ready_G102
00ab64 3fef      	CPI  R30,LOW(0xFF)
00ab65 f409      	BRNE _0x20400CD
00ab66 e010      	LDI  R17,LOW(0)
                 _0x20400CD:
00ab67 c16e      	RJMP _0x20400CB
                 _0x20400CC:
00ab68 30e1      	CPI  R30,LOW(0x1)
00ab69 f011      	BREQ PC+3
00ab6a 940c abc6 	JMP _0x20400CE
00ab6c e4e9      	LDI  R30,LOW(73)
00ab6d 93ea      	ST   -Y,R30
                +
00ab6e e0a0     +LDI R26 , LOW ( 0x0 )
00ab6f e0b0     +LDI R27 , HIGH ( 0x0 )
00ab70 e080     +LDI R24 , BYTE3 ( 0x0 )
00ab71 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ab72 ddab      	RCALL _send_cmd_G102
00ab73 30e0      	CPI  R30,0
00ab74 f449      	BRNE _0x20400D0
00ab75 01fe      	MOVW R30,R28
00ab76 9636      	ADIW R30,6
00ab77 93fa      	ST   -Y,R31
00ab78 93ea      	ST   -Y,R30
00ab79 e1a0      	LDI  R26,LOW(16)
00ab7a e0b0      	LDI  R27,0
00ab7b dcf9      	RCALL _rx_datablock_G102
00ab7c 30e0      	CPI  R30,0
00ab7d f409      	BRNE _0x20400D1
                 _0x20400D0:
00ab7e c046      	RJMP _0x20400CF
                 _0x20400D1:
00ab7f 81ee      	LDD  R30,Y+6
00ab80 95e2      	SWAP R30
00ab81 70ef      	ANDI R30,0xF
00ab82 95e6      	LSR  R30
00ab83 95e6      	LSR  R30
00ab84 30e1      	CPI  R30,LOW(0x1)
00ab85 f469      	BRNE _0x20400D2
00ab86 e0e0      	LDI  R30,0
00ab87 85fe      	LDD  R31,Y+14
00ab88 85af      	LDD  R26,Y+15
00ab89 e0b0      	LDI  R27,0
00ab8a 0fea      	ADD  R30,R26
00ab8b 1ffb      	ADC  R31,R27
00ab8c 9631      	ADIW R30,1
00ab8d 019f      	MOVW R18,R30
00ab8e 01d9      	MOVW R26,R18
00ab8f 2788      	CLR  R24
00ab90 2799      	CLR  R25
00ab91 e0ea      	LDI  R30,LOW(10)
00ab92 c02c      	RJMP _0x2040101
                 _0x20400D2:
00ab93 85eb      	LDD  R30,Y+11
00ab94 70ef      	ANDI R30,LOW(0xF)
00ab95 2fae      	MOV  R26,R30
00ab96 89e8      	LDD  R30,Y+16
00ab97 78e0      	ANDI R30,LOW(0x80)
00ab98 1fee      	ROL  R30
00ab99 e0e0      	LDI  R30,0
00ab9a 1fee      	ROL  R30
00ab9b 0fae      	ADD  R26,R30
00ab9c 85ef      	LDD  R30,Y+15
00ab9d 70e3      	ANDI R30,LOW(0x3)
00ab9e 0fee      	LSL  R30
00ab9f 0fea      	ADD  R30,R26
00aba0 5fee      	SUBI R30,-LOW(2)
00aba1 2f0e      	MOV  R16,R30
00aba2 85ee      	LDD  R30,Y+14
00aba3 95e2      	SWAP R30
00aba4 70ef      	ANDI R30,0xF
00aba5 95e6      	LSR  R30
00aba6 95e6      	LSR  R30
00aba7 2fae      	MOV  R26,R30
00aba8 85ed      	LDD  R30,Y+13
00aba9 e0f0      	LDI  R31,0
00abaa 940e e2a7 	CALL __LSLW2
00abac e0b0      	LDI  R27,0
00abad 0fae      	ADD  R26,R30
00abae 1fbf      	ADC  R27,R31
00abaf 85ec      	LDD  R30,Y+12
00abb0 70e3      	ANDI R30,LOW(0x3)
00abb1 e0f0      	LDI  R31,0
00abb2 940e e2a7 	CALL __LSLW2
00abb4 2ffe      	MOV  R31,R30
00abb5 e0e0      	LDI  R30,0
00abb6 0fea      	ADD  R30,R26
00abb7 1ffb      	ADC  R31,R27
00abb8 9631      	ADIW R30,1
00abb9 019f      	MOVW R18,R30
00abba 01d9      	MOVW R26,R18
00abbb 2788      	CLR  R24
00abbc 2799      	CLR  R25
00abbd 2fe0      	MOV  R30,R16
00abbe 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
00abbf 940e e28b 	CALL __LSLD12
00abc1 01da      	MOVW R26,R20
00abc2 940e e3db 	CALL __PUTDP1
00abc4 e010      	LDI  R17,LOW(0)
                 _0x20400CF:
00abc5 c110      	RJMP _0x20400CB
                 _0x20400CE:
00abc6 30e2      	CPI  R30,LOW(0x2)
00abc7 f439      	BRNE _0x20400D4
00abc8 01da      	MOVW R26,R20
00abc9 e0e0      	LDI  R30,LOW(512)
00abca e0f2      	LDI  R31,HIGH(512)
00abcb 93ed      	ST   X+,R30
00abcc 93fc      	ST   X,R31
00abcd e010      	LDI  R17,LOW(0)
00abce c107      	RJMP _0x20400CB
                 _0x20400D4:
00abcf 30e3      	CPI  R30,LOW(0x3)
00abd0 f011      	BREQ PC+3
00abd1 940c ac7b 	JMP _0x20400D5
00abd3 91e0 1ad8 	LDS  R30,_card_type_G102
00abd5 70e4      	ANDI R30,LOW(0x4)
00abd6 f179      	BREQ _0x20400D6
00abd7 eced      	LDI  R30,LOW(205)
00abd8 93ea      	ST   -Y,R30
                +
00abd9 e0a0     +LDI R26 , LOW ( 0x0 )
00abda e0b0     +LDI R27 , HIGH ( 0x0 )
00abdb e080     +LDI R24 , BYTE3 ( 0x0 )
00abdc e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00abdd dd40      	RCALL _send_cmd_G102
00abde 30e0      	CPI  R30,0
00abdf f529      	BRNE _0x20400D7
00abe0 efef      	LDI  R30,LOW(255)
00abe1 bdee      	OUT  0x2E,R30
                 _0x20400D8:
00abe2 b5ed      	IN   R30,0x2D
00abe3 ffe7      	SBRS R30,7
00abe4 cffd      	RJMP _0x20400D8
00abe5 01fe      	MOVW R30,R28
00abe6 9636      	ADIW R30,6
00abe7 93fa      	ST   -Y,R31
00abe8 93ea      	ST   -Y,R30
00abe9 e1a0      	LDI  R26,LOW(16)
00abea e0b0      	LDI  R27,0
00abeb dc89      	RCALL _rx_datablock_G102
00abec 30e0      	CPI  R30,0
00abed f0b9      	BREQ _0x20400DB
00abee e300      	LDI  R16,LOW(48)
                 _0x20400DD:
00abef 3000      	CPI  R16,0
00abf0 f039      	BREQ _0x20400DE
00abf1 efef      	LDI  R30,LOW(255)
00abf2 bdee      	OUT  0x2E,R30
                 _0x20400DF:
00abf3 b5ed      	IN   R30,0x2D
00abf4 ffe7      	SBRS R30,7
00abf5 cffd      	RJMP _0x20400DF
00abf6 5001      	SUBI R16,1
00abf7 cff7      	RJMP _0x20400DD
                 _0x20400DE:
00abf8 89e8      	LDD  R30,Y+16
00abf9 95e2      	SWAP R30
00abfa 70ef      	ANDI R30,0xF
                +
00abfb e1a0     +LDI R26 , LOW ( 0x10 )
00abfc e0b0     +LDI R27 , HIGH ( 0x10 )
00abfd e080     +LDI R24 , BYTE3 ( 0x10 )
00abfe e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
00abff 940e e28b 	CALL __LSLD12
00ac01 01da      	MOVW R26,R20
00ac02 940e e3db 	CALL __PUTDP1
00ac04 e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
00ac05 c074      	RJMP _0x20400E2
                 _0x20400D6:
00ac06 e4e9      	LDI  R30,LOW(73)
00ac07 93ea      	ST   -Y,R30
                +
00ac08 e0a0     +LDI R26 , LOW ( 0x0 )
00ac09 e0b0     +LDI R27 , HIGH ( 0x0 )
00ac0a e080     +LDI R24 , BYTE3 ( 0x0 )
00ac0b e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ac0c dd11      	RCALL _send_cmd_G102
00ac0d 30e0      	CPI  R30,0
00ac0e f449      	BRNE _0x20400E4
00ac0f 01fe      	MOVW R30,R28
00ac10 9636      	ADIW R30,6
00ac11 93fa      	ST   -Y,R31
00ac12 93ea      	ST   -Y,R30
00ac13 e1a0      	LDI  R26,LOW(16)
00ac14 e0b0      	LDI  R27,0
00ac15 dc5f      	RCALL _rx_datablock_G102
00ac16 30e0      	CPI  R30,0
00ac17 f409      	BRNE _0x20400E5
                 _0x20400E4:
00ac18 c061      	RJMP _0x20400E3
                 _0x20400E5:
00ac19 91e0 1ad8 	LDS  R30,_card_type_G102
00ac1b 70e2      	ANDI R30,LOW(0x2)
00ac1c f151      	BREQ _0x20400E6
00ac1d 89e8      	LDD  R30,Y+16
00ac1e 73ef      	ANDI R30,LOW(0x3F)
00ac1f 27ff      	CLR  R31
00ac20 2766      	CLR  R22
00ac21 2777      	CLR  R23
00ac22 940e e2c3 	CALL __LSLD1
00ac24 937f      	PUSH R23
00ac25 936f      	PUSH R22
00ac26 93ff      	PUSH R31
00ac27 93ef      	PUSH R30
00ac28 89e9      	LDD  R30,Y+17
00ac29 78e0      	ANDI R30,LOW(0x80)
00ac2a 27ff      	CLR  R31
00ac2b 2766      	CLR  R22
00ac2c 2777      	CLR  R23
00ac2d 01df      	MOVW R26,R30
00ac2e 01cb      	MOVW R24,R22
00ac2f e0e7      	LDI  R30,LOW(7)
00ac30 940e e297 	CALL __LSRD12
00ac32 91af      	POP  R26
00ac33 91bf      	POP  R27
00ac34 918f      	POP  R24
00ac35 919f      	POP  R25
00ac36 940e e258 	CALL __ADDD12
                +
00ac38 5fef     +SUBI R30 , LOW ( - 1 )
00ac39 4fff     +SBCI R31 , HIGH ( - 1 )
00ac3a 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00ac3b 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00ac3c 01df      	MOVW R26,R30
00ac3d 01cb      	MOVW R24,R22
00ac3e 89eb      	LDD  R30,Y+19
00ac3f 95e2      	SWAP R30
00ac40 70ef      	ANDI R30,0xF
00ac41 95e6      	LSR  R30
00ac42 95e6      	LSR  R30
00ac43 50e1      	SUBI R30,LOW(1)
00ac44 940e e28b 	CALL __LSLD12
00ac46 c02f      	RJMP _0x2040102
                 _0x20400E6:
00ac47 89e8      	LDD  R30,Y+16
00ac48 77ec      	ANDI R30,LOW(0x7C)
00ac49 95e6      	LSR  R30
00ac4a 95e6      	LSR  R30
00ac4b 27ff      	CLR  R31
00ac4c 2766      	CLR  R22
00ac4d 2777      	CLR  R23
                +
00ac4e 5fef     +SUBI R30 , LOW ( - 1 )
00ac4f 4fff     +SBCI R31 , HIGH ( - 1 )
00ac50 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00ac51 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00ac52 937f      	PUSH R23
00ac53 936f      	PUSH R22
00ac54 93ff      	PUSH R31
00ac55 93ef      	PUSH R30
00ac56 89e9      	LDD  R30,Y+17
00ac57 70e3      	ANDI R30,LOW(0x3)
00ac58 27ff      	CLR  R31
00ac59 2766      	CLR  R22
00ac5a 2777      	CLR  R23
00ac5b 01df      	MOVW R26,R30
00ac5c 01cb      	MOVW R24,R22
00ac5d e0e3      	LDI  R30,LOW(3)
00ac5e 940e e28b 	CALL __LSLD12
00ac60 01df      	MOVW R26,R30
00ac61 01cb      	MOVW R24,R22
00ac62 89e9      	LDD  R30,Y+17
00ac63 7ee0      	ANDI R30,LOW(0xE0)
00ac64 95e2      	SWAP R30
00ac65 70ef      	ANDI R30,0xF
00ac66 95e6      	LSR  R30
00ac67 27ff      	CLR  R31
00ac68 2766      	CLR  R22
00ac69 2777      	CLR  R23
00ac6a 940e e258 	CALL __ADDD12
                +
00ac6c 5fef     +SUBI R30 , LOW ( - 1 )
00ac6d 4fff     +SBCI R31 , HIGH ( - 1 )
00ac6e 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00ac6f 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00ac70 91af      	POP  R26
00ac71 91bf      	POP  R27
00ac72 918f      	POP  R24
00ac73 919f      	POP  R25
00ac74 940e e2fe 	CALL __MULD12U
                 _0x2040102:
00ac76 01da      	MOVW R26,R20
00ac77 940e e3db 	CALL __PUTDP1
00ac79 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
00ac7a c05b      	RJMP _0x20400CB
                 _0x20400D5:
00ac7b 30ea      	CPI  R30,LOW(0xA)
00ac7c f431      	BRNE _0x20400E8
00ac7d 91e0 1ad8 	LDS  R30,_card_type_G102
00ac7f 01da      	MOVW R26,R20
00ac80 93ec      	ST   X,R30
00ac81 e010      	LDI  R17,LOW(0)
00ac82 c053      	RJMP _0x20400CB
                 _0x20400E8:
00ac83 30eb      	CPI  R30,LOW(0xB)
00ac84 f499      	BRNE _0x20400E9
00ac85 e4e9      	LDI  R30,LOW(73)
00ac86 93ea      	ST   -Y,R30
                +
00ac87 e0a0     +LDI R26 , LOW ( 0x0 )
00ac88 e0b0     +LDI R27 , HIGH ( 0x0 )
00ac89 e080     +LDI R24 , BYTE3 ( 0x0 )
00ac8a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00ac8b dc92      	RCALL _send_cmd_G102
00ac8c 30e0      	CPI  R30,0
00ac8d f439      	BRNE _0x20400EB
00ac8e 935a      	ST   -Y,R21
00ac8f 934a      	ST   -Y,R20
00ac90 e1a0      	LDI  R26,LOW(16)
00ac91 e0b0      	LDI  R27,0
00ac92 dbe2      	RCALL _rx_datablock_G102
00ac93 30e0      	CPI  R30,0
00ac94 f409      	BRNE _0x20400EC
                 _0x20400EB:
00ac95 c001      	RJMP _0x20400EA
                 _0x20400EC:
00ac96 e010      	LDI  R17,LOW(0)
                 _0x20400EA:
00ac97 c03e      	RJMP _0x20400CB
                 _0x20400E9:
00ac98 30ec      	CPI  R30,LOW(0xC)
00ac99 f499      	BRNE _0x20400ED
00ac9a e4ea      	LDI  R30,LOW(74)
00ac9b 93ea      	ST   -Y,R30
                +
00ac9c e0a0     +LDI R26 , LOW ( 0x0 )
00ac9d e0b0     +LDI R27 , HIGH ( 0x0 )
00ac9e e080     +LDI R24 , BYTE3 ( 0x0 )
00ac9f e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aca0 dc7d      	RCALL _send_cmd_G102
00aca1 30e0      	CPI  R30,0
00aca2 f439      	BRNE _0x20400EF
00aca3 935a      	ST   -Y,R21
00aca4 934a      	ST   -Y,R20
00aca5 e1a0      	LDI  R26,LOW(16)
00aca6 e0b0      	LDI  R27,0
00aca7 dbcd      	RCALL _rx_datablock_G102
00aca8 30e0      	CPI  R30,0
00aca9 f409      	BRNE _0x20400F0
                 _0x20400EF:
00acaa c001      	RJMP _0x20400EE
                 _0x20400F0:
00acab e010      	LDI  R17,LOW(0)
                 _0x20400EE:
00acac c029      	RJMP _0x20400CB
                 _0x20400ED:
00acad 30ed      	CPI  R30,LOW(0xD)
00acae f469      	BRNE _0x20400F1
00acaf e7ea      	LDI  R30,LOW(122)
00acb0 93ea      	ST   -Y,R30
                +
00acb1 e0a0     +LDI R26 , LOW ( 0x0 )
00acb2 e0b0     +LDI R27 , HIGH ( 0x0 )
00acb3 e080     +LDI R24 , BYTE3 ( 0x0 )
00acb4 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00acb5 dc68      	RCALL _send_cmd_G102
00acb6 30e0      	CPI  R30,0
00acb7 f419      	BRNE _0x20400F2
00acb8 01da      	MOVW R26,R20
00acb9 dcc6      	RCALL _rx_spi4_G102
00acba e010      	LDI  R17,LOW(0)
                 _0x20400F2:
00acbb c01a      	RJMP _0x20400CB
                 _0x20400F1:
00acbc 30ee      	CPI  R30,LOW(0xE)
00acbd f4b9      	BRNE _0x20400F9
00acbe eced      	LDI  R30,LOW(205)
00acbf 93ea      	ST   -Y,R30
                +
00acc0 e0a0     +LDI R26 , LOW ( 0x0 )
00acc1 e0b0     +LDI R27 , HIGH ( 0x0 )
00acc2 e080     +LDI R24 , BYTE3 ( 0x0 )
00acc3 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00acc4 dc59      	RCALL _send_cmd_G102
00acc5 30e0      	CPI  R30,0
00acc6 f469      	BRNE _0x20400F4
00acc7 efef      	LDI  R30,LOW(255)
00acc8 bdee      	OUT  0x2E,R30
                 _0x20400F5:
00acc9 b5ed      	IN   R30,0x2D
00acca ffe7      	SBRS R30,7
00accb cffd      	RJMP _0x20400F5
00accc 935a      	ST   -Y,R21
00accd 934a      	ST   -Y,R20
00acce e4a0      	LDI  R26,LOW(64)
00accf e0b0      	LDI  R27,0
00acd0 dba4      	RCALL _rx_datablock_G102
00acd1 30e0      	CPI  R30,0
00acd2 f009      	BREQ _0x20400F8
00acd3 e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
00acd4 c001      	RJMP _0x20400CB
                 _0x20400F9:
00acd5 e014      	LDI  R17,LOW(4)
                 _0x20400CB:
00acd6 db97      	RCALL _release_spi_G102
00acd7 2fe1      	MOV  R30,R17
                 _0x20E0022:
00acd8 940e e47c 	CALL __LOADLOCR6
00acda 966a      	ADIW R28,26
00acdb 9508      	RET
                 _disk_timerproc:
00acdc 931a      	ST   -Y,R17
00acdd 930a      	ST   -Y,R16
00acde 9110 1ad6 	LDS  R17,_timer1_G102
00ace0 3010      	CPI  R17,0
00ace1 f019      	BREQ _0x20400FA
00ace2 5011      	SUBI R17,LOW(1)
00ace3 9310 1ad6 	STS  _timer1_G102,R17
                 _0x20400FA:
00ace5 9110 1ad7 	LDS  R17,_timer2_G102
00ace7 3010      	CPI  R17,0
00ace8 f019      	BREQ _0x20400FB
00ace9 5011      	SUBI R17,LOW(1)
00acea 9310 1ad7 	STS  _timer2_G102,R17
                 _0x20400FB:
00acec 9110 1ad9 	LDS  R17,_pv_S102000B000
00acee b1e0      	IN   R30,0x0
00acef 70e2      	ANDI R30,LOW(0x2)
00acf0 2fae      	MOV  R26,R30
00acf1 b1e0      	IN   R30,0x0
00acf2 70e1      	ANDI R30,LOW(0x1)
00acf3 2bea      	OR   R30,R26
00acf4 93e0 1ad9 	STS  _pv_S102000B000,R30
00acf6 17e1      	CP   R30,R17
00acf7 f481      	BRNE _0x20400FC
00acf8 9100 1ad5 	LDS  R16,_status_G102
00acfa 70e2      	ANDI R30,LOW(0x2)
00acfb f011      	BREQ _0x20400FD
00acfc 6004      	ORI  R16,LOW(4)
00acfd c001      	RJMP _0x20400FE
                 _0x20400FD:
00acfe 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
00acff 91e0 1ad9 	LDS  R30,_pv_S102000B000
00ad01 70e1      	ANDI R30,LOW(0x1)
00ad02 f011      	BREQ _0x20400FF
00ad03 6003      	ORI  R16,LOW(3)
00ad04 c001      	RJMP _0x2040100
                 _0x20400FF:
00ad05 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
00ad06 9300 1ad5 	STS  _status_G102,R16
                 _0x20400FC:
00ad08 9109      	LD   R16,Y+
00ad09 9119      	LD   R17,Y+
00ad0a 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
00ad0b 9727      	SBIW R28,7
00ad0c 91a0 1463 	LDS  R26,_prtc_get_time
00ad0e 91b0 1464 	LDS  R27,_prtc_get_time+1
00ad10 9180 1465 	LDS  R24,_prtc_get_time+2
00ad12 9190 1466 	LDS  R25,_prtc_get_time+3
00ad14 940e e465 	CALL __CPD02
00ad16 f059      	BREQ _0x2060004
00ad17 91a0 1467 	LDS  R26,_prtc_get_date
00ad19 91b0 1468 	LDS  R27,_prtc_get_date+1
00ad1b 9180 1469 	LDS  R24,_prtc_get_date+2
00ad1d 9190 146a 	LDS  R25,_prtc_get_date+3
00ad1f 940e e465 	CALL __CPD02
00ad21 f429      	BRNE _0x2060003
                 _0x2060004:
                +
00ad22 e0e0     +LDI R30 , LOW ( 0x3A210000 )
00ad23 e0f0     +LDI R31 , HIGH ( 0x3A210000 )
00ad24 e261     +LDI R22 , BYTE3 ( 0x3A210000 )
00ad25 e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
00ad26 c070      	RJMP _0x20E0021
                 _0x2060003:
00ad27 940e c4bf 	CALL SUBOPT_0x56
00ad29 940e c519 	CALL SUBOPT_0x63
00ad2b 01de      	MOVW R26,R28
00ad2c 9618      	ADIW R26,8
                +
00ad2d 91e0 1463+LDS R30 , _prtc_get_time + ( 0 )
00ad2f 91f0 1464+LDS R31 , _prtc_get_time + ( 0 ) + 1
00ad31 9160 1465+LDS R22 , _prtc_get_time + ( 0 ) + 2
00ad33 bf6c     +OUT EIND , R22
00ad34 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
00ad35 01fe      	MOVW R30,R28
00ad36 9633      	ADIW R30,3
00ad37 940e d3dc 	CALL SUBOPT_0x29E
00ad39 01de      	MOVW R26,R28
00ad3a 9614      	ADIW R26,4
                +
00ad3b 91e0 1467+LDS R30 , _prtc_get_date + ( 0 )
00ad3d 91f0 1468+LDS R31 , _prtc_get_date + ( 0 ) + 1
00ad3f 9160 1469+LDS R22 , _prtc_get_date + ( 0 ) + 2
00ad41 bf6c     +OUT EIND , R22
00ad42 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
00ad43 81e8      	LD   R30,Y
00ad44 81f9      	LDD  R31,Y+1
00ad45 5bec      	SUBI R30,LOW(1980)
00ad46 40f7      	SBCI R31,HIGH(1980)
00ad47 2766      	CLR  R22
00ad48 2777      	CLR  R23
00ad49 01df      	MOVW R26,R30
00ad4a 01cb      	MOVW R24,R22
00ad4b e1e9      	LDI  R30,LOW(25)
00ad4c 940e e28b 	CALL __LSLD12
00ad4e 937f      	PUSH R23
00ad4f 936f      	PUSH R22
00ad50 93ff      	PUSH R31
00ad51 93ef      	PUSH R30
00ad52 81ea      	LDD  R30,Y+2
00ad53 940e dce6 	CALL SUBOPT_0x3B0
00ad55 01df      	MOVW R26,R30
00ad56 01cb      	MOVW R24,R22
00ad57 e1e5      	LDI  R30,LOW(21)
00ad58 940e e28b 	CALL __LSLD12
00ad5a 91af      	POP  R26
00ad5b 91bf      	POP  R27
00ad5c 918f      	POP  R24
00ad5d 919f      	POP  R25
00ad5e 940e e271 	CALL __ORD12
00ad60 01df      	MOVW R26,R30
00ad61 01cb      	MOVW R24,R22
00ad62 81eb      	LDD  R30,Y+3
00ad63 940e dce6 	CALL SUBOPT_0x3B0
00ad65 940e e2d2 	CALL __LSLD16
00ad67 940e e271 	CALL __ORD12
00ad69 937f      	PUSH R23
00ad6a 936f      	PUSH R22
00ad6b 93ff      	PUSH R31
00ad6c 93ef      	PUSH R30
00ad6d 81ee      	LDD  R30,Y+6
00ad6e 940e dce6 	CALL SUBOPT_0x3B0
00ad70 01df      	MOVW R26,R30
00ad71 01cb      	MOVW R24,R22
00ad72 e0eb      	LDI  R30,LOW(11)
00ad73 940e e28b 	CALL __LSLD12
00ad75 91af      	POP  R26
00ad76 91bf      	POP  R27
00ad77 918f      	POP  R24
00ad78 919f      	POP  R25
00ad79 940e e271 	CALL __ORD12
00ad7b 937f      	PUSH R23
00ad7c 936f      	PUSH R22
00ad7d 93ff      	PUSH R31
00ad7e 93ef      	PUSH R30
00ad7f 81ed      	LDD  R30,Y+5
00ad80 940e dce6 	CALL SUBOPT_0x3B0
00ad82 01df      	MOVW R26,R30
00ad83 01cb      	MOVW R24,R22
00ad84 e0e5      	LDI  R30,LOW(5)
00ad85 940e e28b 	CALL __LSLD12
00ad87 91af      	POP  R26
00ad88 91bf      	POP  R27
00ad89 918f      	POP  R24
00ad8a 919f      	POP  R25
00ad8b 940e e271 	CALL __ORD12
00ad8d 01df      	MOVW R26,R30
00ad8e 01cb      	MOVW R24,R22
00ad8f 81ec      	LDD  R30,Y+4
00ad90 e0f0      	LDI  R31,0
00ad91 95f5      	ASR  R31
00ad92 95e7      	ROR  R30
00ad93 940e e2dd 	CALL __CWD1
00ad95 940e e271 	CALL __ORD12
                 _0x20E0021:
00ad97 9627      	ADIW R28,7
00ad98 9508      	RET
                 _mem_cpy_G103:
00ad99 940e c5d9 	CALL SUBOPT_0x7F
                +
00ad9b 8508     +LDD R16 , Y + 8
00ad9c 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
00ad9d 812e     +LDD R18 , Y + 6
00ad9e 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
00ad9f 81ec      	LDD  R30,Y+4
00ada0 81fd      	LDD  R31,Y+4+1
00ada1 9731      	SBIW R30,1
00ada2 83ec      	STD  Y+4,R30
00ada3 83fd      	STD  Y+4+1,R31
00ada4 9631      	ADIW R30,1
00ada5 f061      	BREQ _0x2060008
00ada6 931f      	PUSH R17
00ada7 930f      	PUSH R16
                +
00ada8 5f0f     +SUBI R16 , LOW ( - 1 )
00ada9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00adaa 01d9      	MOVW R26,R18
                +
00adab 5f2f     +SUBI R18 , LOW ( - 1 )
00adac 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00adad 91ec      	LD   R30,X
00adae 91af      	POP  R26
00adaf 91bf      	POP  R27
00adb0 93ec      	ST   X,R30
00adb1 cfed      	RJMP _0x2060006
                 _0x2060008:
00adb2 940e e47e 	CALL __LOADLOCR4
00adb4 c433      	RJMP _0x20E0018
                 _mem_set_G103:
00adb5 940e c5e5 	CALL SUBOPT_0x81
                +
00adb7 810e     +LDD R16 , Y + 6
00adb8 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
00adb9 81ea      	LDD  R30,Y+2
00adba 81fb      	LDD  R31,Y+2+1
00adbb 9731      	SBIW R30,1
00adbc 83ea      	STD  Y+2,R30
00adbd 83fb      	STD  Y+2+1,R31
00adbe 9631      	ADIW R30,1
00adbf f049      	BREQ _0x206000E
00adc0 931f      	PUSH R17
00adc1 930f      	PUSH R16
                +
00adc2 5f0f     +SUBI R16 , LOW ( - 1 )
00adc3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00adc4 81ec      	LDD  R30,Y+4
00adc5 91af      	POP  R26
00adc6 91bf      	POP  R27
00adc7 93ec      	ST   X,R30
00adc8 cff0      	RJMP _0x206000C
                 _0x206000E:
00adc9 8119      	LDD  R17,Y+1
00adca 8108      	LDD  R16,Y+0
                 _0x20E0020:
00adcb 9628      	ADIW R28,8
00adcc 9508      	RET
                 _mem_cmp_G103:
00adcd 940e cce7 	CALL SUBOPT_0x1A8
                +
00adcf 850a     +LDD R16 , Y + 10
00add0 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
00add1 8528     +LDD R18 , Y + 8
00add2 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
00add3 e040     +LDI R20 , LOW ( 0 )
00add4 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
00add5 81ee      	LDD  R30,Y+6
00add6 81ff      	LDD  R31,Y+6+1
00add7 9731      	SBIW R30,1
00add8 83ee      	STD  Y+6,R30
00add9 83ff      	STD  Y+6+1,R31
00adda 9631      	ADIW R30,1
00addb f081      	BREQ _0x2060012
00addc 01d8      	MOVW R26,R16
                +
00addd 5f0f     +SUBI R16 , LOW ( - 1 )
00adde 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00addf 900c      	LD   R0,X
00ade0 2411      	CLR  R1
00ade1 01d9      	MOVW R26,R18
                +
00ade2 5f2f     +SUBI R18 , LOW ( - 1 )
00ade3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00ade4 91ac      	LD   R26,X
00ade5 27bb      	CLR  R27
00ade6 01f0      	MOVW R30,R0
00ade7 1bea      	SUB  R30,R26
00ade8 0bfb      	SBC  R31,R27
00ade9 01af      	MOVW R20,R30
00adea 9730      	SBIW R30,0
00adeb f009      	BREQ _0x2060013
                 _0x2060012:
00adec c001      	RJMP _0x2060011
                 _0x2060013:
00aded cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
00adee 01fa      	MOVW R30,R20
                 _0x20E001E:
00adef 940e e47c 	CALL __LOADLOCR6
00adf1 962c      	ADIW R28,12
00adf2 9508      	RET
                 _chk_chrf_G103:
00adf3 93ba      	ST   -Y,R27
00adf4 93aa      	ST   -Y,R26
                 _0x2060014:
00adf5 940e c72d 	CALL SUBOPT_0xB3
                +
00adf7 bf6b     +OUT RAMPZ , R22
00adf8 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00adf9 30e0      	CPI  R30,0
00adfa f051      	BREQ _0x2060017
00adfb 940e c72d 	CALL SUBOPT_0xB3
                +
00adfd bf6b     +OUT RAMPZ , R22
00adfe 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00adff 81e8      	LD   R30,Y
00ae00 81f9      	LDD  R31,Y+1
00ae01 e0b0      	LDI  R27,0
00ae02 17ea      	CP   R30,R26
00ae03 07fb      	CPC  R31,R27
00ae04 f409      	BRNE _0x2060018
                 _0x2060017:
00ae05 c005      	RJMP _0x2060016
                 _0x2060018:
00ae06 01de      	MOVW R26,R28
00ae07 9612      	ADIW R26,2
00ae08 940e dcea 	CALL SUBOPT_0x3B1
00ae0a cfea      	RJMP _0x2060014
                 _0x2060016:
00ae0b 940e c72d 	CALL SUBOPT_0xB3
                +
00ae0d bf6b     +OUT RAMPZ , R22
00ae0e 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00ae0f e0f0      	LDI  R31,0
                 _0x20E001D:
00ae10 9626      	ADIW R28,6
00ae11 9508      	RET
                 _move_window_G103:
00ae12 940e e405 	CALL __PUTPARD2
00ae14 9724      	SBIW R28,4
00ae15 931a      	ST   -Y,R17
00ae16 85a9      	LDD  R26,Y+9
00ae17 85ba      	LDD  R27,Y+9+1
00ae18 969e      	ADIW R26,46
00ae19 940e dcf2 	CALL SUBOPT_0x3B2
00ae1b 940e dcf9 	CALL SUBOPT_0x3B3
00ae1d 940e d3cd 	CALL SUBOPT_0x29B
00ae1f 940e e46b 	CALL __CPD12
00ae21 f411      	BRNE PC+3
00ae22 940c ae74 	JMP _0x2060019
00ae24 85e9      	LDD  R30,Y+9
00ae25 85fa      	LDD  R31,Y+9+1
00ae26 81e4      	LDD  R30,Z+4
00ae27 30e0      	CPI  R30,0
00ae28 f199      	BREQ _0x206001A
00ae29 940e dcfe 	CALL SUBOPT_0x3B4
00ae2b 30e0      	CPI  R30,0
00ae2c f011      	BREQ _0x206001B
00ae2d e0e1      	LDI  R30,LOW(1)
00ae2e c046      	RJMP _0x20E001C
                 _0x206001B:
00ae2f 85a9      	LDD  R26,Y+9
00ae30 85ba      	LDD  R27,Y+9+1
00ae31 9614      	ADIW R26,4
00ae32 e0e0      	LDI  R30,LOW(0)
00ae33 93ec      	ST   X,R30
00ae34 85e9      	LDD  R30,Y+9
00ae35 85fa      	LDD  R31,Y+9+1
00ae36 940e dd0e 	CALL SUBOPT_0x3B5
00ae38 010d      	MOVW R0,R26
00ae39 85a9      	LDD  R26,Y+9
00ae3a 85ba      	LDD  R27,Y+9+1
00ae3b 965a      	ADIW R26,26
00ae3c 940e e3d0 	CALL __GETD1P
00ae3e 01d0      	MOVW R26,R0
00ae3f 940e e258 	CALL __ADDD12
00ae41 940e d3cd 	CALL SUBOPT_0x29B
00ae43 940e e470 	CALL __CPD21
00ae45 f4b0      	BRSH _0x206001C
00ae46 85e9      	LDD  R30,Y+9
00ae47 85fa      	LDD  R31,Y+9+1
00ae48 8113      	LDD  R17,Z+3
                 _0x206001E:
00ae49 3012      	CPI  R17,2
00ae4a f088      	BRLO _0x206001F
00ae4b 85a9      	LDD  R26,Y+9
00ae4c 85ba      	LDD  R27,Y+9+1
00ae4d 965a      	ADIW R26,26
00ae4e 940e e3d0 	CALL __GETD1P
00ae50 940e d3cd 	CALL SUBOPT_0x29B
00ae52 940e e258 	CALL __ADDD12
                +
00ae54 83e9     +STD Y + 1 , R30
00ae55 83fa     +STD Y + 1 + 1 , R31
00ae56 836b     +STD Y + 1 + 2 , R22
00ae57 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00ae58 940e dcfe 	CALL SUBOPT_0x3B4
00ae5a 5011      	SUBI R17,1
00ae5b cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
00ae5c 940e dcf9 	CALL SUBOPT_0x3B3
00ae5e 940e e459 	CALL __CPD10
00ae60 f099      	BREQ _0x2060020
00ae61 85e9      	LDD  R30,Y+9
00ae62 85fa      	LDD  R31,Y+9+1
00ae63 81a1      	LDD  R26,Z+1
00ae64 93aa      	ST   -Y,R26
00ae65 85ea      	LDD  R30,Y+10
00ae66 85fb      	LDD  R31,Y+10+1
00ae67 96f2      	ADIW R30,50
00ae68 940e dd13 	CALL SUBOPT_0x3B6
00ae6a f011      	BREQ _0x2060021
00ae6b e0e1      	LDI  R30,LOW(1)
00ae6c c008      	RJMP _0x20E001C
                 _0x2060021:
00ae6d 940e dcf9 	CALL SUBOPT_0x3B3
                +
00ae6f 85a9     +LDD R26 , Y + 9
00ae70 85ba     +LDD R27 , Y + 9 + 1
00ae71 969e     +ADIW R26 , 46
00ae72 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
00ae74 e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
00ae75 8118      	LDD  R17,Y+0
00ae76 962b      	ADIW R28,11
00ae77 9508      	RET
                 _sync_G103:
00ae78 93ba      	ST   -Y,R27
00ae79 93aa      	ST   -Y,R26
00ae7a 931a      	ST   -Y,R17
00ae7b 81e9      	LDD  R30,Y+1
00ae7c 81fa      	LDD  R31,Y+1+1
00ae7d 93fa      	ST   -Y,R31
00ae7e 93ea      	ST   -Y,R30
00ae7f 940e dd1e 	CALL SUBOPT_0x3B7
00ae81 2f1e      	MOV  R17,R30
00ae82 3010      	CPI  R17,0
00ae83 f011      	BREQ PC+3
00ae84 940c aee8 	JMP _0x2060022
00ae86 81a9      	LDD  R26,Y+1
00ae87 81ba      	LDD  R27,Y+1+1
00ae88 91ac      	LD   R26,X
00ae89 30a3      	CPI  R26,LOW(0x3)
00ae8a f429      	BRNE _0x2060024
00ae8b 81e9      	LDD  R30,Y+1
00ae8c 81fa      	LDD  R31,Y+1+1
00ae8d 81e5      	LDD  R30,Z+5
00ae8e 30e0      	CPI  R30,0
00ae8f f409      	BRNE _0x2060025
                 _0x2060024:
00ae90 c04b      	RJMP _0x2060023
                 _0x2060025:
00ae91 81a9      	LDD  R26,Y+1
00ae92 81ba      	LDD  R27,Y+1+1
00ae93 969e      	ADIW R26,46
00ae94 940e c634 	CALL SUBOPT_0x8E
00ae96 81e9      	LDD  R30,Y+1
00ae97 81fa      	LDD  R31,Y+1+1
00ae98 940e dd22 	CALL SUBOPT_0x3B8
00ae9a 81e9      	LDD  R30,Y+1
00ae9b 81fa      	LDD  R31,Y+1+1
00ae9c 96f2      	ADIW R30,50
00ae9d 50e2      	SUBI R30,LOW(-510)
00ae9e 4ffe      	SBCI R31,HIGH(-510)
00ae9f e5a5      	LDI  R26,LOW(43605)
00aea0 eaba      	LDI  R27,HIGH(43605)
00aea1 83a0      	STD  Z+0,R26
00aea2 83b1      	STD  Z+1,R27
00aea3 81e9      	LDD  R30,Y+1
00aea4 81fa      	LDD  R31,Y+1+1
00aea5 96f2      	ADIW R30,50
                +
00aea6 e5a2     +LDI R26 , LOW ( 0x41615252 )
00aea7 e5b2     +LDI R27 , HIGH ( 0x41615252 )
00aea8 e681     +LDI R24 , BYTE3 ( 0x41615252 )
00aea9 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
00aeaa 940e d262 	CALL SUBOPT_0x264
00aeac 81e9      	LDD  R30,Y+1
00aead 81fa      	LDD  R31,Y+1+1
00aeae 96f2      	ADIW R30,50
00aeaf 51ec      	SUBI R30,LOW(-484)
00aeb0 4ffe      	SBCI R31,HIGH(-484)
                +
00aeb1 e7a2     +LDI R26 , LOW ( 0x61417272 )
00aeb2 e7b2     +LDI R27 , HIGH ( 0x61417272 )
00aeb3 e481     +LDI R24 , BYTE3 ( 0x61417272 )
00aeb4 e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
00aeb5 940e d262 	CALL SUBOPT_0x264
00aeb7 81e9      	LDD  R30,Y+1
00aeb8 81fa      	LDD  R31,Y+1+1
00aeb9 96f2      	ADIW R30,50
00aeba 51e8      	SUBI R30,LOW(-488)
00aebb 4ffe      	SBCI R31,HIGH(-488)
00aebc 010f      	MOVW R0,R30
00aebd 81a9      	LDD  R26,Y+1
00aebe 81ba      	LDD  R27,Y+1+1
00aebf 961e      	ADIW R26,14
00aec0 940e dd2d 	CALL SUBOPT_0x3B9
00aec2 96f2      	ADIW R30,50
00aec3 51e4      	SUBI R30,LOW(-492)
00aec4 4ffe      	SBCI R31,HIGH(-492)
00aec5 010f      	MOVW R0,R30
00aec6 81a9      	LDD  R26,Y+1
00aec7 81ba      	LDD  R27,Y+1+1
00aec8 961a      	ADIW R26,10
00aec9 940e dd2d 	CALL SUBOPT_0x3B9
00aecb 81a1      	LDD  R26,Z+1
00aecc 93aa      	ST   -Y,R26
00aecd 81ea      	LDD  R30,Y+2
00aece 81fb      	LDD  R31,Y+2+1
00aecf 96f2      	ADIW R30,50
00aed0 93fa      	ST   -Y,R31
00aed1 93ea      	ST   -Y,R30
00aed2 81ec      	LDD  R30,Y+4
00aed3 81fd      	LDD  R31,Y+4+1
00aed4 940e dd35 	CALL SUBOPT_0x3BA
00aed6 dbfe      	RCALL _disk_write
00aed7 81a9      	LDD  R26,Y+1
00aed8 81ba      	LDD  R27,Y+1+1
00aed9 9615      	ADIW R26,5
00aeda e0e0      	LDI  R30,LOW(0)
00aedb 93ec      	ST   X,R30
                 _0x2060023:
00aedc 81e9      	LDD  R30,Y+1
00aedd 81fa      	LDD  R31,Y+1+1
00aede 81a1      	LDD  R26,Z+1
00aedf 93aa      	ST   -Y,R26
00aee0 e0e0      	LDI  R30,LOW(0)
00aee1 93ea      	ST   -Y,R30
00aee2 e0a0      	LDI  R26,LOW(0)
00aee3 e0b0      	LDI  R27,HIGH(0)
00aee4 dc67      	RCALL _disk_ioctl
00aee5 30e0      	CPI  R30,0
00aee6 f009      	BREQ _0x2060026
00aee7 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
00aee8 2fe1      	MOV  R30,R17
                 _0x20E001B:
00aee9 8118      	LDD  R17,Y+0
00aeea 9623      	ADIW R28,3
00aeeb 9508      	RET
                 _get_fat:
00aeec 940e e405 	CALL __PUTPARD2
00aeee 9724      	SBIW R28,4
00aeef 940e e477 	CALL __SAVELOCR4
00aef1 940e c810 	CALL SUBOPT_0xD8
00aef3 940e dd3d 	CALL SUBOPT_0x3BB
00aef5 f050      	BRLO _0x2060028
00aef6 85ac      	LDD  R26,Y+12
00aef7 85bd      	LDD  R27,Y+12+1
00aef8 965e      	ADIW R26,30
00aef9 940e e3d0 	CALL __GETD1P
00aefb 940e c810 	CALL SUBOPT_0xD8
00aefd 940e e470 	CALL __CPD21
00aeff f018      	BRLO _0x2060027
                 _0x2060028:
00af00 940e dd45 	CALL SUBOPT_0x3BC
00af02 c071      	RJMP _0x20E001A
                 _0x2060027:
00af03 85ac      	LDD  R26,Y+12
00af04 85bd      	LDD  R27,Y+12+1
00af05 9692      	ADIW R26,34
00af06 940e dd4a 	CALL SUBOPT_0x3BD
00af08 85ac      	LDD  R26,Y+12
00af09 85bd      	LDD  R27,Y+12+1
00af0a 91ec      	LD   R30,X
00af0b 940e d054 	CALL SUBOPT_0x21D
00af0d f581      	BRNE _0x206002D
                +
00af0e 8528     +LDD R18 , Y + 8
00af0f 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
00af10 01f9      	MOVW R30,R18
00af11 95f6      	LSR  R31
00af12 95e7      	ROR  R30
                +
00af13 0f2e     +ADD R18 , R30
00af14 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
00af15 940e cd12 	CALL SUBOPT_0x1AF
00af17 940e dd4e 	CALL SUBOPT_0x3BE
00af19 940e dd55 	CALL SUBOPT_0x3BF
00af1b f009      	BREQ _0x206002E
00af1c c055      	RJMP _0x206002C
                 _0x206002E:
00af1d 940e dd5b 	CALL SUBOPT_0x3C0
00af1f 910c      	LD   R16,X
00af20 2711      	CLR  R17
                +
00af21 5f2f     +SUBI R18 , LOW ( - 1 )
00af22 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00af23 940e cd12 	CALL SUBOPT_0x1AF
00af25 940e dd4e 	CALL SUBOPT_0x3BE
00af27 940e dd55 	CALL SUBOPT_0x3BF
00af29 f009      	BREQ _0x206002F
00af2a c047      	RJMP _0x206002C
                 _0x206002F:
00af2b 940e dd5b 	CALL SUBOPT_0x3C0
00af2d 91ec      	LD   R30,X
00af2e 2ffe      	MOV  R31,R30
00af2f e0e0      	LDI  R30,0
                +
00af30 2b0e     +OR R16 , R30
00af31 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
00af32 85e8      	LDD  R30,Y+8
00af33 70e1      	ANDI R30,LOW(0x1)
00af34 f021      	BREQ _0x2060030
00af35 01f8      	MOVW R30,R16
00af36 940e e2b5 	CALL __LSRW4
00af38 c002      	RJMP _0x206022B
                 _0x2060030:
00af39 01f8      	MOVW R30,R16
00af3a 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
00af3b 2766      	CLR  R22
00af3c 2777      	CLR  R23
00af3d c036      	RJMP _0x20E001A
                 _0x206002D:
00af3e 30e2      	CPI  R30,LOW(0x2)
00af3f e0a0      	LDI  R26,HIGH(0x2)
00af40 07fa      	CPC  R31,R26
00af41 f4a9      	BRNE _0x2060033
00af42 940e cd12 	CALL SUBOPT_0x1AF
00af44 940e c4aa 	CALL SUBOPT_0x52
00af46 940e dd63 	CALL SUBOPT_0x3C1
00af48 940e c4dc 	CALL SUBOPT_0x59
00af4a 940e dd55 	CALL SUBOPT_0x3BF
00af4c f529      	BRNE _0x206002C
00af4d 85a8      	LDD  R26,Y+8
00af4e 85b9      	LDD  R27,Y+8+1
00af4f e0e2      	LDI  R30,LOW(2)
00af50 940e dd6a 	CALL SUBOPT_0x3C2
00af52 0fae      	ADD  R26,R30
00af53 1fbf      	ADC  R27,R31
00af54 940e c33e 	CALL SUBOPT_0x1E
00af56 c01d      	RJMP _0x20E001A
                 _0x2060033:
00af57 30e3      	CPI  R30,LOW(0x3)
00af58 e0a0      	LDI  R26,HIGH(0x3)
00af59 07fa      	CPC  R31,R26
00af5a f4b9      	BRNE _0x206002C
00af5b 940e cd12 	CALL SUBOPT_0x1AF
00af5d 940e c4aa 	CALL SUBOPT_0x52
00af5f 940e dd71 	CALL SUBOPT_0x3C3
00af61 940e c4dc 	CALL SUBOPT_0x59
00af63 940e dd55 	CALL SUBOPT_0x3BF
00af65 f461      	BRNE _0x206002C
00af66 85a8      	LDD  R26,Y+8
00af67 85b9      	LDD  R27,Y+8+1
00af68 e0e4      	LDI  R30,LOW(4)
00af69 940e dd6a 	CALL SUBOPT_0x3C2
00af6b 940e c32e 	CALL SUBOPT_0x1B
                +
00af6d 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00af6e 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00af6f 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00af70 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00af71 c002      	RJMP _0x20E001A
                 _0x206002C:
00af72 940e c369 	CALL SUBOPT_0x25
                 _0x20E001A:
00af74 940e e47e 	CALL __LOADLOCR4
00af76 962e      	ADIW R28,14
00af77 9508      	RET
                 _put_fat:
00af78 940e e405 	CALL __PUTPARD2
00af7a 9724      	SBIW R28,4
00af7b 940e e475 	CALL __SAVELOCR6
00af7d 940e dd78 	CALL SUBOPT_0x3C4
00af7f 940e dd3d 	CALL SUBOPT_0x3BB
00af81 f050      	BRLO _0x2060038
00af82 89aa      	LDD  R26,Y+18
00af83 89bb      	LDD  R27,Y+18+1
00af84 965e      	ADIW R26,30
00af85 940e e3d0 	CALL __GETD1P
00af87 940e dd78 	CALL SUBOPT_0x3C4
00af89 940e e470 	CALL __CPD21
00af8b f010      	BRLO _0x2060037
                 _0x2060038:
00af8c e052      	LDI  R21,LOW(2)
00af8d c08a      	RJMP _0x206003A
                 _0x2060037:
00af8e 89aa      	LDD  R26,Y+18
00af8f 89bb      	LDD  R27,Y+18+1
00af90 9692      	ADIW R26,34
00af91 940e e3d0 	CALL __GETD1P
00af93 940e c73c 	CALL SUBOPT_0xB6
00af95 89aa      	LDD  R26,Y+18
00af96 89bb      	LDD  R27,Y+18+1
00af97 91ec      	LD   R30,X
00af98 940e d054 	CALL SUBOPT_0x21D
00af9a f011      	BREQ PC+3
00af9b 940c afe4 	JMP _0x206003E
                +
00af9d 850e     +LDD R16 , Y + 14
00af9e 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
00af9f 01f8      	MOVW R30,R16
00afa0 95f6      	LSR  R31
00afa1 95e7      	ROR  R30
                +
00afa2 0f0e     +ADD R16 , R30
00afa3 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00afa4 940e d466 	CALL SUBOPT_0x2B2
00afa6 940e dd7d 	CALL SUBOPT_0x3C5
00afa8 f009      	BREQ _0x206003F
00afa9 c069      	RJMP _0x206003D
                 _0x206003F:
00afaa 940e dd8d 	CALL SUBOPT_0x3C6
00afac f051      	BREQ _0x2060040
00afad 01d9      	MOVW R26,R18
00afae 91ec      	LD   R30,X
00afaf 70ef      	ANDI R30,LOW(0xF)
00afb0 2fae      	MOV  R26,R30
00afb1 85ea      	LDD  R30,Y+10
00afb2 e0f0      	LDI  R31,0
00afb3 940e e2a3 	CALL __LSLW4
00afb5 2bea      	OR   R30,R26
00afb6 c001      	RJMP _0x2060041
                 _0x2060040:
00afb7 85ea      	LDD  R30,Y+10
                 _0x2060041:
00afb8 01d9      	MOVW R26,R18
00afb9 93ec      	ST   X,R30
                +
00afba 5f0f     +SUBI R16 , LOW ( - 1 )
00afbb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00afbc 89aa      	LDD  R26,Y+18
00afbd 89bb      	LDD  R27,Y+18+1
00afbe 9614      	ADIW R26,4
00afbf e0e1      	LDI  R30,LOW(1)
00afc0 93ec      	ST   X,R30
00afc1 940e d466 	CALL SUBOPT_0x2B2
00afc3 940e dd7d 	CALL SUBOPT_0x3C5
00afc5 f009      	BREQ _0x2060043
00afc6 c04c      	RJMP _0x206003D
                 _0x2060043:
00afc7 940e dd8d 	CALL SUBOPT_0x3C6
00afc9 f049      	BREQ _0x2060044
00afca 940e c4aa 	CALL SUBOPT_0x52
00afcc e0e4      	LDI  R30,LOW(4)
00afcd 940e e297 	CALL __LSRD12
00afcf 27ff      	CLR  R31
00afd0 2766      	CLR  R22
00afd1 2777      	CLR  R23
00afd2 c00e      	RJMP _0x2060045
                 _0x2060044:
00afd3 01d9      	MOVW R26,R18
00afd4 91ec      	LD   R30,X
00afd5 7fe0      	ANDI R30,LOW(0xF0)
00afd6 2e1e      	MOV  R1,R30
00afd7 940e c4aa 	CALL SUBOPT_0x52
00afd9 e0e8      	LDI  R30,LOW(8)
00afda 940e e297 	CALL __LSRD12
00afdc 27ff      	CLR  R31
00afdd 2766      	CLR  R22
00afde 2777      	CLR  R23
00afdf 70ef      	ANDI R30,LOW(0xF)
00afe0 29e1      	OR   R30,R1
                 _0x2060045:
00afe1 01d9      	MOVW R26,R18
00afe2 93ec      	ST   X,R30
00afe3 c02f      	RJMP _0x206003D
                 _0x206003E:
00afe4 30e2      	CPI  R30,LOW(0x2)
00afe5 e0a0      	LDI  R26,HIGH(0x2)
00afe6 07fa      	CPC  R31,R26
00afe7 f499      	BRNE _0x2060047
00afe8 940e d466 	CALL SUBOPT_0x2B2
00afea 940e d11e 	CALL SUBOPT_0x234
00afec 940e dd63 	CALL SUBOPT_0x3C1
00afee 940e dd98 	CALL SUBOPT_0x3C7
00aff0 f511      	BRNE _0x206003D
00aff1 85ae      	LDD  R26,Y+14
00aff2 85bf      	LDD  R27,Y+14+1
00aff3 e0e2      	LDI  R30,LOW(2)
00aff4 940e dda1 	CALL SUBOPT_0x3C8
00aff6 85aa      	LDD  R26,Y+10
00aff7 85bb      	LDD  R27,Y+10+1
00aff8 83a0      	STD  Z+0,R26
00aff9 83b1      	STD  Z+1,R27
00affa c018      	RJMP _0x206003D
                 _0x2060047:
00affb 30e3      	CPI  R30,LOW(0x3)
00affc e0a0      	LDI  R26,HIGH(0x3)
00affd 07fa      	CPC  R31,R26
00affe f499      	BRNE _0x206004B
00afff 940e d466 	CALL SUBOPT_0x2B2
00b001 940e d11e 	CALL SUBOPT_0x234
00b003 940e dd71 	CALL SUBOPT_0x3C3
00b005 940e dd98 	CALL SUBOPT_0x3C7
00b007 f459      	BRNE _0x206003D
00b008 85ae      	LDD  R26,Y+14
00b009 85bf      	LDD  R27,Y+14+1
00b00a e0e4      	LDI  R30,LOW(4)
00b00b 940e dda1 	CALL SUBOPT_0x3C8
00b00d 940e c4aa 	CALL SUBOPT_0x52
00b00f 940e d262 	CALL SUBOPT_0x264
00b011 c001      	RJMP _0x206003D
                 _0x206004B:
00b012 e052      	LDI  R21,LOW(2)
                 _0x206003D:
00b013 89aa      	LDD  R26,Y+18
00b014 89bb      	LDD  R27,Y+18+1
00b015 9614      	ADIW R26,4
00b016 e0e1      	LDI  R30,LOW(1)
00b017 93ec      	ST   X,R30
                 _0x206003A:
00b018 2fe5      	MOV  R30,R21
00b019 940e e47c 	CALL __LOADLOCR6
00b01b 9664      	ADIW R28,20
00b01c 9508      	RET
                 _remove_chain_G103:
00b01d 940e e405 	CALL __PUTPARD2
00b01f 9724      	SBIW R28,4
00b020 931a      	ST   -Y,R17
00b021 940e ddaa 	CALL SUBOPT_0x3C9
00b023 940e dd3d 	CALL SUBOPT_0x3BB
00b025 f018      	BRLO _0x206004D
00b026 940e ddaf 	CALL SUBOPT_0x3CA
00b028 f010      	BRLO _0x206004C
                 _0x206004D:
00b029 e012      	LDI  R17,LOW(2)
00b02a c03e      	RJMP _0x206004F
                 _0x206004C:
00b02b e010      	LDI  R17,LOW(0)
                 _0x2060050:
00b02c 940e ddaf 	CALL SUBOPT_0x3CA
00b02e f5d0      	BRSH _0x2060052
00b02f 940e cc81 	CALL SUBOPT_0x195
00b031 940e c530 	CALL SUBOPT_0x67
00b033 deb8      	RCALL _get_fat
                +
00b034 83e9     +STD Y + 1 , R30
00b035 83fa     +STD Y + 1 + 1 , R31
00b036 836b     +STD Y + 1 + 2 , R22
00b037 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00b038 940e ddb8 	CALL SUBOPT_0x3CB
00b03a 940e e459 	CALL __CPD10
00b03c f161      	BREQ _0x2060052
00b03d 940e d3cd 	CALL SUBOPT_0x29B
00b03f 940e ddbd 	CALL SUBOPT_0x3CC
00b041 f411      	BRNE _0x2060054
00b042 e012      	LDI  R17,LOW(2)
00b043 c025      	RJMP _0x2060052
                 _0x2060054:
00b044 940e d3cd 	CALL SUBOPT_0x29B
00b046 940e c3fc 	CALL SUBOPT_0x3A
00b048 f411      	BRNE _0x2060055
00b049 e011      	LDI  R17,LOW(1)
00b04a c01e      	RJMP _0x2060052
                 _0x2060055:
00b04b 940e cc81 	CALL SUBOPT_0x195
00b04d 940e c430 	CALL SUBOPT_0x3F
00b04f 940e c396 	CALL SUBOPT_0x2C
00b051 df26      	RCALL _put_fat
00b052 2f1e      	MOV  R17,R30
00b053 3010      	CPI  R17,0
00b054 f4a1      	BRNE _0x2060052
00b055 85e9      	LDD  R30,Y+9
00b056 85fa      	LDD  R31,Y+9+1
00b057 940e ddc5 	CALL SUBOPT_0x3CD
00b059 f051      	BREQ _0x2060057
00b05a 85a9      	LDD  R26,Y+9
00b05b 85ba      	LDD  R27,Y+9+1
00b05c 961e      	ADIW R26,14
00b05d 940e c65b 	CALL SUBOPT_0x92
00b05f 85a9      	LDD  R26,Y+9
00b060 85ba      	LDD  R27,Y+9+1
00b061 9615      	ADIW R26,5
00b062 e0e1      	LDI  R30,LOW(1)
00b063 93ec      	ST   X,R30
                 _0x2060057:
00b064 940e ddb8 	CALL SUBOPT_0x3CB
00b066 940e ddcb 	CALL SUBOPT_0x3CE
00b068 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
00b069 2fe1      	MOV  R30,R17
00b06a 8118      	LDD  R17,Y+0
00b06b c26f      	RJMP _0x20E0016
                 _create_chain_G103:
00b06c 940e e405 	CALL __PUTPARD2
00b06e 9760      	SBIW R28,16
00b06f 89ac      	LDD  R26,Y+20
00b070 89bd      	LDD  R27,Y+20+1
00b071 965e      	ADIW R26,30
00b072 940e e3d0 	CALL __GETD1P
00b074 940e c6c6 	CALL SUBOPT_0xA0
00b076 940e c2bf 	CALL SUBOPT_0xC
00b078 940e e459 	CALL __CPD10
00b07a f4b1      	BRNE _0x2060058
00b07b 89ac      	LDD  R26,Y+20
00b07c 89bd      	LDD  R27,Y+20+1
00b07d 961a      	ADIW R26,10
00b07e 940e dd4a 	CALL SUBOPT_0x3BD
00b080 940e c6f4 	CALL SUBOPT_0xA8
00b082 940e e465 	CALL __CPD02
00b084 f039      	BREQ _0x206005A
00b085 940e c60b 	CALL SUBOPT_0x87
00b087 940e c6f4 	CALL SUBOPT_0xA8
00b089 940e e470 	CALL __CPD21
00b08b f020      	BRLO _0x2060059
                 _0x206005A:
00b08c 940e dd45 	CALL SUBOPT_0x3BC
00b08e 940e c6ef 	CALL SUBOPT_0xA7
                 _0x2060059:
00b090 c01d      	RJMP _0x206005C
                 _0x2060058:
00b091 940e ddd0 	CALL SUBOPT_0x3CF
00b093 940e ddd5 	CALL SUBOPT_0x3D0
00b095 de56      	RCALL _get_fat
00b096 940e c886 	CALL SUBOPT_0xEA
00b098 940e c2ba 	CALL SUBOPT_0xB
00b09a 940e dd3d 	CALL SUBOPT_0x3BB
00b09c f418      	BRSH _0x206005D
00b09d 940e dd45 	CALL SUBOPT_0x3BC
00b09f c083      	RJMP _0x20E0019
                 _0x206005D:
00b0a0 940e c60b 	CALL SUBOPT_0x87
00b0a2 940e c2ba 	CALL SUBOPT_0xB
00b0a4 940e e470 	CALL __CPD21
00b0a6 f418      	BRSH _0x206005E
00b0a7 940e c815 	CALL SUBOPT_0xD9
00b0a9 c079      	RJMP _0x20E0019
                 _0x206005E:
00b0aa 940e c2bf 	CALL SUBOPT_0xC
00b0ac 940e c6ef 	CALL SUBOPT_0xA7
                 _0x206005C:
00b0ae 940e c617 	CALL SUBOPT_0x89
00b0b0 940e da7e 	CALL SUBOPT_0x367
                 _0x2060060:
00b0b2 940e c491 	CALL SUBOPT_0x4F
00b0b4 940e c75e 	CALL SUBOPT_0xBC
00b0b6 940e da7e 	CALL SUBOPT_0x367
00b0b8 940e c60b 	CALL SUBOPT_0x87
00b0ba 940e c810 	CALL SUBOPT_0xD8
00b0bc 940e e470 	CALL __CPD21
00b0be f050      	BRLO _0x2060062
00b0bf 940e ddda 	CALL SUBOPT_0x3D1
00b0c1 940e da7e 	CALL SUBOPT_0x367
00b0c3 940e dddf 	CALL SUBOPT_0x3D2
00b0c5 f418      	BRSH _0x2060063
00b0c6 940e dde6 	CALL SUBOPT_0x3D3
00b0c8 c05a      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
00b0c9 940e ddd0 	CALL SUBOPT_0x3CF
00b0cb 940e c4aa 	CALL SUBOPT_0x52
00b0cd de1e      	RCALL _get_fat
00b0ce 940e c890 	CALL SUBOPT_0xEC
00b0d0 940e e459 	CALL __CPD10
00b0d2 f091      	BREQ _0x2060061
00b0d3 940e c4ec 	CALL SUBOPT_0x5C
00b0d5 f029      	BREQ _0x2060066
00b0d6 940e c2ba 	CALL SUBOPT_0xB
00b0d8 940e ddbd 	CALL SUBOPT_0x3CC
00b0da f419      	BRNE _0x2060065
                 _0x2060066:
00b0db 940e c815 	CALL SUBOPT_0xD9
00b0dd c045      	RJMP _0x20E0019
                 _0x2060065:
00b0de 940e dddf 	CALL SUBOPT_0x3D2
00b0e0 f419      	BRNE _0x2060068
00b0e1 940e dde6 	CALL SUBOPT_0x3D3
00b0e3 c03f      	RJMP _0x20E0019
                 _0x2060068:
00b0e4 cfcd      	RJMP _0x2060060
                 _0x2060061:
00b0e5 940e ddd0 	CALL SUBOPT_0x3CF
00b0e7 940e d9f6 	CALL SUBOPT_0x353
                +
00b0e9 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
00b0ea efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
00b0eb ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
00b0ec e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
00b0ed de8a      	RCALL _put_fat
00b0ee 30e0      	CPI  R30,0
00b0ef f019      	BREQ _0x2060069
00b0f0 940e c369 	CALL SUBOPT_0x25
00b0f2 c030      	RJMP _0x20E0019
                 _0x2060069:
00b0f3 940e c2bf 	CALL SUBOPT_0xC
00b0f5 940e e459 	CALL __CPD10
00b0f7 f071      	BREQ _0x206006A
00b0f8 940e ddd0 	CALL SUBOPT_0x3CF
00b0fa 940e c7ff 	CALL SUBOPT_0xD4
00b0fc 940e e400 	CALL __PUTPARD1
00b0fe 940e dd78 	CALL SUBOPT_0x3C4
00b100 de77      	RCALL _put_fat
00b101 30e0      	CPI  R30,0
00b102 f019      	BREQ _0x206006B
00b103 940e c369 	CALL SUBOPT_0x25
00b105 c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
00b106 940e c491 	CALL SUBOPT_0x4F
                +
00b108 89ac     +LDD R26 , Y + 20
00b109 89bd     +LDD R27 , Y + 20 + 1
00b10a 961a     +ADIW R26 , 10
00b10b 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 20,10
00b10d 89ec      	LDD  R30,Y+20
00b10e 89fd      	LDD  R31,Y+20+1
00b10f 940e ddc5 	CALL SUBOPT_0x3CD
00b111 f079      	BREQ _0x206006C
00b112 89ac      	LDD  R26,Y+20
00b113 89bd      	LDD  R27,Y+20+1
00b114 961e      	ADIW R26,14
00b115 940e e3d6 	CALL __GETD1P_INC
00b117 9731      	SBIW R30,1
00b118 4060      	SBCI R22,0
00b119 4070      	SBCI R23,0
00b11a 940e e3e0 	CALL __PUTDP1_DEC
00b11c 89ac      	LDD  R26,Y+20
00b11d 89bd      	LDD  R27,Y+20+1
00b11e 9615      	ADIW R26,5
00b11f e0e1      	LDI  R30,LOW(1)
00b120 93ec      	ST   X,R30
                 _0x206006C:
00b121 940e c491 	CALL SUBOPT_0x4F
                 _0x20E0019:
00b123 9666      	ADIW R28,22
00b124 9508      	RET
                 _clust2sect:
00b125 940e e405 	CALL __PUTPARD2
00b127 940e c60b 	CALL SUBOPT_0x87
                +
00b129 50e2     +SUBI R30 , LOW ( 2 )
00b12a 40f0     +SBCI R31 , HIGH ( 2 )
00b12b 4060     +SBCI R22 , BYTE3 ( 2 )
00b12c 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00b12d 940e c6c6 	CALL SUBOPT_0xA0
00b12f 81ec      	LDD  R30,Y+4
00b130 81fd      	LDD  R31,Y+4+1
                +
00b131 8da6     +LDD R26 , Z + 30
00b132 8db7     +LDD R27 , Z + 30 + 1
00b133 a180     +LDD R24 , Z + 30 + 2
00b134 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
00b135 940e ddda 	CALL SUBOPT_0x3D1
00b137 940e c774 	CALL SUBOPT_0xC0
00b139 940e c62a 	CALL SUBOPT_0x8C
00b13b 940e e470 	CALL __CPD21
00b13d f018      	BRLO _0x206006D
00b13e 940e dde6 	CALL SUBOPT_0x3D3
00b140 c38f      	RJMP _0x20E0012
                 _0x206006D:
00b141 81ec      	LDD  R30,Y+4
00b142 81fd      	LDD  R31,Y+4+1
00b143 940e d3ca 	CALL SUBOPT_0x29A
00b145 940e c62a 	CALL SUBOPT_0x8C
00b147 940e d3d2 	CALL SUBOPT_0x29C
00b149 937f      	PUSH R23
00b14a 936f      	PUSH R22
00b14b 93ff      	PUSH R31
00b14c 93ef      	PUSH R30
00b14d 81ac      	LDD  R26,Y+4
00b14e 81bd      	LDD  R27,Y+4+1
00b14f 969a      	ADIW R26,42
00b150 940e e3d0 	CALL __GETD1P
00b152 91af      	POP  R26
00b153 91bf      	POP  R27
00b154 918f      	POP  R24
00b155 919f      	POP  R25
00b156 940e e258 	CALL __ADDD12
00b158 c377      	RJMP _0x20E0012
                 _dir_seek_G103:
00b159 940e c89b 	CALL SUBOPT_0xEE
00b15b 930a      	ST   -Y,R16
00b15c 81ee      	LDD  R30,Y+6
00b15d 81ff      	LDD  R31,Y+6+1
                +
00b15e 85a8     +LDD R26 , Y + 8
00b15f 85b9     +LDD R27 , Y + 8 + 1
00b160 9614     +ADIW R26 , 4
00b161 93ed     +ST X + , R30
00b162 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00b163 85a8      	LDD  R26,Y+8
00b164 85b9      	LDD  R27,Y+8+1
00b165 9616      	ADIW R26,6
00b166 940e e3d0 	CALL __GETD1P
00b168 940e c8a0 	CALL SUBOPT_0xEF
00b16a 940e ddbd 	CALL SUBOPT_0x3CC
00b16c f029      	BREQ _0x206006F
00b16d 940e ddeb 	CALL SUBOPT_0x3D4
00b16f 940e ddf0 	CALL SUBOPT_0x3D5
00b171 f010      	BRLO _0x206006E
                 _0x206006F:
00b172 e0e2      	LDI  R30,LOW(2)
00b173 c072      	RJMP _0x20E0017
                 _0x206006E:
00b174 940e ceb8 	CALL SUBOPT_0x1F4
00b176 f429      	BRNE _0x2060072
00b177 940e ddeb 	CALL SUBOPT_0x3D4
00b179 81a0      	LD   R26,Z
00b17a 30a3      	CPI  R26,LOW(0x3)
00b17b f009      	BREQ _0x2060073
                 _0x2060072:
00b17c c008      	RJMP _0x2060071
                 _0x2060073:
00b17d 940e ddeb 	CALL SUBOPT_0x3D4
00b17f 96b6      	ADIW R30,38
00b180 01df      	MOVW R26,R30
00b181 940e e3d0 	CALL __GETD1P
00b183 940e c728 	CALL SUBOPT_0xB2
                 _0x2060071:
00b185 940e ceb8 	CALL SUBOPT_0x1F4
00b187 f491      	BRNE _0x2060074
00b188 940e ddf9 	CALL SUBOPT_0x3D6
00b18a 940e ddeb 	CALL SUBOPT_0x3D4
00b18c 9638      	ADIW R30,8
00b18d 01df      	MOVW R26,R30
00b18e 940e cc1e 	CALL SUBOPT_0x183
00b190 f010      	BRLO _0x2060075
00b191 e0e2      	LDI  R30,LOW(2)
00b192 c053      	RJMP _0x20E0017
                 _0x2060075:
00b193 940e ddeb 	CALL SUBOPT_0x3D4
00b195 96b6      	ADIW R30,38
00b196 01df      	MOVW R26,R30
00b197 940e e3d0 	CALL __GETD1P
00b199 c031      	RJMP _0x206022C
                 _0x2060074:
00b19a 940e ddeb 	CALL SUBOPT_0x3D4
00b19c 81e2      	LDD  R30,Z+2
00b19d e1a0      	LDI  R26,LOW(16)
00b19e 9fea      	MUL  R30,R26
00b19f 0180      	MOVW R16,R0
                 _0x2060077:
00b1a0 81ae      	LDD  R26,Y+6
00b1a1 81bf      	LDD  R27,Y+6+1
00b1a2 17a0      	CP   R26,R16
00b1a3 07b1      	CPC  R27,R17
00b1a4 f0f8      	BRLO _0x2060079
00b1a5 940e de01 	CALL SUBOPT_0x3D7
00b1a7 940e c6f4 	CALL SUBOPT_0xA8
00b1a9 dd42      	RCALL _get_fat
00b1aa 940e c8a0 	CALL SUBOPT_0xEF
00b1ac 940e c3fc 	CALL SUBOPT_0x3A
00b1ae f411      	BRNE _0x206007A
00b1af e0e1      	LDI  R30,LOW(1)
00b1b0 c035      	RJMP _0x20E0017
                 _0x206007A:
00b1b1 940e c732 	CALL SUBOPT_0xB4
00b1b3 940e dd3d 	CALL SUBOPT_0x3BB
00b1b5 f028      	BRLO _0x206007C
00b1b6 940e ddeb 	CALL SUBOPT_0x3D4
00b1b8 940e ddf0 	CALL SUBOPT_0x3D5
00b1ba f010      	BRLO _0x206007B
                 _0x206007C:
00b1bb e0e2      	LDI  R30,LOW(2)
00b1bc c029      	RJMP _0x20E0017
                 _0x206007B:
00b1bd 81ee      	LDD  R30,Y+6
00b1be 81ff      	LDD  R31,Y+6+1
00b1bf 1be0      	SUB  R30,R16
00b1c0 0bf1      	SBC  R31,R17
00b1c1 83ee      	STD  Y+6,R30
00b1c2 83ff      	STD  Y+6+1,R31
00b1c3 cfdc      	RJMP _0x2060077
                 _0x2060079:
00b1c4 940e ddf9 	CALL SUBOPT_0x3D6
00b1c6 940e de01 	CALL SUBOPT_0x3D7
00b1c8 940e c6f4 	CALL SUBOPT_0xA8
00b1ca df5a      	RCALL _clust2sect
                 _0x206022C:
00b1cb 01df      	MOVW R26,R30
00b1cc 01cb      	MOVW R24,R22
00b1cd 81ee      	LDD  R30,Y+6
00b1ce 81ff      	LDD  R31,Y+6+1
00b1cf 940e e2b5 	CALL __LSRW4
00b1d1 940e de04 	CALL SUBOPT_0x3D8
                +
00b1d3 85a8     +LDD R26 , Y + 8
00b1d4 85b9     +LDD R27 , Y + 8 + 1
00b1d5 961e     +ADIW R26 , 14
00b1d6 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 8,14
00b1d8 940e ddeb 	CALL SUBOPT_0x3D4
00b1da 96f2      	ADIW R30,50
00b1db 01df      	MOVW R26,R30
00b1dc 81ee      	LDD  R30,Y+6
00b1dd 81ff      	LDD  R31,Y+6+1
00b1de 940e de09 	CALL SUBOPT_0x3D9
                +
00b1e0 85a8     +LDD R26 , Y + 8
00b1e1 85b9     +LDD R27 , Y + 8 + 1
00b1e2 9652     +ADIW R26 , 18
00b1e3 93ed     +ST X + , R30
00b1e4 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
00b1e5 e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
00b1e6 8119      	LDD  R17,Y+1
00b1e7 8108      	LDD  R16,Y+0
                 _0x20E0018:
00b1e8 962a      	ADIW R28,10
00b1e9 9508      	RET
                 _dir_next_G103:
00b1ea 93aa      	ST   -Y,R26
00b1eb 9724      	SBIW R28,4
00b1ec 940e e477 	CALL __SAVELOCR4
00b1ee 85a9      	LDD  R26,Y+9
00b1ef 85ba      	LDD  R27,Y+9+1
00b1f0 9614      	ADIW R26,4
00b1f1 940e e3cc 	CALL __GETW1P
00b1f3 9631      	ADIW R30,1
00b1f4 018f      	MOVW R16,R30
00b1f5 2e00      	MOV  R0,R16
00b1f6 2a01      	OR   R0,R17
00b1f7 f031      	BREQ _0x206007F
00b1f8 85a9      	LDD  R26,Y+9
00b1f9 85ba      	LDD  R27,Y+9+1
00b1fa 961e      	ADIW R26,14
00b1fb 940e de11 	CALL SUBOPT_0x3DA
00b1fd f411      	BRNE _0x206007E
                 _0x206007F:
00b1fe e0e4      	LDI  R30,LOW(4)
00b1ff c0d9      	RJMP _0x20E0015
                 _0x206007E:
00b200 01f8      	MOVW R30,R16
00b201 70ef      	ANDI R30,LOW(0xF)
00b202 f011      	BREQ PC+3
00b203 940c b2c6 	JMP _0x2060081
00b205 85a9      	LDD  R26,Y+9
00b206 85ba      	LDD  R27,Y+9+1
00b207 961e      	ADIW R26,14
00b208 940e c65b 	CALL SUBOPT_0x92
00b20a 85a9      	LDD  R26,Y+9
00b20b 85ba      	LDD  R27,Y+9+1
00b20c 961a      	ADIW R26,10
00b20d 940e de11 	CALL SUBOPT_0x3DA
00b20f f451      	BRNE _0x2060082
00b210 940e de16 	CALL SUBOPT_0x3DB
00b212 9638      	ADIW R30,8
00b213 01df      	MOVW R26,R30
00b214 940e ce07 	CALL SUBOPT_0x1D3
00b216 f010      	BRLO _0x2060083
00b217 e0e4      	LDI  R30,LOW(4)
00b218 c0c0      	RJMP _0x20E0015
                 _0x2060083:
00b219 c0ac      	RJMP _0x2060084
                 _0x2060082:
00b21a 01f8      	MOVW R30,R16
00b21b 940e e2b5 	CALL __LSRW4
00b21d 010f      	MOVW R0,R30
00b21e 940e de16 	CALL SUBOPT_0x3DB
00b220 940e d3ca 	CALL SUBOPT_0x29A
00b222 9731      	SBIW R30,1
00b223 21e0      	AND  R30,R0
00b224 21f1      	AND  R31,R1
00b225 9730      	SBIW R30,0
00b226 f011      	BREQ PC+3
00b227 940c b2c6 	JMP _0x2060085
00b229 940e de1b 	CALL SUBOPT_0x3DC
00b22b 940e de1e 	CALL SUBOPT_0x3DD
00b22d dcbe      	RCALL _get_fat
00b22e 940e c6ef 	CALL SUBOPT_0xA7
00b230 940e c6f4 	CALL SUBOPT_0xA8
00b232 940e dd3d 	CALL SUBOPT_0x3BB
00b234 f410      	BRSH _0x2060086
00b235 e0e2      	LDI  R30,LOW(2)
00b236 c0a2      	RJMP _0x20E0015
                 _0x2060086:
00b237 940e c6f4 	CALL SUBOPT_0xA8
00b239 940e c3fc 	CALL SUBOPT_0x3A
00b23b f411      	BRNE _0x2060087
00b23c e0e1      	LDI  R30,LOW(1)
00b23d c09b      	RJMP _0x20E0015
                 _0x2060087:
00b23e 940e de16 	CALL SUBOPT_0x3DB
00b240 940e de25 	CALL SUBOPT_0x3DE
00b242 940e c6f4 	CALL SUBOPT_0xA8
00b244 940e e470 	CALL __CPD21
00b246 f410      	BRSH PC+3
00b247 940c b2b5 	JMP _0x2060088
00b249 85e8      	LDD  R30,Y+8
00b24a 30e0      	CPI  R30,0
00b24b f411      	BRNE _0x2060089
00b24c e0e4      	LDI  R30,LOW(4)
00b24d c08b      	RJMP _0x20E0015
                 _0x2060089:
00b24e 940e de1b 	CALL SUBOPT_0x3DC
00b250 940e de1e 	CALL SUBOPT_0x3DD
00b252 de19      	RCALL _create_chain_G103
00b253 940e c70e 	CALL SUBOPT_0xAD
00b255 940e e459 	CALL __CPD10
00b257 f411      	BRNE _0x206008A
00b258 e0e7      	LDI  R30,LOW(7)
00b259 c07f      	RJMP _0x20E0015
                 _0x206008A:
00b25a 940e c6f4 	CALL SUBOPT_0xA8
00b25c 940e ddbd 	CALL SUBOPT_0x3CC
00b25e f411      	BRNE _0x206008B
00b25f e0e2      	LDI  R30,LOW(2)
00b260 c078      	RJMP _0x20E0015
                 _0x206008B:
00b261 940e c6f4 	CALL SUBOPT_0xA8
00b263 940e c3fc 	CALL SUBOPT_0x3A
00b265 f411      	BRNE _0x206008C
00b266 e0e1      	LDI  R30,LOW(1)
00b267 c071      	RJMP _0x20E0015
                 _0x206008C:
00b268 940e de1b 	CALL SUBOPT_0x3DC
00b26a 940e dd1e 	CALL SUBOPT_0x3B7
00b26c 30e0      	CPI  R30,0
00b26d f011      	BREQ _0x206008D
00b26e e0e1      	LDI  R30,LOW(1)
00b26f c069      	RJMP _0x20E0015
                 _0x206008D:
00b270 940e de16 	CALL SUBOPT_0x3DB
00b272 940e dd22 	CALL SUBOPT_0x3B8
00b274 940e de16 	CALL SUBOPT_0x3DB
00b276 01df      	MOVW R26,R30
00b277 96be      	ADIW R30,46
00b278 93ff      	PUSH R31
00b279 93ef      	PUSH R30
00b27a 01fd      	MOVW R30,R26
00b27b 93fa      	ST   -Y,R31
00b27c 93ea      	ST   -Y,R30
00b27d 940e c4dc 	CALL SUBOPT_0x59
00b27f dea5      	RCALL _clust2sect
00b280 91af      	POP  R26
00b281 91bf      	POP  R27
00b282 940e e3db 	CALL __PUTDP1
00b284 e030      	LDI  R19,LOW(0)
                 _0x206008F:
00b285 940e de16 	CALL SUBOPT_0x3DB
00b287 81e2      	LDD  R30,Z+2
00b288 173e      	CP   R19,R30
00b289 f4c0      	BRSH _0x2060090
00b28a 940e de16 	CALL SUBOPT_0x3DB
00b28c 9634      	ADIW R30,4
00b28d e0a1      	LDI  R26,LOW(1)
00b28e 83a0      	STD  Z+0,R26
00b28f 940e de1b 	CALL SUBOPT_0x3DC
00b291 940e dd1e 	CALL SUBOPT_0x3B7
00b293 30e0      	CPI  R30,0
00b294 f011      	BREQ _0x2060091
00b295 e0e1      	LDI  R30,LOW(1)
00b296 c042      	RJMP _0x20E0015
                 _0x2060091:
00b297 940e de16 	CALL SUBOPT_0x3DB
00b299 96be      	ADIW R30,46
00b29a 01df      	MOVW R26,R30
00b29b 940e c65b 	CALL SUBOPT_0x92
00b29d 9731      	SBIW R30,1
00b29e 4060      	SBCI R22,0
00b29f 4070      	SBCI R23,0
00b2a0 5f3f      	SUBI R19,-1
00b2a1 cfe3      	RJMP _0x206008F
                 _0x2060090:
00b2a2 940e de16 	CALL SUBOPT_0x3DB
00b2a4 96be      	ADIW R30,46
00b2a5 93ff      	PUSH R31
00b2a6 93ef      	PUSH R30
00b2a7 01df      	MOVW R26,R30
00b2a8 940e e3d0 	CALL __GETD1P
00b2aa 01df      	MOVW R26,R30
00b2ab 01cb      	MOVW R24,R22
00b2ac 2fe3      	MOV  R30,R19
00b2ad 940e dce6 	CALL SUBOPT_0x3B0
00b2af 940e c774 	CALL SUBOPT_0xC0
00b2b1 91af      	POP  R26
00b2b2 91bf      	POP  R27
00b2b3 940e e3db 	CALL __PUTDP1
                 _0x2060088:
00b2b5 940e c617 	CALL SUBOPT_0x89
                +
00b2b7 85a9     +LDD R26 , Y + 9
00b2b8 85ba     +LDD R27 , Y + 9 + 1
00b2b9 961a     +ADIW R26 , 10
00b2ba 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00b2bc 940e de1b 	CALL SUBOPT_0x3DC
00b2be 940e c4dc 	CALL SUBOPT_0x59
00b2c0 de64      	RCALL _clust2sect
                +
00b2c1 85a9     +LDD R26 , Y + 9
00b2c2 85ba     +LDD R27 , Y + 9 + 1
00b2c3 961e     +ADIW R26 , 14
00b2c4 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
00b2c6 01f8      	MOVW R30,R16
                +
00b2c7 85a9     +LDD R26 , Y + 9
00b2c8 85ba     +LDD R27 , Y + 9 + 1
00b2c9 9614     +ADIW R26 , 4
00b2ca 93ed     +ST X + , R30
00b2cb 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00b2cc 940e de16 	CALL SUBOPT_0x3DB
00b2ce 96f2      	ADIW R30,50
00b2cf 01df      	MOVW R26,R30
00b2d0 01f8      	MOVW R30,R16
00b2d1 940e de09 	CALL SUBOPT_0x3D9
                +
00b2d3 85a9     +LDD R26 , Y + 9
00b2d4 85ba     +LDD R27 , Y + 9 + 1
00b2d5 9652     +ADIW R26 , 18
00b2d6 93ed     +ST X + , R30
00b2d7 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
00b2d8 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
00b2d9 940e e47e 	CALL __LOADLOCR4
                 _0x20E0016:
00b2db 962b      	ADIW R28,11
00b2dc 9508      	RET
                 _dir_find_G103:
00b2dd 940e c5d9 	CALL SUBOPT_0x7F
00b2df 940e d48d 	CALL SUBOPT_0x2B7
00b2e1 940e c8c4 	CALL SUBOPT_0xF6
00b2e3 de75      	RCALL _dir_seek_G103
00b2e4 2f1e      	MOV  R17,R30
00b2e5 3010      	CPI  R17,0
00b2e6 f021      	BREQ _0x2060092
00b2e7 2fe1      	MOV  R30,R17
00b2e8 940e e47e 	CALL __LOADLOCR4
00b2ea c1e5      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
00b2eb 940e de2a 	CALL SUBOPT_0x3DF
00b2ed 940e de2d 	CALL SUBOPT_0x3E0
00b2ef f4e9      	BRNE _0x2060095
00b2f0 81ac      	LDD  R26,Y+4
00b2f1 81bd      	LDD  R27,Y+4+1
00b2f2 9652      	ADIW R26,18
00b2f3 912d      	LD   R18,X+
00b2f4 913c      	LD   R19,X
00b2f5 01d9      	MOVW R26,R18
00b2f6 910c      	LD   R16,X
00b2f7 3000      	CPI  R16,0
00b2f8 f411      	BRNE _0x2060097
00b2f9 e014      	LDI  R17,LOW(4)
00b2fa c012      	RJMP _0x2060095
                 _0x2060097:
00b2fb 01f9      	MOVW R30,R18
00b2fc 85e3      	LDD  R30,Z+11
00b2fd 70e8      	ANDI R30,LOW(0x8)
00b2fe f429      	BRNE _0x2060099
00b2ff 940e de38 	CALL SUBOPT_0x3E1
00b301 dacb      	RCALL _mem_cmp_G103
00b302 9730      	SBIW R30,0
00b303 f009      	BREQ _0x206009A
                 _0x2060099:
00b304 c001      	RJMP _0x2060098
                 _0x206009A:
00b305 c007      	RJMP _0x2060095
                 _0x2060098:
00b306 940e d48d 	CALL SUBOPT_0x2B7
00b308 e0a0      	LDI  R26,LOW(0)
00b309 dee0      	RCALL _dir_next_G103
00b30a 2f1e      	MOV  R17,R30
00b30b 3010      	CPI  R17,0
00b30c f2f1      	BREQ _0x2060094
                 _0x2060095:
00b30d 2fe1      	MOV  R30,R17
00b30e 940e e47e 	CALL __LOADLOCR4
00b310 c1bf      	RJMP _0x20E0012
                 _dir_register_G103:
00b311 940e c5d9 	CALL SUBOPT_0x7F
00b313 940e d48d 	CALL SUBOPT_0x2B7
00b315 940e c8c4 	CALL SUBOPT_0xF6
00b317 de41      	RCALL _dir_seek_G103
00b318 2f1e      	MOV  R17,R30
00b319 3010      	CPI  R17,0
00b31a f4b1      	BRNE _0x20600A7
                 _0x20600A9:
00b31b 940e de2a 	CALL SUBOPT_0x3DF
00b31d 940e de2d 	CALL SUBOPT_0x3E0
00b31f f489      	BRNE _0x20600AA
00b320 81ec      	LDD  R30,Y+4
00b321 81fd      	LDD  R31,Y+4+1
00b322 89a2      	LDD  R26,Z+18
00b323 89b3      	LDD  R27,Z+19
00b324 910c      	LD   R16,X
00b325 3e05      	CPI  R16,229
00b326 f011      	BREQ _0x20600AD
00b327 3000      	CPI  R16,0
00b328 f409      	BRNE _0x20600AC
                 _0x20600AD:
00b329 c007      	RJMP _0x20600AA
                 _0x20600AC:
00b32a 940e d48d 	CALL SUBOPT_0x2B7
00b32c e0a1      	LDI  R26,LOW(1)
00b32d debc      	RCALL _dir_next_G103
00b32e 2f1e      	MOV  R17,R30
00b32f 3010      	CPI  R17,0
00b330 f351      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
00b331 3010      	CPI  R17,0
00b332 f539      	BRNE _0x20600AF
00b333 940e de2a 	CALL SUBOPT_0x3DF
00b335 940e de2d 	CALL SUBOPT_0x3E0
00b337 f511      	BRNE _0x20600B0
00b338 81ac      	LDD  R26,Y+4
00b339 81bd      	LDD  R27,Y+4+1
00b33a 9652      	ADIW R26,18
00b33b 912d      	LD   R18,X+
00b33c 913c      	LD   R19,X
00b33d 933a      	ST   -Y,R19
00b33e 932a      	ST   -Y,R18
00b33f e0e0      	LDI  R30,LOW(0)
00b340 e0f0      	LDI  R31,HIGH(0)
00b341 93fa      	ST   -Y,R31
00b342 93ea      	ST   -Y,R30
00b343 e2a0      	LDI  R26,LOW(32)
00b344 e0b0      	LDI  R27,0
00b345 da6f      	RCALL _mem_set_G103
00b346 940e de38 	CALL SUBOPT_0x3E1
00b348 da50      	RCALL _mem_cpy_G103
00b349 81ac      	LDD  R26,Y+4
00b34a 81bd      	LDD  R27,Y+4+1
00b34b 9654      	ADIW R26,20
00b34c 940e e3cc 	CALL __GETW1P
00b34e 85e3      	LDD  R30,Z+11
00b34f 71e8      	ANDI R30,LOW(0x18)
                +
00b350 01d9     +MOVW R26 , R18
00b351 961c     +ADIW R26 , 12
00b352 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
00b353 81ac      	LDD  R26,Y+4
00b354 81bd      	LDD  R27,Y+4+1
00b355 940e e3cc 	CALL __GETW1P
00b357 9634      	ADIW R30,4
00b358 e0a1      	LDI  R26,LOW(1)
00b359 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00b35a 2fe1      	MOV  R30,R17
00b35b 940e e47e 	CALL __LOADLOCR4
00b35d c172      	RJMP _0x20E0012
                 _create_name_G103:
00b35e 93ba      	ST   -Y,R27
00b35f 93aa      	ST   -Y,R26
00b360 9725      	SBIW R28,5
00b361 940e e475 	CALL __SAVELOCR6
00b363 85ad      	LDD  R26,Y+13
00b364 85be      	LDD  R27,Y+13+1
00b365 9654      	ADIW R26,20
00b366 914d      	LD   R20,X+
00b367 915c      	LD   R21,X
00b368 935a      	ST   -Y,R21
00b369 934a      	ST   -Y,R20
00b36a e2e0      	LDI  R30,LOW(32)
00b36b e0f0      	LDI  R31,HIGH(32)
00b36c 93fa      	ST   -Y,R31
00b36d 93ea      	ST   -Y,R30
00b36e 940e c467 	CALL SUBOPT_0x48
00b370 da44      	RCALL _mem_set_G103
00b371 e0e0      	LDI  R30,LOW(0)
00b372 87e8      	STD  Y+8,R30
00b373 87e9      	STD  Y+8+1,R30
00b374 2f1e      	MOV  R17,R30
00b375 2f2e      	MOV  R18,R30
00b376 e0e8      	LDI  R30,LOW(8)
00b377 87ea      	STD  Y+10,R30
00b378 85ab      	LDD  R26,Y+11
00b379 85bc      	LDD  R27,Y+11+1
00b37a 940e dce1 	CALL SUBOPT_0x3AF
00b37c 85e8      	LDD  R30,Y+8
00b37d 85f9      	LDD  R31,Y+8+1
00b37e 940e d12a 	CALL SUBOPT_0x236
00b380 91ac      	LD   R26,X
00b381 32ae      	CPI  R26,LOW(0x2E)
00b382 f549      	BRNE _0x20600B3
                 _0x20600B5:
00b383 940e c5de 	CALL SUBOPT_0x80
00b385 940e d12a 	CALL SUBOPT_0x236
00b387 910c      	LD   R16,X
00b388 320e      	CPI  R16,46
00b389 f421      	BRNE _0x20600B8
00b38a 85a8      	LDD  R26,Y+8
00b38b 85b9      	LDD  R27,Y+8+1
00b38c 9713      	SBIW R26,3
00b38d f00c      	BRLT _0x20600B7
                 _0x20600B8:
00b38e c003      	RJMP _0x20600B6
                 _0x20600B7:
00b38f 940e de42 	CALL SUBOPT_0x3E2
00b391 cff1      	RJMP _0x20600B5
                 _0x20600B6:
00b392 320f      	CPI  R16,47
00b393 f021      	BREQ _0x20600BB
00b394 350c      	CPI  R16,92
00b395 f011      	BREQ _0x20600BB
00b396 3201      	CPI  R16,33
00b397 f408      	BRSH _0x20600BC
                 _0x20600BB:
00b398 c002      	RJMP _0x20600BA
                 _0x20600BC:
00b399 e0e6      	LDI  R30,LOW(6)
00b39a c07d      	RJMP _0x20E0013
                 _0x20600BA:
00b39b 85e8      	LDD  R30,Y+8
00b39c 85f9      	LDD  R31,Y+8+1
00b39d 940e ccdd 	CALL SUBOPT_0x1A6
00b39f 85ab      	LDD  R26,Y+11
00b3a0 85bc      	LDD  R27,Y+11+1
00b3a1 93ed      	ST   X+,R30
00b3a2 93fc      	ST   X,R31
00b3a3 3201      	CPI  R16,33
00b3a4 f410      	BRSH _0x20600BD
00b3a5 e2e4      	LDI  R30,LOW(36)
00b3a6 c001      	RJMP _0x20600BE
                 _0x20600BD:
00b3a7 e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00b3a8 01da     +MOVW R26 , R20
00b3a9 961b     +ADIW R26 , 11
00b3aa 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00b3ab c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
00b3ac 940e c5de 	CALL SUBOPT_0x80
00b3ae 940e d12a 	CALL SUBOPT_0x236
00b3b0 910c      	LD   R16,X
00b3b1 3201      	CPI  R16,33
00b3b2 f020      	BRLO _0x20600C4
00b3b3 320f      	CPI  R16,47
00b3b4 f011      	BREQ _0x20600C4
00b3b5 350c      	CPI  R16,92
00b3b6 f409      	BRNE _0x20600C3
                 _0x20600C4:
00b3b7 c035      	RJMP _0x20600C2
                 _0x20600C3:
00b3b8 320e      	CPI  R16,46
00b3b9 f019      	BREQ _0x20600C7
00b3ba 85ea      	LDD  R30,Y+10
00b3bb 172e      	CP   R18,R30
00b3bc f068      	BRLO _0x20600C6
                 _0x20600C7:
00b3bd 85aa      	LDD  R26,Y+10
00b3be 30a8      	CPI  R26,LOW(0x8)
00b3bf f411      	BRNE _0x20600CA
00b3c0 320e      	CPI  R16,46
00b3c1 f011      	BREQ _0x20600C9
                 _0x20600CA:
00b3c2 e0e6      	LDI  R30,LOW(6)
00b3c3 c054      	RJMP _0x20E0013
                 _0x20600C9:
00b3c4 e028      	LDI  R18,LOW(8)
00b3c5 e0eb      	LDI  R30,LOW(11)
00b3c6 87ea      	STD  Y+10,R30
00b3c7 0f11      	LSL  R17
00b3c8 0f11      	LSL  R17
00b3c9 c022      	RJMP _0x20600C0
                 _0x20600C6:
00b3ca 3800      	CPI  R16,128
00b3cb f018      	BRLO _0x20600CC
00b3cc 6013      	ORI  R17,LOW(3)
00b3cd e0e6      	LDI  R30,LOW(6)
00b3ce c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
00b3cf efea     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
00b3d0 e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
00b3d1 e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
00b3d2 e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
00b3d3 940e e400 	CALL __PUTPARD1
00b3d5 2fa0      	MOV  R26,R16
00b3d6 27bb      	CLR  R27
00b3d7 da1b      	RCALL _chk_chrf_G103
00b3d8 9730      	SBIW R30,0
00b3d9 f011      	BREQ _0x20600D2
00b3da e0e6      	LDI  R30,LOW(6)
00b3db c03c      	RJMP _0x20E0013
                 _0x20600D2:
00b3dc 3401      	CPI  R16,65
00b3dd f010      	BRLO _0x20600D4
00b3de 350b      	CPI  R16,91
00b3df f008      	BRLO _0x20600D5
                 _0x20600D4:
00b3e0 c002      	RJMP _0x20600D3
                 _0x20600D5:
00b3e1 6012      	ORI  R17,LOW(2)
00b3e2 c007      	RJMP _0x20600D6
                 _0x20600D3:
00b3e3 3601      	CPI  R16,97
00b3e4 f010      	BRLO _0x20600D8
00b3e5 370b      	CPI  R16,123
00b3e6 f008      	BRLO _0x20600D9
                 _0x20600D8:
00b3e7 c002      	RJMP _0x20600D7
                 _0x20600D9:
00b3e8 6011      	ORI  R17,LOW(1)
00b3e9 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
00b3ea 940e de42 	CALL SUBOPT_0x3E2
                 _0x20600C0:
00b3ec cfbf      	RJMP _0x20600C1
                 _0x20600C2:
00b3ed 85e8      	LDD  R30,Y+8
00b3ee 85f9      	LDD  R31,Y+8+1
00b3ef 940e ccdd 	CALL SUBOPT_0x1A6
00b3f1 85ab      	LDD  R26,Y+11
00b3f2 85bc      	LDD  R27,Y+11+1
00b3f3 93ed      	ST   X+,R30
00b3f4 93fc      	ST   X,R31
00b3f5 3201      	CPI  R16,33
00b3f6 f410      	BRSH _0x20600DA
00b3f7 e0e4      	LDI  R30,LOW(4)
00b3f8 c001      	RJMP _0x20600DB
                 _0x20600DA:
00b3f9 e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
00b3fa 2f0e      	MOV  R16,R30
00b3fb 3020      	CPI  R18,0
00b3fc f411      	BRNE _0x20600DD
00b3fd e0e6      	LDI  R30,LOW(6)
00b3fe c019      	RJMP _0x20E0013
                 _0x20600DD:
00b3ff 01da      	MOVW R26,R20
00b400 91ac      	LD   R26,X
00b401 3ea5      	CPI  R26,LOW(0xE5)
00b402 f419      	BRNE _0x20600DE
00b403 01da      	MOVW R26,R20
00b404 e0e5      	LDI  R30,LOW(5)
00b405 93ec      	ST   X,R30
                 _0x20600DE:
00b406 85aa      	LDD  R26,Y+10
00b407 30a8      	CPI  R26,LOW(0x8)
00b408 f411      	BRNE _0x20600DF
00b409 0f11      	LSL  R17
00b40a 0f11      	LSL  R17
                 _0x20600DF:
00b40b 2fe1      	MOV  R30,R17
00b40c 70e3      	ANDI R30,LOW(0x3)
00b40d 30e1      	CPI  R30,LOW(0x1)
00b40e f409      	BRNE _0x20600E0
00b40f 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
00b410 2fe1      	MOV  R30,R17
00b411 70ec      	ANDI R30,LOW(0xC)
00b412 30e4      	CPI  R30,LOW(0x4)
00b413 f409      	BRNE _0x20600E1
00b414 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
00b415 01fa      	MOVW R30,R20
                +
00b416 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
00b417 e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
00b418 940e e47c 	CALL __LOADLOCR6
00b41a 962f      	ADIW R28,15
00b41b 9508      	RET
                 _follow_path_G103:
00b41c 940e c5d9 	CALL SUBOPT_0x7F
                 _0x20600F7:
00b41e e0e1      	LDI  R30,LOW(1)
00b41f 30e0      	CPI  R30,0
00b420 f029      	BREQ _0x20600FA
00b421 81ac      	LDD  R26,Y+4
00b422 81bd      	LDD  R27,Y+4+1
00b423 91ac      	LD   R26,X
00b424 32a0      	CPI  R26,LOW(0x20)
00b425 f009      	BREQ _0x20600FB
                 _0x20600FA:
00b426 c006      	RJMP _0x20600F9
                 _0x20600FB:
00b427 81ec      	LDD  R30,Y+4
00b428 81fd      	LDD  R31,Y+4+1
00b429 9631      	ADIW R30,1
00b42a 83ec      	STD  Y+4,R30
00b42b 83fd      	STD  Y+4+1,R31
00b42c cff1      	RJMP _0x20600F7
                 _0x20600F9:
00b42d 81ac      	LDD  R26,Y+4
00b42e 81bd      	LDD  R27,Y+4+1
00b42f 91ac      	LD   R26,X
00b430 32af      	CPI  R26,LOW(0x2F)
00b431 f029      	BREQ _0x20600FD
00b432 81ac      	LDD  R26,Y+4
00b433 81bd      	LDD  R27,Y+4+1
00b434 91ac      	LD   R26,X
00b435 35ac      	CPI  R26,LOW(0x5C)
00b436 f459      	BRNE _0x20600FC
                 _0x20600FD:
00b437 81ec      	LDD  R30,Y+4
00b438 81fd      	LDD  R31,Y+4+1
00b439 9631      	ADIW R30,1
00b43a 83ec      	STD  Y+4,R30
00b43b 83fd      	STD  Y+4+1,R31
00b43c 81ae      	LDD  R26,Y+6
00b43d 81bf      	LDD  R27,Y+6+1
00b43e 9616      	ADIW R26,6
00b43f 940e c634 	CALL SUBOPT_0x8E
00b441 c00a      	RJMP _0x20600FF
                 _0x20600FC:
00b442 81ae      	LDD  R26,Y+6
00b443 81bf      	LDD  R27,Y+6+1
00b444 940e e3cc 	CALL __GETW1P
00b446 9676      	ADIW R30,22
00b447 01df      	MOVW R26,R30
00b448 940e e3d0 	CALL __GETD1P
00b44a 940e de4d 	CALL SUBOPT_0x3E4
                 _0x20600FF:
00b44c 81ac      	LDD  R26,Y+4
00b44d 81bd      	LDD  R27,Y+4+1
00b44e 91ac      	LD   R26,X
00b44f 27bb      	CLR  R27
00b450 9790      	SBIW R26,32
00b451 f460      	BRSH _0x2060100
00b452 940e cb1f 	CALL SUBOPT_0x15C
00b454 940e c8c4 	CALL SUBOPT_0xF6
00b456 dd02      	RCALL _dir_seek_G103
00b457 2f1e      	MOV  R17,R30
00b458 81ae      	LDD  R26,Y+6
00b459 81bf      	LDD  R27,Y+6+1
00b45a 9652      	ADIW R26,18
00b45b 940e c971 	CALL SUBOPT_0x114
00b45d c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
00b45e 940e cb1f 	CALL SUBOPT_0x15C
00b460 01de      	MOVW R26,R28
00b461 9616      	ADIW R26,6
00b462 defb      	RCALL _create_name_G103
00b463 2f1e      	MOV  R17,R30
00b464 3010      	CPI  R17,0
00b465 f5a9      	BRNE _0x2060104
00b466 81ae      	LDD  R26,Y+6
00b467 81bf      	LDD  R27,Y+6+1
00b468 de74      	RCALL _dir_find_G103
00b469 2f1e      	MOV  R17,R30
00b46a 81ae      	LDD  R26,Y+6
00b46b 81bf      	LDD  R27,Y+6+1
00b46c 9654      	ADIW R26,20
00b46d 940e e3cc 	CALL __GETW1P
00b46f 85e3      	LDD  R30,Z+11
00b470 70e4      	ANDI R30,LOW(0x4)
00b471 2f0e      	MOV  R16,R30
00b472 3010      	CPI  R17,0
00b473 f039      	BREQ _0x2060106
00b474 3014      	CPI  R17,4
00b475 f411      	BRNE _0x2060108
00b476 3000      	CPI  R16,0
00b477 f009      	BREQ _0x2060109
                 _0x2060108:
00b478 c001      	RJMP _0x2060107
                 _0x2060109:
00b479 e015      	LDI  R17,LOW(5)
                 _0x2060107:
00b47a c020      	RJMP _0x2060104
                 _0x2060106:
00b47b 3000      	CPI  R16,0
00b47c f4f1      	BRNE _0x2060104
00b47d 81ae      	LDD  R26,Y+6
00b47e 81bf      	LDD  R27,Y+6+1
00b47f 9652      	ADIW R26,18
00b480 912d      	LD   R18,X+
00b481 913c      	LD   R19,X
00b482 01f9      	MOVW R30,R18
00b483 85e3      	LDD  R30,Z+11
00b484 71e0      	ANDI R30,LOW(0x10)
00b485 f411      	BRNE _0x206010B
00b486 e015      	LDI  R17,LOW(5)
00b487 c013      	RJMP _0x2060104
                 _0x206010B:
00b488 940e de53 	CALL SUBOPT_0x3E5
00b48a 940e e2d2 	CALL __LSLD16
00b48c 937f      	PUSH R23
00b48d 936f      	PUSH R22
00b48e 93ff      	PUSH R31
00b48f 93ef      	PUSH R30
00b490 940e de57 	CALL SUBOPT_0x3E6
00b492 91af      	POP  R26
00b493 91bf      	POP  R27
00b494 918f      	POP  R24
00b495 919f      	POP  R25
00b496 940e de5c 	CALL SUBOPT_0x3E7
00b498 940e de4d 	CALL SUBOPT_0x3E4
00b49a cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00b49b 2fe1      	MOV  R30,R17
00b49c 940e e47e 	CALL __LOADLOCR4
00b49e 9628      	ADIW R28,8
00b49f 9508      	RET
                 _check_fs_G103:
00b4a0 940e e405 	CALL __PUTPARD2
00b4a2 81ec      	LDD  R30,Y+4
00b4a3 81fd      	LDD  R31,Y+4+1
00b4a4 81a1      	LDD  R26,Z+1
00b4a5 93aa      	ST   -Y,R26
00b4a6 81ed      	LDD  R30,Y+5
00b4a7 81fe      	LDD  R31,Y+5+1
00b4a8 96f2      	ADIW R30,50
00b4a9 93fa      	ST   -Y,R31
00b4aa 93ea      	ST   -Y,R30
                +
00b4ab 81eb     +LDD R30 , Y + 3
00b4ac 81fc     +LDD R31 , Y + 3 + 1
00b4ad 816d     +LDD R22 , Y + 3 + 2
00b4ae 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00b4af 940e de61 	CALL SUBOPT_0x3E8
00b4b1 f011      	BREQ _0x206010C
00b4b2 e0e3      	LDI  R30,LOW(3)
00b4b3 c01c      	RJMP _0x20E0012
                 _0x206010C:
00b4b4 81ec      	LDD  R30,Y+4
00b4b5 81fd      	LDD  R31,Y+4+1
00b4b6 940e de68 	CALL SUBOPT_0x3E9
00b4b8 f011      	BREQ _0x206010D
00b4b9 e0e2      	LDI  R30,LOW(2)
00b4ba c015      	RJMP _0x20E0012
                 _0x206010D:
00b4bb 81ac      	LDD  R26,Y+4
00b4bc 81bd      	LDD  R27,Y+4+1
00b4bd 59a8      	SUBI R26,LOW(-104)
00b4be 4fbf      	SBCI R27,HIGH(-104)
00b4bf 940e de72 	CALL SUBOPT_0x3EA
00b4c1 f411      	BRNE _0x206010E
00b4c2 e0e0      	LDI  R30,LOW(0)
00b4c3 c00c      	RJMP _0x20E0012
                 _0x206010E:
00b4c4 81ec      	LDD  R30,Y+4
00b4c5 81fd      	LDD  R31,Y+4+1
00b4c6 96f2      	ADIW R30,50
00b4c7 5aee      	SUBI R30,LOW(-82)
00b4c8 4fff      	SBCI R31,HIGH(-82)
00b4c9 01df      	MOVW R26,R30
00b4ca 940e de72 	CALL SUBOPT_0x3EA
00b4cc f411      	BRNE _0x206010F
00b4cd e0e0      	LDI  R30,LOW(0)
00b4ce c001      	RJMP _0x20E0012
                 _0x206010F:
00b4cf e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
00b4d0 9626      	ADIW R28,6
00b4d1 9508      	RET
                 _chk_mounted:
00b4d2 93aa      	ST   -Y,R26
00b4d3 9764      	SBIW R28,20
00b4d4 940e e475 	CALL __SAVELOCR6
00b4d6 8dad      	LDD  R26,Y+29
00b4d7 8dbe      	LDD  R27,Y+29+1
00b4d8 940e e3cc 	CALL __GETW1P
00b4da 87e8      	STD  Y+8,R30
00b4db 87f9      	STD  Y+8+1,R31
00b4dc 85a8      	LDD  R26,Y+8
00b4dd 85b9      	LDD  R27,Y+8+1
00b4de 91ec      	LD   R30,X
00b4df 53e0      	SUBI R30,LOW(48)
00b4e0 2f0e      	MOV  R16,R30
00b4e1 300a      	CPI  R16,10
00b4e2 f420      	BRSH _0x2060111
00b4e3 9611      	ADIW R26,1
00b4e4 91ac      	LD   R26,X
00b4e5 33aa      	CPI  R26,LOW(0x3A)
00b4e6 f009      	BREQ _0x2060112
                 _0x2060111:
00b4e7 c00a      	RJMP _0x2060110
                 _0x2060112:
00b4e8 85e8      	LDD  R30,Y+8
00b4e9 85f9      	LDD  R31,Y+8+1
00b4ea 9632      	ADIW R30,2
00b4eb 940e cc79 	CALL SUBOPT_0x193
00b4ed 8dad      	LDD  R26,Y+29
00b4ee 8dbe      	LDD  R27,Y+29+1
00b4ef 93ed      	ST   X+,R30
00b4f0 93fc      	ST   X,R31
00b4f1 c002      	RJMP _0x2060113
                 _0x2060110:
00b4f2 9100 1ade 	LDS  R16,_Drive_G103
                 _0x2060113:
00b4f4 3001      	CPI  R16,1
00b4f5 f010      	BRLO _0x2060114
00b4f6 e0eb      	LDI  R30,LOW(11)
00b4f7 c1c3      	RJMP _0x20E0010
                 _0x2060114:
00b4f8 2fe0      	MOV  R30,R16
00b4f9 940e de80 	CALL SUBOPT_0x3EB
00b4fb 940e dce1 	CALL SUBOPT_0x3AF
00b4fd 8dab      	LDD  R26,Y+27
00b4fe 8dbc      	LDD  R27,Y+27+1
00b4ff 93ed      	ST   X+,R30
00b500 93fc      	ST   X,R31
00b501 81ee      	LDD  R30,Y+6
00b502 81ff      	LDD  R31,Y+6+1
00b503 9730      	SBIW R30,0
00b504 f411      	BRNE _0x2060115
00b505 e0ec      	LDI  R30,LOW(12)
00b506 c1b4      	RJMP _0x20E0010
                 _0x2060115:
00b507 81ae      	LDD  R26,Y+6
00b508 81bf      	LDD  R27,Y+6+1
00b509 91ec      	LD   R30,X
00b50a 30e0      	CPI  R30,0
00b50b f089      	BREQ _0x2060116
00b50c 81ee      	LDD  R30,Y+6
00b50d 81ff      	LDD  R31,Y+6+1
00b50e 81a1      	LDD  R26,Z+1
00b50f 940e aa66 	CALL _disk_status
00b511 2f5e      	MOV  R21,R30
00b512 fd50      	SBRC R21,0
00b513 c009      	RJMP _0x2060117
00b514 8dea      	LDD  R30,Y+26
00b515 30e0      	CPI  R30,0
00b516 f011      	BREQ _0x2060119
00b517 fd52      	SBRC R21,2
00b518 c001      	RJMP _0x206011A
                 _0x2060119:
00b519 c002      	RJMP _0x2060118
                 _0x206011A:
00b51a e0ea      	LDI  R30,LOW(10)
00b51b c19f      	RJMP _0x20E0010
                 _0x2060118:
00b51c c19d      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
00b51d 81ae      	LDD  R26,Y+6
00b51e 81bf      	LDD  R27,Y+6+1
00b51f e0e0      	LDI  R30,LOW(0)
00b520 93ec      	ST   X,R30
00b521 2fe0      	MOV  R30,R16
                +
00b522 81ae     +LDD R26 , Y + 6
00b523 81bf     +LDD R27 , Y + 6 + 1
00b524 9611     +ADIW R26 , 1
00b525 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
00b526 81ee      	LDD  R30,Y+6
00b527 81ff      	LDD  R31,Y+6+1
00b528 81a1      	LDD  R26,Z+1
00b529 940e a995 	CALL _disk_initialize
00b52b 2f5e      	MOV  R21,R30
00b52c ff50      	SBRS R21,0
00b52d c002      	RJMP _0x206011B
00b52e e0e3      	LDI  R30,LOW(3)
00b52f c18b      	RJMP _0x20E0010
                 _0x206011B:
00b530 8dea      	LDD  R30,Y+26
00b531 30e0      	CPI  R30,0
00b532 f011      	BREQ _0x206011D
00b533 fd52      	SBRC R21,2
00b534 c001      	RJMP _0x206011E
                 _0x206011D:
00b535 c002      	RJMP _0x206011C
                 _0x206011E:
00b536 e0ea      	LDI  R30,LOW(10)
00b537 c183      	RJMP _0x20E0010
                 _0x206011C:
00b538 940e cb1f 	CALL SUBOPT_0x15C
00b53a 940e dde6 	CALL SUBOPT_0x3D3
                +
00b53c 8fe8     +STD Y + 24 , R30
00b53d 8ff9     +STD Y + 24 + 1 , R31
00b53e 8f6a     +STD Y + 24 + 2 , R22
00b53f 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00b540 01df      	MOVW R26,R30
00b541 01cb      	MOVW R24,R22
00b542 df5d      	RCALL _check_fs_G103
00b543 2f1e      	MOV  R17,R30
00b544 3011      	CPI  R17,1
00b545 f4b1      	BRNE _0x206011F
00b546 81ee      	LDD  R30,Y+6
00b547 81ff      	LDD  R31,Y+6+1
00b548 96f2      	ADIW R30,50
00b549 54e2      	SUBI R30,LOW(-446)
00b54a 4ffe      	SBCI R31,HIGH(-446)
00b54b 019f      	MOVW R18,R30
00b54c 01f9      	MOVW R30,R18
00b54d 81e4      	LDD  R30,Z+4
00b54e 30e0      	CPI  R30,0
00b54f f061      	BREQ _0x2060120
00b550 01d9      	MOVW R26,R18
00b551 9618      	ADIW R26,8
00b552 940e e3d0 	CALL __GETD1P
00b554 940e c779 	CALL SUBOPT_0xC1
00b556 940e cb1f 	CALL SUBOPT_0x15C
00b558 940e d114 	CALL SUBOPT_0x232
00b55a df45      	RCALL _check_fs_G103
00b55b 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
00b55c 3013      	CPI  R17,3
00b55d f411      	BRNE _0x2060121
00b55e e0e1      	LDI  R30,LOW(1)
00b55f c15b      	RJMP _0x20E0010
                 _0x2060121:
00b560 3010      	CPI  R17,0
00b561 f449      	BRNE _0x2060123
00b562 81ae      	LDD  R26,Y+6
00b563 81bf      	LDD  R27,Y+6+1
00b564 96dd      	ADIW R26,61
00b565 940e e3cc 	CALL __GETW1P
00b567 30e0      	CPI  R30,LOW(0x200)
00b568 e0a2      	LDI  R26,HIGH(0x200)
00b569 07fa      	CPC  R31,R26
00b56a f011      	BREQ _0x2060122
                 _0x2060123:
00b56b e0ed      	LDI  R30,LOW(13)
00b56c c14e      	RJMP _0x20E0010
                 _0x2060122:
00b56d 81ae      	LDD  R26,Y+6
00b56e 81bf      	LDD  R27,Y+6+1
00b56f 5ba8      	SUBI R26,LOW(-72)
00b570 4fbf      	SBCI R27,HIGH(-72)
00b571 940e c33e 	CALL SUBOPT_0x1E
00b573 940e de88 	CALL SUBOPT_0x3EC
00b575 940e c7ff 	CALL SUBOPT_0xD4
00b577 940e e459 	CALL __CPD10
00b579 f441      	BRNE _0x2060125
00b57a 81ae      	LDD  R26,Y+6
00b57b 81bf      	LDD  R27,Y+6+1
00b57c 5aaa      	SUBI R26,LOW(-86)
00b57d 4fbf      	SBCI R27,HIGH(-86)
00b57e 940e e3d0 	CALL __GETD1P
00b580 940e de88 	CALL SUBOPT_0x3EC
                 _0x2060125:
00b582 940e c7ff 	CALL SUBOPT_0xD4
                +
00b584 81ae     +LDD R26 , Y + 6
00b585 81bf     +LDD R27 , Y + 6 + 1
00b586 965a     +ADIW R26 , 26
00b587 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00b589 81ee      	LDD  R30,Y+6
00b58a 81ff      	LDD  R31,Y+6+1
00b58b 5bee      	SUBI R30,LOW(-66)
00b58c 4fff      	SBCI R31,HIGH(-66)
00b58d 81e0      	LD   R30,Z
                +
00b58e 81ae     +LDD R26 , Y + 6
00b58f 81bf     +LDD R27 , Y + 6 + 1
00b590 9613     +ADIW R26 , 3
00b591 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00b592 81ee      	LDD  R30,Y+6
00b593 81ff      	LDD  R31,Y+6+1
00b594 81e3      	LDD  R30,Z+3
00b595 e0f0      	LDI  R31,0
00b596 940e ddd5 	CALL SUBOPT_0x3D0
00b598 940e d3d2 	CALL SUBOPT_0x29C
00b59a 940e de88 	CALL SUBOPT_0x3EC
00b59c 940e de8d 	CALL SUBOPT_0x3ED
00b59e 940e c7f5 	CALL SUBOPT_0xD2
00b5a0 940e de04 	CALL SUBOPT_0x3D8
                +
00b5a2 81ae     +LDD R26 , Y + 6
00b5a3 81bf     +LDD R27 , Y + 6 + 1
00b5a4 9692     +ADIW R26 , 34
00b5a5 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00b5a7 81ee      	LDD  R30,Y+6
00b5a8 81ff      	LDD  R31,Y+6+1
00b5a9 ade7      	LDD  R30,Z+63
                +
00b5aa 81ae     +LDD R26 , Y + 6
00b5ab 81bf     +LDD R27 , Y + 6 + 1
00b5ac 9612     +ADIW R26 , 2
00b5ad 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00b5ae 81ae      	LDD  R26,Y+6
00b5af 81bf      	LDD  R27,Y+6+1
00b5b0 5bad      	SUBI R26,LOW(-67)
00b5b1 4fbf      	SBCI R27,HIGH(-67)
00b5b2 940e e3cc 	CALL __GETW1P
                +
00b5b4 81ae     +LDD R26 , Y + 6
00b5b5 81bf     +LDD R27 , Y + 6 + 1
00b5b6 9618     +ADIW R26 , 8
00b5b7 93ed     +ST X + , R30
00b5b8 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00b5b9 81ae      	LDD  R26,Y+6
00b5ba 81bf      	LDD  R27,Y+6+1
00b5bb 5bab      	SUBI R26,LOW(-69)
00b5bc 4fbf      	SBCI R27,HIGH(-69)
00b5bd 940e c33e 	CALL SUBOPT_0x1E
00b5bf 940e de94 	CALL SUBOPT_0x3EE
00b5c1 940e c503 	CALL SUBOPT_0x60
00b5c3 940e e459 	CALL __CPD10
00b5c5 f441      	BRNE _0x2060126
00b5c6 81ae      	LDD  R26,Y+6
00b5c7 81bf      	LDD  R27,Y+6+1
00b5c8 5aae      	SUBI R26,LOW(-82)
00b5c9 4fbf      	SBCI R27,HIGH(-82)
00b5ca 940e e3d0 	CALL __GETD1P
00b5cc 940e de94 	CALL SUBOPT_0x3EE
                 _0x2060126:
00b5ce 940e de8d 	CALL SUBOPT_0x3ED
00b5d0 940e dd78 	CALL SUBOPT_0x3C4
00b5d2 2766      	CLR  R22
00b5d3 2777      	CLR  R23
00b5d4 940e c774 	CALL SUBOPT_0xC0
00b5d6 940e ddd5 	CALL SUBOPT_0x3D0
00b5d8 940e e262 	CALL __SUBD12
00b5da 937f      	PUSH R23
00b5db 936f      	PUSH R22
00b5dc 93ff      	PUSH R31
00b5dd 93ef      	PUSH R30
00b5de 940e de99 	CALL SUBOPT_0x3EF
00b5e0 91af      	POP  R26
00b5e1 91bf      	POP  R27
00b5e2 918f      	POP  R24
00b5e3 919f      	POP  R25
00b5e4 2766      	CLR  R22
00b5e5 2777      	CLR  R23
00b5e6 940e e267 	CALL __SUBD21
00b5e8 81ee      	LDD  R30,Y+6
00b5e9 81ff      	LDD  R31,Y+6+1
00b5ea 940e d3ca 	CALL SUBOPT_0x29A
00b5ec 940e e2dd 	CALL __CWD1
00b5ee 940e e354 	CALL __DIVD21U
                +
00b5f0 5fee     +SUBI R30 , LOW ( - 2 )
00b5f1 4fff     +SBCI R31 , HIGH ( - 2 )
00b5f2 4f6f     +SBCI R22 , BYTE3 ( - 2 )
00b5f3 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
00b5f4 940e d9f1 	CALL SUBOPT_0x352
                +
00b5f6 81ae     +LDD R26 , Y + 6
00b5f7 81bf     +LDD R27 , Y + 6 + 1
00b5f8 965e     +ADIW R26 , 30
00b5f9 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,30
00b5fb e011      	LDI  R17,LOW(1)
00b5fc 940e c4aa 	CALL SUBOPT_0x52
                +
00b5fe 3fa7     +CPI R26 , LOW ( 0xFF7 )
00b5ff e0ef     +LDI R30 , HIGH ( 0xFF7 )
00b600 07be     +CPC R27 , R30
00b601 e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
00b602 078e     +CPC R24 , R30
00b603 e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
00b604 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
00b605 f008      	BRLO _0x2060127
00b606 e012      	LDI  R17,LOW(2)
                 _0x2060127:
00b607 940e c4aa 	CALL SUBOPT_0x52
                +
00b609 3fa7     +CPI R26 , LOW ( 0xFFF7 )
00b60a efef     +LDI R30 , HIGH ( 0xFFF7 )
00b60b 07be     +CPC R27 , R30
00b60c e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
00b60d 078e     +CPC R24 , R30
00b60e e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
00b60f 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
00b610 f008      	BRLO _0x2060128
00b611 e013      	LDI  R17,LOW(3)
                 _0x2060128:
00b612 3013      	CPI  R17,3
00b613 f439      	BRNE _0x2060129
00b614 81ae      	LDD  R26,Y+6
00b615 81bf      	LDD  R27,Y+6+1
00b616 5aa2      	SUBI R26,LOW(-94)
00b617 4fbf      	SBCI R27,HIGH(-94)
00b618 940e e3d0 	CALL __GETD1P
00b61a c002      	RJMP _0x206022D
                 _0x2060129:
00b61b 940e dea1 	CALL SUBOPT_0x3F0
                 _0x206022D:
                +
00b61d 81ae     +LDD R26 , Y + 6
00b61e 81bf     +LDD R27 , Y + 6 + 1
00b61f 9696     +ADIW R26 , 38
00b620 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,38
00b622 940e dea1 	CALL SUBOPT_0x3F0
00b624 937f      	PUSH R23
00b625 936f      	PUSH R22
00b626 93ff      	PUSH R31
00b627 93ef      	PUSH R30
00b628 940e de99 	CALL SUBOPT_0x3EF
00b62a 91af      	POP  R26
00b62b 91bf      	POP  R27
00b62c 918f      	POP  R24
00b62d 919f      	POP  R25
00b62e 940e de04 	CALL SUBOPT_0x3D8
                +
00b630 81ae     +LDD R26 , Y + 6
00b631 81bf     +LDD R27 , Y + 6 + 1
00b632 969a     +ADIW R26 , 42
00b633 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,42
00b635 81ae      	LDD  R26,Y+6
00b636 81bf      	LDD  R27,Y+6+1
00b637 961e      	ADIW R26,14
00b638 940e c369 	CALL SUBOPT_0x25
00b63a 940e e3db 	CALL __PUTDP1
00b63c 81ae      	LDD  R26,Y+6
00b63d 81bf      	LDD  R27,Y+6+1
00b63e 9614      	ADIW R26,4
00b63f e0e0      	LDI  R30,LOW(0)
00b640 93ec      	ST   X,R30
00b641 3013      	CPI  R17,3
00b642 f011      	BREQ PC+3
00b643 940c b6a6 	JMP _0x206012B
00b645 81ae      	LDD  R26,Y+6
00b646 81bf      	LDD  R27,Y+6+1
00b647 9615      	ADIW R26,5
00b648 93ec      	ST   X,R30
00b649 81ae      	LDD  R26,Y+6
00b64a 81bf      	LDD  R27,Y+6+1
00b64b 59ae      	SUBI R26,LOW(-98)
00b64c 4fbf      	SBCI R27,HIGH(-98)
00b64d 940e e3cc 	CALL __GETW1P
00b64f 940e c7f5 	CALL SUBOPT_0xD2
00b651 940e de04 	CALL SUBOPT_0x3D8
                +
00b653 81ae     +LDD R26 , Y + 6
00b654 81bf     +LDD R27 , Y + 6 + 1
00b655 9652     +ADIW R26 , 18
00b656 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00b658 81ee      	LDD  R30,Y+6
00b659 81ff      	LDD  R31,Y+6+1
00b65a 81a1      	LDD  R26,Z+1
00b65b 93aa      	ST   -Y,R26
00b65c 81ef      	LDD  R30,Y+7
00b65d 85f8      	LDD  R31,Y+7+1
00b65e 96f2      	ADIW R30,50
00b65f 93fa      	ST   -Y,R31
00b660 93ea      	ST   -Y,R30
00b661 85e9      	LDD  R30,Y+9
00b662 85fa      	LDD  R31,Y+9+1
00b663 940e dd35 	CALL SUBOPT_0x3BA
00b665 940e aa70 	CALL _disk_read
00b667 30e0      	CPI  R30,0
00b668 f511      	BRNE _0x206012D
00b669 81ee      	LDD  R30,Y+6
00b66a 81ff      	LDD  R31,Y+6+1
00b66b 940e de68 	CALL SUBOPT_0x3E9
00b66d f4e9      	BRNE _0x206012D
00b66e 81ae      	LDD  R26,Y+6
00b66f 81bf      	LDD  R27,Y+6+1
00b670 96d2      	ADIW R26,50
00b671 940e e3d0 	CALL __GETD1P
                +
00b673 35e2     +CPI R30 , LOW ( 0x41615252 )
00b674 e5a2     +LDI R26 , HIGH ( 0x41615252 )
00b675 07fa     +CPC R31 , R26
00b676 e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00b677 076a     +CPC R22 , R26
00b678 e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00b679 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00b67a f481      	BRNE _0x206012D
00b67b 81ee      	LDD  R30,Y+6
00b67c 81ff      	LDD  R31,Y+6+1
00b67d 96f2      	ADIW R30,50
00b67e 51ec      	SUBI R30,LOW(-484)
00b67f 4ffe      	SBCI R31,HIGH(-484)
00b680 01df      	MOVW R26,R30
00b681 940e e3d0 	CALL __GETD1P
                +
00b683 37e2     +CPI R30 , LOW ( 0x61417272 )
00b684 e7a2     +LDI R26 , HIGH ( 0x61417272 )
00b685 07fa     +CPC R31 , R26
00b686 e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00b687 076a     +CPC R22 , R26
00b688 e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00b689 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00b68a f009      	BREQ _0x206012E
                 _0x206012D:
00b68b c01a      	RJMP _0x206012C
                 _0x206012E:
00b68c 81ee      	LDD  R30,Y+6
00b68d 81ff      	LDD  R31,Y+6+1
00b68e 96f2      	ADIW R30,50
00b68f 51e4      	SUBI R30,LOW(-492)
00b690 4ffe      	SBCI R31,HIGH(-492)
00b691 01df      	MOVW R26,R30
00b692 940e e3d0 	CALL __GETD1P
                +
00b694 81ae     +LDD R26 , Y + 6
00b695 81bf     +LDD R27 , Y + 6 + 1
00b696 961a     +ADIW R26 , 10
00b697 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00b699 81ee      	LDD  R30,Y+6
00b69a 81ff      	LDD  R31,Y+6+1
00b69b 96f2      	ADIW R30,50
00b69c 51e8      	SUBI R30,LOW(-488)
00b69d 4ffe      	SBCI R31,HIGH(-488)
00b69e 01df      	MOVW R26,R30
00b69f 940e e3d0 	CALL __GETD1P
                +
00b6a1 81ae     +LDD R26 , Y + 6
00b6a2 81bf     +LDD R27 , Y + 6 + 1
00b6a3 961e     +ADIW R26 , 14
00b6a4 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00b6a6 81ae      	LDD  R26,Y+6
00b6a7 81bf      	LDD  R27,Y+6+1
00b6a8 931c      	ST   X,R17
00b6a9 969e      	ADIW R26,46
00b6aa 940e c634 	CALL SUBOPT_0x8E
00b6ac 81ae      	LDD  R26,Y+6
00b6ad 81bf      	LDD  R27,Y+6+1
00b6ae 9656      	ADIW R26,22
00b6af 940e c634 	CALL SUBOPT_0x8E
00b6b1 edac      	LDI  R26,LOW(_Fsid_G103)
00b6b2 e1ba      	LDI  R27,HIGH(_Fsid_G103)
00b6b3 940e c5c8 	CALL SUBOPT_0x7C
                +
00b6b5 81ae     +LDD R26 , Y + 6
00b6b6 81bf     +LDD R27 , Y + 6 + 1
00b6b7 9616     +ADIW R26 , 6
00b6b8 93ed     +ST X + , R30
00b6b9 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00b6ba e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00b6bb 940e e47c 	CALL __LOADLOCR6
00b6bd 966f      	ADIW R28,31
00b6be 9508      	RET
                 _validate_G103:
00b6bf 940e d33b 	CALL SUBOPT_0x284
00b6c1 9730      	SBIW R30,0
00b6c2 f071      	BREQ _0x2060130
00b6c3 81aa      	LDD  R26,Y+2
00b6c4 81bb      	LDD  R27,Y+2+1
00b6c5 91ec      	LD   R30,X
00b6c6 30e0      	CPI  R30,0
00b6c7 f049      	BREQ _0x2060130
00b6c8 81ea      	LDD  R30,Y+2
00b6c9 81fb      	LDD  R31,Y+2+1
00b6ca 81a6      	LDD  R26,Z+6
00b6cb 81b7      	LDD  R27,Z+7
00b6cc 81e8      	LD   R30,Y
00b6cd 81f9      	LDD  R31,Y+1
00b6ce 17ea      	CP   R30,R26
00b6cf 07fb      	CPC  R31,R27
00b6d0 f011      	BREQ _0x206012F
                 _0x2060130:
00b6d1 e0e9      	LDI  R30,LOW(9)
00b6d2 c00a      	RJMP _0x20E000F
                 _0x206012F:
00b6d3 81ea      	LDD  R30,Y+2
00b6d4 81fb      	LDD  R31,Y+2+1
00b6d5 81a1      	LDD  R26,Z+1
00b6d6 940e aa66 	CALL _disk_status
00b6d8 70e1      	ANDI R30,LOW(0x1)
00b6d9 f011      	BREQ _0x2060132
00b6da e0e3      	LDI  R30,LOW(3)
00b6db c001      	RJMP _0x20E000F
                 _0x2060132:
00b6dc e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
00b6dd 9624      	ADIW R28,4
00b6de 9508      	RET
                 _f_mount:
00b6df 940e c5e5 	CALL SUBOPT_0x81
00b6e1 81ac      	LDD  R26,Y+4
00b6e2 30a1      	CPI  R26,LOW(0x1)
00b6e3 f010      	BRLO _0x2060133
00b6e4 e0eb      	LDI  R30,LOW(11)
00b6e5 c020      	RJMP _0x20E000E
                 _0x2060133:
00b6e6 81ec      	LDD  R30,Y+4
00b6e7 940e de80 	CALL SUBOPT_0x3EB
00b6e9 910d      	LD   R16,X+
00b6ea 911c      	LD   R17,X
00b6eb 2e00      	MOV  R0,R16
00b6ec 2a01      	OR   R0,R17
00b6ed f019      	BREQ _0x2060134
00b6ee 01d8      	MOVW R26,R16
00b6ef e0e0      	LDI  R30,LOW(0)
00b6f0 93ec      	ST   X,R30
                 _0x2060134:
00b6f1 81ea      	LDD  R30,Y+2
00b6f2 81fb      	LDD  R31,Y+2+1
00b6f3 9730      	SBIW R30,0
00b6f4 f021      	BREQ _0x2060135
00b6f5 81aa      	LDD  R26,Y+2
00b6f6 81bb      	LDD  R27,Y+2+1
00b6f7 e0e0      	LDI  R30,LOW(0)
00b6f8 93ec      	ST   X,R30
                 _0x2060135:
00b6f9 81ec      	LDD  R30,Y+4
00b6fa edaa      	LDI  R26,LOW(_FatFs_G103)
00b6fb e1ba      	LDI  R27,HIGH(_FatFs_G103)
00b6fc e0f0      	LDI  R31,0
00b6fd 0fee      	LSL  R30
00b6fe 1fff      	ROL  R31
00b6ff 0fea      	ADD  R30,R26
00b700 1ffb      	ADC  R31,R27
00b701 81aa      	LDD  R26,Y+2
00b702 81bb      	LDD  R27,Y+2+1
00b703 83a0      	STD  Z+0,R26
00b704 83b1      	STD  Z+1,R27
00b705 e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
00b706 8119      	LDD  R17,Y+1
00b707 8108      	LDD  R16,Y+0
00b708 9625      	ADIW R28,5
00b709 9508      	RET
                 _f_open:
00b70a 93aa      	ST   -Y,R26
00b70b 97a2      	SBIW R28,34
00b70c 940e e477 	CALL __SAVELOCR4
00b70e a5a9      	LDD  R26,Y+41
00b70f a5ba      	LDD  R27,Y+41+1
00b710 940e c971 	CALL SUBOPT_0x114
00b712 a1ee      	LDD  R30,Y+38
00b713 71ef      	ANDI R30,LOW(0x1F)
00b714 a3ee      	STD  Y+38,R30
00b715 01fe      	MOVW R30,R28
00b716 96b7      	ADIW R30,39
00b717 93fa      	ST   -Y,R31
00b718 93ea      	ST   -Y,R30
00b719 940e c54f 	CALL SUBOPT_0x6C
00b71b a5ea      	LDD  R30,Y+42
00b71c 71ee      	ANDI R30,LOW(0x1E)
00b71d 2fae      	MOV  R26,R30
00b71e ddb3      	RCALL _chk_mounted
00b71f 2f1e      	MOV  R17,R30
00b720 3010      	CPI  R17,0
00b721 f011      	BREQ _0x2060136
00b722 2fe1      	MOV  R30,R17
00b723 c10f      	RJMP _0x20E000D
                 _0x2060136:
00b724 01fe      	MOVW R30,R28
00b725 9634      	ADIW R30,4
00b726 a3ec      	STD  Y+36,R30
00b727 a3fd      	STD  Y+36+1,R31
00b728 940e c4ee 	CALL SUBOPT_0x5D
00b72a a5a9      	LDD  R26,Y+41
00b72b a5ba      	LDD  R27,Y+41+1
00b72c dcef      	RCALL _follow_path_G103
00b72d 2f1e      	MOV  R17,R30
00b72e a1ee      	LDD  R30,Y+38
00b72f 71ec      	ANDI R30,LOW(0x1C)
00b730 f411      	BRNE PC+3
00b731 940c b7c6 	JMP _0x2060137
00b733 9728      	SBIW R28,8
00b734 3010      	CPI  R17,0
00b735 f089      	BREQ _0x2060138
00b736 3014      	CPI  R17,4
00b737 f421      	BRNE _0x2060139
00b738 01de      	MOVW R26,R28
00b739 9658      	ADIW R26,24
00b73a dbd6      	RCALL _dir_register_G103
00b73b 2f1e      	MOV  R17,R30
                 _0x2060139:
00b73c 3010      	CPI  R17,0
00b73d f019      	BREQ _0x206013A
00b73e 2fe1      	MOV  R30,R17
00b73f 9628      	ADIW R28,8
00b740 c0f2      	RJMP _0x20E000D
                 _0x206013A:
00b741 a5ee      	LDD  R30,Y+46
00b742 60e8      	ORI  R30,8
00b743 a7ee      	STD  Y+46,R30
                +
00b744 a52a     +LDD R18 , Y + 42
00b745 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b746 c066      	RJMP _0x206013B
                 _0x2060138:
00b747 a5ee      	LDD  R30,Y+46
00b748 70e4      	ANDI R30,LOW(0x4)
00b749 f019      	BREQ _0x206013C
00b74a e0e8      	LDI  R30,LOW(8)
00b74b 9628      	ADIW R28,8
00b74c c0e6      	RJMP _0x20E000D
                 _0x206013C:
                +
00b74d a52a     +LDD R18 , Y + 42
00b74e a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b74f 2e02      	MOV  R0,R18
00b750 2a03      	OR   R0,R19
00b751 f021      	BREQ _0x206013E
00b752 01f9      	MOVW R30,R18
00b753 85e3      	LDD  R30,Z+11
00b754 71e1      	ANDI R30,LOW(0x11)
00b755 f019      	BREQ _0x206013D
                 _0x206013E:
00b756 e0e7      	LDI  R30,LOW(7)
00b757 9628      	ADIW R28,8
00b758 c0da      	RJMP _0x20E000D
                 _0x206013D:
00b759 a5ee      	LDD  R30,Y+46
00b75a 70e8      	ANDI R30,LOW(0x8)
00b75b f411      	BRNE PC+3
00b75c 940c b7ad 	JMP _0x2060140
00b75e 940e de53 	CALL SUBOPT_0x3E5
00b760 940e e2d2 	CALL __LSLD16
00b762 937f      	PUSH R23
00b763 936f      	PUSH R22
00b764 93ff      	PUSH R31
00b765 93ef      	PUSH R30
00b766 940e de57 	CALL SUBOPT_0x3E6
00b768 91af      	POP  R26
00b769 91bf      	POP  R27
00b76a 918f      	POP  R24
00b76b 919f      	POP  R25
00b76c 940e de5c 	CALL SUBOPT_0x3E7
00b76e 940e c6c6 	CALL SUBOPT_0xA0
00b770 01f9      	MOVW R30,R18
00b771 9674      	ADIW R30,20
00b772 e0a0      	LDI  R26,LOW(0)
00b773 e0b0      	LDI  R27,HIGH(0)
00b774 83a0      	STD  Z+0,R26
00b775 83b1      	STD  Z+1,R27
00b776 01f9      	MOVW R30,R18
00b777 967a      	ADIW R30,26
00b778 83a0      	STD  Z+0,R26
00b779 83b1      	STD  Z+1,R27
00b77a 01f9      	MOVW R30,R18
00b77b 967c      	ADIW R30,28
00b77c 940e c396 	CALL SUBOPT_0x2C
00b77e 940e d262 	CALL SUBOPT_0x264
00b780 8da8      	LDD  R26,Y+24
00b781 8db9      	LDD  R27,Y+24+1
00b782 9614      	ADIW R26,4
00b783 e0e1      	LDI  R30,LOW(1)
00b784 93ec      	ST   X,R30
00b785 8da8      	LDD  R26,Y+24
00b786 8db9      	LDD  R27,Y+24+1
00b787 969e      	ADIW R26,46
00b788 940e dd4a 	CALL SUBOPT_0x3BD
00b78a 940e c60b 	CALL SUBOPT_0x87
00b78c 940e e459 	CALL __CPD10
00b78e f0a1      	BREQ _0x2060141
00b78f 940e d42a 	CALL SUBOPT_0x2AA
00b791 940e c732 	CALL SUBOPT_0xB4
00b793 d889      	RCALL _remove_chain_G103
00b794 2f1e      	MOV  R17,R30
00b795 3010      	CPI  R17,0
00b796 f019      	BREQ _0x2060142
00b797 2fe1      	MOV  R30,R17
00b798 9628      	ADIW R28,8
00b799 c099      	RJMP _0x20E000D
                 _0x2060142:
00b79a 940e c60b 	CALL SUBOPT_0x87
00b79c 940e c81a 	CALL SUBOPT_0xDA
                +
00b79e 8da8     +LDD R26 , Y + 24
00b79f 8db9     +LDD R27 , Y + 24 + 1
00b7a0 961a     +ADIW R26 , 10
00b7a1 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
00b7a3 940e d42a 	CALL SUBOPT_0x2AA
00b7a5 940e c4dc 	CALL SUBOPT_0x59
00b7a7 940e dea9 	CALL SUBOPT_0x3F1
00b7a9 f019      	BREQ _0x2060143
00b7aa 2fe1      	MOV  R30,R17
00b7ab 9628      	ADIW R28,8
00b7ac c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
00b7ad a5ee      	LDD  R30,Y+46
00b7ae 70e8      	ANDI R30,LOW(0x8)
00b7af f0a1      	BREQ _0x2060144
00b7b0 01f9      	MOVW R30,R18
00b7b1 963b      	ADIW R30,11
00b7b2 e0a0      	LDI  R26,LOW(0)
00b7b3 83a0      	STD  Z+0,R26
00b7b4 940e ad0b 	CALL _get_fattime
00b7b6 940e c70e 	CALL SUBOPT_0xAD
                +
00b7b8 01d9     +MOVW R26 , R18
00b7b9 961e     +ADIW R26 , 14
00b7ba 940e e3db+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00b7bc 8da8      	LDD  R26,Y+24
00b7bd 8db9      	LDD  R27,Y+24+1
00b7be 9614      	ADIW R26,4
00b7bf e0e1      	LDI  R30,LOW(1)
00b7c0 93ec      	ST   X,R30
00b7c1 a5ee      	LDD  R30,Y+46
00b7c2 62e0      	ORI  R30,0x20
00b7c3 a7ee      	STD  Y+46,R30
                 _0x2060144:
00b7c4 9628      	ADIW R28,8
00b7c5 c019      	RJMP _0x2060145
                 _0x2060137:
00b7c6 3010      	CPI  R17,0
00b7c7 f011      	BREQ _0x2060146
00b7c8 2fe1      	MOV  R30,R17
00b7c9 c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00b7ca a12a     +LDD R18 , Y + 34
00b7cb a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00b7cc 2e02      	MOV  R0,R18
00b7cd 2a03      	OR   R0,R19
00b7ce f021      	BREQ _0x2060148
00b7cf 01f9      	MOVW R30,R18
00b7d0 85e3      	LDD  R30,Z+11
00b7d1 71e0      	ANDI R30,LOW(0x10)
00b7d2 f011      	BREQ _0x2060147
                 _0x2060148:
00b7d3 e0e4      	LDI  R30,LOW(4)
00b7d4 c05e      	RJMP _0x20E000D
                 _0x2060147:
00b7d5 a1ee      	LDD  R30,Y+38
00b7d6 70e2      	ANDI R30,LOW(0x2)
00b7d7 f021      	BREQ _0x206014B
00b7d8 01f9      	MOVW R30,R18
00b7d9 85e3      	LDD  R30,Z+11
00b7da 70e1      	ANDI R30,LOW(0x1)
00b7db f409      	BRNE _0x206014C
                 _0x206014B:
00b7dc c002      	RJMP _0x206014A
                 _0x206014C:
00b7dd e0e7      	LDI  R30,LOW(7)
00b7de c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
00b7df 89a8      	LDD  R26,Y+16
00b7e0 89b9      	LDD  R27,Y+16+1
00b7e1 969e      	ADIW R26,46
00b7e2 940e e3d0 	CALL __GETD1P
                +
00b7e4 a5a9     +LDD R26 , Y + 41
00b7e5 a5ba     +LDD R27 , Y + 41 + 1
00b7e6 965a     +ADIW R26 , 26
00b7e7 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 41,26
00b7e9 a1ea      	LDD  R30,Y+34
00b7ea a1fb      	LDD  R31,Y+34+1
                +
00b7eb a5a9     +LDD R26 , Y + 41
00b7ec a5ba     +LDD R27 , Y + 41 + 1
00b7ed 965e     +ADIW R26 , 30
00b7ee 93ed     +ST X + , R30
00b7ef 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
00b7f0 a1ee      	LDD  R30,Y+38
                +
00b7f1 a5a9     +LDD R26 , Y + 41
00b7f2 a5ba     +LDD R27 , Y + 41 + 1
00b7f3 9614     +ADIW R26 , 4
00b7f4 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
00b7f5 940e de53 	CALL SUBOPT_0x3E5
00b7f7 940e e2d2 	CALL __LSLD16
00b7f9 937f      	PUSH R23
00b7fa 936f      	PUSH R22
00b7fb 93ff      	PUSH R31
00b7fc 93ef      	PUSH R30
00b7fd 940e de57 	CALL SUBOPT_0x3E6
00b7ff 91af      	POP  R26
00b800 91bf      	POP  R27
00b801 918f      	POP  R24
00b802 919f      	POP  R25
00b803 940e de5c 	CALL SUBOPT_0x3E7
                +
00b805 a5a9     +LDD R26 , Y + 41
00b806 a5ba     +LDD R27 , Y + 41 + 1
00b807 961e     +ADIW R26 , 14
00b808 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 41,14
00b80a 01d9      	MOVW R26,R18
00b80b 965c      	ADIW R26,28
00b80c 940e e3d0 	CALL __GETD1P
                +
00b80e a5a9     +LDD R26 , Y + 41
00b80f a5ba     +LDD R27 , Y + 41 + 1
00b810 961a     +ADIW R26 , 10
00b811 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 41,10
00b813 a5a9      	LDD  R26,Y+41
00b814 a5ba      	LDD  R27,Y+41+1
00b815 9616      	ADIW R26,6
00b816 940e c634 	CALL SUBOPT_0x8E
00b818 a5a9      	LDD  R26,Y+41
00b819 a5ba      	LDD  R27,Y+41+1
00b81a 9615      	ADIW R26,5
00b81b efef      	LDI  R30,LOW(255)
00b81c 93ec      	ST   X,R30
00b81d a5a9      	LDD  R26,Y+41
00b81e a5ba      	LDD  R27,Y+41+1
00b81f 9656      	ADIW R26,22
00b820 940e c634 	CALL SUBOPT_0x8E
00b822 89e8      	LDD  R30,Y+16
00b823 89f9      	LDD  R31,Y+16+1
00b824 a5a9      	LDD  R26,Y+41
00b825 a5ba      	LDD  R27,Y+41+1
00b826 93ed      	ST   X+,R30
00b827 93fc      	ST   X,R31
00b828 89a8      	LDD  R26,Y+16
00b829 89b9      	LDD  R27,Y+16+1
00b82a 9616      	ADIW R26,6
00b82b 940e e3cc 	CALL __GETW1P
                +
00b82d a5a9     +LDD R26 , Y + 41
00b82e a5ba     +LDD R27 , Y + 41 + 1
00b82f 9612     +ADIW R26 , 2
00b830 93ed     +ST X + , R30
00b831 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
00b832 e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
00b833 940e e47e 	CALL __LOADLOCR4
00b835 96ab      	ADIW R28,43
00b836 9508      	RET
                 _f_read:
00b837 93ba      	ST   -Y,R27
00b838 93aa      	ST   -Y,R26
00b839 972e      	SBIW R28,14
00b83a 940e e475 	CALL __SAVELOCR6
00b83c 8de8      	LDD  R30,Y+24
00b83d 8df9      	LDD  R31,Y+24+1
00b83e 83ee      	STD  Y+6,R30
00b83f 83ff      	STD  Y+6+1,R31
00b840 89ac      	LDD  R26,Y+20
00b841 89bd      	LDD  R27,Y+20+1
00b842 940e c971 	CALL SUBOPT_0x114
00b844 940e deae 	CALL SUBOPT_0x3F2
00b846 8dec      	LDD  R30,Y+28
00b847 8dfd      	LDD  R31,Y+28+1
00b848 940e deb1 	CALL SUBOPT_0x3F3
00b84a f011      	BREQ _0x206014D
00b84b 2fe1      	MOV  R30,R17
00b84c c149      	RJMP _0x20E000C
                 _0x206014D:
00b84d 8dea      	LDD  R30,Y+26
00b84e 8dfb      	LDD  R31,Y+26+1
00b84f 81a4      	LDD  R26,Z+4
00b850 78a0      	ANDI R26,LOW(0x80)
00b851 f011      	BREQ _0x206014E
00b852 e0e2      	LDI  R30,LOW(2)
00b853 c142      	RJMP _0x20E000C
                 _0x206014E:
00b854 8dea      	LDD  R30,Y+26
00b855 8dfb      	LDD  R31,Y+26+1
00b856 81a4      	LDD  R26,Z+4
00b857 70a1      	ANDI R26,LOW(0x1)
00b858 f411      	BRNE _0x206014F
00b859 e0e7      	LDI  R30,LOW(7)
00b85a c13b      	RJMP _0x20E000C
                 _0x206014F:
00b85b 8dea      	LDD  R30,Y+26
00b85c 8dfb      	LDD  R31,Y+26+1
                +
00b85d 85a2     +LDD R26 , Z + 10
00b85e 85b3     +LDD R27 , Z + 10 + 1
00b85f 8584     +LDD R24 , Z + 10 + 2
00b860 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b861 939f      	PUSH R25
00b862 938f      	PUSH R24
00b863 93bf      	PUSH R27
00b864 93af      	PUSH R26
00b865 940e deb8 	CALL SUBOPT_0x3F4
00b867 91ef      	POP  R30
00b868 91ff      	POP  R31
00b869 916f      	POP  R22
00b86a 917f      	POP  R23
00b86b 940e e262 	CALL __SUBD12
00b86d 940e da7e 	CALL SUBOPT_0x367
00b86f 940e c491 	CALL SUBOPT_0x4F
00b871 89ae      	LDD  R26,Y+22
00b872 89bf      	LDD  R27,Y+22+1
00b873 2788      	CLR  R24
00b874 2799      	CLR  R25
00b875 940e e46b 	CALL __CPD12
00b877 f420      	BRSH _0x2060150
00b878 85e8      	LDD  R30,Y+8
00b879 85f9      	LDD  R31,Y+8+1
00b87a 8bee      	STD  Y+22,R30
00b87b 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00b87c 89ee      	LDD  R30,Y+22
00b87d 89ff      	LDD  R31,Y+22+1
00b87e 9730      	SBIW R30,0
00b87f f411      	BRNE PC+3
00b880 940c b995 	JMP _0x2060153
00b882 940e deb8 	CALL SUBOPT_0x3F4
00b884 940e debf 	CALL SUBOPT_0x3F5
00b886 f011      	BREQ PC+3
00b887 940c b960 	JMP _0x2060154
00b889 8dea      	LDD  R30,Y+26
00b88a 8dfb      	LDD  R31,Y+26+1
00b88b 8005      	LDD  R0,Z+5
00b88c 8daa      	LDD  R26,Y+26
00b88d 8dbb      	LDD  R27,Y+26+1
00b88e 940e e3cc 	CALL __GETW1P
00b890 81e2      	LDD  R30,Z+2
00b891 160e      	CP   R0,R30
00b892 f178      	BRLO _0x2060155
00b893 940e deb8 	CALL SUBOPT_0x3F4
00b895 940e e465 	CALL __CPD02
00b897 f431      	BRNE _0x2060156
00b898 8daa      	LDD  R26,Y+26
00b899 8dbb      	LDD  R27,Y+26+1
00b89a 961e      	ADIW R26,14
00b89b 940e e3d0 	CALL __GETD1P
00b89d c006      	RJMP _0x2060157
                 _0x2060156:
00b89e 940e deae 	CALL SUBOPT_0x3F2
00b8a0 940e dec4 	CALL SUBOPT_0x3F6
00b8a2 940e aeec 	CALL _get_fat
                 _0x2060157:
00b8a4 940e dbf4 	CALL SUBOPT_0x395
00b8a6 940e dd3d 	CALL SUBOPT_0x3BB
00b8a8 f420      	BRSH _0x2060159
00b8a9 940e decb 	CALL SUBOPT_0x3F7
00b8ab e0e2      	LDI  R30,LOW(2)
00b8ac c0e9      	RJMP _0x20E000C
                 _0x2060159:
00b8ad 940e d11e 	CALL SUBOPT_0x234
00b8af 940e c3fc 	CALL SUBOPT_0x3A
00b8b1 f421      	BRNE _0x206015A
00b8b2 940e decb 	CALL SUBOPT_0x3F7
00b8b4 e0e1      	LDI  R30,LOW(1)
00b8b5 c0e0      	RJMP _0x20E000C
                 _0x206015A:
00b8b6 940e c2bf 	CALL SUBOPT_0xC
                +
00b8b8 8daa     +LDD R26 , Y + 26
00b8b9 8dbb     +LDD R27 , Y + 26 + 1
00b8ba 9652     +ADIW R26 , 18
00b8bb 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 26,18
00b8bd 8daa      	LDD  R26,Y+26
00b8be 8dbb      	LDD  R27,Y+26+1
00b8bf 9615      	ADIW R26,5
00b8c0 e0e0      	LDI  R30,LOW(0)
00b8c1 93ec      	ST   X,R30
                 _0x2060155:
00b8c2 940e deae 	CALL SUBOPT_0x3F2
00b8c4 940e dec4 	CALL SUBOPT_0x3F6
00b8c6 d85e      	RCALL _clust2sect
00b8c7 940e c890 	CALL SUBOPT_0xEC
00b8c9 940e e459 	CALL __CPD10
00b8cb f421      	BRNE _0x206015B
00b8cc 940e decb 	CALL SUBOPT_0x3F7
00b8ce e0e2      	LDI  R30,LOW(2)
00b8cf c0c6      	RJMP _0x20E000C
                 _0x206015B:
00b8d0 940e ded2 	CALL SUBOPT_0x3F8
00b8d2 940e c2ba 	CALL SUBOPT_0xB
00b8d4 940e c709 	CALL SUBOPT_0xAC
00b8d6 940e c886 	CALL SUBOPT_0xEA
00b8d8 89ae      	LDD  R26,Y+22
00b8d9 89bf      	LDD  R27,Y+22+1
00b8da 940e ded7 	CALL SUBOPT_0x3F9
00b8dc f411      	BRNE PC+3
00b8dd 940c b92b 	JMP _0x206015C
00b8df 8dea      	LDD  R30,Y+26
00b8e0 8dfb      	LDD  R31,Y+26+1
00b8e1 81e5      	LDD  R30,Z+5
00b8e2 940e de49 	CALL SUBOPT_0x3E3
00b8e4 010f      	MOVW R0,R30
00b8e5 940e dedf 	CALL SUBOPT_0x3FA
00b8e7 81e2      	LDD  R30,Z+2
00b8e8 940e cce2 	CALL SUBOPT_0x1A7
00b8ea f450      	BRSH _0x206015D
00b8eb 940e dedf 	CALL SUBOPT_0x3FA
00b8ed 940e d3ca 	CALL SUBOPT_0x29A
00b8ef 01df      	MOVW R26,R30
00b8f0 940e ded2 	CALL SUBOPT_0x3F8
00b8f2 1bae      	SUB  R26,R30
00b8f3 0bbf      	SBC  R27,R31
00b8f4 01ad      	MOVW R20,R26
                 _0x206015D:
00b8f5 940e dedf 	CALL SUBOPT_0x3FA
00b8f7 940e dee4 	CALL SUBOPT_0x3FB
                +
00b8f9 85ef     +LDD R30 , Y + 15
00b8fa 89f8     +LDD R31 , Y + 15 + 1
00b8fb 8969     +LDD R22 , Y + 15 + 2
00b8fc 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b8fd 940e e400 	CALL __PUTPARD1
00b8ff 2fa4      	MOV  R26,R20
00b900 940e aa70 	CALL _disk_read
00b902 30e0      	CPI  R30,0
00b903 f021      	BREQ _0x206015E
00b904 940e decb 	CALL SUBOPT_0x3F7
00b906 e0e1      	LDI  R30,LOW(1)
00b907 c08e      	RJMP _0x20E000C
                 _0x206015E:
00b908 8dea      	LDD  R30,Y+26
00b909 8dfb      	LDD  R31,Y+26+1
00b90a 81a4      	LDD  R26,Z+4
00b90b 74a0      	ANDI R26,LOW(0x40)
00b90c f029      	BREQ _0x2060160
00b90d 940e deeb 	CALL SUBOPT_0x3FC
00b90f 940e def3 	CALL SUBOPT_0x3FD
00b911 f008      	BRLO _0x2060161
                 _0x2060160:
00b912 c013      	RJMP _0x206015F
                 _0x2060161:
00b913 940e deeb 	CALL SUBOPT_0x3FC
00b915 940e defb 	CALL SUBOPT_0x3FE
00b917 81ae      	LDD  R26,Y+6
00b918 81bf      	LDD  R27,Y+6+1
00b919 2788      	CLR  R24
00b91a 2799      	CLR  R25
00b91b 940e c339 	CALL SUBOPT_0x1D
00b91d 8dec      	LDD  R30,Y+28
00b91e 8dfd      	LDD  R31,Y+28+1
00b91f 96b0      	ADIW R30,32
00b920 93fa      	ST   -Y,R31
00b921 93ea      	ST   -Y,R30
00b922 e0a0      	LDI  R26,LOW(512)
00b923 e0b2      	LDI  R27,HIGH(512)
00b924 940e ad99 	CALL _mem_cpy_G103
                 _0x206015F:
00b926 8daa      	LDD  R26,Y+26
00b927 8dbb      	LDD  R27,Y+26+1
00b928 940e df04 	CALL SUBOPT_0x3FF
00b92a c053      	RJMP _0x2060151
                 _0x206015C:
00b92b 8dea      	LDD  R30,Y+26
00b92c 8dfb      	LDD  R31,Y+26+1
00b92d 81a4      	LDD  R26,Z+4
00b92e 74a0      	ANDI R26,LOW(0x40)
00b92f f089      	BREQ _0x2060162
00b930 940e dedf 	CALL SUBOPT_0x3FA
00b932 940e df0f 	CALL SUBOPT_0x400
00b934 8ded      	LDD  R30,Y+29
00b935 8dfe      	LDD  R31,Y+29+1
00b936 940e df17 	CALL SUBOPT_0x401
00b938 f021      	BREQ _0x2060163
00b939 940e decb 	CALL SUBOPT_0x3F7
00b93b e0e1      	LDI  R30,LOW(1)
00b93c c059      	RJMP _0x20E000C
                 _0x2060163:
00b93d 8daa      	LDD  R26,Y+26
00b93e 8dbb      	LDD  R27,Y+26+1
00b93f 940e df22 	CALL SUBOPT_0x402
                 _0x2060162:
00b941 940e deeb 	CALL SUBOPT_0x3FC
00b943 940e e46b 	CALL __CPD12
00b945 f079      	BREQ _0x2060164
00b946 940e dedf 	CALL SUBOPT_0x3FA
00b948 940e df0f 	CALL SUBOPT_0x400
                +
00b94a 85ef     +LDD R30 , Y + 15
00b94b 89f8     +LDD R31 , Y + 15 + 1
00b94c 8969     +LDD R22 , Y + 15 + 2
00b94d 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b94e 940e de61 	CALL SUBOPT_0x3E8
00b950 f021      	BREQ _0x2060165
00b951 940e decb 	CALL SUBOPT_0x3F7
00b953 e0e1      	LDI  R30,LOW(1)
00b954 c041      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00b955 940e c815 	CALL SUBOPT_0xD9
                +
00b957 8daa     +LDD R26 , Y + 26
00b958 8dbb     +LDD R27 , Y + 26 + 1
00b959 9656     +ADIW R26 , 22
00b95a 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 26,22
00b95c 8daa      	LDD  R26,Y+26
00b95d 8dbb      	LDD  R27,Y+26+1
00b95e 940e df27 	CALL SUBOPT_0x403
                 _0x2060154:
00b960 8daa      	LDD  R26,Y+26
00b961 8dbb      	LDD  R27,Y+26+1
00b962 940e df2c 	CALL SUBOPT_0x404
00b964 e0a0      	LDI  R26,LOW(512)
00b965 e0b2      	LDI  R27,HIGH(512)
00b966 1bae      	SUB  R26,R30
00b967 0bbf      	SBC  R27,R31
00b968 019d      	MOVW R18,R26
00b969 89ee      	LDD  R30,Y+22
00b96a 89ff      	LDD  R31,Y+22+1
00b96b 17e2      	CP   R30,R18
00b96c 07f3      	CPC  R31,R19
00b96d f410      	BRSH _0x2060166
                +
00b96e 892e     +LDD R18 , Y + 22
00b96f 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
00b970 940e cb1f 	CALL SUBOPT_0x15C
00b972 8dac      	LDD  R26,Y+28
00b973 8dbd      	LDD  R27,Y+28+1
00b974 940e df2c 	CALL SUBOPT_0x404
00b976 8dac      	LDD  R26,Y+28
00b977 8dbd      	LDD  R27,Y+28+1
00b978 9690      	ADIW R26,32
00b979 940e c339 	CALL SUBOPT_0x1D
00b97b 01d9      	MOVW R26,R18
00b97c 940e ad99 	CALL _mem_cpy_G103
                 _0x2060151:
00b97e 01f9      	MOVW R30,R18
00b97f 940e ccdd 	CALL SUBOPT_0x1A6
00b981 83ee      	STD  Y+6,R30
00b982 83ff      	STD  Y+6+1,R31
00b983 8dea      	LDD  R30,Y+26
00b984 8dfb      	LDD  R31,Y+26+1
00b985 940e df31 	CALL SUBOPT_0x405
00b987 01d0      	MOVW R26,R0
00b988 940e e3db 	CALL __PUTDP1
00b98a 89ac      	LDD  R26,Y+20
00b98b 89bd      	LDD  R27,Y+20+1
00b98c 940e df3a 	CALL SUBOPT_0x406
00b98e 89ee      	LDD  R30,Y+22
00b98f 89ff      	LDD  R31,Y+22+1
00b990 1be2      	SUB  R30,R18
00b991 0bf3      	SBC  R31,R19
00b992 8bee      	STD  Y+22,R30
00b993 8bff      	STD  Y+22+1,R31
00b994 cee7      	RJMP _0x2060152
                 _0x2060153:
00b995 e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00b996 940e e47c 	CALL __LOADLOCR6
00b998 966c      	ADIW R28,28
00b999 9508      	RET
                 _f_write:
00b99a 93ba      	ST   -Y,R27
00b99b 93aa      	ST   -Y,R26
00b99c 972a      	SBIW R28,10
00b99d 940e e475 	CALL __SAVELOCR6
00b99f 89ec      	LDD  R30,Y+20
00b9a0 89fd      	LDD  R31,Y+20+1
00b9a1 83ee      	STD  Y+6,R30
00b9a2 83ff      	STD  Y+6+1,R31
00b9a3 89a8      	LDD  R26,Y+16
00b9a4 89b9      	LDD  R27,Y+16+1
00b9a5 940e c971 	CALL SUBOPT_0x114
00b9a7 940e df41 	CALL SUBOPT_0x407
00b9a9 8de8      	LDD  R30,Y+24
00b9aa 8df9      	LDD  R31,Y+24+1
00b9ab 940e deb1 	CALL SUBOPT_0x3F3
00b9ad f011      	BREQ _0x2060167
00b9ae 2fe1      	MOV  R30,R17
00b9af c182      	RJMP _0x20E000B
                 _0x2060167:
00b9b0 89ee      	LDD  R30,Y+22
00b9b1 89ff      	LDD  R31,Y+22+1
00b9b2 81a4      	LDD  R26,Z+4
00b9b3 78a0      	ANDI R26,LOW(0x80)
00b9b4 f011      	BREQ _0x2060168
00b9b5 e0e2      	LDI  R30,LOW(2)
00b9b6 c17b      	RJMP _0x20E000B
                 _0x2060168:
00b9b7 89ee      	LDD  R30,Y+22
00b9b8 89ff      	LDD  R31,Y+22+1
00b9b9 81a4      	LDD  R26,Z+4
00b9ba 70a2      	ANDI R26,LOW(0x2)
00b9bb f411      	BRNE _0x2060169
00b9bc e0e7      	LDI  R30,LOW(7)
00b9bd c174      	RJMP _0x20E000B
                 _0x2060169:
00b9be 89ee      	LDD  R30,Y+22
00b9bf 89ff      	LDD  R31,Y+22+1
                +
00b9c0 85a2     +LDD R26 , Z + 10
00b9c1 85b3     +LDD R27 , Z + 10 + 1
00b9c2 8584     +LDD R24 , Z + 10 + 2
00b9c3 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b9c4 89ea      	LDD  R30,Y+18
00b9c5 89fb      	LDD  R31,Y+18+1
00b9c6 940e de04 	CALL SUBOPT_0x3D8
00b9c8 937f      	PUSH R23
00b9c9 936f      	PUSH R22
00b9ca 93ff      	PUSH R31
00b9cb 93ef      	PUSH R30
00b9cc 940e df44 	CALL SUBOPT_0x408
00b9ce 91af      	POP  R26
00b9cf 91bf      	POP  R27
00b9d0 918f      	POP  R24
00b9d1 919f      	POP  R25
00b9d2 940e e470 	CALL __CPD21
00b9d4 f418      	BRSH _0x206016A
00b9d5 e0e0      	LDI  R30,LOW(0)
00b9d6 8bea      	STD  Y+18,R30
00b9d7 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
00b9d8 89ea      	LDD  R30,Y+18
00b9d9 89fb      	LDD  R31,Y+18+1
00b9da 9730      	SBIW R30,0
00b9db f411      	BRNE PC+3
00b9dc 940c bb18 	JMP _0x206016D
00b9de 940e df4a 	CALL SUBOPT_0x409
00b9e0 940e debf 	CALL SUBOPT_0x3F5
00b9e2 f011      	BREQ PC+3
00b9e3 940c badd 	JMP _0x206016E
00b9e5 89ee      	LDD  R30,Y+22
00b9e6 89ff      	LDD  R31,Y+22+1
00b9e7 8005      	LDD  R0,Z+5
00b9e8 940e df51 	CALL SUBOPT_0x40A
00b9ea 81e2      	LDD  R30,Z+2
00b9eb 160e      	CP   R0,R30
00b9ec f410      	BRSH PC+3
00b9ed 940c ba37 	JMP _0x206016F
00b9ef 89ae      	LDD  R26,Y+22
00b9f0 89bf      	LDD  R27,Y+22+1
00b9f1 9616      	ADIW R26,6
00b9f2 940e de11 	CALL SUBOPT_0x3DA
00b9f4 f4c1      	BRNE _0x2060170
00b9f5 89ae      	LDD  R26,Y+22
00b9f6 89bf      	LDD  R27,Y+22+1
00b9f7 961e      	ADIW R26,14
00b9f8 940e e3d0 	CALL __GETD1P
00b9fa 940e c890 	CALL SUBOPT_0xEC
00b9fc 940e e459 	CALL __CPD10
00b9fe f469      	BRNE _0x2060171
00b9ff 940e df41 	CALL SUBOPT_0x407
00ba01 940e c396 	CALL SUBOPT_0x2C
00ba03 940e b06c 	CALL _create_chain_G103
00ba05 940e c886 	CALL SUBOPT_0xEA
                +
00ba07 89ae     +LDD R26 , Y + 22
00ba08 89bf     +LDD R27 , Y + 22 + 1
00ba09 961e     +ADIW R26 , 14
00ba0a 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
00ba0c c008      	RJMP _0x2060172
                 _0x2060170:
00ba0d 940e df41 	CALL SUBOPT_0x407
00ba0f 940e df56 	CALL SUBOPT_0x40B
00ba11 940e b06c 	CALL _create_chain_G103
00ba13 940e c886 	CALL SUBOPT_0xEA
                 _0x2060172:
00ba15 940e c815 	CALL SUBOPT_0xD9
00ba17 940e e459 	CALL __CPD10
00ba19 f409      	BRNE _0x2060173
00ba1a c0fd      	RJMP _0x206016D
                 _0x2060173:
00ba1b 940e c2ba 	CALL SUBOPT_0xB
00ba1d 940e ddbd 	CALL SUBOPT_0x3CC
00ba1f f421      	BRNE _0x2060174
00ba20 940e df5d 	CALL SUBOPT_0x40C
00ba22 e0e2      	LDI  R30,LOW(2)
00ba23 c10e      	RJMP _0x20E000B
                 _0x2060174:
00ba24 940e c4ec 	CALL SUBOPT_0x5C
00ba26 f421      	BRNE _0x2060175
00ba27 940e df5d 	CALL SUBOPT_0x40C
00ba29 e0e1      	LDI  R30,LOW(1)
00ba2a c107      	RJMP _0x20E000B
                 _0x2060175:
00ba2b 940e c815 	CALL SUBOPT_0xD9
                +
00ba2d 89ae     +LDD R26 , Y + 22
00ba2e 89bf     +LDD R27 , Y + 22 + 1
00ba2f 9652     +ADIW R26 , 18
00ba30 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 22,18
00ba32 89ae      	LDD  R26,Y+22
00ba33 89bf      	LDD  R27,Y+22+1
00ba34 9615      	ADIW R26,5
00ba35 e0e0      	LDI  R30,LOW(0)
00ba36 93ec      	ST   X,R30
                 _0x206016F:
00ba37 89ee      	LDD  R30,Y+22
00ba38 89ff      	LDD  R31,Y+22+1
00ba39 81a4      	LDD  R26,Z+4
00ba3a 74a0      	ANDI R26,LOW(0x40)
00ba3b f089      	BREQ _0x2060176
00ba3c 940e df51 	CALL SUBOPT_0x40A
00ba3e 940e df64 	CALL SUBOPT_0x40D
00ba40 8de9      	LDD  R30,Y+25
00ba41 8dfa      	LDD  R31,Y+25+1
00ba42 940e df17 	CALL SUBOPT_0x401
00ba44 f021      	BREQ _0x2060177
00ba45 940e df5d 	CALL SUBOPT_0x40C
00ba47 e0e1      	LDI  R30,LOW(1)
00ba48 c0e9      	RJMP _0x20E000B
                 _0x2060177:
00ba49 89ae      	LDD  R26,Y+22
00ba4a 89bf      	LDD  R27,Y+22+1
00ba4b 940e df22 	CALL SUBOPT_0x402
                 _0x2060176:
00ba4d 940e df41 	CALL SUBOPT_0x407
00ba4f 940e df56 	CALL SUBOPT_0x40B
00ba51 940e b125 	CALL _clust2sect
00ba53 940e da7e 	CALL SUBOPT_0x367
00ba55 940e c491 	CALL SUBOPT_0x4F
00ba57 940e e459 	CALL __CPD10
00ba59 f421      	BRNE _0x2060178
00ba5a 940e df5d 	CALL SUBOPT_0x40C
00ba5c e0e2      	LDI  R30,LOW(2)
00ba5d c0d4      	RJMP _0x20E000B
                 _0x2060178:
00ba5e 940e df6c 	CALL SUBOPT_0x40E
00ba60 940e c810 	CALL SUBOPT_0xD8
00ba62 940e c709 	CALL SUBOPT_0xAC
00ba64 940e da7e 	CALL SUBOPT_0x367
00ba66 89aa      	LDD  R26,Y+18
00ba67 89bb      	LDD  R27,Y+18+1
00ba68 940e ded7 	CALL SUBOPT_0x3F9
00ba6a f411      	BRNE PC+3
00ba6b 940c bab4 	JMP _0x2060179
00ba6d 89ee      	LDD  R30,Y+22
00ba6e 89ff      	LDD  R31,Y+22+1
00ba6f 81e5      	LDD  R30,Z+5
00ba70 940e de49 	CALL SUBOPT_0x3E3
00ba72 010f      	MOVW R0,R30
00ba73 940e df51 	CALL SUBOPT_0x40A
00ba75 81e2      	LDD  R30,Z+2
00ba76 940e cce2 	CALL SUBOPT_0x1A7
00ba78 f450      	BRSH _0x206017A
00ba79 940e df51 	CALL SUBOPT_0x40A
00ba7b 940e d3ca 	CALL SUBOPT_0x29A
00ba7d 01df      	MOVW R26,R30
00ba7e 940e df6c 	CALL SUBOPT_0x40E
00ba80 1bae      	SUB  R26,R30
00ba81 0bbf      	SBC  R27,R31
00ba82 01ad      	MOVW R20,R26
                 _0x206017A:
00ba83 940e df51 	CALL SUBOPT_0x40A
00ba85 940e dee4 	CALL SUBOPT_0x3FB
00ba87 940e c51e 	CALL SUBOPT_0x64
00ba89 2fa4      	MOV  R26,R20
00ba8a 940e aad5 	CALL _disk_write
00ba8c 30e0      	CPI  R30,0
00ba8d f021      	BREQ _0x206017B
00ba8e 940e df5d 	CALL SUBOPT_0x40C
00ba90 e0e1      	LDI  R30,LOW(1)
00ba91 c0a0      	RJMP _0x20E000B
                 _0x206017B:
00ba92 940e df71 	CALL SUBOPT_0x40F
00ba94 940e def3 	CALL SUBOPT_0x3FD
00ba96 f4c0      	BRSH _0x206017C
00ba97 940e df79 	CALL SUBOPT_0x410
                +
00ba99 89a6     +LDD R26 , Z + 22
00ba9a 89b7     +LDD R27 , Z + 22 + 1
00ba9b 8d80     +LDD R24 , Z + 22 + 2
00ba9c 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00ba9d 940e c804 	CALL SUBOPT_0xD5
00ba9f 940e defb 	CALL SUBOPT_0x3FE
00baa1 85a8      	LDD  R26,Y+8
00baa2 85b9      	LDD  R27,Y+8+1
00baa3 2788      	CLR  R24
00baa4 2799      	CLR  R25
00baa5 940e c339 	CALL SUBOPT_0x1D
00baa7 e0a0      	LDI  R26,LOW(512)
00baa8 e0b2      	LDI  R27,HIGH(512)
00baa9 940e ad99 	CALL _mem_cpy_G103
00baab 89ae      	LDD  R26,Y+22
00baac 89bf      	LDD  R27,Y+22+1
00baad 940e df22 	CALL SUBOPT_0x402
                 _0x206017C:
00baaf 89ae      	LDD  R26,Y+22
00bab0 89bf      	LDD  R27,Y+22+1
00bab1 940e df04 	CALL SUBOPT_0x3FF
00bab3 c04d      	RJMP _0x206016B
                 _0x2060179:
00bab4 940e df71 	CALL SUBOPT_0x40F
00bab6 940e e46b 	CALL __CPD12
00bab8 f0c9      	BREQ _0x206017D
00bab9 940e df4a 	CALL SUBOPT_0x409
00babb 010d      	MOVW R0,R26
00babc 940e df44 	CALL SUBOPT_0x408
00babe 01d0      	MOVW R26,R0
00babf 940e e470 	CALL __CPD21
00bac1 f458      	BRSH _0x206017F
00bac2 940e df51 	CALL SUBOPT_0x40A
00bac4 940e df64 	CALL SUBOPT_0x40D
00bac6 940e c51e 	CALL SUBOPT_0x64
00bac8 e0a1      	LDI  R26,LOW(1)
00bac9 940e aa70 	CALL _disk_read
00bacb 30e0      	CPI  R30,0
00bacc f409      	BRNE _0x2060180
                 _0x206017F:
00bacd c004      	RJMP _0x206017E
                 _0x2060180:
00bace 940e df5d 	CALL SUBOPT_0x40C
00bad0 e0e1      	LDI  R30,LOW(1)
00bad1 c060      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
00bad2 940e c491 	CALL SUBOPT_0x4F
                +
00bad4 89ae     +LDD R26 , Y + 22
00bad5 89bf     +LDD R27 , Y + 22 + 1
00bad6 9656     +ADIW R26 , 22
00bad7 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 22,22
00bad9 89ae      	LDD  R26,Y+22
00bada 89bf      	LDD  R27,Y+22+1
00badb 940e df27 	CALL SUBOPT_0x403
                 _0x206016E:
00badd 89ae      	LDD  R26,Y+22
00bade 89bf      	LDD  R27,Y+22+1
00badf 940e df2c 	CALL SUBOPT_0x404
00bae1 e0a0      	LDI  R26,LOW(512)
00bae2 e0b2      	LDI  R27,HIGH(512)
00bae3 1bae      	SUB  R26,R30
00bae4 0bbf      	SBC  R27,R31
00bae5 019d      	MOVW R18,R26
00bae6 89ea      	LDD  R30,Y+18
00bae7 89fb      	LDD  R31,Y+18+1
00bae8 17e2      	CP   R30,R18
00bae9 07f3      	CPC  R31,R19
00baea f410      	BRSH _0x2060181
                +
00baeb 892a     +LDD R18 , Y + 18
00baec 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
00baed 89ae      	LDD  R26,Y+22
00baee 89bf      	LDD  R27,Y+22+1
00baef 940e df2c 	CALL SUBOPT_0x404
00baf1 89ae      	LDD  R26,Y+22
00baf2 89bf      	LDD  R27,Y+22+1
00baf3 9690      	ADIW R26,32
00baf4 940e c339 	CALL SUBOPT_0x1D
00baf6 940e cc7c 	CALL SUBOPT_0x194
00baf8 01d9      	MOVW R26,R18
00baf9 940e ad99 	CALL _mem_cpy_G103
00bafb 89ae      	LDD  R26,Y+22
00bafc 89bf      	LDD  R27,Y+22+1
00bafd 9614      	ADIW R26,4
00bafe 91ec      	LD   R30,X
00baff 64e0      	ORI  R30,0x40
00bb00 93ec      	ST   X,R30
                 _0x206016B:
00bb01 01f9      	MOVW R30,R18
00bb02 940e ccdd 	CALL SUBOPT_0x1A6
00bb04 83ee      	STD  Y+6,R30
00bb05 83ff      	STD  Y+6+1,R31
00bb06 89ee      	LDD  R30,Y+22
00bb07 89ff      	LDD  R31,Y+22+1
00bb08 940e df31 	CALL SUBOPT_0x405
00bb0a 01d0      	MOVW R26,R0
00bb0b 940e e3db 	CALL __PUTDP1
00bb0d 89a8      	LDD  R26,Y+16
00bb0e 89b9      	LDD  R27,Y+16+1
00bb0f 940e df3a 	CALL SUBOPT_0x406
00bb11 89ea      	LDD  R30,Y+18
00bb12 89fb      	LDD  R31,Y+18+1
00bb13 1be2      	SUB  R30,R18
00bb14 0bf3      	SBC  R31,R19
00bb15 8bea      	STD  Y+18,R30
00bb16 8bfb      	STD  Y+18+1,R31
00bb17 cec0      	RJMP _0x206016C
                 _0x206016D:
00bb18 940e df4a 	CALL SUBOPT_0x409
00bb1a 010d      	MOVW R0,R26
00bb1b 940e df44 	CALL SUBOPT_0x408
00bb1d 01d0      	MOVW R26,R0
00bb1e 940e e46b 	CALL __CPD12
00bb20 f450      	BRSH _0x2060182
00bb21 89ae      	LDD  R26,Y+22
00bb22 89bf      	LDD  R27,Y+22+1
00bb23 9616      	ADIW R26,6
00bb24 940e e3d0 	CALL __GETD1P
                +
00bb26 89ae     +LDD R26 , Y + 22
00bb27 89bf     +LDD R27 , Y + 22 + 1
00bb28 961a     +ADIW R26 , 10
00bb29 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
00bb2b 89ae      	LDD  R26,Y+22
00bb2c 89bf      	LDD  R27,Y+22+1
00bb2d 9614      	ADIW R26,4
00bb2e 91ec      	LD   R30,X
00bb2f 62e0      	ORI  R30,0x20
00bb30 93ec      	ST   X,R30
00bb31 e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00bb32 940e e47c 	CALL __LOADLOCR6
00bb34 9668      	ADIW R28,24
00bb35 9508      	RET
                 _f_sync:
00bb36 93ba      	ST   -Y,R27
00bb37 93aa      	ST   -Y,R26
00bb38 9724      	SBIW R28,4
00bb39 940e e477 	CALL __SAVELOCR4
00bb3b 940e de01 	CALL SUBOPT_0x3D7
00bb3d 85ea      	LDD  R30,Y+10
00bb3e 85fb      	LDD  R31,Y+10+1
00bb3f 940e deb1 	CALL SUBOPT_0x3F3
00bb41 f011      	BREQ PC+3
00bb42 940c bbb2 	JMP _0x2060183
00bb44 85e8      	LDD  R30,Y+8
00bb45 85f9      	LDD  R31,Y+8+1
00bb46 81a4      	LDD  R26,Z+4
00bb47 72a0      	ANDI R26,LOW(0x20)
00bb48 f411      	BRNE PC+3
00bb49 940c bbb2 	JMP _0x2060184
00bb4b 81a4      	LDD  R26,Z+4
00bb4c 74a0      	ANDI R26,LOW(0x40)
00bb4d f0a1      	BREQ _0x2060185
00bb4e 940e ddeb 	CALL SUBOPT_0x3D4
00bb50 81e1      	LDD  R30,Z+1
00bb51 93ea      	ST   -Y,R30
00bb52 85e9      	LDD  R30,Y+9
00bb53 85fa      	LDD  R31,Y+9+1
00bb54 96b0      	ADIW R30,32
00bb55 93fa      	ST   -Y,R31
00bb56 93ea      	ST   -Y,R30
00bb57 85eb      	LDD  R30,Y+11
00bb58 85fc      	LDD  R31,Y+11+1
00bb59 940e df17 	CALL SUBOPT_0x401
00bb5b f011      	BREQ _0x2060186
00bb5c e0e1      	LDI  R30,LOW(1)
00bb5d c055      	RJMP _0x20E000A
                 _0x2060186:
00bb5e 85a8      	LDD  R26,Y+8
00bb5f 85b9      	LDD  R27,Y+8+1
00bb60 940e df22 	CALL SUBOPT_0x402
                 _0x2060185:
00bb62 940e de01 	CALL SUBOPT_0x3D7
00bb64 85ea      	LDD  R30,Y+10
00bb65 85fb      	LDD  R31,Y+10+1
                +
00bb66 8da2     +LDD R26 , Z + 26
00bb67 8db3     +LDD R27 , Z + 26 + 1
00bb68 8d84     +LDD R24 , Z + 26 + 2
00bb69 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
00bb6a 940e dea9 	CALL SUBOPT_0x3F1
00bb6c f011      	BREQ PC+3
00bb6d 940c bbb2 	JMP _0x2060187
00bb6f 85a8      	LDD  R26,Y+8
00bb70 85b9      	LDD  R27,Y+8+1
00bb71 965e      	ADIW R26,30
00bb72 912d      	LD   R18,X+
00bb73 913c      	LD   R19,X
00bb74 01d9      	MOVW R26,R18
00bb75 961b      	ADIW R26,11
00bb76 91ec      	LD   R30,X
00bb77 62e0      	ORI  R30,0x20
00bb78 93ec      	ST   X,R30
00bb79 85a8      	LDD  R26,Y+8
00bb7a 85b9      	LDD  R27,Y+8+1
00bb7b 961a      	ADIW R26,10
00bb7c 940e e3d0 	CALL __GETD1P
                +
00bb7e 01d9     +MOVW R26 , R18
00bb7f 965c     +ADIW R26 , 28
00bb80 940e e3db+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00bb82 85a8      	LDD  R26,Y+8
00bb83 85b9      	LDD  R27,Y+8+1
00bb84 961e      	ADIW R26,14
00bb85 940e e3cc 	CALL __GETW1P
                +
00bb87 01d9     +MOVW R26 , R18
00bb88 965a     +ADIW R26 , 26
00bb89 93ed     +ST X + , R30
00bb8a 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
00bb8b 85e8      	LDD  R30,Y+8
00bb8c 85f9      	LDD  R31,Y+8+1
                +
00bb8d 85a6     +LDD R26 , Z + 14
00bb8e 85b7     +LDD R27 , Z + 14 + 1
00bb8f 8980     +LDD R24 , Z + 14 + 2
00bb90 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00bb91 01fd      	MOVW R30,R26
00bb92 01bc      	MOVW R22,R24
00bb93 940e e2cd 	CALL __LSRD16
                +
00bb95 01d9     +MOVW R26 , R18
00bb96 9654     +ADIW R26 , 20
00bb97 93ed     +ST X + , R30
00bb98 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
00bb99 940e ad0b 	CALL _get_fattime
00bb9b 940e c70e 	CALL SUBOPT_0xAD
                +
00bb9d 01d9     +MOVW R26 , R18
00bb9e 9656     +ADIW R26 , 22
00bb9f 940e e3db+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00bba1 85a8      	LDD  R26,Y+8
00bba2 85b9      	LDD  R27,Y+8+1
00bba3 9614      	ADIW R26,4
00bba4 91ec      	LD   R30,X
00bba5 7def      	ANDI R30,0xDF
00bba6 93ec      	ST   X,R30
00bba7 940e ddeb 	CALL SUBOPT_0x3D4
00bba9 9634      	ADIW R30,4
00bbaa e0a1      	LDI  R26,LOW(1)
00bbab 83a0      	STD  Z+0,R26
00bbac 940e ddeb 	CALL SUBOPT_0x3D4
00bbae 01df      	MOVW R26,R30
00bbaf 940e ae78 	CALL _sync_G103
00bbb1 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00bbb2 2fe1      	MOV  R30,R17
                 _0x20E000A:
00bbb3 940e e47e 	CALL __LOADLOCR4
00bbb5 962a      	ADIW R28,10
00bbb6 9508      	RET
                 _f_close:
00bbb7 93ba      	ST   -Y,R27
00bbb8 93aa      	ST   -Y,R26
00bbb9 931a      	ST   -Y,R17
00bbba 81a9      	LDD  R26,Y+1
00bbbb 81ba      	LDD  R27,Y+1+1
00bbbc df79      	RCALL _f_sync
00bbbd 2f1e      	MOV  R17,R30
00bbbe 3010      	CPI  R17,0
00bbbf f421      	BRNE _0x2060188
00bbc0 81a9      	LDD  R26,Y+1
00bbc1 81ba      	LDD  R27,Y+1+1
00bbc2 940e c971 	CALL SUBOPT_0x114
                 _0x2060188:
00bbc4 2fe1      	MOV  R30,R17
00bbc5 c296      	RJMP _0x20E0005
                 _f_lseek:
00bbc6 940e e405 	CALL __PUTPARD2
00bbc8 9760      	SBIW R28,16
00bbc9 931a      	ST   -Y,R17
00bbca 940e df81 	CALL SUBOPT_0x411
00bbcc 89ef      	LDD  R30,Y+23
00bbcd 8df8      	LDD  R31,Y+23+1
00bbce 940e deb1 	CALL SUBOPT_0x3F3
00bbd0 f009      	BREQ _0x2060191
00bbd1 c18c      	RJMP _0x20E0009
                 _0x2060191:
00bbd2 89ed      	LDD  R30,Y+21
00bbd3 89fe      	LDD  R31,Y+21+1
00bbd4 81a4      	LDD  R26,Z+4
00bbd5 78a0      	ANDI R26,LOW(0x80)
00bbd6 f011      	BREQ _0x2060192
00bbd7 e0e2      	LDI  R30,LOW(2)
00bbd8 c186      	RJMP _0x20E0008
                 _0x2060192:
00bbd9 940e df84 	CALL SUBOPT_0x412
00bbdb 940e df8a 	CALL SUBOPT_0x413
00bbdd 940e e46b 	CALL __CPD12
00bbdf f428      	BRSH _0x2060194
00bbe0 89ed      	LDD  R30,Y+21
00bbe1 89fe      	LDD  R31,Y+21+1
00bbe2 81a4      	LDD  R26,Z+4
00bbe3 70a2      	ANDI R26,LOW(0x2)
00bbe4 f009      	BREQ _0x2060195
                 _0x2060194:
00bbe5 c004      	RJMP _0x2060193
                 _0x2060195:
00bbe6 940e df84 	CALL SUBOPT_0x412
00bbe8 940e df8f 	CALL SUBOPT_0x414
                 _0x2060193:
00bbea 89ad      	LDD  R26,Y+21
00bbeb 89be      	LDD  R27,Y+21+1
00bbec 9616      	ADIW R26,6
00bbed 940e dcf2 	CALL SUBOPT_0x3B2
00bbef 940e dde6 	CALL SUBOPT_0x3D3
00bbf1 940e ddcb 	CALL SUBOPT_0x3CE
00bbf3 940e df94 	CALL SUBOPT_0x415
00bbf5 9615      	ADIW R26,5
00bbf6 efef      	LDI  R30,LOW(255)
00bbf7 93ec      	ST   X,R30
00bbf8 940e df8a 	CALL SUBOPT_0x413
00bbfa 940e e465 	CALL __CPD02
00bbfc f010      	BRLO PC+3
00bbfd 940c bd0a 	JMP _0x2060196
00bbff 940e df9c 	CALL SUBOPT_0x416
00bc01 940e d3ca 	CALL SUBOPT_0x29A
00bc03 940e e2dd 	CALL __CWD1
                +
00bc05 e0a0     +LDI R26 , LOW ( 0x200 )
00bc06 e0b2     +LDI R27 , HIGH ( 0x200 )
00bc07 e080     +LDI R24 , BYTE3 ( 0x200 )
00bc08 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00bc09 940e e2fe 	CALL __MULD12U
00bc0b 940e dc95 	CALL SUBOPT_0x3A2
00bc0d 940e d3cd 	CALL SUBOPT_0x29B
00bc0f 940e e465 	CALL __CPD02
00bc11 f498      	BRSH _0x2060198
00bc12 940e dfa1 	CALL SUBOPT_0x417
00bc14 940e dfa6 	CALL SUBOPT_0x418
00bc16 937f      	PUSH R23
00bc17 936f      	PUSH R22
00bc18 93ff      	PUSH R31
00bc19 93ef      	PUSH R30
00bc1a 940e ddb8 	CALL SUBOPT_0x3CB
00bc1c 940e dfa6 	CALL SUBOPT_0x418
00bc1e 91af      	POP  R26
00bc1f 91bf      	POP  R27
00bc20 918f      	POP  R24
00bc21 919f      	POP  R25
00bc22 940e e470 	CALL __CPD21
00bc24 f408      	BRSH _0x2060199
                 _0x2060198:
00bc25 c021      	RJMP _0x2060197
                 _0x2060199:
00bc26 940e ddb8 	CALL SUBOPT_0x3CB
00bc28 940e c81a 	CALL SUBOPT_0xDA
00bc2a 01df      	MOVW R26,R30
00bc2b 01cb      	MOVW R24,R22
00bc2c 940e c54a 	CALL SUBOPT_0x6B
00bc2e 940e c81a 	CALL SUBOPT_0xDA
00bc30 940e e2e2 	CALL __COMD1
00bc32 940e e26c 	CALL __ANDD12
00bc34 940e df94 	CALL SUBOPT_0x415
00bc36 9616      	ADIW R26,6
00bc37 940e e3d0 	CALL __GETD1P
00bc39 940e df8a 	CALL SUBOPT_0x413
00bc3b 940e e267 	CALL __SUBD21
                +
00bc3d 8ba9     +STD Y + 17 , R26
00bc3e 8bba     +STD Y + 17 + 1 , R27
00bc3f 8b8b     +STD Y + 17 + 2 , R24
00bc40 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00bc41 89ad      	LDD  R26,Y+21
00bc42 89be      	LDD  R27,Y+21+1
00bc43 9652      	ADIW R26,18
00bc44 940e dfaf 	CALL SUBOPT_0x419
00bc46 c02b      	RJMP _0x206019A
                 _0x2060197:
00bc47 89ad      	LDD  R26,Y+21
00bc48 89be      	LDD  R27,Y+21+1
00bc49 961e      	ADIW R26,14
00bc4a 940e dfaf 	CALL SUBOPT_0x419
00bc4c 940e dfb6 	CALL SUBOPT_0x41A
00bc4e 940e e459 	CALL __CPD10
00bc50 f4f9      	BRNE _0x206019B
00bc51 940e df81 	CALL SUBOPT_0x411
00bc53 940e c396 	CALL SUBOPT_0x2C
00bc55 940e dfbb 	CALL SUBOPT_0x41B
00bc57 940e dfc2 	CALL SUBOPT_0x41C
00bc59 940e ddbd 	CALL SUBOPT_0x3CC
00bc5b f421      	BRNE _0x206019C
00bc5c 940e dfc7 	CALL SUBOPT_0x41D
00bc5e e0e2      	LDI  R30,LOW(2)
00bc5f c0ff      	RJMP _0x20E0008
                 _0x206019C:
00bc60 940e dfc2 	CALL SUBOPT_0x41C
00bc62 940e c3fc 	CALL SUBOPT_0x3A
00bc64 f421      	BRNE _0x206019D
00bc65 940e dfc7 	CALL SUBOPT_0x41D
00bc67 e0e1      	LDI  R30,LOW(1)
00bc68 c0f6      	RJMP _0x20E0008
                 _0x206019D:
00bc69 940e dfb6 	CALL SUBOPT_0x41A
                +
00bc6b 89ad     +LDD R26 , Y + 21
00bc6c 89be     +LDD R27 , Y + 21 + 1
00bc6d 961e     +ADIW R26 , 14
00bc6e 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00bc70 940e dfce 	CALL SUBOPT_0x41E
                 _0x206019A:
00bc72 940e dfb6 	CALL SUBOPT_0x41A
00bc74 940e e459 	CALL __CPD10
00bc76 f411      	BRNE PC+3
00bc77 940c bd0a 	JMP _0x206019E
                 _0x206019F:
00bc79 940e c54a 	CALL SUBOPT_0x6B
00bc7b 940e df8a 	CALL SUBOPT_0x413
00bc7d 940e e46b 	CALL __CPD12
00bc7f f010      	BRLO PC+3
00bc80 940c bcd1 	JMP _0x20601A1
00bc82 89ed      	LDD  R30,Y+21
00bc83 89fe      	LDD  R31,Y+21+1
00bc84 81a4      	LDD  R26,Z+4
00bc85 70a2      	ANDI R26,LOW(0x2)
00bc86 f089      	BREQ _0x20601A2
00bc87 940e df81 	CALL SUBOPT_0x411
00bc89 940e dfd5 	CALL SUBOPT_0x41F
00bc8b 940e dfbb 	CALL SUBOPT_0x41B
00bc8d 940e dfb6 	CALL SUBOPT_0x41A
00bc8f 940e e459 	CALL __CPD10
00bc91 f429      	BRNE _0x20601A3
00bc92 940e c54a 	CALL SUBOPT_0x6B
00bc94 940e df8f 	CALL SUBOPT_0x414
00bc96 c03a      	RJMP _0x20601A1
                 _0x20601A3:
00bc97 c00a      	RJMP _0x20601A4
                 _0x20601A2:
00bc98 940e df81 	CALL SUBOPT_0x411
00bc9a 940e dfd5 	CALL SUBOPT_0x41F
00bc9c 940e aeec 	CALL _get_fat
                +
00bc9e 87ed     +STD Y + 13 , R30
00bc9f 87fe     +STD Y + 13 + 1 , R31
00bca0 876f     +STD Y + 13 + 2 , R22
00bca1 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
                 _0x20601A4:
00bca2 940e dfc2 	CALL SUBOPT_0x41C
00bca4 940e c3fc 	CALL SUBOPT_0x3A
00bca6 f421      	BRNE _0x20601A5
00bca7 940e dfc7 	CALL SUBOPT_0x41D
00bca9 e0e1      	LDI  R30,LOW(1)
00bcaa c0b4      	RJMP _0x20E0008
                 _0x20601A5:
00bcab 940e dfc2 	CALL SUBOPT_0x41C
00bcad 940e dd3d 	CALL SUBOPT_0x3BB
00bcaf f048      	BRLO _0x20601A7
00bcb0 940e df9c 	CALL SUBOPT_0x416
00bcb2 940e de25 	CALL SUBOPT_0x3DE
00bcb4 940e dfc2 	CALL SUBOPT_0x41C
00bcb6 940e e470 	CALL __CPD21
00bcb8 f020      	BRLO _0x20601A6
                 _0x20601A7:
00bcb9 940e dfc7 	CALL SUBOPT_0x41D
00bcbb e0e2      	LDI  R30,LOW(2)
00bcbc c0a2      	RJMP _0x20E0008
                 _0x20601A6:
00bcbd 940e dfce 	CALL SUBOPT_0x41E
00bcbf 940e dfda 	CALL SUBOPT_0x420
00bcc1 940e dcc6 	CALL SUBOPT_0x3AA
00bcc3 940e e258 	CALL __ADDD12
00bcc5 01d0      	MOVW R26,R0
00bcc6 940e e3db 	CALL __PUTDP1
00bcc8 940e dcc6 	CALL SUBOPT_0x3AA
00bcca 940e dfa1 	CALL SUBOPT_0x417
00bccc 940e e262 	CALL __SUBD12
00bcce 940e df8f 	CALL SUBOPT_0x414
00bcd0 cfa8      	RJMP _0x206019F
                 _0x20601A1:
00bcd1 940e dfda 	CALL SUBOPT_0x420
00bcd3 940e df8a 	CALL SUBOPT_0x413
00bcd5 940e e258 	CALL __ADDD12
00bcd7 01d0      	MOVW R26,R0
00bcd8 940e e3db 	CALL __PUTDP1
00bcda 940e df8a 	CALL SUBOPT_0x413
                +
00bcdc e0e0     +LDI R30 , LOW ( 0x200 )
00bcdd e0f2     +LDI R31 , HIGH ( 0x200 )
00bcde e060     +LDI R22 , BYTE3 ( 0x200 )
00bcdf e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00bce0 940e e354 	CALL __DIVD21U
                +
00bce2 89ad     +LDD R26 , Y + 21
00bce3 89be     +LDD R27 , Y + 21 + 1
00bce4 9615     +ADIW R26 , 5
00bce5 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
00bce6 940e dfa1 	CALL SUBOPT_0x417
00bce8 70f1      	ANDI R31,HIGH(0x1FF)
00bce9 9730      	SBIW R30,0
00bcea f0f9      	BREQ _0x20601A9
00bceb 940e df81 	CALL SUBOPT_0x411
00bced 940e dfd5 	CALL SUBOPT_0x41F
00bcef 940e b125 	CALL _clust2sect
00bcf1 940e ddcb 	CALL SUBOPT_0x3CE
00bcf3 940e dcf9 	CALL SUBOPT_0x3B3
00bcf5 940e e459 	CALL __CPD10
00bcf7 f421      	BRNE _0x20601AA
00bcf8 940e dfc7 	CALL SUBOPT_0x41D
00bcfa e0e2      	LDI  R30,LOW(2)
00bcfb c063      	RJMP _0x20E0008
                 _0x20601AA:
00bcfc 89ed      	LDD  R30,Y+21
00bcfd 89fe      	LDD  R31,Y+21+1
00bcfe 81e5      	LDD  R30,Z+5
00bcff e0f0      	LDI  R31,0
00bd00 940e ddaa 	CALL SUBOPT_0x3C9
00bd02 940e c709 	CALL SUBOPT_0xAC
00bd04 940e ddcb 	CALL SUBOPT_0x3CE
00bd06 89ad      	LDD  R26,Y+21
00bd07 89be      	LDD  R27,Y+21+1
00bd08 940e df27 	CALL SUBOPT_0x403
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
00bd0a 940e dfe2 	CALL SUBOPT_0x421
00bd0c 940e debf 	CALL SUBOPT_0x3F5
00bd0e f051      	BREQ _0x20601AC
00bd0f 89ad      	LDD  R26,Y+21
00bd10 89be      	LDD  R27,Y+21+1
00bd11 9656      	ADIW R26,22
00bd12 940e e3d0 	CALL __GETD1P
00bd14 940e ddaa 	CALL SUBOPT_0x3C9
00bd16 940e e46b 	CALL __CPD12
00bd18 f409      	BRNE _0x20601AD
                 _0x20601AC:
00bd19 c02b      	RJMP _0x20601AB
                 _0x20601AD:
00bd1a 89ed      	LDD  R30,Y+21
00bd1b 89fe      	LDD  R31,Y+21+1
00bd1c 81a4      	LDD  R26,Z+4
00bd1d 74a0      	ANDI R26,LOW(0x40)
00bd1e f089      	BREQ _0x20601AE
00bd1f 940e df9c 	CALL SUBOPT_0x416
00bd21 81e1      	LDD  R30,Z+1
00bd22 93ea      	ST   -Y,R30
00bd23 940e df79 	CALL SUBOPT_0x410
00bd25 940e df17 	CALL SUBOPT_0x401
00bd27 f021      	BREQ _0x20601AF
00bd28 940e dfc7 	CALL SUBOPT_0x41D
00bd2a e0e1      	LDI  R30,LOW(1)
00bd2b c033      	RJMP _0x20E0008
                 _0x20601AF:
00bd2c 89ad      	LDD  R26,Y+21
00bd2d 89be      	LDD  R27,Y+21+1
00bd2e 940e df22 	CALL SUBOPT_0x402
                 _0x20601AE:
00bd30 940e df9c 	CALL SUBOPT_0x416
00bd32 81e1      	LDD  R30,Z+1
00bd33 93ea      	ST   -Y,R30
00bd34 89ee      	LDD  R30,Y+22
00bd35 89ff      	LDD  R31,Y+22+1
00bd36 96b0      	ADIW R30,32
00bd37 940e dd13 	CALL SUBOPT_0x3B6
00bd39 f021      	BREQ _0x20601B0
00bd3a 940e dfc7 	CALL SUBOPT_0x41D
00bd3c e0e1      	LDI  R30,LOW(1)
00bd3d c021      	RJMP _0x20E0008
                 _0x20601B0:
00bd3e 940e dcf9 	CALL SUBOPT_0x3B3
                +
00bd40 89ad     +LDD R26 , Y + 21
00bd41 89be     +LDD R27 , Y + 21 + 1
00bd42 9656     +ADIW R26 , 22
00bd43 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
00bd45 940e dfe2 	CALL SUBOPT_0x421
00bd47 010d      	MOVW R0,R26
00bd48 940e df84 	CALL SUBOPT_0x412
00bd4a 01d0      	MOVW R26,R0
00bd4b 940e e46b 	CALL __CPD12
00bd4d f480      	BRSH _0x20601B1
00bd4e 89ad      	LDD  R26,Y+21
00bd4f 89be      	LDD  R27,Y+21+1
00bd50 9616      	ADIW R26,6
00bd51 940e e3d0 	CALL __GETD1P
                +
00bd53 89ad     +LDD R26 , Y + 21
00bd54 89be     +LDD R27 , Y + 21 + 1
00bd55 961a     +ADIW R26 , 10
00bd56 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 21,10
00bd58 89ad      	LDD  R26,Y+21
00bd59 89be      	LDD  R27,Y+21+1
00bd5a 9614      	ADIW R26,4
00bd5b 91ec      	LD   R30,X
00bd5c 62e0      	ORI  R30,0x20
00bd5d 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
00bd5e 2fe1      	MOV  R30,R17
                 _0x20E0008:
00bd5f 8118      	LDD  R17,Y+0
00bd60 9667      	ADIW R28,23
00bd61 9508      	RET
                 _f_getfree:
00bd62 93ba      	ST   -Y,R27
00bd63 93aa      	ST   -Y,R26
00bd64 9760      	SBIW R28,16
00bd65 940e e475 	CALL __SAVELOCR6
00bd67 01fe      	MOVW R30,R28
00bd68 967a      	ADIW R30,26
00bd69 93fa      	ST   -Y,R31
00bd6a 93ea      	ST   -Y,R30
00bd6b 940e d42a 	CALL SUBOPT_0x2AA
00bd6d e0a0      	LDI  R26,LOW(0)
00bd6e 940e b4d2 	CALL _chk_mounted
00bd70 2f1e      	MOV  R17,R30
00bd71 3010      	CPI  R17,0
00bd72 f011      	BREQ _0x20601C3
00bd73 2fe1      	MOV  R30,R17
00bd74 c0c9      	RJMP _0x20E0006
                 _0x20601C3:
00bd75 940e df51 	CALL SUBOPT_0x40A
00bd77 010f      	MOVW R0,R30
00bd78 963e      	ADIW R30,14
00bd79 01df      	MOVW R26,R30
00bd7a 940e e3d0 	CALL __GETD1P
00bd7c 937f      	PUSH R23
00bd7d 936f      	PUSH R22
00bd7e 93ff      	PUSH R31
00bd7f 93ef      	PUSH R30
00bd80 01d0      	MOVW R26,R0
00bd81 965e      	ADIW R26,30
00bd82 940e e3d0 	CALL __GETD1P
                +
00bd84 50e2     +SUBI R30 , LOW ( 2 )
00bd85 40f0     +SBCI R31 , HIGH ( 2 )
00bd86 4060     +SBCI R22 , BYTE3 ( 2 )
00bd87 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00bd88 91af      	POP  R26
00bd89 91bf      	POP  R27
00bd8a 918f      	POP  R24
00bd8b 919f      	POP  R25
00bd8c 940e e46b 	CALL __CPD12
00bd8e f038      	BRLO _0x20601C4
00bd8f 940e df51 	CALL SUBOPT_0x40A
00bd91 963e      	ADIW R30,14
00bd92 01df      	MOVW R26,R30
00bd93 940e e3d0 	CALL __GETD1P
00bd95 c0a3      	RJMP _0x20E0007
                 _0x20601C4:
00bd96 940e df51 	CALL SUBOPT_0x40A
00bd98 8100      	LD   R16,Z
00bd99 e0e0      	LDI  R30,LOW(0)
                +
00bd9a 8bea     +STD Y + 18 , R30
00bd9b 8beb     +STD Y + 18 + 1 , R30
00bd9c 8bec     +STD Y + 18 + 2 , R30
00bd9d 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
00bd9e 3001      	CPI  R16,1
00bd9f f5b9      	BRNE _0x20601C5
00bda0 940e ddda 	CALL SUBOPT_0x3D1
00bda2 940e de94 	CALL SUBOPT_0x3EE
                 _0x20601C7:
00bda4 940e df41 	CALL SUBOPT_0x407
00bda6 940e d11e 	CALL SUBOPT_0x234
00bda8 940e aeec 	CALL _get_fat
00bdaa 940e c73c 	CALL SUBOPT_0xB6
00bdac 940e c4dc 	CALL SUBOPT_0x59
00bdae 940e c3fc 	CALL SUBOPT_0x3A
00bdb0 f411      	BRNE _0x20601C9
00bdb1 e0e1      	LDI  R30,LOW(1)
00bdb2 c08b      	RJMP _0x20E0006
                 _0x20601C9:
00bdb3 940e c4dc 	CALL SUBOPT_0x59
00bdb5 940e ddbd 	CALL SUBOPT_0x3CC
00bdb7 f411      	BRNE _0x20601CA
00bdb8 e0e2      	LDI  R30,LOW(2)
00bdb9 c084      	RJMP _0x20E0006
                 _0x20601CA:
00bdba 940e c737 	CALL SUBOPT_0xB5
00bdbc 940e e459 	CALL __CPD10
00bdbe f411      	BRNE _0x20601CB
00bdbf 940e dfe9 	CALL SUBOPT_0x422
                 _0x20601CB:
00bdc1 940e c503 	CALL SUBOPT_0x60
00bdc3 940e c75e 	CALL SUBOPT_0xBC
00bdc5 940e de94 	CALL SUBOPT_0x3EE
00bdc7 937f      	PUSH R23
00bdc8 936f      	PUSH R22
00bdc9 93ff      	PUSH R31
00bdca 93ef      	PUSH R30
00bdcb 940e df51 	CALL SUBOPT_0x40A
00bdcd 940e de25 	CALL SUBOPT_0x3DE
00bdcf 91af      	POP  R26
00bdd0 91bf      	POP  R27
00bdd1 918f      	POP  R24
00bdd2 919f      	POP  R25
00bdd3 940e e470 	CALL __CPD21
00bdd5 f270      	BRLO _0x20601C7
00bdd6 c052      	RJMP _0x20601CC
                 _0x20601C5:
00bdd7 940e df51 	CALL SUBOPT_0x40A
00bdd9 940e de25 	CALL SUBOPT_0x3DE
00bddb 940e de94 	CALL SUBOPT_0x3EE
00bddd 940e df51 	CALL SUBOPT_0x40A
00bddf 96b2      	ADIW R30,34
00bde0 01df      	MOVW R26,R30
00bde1 940e e3d0 	CALL __GETD1P
00bde3 940e d9f1 	CALL SUBOPT_0x352
00bde5 940e c260 	CALL SUBOPT_0x0
                 _0x20601CE:
00bde7 2e02      	MOV  R0,R18
00bde8 2a03      	OR   R0,R19
00bde9 f4c1      	BRNE _0x20601D0
00bdea 940e df41 	CALL SUBOPT_0x407
00bdec 940e c815 	CALL SUBOPT_0xD9
00bdee 940e c75e 	CALL SUBOPT_0xBC
00bdf0 940e c886 	CALL SUBOPT_0xEA
00bdf2 9731      	SBIW R30,1
00bdf3 4060      	SBCI R22,0
00bdf4 4070      	SBCI R23,0
00bdf5 01df      	MOVW R26,R30
00bdf6 01cb      	MOVW R24,R22
00bdf7 940e dea9 	CALL SUBOPT_0x3F1
00bdf9 f011      	BREQ _0x20601D1
00bdfa 2fe1      	MOV  R30,R17
00bdfb c042      	RJMP _0x20E0006
                 _0x20601D1:
00bdfc 940e df51 	CALL SUBOPT_0x40A
00bdfe 96f2      	ADIW R30,50
00bdff 01af      	MOVW R20,R30
                +
00be00 e020     +LDI R18 , LOW ( 512 )
00be01 e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
00be02 3002      	CPI  R16,2
00be03 f461      	BRNE _0x20601D2
00be04 01da      	MOVW R26,R20
00be05 940e e3cc 	CALL __GETW1P
00be07 9730      	SBIW R30,0
00be08 f411      	BRNE _0x20601D3
00be09 940e dfe9 	CALL SUBOPT_0x422
                 _0x20601D3:
                +
00be0b 5f4e     +SUBI R20 , LOW ( - 2 )
00be0c 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
00be0d 5022     +SUBI R18 , LOW ( 2 )
00be0e 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
00be0f c010      	RJMP _0x20601D4
                 _0x20601D2:
00be10 01da      	MOVW R26,R20
00be11 940e e3d0 	CALL __GETD1P
                +
00be13 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00be14 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00be15 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00be16 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00be17 940e e459 	CALL __CPD10
00be19 f411      	BRNE _0x20601D5
00be1a 940e dfe9 	CALL SUBOPT_0x422
                 _0x20601D5:
                +
00be1c 5f4c     +SUBI R20 , LOW ( - 4 )
00be1d 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
00be1e 5024     +SUBI R18 , LOW ( 4 )
00be1f 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
00be20 940e c503 	CALL SUBOPT_0x60
00be22 9731      	SBIW R30,1
00be23 4060      	SBCI R22,0
00be24 4070      	SBCI R23,0
00be25 940e de94 	CALL SUBOPT_0x3EE
00be27 f009      	BREQ _0x20601CF
00be28 cfbe      	RJMP _0x20601CE
                 _0x20601CF:
                 _0x20601CC:
00be29 940e df51 	CALL SUBOPT_0x40A
00be2b 963e      	ADIW R30,14
00be2c 940e ddd5 	CALL SUBOPT_0x3D0
00be2e 940e d262 	CALL SUBOPT_0x264
00be30 3003      	CPI  R16,3
00be31 f429      	BRNE _0x20601D6
00be32 940e df51 	CALL SUBOPT_0x40A
00be34 9635      	ADIW R30,5
00be35 e0a1      	LDI  R26,LOW(1)
00be36 83a0      	STD  Z+0,R26
                 _0x20601D6:
00be37 940e c7ff 	CALL SUBOPT_0xD4
                 _0x20E0007:
00be39 8da8      	LDD  R26,Y+24
00be3a 8db9      	LDD  R27,Y+24+1
00be3b 940e e3db 	CALL __PUTDP1
00be3d e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
00be3e 940e e47c 	CALL __LOADLOCR6
00be40 966c      	ADIW R28,28
00be41 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00be42 93aa      	ST   -Y,R26
                 _0x2080003:
00be43 91e0 00c0 	LDS  R30,192
00be45 72e0      	ANDI R30,LOW(0x20)
00be46 f3e1      	BREQ _0x2080003
00be47 81e8      	LD   R30,Y
00be48 93e0 00c6 	STS  198,R30
00be4a 9621      	ADIW R28,1
00be4b 9508      	RET
                 _puts:
00be4c 93ba      	ST   -Y,R27
00be4d 93aa      	ST   -Y,R26
00be4e 931a      	ST   -Y,R17
                 _0x2080006:
00be4f 81a9      	LDD  R26,Y+1
00be50 81ba      	LDD  R27,Y+1+1
00be51 91ed      	LD   R30,X+
00be52 83a9      	STD  Y+1,R26
00be53 83ba      	STD  Y+1+1,R27
00be54 2f1e      	MOV  R17,R30
00be55 30e0      	CPI  R30,0
00be56 f019      	BREQ _0x2080008
00be57 2fa1      	MOV  R26,R17
00be58 dfe9      	RCALL _putchar
00be59 cff5      	RJMP _0x2080006
                 _0x2080008:
00be5a e0aa      	LDI  R26,LOW(10)
00be5b dfe6      	RCALL _putchar
                 _0x20E0005:
00be5c 8118      	LDD  R17,Y+0
00be5d 9623      	ADIW R28,3
00be5e 9508      	RET
                 _put_buff_G104:
00be5f 940e c5e5 	CALL SUBOPT_0x81
00be61 81aa      	LDD  R26,Y+2
00be62 81bb      	LDD  R27,Y+2+1
00be63 9612      	ADIW R26,2
00be64 940e e3cc 	CALL __GETW1P
00be66 9730      	SBIW R30,0
00be67 f129      	BREQ _0x208002A
00be68 81aa      	LDD  R26,Y+2
00be69 81bb      	LDD  R27,Y+2+1
00be6a 9614      	ADIW R26,4
00be6b 940e e3cc 	CALL __GETW1P
00be6d 018f      	MOVW R16,R30
00be6e 9730      	SBIW R30,0
00be6f f061      	BREQ _0x208002C
                +
00be70 3002     +CPI R16 , LOW ( 2 )
00be71 e0e0     +LDI R30 , HIGH ( 2 )
00be72 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00be73 f0c0      	BRLO _0x208002D
00be74 01f8      	MOVW R30,R16
00be75 9731      	SBIW R30,1
00be76 018f      	MOVW R16,R30
                +
00be77 81aa     +LDD R26 , Y + 2
00be78 81bb     +LDD R27 , Y + 2 + 1
00be79 9614     +ADIW R26 , 4
00be7a 93ed     +ST X + , R30
00be7b 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
00be7c 81aa      	LDD  R26,Y+2
00be7d 81bb      	LDD  R27,Y+2+1
00be7e 9612      	ADIW R26,2
00be7f 940e c5c8 	CALL SUBOPT_0x7C
00be81 9731      	SBIW R30,1
00be82 81ac      	LDD  R26,Y+4
00be83 83a0      	STD  Z+0,R26
00be84 81aa      	LDD  R26,Y+2
00be85 81bb      	LDD  R27,Y+2+1
00be86 940e e3cc 	CALL __GETW1P
00be88 23ff      	TST  R31
00be89 f012      	BRMI _0x208002E
00be8a 940e c5c8 	CALL SUBOPT_0x7C
                 _0x208002E:
                 _0x208002D:
00be8c c006      	RJMP _0x208002F
                 _0x208002A:
00be8d 81aa      	LDD  R26,Y+2
00be8e 81bb      	LDD  R27,Y+2+1
00be8f efef      	LDI  R30,LOW(65535)
00be90 efff      	LDI  R31,HIGH(65535)
00be91 93ed      	ST   X+,R30
00be92 93fc      	ST   X,R31
                 _0x208002F:
00be93 8119      	LDD  R17,Y+1
00be94 8108      	LDD  R16,Y+0
00be95 9625      	ADIW R28,5
00be96 9508      	RET
                 __ftoe_G104:
00be97 93ba      	ST   -Y,R27
00be98 93aa      	ST   -Y,R26
00be99 9724      	SBIW R28,4
00be9a e0e0      	LDI  R30,LOW(0)
00be9b 83e8      	ST   Y,R30
00be9c 83e9      	STD  Y+1,R30
00be9d e8e0      	LDI  R30,LOW(128)
00be9e 83ea      	STD  Y+2,R30
00be9f e3ef      	LDI  R30,LOW(63)
00bea0 83eb      	STD  Y+3,R30
00bea1 940e e477 	CALL __SAVELOCR4
00bea3 85ee      	LDD  R30,Y+14
00bea4 85ff      	LDD  R31,Y+14+1
00bea5 3fef      	CPI  R30,LOW(0xFFFF)
00bea6 efaf      	LDI  R26,HIGH(0xFFFF)
00bea7 07fa      	CPC  R31,R26
00bea8 f459      	BRNE _0x2080037
00bea9 940e cc7c 	CALL SUBOPT_0x194
                +
00beab e8a4     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
00beac e6ba     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
00bead e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
00beae e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
00beaf 940e a7f6 	CALL _strcpyf
00beb1 940e e47e 	CALL __LOADLOCR4
00beb3 c32e      	RJMP _0x20E0003
                 _0x2080037:
00beb4 3fef      	CPI  R30,LOW(0x7FFF)
00beb5 e7af      	LDI  R26,HIGH(0x7FFF)
00beb6 07fa      	CPC  R31,R26
00beb7 f459      	BRNE _0x2080036
00beb8 940e cc7c 	CALL SUBOPT_0x194
                +
00beba e8a5     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
00bebb e6ba     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
00bebc e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
00bebd e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
00bebe 940e a7f6 	CALL _strcpyf
00bec0 940e e47e 	CALL __LOADLOCR4
00bec2 c31f      	RJMP _0x20E0003
                 _0x2080036:
00bec3 85ab      	LDD  R26,Y+11
00bec4 30a7      	CPI  R26,LOW(0x7)
00bec5 f010      	BRLO _0x2080039
00bec6 e0e6      	LDI  R30,LOW(6)
00bec7 87eb      	STD  Y+11,R30
                 _0x2080039:
00bec8 851b      	LDD  R17,Y+11
                 _0x208003A:
00bec9 2fe1      	MOV  R30,R17
00beca 5011      	SUBI R17,1
00becb 30e0      	CPI  R30,0
00becc f029      	BREQ _0x208003C
00becd 940e dfee 	CALL SUBOPT_0x423
00becf 940e c6ef 	CALL SUBOPT_0xA7
00bed1 cff7      	RJMP _0x208003A
                 _0x208003C:
00bed2 940e c815 	CALL SUBOPT_0xD9
00bed4 940e e459 	CALL __CPD10
00bed6 f431      	BRNE _0x208003D
00bed7 e030      	LDI  R19,LOW(0)
00bed8 940e dfee 	CALL SUBOPT_0x423
00beda 940e c6ef 	CALL SUBOPT_0xA7
00bedc c02c      	RJMP _0x208003E
                 _0x208003D:
00bedd 853b      	LDD  R19,Y+11
00bede 940e dff1 	CALL SUBOPT_0x424
00bee0 f009      	BREQ PC+2
00bee1 f410      	BRCC PC+3
00bee2 940c bef0 	JMP  _0x208003F
00bee4 940e dfee 	CALL SUBOPT_0x423
00bee6 940e c6ef 	CALL SUBOPT_0xA7
                 _0x2080040:
00bee8 940e dff1 	CALL SUBOPT_0x424
00beea f020      	BRLO _0x2080042
00beeb 940e dff8 	CALL SUBOPT_0x425
00beed 5f3f      	SUBI R19,-LOW(1)
00beee cff9      	RJMP _0x2080040
                 _0x2080042:
00beef c00d      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
00bef0 940e dff1 	CALL SUBOPT_0x424
00bef2 f430      	BRSH _0x2080046
00bef3 940e dcd1 	CALL SUBOPT_0x3AC
00bef5 940e c886 	CALL SUBOPT_0xEA
00bef7 5031      	SUBI R19,LOW(1)
00bef8 cff7      	RJMP _0x2080044
                 _0x2080046:
00bef9 940e dfee 	CALL SUBOPT_0x423
00befb 940e c6ef 	CALL SUBOPT_0xA7
                 _0x2080043:
00befd 940e c815 	CALL SUBOPT_0xD9
00beff 940e dcb6 	CALL SUBOPT_0x3A7
00bf01 940e c886 	CALL SUBOPT_0xEA
00bf03 940e dff1 	CALL SUBOPT_0x424
00bf05 f018      	BRLO _0x2080047
00bf06 940e dff8 	CALL SUBOPT_0x425
00bf08 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
00bf09 e010      	LDI  R17,LOW(0)
                 _0x2080048:
00bf0a 85eb      	LDD  R30,Y+11
00bf0b 17e1      	CP   R30,R17
00bf0c f1a8      	BRLO _0x208004A
00bf0d 940e c6f4 	CALL SUBOPT_0xA8
                +
00bf0f eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00bf10 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00bf11 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00bf12 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00bf13 940e e1a1 	CALL __MULF12
00bf15 940e dcb6 	CALL SUBOPT_0x3A7
00bf17 01df      	MOVW R26,R30
00bf18 01cb      	MOVW R24,R22
00bf19 940e c249 	CALL _floor
00bf1b 940e c70e 	CALL SUBOPT_0xAD
00bf1d 940e c2ba 	CALL SUBOPT_0xB
00bf1f 940e e1ef 	CALL __DIVF21
00bf21 940e e0de 	CALL __CFD1U
00bf23 2f0e      	MOV  R16,R30
00bf24 940e dfff 	CALL SUBOPT_0x426
00bf26 2fe0      	MOV  R30,R16
00bf27 5de0      	SUBI R30,-LOW(48)
00bf28 93ec      	ST   X,R30
00bf29 2fe0      	MOV  R30,R16
00bf2a 27ff      	CLR  R31
00bf2b 2766      	CLR  R22
00bf2c 2777      	CLR  R23
00bf2d 940e e117 	CALL __CDF1
00bf2f 940e c6f4 	CALL SUBOPT_0xA8
00bf31 940e e1a1 	CALL __MULF12
00bf33 940e c2ba 	CALL SUBOPT_0xB
00bf35 940e d08a 	CALL SUBOPT_0x222
00bf37 940e c886 	CALL SUBOPT_0xEA
00bf39 2fe1      	MOV  R30,R17
00bf3a 5f1f      	SUBI R17,-1
00bf3b 30e0      	CPI  R30,0
00bf3c f669      	BRNE _0x2080048
00bf3d 940e dfff 	CALL SUBOPT_0x426
00bf3f e2ee      	LDI  R30,LOW(46)
00bf40 93ec      	ST   X,R30
00bf41 cfc8      	RJMP _0x2080048
                 _0x208004A:
00bf42 940e c5de 	CALL SUBOPT_0x80
00bf44 85aa      	LDD  R26,Y+10
00bf45 83a0      	STD  Z+0,R26
00bf46 3030      	CPI  R19,0
00bf47 f42c      	BRGE _0x208004C
00bf48 9531      	NEG  R19
00bf49 85a8      	LDD  R26,Y+8
00bf4a 85b9      	LDD  R27,Y+8+1
00bf4b e2ed      	LDI  R30,LOW(45)
00bf4c c003      	RJMP _0x2080137
                 _0x208004C:
00bf4d 85a8      	LDD  R26,Y+8
00bf4e 85b9      	LDD  R27,Y+8+1
00bf4f e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
00bf50 93ec      	ST   X,R30
00bf51 85e8      	LDD  R30,Y+8
00bf52 85f9      	LDD  R31,Y+8+1
00bf53 9631      	ADIW R30,1
00bf54 940e cc79 	CALL SUBOPT_0x193
00bf56 9631      	ADIW R30,1
00bf57 87e8      	STD  Y+8,R30
00bf58 87f9      	STD  Y+8+1,R31
00bf59 9731      	SBIW R30,1
00bf5a 01bf      	MOVW R22,R30
00bf5b 2fa3      	MOV  R26,R19
00bf5c e0ea      	LDI  R30,LOW(10)
00bf5d 940e e337 	CALL __DIVB21
00bf5f 5de0      	SUBI R30,-LOW(48)
00bf60 01db      	MOVW R26,R22
00bf61 93ec      	ST   X,R30
00bf62 940e c5de 	CALL SUBOPT_0x80
00bf64 01bf      	MOVW R22,R30
00bf65 2fa3      	MOV  R26,R19
00bf66 e0ea      	LDI  R30,LOW(10)
00bf67 940e e37e 	CALL __MODB21
00bf69 5de0      	SUBI R30,-LOW(48)
00bf6a 01db      	MOVW R26,R22
00bf6b 93ec      	ST   X,R30
00bf6c 85a8      	LDD  R26,Y+8
00bf6d 85b9      	LDD  R27,Y+8+1
00bf6e e0e0      	LDI  R30,LOW(0)
00bf6f 93ec      	ST   X,R30
00bf70 940e e47e 	CALL __LOADLOCR4
00bf72 c26f      	RJMP _0x20E0003
                 __print_G104:
00bf73 93ba      	ST   -Y,R27
00bf74 93aa      	ST   -Y,R26
00bf75 97ef      	SBIW R28,63
00bf76 9765      	SBIW R28,21
00bf77 940e e475 	CALL __SAVELOCR6
00bf79 e010      	LDI  R17,0
                +
00bf7a 01fe     +MOVW R30 , R28
00bf7b 5ae4     +SUBI R30 , LOW ( - 92 )
00bf7c 4fff     +SBCI R31 , HIGH ( - 92 )
00bf7d 9001     +LD R0 , Z +
00bf7e 9011     +LD R1 , Z +
00bf7f 9161     +LD R22 , Z +
00bf80 8170     +LD R23 , Z
00bf81 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00bf82 940e da7e 	CALL SUBOPT_0x367
00bf84 940e cf8e 	CALL SUBOPT_0x20E
00bf86 83ee      	STD  Y+6,R30
00bf87 83ff      	STD  Y+6+1,R31
00bf88 81ae      	LDD  R26,Y+6
00bf89 81bf      	LDD  R27,Y+6+1
00bf8a 940e c971 	CALL SUBOPT_0x114
                 _0x208004E:
00bf8c 01de      	MOVW R26,R28
00bf8d 59ae      	SUBI R26,LOW(-(98))
00bf8e 4fbf      	SBCI R27,HIGH(-(98))
00bf8f 940e dcea 	CALL SUBOPT_0x3B1
                +
00bf91 bf6b     +OUT RAMPZ , R22
00bf92 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00bf93 2f2e      	MOV  R18,R30
00bf94 30e0      	CPI  R30,0
00bf95 f411      	BRNE PC+3
00bf96 940c c17d 	JMP _0x2080050
00bf98 2fe1      	MOV  R30,R17
00bf99 30e0      	CPI  R30,0
00bf9a f439      	BRNE _0x2080054
00bf9b 3225      	CPI  R18,37
00bf9c f411      	BRNE _0x2080055
00bf9d e011      	LDI  R17,LOW(1)
00bf9e c002      	RJMP _0x2080056
                 _0x2080055:
00bf9f 940e e006 	CALL SUBOPT_0x427
                 _0x2080056:
00bfa1 c1da      	RJMP _0x2080053
                 _0x2080054:
00bfa2 30e1      	CPI  R30,LOW(0x1)
00bfa3 f4c1      	BRNE _0x2080057
00bfa4 3225      	CPI  R18,37
00bfa5 f419      	BRNE _0x2080058
00bfa6 940e e006 	CALL SUBOPT_0x427
00bfa8 c1d2      	RJMP _0x2080138
                 _0x2080058:
00bfa9 e012      	LDI  R17,LOW(2)
00bfaa e0e0      	LDI  R30,LOW(0)
00bfab 8fe9      	STD  Y+25,R30
00bfac e000      	LDI  R16,LOW(0)
00bfad 322d      	CPI  R18,45
00bfae f411      	BRNE _0x2080059
00bfaf e001      	LDI  R16,LOW(1)
00bfb0 c1cb      	RJMP _0x2080053
                 _0x2080059:
00bfb1 322b      	CPI  R18,43
00bfb2 f419      	BRNE _0x208005A
00bfb3 e2eb      	LDI  R30,LOW(43)
00bfb4 8fe9      	STD  Y+25,R30
00bfb5 c1c6      	RJMP _0x2080053
                 _0x208005A:
00bfb6 3220      	CPI  R18,32
00bfb7 f419      	BRNE _0x208005B
00bfb8 e2e0      	LDI  R30,LOW(32)
00bfb9 8fe9      	STD  Y+25,R30
00bfba c1c1      	RJMP _0x2080053
                 _0x208005B:
00bfbb c002      	RJMP _0x208005C
                 _0x2080057:
00bfbc 30e2      	CPI  R30,LOW(0x2)
00bfbd f439      	BRNE _0x208005D
                 _0x208005C:
00bfbe e050      	LDI  R21,LOW(0)
00bfbf e013      	LDI  R17,LOW(3)
00bfc0 3320      	CPI  R18,48
00bfc1 f411      	BRNE _0x208005E
00bfc2 6800      	ORI  R16,LOW(128)
00bfc3 c1b8      	RJMP _0x2080053
                 _0x208005E:
00bfc4 c002      	RJMP _0x208005F
                 _0x208005D:
00bfc5 30e3      	CPI  R30,LOW(0x3)
00bfc6 f491      	BRNE _0x2080060
                 _0x208005F:
00bfc7 3320      	CPI  R18,48
00bfc8 f010      	BRLO _0x2080062
00bfc9 332a      	CPI  R18,58
00bfca f008      	BRLO _0x2080063
                 _0x2080062:
00bfcb c007      	RJMP _0x2080061
                 _0x2080063:
00bfcc e0aa      	LDI  R26,LOW(10)
00bfcd 9f5a      	MUL  R21,R26
00bfce 2d50      	MOV  R21,R0
00bfcf 2fe2      	MOV  R30,R18
00bfd0 53e0      	SUBI R30,LOW(48)
00bfd1 0f5e      	ADD  R21,R30
00bfd2 c1a9      	RJMP _0x2080053
                 _0x2080061:
00bfd3 e040      	LDI  R20,LOW(0)
00bfd4 322e      	CPI  R18,46
00bfd5 f411      	BRNE _0x2080064
00bfd6 e014      	LDI  R17,LOW(4)
00bfd7 c1a4      	RJMP _0x2080053
                 _0x2080064:
00bfd8 c00f      	RJMP _0x2080065
                 _0x2080060:
00bfd9 30e4      	CPI  R30,LOW(0x4)
00bfda f499      	BRNE _0x2080067
00bfdb 3320      	CPI  R18,48
00bfdc f010      	BRLO _0x2080069
00bfdd 332a      	CPI  R18,58
00bfde f008      	BRLO _0x208006A
                 _0x2080069:
00bfdf c008      	RJMP _0x2080068
                 _0x208006A:
00bfe0 6200      	ORI  R16,LOW(32)
00bfe1 e0aa      	LDI  R26,LOW(10)
00bfe2 9f4a      	MUL  R20,R26
00bfe3 2d40      	MOV  R20,R0
00bfe4 2fe2      	MOV  R30,R18
00bfe5 53e0      	SUBI R30,LOW(48)
00bfe6 0f4e      	ADD  R20,R30
00bfe7 c194      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
00bfe8 362c      	CPI  R18,108
00bfe9 f419      	BRNE _0x208006B
00bfea 6002      	ORI  R16,LOW(2)
00bfeb e015      	LDI  R17,LOW(5)
00bfec c18f      	RJMP _0x2080053
                 _0x208006B:
00bfed c004      	RJMP _0x208006C
                 _0x2080067:
00bfee 30e5      	CPI  R30,LOW(0x5)
00bfef f011      	BREQ PC+3
00bff0 940c c17c 	JMP _0x2080053
                 _0x208006C:
00bff2 2fe2      	MOV  R30,R18
00bff3 36e3      	CPI  R30,LOW(0x63)
00bff4 f459      	BRNE _0x2080071
00bff5 940e e00e 	CALL SUBOPT_0x428
00bff7 940e e015 	CALL SUBOPT_0x429
00bff9 940e e00e 	CALL SUBOPT_0x428
00bffb 81a4      	LDD  R26,Z+4
00bffc 93aa      	ST   -Y,R26
00bffd 940e e01c 	CALL SUBOPT_0x42A
00bfff c17b      	RJMP _0x2080072
                 _0x2080071:
00c000 34e5      	CPI  R30,LOW(0x45)
00c001 f011      	BREQ _0x2080075
00c002 36e5      	CPI  R30,LOW(0x65)
00c003 f409      	BRNE _0x2080076
                 _0x2080075:
00c004 c004      	RJMP _0x2080077
                 _0x2080076:
00c005 36e6      	CPI  R30,LOW(0x66)
00c006 f011      	BREQ PC+3
00c007 940c c048 	JMP _0x2080078
                 _0x2080077:
00c009 01fe      	MOVW R30,R28
00c00a 967a      	ADIW R30,26
00c00b 8be8      	STD  Y+16,R30
00c00c 8bf9      	STD  Y+16+1,R31
00c00d 940e e023 	CALL SUBOPT_0x42B
00c00f 940e e3d0 	CALL __GETD1P
00c011 940e c886 	CALL SUBOPT_0xEA
00c013 940e e02a 	CALL SUBOPT_0x42C
00c015 85af      	LDD  R26,Y+15
00c016 23aa      	TST  R26
00c017 f022      	BRMI _0x2080079
00c018 8da9      	LDD  R26,Y+25
00c019 32ab      	CPI  R26,LOW(0x2B)
00c01a f049      	BREQ _0x208007B
00c01b c014      	RJMP _0x208007C
                 _0x2080079:
00c01c 940e c815 	CALL SUBOPT_0xD9
00c01e 940e e0ab 	CALL __ANEGF1
00c020 940e c886 	CALL SUBOPT_0xEA
00c022 e2ed      	LDI  R30,LOW(45)
00c023 8fe9      	STD  Y+25,R30
                 _0x208007B:
00c024 ff07      	SBRS R16,7
00c025 c005      	RJMP _0x208007D
00c026 8de9      	LDD  R30,Y+25
00c027 93ea      	ST   -Y,R30
00c028 940e e01c 	CALL SUBOPT_0x42A
00c02a c005      	RJMP _0x208007E
                 _0x208007D:
00c02b 940e dccb 	CALL SUBOPT_0x3AB
00c02d 9731      	SBIW R30,1
00c02e 8da9      	LDD  R26,Y+25
00c02f 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
00c030 ff05      	SBRS R16,5
00c031 e046      	LDI  R20,LOW(6)
00c032 3626      	CPI  R18,102
00c033 f441      	BRNE _0x2080080
00c034 940e cb71 	CALL SUBOPT_0x16B
00c036 934a      	ST   -Y,R20
00c037 89ad      	LDD  R26,Y+21
00c038 89be      	LDD  R27,Y+21+1
00c039 940e a4f0 	CALL _ftoa
00c03b c007      	RJMP _0x2080081
                 _0x2080080:
00c03c 940e cb71 	CALL SUBOPT_0x16B
00c03e 934a      	ST   -Y,R20
00c03f 932a      	ST   -Y,R18
00c040 89ae      	LDD  R26,Y+22
00c041 89bf      	LDD  R27,Y+22+1
00c042 de54      	RCALL __ftoe_G104
                 _0x2080081:
00c043 01fe      	MOVW R30,R28
00c044 967a      	ADIW R30,26
00c045 940e e02c 	CALL SUBOPT_0x42D
00c047 c022      	RJMP _0x2080082
                 _0x2080078:
00c048 37e3      	CPI  R30,LOW(0x73)
00c049 f451      	BRNE _0x2080084
00c04a 940e e02a 	CALL SUBOPT_0x42C
00c04c 940e e023 	CALL SUBOPT_0x42B
00c04e 9614      	ADIW R26,4
00c04f 940e e3cc 	CALL __GETW1P
00c051 940e e02c 	CALL SUBOPT_0x42D
00c053 c00f      	RJMP _0x2080085
                 _0x2080084:
00c054 37e0      	CPI  R30,LOW(0x70)
00c055 f4c9      	BRNE _0x2080087
00c056 940e e02a 	CALL SUBOPT_0x42C
00c058 940e e023 	CALL SUBOPT_0x42B
00c05a 9614      	ADIW R26,4
00c05b 940e e3d0 	CALL __GETD1P
00c05d 940e dbf4 	CALL SUBOPT_0x395
00c05f 940e a828 	CALL _strlenf
00c061 2f1e      	MOV  R17,R30
00c062 6008      	ORI  R16,LOW(8)
                 _0x2080085:
00c063 770f      	ANDI R16,LOW(127)
00c064 3040      	CPI  R20,0
00c065 f011      	BREQ _0x2080089
00c066 1741      	CP   R20,R17
00c067 f008      	BRLO _0x208008A
                 _0x2080089:
00c068 c001      	RJMP _0x2080088
                 _0x208008A:
00c069 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
00c06a e040      	LDI  R20,LOW(0)
00c06b e0e0      	LDI  R30,LOW(0)
00c06c 8fe8      	STD  Y+24,R30
00c06d e030      	LDI  R19,LOW(0)
00c06e c072      	RJMP _0x208008B
                 _0x2080087:
00c06f 36e4      	CPI  R30,LOW(0x64)
00c070 f011      	BREQ _0x208008E
00c071 36e9      	CPI  R30,LOW(0x69)
00c072 f411      	BRNE _0x208008F
                 _0x208008E:
00c073 6004      	ORI  R16,LOW(4)
00c074 c002      	RJMP _0x2080090
                 _0x208008F:
00c075 37e5      	CPI  R30,LOW(0x75)
00c076 f4a1      	BRNE _0x2080091
                 _0x2080090:
00c077 e0ea      	LDI  R30,LOW(10)
00c078 8fe8      	STD  Y+24,R30
00c079 ff01      	SBRS R16,1
00c07a c008      	RJMP _0x2080092
                +
00c07b e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00c07c ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00c07d e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00c07e e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00c07f 940e da88 	CALL SUBOPT_0x369
00c081 e01a      	LDI  R17,LOW(10)
00c082 c023      	RJMP _0x2080093
                 _0x2080092:
                +
00c083 e1e0     +LDI R30 , LOW ( 0x2710 )
00c084 e2f7     +LDI R31 , HIGH ( 0x2710 )
00c085 e060     +LDI R22 , BYTE3 ( 0x2710 )
00c086 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00c087 940e da88 	CALL SUBOPT_0x369
00c089 e015      	LDI  R17,LOW(5)
00c08a c01b      	RJMP _0x2080093
                 _0x2080091:
00c08b 35e8      	CPI  R30,LOW(0x58)
00c08c f411      	BRNE _0x2080095
00c08d 6008      	ORI  R16,LOW(8)
00c08e c004      	RJMP _0x2080096
                 _0x2080095:
00c08f 37e8      	CPI  R30,LOW(0x78)
00c090 f011      	BREQ PC+3
00c091 940c c17b 	JMP _0x20800D4
                 _0x2080096:
00c093 e1e0      	LDI  R30,LOW(16)
00c094 8fe8      	STD  Y+24,R30
00c095 ff01      	SBRS R16,1
00c096 c008      	RJMP _0x2080098
                +
00c097 e0e0     +LDI R30 , LOW ( 0x10000000 )
00c098 e0f0     +LDI R31 , HIGH ( 0x10000000 )
00c099 e060     +LDI R22 , BYTE3 ( 0x10000000 )
00c09a e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00c09b 940e da88 	CALL SUBOPT_0x369
00c09d e018      	LDI  R17,LOW(8)
00c09e c007      	RJMP _0x2080093
                 _0x2080098:
                +
00c09f e0e0     +LDI R30 , LOW ( 0x1000 )
00c0a0 e1f0     +LDI R31 , HIGH ( 0x1000 )
00c0a1 e060     +LDI R22 , BYTE3 ( 0x1000 )
00c0a2 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00c0a3 940e da88 	CALL SUBOPT_0x369
00c0a5 e014      	LDI  R17,LOW(4)
                 _0x2080093:
00c0a6 3040      	CPI  R20,0
00c0a7 f011      	BREQ _0x2080099
00c0a8 770f      	ANDI R16,LOW(127)
00c0a9 c001      	RJMP _0x208009A
                 _0x2080099:
00c0aa e041      	LDI  R20,LOW(1)
                 _0x208009A:
00c0ab ff01      	SBRS R16,1
00c0ac c008      	RJMP _0x208009B
00c0ad 940e e02a 	CALL SUBOPT_0x42C
00c0af 940e e023 	CALL SUBOPT_0x42B
00c0b1 9614      	ADIW R26,4
00c0b2 940e e3d0 	CALL __GETD1P
00c0b4 c013      	RJMP _0x2080139
                 _0x208009B:
00c0b5 ff02      	SBRS R16,2
00c0b6 c00a      	RJMP _0x208009D
00c0b7 940e e02a 	CALL SUBOPT_0x42C
00c0b9 940e e023 	CALL SUBOPT_0x42B
00c0bb 9614      	ADIW R26,4
00c0bc 940e e3cc 	CALL __GETW1P
00c0be 940e e2dd 	CALL __CWD1
00c0c0 c007      	RJMP _0x2080139
                 _0x208009D:
00c0c1 940e e02a 	CALL SUBOPT_0x42C
00c0c3 940e e023 	CALL SUBOPT_0x42B
00c0c5 9614      	ADIW R26,4
00c0c6 940e c33e 	CALL SUBOPT_0x1E
                 _0x2080139:
                +
00c0c8 87ec     +STD Y + 12 , R30
00c0c9 87fd     +STD Y + 12 + 1 , R31
00c0ca 876e     +STD Y + 12 + 2 , R22
00c0cb 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c0cc ff02      	SBRS R16,2
00c0cd c012      	RJMP _0x208009F
00c0ce 85af      	LDD  R26,Y+15
00c0cf 23aa      	TST  R26
00c0d0 f442      	BRPL _0x20800A0
00c0d1 940e c815 	CALL SUBOPT_0xD9
00c0d3 940e e27a 	CALL __ANEGD1
00c0d5 940e c886 	CALL SUBOPT_0xEA
00c0d7 e2ed      	LDI  R30,LOW(45)
00c0d8 8fe9      	STD  Y+25,R30
                 _0x20800A0:
00c0d9 8de9      	LDD  R30,Y+25
00c0da 30e0      	CPI  R30,0
00c0db f019      	BREQ _0x20800A1
00c0dc 5f1f      	SUBI R17,-LOW(1)
00c0dd 5f4f      	SUBI R20,-LOW(1)
00c0de c001      	RJMP _0x20800A2
                 _0x20800A1:
00c0df 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
00c0e0 2f34      	MOV  R19,R20
                 _0x208008B:
00c0e1 fd00      	SBRC R16,0
00c0e2 c014      	RJMP _0x20800A3
                 _0x20800A4:
00c0e3 1715      	CP   R17,R21
00c0e4 f410      	BRSH _0x20800A7
00c0e5 1735      	CP   R19,R21
00c0e6 f008      	BRLO _0x20800A8
                 _0x20800A7:
00c0e7 c00f      	RJMP _0x20800A6
                 _0x20800A8:
00c0e8 ff07      	SBRS R16,7
00c0e9 c008      	RJMP _0x20800A9
00c0ea ff02      	SBRS R16,2
00c0eb c004      	RJMP _0x20800AA
00c0ec 7f0b      	ANDI R16,LOW(251)
00c0ed 8d29      	LDD  R18,Y+25
00c0ee 5011      	SUBI R17,LOW(1)
00c0ef c001      	RJMP _0x20800AB
                 _0x20800AA:
00c0f0 e320      	LDI  R18,LOW(48)
                 _0x20800AB:
00c0f1 c001      	RJMP _0x20800AC
                 _0x20800A9:
00c0f2 e220      	LDI  R18,LOW(32)
                 _0x20800AC:
00c0f3 940e e006 	CALL SUBOPT_0x427
00c0f5 5051      	SUBI R21,LOW(1)
00c0f6 cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
00c0f7 1714      	CP   R17,R20
00c0f8 f490      	BRSH _0x20800AF
00c0f9 6100      	ORI  R16,LOW(16)
00c0fa ff02      	SBRS R16,2
00c0fb c006      	RJMP _0x20800B0
00c0fc 940e e034 	CALL SUBOPT_0x42E
00c0fe f009      	BREQ _0x20800B1
00c0ff 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
00c100 5011      	SUBI R17,LOW(1)
00c101 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
00c102 e3e0      	LDI  R30,LOW(48)
00c103 93ea      	ST   -Y,R30
00c104 940e e01c 	CALL SUBOPT_0x42A
00c106 3050      	CPI  R21,0
00c107 f009      	BREQ _0x20800B2
00c108 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
00c109 5041      	SUBI R20,LOW(1)
00c10a cfec      	RJMP _0x20800AD
                 _0x20800AF:
00c10b 2f31      	MOV  R19,R17
00c10c 8de8      	LDD  R30,Y+24
00c10d 30e0      	CPI  R30,0
00c10e f4c1      	BRNE _0x20800B3
                 _0x20800B4:
00c10f 3030      	CPI  R19,0
00c110 f0a9      	BREQ _0x20800B6
00c111 ff03      	SBRS R16,3
00c112 c007      	RJMP _0x20800B7
00c113 01de      	MOVW R26,R28
00c114 9650      	ADIW R26,16
00c115 940e dcea 	CALL SUBOPT_0x3B1
                +
00c117 bf6b     +OUT RAMPZ , R22
00c118 9126     +ELPM R18 , Z
                 	__GETBRPF 18
00c119 c005      	RJMP _0x20800B8
                 _0x20800B7:
00c11a 89a8      	LDD  R26,Y+16
00c11b 89b9      	LDD  R27,Y+16+1
00c11c 912d      	LD   R18,X+
00c11d 8ba8      	STD  Y+16,R26
00c11e 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
00c11f 940e e006 	CALL SUBOPT_0x427
00c121 3050      	CPI  R21,0
00c122 f009      	BREQ _0x20800B9
00c123 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
00c124 5031      	SUBI R19,LOW(1)
00c125 cfe9      	RJMP _0x20800B4
                 _0x20800B6:
00c126 c04a      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
00c127 940e c827 	CALL SUBOPT_0xDC
00c129 940e c2ba 	CALL SUBOPT_0xB
00c12b 940e e354 	CALL __DIVD21U
00c12d 2f2e      	MOV  R18,R30
00c12e 302a      	CPI  R18,10
00c12f f030      	BRLO _0x20800BE
00c130 ff03      	SBRS R16,3
00c131 c002      	RJMP _0x20800BF
00c132 5c29      	SUBI R18,-LOW(55)
00c133 c001      	RJMP _0x20800C0
                 _0x20800BF:
00c134 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
00c135 c001      	RJMP _0x20800C1
                 _0x20800BE:
00c136 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
00c137 fd04      	SBRC R16,4
00c138 c01a      	RJMP _0x20800C3
00c139 3321      	CPI  R18,49
00c13a f428      	BRSH _0x20800C5
00c13b 940e d119 	CALL SUBOPT_0x233
00c13d 940e ddbd 	CALL SUBOPT_0x3CC
00c13f f409      	BRNE _0x20800C4
                 _0x20800C5:
00c140 c00b      	RJMP _0x20800C7
                 _0x20800C4:
00c141 1743      	CP   R20,R19
00c142 f440      	BRSH _0x208013A
00c143 1753      	CP   R21,R19
00c144 f010      	BRLO _0x20800CA
00c145 ff00      	SBRS R16,0
00c146 c001      	RJMP _0x20800CB
                 _0x20800CA:
00c147 c010      	RJMP _0x20800C9
                 _0x20800CB:
00c148 e220      	LDI  R18,LOW(32)
00c149 ff07      	SBRS R16,7
00c14a c008      	RJMP _0x20800CC
                 _0x208013A:
00c14b e320      	LDI  R18,LOW(48)
                 _0x20800C7:
00c14c 6100      	ORI  R16,LOW(16)
00c14d ff02      	SBRS R16,2
00c14e c004      	RJMP _0x20800CD
00c14f 940e e034 	CALL SUBOPT_0x42E
00c151 f009      	BREQ _0x20800CE
00c152 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
00c153 940e e006 	CALL SUBOPT_0x427
00c155 3050      	CPI  R21,0
00c156 f009      	BREQ _0x20800CF
00c157 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
00c158 5031      	SUBI R19,LOW(1)
00c159 940e c827 	CALL SUBOPT_0xDC
00c15b 940e c2ba 	CALL SUBOPT_0xB
00c15d 940e e39b 	CALL __MODD21U
00c15f 940e c886 	CALL SUBOPT_0xEA
00c161 8de8      	LDD  R30,Y+24
00c162 940e d119 	CALL SUBOPT_0x233
00c164 27ff      	CLR  R31
00c165 2766      	CLR  R22
00c166 2777      	CLR  R23
00c167 940e e354 	CALL __DIVD21U
00c169 940e da88 	CALL SUBOPT_0x369
00c16b 940e c827 	CALL SUBOPT_0xDC
00c16d 940e e459 	CALL __CPD10
00c16f f009      	BREQ _0x20800BD
00c170 cfb6      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
00c171 ff00      	SBRS R16,0
00c172 c008      	RJMP _0x20800D0
                 _0x20800D1:
00c173 3050      	CPI  R21,0
00c174 f031      	BREQ _0x20800D3
00c175 5051      	SUBI R21,LOW(1)
00c176 e2e0      	LDI  R30,LOW(32)
00c177 93ea      	ST   -Y,R30
00c178 940e e01c 	CALL SUBOPT_0x42A
00c17a cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
00c17b e010      	LDI  R17,LOW(0)
                 _0x2080053:
00c17c ce0f      	RJMP _0x208004E
                 _0x2080050:
00c17d 81ae      	LDD  R26,Y+6
00c17e 81bf      	LDD  R27,Y+6+1
00c17f 940e e3cc 	CALL __GETW1P
00c181 940e e47c 	CALL __LOADLOCR6
00c183 96ef      	ADIW R28,63
00c184 96a7      	ADIW R28,39
00c185 9508      	RET
                 _sprintf:
00c186 92ff      	PUSH R15
00c187 2ef8      	MOV  R15,R24
00c188 9726      	SBIW R28,6
00c189 940e e477 	CALL __SAVELOCR4
00c18b 01de      	MOVW R26,R28
00c18c 961e      	ADIW R26,14
00c18d 940e e254 	CALL __ADDW2R15
00c18f 940e e3cc 	CALL __GETW1P
00c191 9730      	SBIW R30,0
00c192 f419      	BRNE _0x20800D5
00c193 efef      	LDI  R30,LOW(65535)
00c194 efff      	LDI  R31,HIGH(65535)
00c195 c023      	RJMP _0x20E0004
                 _0x20800D5:
00c196 01de      	MOVW R26,R28
00c197 9616      	ADIW R26,6
00c198 940e e254 	CALL __ADDW2R15
00c19a 018d      	MOVW R16,R26
00c19b 01de      	MOVW R26,R28
00c19c 961e      	ADIW R26,14
00c19d 940e e254 	CALL __ADDW2R15
00c19f 940e dce1 	CALL SUBOPT_0x3AF
00c1a1 e0e0      	LDI  R30,LOW(0)
00c1a2 87e8      	STD  Y+8,R30
00c1a3 87e9      	STD  Y+8+1,R30
00c1a4 01de      	MOVW R26,R28
00c1a5 961a      	ADIW R26,10
00c1a6 940e e254 	CALL __ADDW2R15
00c1a8 940e e3d0 	CALL __GETD1P
00c1aa 940e e400 	CALL __PUTPARD1
00c1ac 931a      	ST   -Y,R17
00c1ad 930a      	ST   -Y,R16
00c1ae 940e e049 	CALL SUBOPT_0x42F
00c1b0 01de      	MOVW R26,R28
00c1b1 961e      	ADIW R26,14
00c1b2 ddc0      	RCALL __print_G104
00c1b3 019f      	MOVW R18,R30
00c1b4 81ae      	LDD  R26,Y+6
00c1b5 81bf      	LDD  R27,Y+6+1
00c1b6 e0e0      	LDI  R30,LOW(0)
00c1b7 93ec      	ST   X,R30
00c1b8 01f9      	MOVW R30,R18
                 _0x20E0004:
00c1b9 940e e47e 	CALL __LOADLOCR4
00c1bb 962a      	ADIW R28,10
00c1bc 90ff      	POP  R15
00c1bd 9508      	RET
                 _vsprintf:
00c1be 93ba      	ST   -Y,R27
00c1bf 93aa      	ST   -Y,R26
00c1c0 9726      	SBIW R28,6
00c1c1 931a      	ST   -Y,R17
00c1c2 930a      	ST   -Y,R16
00c1c3 85ee      	LDD  R30,Y+14
00c1c4 85ff      	LDD  R31,Y+14+1
00c1c5 9730      	SBIW R30,0
00c1c6 f419      	BRNE _0x20800D8
00c1c7 efef      	LDI  R30,LOW(65535)
00c1c8 efff      	LDI  R31,HIGH(65535)
00c1c9 c016      	RJMP _0x20E0002
                 _0x20800D8:
00c1ca 85ee      	LDD  R30,Y+14
00c1cb 85ff      	LDD  R31,Y+14+1
00c1cc 83ec      	STD  Y+4,R30
00c1cd 83fd      	STD  Y+4+1,R31
00c1ce e0e0      	LDI  R30,LOW(0)
00c1cf 83ee      	STD  Y+6,R30
00c1d0 83ef      	STD  Y+6+1,R30
00c1d1 940e d9f6 	CALL SUBOPT_0x353
00c1d3 940e cd12 	CALL SUBOPT_0x1AF
00c1d5 940e e049 	CALL SUBOPT_0x42F
00c1d7 01de      	MOVW R26,R28
00c1d8 961c      	ADIW R26,12
00c1d9 dd99      	RCALL __print_G104
00c1da 018f      	MOVW R16,R30
00c1db 81ac      	LDD  R26,Y+4
00c1dc 81bd      	LDD  R27,Y+4+1
00c1dd e0e0      	LDI  R30,LOW(0)
00c1de 93ec      	ST   X,R30
00c1df 01f8      	MOVW R30,R16
                 _0x20E0002:
00c1e0 8119      	LDD  R17,Y+1
00c1e1 8108      	LDD  R16,Y+0
                 _0x20E0003:
00c1e2 9660      	ADIW R28,16
00c1e3 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00c1e4 93aa      	ST   -Y,R26
00c1e5 e0e1          ldi  r30,1
00c1e6 91f9          ld   r31,y+
00c1e7 33f0          cpi  r31,'0'
00c1e8 f010          brlo isdigit0
00c1e9 33fa          cpi  r31,'9'+1
00c1ea f008          brlo isdigit1
                 isdigit0:
00c1eb 27ee          clr  r30
                 isdigit1:
00c1ec 9508          ret
                 _isprint:
00c1ed 93aa      	ST   -Y,R26
00c1ee e0e1          ldi  r30,1
00c1ef 91f9          ld   r31,y+
00c1f0 32f0          cpi  r31,32
00c1f1 f010          brlo isprint0
00c1f2 38f0          cpi  r31,128
00c1f3 f008          brlo isprint1
                 isprint0:
00c1f4 27ee          clr  r30
                 isprint1:
00c1f5 9508          ret
                 _isspace:
00c1f6 93aa      	ST   -Y,R26
00c1f7 e0e1          ldi  r30,1
00c1f8 91f9          ld   r31,y+
00c1f9 32f0          cpi  r31,' '
00c1fa f029          breq isspace1
00c1fb 30f9          cpi  r31,9
00c1fc f010          brlo isspace0
00c1fd 30fe          cpi  r31,13+1
00c1fe f008          brlo isspace1
                 isspace0:
00c1ff 27ee          clr  r30
                 isspace1:
00c200 9508          ret
                 _isxdigit:
00c201 93aa      	ST   -Y,R26
00c202 e0e1          ldi  r30,1
00c203 91f9          ld   r31,y+
00c204 53f0          subi r31,0x30
00c205 f040          brcs isxdigit0
00c206 30fa          cpi  r31,10
00c207 f038          brcs isxdigit1
00c208 75ff          andi r31,0x5f
00c209 50f7          subi r31,7
00c20a 30fa          cpi  r31,10
00c20b f010          brcs isxdigit0
00c20c 31f0          cpi  r31,16
00c20d f008          brcs isxdigit1
                 isxdigit0:
00c20e 27ee          clr  r30
                 isxdigit1:
00c20f 9508          ret
                 _tolower:
00c210 93aa      	ST   -Y,R26
00c211 91e9          ld   r30,y+
00c212 34e1          cpi  r30,'A'
00c213 f018          brlo tolower1
00c214 35eb          cpi  r30,'Z'+1
00c215 f408          brcc tolower1
00c216 5ee0          subi r30,-32
                 tolower1:
00c217 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00c218 940e e405 	CALL __PUTPARD2
00c21a 817b         ldd  r23,y+3
00c21b 816a         ldd  r22,y+2
00c21c 81f9         ldd  r31,y+1
00c21d 81e8         ld   r30,y
00c21e fb77         bst  r23,7
00c21f 0f77         lsl  r23
00c220 fd67         sbrc r22,7
00c221 6071         sbr  r23,1
00c222 2f97         mov  r25,r23
00c223 579e         subi r25,0x7e
00c224 f081         breq __ftrunc0
00c225 f078         brcs __ftrunc0
00c226 3198         cpi  r25,24
00c227 f490         brsh __ftrunc1
00c228 27aa         clr  r26
00c229 27bb         clr  r27
00c22a 2788         clr  r24
                 __ftrunc2:
00c22b 9408         sec
00c22c 9587         ror  r24
00c22d 95b7         ror  r27
00c22e 95a7         ror  r26
00c22f 959a         dec  r25
00c230 f7d1         brne __ftrunc2
00c231 23ea         and  r30,r26
00c232 23fb         and  r31,r27
00c233 2368         and  r22,r24
00c234 c005         rjmp __ftrunc1
                 __ftrunc0:
00c235 94e8         clt
00c236 2777         clr  r23
00c237 27ee         clr  r30
00c238 27ff         clr  r31
00c239 2766         clr  r22
                 __ftrunc1:
00c23a 776f         cbr  r22,0x80
00c23b 9576         lsr  r23
00c23c f408         brcc __ftrunc3
00c23d 6860         sbr  r22,0x80
                 __ftrunc3:
00c23e f977         bld  r23,7
00c23f 91a9         ld   r26,y+
00c240 91b9         ld   r27,y+
00c241 9189         ld   r24,y+
00c242 9199         ld   r25,y+
00c243 17ea         cp   r30,r26
00c244 07fb         cpc  r31,r27
00c245 0768         cpc  r22,r24
00c246 0779         cpc  r23,r25
00c247 fb97         bst  r25,7
00c248 9508         ret
                 _floor:
00c249 940e e405 	CALL __PUTPARD2
00c24b 940e c62a 	CALL SUBOPT_0x8C
00c24d 940e c218 	CALL _ftrunc
00c24f 940e c6c6 	CALL SUBOPT_0xA0
00c251 f419          brne __floor1
                 __floor0:
00c252 940e c60b 	CALL SUBOPT_0x87
00c254 c009      	RJMP _0x20E0001
                 __floor1:
00c255 f7e6          brtc __floor0
00c256 940e c60b 	CALL SUBOPT_0x87
                +
00c258 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00c259 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00c25a e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00c25b e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00c25c 940e e14a 	CALL __SUBF12
                 _0x20E0001:
00c25e 9624      	ADIW R28,4
00c25f 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 00
000588 01        	.DB  0x0,0x0,0x0,0x1
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _d_out:
001434           	.BYTE 0x2
                 _adcData:
001436           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
00144a           	.BYTE 0x19
                 _prtc_get_time:
001463           	.BYTE 0x4
                 _prtc_get_date:
001467           	.BYTE 0x4
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000591 02
000592 04
000593 07
000594 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
0014df           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014e0           	.BYTE 0x4
                 _flag_hold_MODE_S0040002000:
0014e4           	.BYTE 0x1
                 _flag_hold_UP_S0040002000:
0014e5           	.BYTE 0x1
                 _flag_hold_DOWN_S0040002000:
0014e6           	.BYTE 0x1
                 _flag_hold_OK_S0040002000:
0014e7           	.BYTE 0x1
                 _adcBatt:
0014e8           	.BYTE 0x4
                 _sess_list:
0014ec           	.BYTE 0x64
                 
                 	.ESEG
                 _epFactor_A:
000595 00
000596 00
000597 00
000598 00        	.DB  0x0,0x0,0x0,0x0
000599 00
00059a 00
00059b 00
00059c 00        	.DB  0x0,0x0,0x0,0x0
00059d 00
00059e 00
00059f 00
0005a0 00        	.DB  0x0,0x0,0x0,0x0
0005a1 00
0005a2 00
0005a3 00
0005a4 00        	.DB  0x0,0x0,0x0,0x0
0005a5 00
0005a6 00
0005a7 00
0005a8 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_B:
0005a9 00
0005aa 00
0005ab 00
0005ac 00        	.DB  0x0,0x0,0x0,0x0
0005ad 00
0005ae 00
0005af 00
0005b0 00        	.DB  0x0,0x0,0x0,0x0
0005b1 00
0005b2 00
0005b3 00
0005b4 00        	.DB  0x0,0x0,0x0,0x0
0005b5 00
0005b6 00
0005b7 00
0005b8 00        	.DB  0x0,0x0,0x0,0x0
0005b9 00
0005ba 00
0005bb 00
0005bc 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_C:
0005bd 00
0005be 00
0005bf 00
0005c0 00        	.DB  0x0,0x0,0x0,0x0
0005c1 00
0005c2 00
0005c3 00
0005c4 00        	.DB  0x0,0x0,0x0,0x0
0005c5 00
0005c6 00
0005c7 00
0005c8 00        	.DB  0x0,0x0,0x0,0x0
0005c9 00
0005ca 00
0005cb 00
0005cc 00        	.DB  0x0,0x0,0x0,0x0
0005cd 00
0005ce 00
0005cf 00
0005d0 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet1:
0005d1 00
0005d2 00
0005d3 00
0005d4 00        	.DB  0x0,0x0,0x0,0x0
0005d5 00        	.DB  0x0
                 _epADCRef1:
0005d6 00
0005d7 00
0005d8 00
0005d9 00        	.DB  0x0,0x0,0x0,0x0
0005da 00
0005db 00
0005dc 00
0005dd 00        	.DB  0x0,0x0,0x0,0x0
0005de 00
0005df 00
0005e0 00
0005e1 00        	.DB  0x0,0x0,0x0,0x0
0005e2 00
0005e3 00
0005e4 00
0005e5 00        	.DB  0x0,0x0,0x0,0x0
0005e6 00
0005e7 00
0005e8 00
0005e9 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef1:
0005ea 00
0005eb 00
0005ec 00
0005ed 00        	.DB  0x0,0x0,0x0,0x0
0005ee 00
0005ef 00
0005f0 00
0005f1 00        	.DB  0x0,0x0,0x0,0x0
0005f2 00
0005f3 00
0005f4 00
0005f5 00        	.DB  0x0,0x0,0x0,0x0
0005f6 00
0005f7 00
0005f8 00
0005f9 00        	.DB  0x0,0x0,0x0,0x0
0005fa 00
0005fb 00
0005fc 00
0005fd 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet2:
0005fe 00
0005ff 00
000600 00
000601 00        	.DB  0x0,0x0,0x0,0x0
000602 00        	.DB  0x0
                 _epADCRef2:
000603 00
000604 00
000605 00
000606 00        	.DB  0x0,0x0,0x0,0x0
000607 00
000608 00
000609 00
00060a 00        	.DB  0x0,0x0,0x0,0x0
00060b 00
00060c 00
00060d 00
00060e 00        	.DB  0x0,0x0,0x0,0x0
00060f 00
000610 00
000611 00
000612 00        	.DB  0x0,0x0,0x0,0x0
000613 00
000614 00
000615 00
000616 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef2:
000617 00
000618 00
000619 00
00061a 00        	.DB  0x0,0x0,0x0,0x0
00061b 00
00061c 00
00061d 00
00061e 00        	.DB  0x0,0x0,0x0,0x0
00061f 00
000620 00
000621 00
000622 00        	.DB  0x0,0x0,0x0,0x0
000623 00
000624 00
000625 00
000626 00        	.DB  0x0,0x0,0x0,0x0
000627 00
000628 00
000629 00
00062a 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet3:
00062b 00
00062c 00
00062d 00
00062e 00        	.DB  0x0,0x0,0x0,0x0
00062f 00        	.DB  0x0
                 _epADCRef3:
000630 00
000631 00
000632 00
000633 00        	.DB  0x0,0x0,0x0,0x0
000634 00
000635 00
000636 00
000637 00        	.DB  0x0,0x0,0x0,0x0
000638 00
000639 00
00063a 00
00063b 00        	.DB  0x0,0x0,0x0,0x0
00063c 00
00063d 00
00063e 00
00063f 00        	.DB  0x0,0x0,0x0,0x0
000640 00
000641 00
000642 00
000643 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef3:
000644 00
000645 00
000646 00
000647 00        	.DB  0x0,0x0,0x0,0x0
000648 00
000649 00
00064a 00
00064b 00        	.DB  0x0,0x0,0x0,0x0
00064c 00
00064d 00
00064e 00
00064f 00        	.DB  0x0,0x0,0x0,0x0
000650 00
000651 00
000652 00
000653 00        	.DB  0x0,0x0,0x0,0x0
000654 00
000655 00
000656 00
000657 00        	.DB  0x0,0x0,0x0,0x0
                 _epCalType:
000658 00
000659 00
00065a 00
00065b 00        	.DB  0x0,0x0,0x0,0x0
00065c 00        	.DB  0x0
                 
                 	.DSEG
                 _iTCVoltData:
001550           	.BYTE 0x14
                 _iTCADCData:
001564           	.BYTE 0x14
                 _t_S00D0002000:
001578           	.BYTE 0x14
                 _lastCheck_S00D0002000:
00158c           	.BYTE 0x5
                 _steadyState_S00D0002000:
001591           	.BYTE 0x5
                 _dataQ:
001596           	.BYTE 0x64
                 _dataQ_len:
0015fa           	.BYTE 0x2
                 _t_S00F0001000:
0015fc           	.BYTE 0x4
                 _t_flag_S00F0001000:
001600           	.BYTE 0x1
                 _lastCheck_S00F0001000:
001601           	.BYTE 0x1
                 _t_S00F0005000:
001602           	.BYTE 0x14
                 _flag_lower_S00F0005000:
001616           	.BYTE 0x5
                 _flag_upper_S00F0005000:
00161b           	.BYTE 0x5
                 _t_S00F0006000:
001620           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
001628           	.BYTE 0x2
                 _steadyState_S00F0006000:
00162a           	.BYTE 0x2
                 _eventQ:
00162c           	.BYTE 0x78
                 _last_wr_eventQ:
0016a4           	.BYTE 0x2
                 _last_rd_eventQ:
0016a6           	.BYTE 0x2
                 _eventQ_len:
0016a8           	.BYTE 0x2
                 _ainAlarm:
0016aa           	.BYTE 0x10
                 _mtncAlarm:
0016ba           	.BYTE 0x1
                 _powerSrcAlarm:
0016bb           	.BYTE 0x1
                 _communicationAlarm:
0016bc           	.BYTE 0x1
                 _gsmAlarm:
0016bd           	.BYTE 0x1
                 _gsmBalanceAlarm:
0016be           	.BYTE 0x1
                 _t_S0110003000:
0016bf           	.BYTE 0x4
                 _t_flag_S0110003000:
0016c3           	.BYTE 0x1
                 _lastCheck_S0110003000:
0016c4           	.BYTE 0x1
                 _t_S0110004000:
0016c5           	.BYTE 0x4
                 _t_flag_S0110004000:
0016c9           	.BYTE 0x1
                 _lastCheck_S0110004000:
0016ca           	.BYTE 0x1
                 _t_S0110005000:
0016cb           	.BYTE 0x4
                 _t_flag_S0110005000:
0016cf           	.BYTE 0x1
                 _t_S0110006000:
0016d0           	.BYTE 0x8
                 _t_flag_S0110006000:
0016d8           	.BYTE 0x2
                 _lastCheck_S0110006000:
0016da           	.BYTE 0x2
                 _t_S0110007000:
0016dc           	.BYTE 0x14
                 _t_flag_S0110007000:
0016f0           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016f5           	.BYTE 0x5
                 _t_S0110008000:
0016fa           	.BYTE 0x14
                 _t_flag_S0110008000:
00170e           	.BYTE 0x5
                 _fat:
001713           	.BYTE 0x232
                 _pfat:
001945           	.BYTE 0x2
                 _root_path:
001947           	.BYTE 0x4
                 _eventLogQueue:
00194b           	.BYTE 0x8C
                 _eventLogQCount:
0019d7           	.BYTE 0x1
                 _dataLogQueue:
0019d8           	.BYTE 0x6E
                 _dataLogQCount:
001a46           	.BYTE 0x1
                 _cursor_S0160000000:
001a47           	.BYTE 0x1
                 _tmpNextPage_S0160000000:
001a48           	.BYTE 0x1
                 _tmpPrevPage_S0160000000:
001a49           	.BYTE 0x1
                 _entPwd_S0160000000:
001a4a           	.BYTE 0x4
                 _newPwd_S0160000000:
001a4e           	.BYTE 0x4
                 _confPwd_S0160000000:
001a52           	.BYTE 0x4
                 _setIp_S0160000000:
001a56           	.BYTE 0xC
                 _setMask_S0160000000:
001a62           	.BYTE 0xC
                 _setGw_S0160000000:
001a6e           	.BYTE 0xC
                 _setServer_S0160000000:
001a7a           	.BYTE 0xC
                 _devEn_S0160000000:
001a86           	.BYTE 0x1
                 _almEn_S0160000000:
001a87           	.BYTE 0x1
                 _prbEn_S0160000000:
001a88           	.BYTE 0x5
                 _mute_S0160000000:
001a8d           	.BYTE 0x1
                 _vRef_S0160000000:
001a8e           	.BYTE 0x3
                 _prb1_S0160000000:
001a91           	.BYTE 0x1
                 _prb2_S0160000000:
001a92           	.BYTE 0x1
                 _calPnt_S0160000000:
001a93           	.BYTE 0x6
                 _n:
001a99           	.BYTE 0x2
                 _a:
001a9b           	.BYTE 0x30
                 _indexWrite:
001acb           	.BYTE 0x2
                 _gItemSize:
001acd           	.BYTE 0x2
                 _smoothBuffer:
001acf           	.BYTE 0x2
                 __seed_G100:
001ad1           	.BYTE 0x4
                 _status_G102:
001ad5           	.BYTE 0x1
                 _timer1_G102:
001ad6           	.BYTE 0x1
                 _timer2_G102:
001ad7           	.BYTE 0x1
                 _card_type_G102:
001ad8           	.BYTE 0x1
                 _pv_S102000B000:
001ad9           	.BYTE 0x1
                 _FatFs_G103:
001ada           	.BYTE 0x2
                 _Fsid_G103:
001adc           	.BYTE 0x2
                 _Drive_G103:
001ade           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
                +
00c260 e020     +LDI R18 , LOW ( 0 )
00c261 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00c262 e040     +LDI R20 , LOW ( 0 )
00c263 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00c264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
00c265 935a      	ST   -Y,R21
00c266 934a      	ST   -Y,R20
                +
00c267 e2a6     +LDI R26 , 38
00c268 9fa4     +MUL R26 , R20
00c269 01f0     +MOVW R30 , R0
00c26a 9fa5     +MUL R26 , R21
00c26b 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
00c26c 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
00c26d 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
00c26e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00c26f 81e0      	LD   R30,Z
00c270 940e e2ec 	CALL __LNEGB1
00c272 2fae      	MOV  R26,R30
00c273 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 286 TIMES, CODE SIZE REDUCTION:1137 WORDS
                 SUBOPT_0x3:
00c274 940e e400 	CALL __PUTPARD1
00c276 e080      	LDI  R24,0
00c277 940e 9ef8 	CALL _printDebug
00c279 9624      	ADIW R28,4
00c27a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00c27b ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00c27c e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00c27d 0fe2      	ADD  R30,R18
00c27e 1ff3      	ADC  R31,R19
00c27f 81e0      	LD   R30,Z
00c280 30e0      	CPI  R30,0
00c281 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
00c282 01f9      	MOVW R30,R18
00c283 01de      	MOVW R26,R28
00c284 59ad      	SUBI R26,LOW(-(99))
00c285 4fbf      	SBCI R27,HIGH(-(99))
00c286 940e e2a7 	CALL __LSLW2
00c288 0fea      	ADD  R30,R26
00c289 1ffb      	ADC  R31,R27
00c28a 93fa      	ST   -Y,R31
00c28b 93ea      	ST   -Y,R30
                +
00c28c e0a5     +LDI R26 , LOW ( 0x5 )
00c28d e0b0     +LDI R27 , HIGH ( 0x5 )
00c28e e080     +LDI R24 , BYTE3 ( 0x5 )
00c28f e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00c290 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00c292 01fe      	MOVW R30,R28
00c293 5ae1      	SUBI R30,LOW(-(95))
00c294 4fff      	SBCI R31,HIGH(-(95))
00c295 93fa      	ST   -Y,R31
00c296 93ea      	ST   -Y,R30
                +
00c297 e0a7     +LDI R26 , LOW ( 0x7 )
00c298 e0b0     +LDI R27 , HIGH ( 0x7 )
00c299 e080     +LDI R24 , BYTE3 ( 0x7 )
00c29a e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00c29b 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00c29d 01fe      	MOVW R30,R28
00c29e 5ae5      	SUBI R30,LOW(-(91))
00c29f 4fff      	SBCI R31,HIGH(-(91))
00c2a0 93fa      	ST   -Y,R31
00c2a1 93ea      	ST   -Y,R30
                +
00c2a2 e3ac     +LDI R26 , LOW ( 0x3C )
00c2a3 e0b0     +LDI R27 , HIGH ( 0x3C )
00c2a4 e080     +LDI R24 , BYTE3 ( 0x3C )
00c2a5 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c2a6 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
00c2a8 01fe      	MOVW R30,R28
00c2a9 5ae9      	SUBI R30,LOW(-(87))
00c2aa 4fff      	SBCI R31,HIGH(-(87))
00c2ab 93fa      	ST   -Y,R31
00c2ac 93ea      	ST   -Y,R30
                +
00c2ad e2ac     +LDI R26 , LOW ( 0x12C )
00c2ae e0b1     +LDI R27 , HIGH ( 0x12C )
00c2af e080     +LDI R24 , BYTE3 ( 0x12C )
00c2b0 e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
00c2b1 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00c2b3 01fe      	MOVW R30,R28
00c2b4 93fa      	ST   -Y,R31
00c2b5 93ea      	ST   -Y,R30
00c2b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00c2b7 e0a7      	LDI  R26,LOW(7)
00c2b8 e0b0      	LDI  R27,0
00c2b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 37 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0xB:
                +
00c2ba 85ac     +LDD R26 , Y + 12
00c2bb 85bd     +LDD R27 , Y + 12 + 1
00c2bc 858e     +LDD R24 , Y + 12 + 2
00c2bd 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00c2be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0xC:
                +
00c2bf 89e8     +LDD R30 , Y + 16
00c2c0 89f9     +LDD R31 , Y + 16 + 1
00c2c1 896a     +LDD R22 , Y + 16 + 2
00c2c2 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00c2c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00c2c4 e1a5      	LDI  R26,LOW(_properties_config)
00c2c5 e1b1      	LDI  R27,HIGH(_properties_config)
00c2c6 940e 496a 	CALL _getPropertiesConfig
00c2c8 e0e0      	LDI  R30,LOW(0)
00c2c9 93e0 10f6 	STS  _is_properties_config_update,R30
00c2cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00c2cc eba6      	LDI  R26,LOW(_operating_config)
00c2cd e1b1      	LDI  R27,HIGH(_operating_config)
00c2ce 940e 49ff 	CALL _getOperatingConfig
00c2d0 e0e0      	LDI  R30,LOW(0)
00c2d1 93e0 10f7 	STS  _is_operating_config_update,R30
00c2d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00c2d4 0fa2      	ADD  R26,R18
00c2d5 1fb3      	ADC  R27,R19
00c2d6 91ec      	LD   R30,X
00c2d7 30e0      	CPI  R30,0
00c2d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
00c2d9 e1ad     +LDI R26 , 29
00c2da 9fa2     +MUL R26 , R18
00c2db 01f0     +MOVW R30 , R0
00c2dc 9fa3     +MUL R26 , R19
00c2dd 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
00c2de 54e2      	SUBI R30,LOW(-_sensor_config)
00c2df 4efe      	SBCI R31,HIGH(-_sensor_config)
00c2e0 01df      	MOVW R26,R30
00c2e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
00c2e2 940e e400 	CALL __PUTPARD1
00c2e4 01f9      	MOVW R30,R18
00c2e5 940e e2dd 	CALL __CWD1
00c2e7 940e e400 	CALL __PUTPARD1
00c2e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 301 TIMES, CODE SIZE REDUCTION:597 WORDS
                 SUBOPT_0x12:
00c2ea e084      	LDI  R24,4
00c2eb 940e 9ef8 	CALL _printDebug
00c2ed 9628      	ADIW R28,8
00c2ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00c2ef 0fa2      	ADD  R26,R18
00c2f0 1fb3      	ADC  R27,R19
00c2f1 e0e0      	LDI  R30,LOW(0)
00c2f2 93ec      	ST   X,R30
00c2f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00c2f4 e3ad      	LDI  R26,LOW(_buzz_config)
00c2f5 e1b3      	LDI  R27,HIGH(_buzz_config)
00c2f6 940e 4ce5 	CALL _getBuzzerConfig
00c2f8 e0e0      	LDI  R30,LOW(0)
00c2f9 93e0 1112 	STS  _is_buzzer_config_update,R30
00c2fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
                +
00c2fc e0a3     +LDI R26 , 3
00c2fd 9fa2     +MUL R26 , R18
00c2fe 01f0     +MOVW R30 , R0
00c2ff 9fa3     +MUL R26 , R19
00c300 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
00c301 5be1      	SUBI R30,LOW(-_din_config)
00c302 4efd      	SBCI R31,HIGH(-_din_config)
00c303 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00c304 58e1      	SUBI R30,LOW(-_dout_config)
00c305 4efd      	SBCI R31,HIGH(-_dout_config)
00c306 01df      	MOVW R26,R30
00c307 940e 4b8b 	CALL _getAuxDoutConfig
00c309 e0ad      	LDI  R26,LOW(_is_dout_config_update)
00c30a e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00c30b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00c30c e6a2      	LDI  R26,LOW(_status_config)
00c30d e1b3      	LDI  R27,HIGH(_status_config)
00c30e 940e 4e0f 	CALL _getStatusReportConfig
00c310 e0e0      	LDI  R30,LOW(0)
00c311 93e0 1113 	STS  _is_status_config_update,R30
00c313 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00c314 e6a5      	LDI  R26,LOW(_env_config)
00c315 e1b3      	LDI  R27,HIGH(_env_config)
00c316 940e 4d7c 	CALL _getEnvAlarmConfig
00c318 e0e0      	LDI  R30,LOW(0)
00c319 93e0 1114 	STS  _is_env_config_update,R30
00c31b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00c31c 933a      	ST   -Y,R19
00c31d 932a      	ST   -Y,R18
                +
00c31e e0a5     +LDI R26 , 5
00c31f 9fa2     +MUL R26 , R18
00c320 01f0     +MOVW R30 , R0
00c321 9fa3     +MUL R26 , R19
00c322 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00c323 5be6      	SUBI R30,LOW(-_sensor)
00c324 4efb      	SBCI R31,HIGH(-_sensor)
00c325 01df      	MOVW R26,R30
00c326 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00c327 01f9      	MOVW R30,R18
00c328 01de      	MOVW R26,R28
00c329 59ad      	SUBI R26,LOW(-(99))
00c32a 4fbf      	SBCI R27,HIGH(-(99))
00c32b 940e e2a7 	CALL __LSLW2
00c32d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 55 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1B:
00c32e 0fae      	ADD  R26,R30
00c32f 1fbf      	ADC  R27,R31
00c330 940e e3d0 	CALL __GETD1P
00c332 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C:
00c333 01df      	MOVW R26,R30
00c334 01cb      	MOVW R24,R22
00c335 940e 4201 	CALL _TIMER_checkTimerExceed
00c337 9730      	SBIW R30,0
00c338 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1D:
00c339 0fea      	ADD  R30,R26
00c33a 1ffb      	ADC  R31,R27
00c33b 93fa      	ST   -Y,R31
00c33c 93ea      	ST   -Y,R30
00c33d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x1E:
00c33e 940e e3cc 	CALL __GETW1P
00c340 2766      	CLR  R22
00c341 2777      	CLR  R23
00c342 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
00c343 01df      	MOVW R26,R30
00c344 01cb      	MOVW R24,R22
00c345 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x20:
00c347 5be6      	SUBI R30,LOW(-_sensor)
00c348 4efb      	SBCI R31,HIGH(-_sensor)
00c349 01df      	MOVW R26,R30
00c34a 940e e3d0 	CALL __GETD1P
00c34c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0x21:
00c34d 940e e400 	CALL __PUTPARD1
00c34f e088      	LDI  R24,8
00c350 940e 9ef8 	CALL _printDebug
00c352 962c      	ADIW R28,12
00c353 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
00c354 940e 78f2 	CALL _checkAlarm
                +
00c356 01de     +MOVW R26 , R28
00c357 58a7     +SUBI R26 , LOW ( - 121 )
00c358 4fbf     +SBCI R27 , HIGH ( - 121 )
00c359 93ed     +ST X + , R30
00c35a 93fc     +ST X , R31
                 	__PUTW1SX 121
00c35b 9730      	SBIW R30,0
00c35c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00c35d e2a6     +LDI R26 , 38
00c35e 9fa4     +MUL R26 , R20
00c35f 01f0     +MOVW R30 , R0
00c360 9fa5     +MUL R26 , R21
00c361 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00c362 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
00c363 01de     +MOVW R26 , R28
00c364 58a7     +SUBI R26 , LOW ( - 121 )
00c365 4fbf     +SBCI R27 , HIGH ( - 121 )
00c366 93ed     +ST X + , R30
00c367 93fc     +ST X , R31
                 	__PUTW1SX 121
00c368 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25:
                +
00c369 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00c36a efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00c36b ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00c36c ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00c36d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
00c36e 93e0 1487 	STS  _muteAlarmExpired,R30
00c370 93f0 1488 	STS  _muteAlarmExpired+1,R31
00c372 9360 1489 	STS  _muteAlarmExpired+2,R22
00c374 9370 148a 	STS  _muteAlarmExpired+3,R23
00c376 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27:
00c377 93fa      	ST   -Y,R31
00c378 93ea      	ST   -Y,R30
                +
00c379 e0aa     +LDI R26 , LOW ( 0xA )
00c37a e0b0     +LDI R27 , HIGH ( 0xA )
00c37b e080     +LDI R24 , BYTE3 ( 0xA )
00c37c e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00c37d 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
00c37f 91a0 146b 	LDS  R26,_sdFreeSpace
00c381 91b0 146c 	LDS  R27,_sdFreeSpace+1
00c383 9180 146d 	LDS  R24,_sdFreeSpace+2
00c385 9190 146e 	LDS  R25,_sdFreeSpace+3
00c387 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x29:
00c388 27ff      	CLR  R31
00c389 2766      	CLR  R22
00c38a 2777      	CLR  R23
00c38b 940e e400 	CALL __PUTPARD1
00c38d cf5c      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
00c38e e7ac      	LDI  R26,LOW(_dinStatus)
00c38f e1b4      	LDI  R27,HIGH(_dinStatus)
00c390 0fa2      	ADD  R26,R18
00c391 1fb3      	ADC  R27,R19
00c392 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B:
00c393 e0f0      	LDI  R31,0
00c394 9730      	SBIW R30,0
00c395 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2C:
                +
00c396 e0a0     +LDI R26 , LOW ( 0x0 )
00c397 e0b0     +LDI R27 , HIGH ( 0x0 )
00c398 e080     +LDI R24 , BYTE3 ( 0x0 )
00c399 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00c39a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
00c39b 91a0 1483 	LDS  R26,_batteryVolt
00c39d 91b0 1484 	LDS  R27,_batteryVolt+1
00c39f 9180 1485 	LDS  R24,_batteryVolt+2
00c3a1 9190 1486 	LDS  R25,_batteryVolt+3
00c3a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 52 TIMES, CODE SIZE REDUCTION:507 WORDS
                 SUBOPT_0x2E:
00c3a4 b1e6      	IN   R30,0x6
00c3a5 7ce0      	ANDI R30,LOW(0xC0)
00c3a6 e0f0      	LDI  R31,0
00c3a7 940e e2b0 	CALL __ASRW2
00c3a9 940e e2ac 	CALL __ASRW4
00c3ab 95e0      	COM  R30
00c3ac 95f0      	COM  R31
00c3ad 70e3      	ANDI R30,LOW(0x3)
00c3ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
00c3af 91e0 0106 	LDS  R30,262
00c3b1 71e0      	ANDI R30,LOW(0x10)
00c3b2 e0f0      	LDI  R31,0
00c3b3 940e e2ac 	CALL __ASRW4
00c3b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
00c3b6 940e e400 	CALL __PUTPARD1
00c3b8 91e0 10f4 	LDS  R30,_hwCalId
00c3ba 91f0 10f5 	LDS  R31,_hwCalId+1
00c3bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 40 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x31:
00c3bd e3a6      	LDI  R26,LOW(_adcData)
00c3be e1b4      	LDI  R27,HIGH(_adcData)
00c3bf 940e e2a7 	CALL __LSLW2
00c3c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x32:
00c3c2 e8a9      	LDI  R26,LOW(_eep_vref_val)
00c3c3 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00c3c4 940e e424 	CALL __EEPROMRDD
00c3c6 01df      	MOVW R26,R30
00c3c7 01cb      	MOVW R24,R22
                +
00c3c8 e0e0     +LDI R30 , LOW ( 0x447FC000 )
00c3c9 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00c3ca e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00c3cb e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00c3cc 940e e1ef 	CALL __DIVF21
00c3ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
                +
00c3cf e0a0     +LDI R26 , LOW ( 0x42C80000 )
00c3d0 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
00c3d1 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
00c3d2 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
00c3d3 940e e1a1 	CALL __MULF12
00c3d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 84 TIMES, CODE SIZE REDUCTION:163 WORDS
                 SUBOPT_0x34:
00c3d6 2766      	CLR  R22
00c3d7 2777      	CLR  R23
00c3d8 940e e400 	CALL __PUTPARD1
00c3da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
00c3db eca8      	LDI  R26,LOW(200)
00c3dc e0b0      	LDI  R27,0
00c3dd 940c e0a1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x36:
00c3df e080      	LDI  R24,0
00c3e0 940e 9ef8 	CALL _printDebug
00c3e2 9624      	ADIW R28,4
00c3e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x37:
00c3e4 940e e475 	CALL __SAVELOCR6
                +
00c3e6 e000     +LDI R16 , LOW ( 0 )
00c3e7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c3e8 ce77      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
                +
00c3e9 e1ad     +LDI R26 , 29
00c3ea 9fa2     +MUL R26 , R18
00c3eb 01f0     +MOVW R30 , R0
00c3ec 9fa3     +MUL R26 , R19
00c3ed 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00c3ee 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00c3ef 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00c3f0 81e0      	LD   R30,Z
00c3f1 30e0      	CPI  R30,0
00c3f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39:
00c3f3 91a0 14e0 	LDS  R26,_ETH_rst_timer_S0000001000
00c3f5 91b0 14e1 	LDS  R27,_ETH_rst_timer_S0000001000+1
00c3f7 9180 14e2 	LDS  R24,_ETH_rst_timer_S0000001000+2
00c3f9 9190 14e3 	LDS  R25,_ETH_rst_timer_S0000001000+3
00c3fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x3A:
                +
00c3fc 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00c3fd efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00c3fe 07be     +CPC R27 , R30
00c3ff efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00c400 078e     +CPC R24 , R30
00c401 efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00c402 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00c403 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00c404 93fa      	ST   -Y,R31
00c405 93ea      	ST   -Y,R30
                +
00c406 e0af     +LDI R26 , LOW ( 0xF )
00c407 e0b0     +LDI R27 , HIGH ( 0xF )
00c408 e080     +LDI R24 , BYTE3 ( 0xF )
00c409 e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00c40a 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C:
00c40c 940e e400 	CALL __PUTPARD1
00c40e 91a0 1377 	LDS  R26,_baseCounter
00c410 91b0 1378 	LDS  R27,_baseCounter+1
00c412 9180 1379 	LDS  R24,_baseCounter+2
00c414 9190 137a 	LDS  R25,_baseCounter+3
00c416 91e0 14e0 	LDS  R30,_ETH_rst_timer_S0000001000
00c418 91f0 14e1 	LDS  R31,_ETH_rst_timer_S0000001000+1
00c41a 9160 14e2 	LDS  R22,_ETH_rst_timer_S0000001000+2
00c41c 9170 14e3 	LDS  R23,_ETH_rst_timer_S0000001000+3
00c41e 940e e262 	CALL __SUBD12
00c420 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D:
00c421 01af      	MOVW R20,R30
                +
00c422 2b04     +OR R16 , R20
00c423 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00c424 2e04      	MOV  R0,R20
00c425 2a05      	OR   R0,R21
00c426 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00c427 940e 458b 	CALL _DS1672_read
                +
00c429 83ef     +STD Y + 7 , R30
00c42a 87f8     +STD Y + 7 + 1 , R31
00c42b 8769     +STD Y + 7 + 2 , R22
00c42c 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00c42d 81ee      	LDD  R30,Y+6
00c42e 30e0      	CPI  R30,0
00c42f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3F:
                +
00c430 81ef     +LDD R30 , Y + 7
00c431 85f8     +LDD R31 , Y + 7 + 1
00c432 8569     +LDD R22 , Y + 7 + 2
00c433 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00c434 940e e400 	CALL __PUTPARD1
00c436 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00c437 93ea      	ST   -Y,R30
00c438 85ab      	LDD  R26,Y+11
00c439 940e 788a 	CALL _addEventQueue
00c43b 01af      	MOVW R20,R30
00c43c 2355      	TST  R21
00c43d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41:
                +
00c43e e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 849 ) )
00c43f e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 849 ) )
00c440 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 849 ) )
00c441 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 849 ) )
                 	__POINTD1FN _0x0,849
00c442 ce31      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
00c443 933a      	ST   -Y,R19
00c444 932a      	ST   -Y,R18
00c445 01de      	MOVW R26,R28
00c446 9618      	ADIW R26,8
00c447 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
00c448 01f9      	MOVW R30,R18
00c449 9631      	ADIW R30,1
00c44a 940e e2dd 	CALL __CWD1
00c44c 940e e400 	CALL __PUTPARD1
00c44e ce9b      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
00c44f 940e e400 	CALL __PUTPARD1
00c451 cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
00c452 01f9      	MOVW R30,R18
00c453 9631      	ADIW R30,1
00c454 940e e2dd 	CALL __CWD1
00c456 940e e400 	CALL __PUTPARD1
00c458 e084      	LDI  R24,4
00c459 940e 8079 	CALL _printOLED
00c45b 9628      	ADIW R28,8
00c45c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x46:
00c45d 940e e475 	CALL __SAVELOCR6
                +
00c45f e000     +LDI R16 , LOW ( 0 )
00c460 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c461 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
00c462 e0f0      	LDI  R31,0
00c463 31e0      	CPI  R30,LOW(0x10)
00c464 e0a0      	LDI  R26,HIGH(0x10)
00c465 07fa      	CPC  R31,R26
00c466 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
00c467 e0ab      	LDI  R26,LOW(11)
00c468 e0b0      	LDI  R27,0
00c469 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x49:
00c46a 940e e400 	CALL __PUTPARD1
00c46c 01fa      	MOVW R30,R20
00c46d 940e e2dd 	CALL __CWD1
00c46f 940e e400 	CALL __PUTPARD1
00c471 ce78      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
00c472 940e a76e 	CALL _free
00c474 efef      	LDI  R30,LOW(65535)
00c475 efff      	LDI  R31,HIGH(65535)
00c476 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
00c477 01fa      	MOVW R30,R20
                +
00c478 5f4f     +SUBI R20 , LOW ( - 1 )
00c479 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c47a 0fe2      	ADD  R30,R18
00c47b 1ff3      	ADC  R31,R19
00c47c 01df      	MOVW R26,R30
00c47d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
00c47e 01fa      	MOVW R30,R20
                +
00c47f 5f4f     +SUBI R20 , LOW ( - 1 )
00c480 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c481 0fe2      	ADD  R30,R18
00c482 1ff3      	ADC  R31,R19
00c483 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x4D:
00c484 93fa      	ST   -Y,R31
00c485 93ea      	ST   -Y,R30
00c486 e0a4      	LDI  R26,LOW(4)
00c487 e0b0      	LDI  R27,0
00c488 940c a790 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4E:
00c48a 940e 458b 	CALL _DS1672_read
                +
00c48c 87e8     +STD Y + 8 , R30
00c48d 87f9     +STD Y + 8 + 1 , R31
00c48e 876a     +STD Y + 8 + 2 , R22
00c48f 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00c490 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x4F:
                +
00c491 85e8     +LDD R30 , Y + 8
00c492 85f9     +LDD R31 , Y + 8 + 1
00c493 856a     +LDD R22 , Y + 8 + 2
00c494 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00c495 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x50:
00c496 940e e400 	CALL __PUTPARD1
                +
00c498 85ee     +LDD R30 , Y + 14
00c499 85ff     +LDD R31 , Y + 14 + 1
00c49a 8968     +LDD R22 , Y + 14 + 2
00c49b 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c49c 940e e400 	CALL __PUTPARD1
00c49e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x51:
                +
00c49f 89ea     +LDD R30 , Y + 18
00c4a0 89fb     +LDD R31 , Y + 18 + 1
00c4a1 896c     +LDD R22 , Y + 18 + 2
00c4a2 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c4a3 940e e400 	CALL __PUTPARD1
00c4a5 e08c      	LDI  R24,12
00c4a6 940e 9ef8 	CALL _printDebug
00c4a8 9660      	ADIW R28,16
00c4a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x52:
                +
00c4aa 85aa     +LDD R26 , Y + 10
00c4ab 85bb     +LDD R27 , Y + 10 + 1
00c4ac 858c     +LDD R24 , Y + 10 + 2
00c4ad 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00c4ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
00c4af dffa      	RCALL SUBOPT_0x52
00c4b0 cf4b      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x54:
00c4b1 93ea      	ST   -Y,R30
                +
00c4b2 85eb     +LDD R30 , Y + 11
00c4b3 85fc     +LDD R31 , Y + 11 + 1
00c4b4 856d     +LDD R22 , Y + 11 + 2
00c4b5 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c4b6 940e e400 	CALL __PUTPARD1
00c4b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
00c4b9 85ad     +LDD R26 , Y + 13
00c4ba 85be     +LDD R27 , Y + 13 + 1
00c4bb 858f     +LDD R24 , Y + 13 + 2
00c4bc 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00c4bd 940c 55d2 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x56:
00c4bf 01fe      	MOVW R30,R28
00c4c0 9636      	ADIW R30,6
00c4c1 93fa      	ST   -Y,R31
00c4c2 93ea      	ST   -Y,R30
00c4c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x57:
00c4c4 940e e400 	CALL __PUTPARD1
                +
00c4c6 85ea     +LDD R30 , Y + 10
00c4c7 85fb     +LDD R31 , Y + 10 + 1
00c4c8 856c     +LDD R22 , Y + 10 + 2
00c4c9 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c4ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x58:
00c4cb 2fe5      	MOV  R30,R21
00c4cc 27ff      	CLR  R31
00c4cd 2766      	CLR  R22
00c4ce 2777      	CLR  R23
00c4cf 940e e400 	CALL __PUTPARD1
00c4d1 2fe4      	MOV  R30,R20
00c4d2 27ff      	CLR  R31
00c4d3 2766      	CLR  R22
00c4d4 2777      	CLR  R23
00c4d5 940e e400 	CALL __PUTPARD1
00c4d7 e08c      	LDI  R24,12
00c4d8 940e 9ef8 	CALL _printDebug
00c4da 9660      	ADIW R28,16
00c4db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x59:
                +
00c4dc 81ae     +LDD R26 , Y + 6
00c4dd 81bf     +LDD R27 , Y + 6 + 1
00c4de 8588     +LDD R24 , Y + 6 + 2
00c4df 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00c4e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5A:
00c4e1 01fe      	MOVW R30,R28
00c4e2 963c      	ADIW R30,12
00c4e3 93fa      	ST   -Y,R31
00c4e4 93ea      	ST   -Y,R30
00c4e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5B:
00c4e6 940e e400 	CALL __PUTPARD1
00c4e8 ddd6      	RCALL SUBOPT_0xC
00c4e9 940e e400 	CALL __PUTPARD1
00c4eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
00c4ec ddcd      	RCALL SUBOPT_0xB
00c4ed cf0e      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
00c4ee 01fe      	MOVW R30,R28
00c4ef 9670      	ADIW R30,16
00c4f0 93fa      	ST   -Y,R31
00c4f1 93ea      	ST   -Y,R30
00c4f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5E:
00c4f3 eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00c4f4 e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00c4f5 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c4f7 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c4f9 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c4fb bf6c     +OUT EIND , R22
00c4fc 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c4fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5F:
00c4fe 940e e400 	CALL __PUTPARD1
00c500 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00c501 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00c502 ced3      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x60:
                +
00c503 85ee     +LDD R30 , Y + 14
00c504 85ff     +LDD R31 , Y + 14 + 1
00c505 8968     +LDD R22 , Y + 14 + 2
00c506 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c507 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
00c508 85ae     +LDD R26 , Y + 14
00c509 85bf     +LDD R27 , Y + 14 + 1
00c50a 8988     +LDD R24 , Y + 14 + 2
00c50b 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00c50c 940c 8309 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
00c50e 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c510 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c512 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c514 bf6c     +OUT EIND , R22
00c515 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c516 01af      	MOVW R20,R30
00c517 2355      	TST  R21
00c518 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x63:
00c519 01fe      	MOVW R30,R28
00c51a 9637      	ADIW R30,7
00c51b 93fa      	ST   -Y,R31
00c51c 93ea      	ST   -Y,R30
00c51d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
00c51e 85eb     +LDD R30 , Y + 11
00c51f 85fc     +LDD R31 , Y + 11 + 1
00c520 856d     +LDD R22 , Y + 11 + 2
00c521 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c522 940e e400 	CALL __PUTPARD1
00c524 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 90 TIMES, CODE SIZE REDUCTION:264 WORDS
                 SUBOPT_0x65:
00c525 27ff      	CLR  R31
00c526 2766      	CLR  R22
00c527 2777      	CLR  R23
00c528 940e e400 	CALL __PUTPARD1
00c52a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x66:
00c52b e08c      	LDI  R24,12
00c52c 940e 9ef8 	CALL _printDebug
00c52e 9660      	ADIW R28,16
00c52f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
                +
00c530 81af     +LDD R26 , Y + 7
00c531 85b8     +LDD R27 , Y + 7 + 1
00c532 8589     +LDD R24 , Y + 7 + 2
00c533 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00c534 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
00c535 01fe      	MOVW R30,R28
00c536 963b      	ADIW R30,11
00c537 93fa      	ST   -Y,R31
00c538 93ea      	ST   -Y,R30
00c539 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
00c53a eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00c53b e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00c53c 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c53e 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c540 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c542 bf6c     +OUT EIND , R22
00c543 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c544 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6A:
00c545 940e e400 	CALL __PUTPARD1
00c547 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00c548 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00c549 ce8c      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
                +
00c54a 85e9     +LDD R30 , Y + 9
00c54b 85fa     +LDD R31 , Y + 9 + 1
00c54c 856b     +LDD R22 , Y + 9 + 2
00c54d 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00c54e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6C:
00c54f 01fe      	MOVW R30,R28
00c550 9672      	ADIW R30,18
00c551 93fa      	ST   -Y,R31
00c552 93ea      	ST   -Y,R30
00c553 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
00c554 df55      	RCALL SUBOPT_0x52
00c555 940e e465 	CALL __CPD02
00c557 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6E:
00c558 e0e0      	LDI  R30,LOW(0)
00c559 93e0 1426 	STS  _logDataWait,R30
                +
00c55b e0e0     +LDI R30 , LOW ( 0x0 )
00c55c e0f0     +LDI R31 , HIGH ( 0x0 )
00c55d e060     +LDI R22 , BYTE3 ( 0x0 )
00c55e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c55f 93e0 1427+STS _logDataWait + ( 1 ) , R30
00c561 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00c563 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00c565 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00c567 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6F:
                +
00c568 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00c56a 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00c56c 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00c56e 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00c570 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x70:
00c571 01de      	MOVW R26,R28
00c572 9652      	ADIW R26,18
                +
00c573 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c575 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c577 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c579 bf6c     +OUT EIND , R22
00c57a 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c57b 018f      	MOVW R16,R30
00c57c 2311      	TST  R17
00c57d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x71:
00c57e e0e0      	LDI  R30,LOW(0)
00c57f 93e0 142b 	STS  _logEventWait,R30
                +
00c581 e0e0     +LDI R30 , LOW ( 0x0 )
00c582 e0f0     +LDI R31 , HIGH ( 0x0 )
00c583 e060     +LDI R22 , BYTE3 ( 0x0 )
00c584 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c585 93e0 142c+STS _logEventWait + ( 1 ) , R30
00c587 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00c589 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00c58b 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00c58d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
00c58e 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00c590 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00c592 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00c594 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00c596 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
00c597 e0a2      	LDI  R26,LOW(2)
00c598 e0b0      	LDI  R27,0
00c599 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00c59a e6a4      	LDI  R26,LOW(100)
00c59b e0b0      	LDI  R27,0
00c59c 940c e0a1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x75:
00c59e e0a1      	LDI  R26,LOW(1)
00c59f e0b0      	LDI  R27,0
00c5a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
00c5a1 e0a3      	LDI  R26,LOW(3)
00c5a2 e0b0      	LDI  R27,0
00c5a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x77:
00c5a4 e0a4      	LDI  R26,LOW(4)
00c5a5 e0b0      	LDI  R27,0
00c5a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:99 WORDS
                 SUBOPT_0x78:
00c5a7 01df      	MOVW R26,R30
00c5a8 940e e3d0 	CALL __GETD1P
00c5aa 940e e400 	CALL __PUTPARD1
00c5ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x79:
00c5ad 93e0 0102 	STS  258,R30
00c5af ce2b      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7A:
00c5b0 e3a2      	LDI  R26,LOW(50)
00c5b1 e0b0      	LDI  R27,0
00c5b2 940c e0a1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7B:
00c5b4 920a      	ST   -Y,R0
00c5b5 921a      	ST   -Y,R1
00c5b6 92fa      	ST   -Y,R15
00c5b7 936a      	ST   -Y,R22
00c5b8 937a      	ST   -Y,R23
00c5b9 938a      	ST   -Y,R24
00c5ba 939a      	ST   -Y,R25
00c5bb 93aa      	ST   -Y,R26
00c5bc 93ba      	ST   -Y,R27
00c5bd 93ea      	ST   -Y,R30
00c5be 93fa      	ST   -Y,R31
00c5bf b7eb      	IN   R30,RAMPZ
00c5c0 93ea      	ST   -Y,R30
00c5c1 b7ec      	IN   R30,EIND
00c5c2 93ea      	ST   -Y,R30
00c5c3 b7ef      	IN   R30,SREG
00c5c4 93ea      	ST   -Y,R30
00c5c5 931a      	ST   -Y,R17
00c5c6 930a      	ST   -Y,R16
00c5c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7C:
00c5c8 91ed      	LD   R30,X+
00c5c9 91fd      	LD   R31,X+
00c5ca 9631      	ADIW R30,1
00c5cb 93fe      	ST   -X,R31
00c5cc 93ee      	ST   -X,R30
00c5cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
00c5ce 91a0 10ee 	LDS  R26,_configLen
00c5d0 91b0 10ef 	LDS  R27,_configLen+1
00c5d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7E:
00c5d3 e0e0      	LDI  R30,LOW(0)
00c5d4 93e0 10ee 	STS  _configLen,R30
00c5d6 93e0 10ef 	STS  _configLen+1,R30
00c5d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x7F:
00c5d9 93ba      	ST   -Y,R27
00c5da 93aa      	ST   -Y,R26
00c5db 940e e477 	CALL __SAVELOCR4
00c5dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x80:
00c5de 85e8      	LDD  R30,Y+8
00c5df 85f9      	LDD  R31,Y+8+1
00c5e0 9631      	ADIW R30,1
00c5e1 87e8      	STD  Y+8,R30
00c5e2 87f9      	STD  Y+8+1,R31
00c5e3 9731      	SBIW R30,1
00c5e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x81:
00c5e5 93ba      	ST   -Y,R27
00c5e6 93aa      	ST   -Y,R26
00c5e7 931a      	ST   -Y,R17
00c5e8 930a      	ST   -Y,R16
00c5e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00c5ea 81ea      	LDD  R30,Y+2
00c5eb 81fb      	LDD  R31,Y+2+1
00c5ec 170e      	CP   R16,R30
00c5ed 071f      	CPC  R17,R31
00c5ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
00c5ef 01f8      	MOVW R30,R16
00c5f0 81ac      	LDD  R26,Y+4
00c5f1 81bd      	LDD  R27,Y+4+1
00c5f2 0fae      	ADD  R26,R30
00c5f3 1fbf      	ADC  R27,R31
00c5f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x84:
00c5f5 81a9      	LDD  R26,Y+1
00c5f6 81ba      	LDD  R27,Y+1+1
00c5f7 27ee      	CLR  R30
00c5f8 0fa1      	ADD  R26,R17
00c5f9 1fbe      	ADC  R27,R30
00c5fa 91ec      	LD   R30,X
00c5fb 30e0      	CPI  R30,0
00c5fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00c5fd 81a9      	LDD  R26,Y+1
00c5fe 81ba      	LDD  R27,Y+1+1
00c5ff 27ee      	CLR  R30
00c600 0fa1      	ADD  R26,R17
00c601 1fbe      	ADC  R27,R30
00c602 91ac      	LD   R26,X
00c603 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
00c604 940e e405 	CALL __PUTPARD2
00c606 940e e3ec 	CALL __GETD1S0
00c608 940e e459 	CALL __CPD10
00c60a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x87:
00c60b 940e e3ec 	CALL __GETD1S0
00c60d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x88:
00c60e 91a0 1377 	LDS  R26,_baseCounter
00c610 91b0 1378 	LDS  R27,_baseCounter+1
00c612 9180 1379 	LDS  R24,_baseCounter+2
00c614 9190 137a 	LDS  R25,_baseCounter+3
00c616 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x89:
                +
00c617 81ec     +LDD R30 , Y + 4
00c618 81fd     +LDD R31 , Y + 4 + 1
00c619 816e     +LDD R22 , Y + 4 + 2
00c61a 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00c61b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8A:
00c61c 940e e258 	CALL __ADDD12
00c61e 940e e3f6 	CALL __PUTD1S0
00c620 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
00c621 91e0 1377 	LDS  R30,_baseCounter
00c623 91f0 1378 	LDS  R31,_baseCounter+1
00c625 9160 1379 	LDS  R22,_baseCounter+2
00c627 9170 137a 	LDS  R23,_baseCounter+3
00c629 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x8C:
00c62a 940e e3f1 	CALL __GETD2S0
00c62c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x8D:
00c62d 940e e400 	CALL __PUTPARD1
                +
00c62f 85ec     +LDD R30 , Y + 12
00c630 85fd     +LDD R31 , Y + 12 + 1
00c631 856e     +LDD R22 , Y + 12 + 2
00c632 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c633 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8E:
                +
00c634 e0e0     +LDI R30 , LOW ( 0x0 )
00c635 e0f0     +LDI R31 , HIGH ( 0x0 )
00c636 e060     +LDI R22 , BYTE3 ( 0x0 )
00c637 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c638 940e e3db 	CALL __PUTDP1
00c63a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x8F:
00c63b 920a      	ST   -Y,R0
00c63c 921a      	ST   -Y,R1
00c63d 92fa      	ST   -Y,R15
00c63e 936a      	ST   -Y,R22
00c63f 937a      	ST   -Y,R23
00c640 938a      	ST   -Y,R24
00c641 939a      	ST   -Y,R25
00c642 93aa      	ST   -Y,R26
00c643 93ba      	ST   -Y,R27
00c644 93ea      	ST   -Y,R30
00c645 93fa      	ST   -Y,R31
00c646 b7eb      	IN   R30,RAMPZ
00c647 93ea      	ST   -Y,R30
00c648 b7ec      	IN   R30,EIND
00c649 93ea      	ST   -Y,R30
00c64a b7ef      	IN   R30,SREG
00c64b 93ea      	ST   -Y,R30
00c64c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x90:
00c64d efee      	LDI  R30,LOW(254)
00c64e 93e0 0085 	STS  133,R30
00c650 e7e9      	LDI  R30,LOW(121)
00c651 93e0 0084 	STS  132,R30
00c653 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
00c654 e8e5      	LDI  R30,LOW(133)
00c655 93e0 0095 	STS  149,R30
00c657 eeed      	LDI  R30,LOW(237)
00c658 93e0 0094 	STS  148,R30
00c65a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x92:
00c65b 940e e3d6 	CALL __GETD1P_INC
                +
00c65d 5fef     +SUBI R30 , LOW ( - 1 )
00c65e 4fff     +SBCI R31 , HIGH ( - 1 )
00c65f 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c660 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c661 940e e3e0 	CALL __PUTDP1_DEC
00c663 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x93:
00c664 e8e5      	LDI  R30,LOW(133)
00c665 93e0 00a5 	STS  165,R30
00c667 eeed      	LDI  R30,LOW(237)
00c668 93e0 00a4 	STS  164,R30
00c66a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x94:
00c66b 93ba      	ST   -Y,R27
00c66c 93aa      	ST   -Y,R26
00c66d 81e8      	LD   R30,Y
00c66e 81f9      	LDD  R31,Y+1
00c66f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x95:
00c670 b1e6      	IN   R30,0x6
00c671 7ce0      	ANDI R30,LOW(0xC0)
00c672 e0f0      	LDI  R31,0
00c673 940e e2b0 	CALL __ASRW2
00c675 940e e2ac 	CALL __ASRW4
00c677 95e0      	COM  R30
00c678 95f0      	COM  R31
00c679 70e3      	ANDI R30,LOW(0x3)
00c67a 70f0      	ANDI R31,HIGH(0x3)
00c67b 9731      	SBIW R30,1
00c67c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x96:
00c67d b1e3      	IN   R30,0x3
00c67e 71e0      	ANDI R30,LOW(0x10)
00c67f e0f0      	LDI  R31,0
00c680 940e e2ac 	CALL __ASRW4
00c682 9730      	SBIW R30,0
00c683 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x97:
00c684 e0a5      	LDI  R26,LOW(5)
00c685 e0b0      	LDI  R27,0
00c686 940c e0a1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x98:
00c688 b1e3      	IN   R30,0x3
00c689 72e0      	ANDI R30,LOW(0x20)
00c68a e0f0      	LDI  R31,0
00c68b 95f5      	ASR  R31
00c68c 95e7      	ROR  R30
00c68d 940e e2ac 	CALL __ASRW4
00c68f 9730      	SBIW R30,0
00c690 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x99:
00c691 b1e3      	IN   R30,0x3
00c692 74e0      	ANDI R30,LOW(0x40)
00c693 e0f0      	LDI  R31,0
00c694 940e e2b0 	CALL __ASRW2
00c696 940e e2ac 	CALL __ASRW4
00c698 9730      	SBIW R30,0
00c699 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
00c69a b1e3      	IN   R30,0x3
00c69b 78e0      	ANDI R30,LOW(0x80)
00c69c e0f0      	LDI  R31,0
00c69d 940e e2ae 	CALL __ASRW3
00c69f 940e e2ac 	CALL __ASRW4
00c6a1 9730      	SBIW R30,0
00c6a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9B:
00c6a3 e0f0      	LDI  R31,0
00c6a4 70f0      	ANDI R31,HIGH(0xFF)
00c6a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9C:
00c6a6 91a0 14e8 	LDS  R26,_adcBatt
00c6a8 91b0 14e9 	LDS  R27,_adcBatt+1
00c6aa 9180 14ea 	LDS  R24,_adcBatt+2
00c6ac 9190 14eb 	LDS  R25,_adcBatt+3
00c6ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x9D:
00c6af 2766      	CLR  R22
00c6b0 2777      	CLR  R23
00c6b1 940e e117 	CALL __CDF1
00c6b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9E:
                +
00c6b4 ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00c6b5 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00c6b6 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00c6b7 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00c6b8 940e e1a1 	CALL __MULF12
00c6ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x9F:
00c6bb 940e e151 	CALL __ADDF12
00c6bd 01df      	MOVW R26,R30
00c6be 01cb      	MOVW R24,R22
                +
00c6bf e0e0     +LDI R30 , LOW ( 0x41200000 )
00c6c0 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c6c1 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c6c2 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c6c3 940e e1ef 	CALL __DIVF21
00c6c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA0:
00c6c6 940e e3f6 	CALL __PUTD1S0
00c6c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA1:
00c6c9 91e0 0108 	LDS  R30,264
00c6cb 7fe1      	ANDI R30,LOW(0xF1)
00c6cc 93e0 0108 	STS  264,R30
00c6ce e0a8      	LDI  R26,LOW(264)
00c6cf e0b1      	LDI  R27,HIGH(264)
00c6d0 2e0a      	MOV  R0,R26
00c6d1 91ac      	LD   R26,X
00c6d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA2:
00c6d3 0fee      	LSL  R30
00c6d4 2bea      	OR   R30,R26
00c6d5 2da0      	MOV  R26,R0
00c6d6 93ec      	ST   X,R30
00c6d7 e1a4      	LDI  R26,LOW(20)
00c6d8 e0b0      	LDI  R27,0
00c6d9 940c e0a1 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA3:
00c6db dfd3      	RCALL SUBOPT_0x9D
00c6dc 940e e3db 	CALL __PUTDP1
00c6de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA4:
00c6df 940e e055 	CALL _i2c_start
00c6e1 eda0      	LDI  R26,LOW(208)
00c6e2 940c e089 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA5:
00c6e4 940e e089 	CALL _i2c_write
00c6e6 940c e064 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA6:
00c6e8 e0aa      	LDI  R26,LOW(10)
00c6e9 e0b0      	LDI  R27,0
00c6ea 940e e0a1 	CALL _delay_ms
00c6ec e0e0      	LDI  R30,LOW(0)
00c6ed e0f0      	LDI  R31,HIGH(0)
00c6ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 32 TIMES, CODE SIZE REDUCTION:59 WORDS
                 SUBOPT_0xA7:
                +
00c6ef 83ec     +STD Y + 4 , R30
00c6f0 83fd     +STD Y + 4 + 1 , R31
00c6f1 836e     +STD Y + 4 + 2 , R22
00c6f2 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00c6f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0xA8:
                +
00c6f4 81ac     +LDD R26 , Y + 4
00c6f5 81bd     +LDD R27 , Y + 4 + 1
00c6f6 818e     +LDD R24 , Y + 4 + 2
00c6f7 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00c6f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA9:
00c6f9 e0e8      	LDI  R30,LOW(8)
00c6fa 940e e28b 	CALL __LSLD12
00c6fc cff2      	RJMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xAA:
00c6fd e0f0      	LDI  R31,0
00c6fe dff5      	RCALL SUBOPT_0xA8
00c6ff 940e e2dd 	CALL __CWD1
00c701 940e e258 	CALL __ADDD12
00c703 dfeb      	RCALL SUBOPT_0xA7
00c704 dfef      	RCALL SUBOPT_0xA8
00c705 cff3      	RJMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xAB:
00c706 2fe1      	MOV  R30,R17
00c707 e0f0      	LDI  R31,0
00c708 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAC:
00c709 940e e2dd 	CALL __CWD1
00c70b 940e e258 	CALL __ADDD12
00c70d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAD:
00c70e dfe0      	RCALL SUBOPT_0xA7
00c70f cf07      	RJMP SUBOPT_0x89
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAE:
                +
00c710 a5ac     +LDD R26 , Y + 44
00c711 a5bd     +LDD R27 , Y + 44 + 1
00c712 a58e     +LDD R24 , Y + 44 + 2
00c713 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
00c714 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAF:
                +
00c715 e3ec     +LDI R30 , LOW ( 0x3C )
00c716 e0f0     +LDI R31 , HIGH ( 0x3C )
00c717 e060     +LDI R22 , BYTE3 ( 0x3C )
00c718 e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00c719 940e e354 	CALL __DIVD21U
00c71b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB0:
                +
00c71c 83ee     +STD Y + 6 , R30
00c71d 83ff     +STD Y + 6 + 1 , R31
00c71e 8768     +STD Y + 6 + 2 , R22
00c71f 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c720 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB1:
                +
00c721 e3ac     +LDI R26 , LOW ( 0x3C )
00c722 e0b0     +LDI R27 , HIGH ( 0x3C )
00c723 e080     +LDI R24 , BYTE3 ( 0x3C )
00c724 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c725 940e e2fe 	CALL __MULD12U
00c727 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0xB2:
                +
00c728 83ea     +STD Y + 2 , R30
00c729 83fb     +STD Y + 2 + 1 , R31
00c72a 836c     +STD Y + 2 + 2 , R22
00c72b 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00c72c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xB3:
                +
00c72d 81ea     +LDD R30 , Y + 2
00c72e 81fb     +LDD R31 , Y + 2 + 1
00c72f 816c     +LDD R22 , Y + 2 + 2
00c730 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00c731 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0xB4:
                +
00c732 81aa     +LDD R26 , Y + 2
00c733 81bb     +LDD R27 , Y + 2 + 1
00c734 818c     +LDD R24 , Y + 2 + 2
00c735 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00c736 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0xB5:
                +
00c737 81ee     +LDD R30 , Y + 6
00c738 81ff     +LDD R31 , Y + 6 + 1
00c739 8568     +LDD R22 , Y + 6 + 2
00c73a 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00c73b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xB6:
                +
00c73c 83ee     +STD Y + 6 , R30
00c73d 83ff     +STD Y + 6 + 1 , R31
00c73e 8768     +STD Y + 6 + 2 , R22
00c73f 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c740 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB7:
00c741 dd9a      	RCALL SUBOPT_0x59
                +
00c742 ebe5     +LDI R30 , LOW ( 0x5B5 )
00c743 e0f5     +LDI R31 , HIGH ( 0x5B5 )
00c744 e060     +LDI R22 , BYTE3 ( 0x5B5 )
00c745 e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00c746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB8:
                +
00c747 8fee     +STD Y + 30 , R30
00c748 8fff     +STD Y + 30 + 1 , R31
00c749 a368     +STD Y + 30 + 2 , R22
00c74a a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00c74b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB9:
                +
00c74c 8daa     +LDD R26 , Y + 26
00c74d 8dbb     +LDD R27 , Y + 26 + 1
00c74e 8d8c     +LDD R24 , Y + 26 + 2
00c74f 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00c750 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBA:
                +
00c751 33ac     +CPI R26 , LOW ( 0x3C )
00c752 e0e0     +LDI R30 , HIGH ( 0x3C )
00c753 07be     +CPC R27 , R30
00c754 e0e0     +LDI R30 , BYTE3 ( 0x3C )
00c755 078e     +CPC R24 , R30
00c756 e0e0     +LDI R30 , BYTE4 ( 0x3C )
00c757 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00c758 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBB:
                +
00c759 8dee     +LDD R30 , Y + 30
00c75a 8dff     +LDD R31 , Y + 30 + 1
00c75b a168     +LDD R22 , Y + 30 + 2
00c75c a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00c75d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xBC:
                +
00c75e 5fef     +SUBI R30 , LOW ( - 1 )
00c75f 4fff     +SBCI R31 , HIGH ( - 1 )
00c760 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c761 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c762 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBD:
                +
00c763 8dae     +LDD R26 , Y + 30
00c764 8dbf     +LDD R27 , Y + 30 + 1
00c765 a188     +LDD R24 , Y + 30 + 2
00c766 a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
00c767 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBE:
                +
00c768 a1ee     +LDD R30 , Y + 38
00c769 a1ff     +LDD R31 , Y + 38 + 1
00c76a a568     +LDD R22 , Y + 38 + 2
00c76b a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00c76c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBF:
                +
00c76d e6ad     +LDI R26 , LOW ( 0x16D )
00c76e e0b1     +LDI R27 , HIGH ( 0x16D )
00c76f e080     +LDI R24 , BYTE3 ( 0x16D )
00c770 e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00c771 940e e2fe 	CALL __MULD12U
00c773 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC0:
00c774 940e e417 	CALL __SWAPD12
00c776 940e e262 	CALL __SUBD12
00c778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC1:
                +
00c779 8bee     +STD Y + 22 , R30
00c77a 8bff     +STD Y + 22 + 1 , R31
00c77b 8f68     +STD Y + 22 + 2 , R22
00c77c 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00c77d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC2:
                +
00c77e 89ee     +LDD R30 , Y + 22
00c77f 89ff     +LDD R31 , Y + 22 + 1
00c780 8d68     +LDD R22 , Y + 22 + 2
00c781 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00c782 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC3:
                +
00c783 a1ea     +LDD R30 , Y + 34
00c784 a1fb     +LDD R31 , Y + 34 + 1
00c785 a16c     +LDD R22 , Y + 34 + 2
00c786 a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00c787 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC4:
                +
00c788 30e1     +CPI R30 , LOW ( 0x1 )
00c789 e0a0     +LDI R26 , HIGH ( 0x1 )
00c78a 07fa     +CPC R31 , R26
00c78b e0a0     +LDI R26 , BYTE3 ( 0x1 )
00c78c 076a     +CPC R22 , R26
00c78d e0a0     +LDI R26 , BYTE4 ( 0x1 )
00c78e 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00c78f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC5:
                +
00c790 30e2     +CPI R30 , LOW ( 0x2 )
00c791 e0a0     +LDI R26 , HIGH ( 0x2 )
00c792 07fa     +CPC R31 , R26
00c793 e0a0     +LDI R26 , BYTE3 ( 0x2 )
00c794 076a     +CPC R22 , R26
00c795 e0a0     +LDI R26 , BYTE4 ( 0x2 )
00c796 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00c797 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC6:
                +
00c798 30e3     +CPI R30 , LOW ( 0x3 )
00c799 e0a0     +LDI R26 , HIGH ( 0x3 )
00c79a 07fa     +CPC R31 , R26
00c79b e0a0     +LDI R26 , BYTE3 ( 0x3 )
00c79c 076a     +CPC R22 , R26
00c79d e0a0     +LDI R26 , BYTE4 ( 0x3 )
00c79e 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00c79f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC7:
                +
00c7a0 30e4     +CPI R30 , LOW ( 0x4 )
00c7a1 e0a0     +LDI R26 , HIGH ( 0x4 )
00c7a2 07fa     +CPC R31 , R26
00c7a3 e0a0     +LDI R26 , BYTE3 ( 0x4 )
00c7a4 076a     +CPC R22 , R26
00c7a5 e0a0     +LDI R26 , BYTE4 ( 0x4 )
00c7a6 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00c7a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC8:
                +
00c7a8 30e5     +CPI R30 , LOW ( 0x5 )
00c7a9 e0a0     +LDI R26 , HIGH ( 0x5 )
00c7aa 07fa     +CPC R31 , R26
00c7ab e0a0     +LDI R26 , BYTE3 ( 0x5 )
00c7ac 076a     +CPC R22 , R26
00c7ad e0a0     +LDI R26 , BYTE4 ( 0x5 )
00c7ae 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00c7af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC9:
                +
00c7b0 30e6     +CPI R30 , LOW ( 0x6 )
00c7b1 e0a0     +LDI R26 , HIGH ( 0x6 )
00c7b2 07fa     +CPC R31 , R26
00c7b3 e0a0     +LDI R26 , BYTE3 ( 0x6 )
00c7b4 076a     +CPC R22 , R26
00c7b5 e0a0     +LDI R26 , BYTE4 ( 0x6 )
00c7b6 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00c7b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCA:
                +
00c7b8 30e7     +CPI R30 , LOW ( 0x7 )
00c7b9 e0a0     +LDI R26 , HIGH ( 0x7 )
00c7ba 07fa     +CPC R31 , R26
00c7bb e0a0     +LDI R26 , BYTE3 ( 0x7 )
00c7bc 076a     +CPC R22 , R26
00c7bd e0a0     +LDI R26 , BYTE4 ( 0x7 )
00c7be 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00c7bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCB:
                +
00c7c0 30e8     +CPI R30 , LOW ( 0x8 )
00c7c1 e0a0     +LDI R26 , HIGH ( 0x8 )
00c7c2 07fa     +CPC R31 , R26
00c7c3 e0a0     +LDI R26 , BYTE3 ( 0x8 )
00c7c4 076a     +CPC R22 , R26
00c7c5 e0a0     +LDI R26 , BYTE4 ( 0x8 )
00c7c6 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00c7c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCC:
                +
00c7c8 30e9     +CPI R30 , LOW ( 0x9 )
00c7c9 e0a0     +LDI R26 , HIGH ( 0x9 )
00c7ca 07fa     +CPC R31 , R26
00c7cb e0a0     +LDI R26 , BYTE3 ( 0x9 )
00c7cc 076a     +CPC R22 , R26
00c7cd e0a0     +LDI R26 , BYTE4 ( 0x9 )
00c7ce 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00c7cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCD:
                +
00c7d0 30ea     +CPI R30 , LOW ( 0xA )
00c7d1 e0a0     +LDI R26 , HIGH ( 0xA )
00c7d2 07fa     +CPC R31 , R26
00c7d3 e0a0     +LDI R26 , BYTE3 ( 0xA )
00c7d4 076a     +CPC R22 , R26
00c7d5 e0a0     +LDI R26 , BYTE4 ( 0xA )
00c7d6 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00c7d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCE:
                +
00c7d8 30eb     +CPI R30 , LOW ( 0xB )
00c7d9 e0a0     +LDI R26 , HIGH ( 0xB )
00c7da 07fa     +CPC R31 , R26
00c7db e0a0     +LDI R26 , BYTE3 ( 0xB )
00c7dc 076a     +CPC R22 , R26
00c7dd e0a0     +LDI R26 , BYTE4 ( 0xB )
00c7de 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00c7df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCF:
                +
00c7e0 30ec     +CPI R30 , LOW ( 0xC )
00c7e1 e0a0     +LDI R26 , HIGH ( 0xC )
00c7e2 07fa     +CPC R31 , R26
00c7e3 e0a0     +LDI R26 , BYTE3 ( 0xC )
00c7e4 076a     +CPC R22 , R26
00c7e5 e0a0     +LDI R26 , BYTE4 ( 0xC )
00c7e6 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00c7e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD0:
                +
00c7e8 30a3     +CPI R26 , LOW ( 0x3 )
00c7e9 e0e0     +LDI R30 , HIGH ( 0x3 )
00c7ea 07be     +CPC R27 , R30
00c7eb e0e0     +LDI R30 , BYTE3 ( 0x3 )
00c7ec 078e     +CPC R24 , R30
00c7ed e0e0     +LDI R30 , BYTE4 ( 0x3 )
00c7ee 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00c7ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD1:
                +
00c7f0 8dea     +LDD R30 , Y + 26
00c7f1 8dfb     +LDD R31 , Y + 26 + 1
00c7f2 8d6c     +LDD R22 , Y + 26 + 2
00c7f3 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00c7f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD2:
                +
00c7f5 89ae     +LDD R26 , Y + 22
00c7f6 89bf     +LDD R27 , Y + 22 + 1
00c7f7 8d88     +LDD R24 , Y + 22 + 2
00c7f8 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00c7f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD3:
                +
00c7fa 5fef     +SUBI R30 , LOW ( - 1 )
00c7fb 4fff     +SBCI R31 , HIGH ( - 1 )
00c7fc 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c7fd 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00c7fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xD4:
                +
00c7ff 89ea     +LDD R30 , Y + 18
00c800 89fb     +LDD R31 , Y + 18 + 1
00c801 896c     +LDD R22 , Y + 18 + 2
00c802 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c803 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD5:
                +
00c804 85ea     +LDD R30 , Y + 10
00c805 85fb     +LDD R31 , Y + 10 + 1
00c806 856c     +LDD R22 , Y + 10 + 2
00c807 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c808 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD6:
00c809 e0e0      	LDI  R30,LOW(0)
00c80a e0f0      	LDI  R31,HIGH(0)
00c80b 8119      	LDD  R17,Y+1
00c80c 8108      	LDD  R16,Y+0
00c80d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD7:
00c80e de1b      	RCALL SUBOPT_0x8C
00c80f ce0c      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xD8:
                +
00c810 85a8     +LDD R26 , Y + 8
00c811 85b9     +LDD R27 , Y + 8 + 1
00c812 858a     +LDD R24 , Y + 8 + 2
00c813 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00c814 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 37 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0xD9:
                +
00c815 85ec     +LDD R30 , Y + 12
00c816 85fd     +LDD R31 , Y + 12 + 1
00c817 856e     +LDD R22 , Y + 12 + 2
00c818 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c819 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDA:
                +
00c81a 50e1     +SUBI R30 , LOW ( 1 )
00c81b 40f0     +SBCI R31 , HIGH ( 1 )
00c81c 4060     +SBCI R22 , BYTE3 ( 1 )
00c81d 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00c81e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDB:
00c81f da9f      	RCALL SUBOPT_0xC
                +
00c820 e0a8     +LDI R26 , LOW ( 0x708 )
00c821 e0b7     +LDI R27 , HIGH ( 0x708 )
00c822 e080     +LDI R24 , BYTE3 ( 0x708 )
00c823 e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00c824 940e e2fe 	CALL __MULD12U
00c826 cfe7      	RJMP SUBOPT_0xD7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xDC:
                +
00c827 89ec     +LDD R30 , Y + 20
00c828 89fd     +LDD R31 , Y + 20 + 1
00c829 896e     +LDD R22 , Y + 20 + 2
00c82a 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00c82b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDD:
                +
00c82c 8de8     +LDD R30 , Y + 24
00c82d 8df9     +LDD R31 , Y + 24 + 1
00c82e 8d6a     +LDD R22 , Y + 24 + 2
00c82f 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00c830 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDE:
00c831 dfe3      	RCALL SUBOPT_0xD9
00c832 dfdd      	RCALL SUBOPT_0xD8
00c833 940e e46b 	CALL __CPD12
00c835 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDF:
00c836 da83      	RCALL SUBOPT_0xB
00c837 dc59      	RCALL SUBOPT_0x4F
00c838 940e e262 	CALL __SUBD12
00c83a ceb4      	RJMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE0:
00c83b dc55      	RCALL SUBOPT_0x4F
00c83c da7d      	RCALL SUBOPT_0xB
00c83d 940e e46b 	CALL __CPD12
00c83f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE1:
00c840 dfcf      	RCALL SUBOPT_0xD8
00c841 dfd3      	RCALL SUBOPT_0xD9
00c842 940e e262 	CALL __SUBD12
00c844 ceaa      	RJMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE2:
00c845 deae      	RCALL SUBOPT_0xA8
                +
00c846 30aa     +CPI R26 , LOW ( 0xA )
00c847 e0e0     +LDI R30 , HIGH ( 0xA )
00c848 07be     +CPC R27 , R30
00c849 e0e0     +LDI R30 , BYTE3 ( 0xA )
00c84a 078e     +CPC R24 , R30
00c84b e0e0     +LDI R30 , BYTE4 ( 0xA )
00c84c 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00c84d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE3:
                +
00c84e e1e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00c84f e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00c850 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00c851 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00c852 cdda      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE4:
00c853 940e e400 	CALL __PUTPARD1
00c855 dfd1      	RCALL SUBOPT_0xDC
00c856 cc8f      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE5:
00c857 85ec      	LDD  R30,Y+12
00c858 2f1e      	MOV  R17,R30
00c859 da60      	RCALL SUBOPT_0xB
00c85a e0e8      	LDI  R30,LOW(8)
00c85b 940e e297 	CALL __LSRD12
00c85d 2f0e      	MOV  R16,R30
00c85e dfb6      	RCALL SUBOPT_0xD9
00c85f 940e e2cd 	CALL __LSRD16
00c861 2f3e      	MOV  R19,R30
00c862 da57      	RCALL SUBOPT_0xB
00c863 e1e8      	LDI  R30,LOW(24)
00c864 940e e297 	CALL __LSRD12
00c866 2f2e      	MOV  R18,R30
00c867 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE6:
00c868 e0a0      	LDI  R26,LOW(0)
00c869 940e e089 	CALL _i2c_write
00c86b 2fa1      	MOV  R26,R17
00c86c 940e e089 	CALL _i2c_write
00c86e 2fa0      	MOV  R26,R16
00c86f 940e e089 	CALL _i2c_write
00c871 2fa3      	MOV  R26,R19
00c872 940e e089 	CALL _i2c_write
00c874 2fa2      	MOV  R26,R18
00c875 ce6e      	RJMP SUBOPT_0xA5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE7:
00c876 93ba      	ST   -Y,R27
00c877 93aa      	ST   -Y,R26
00c878 972c      	SBIW R28,12
00c879 940e e477 	CALL __SAVELOCR4
00c87b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xE8:
00c87c 940e e400 	CALL __PUTPARD1
00c87e 89ec      	LDD  R30,Y+20
00c87f 89fd      	LDD  R31,Y+20+1
00c880 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0xE9:
00c881 940e e2dd 	CALL __CWD1
00c883 940e e400 	CALL __PUTPARD1
00c885 ca64      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0xEA:
                +
00c886 87ec     +STD Y + 12 , R30
00c887 87fd     +STD Y + 12 + 1 , R31
00c888 876e     +STD Y + 12 + 2 , R22
00c889 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c88a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEB:
00c88b e3ac      	LDI  R26,LOW(60)
00c88c e0b0      	LDI  R27,HIGH(60)
00c88d 940e e324 	CALL __MULW12
00c88f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xEC:
00c890 dff5      	RCALL SUBOPT_0xEA
00c891 cf83      	RJMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xED:
00c892 93e0 1430 	STS  _raw_rtc,R30
00c894 93f0 1431 	STS  _raw_rtc+1,R31
00c896 9360 1432 	STS  _raw_rtc+2,R22
00c898 9370 1433 	STS  _raw_rtc+3,R23
00c89a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEE:
00c89b 93ba      	ST   -Y,R27
00c89c 93aa      	ST   -Y,R26
00c89d 9724      	SBIW R28,4
00c89e 931a      	ST   -Y,R17
00c89f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEF:
00c8a0 de87      	RCALL SUBOPT_0xB2
00c8a1 ce90      	RJMP SUBOPT_0xB4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xF0:
00c8a2 de8a      	RCALL SUBOPT_0xB3
00c8a3 940e e400 	CALL __PUTPARD1
00c8a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF1:
00c8a6 940e e400 	CALL __PUTPARD1
00c8a8 8dec      	LDD  R30,Y+28
00c8a9 8dfd      	LDD  R31,Y+28+1
00c8aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF2:
00c8ab df80      	RCALL SUBOPT_0xDD
00c8ac 940e e400 	CALL __PUTPARD1
00c8ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF3:
                +
00c8af a1e8     +LDD R30 , Y + 32
00c8b0 a1f9     +LDD R31 , Y + 32 + 1
00c8b1 a16a     +LDD R22 , Y + 32 + 2
00c8b2 a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
00c8b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF4:
00c8b4 940e e400 	CALL __PUTPARD1
                +
00c8b6 a5e8     +LDD R30 , Y + 40
00c8b7 a5f9     +LDD R31 , Y + 40 + 1
00c8b8 a56a     +LDD R22 , Y + 40 + 2
00c8b9 a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00c8ba 940e e400 	CALL __PUTPARD1
00c8bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF5:
                +
00c8bd a9e8     +LDD R30 , Y + 48
00c8be a9f9     +LDD R31 , Y + 48 + 1
00c8bf a96a     +LDD R22 , Y + 48 + 2
00c8c0 a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
00c8c1 940e e400 	CALL __PUTPARD1
00c8c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF6:
00c8c4 e0a0      	LDI  R26,LOW(0)
00c8c5 e0b0      	LDI  R27,0
00c8c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF7:
00c8c7 93fa      	ST   -Y,R31
00c8c8 93ea      	ST   -Y,R30
00c8c9 e0e0      	LDI  R30,LOW(0)
00c8ca 93ea      	ST   -Y,R30
00c8cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF8:
00c8cc eaa1      	LDI  R26,LOW(161)
00c8cd e0b0      	LDI  R27,0
00c8ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF9:
00c8cf 0fa0      	ADD  R26,R16
00c8d0 1fb1      	ADC  R27,R17
00c8d1 940e e42c 	CALL __EEPROMRDB
00c8d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xFA:
00c8d4 0fe0      	ADD  R30,R16
00c8d5 1ff1      	ADC  R31,R17
00c8d6 01df      	MOVW R26,R30
00c8d7 940e e42c 	CALL __EEPROMRDB
00c8d9 01d0      	MOVW R26,R0
00c8da 93ec      	ST   X,R30
00c8db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFB:
00c8dc 81ea      	LDD  R30,Y+2
00c8dd 81fb      	LDD  R31,Y+2+1
00c8de 5be0      	SUBI R30,LOW(-80)
00c8df 4fff      	SBCI R31,HIGH(-80)
00c8e0 0fe0      	ADD  R30,R16
00c8e1 1ff1      	ADC  R31,R17
00c8e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFC:
00c8e3 81ea      	LDD  R30,Y+2
00c8e4 81fb      	LDD  R31,Y+2+1
00c8e5 59ec      	SUBI R30,LOW(-100)
00c8e6 4fff      	SBCI R31,HIGH(-100)
00c8e7 0fe0      	ADD  R30,R16
00c8e8 1ff1      	ADC  R31,R17
00c8e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFD:
00c8ea 81ea      	LDD  R30,Y+2
00c8eb 81fb      	LDD  R31,Y+2+1
00c8ec 57e4      	SUBI R30,LOW(-140)
00c8ed 4fff      	SBCI R31,HIGH(-140)
00c8ee 0fe0      	ADD  R30,R16
00c8ef 1ff1      	ADC  R31,R17
00c8f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFE:
00c8f1 93ec      	ST   X,R30
00c8f2 81aa      	LDD  R26,Y+2
00c8f3 81bb      	LDD  R27,Y+2+1
00c8f4 9611      	ADIW R26,1
00c8f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFF:
00c8f6 93ec      	ST   X,R30
00c8f7 81aa      	LDD  R26,Y+2
00c8f8 81bb      	LDD  R27,Y+2+1
00c8f9 9612      	ADIW R26,2
00c8fa e0e0      	LDI  R30,LOW(0)
00c8fb 93ec      	ST   X,R30
                +
00c8fc e000     +LDI R16 , LOW ( 0 )
00c8fd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c8fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x100:
00c8ff 81ea      	LDD  R30,Y+2
00c900 81fb      	LDD  R31,Y+2+1
00c901 9633      	ADIW R30,3
00c902 0fe0      	ADD  R30,R16
00c903 1ff1      	ADC  R31,R17
00c904 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x101:
00c905 940e e42c 	CALL __EEPROMRDB
00c907 81aa      	LDD  R26,Y+2
00c908 81bb      	LDD  R27,Y+2+1
00c909 93ec      	ST   X,R30
00c90a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x102:
00c90b 940e e42c 	CALL __EEPROMRDB
                +
00c90d 81aa     +LDD R26 , Y + 2
00c90e 81bb     +LDD R27 , Y + 2 + 1
00c90f 9611     +ADIW R26 , 1
00c910 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00c911 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x103:
00c912 940e e42c 	CALL __EEPROMRDB
                +
00c914 81aa     +LDD R26 , Y + 2
00c915 81bb     +LDD R27 , Y + 2 + 1
00c916 9612     +ADIW R26 , 2
00c917 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00c918 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x104:
00c919 940e e400 	CALL __PUTPARD1
00c91b 81ae      	LDD  R26,Y+6
00c91c 81bf      	LDD  R27,Y+6+1
00c91d 91ec      	LD   R30,X
00c91e ca69      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x105:
00c91f 940e e400 	CALL __PUTPARD1
00c921 81ee      	LDD  R30,Y+6
00c922 81ff      	LDD  R31,Y+6+1
00c923 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x106:
                +
00c924 e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c925 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c926 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c927 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c928 cff6      	RJMP SUBOPT_0x105
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x107:
00c929 9633      	ADIW R30,3
00c92a 0fe0      	ADD  R30,R16
00c92b 1ff1      	ADC  R31,R17
00c92c 81e0      	LD   R30,Z
00c92d ca5a      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x108:
                +
00c92e e4ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00c92f e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00c930 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00c931 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00c932 c941      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x109:
00c933 93ba      	ST   -Y,R27
00c934 93aa      	ST   -Y,R26
00c935 81ab      	LDD  R26,Y+3
00c936 23aa      	TST  R26
00c937 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x10A:
00c938 93ed      	ST   X+,R30
00c939 93fc      	ST   X,R31
00c93a 81a8      	LD   R26,Y
00c93b 81b9      	LDD  R27,Y+1
00c93c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10B:
00c93d e0e0      	LDI  R30,LOW(0)
00c93e 93ec      	ST   X,R30
00c93f 81a8      	LD   R26,Y
00c940 81b9      	LDD  R27,Y+1
00c941 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x10C:
                +
00c942 e0e0     +LDI R30 , LOW ( 0x41200000 )
00c943 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c944 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c945 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c946 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x10D:
00c947 81aa      	LDD  R26,Y+2
00c948 81bb      	LDD  R27,Y+2+1
00c949 e1ed      	LDI  R30,LOW(29)
00c94a 940e e31e 	CALL __MULB1W2U
00c94c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10E:
                +
00c94d 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00c94e 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00c94f 01df      	MOVW R26,R30
00c950 940e e424 	CALL __EEPROMRDD
00c952 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10F:
                +
00c953 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00c954 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00c955 01df      	MOVW R26,R30
00c956 940e e428 	CALL __EEPROMRDW
00c958 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x110:
                +
00c959 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00c95a 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00c95b 01df      	MOVW R26,R30
00c95c 940e e424 	CALL __EEPROMRDD
00c95e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x111:
                +
00c95f 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00c960 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00c961 01df      	MOVW R26,R30
00c962 940e e424 	CALL __EEPROMRDD
00c964 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x112:
                +
00c965 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00c966 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00c967 01df      	MOVW R26,R30
00c968 940e e428 	CALL __EEPROMRDW
00c96a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x113:
                +
00c96b 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00c96c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00c96d 01df      	MOVW R26,R30
00c96e 940e e424 	CALL __EEPROMRDD
00c970 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x114:
00c971 e0e0      	LDI  R30,LOW(0)
00c972 e0f0      	LDI  R31,HIGH(0)
00c973 93ed      	ST   X+,R30
00c974 93fc      	ST   X,R31
00c975 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x115:
00c976 81aa      	LDD  R26,Y+2
00c977 81bb      	LDD  R27,Y+2+1
00c978 e0e3      	LDI  R30,LOW(3)
00c979 940e e31e 	CALL __MULB1W2U
00c97b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x116:
00c97c 01df      	MOVW R26,R30
00c97d 940e e42c 	CALL __EEPROMRDB
00c97f 81a8      	LD   R26,Y
00c980 81b9      	LDD  R27,Y+1
00c981 93ec      	ST   X,R30
00c982 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x117:
00c983 940e e428 	CALL __EEPROMRDW
                +
00c985 81a8     +LDD R26 , Y + 0
00c986 81b9     +LDD R27 , Y + 0 + 1
00c987 9611     +ADIW R26 , 1
00c988 93ed     +ST X + , R30
00c989 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00c98a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x118:
00c98b 940e e400 	CALL __PUTPARD1
00c98d 85e8      	LDD  R30,Y+8
00c98e 85f9      	LDD  R31,Y+8+1
00c98f cef1      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x119:
00c990 81ac      	LDD  R26,Y+4
00c991 81bd      	LDD  R27,Y+4+1
00c992 e2e6      	LDI  R30,LOW(38)
00c993 940e e31e 	CALL __MULB1W2U
00c995 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x11A:
00c996 940e e400 	CALL __PUTPARD1
00c998 85a8      	LDD  R26,Y+8
00c999 85b9      	LDD  R27,Y+8+1
00c99a e2e6      	LDI  R30,LOW(38)
00c99b 940e e31e 	CALL __MULB1W2U
00c99d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11B:
00c99e 59e6      	SUBI R30,LOW(-_config_dout)
00c99f 4ffe      	SBCI R31,HIGH(-_config_dout)
00c9a0 01df      	MOVW R26,R30
00c9a1 940e e42c 	CALL __EEPROMRDB
00c9a3 c9e4      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11C:
                +
00c9a4 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00c9a5 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00c9a6 01df      	MOVW R26,R30
00c9a7 940e e42c 	CALL __EEPROMRDB
00c9a9 c9de      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11D:
                +
00c9aa 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00c9ab 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00c9ac 01df      	MOVW R26,R30
00c9ad 940e e42c 	CALL __EEPROMRDB
00c9af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x11E:
00c9b0 01d8      	MOVW R26,R16
00c9b1 e0f0      	LDI  R31,0
00c9b2 17ae      	CP   R26,R30
00c9b3 07bf      	CPC  R27,R31
00c9b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11F:
                +
00c9b5 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00c9b6 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00c9b7 0fe0      	ADD  R30,R16
00c9b8 1ff1      	ADC  R31,R17
00c9b9 01df      	MOVW R26,R30
00c9ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x120:
00c9bb 81aa      	LDD  R26,Y+2
00c9bc 81bb      	LDD  R27,Y+2+1
00c9bd e0e5      	LDI  R30,LOW(5)
00c9be 940e e31e 	CALL __MULB1W2U
00c9c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x121:
00c9c1 81ea      	LDD  R30,Y+2
00c9c2 81fb      	LDD  R31,Y+2+1
00c9c3 9636      	ADIW R30,6
00c9c4 0fe0      	ADD  R30,R16
00c9c5 1ff1      	ADC  R31,R17
00c9c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x122:
00c9c7 81ac      	LDD  R26,Y+4
00c9c8 81bd      	LDD  R27,Y+4+1
00c9c9 e2e9      	LDI  R30,LOW(41)
00c9ca 940e e31e 	CALL __MULB1W2U
00c9cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x123:
                +
00c9cd 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00c9ce 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00c9cf 01df      	MOVW R26,R30
00c9d0 940e e42c 	CALL __EEPROMRDB
00c9d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x124:
                +
00c9d3 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00c9d4 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00c9d5 0fe0      	ADD  R30,R16
00c9d6 1ff1      	ADC  R31,R17
00c9d7 01df      	MOVW R26,R30
00c9d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x125:
00c9d9 81ee      	LDD  R30,Y+6
00c9da 81ff      	LDD  R31,Y+6+1
00c9db 9632      	ADIW R30,2
00c9dc 0fe0      	ADD  R30,R16
00c9dd 1ff1      	ADC  R31,R17
00c9de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x126:
00c9df 01de      	MOVW R26,R28
00c9e0 9612      	ADIW R26,2
00c9e1 0fa0      	ADD  R26,R16
00c9e2 1fb1      	ADC  R27,R17
00c9e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x127:
                +
00c9e4 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00c9e5 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00c9e6 940e e42c 	CALL __EEPROMRDB
00c9e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x128:
00c9e9 940e e400 	CALL __PUTPARD1
00c9eb 85aa      	LDD  R26,Y+10
00c9ec 85bb      	LDD  R27,Y+10+1
00c9ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x129:
00c9ee 940e e400 	CALL __PUTPARD1
00c9f0 85ea      	LDD  R30,Y+10
00c9f1 85fb      	LDD  R31,Y+10+1
00c9f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12A:
                +
00c9f3 e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c9f4 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c9f5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c9f6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c9f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12B:
00c9f8 9632      	ADIW R30,2
00c9f9 0fe0      	ADD  R30,R16
00c9fa 1ff1      	ADC  R31,R17
00c9fb 81e0      	LD   R30,Z
00c9fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12C:
00c9fd 940e e400 	CALL __PUTPARD1
00c9ff 81ac      	LDD  R26,Y+4
00ca00 81bd      	LDD  R27,Y+4+1
00ca01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12D:
00ca02 940e e3d0 	CALL __GETD1P
00ca04 940e e400 	CALL __PUTPARD1
00ca06 c8e3      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12E:
00ca07 940e e3cc 	CALL __GETW1P
00ca09 ce77      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12F:
00ca0a 940e e400 	CALL __PUTPARD1
00ca0c 81ec      	LDD  R30,Y+4
00ca0d 81fd      	LDD  R31,Y+4+1
00ca0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x130:
                +
00ca0f 81a6     +LDD R26 , Z + 6
00ca10 81b7     +LDD R27 , Z + 6 + 1
00ca11 8580     +LDD R24 , Z + 6 + 2
00ca12 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00ca13 940e e405 	CALL __PUTPARD2
00ca15 c8d4      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x131:
                +
00ca16 85a2     +LDD R26 , Z + 10
00ca17 85b3     +LDD R27 , Z + 10 + 1
00ca18 8584     +LDD R24 , Z + 10 + 2
00ca19 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00ca1a 940e e405 	CALL __PUTPARD2
00ca1c c8cd      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x132:
00ca1d 0fae      	ADD  R26,R30
00ca1e 1fbf      	ADC  R27,R31
00ca1f 91ec      	LD   R30,X
00ca20 01d0      	MOVW R26,R0
00ca21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x133:
00ca22 91ec      	LD   R30,X
00ca23 01d0      	MOVW R26,R0
00ca24 940e e448 	CALL __EEPROMWRB
00ca26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x134:
00ca27 e0e1      	LDI  R30,LOW(1)
00ca28 940e e448 	CALL __EEPROMWRB
00ca2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x135:
00ca2b 940e e42c 	CALL __EEPROMRDB
00ca2d c95a      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x136:
                +
00ca2e e2e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00ca2f e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00ca30 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00ca31 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00ca32 940e e400 	CALL __PUTPARD1
00ca34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x137:
00ca35 81a8      	LD   R26,Y
00ca36 81b9      	LDD  R27,Y+1
00ca37 940e e3cc 	CALL __GETW1P
00ca39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x138:
00ca3a 01d0      	MOVW R26,R0
00ca3b 940e e440 	CALL __EEPROMWRW
00ca3d cf09      	RJMP SUBOPT_0x10D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x139:
00ca3e 940e e3cc 	CALL __GETW1P
00ca40 cff9      	RJMP SUBOPT_0x138
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13A:
00ca41 940e e448 	CALL __EEPROMWRB
00ca43 cf03      	RJMP SUBOPT_0x10D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13B:
00ca44 940e e3d0 	CALL __GETD1P
00ca46 01d0      	MOVW R26,R0
00ca47 940e e438 	CALL __EEPROMWRD
00ca49 cefd      	RJMP SUBOPT_0x10D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13C:
00ca4a 940e e3d0 	CALL __GETD1P
00ca4c 01d0      	MOVW R26,R0
00ca4d 940e e438 	CALL __EEPROMWRD
00ca4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x13D:
00ca50 940e e400 	CALL __PUTPARD1
00ca52 81ae      	LDD  R26,Y+6
00ca53 81bf      	LDD  R27,Y+6+1
00ca54 e1ed      	LDI  R30,LOW(29)
00ca55 940e e31e 	CALL __MULB1W2U
00ca57 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13E:
00ca58 01df      	MOVW R26,R30
00ca59 940e e428 	CALL __EEPROMRDW
00ca5b c97a      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x13F:
00ca5c 2766      	CLR  R22
00ca5d 2777      	CLR  R23
00ca5e c8ee      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x140:
00ca5f 010f      	MOVW R0,R30
00ca60 81a8      	LD   R26,Y
00ca61 81b9      	LDD  R27,Y+1
00ca62 9611      	ADIW R26,1
00ca63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x141:
00ca64 940e e3cc 	CALL __GETW1P
00ca66 01d0      	MOVW R26,R0
00ca67 940e e440 	CALL __EEPROMWRW
00ca69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x142:
                +
00ca6a e3e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00ca6b e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00ca6c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00ca6d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00ca6e ceb0      	RJMP SUBOPT_0x105
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x143:
                +
00ca6f e5e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00ca70 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00ca71 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00ca72 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00ca73 940e e400 	CALL __PUTPARD1
00ca75 81ae      	LDD  R26,Y+6
00ca76 81bf      	LDD  R27,Y+6+1
00ca77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x144:
00ca78 940e e400 	CALL __PUTPARD1
00ca7a 81ae      	LDD  R26,Y+6
00ca7b 81bf      	LDD  R27,Y+6+1
00ca7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x145:
00ca7d 940e e448 	CALL __EEPROMWRB
00ca7f cf10      	RJMP SUBOPT_0x119
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x146:
00ca80 940e e448 	CALL __EEPROMWRB
                +
00ca82 eeea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00ca83 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00ca84 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00ca85 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00ca86 cf04      	RJMP SUBOPT_0x118
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x147:
                +
00ca87 e4e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00ca88 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00ca89 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00ca8a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00ca8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x148:
                +
00ca8c e6e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00ca8d e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00ca8e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00ca8f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00ca90 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x149:
00ca92 01df      	MOVW R26,R30
00ca93 940e e424 	CALL __EEPROMRDD
00ca95 940e e400 	CALL __PUTPARD1
00ca97 940c c2ea 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x14A:
00ca99 940e e400 	CALL __PUTPARD1
00ca9b 85a8      	LDD  R26,Y+8
00ca9c 85b9      	LDD  R27,Y+8+1
00ca9d e2e9      	LDI  R30,LOW(41)
00ca9e 940e e31e 	CALL __MULB1W2U
00caa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14B:
                +
00caa1 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00caa2 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00caa3 0fe0      	ADD  R30,R16
00caa4 1ff1      	ADC  R31,R17
00caa5 01df      	MOVW R26,R30
00caa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x14C:
00caa7 940e e424 	CALL __EEPROMRDD
00caa9 940e e400 	CALL __PUTPARD1
00caab 940c c2ea 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14D:
00caad 931a      	ST   -Y,R17
00caae 930a      	ST   -Y,R16
                +
00caaf e000     +LDI R16 , LOW ( 0 )
00cab0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00cab1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x14E:
00cab2 0fa0      	ADD  R26,R16
00cab3 1fb1      	ADC  R27,R17
00cab4 e0e0      	LDI  R30,LOW(0)
00cab5 93ec      	ST   X,R30
00cab6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x14F:
00cab7 e0e0      	LDI  R30,LOW(0)
00cab8 e0f0      	LDI  R31,HIGH(0)
00cab9 940e e47e 	CALL __LOADLOCR4
00cabb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x150:
00cabc 972a      	SBIW R28,10
00cabd 940e e477 	CALL __SAVELOCR4
                +
00cabf e000     +LDI R16 , LOW ( 0 )
00cac0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00cac1 e020     +LDI R18 , LOW ( 0 )
00cac2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00cac3 01f8      	MOVW R30,R16
                +
00cac4 5f0f     +SUBI R16 , LOW ( - 1 )
00cac5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00cac6 01de      	MOVW R26,R28
00cac7 9614      	ADIW R26,4
00cac8 0fae      	ADD  R26,R30
00cac9 1fbf      	ADC  R27,R31
00caca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x151:
00cacb 01f8      	MOVW R30,R16
                +
00cacc 5f0f     +SUBI R16 , LOW ( - 1 )
00cacd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00cace 01de      	MOVW R26,R28
00cacf 9614      	ADIW R26,4
00cad0 0fea      	ADD  R30,R26
00cad1 1ffb      	ADC  R31,R27
00cad2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x152:
00cad3 010f      	MOVW R0,R30
00cad4 e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00cad5 e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00cad6 0fa2      	ADD  R26,R18
00cad7 1fb3      	ADC  R27,R19
00cad8 940e e42c 	CALL __EEPROMRDB
00cada 01d0      	MOVW R26,R0
00cadb 93ec      	ST   X,R30
00cadc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x153:
00cadd 01fe      	MOVW R30,R28
00cade 9634      	ADIW R30,4
00cadf 93fa      	ST   -Y,R31
00cae0 93ea      	ST   -Y,R30
00cae1 931a      	ST   -Y,R17
00cae2 930a      	ST   -Y,R16
00cae3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x154:
00cae4 940e 5e0f 	CALL _ETH_send
00cae6 cfd0      	RJMP SUBOPT_0x14F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x155:
00cae7 940e e477 	CALL __SAVELOCR4
                +
00cae9 e000     +LDI R16 , LOW ( 0 )
00caea e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00caeb e020     +LDI R18 , LOW ( 0 )
00caec e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00caed 01f8      	MOVW R30,R16
                +
00caee 5f0f     +SUBI R16 , LOW ( - 1 )
00caef 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00caf0 01de      	MOVW R26,R28
00caf1 9614      	ADIW R26,4
00caf2 0fae      	ADD  R26,R30
00caf3 1fbf      	ADC  R27,R31
00caf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x156:
00caf5 85e8      	LDD  R30,Y+8
00caf6 85f9      	LDD  R31,Y+8+1
00caf7 963f      	ADIW R30,15
00caf8 01af      	MOVW R20,R30
                +
00caf9 3f4b     +CPI R20 , LOW ( 251 )
00cafa e0e0     +LDI R30 , HIGH ( 251 )
00cafb 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00cafc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x157:
00cafd 01da      	MOVW R26,R20
00cafe 940e a753 	CALL _malloc
00cb00 83ee      	STD  Y+6,R30
00cb01 83ff      	STD  Y+6+1,R31
00cb02 9730      	SBIW R30,0
00cb03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x158:
00cb04 01f8      	MOVW R30,R16
                +
00cb05 5f0f     +SUBI R16 , LOW ( - 1 )
00cb06 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00cb07 81ae      	LDD  R26,Y+6
00cb08 81bf      	LDD  R27,Y+6+1
00cb09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x159:
00cb0a 0fea      	ADD  R30,R26
00cb0b 1ffb      	ADC  R31,R27
00cb0c cfc6      	RJMP SUBOPT_0x152
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x15A:
00cb0d 01f8      	MOVW R30,R16
00cb0e 81ae      	LDD  R26,Y+6
00cb0f 81bf      	LDD  R27,Y+6+1
00cb10 940c c339 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15B:
00cb12 85ec      	LDD  R30,Y+12
00cb13 85fd      	LDD  R31,Y+12+1
00cb14 93fa      	ST   -Y,R31
00cb15 93ea      	ST   -Y,R30
00cb16 85ac      	LDD  R26,Y+12
00cb17 85bd      	LDD  R27,Y+12+1
00cb18 940e a790 	CALL _memcpy
00cb1a 85e8      	LDD  R30,Y+8
00cb1b 85f9      	LDD  R31,Y+8+1
                +
00cb1c 0f0e     +ADD R16 , R30
00cb1d 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00cb1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x15C:
00cb1f 81ee      	LDD  R30,Y+6
00cb20 81ff      	LDD  R31,Y+6+1
00cb21 93fa      	ST   -Y,R31
00cb22 93ea      	ST   -Y,R30
00cb23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15D:
00cb24 93ea      	ST   -Y,R30
00cb25 e0ac      	LDI  R26,LOW(12)
00cb26 e0b0      	LDI  R27,0
00cb27 940c 5e0f 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x15E:
00cb29 81ae      	LDD  R26,Y+6
00cb2a 81bf      	LDD  R27,Y+6+1
00cb2b 940c a76e 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15F:
00cb2d 01f8      	MOVW R30,R16
                +
00cb2e 5f0f     +SUBI R16 , LOW ( - 1 )
00cb2f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00cb30 01de      	MOVW R26,R28
00cb31 9616      	ADIW R26,6
00cb32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x160:
                +
00cb33 a1e9     +LDD R30 , Y + 33
00cb34 a1fa     +LDD R31 , Y + 33 + 1
00cb35 a16b     +LDD R22 , Y + 33 + 2
00cb36 a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00cb37 940e e400 	CALL __PUTPARD1
00cb39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x161:
00cb3a e180      	LDI  R24,16
00cb3b 940e 9ef8 	CALL _printDebug
00cb3d 9664      	ADIW R28,20
00cb3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x162:
00cb3f 85ef      	LDD  R30,Y+15
00cb40 93ea      	ST   -Y,R30
00cb41 85ef      	LDD  R30,Y+15
00cb42 93ea      	ST   -Y,R30
00cb43 85ef      	LDD  R30,Y+15
00cb44 93ea      	ST   -Y,R30
00cb45 e0a1      	LDI  R26,LOW(1)
00cb46 940e 553d 	CALL _ETH_sendConfigManageNack
00cb48 efef      	LDI  R30,LOW(65535)
00cb49 efff      	LDI  R31,HIGH(65535)
00cb4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x163:
00cb4b 940e 9f7c 	CALL _print_payload
00cb4d cfd1      	RJMP SUBOPT_0x15C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x164:
00cb4e 01f8      	MOVW R30,R16
                +
00cb4f 5f0f     +SUBI R16 , LOW ( - 1 )
00cb50 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00cb51 01de      	MOVW R26,R28
00cb52 9617      	ADIW R26,7
00cb53 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x165:
                +
00cb54 a5ea     +LDD R30 , Y + 42
00cb55 a5fb     +LDD R31 , Y + 42 + 1
00cb56 a56c     +LDD R22 , Y + 42 + 2
00cb57 a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
00cb58 940e e400 	CALL __PUTPARD1
00cb5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x166:
00cb5b 93aa      	ST   -Y,R26
00cb5c 972b      	SBIW R28,11
00cb5d cf89      	RJMP SUBOPT_0x155
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x167:
00cb5e 89a8      	LDD  R26,Y+16
00cb5f 83a0      	STD  Z+0,R26
00cb60 cf6a      	RJMP SUBOPT_0x151
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x168:
00cb61 01de      	MOVW R26,R28
00cb62 9614      	ADIW R26,4
00cb63 0fae      	ADD  R26,R30
00cb64 1fbf      	ADC  R27,R31
00cb65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x169:
                +
00cb66 01fe     +MOVW R30 , R28
00cb67 5de2     +SUBI R30 , LOW ( - 558 )
00cb68 4ffd     +SBCI R31 , HIGH ( - 558 )
00cb69 81e0     +LD R30 , Z
                 	__GETB1SX 558
00cb6a 93ea      	ST   -Y,R30
00cb6b c9c9      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16A:
00cb6c 01fe      	MOVW R30,R28
00cb6d 963e      	ADIW R30,14
00cb6e 93fa      	ST   -Y,R31
00cb6f 93ea      	ST   -Y,R30
00cb70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16B:
00cb71 dca3      	RCALL SUBOPT_0xD9
00cb72 940e e400 	CALL __PUTPARD1
00cb74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16C:
                +
00cb75 e9e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00cb76 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00cb77 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00cb78 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00cb79 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16D:
00cb7b 01de      	MOVW R26,R28
00cb7c 961e      	ADIW R26,14
                +
00cb7d 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00cb7f 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00cb81 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00cb83 bf6c     +OUT EIND , R22
00cb84 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00cb85 018f      	MOVW R16,R30
00cb86 2311      	TST  R17
00cb87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16E:
                +
00cb88 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00cb89 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00cb8a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00cb8b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00cb8c 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x16F:
                +
00cb8e e0ab     +LDI R26 , 11
00cb8f 9fa0     +MUL R26 , R16
00cb90 01f0     +MOVW R30 , R0
00cb91 9fa1     +MUL R26 , R17
00cb92 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00cb93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x170:
00cb94 940e e400 	CALL __PUTPARD1
00cb96 91e0 1421 	LDS  R30,_commLostTimer
00cb98 91f0 1422 	LDS  R31,_commLostTimer+1
00cb9a 9160 1423 	LDS  R22,_commLostTimer+2
00cb9c 9170 1424 	LDS  R23,_commLostTimer+3
00cb9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x171:
00cb9f 91a0 1421 	LDS  R26,_commLostTimer
00cba1 91b0 1422 	LDS  R27,_commLostTimer+1
00cba3 9180 1423 	LDS  R24,_commLostTimer+2
00cba5 9190 1424 	LDS  R25,_commLostTimer+3
00cba7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x172:
00cba8 93fa      	ST   -Y,R31
00cba9 93ea      	ST   -Y,R30
                +
00cbaa e1ae     +LDI R26 , LOW ( 0x1E )
00cbab e0b0     +LDI R27 , HIGH ( 0x1E )
00cbac e080     +LDI R24 , BYTE3 ( 0x1E )
00cbad e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00cbae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x173:
00cbaf 940e e400 	CALL __PUTPARD1
00cbb1 da5c      	RCALL SUBOPT_0x88
00cbb2 91e0 1421 	LDS  R30,_commLostTimer
00cbb4 91f0 1422 	LDS  R31,_commLostTimer+1
00cbb6 9160 1423 	LDS  R22,_commLostTimer+2
00cbb8 9170 1424 	LDS  R23,_commLostTimer+3
00cbba 940e e262 	CALL __SUBD12
00cbbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x174:
                +
00cbbd 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00cbbe 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00cbbf 93fa      	ST   -Y,R31
00cbc0 93ea      	ST   -Y,R30
00cbc1 cfcc      	RJMP SUBOPT_0x16F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x175:
                +
00cbc2 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00cbc3 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00cbc4 01df      	MOVW R26,R30
00cbc5 940e e3cc 	CALL __GETW1P
00cbc7 940e e2dd 	CALL __CWD1
00cbc9 940c c343 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x176:
                +
00cbcb 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00cbcc 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00cbcd 01df      	MOVW R26,R30
00cbce 940e e3cc 	CALL __GETW1P
00cbd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x177:
                +
00cbd1 01de     +MOVW R26 , R28
00cbd2 5da2     +SUBI R26 , LOW ( - 558 )
00cbd3 4fbd     +SBCI R27 , HIGH ( - 558 )
00cbd4 900d     +LD R0 , X +
00cbd5 91bc     +LD R27 , X
00cbd6 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00cbd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x178:
                +
00cbd8 01de     +MOVW R26 , R28
00cbd9 5da4     +SUBI R26 , LOW ( - 556 )
00cbda 4fbd     +SBCI R27 , HIGH ( - 556 )
00cbdb 900d     +LD R0 , X +
00cbdc 91bc     +LD R27 , X
00cbdd 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00cbde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x179:
00cbdf 940e e400 	CALL __PUTPARD1
                +
00cbe1 01fe     +MOVW R30 , R28
00cbe2 5de0     +SUBI R30 , LOW ( - 560 )
00cbe3 4ffd     +SBCI R31 , HIGH ( - 560 )
00cbe4 9001     +LD R0 , Z +
00cbe5 81f0     +LD R31 , Z
00cbe6 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00cbe7 cc99      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17A:
00cbe8 930a      	ST   -Y,R16
00cbe9 e1a0      	LDI  R26,LOW(16)
00cbea 940c 540a 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17B:
00cbec 940e a753 	CALL _malloc
00cbee 01af      	MOVW R20,R30
00cbef 2e04      	MOV  R0,R20
00cbf0 2a05      	OR   R0,R21
00cbf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17C:
00cbf2 930a      	ST   -Y,R16
00cbf3 e5a0      	LDI  R26,LOW(80)
00cbf4 940c 540a 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x17D:
                +
00cbf6 01fe     +MOVW R30 , R28
00cbf7 5de2     +SUBI R30 , LOW ( - 558 )
00cbf8 4ffd     +SBCI R31 , HIGH ( - 558 )
00cbf9 9001     +LD R0 , Z +
00cbfa 81f0     +LD R31 , Z
00cbfb 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00cbfc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17E:
00cbfd 9632      	ADIW R30,2
00cbfe 93fa      	ST   -Y,R31
00cbff 93ea      	ST   -Y,R30
00cc00 dff5      	RCALL SUBOPT_0x17D
00cc01 9732      	SBIW R30,2
00cc02 93fa      	ST   -Y,R31
00cc03 93ea      	ST   -Y,R30
00cc04 01da      	MOVW R26,R20
00cc05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17F:
00cc06 01da      	MOVW R26,R20
00cc07 940e a76e 	CALL _free
00cc09 930a      	ST   -Y,R16
00cc0a e3a0      	LDI  R26,LOW(48)
00cc0b 940c 540a 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x180:
00cc0d 940e e400 	CALL __PUTPARD1
00cc0f 2fe0      	MOV  R30,R16
00cc10 940c c388 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x181:
00cc12 940e e400 	CALL __PUTPARD1
00cc14 01fa      	MOVW R30,R20
00cc15 85e0      	LDD  R30,Z+8
00cc16 940c c388 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x182:
00cc18 940e e400 	CALL __PUTPARD1
00cc1a 01da      	MOVW R26,R20
00cc1b 9619      	ADIW R26,9
00cc1c 940c c33e 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x183:
00cc1e 940e e3cc 	CALL __GETW1P
00cc20 81ae      	LDD  R26,Y+6
00cc21 81bf      	LDD  R27,Y+6+1
00cc22 17ae      	CP   R26,R30
00cc23 07bf      	CPC  R27,R31
00cc24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x184:
00cc25 0fae      	ADD  R26,R30
00cc26 1fbf      	ADC  R27,R31
00cc27 91ec      	LD   R30,X
00cc28 940c c388 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x185:
00cc2a 930a      	ST   -Y,R16
00cc2b 01fa      	MOVW R30,R20
00cc2c 85a0      	LDD  R26,Z+8
00cc2d 93aa      	ST   -Y,R26
00cc2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x186:
00cc2f dbca      	RCALL SUBOPT_0xD3
00cc30 01df      	MOVW R26,R30
00cc31 01cb      	MOVW R24,R22
00cc32 940e 85c7 	CALL _LOG_setLastSend
00cc34 019f      	MOVW R18,R30
00cc35 2333      	TST  R19
00cc36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x187:
                +
00cc37 e3e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00cc38 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00cc39 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00cc3a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00cc3b 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x188:
00cc3d 01de      	MOVW R26,R28
00cc3e 961c      	ADIW R26,12
                +
00cc3f 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00cc41 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00cc43 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00cc45 bf6c     +OUT EIND , R22
00cc46 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00cc47 019f      	MOVW R18,R30
00cc48 2333      	TST  R19
00cc49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x189:
00cc4a e0b0      	LDI  R27,0
00cc4b cfa0      	RJMP SUBOPT_0x17B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x18A:
                +
00cc4c e1e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00cc4d e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00cc4e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00cc4f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00cc50 940e e400 	CALL __PUTPARD1
00cc52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:83 WORDS
                 SUBOPT_0x18B:
00cc53 940e e400 	CALL __PUTPARD1
00cc55 940c c2ea 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18C:
00cc57 df9e      	RCALL SUBOPT_0x17D
00cc58 cfa4      	RJMP SUBOPT_0x17E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18D:
                +
00cc59 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00cc5a e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00cc5b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00cc5c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00cc5d cfb4      	RJMP SUBOPT_0x181
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18E:
00cc5e 940e e400 	CALL __PUTPARD1
00cc60 01fa      	MOVW R30,R20
00cc61 85e1      	LDD  R30,Z+9
00cc62 940c c388 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18F:
00cc64 01fa      	MOVW R30,R20
00cc65 85e0      	LDD  R30,Z+8
00cc66 940c c462 	JMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x190:
00cc68 01fa      	MOVW R30,R20
00cc69 85a1      	LDD  R26,Z+9
00cc6a 93aa      	ST   -Y,R26
00cc6b e0a1      	LDI  R26,LOW(1)
00cc6c 940c 553d 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x191:
00cc6e 01fa      	MOVW R30,R20
00cc6f 85a1      	LDD  R26,Z+9
00cc70 93aa      	ST   -Y,R26
00cc71 e0e0      	LDI  R30,LOW(0)
00cc72 93ea      	ST   -Y,R30
00cc73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x192:
00cc74 940e 556c 	CALL _ETH_sendConfigManageAck
00cc76 019f      	MOVW R18,R30
00cc77 2333      	TST  R19
00cc78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x193:
00cc79 87e8      	STD  Y+8,R30
00cc7a 87f9      	STD  Y+8+1,R31
00cc7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x194:
00cc7c 85e8      	LDD  R30,Y+8
00cc7d 85f9      	LDD  R31,Y+8+1
00cc7e 93fa      	ST   -Y,R31
00cc7f 93ea      	ST   -Y,R30
00cc80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x195:
00cc81 85e9      	LDD  R30,Y+9
00cc82 85fa      	LDD  R31,Y+9+1
00cc83 93fa      	ST   -Y,R31
00cc84 93ea      	ST   -Y,R30
00cc85 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x196:
00cc86 e0e0      	LDI  R30,LOW(0)
00cc87 e0f0      	LDI  R31,HIGH(0)
00cc88 93fa      	ST   -Y,R31
00cc89 93ea      	ST   -Y,R30
00cc8a cc39      	RJMP SUBOPT_0xF6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x197:
                +
00cc8b eeef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00cc8c e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00cc8d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00cc8e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00cc8f 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x198:
                +
00cc91 e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00cc92 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00cc93 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00cc94 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00cc95 cf7c      	RJMP SUBOPT_0x181
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x199:
                +
00cc96 e6e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00cc97 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00cc98 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00cc99 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00cc9a 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x19A:
00cc9c 940e e400 	CALL __PUTPARD1
00cc9e 01fa      	MOVW R30,R20
                +
00cc9f 85a1     +LDD R26 , Z + 9
00cca0 85b2     +LDD R27 , Z + 9 + 1
00cca1 8583     +LDD R24 , Z + 9 + 2
00cca2 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00cca3 940e e405 	CALL __PUTPARD2
00cca5 940c c2ea 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19B:
00cca7 940e e405 	CALL __PUTPARD2
00cca9 940c c2ea 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19C:
                +
00ccab 85a1     +LDD R26 , Z + 9
00ccac 85b2     +LDD R27 , Z + 9 + 1
00ccad 8583     +LDD R24 , Z + 9 + 2
00ccae 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00ccaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19D:
                +
00ccb0 e0ea     +LDI R30 , LOW ( 0xA )
00ccb1 e0f0     +LDI R31 , HIGH ( 0xA )
00ccb2 e060     +LDI R22 , BYTE3 ( 0xA )
00ccb3 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00ccb4 cf9e      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19E:
00ccb5 df40      	RCALL SUBOPT_0x17D
00ccb6 9632      	ADIW R30,2
00ccb7 93fa      	ST   -Y,R31
00ccb8 93ea      	ST   -Y,R30
00ccb9 01da      	MOVW R26,R20
00ccba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19F:
                +
00ccbb e0ed     +LDI R30 , LOW ( 0xD )
00ccbc e0f0     +LDI R31 , HIGH ( 0xD )
00ccbd e060     +LDI R22 , BYTE3 ( 0xD )
00ccbe e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00ccbf cf93      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A0:
                +
00ccc0 e5eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00ccc1 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00ccc2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00ccc3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00ccc4 cf4d      	RJMP SUBOPT_0x181
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A1:
00ccc5 85a1      	LDD  R26,Z+9
00ccc6 85b2      	LDD  R27,Z+10
00ccc7 940e e45d 	CALL __CPW02
00ccc9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A2:
00ccca 930a      	ST   -Y,R16
00cccb e3a0      	LDI  R26,LOW(48)
00cccc 940c 540a 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A3:
00ccce 85e0      	LDD  R30,Z+8
00cccf e0f0      	LDI  R31,0
00ccd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1A4:
00ccd1 9724      	SBIW R28,4
00ccd2 e0e0      	LDI  R30,LOW(0)
00ccd3 83e8      	ST   Y,R30
00ccd4 83e9      	STD  Y+1,R30
00ccd5 83ea      	STD  Y+2,R30
00ccd6 83eb      	STD  Y+3,R30
00ccd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A5:
00ccd8 0fe0      	ADD  R30,R16
00ccd9 1ff1      	ADC  R31,R17
00ccda 93fa      	ST   -Y,R31
00ccdb 93ea      	ST   -Y,R30
00ccdc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A6:
00ccdd 81ae      	LDD  R26,Y+6
00ccde 81bf      	LDD  R27,Y+6+1
00ccdf 0fea      	ADD  R30,R26
00cce0 1ffb      	ADC  R31,R27
00cce1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A7:
00cce2 01d0      	MOVW R26,R0
00cce3 e0f0      	LDI  R31,0
00cce4 17ea      	CP   R30,R26
00cce5 07fb      	CPC  R31,R27
00cce6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A8:
00cce7 93ba      	ST   -Y,R27
00cce8 93aa      	ST   -Y,R26
00cce9 940e e475 	CALL __SAVELOCR6
00cceb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1A9:
00ccec 81ae      	LDD  R26,Y+6
00cced 81bf      	LDD  R27,Y+6+1
00ccee 0fae      	ADD  R26,R30
00ccef 1fbf      	ADC  R27,R31
00ccf0 91ec      	LD   R30,X
00ccf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AA:
00ccf2 eaa9      	LDI  R26,LOW(_configRd)
00ccf3 e0bf      	LDI  R27,HIGH(_configRd)
00ccf4 cdbd      	RJMP SUBOPT_0x14E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1AB:
00ccf5 e0e0      	LDI  R30,LOW(0)
00ccf6 93e0 10f0 	STS  _config_start,R30
00ccf8 93e0 10f1 	STS  _config_ready,R30
00ccfa 93e0 10f2 	STS  _config_end,R30
00ccfc 93e0 10f3 	STS  _config_response,R30
00ccfe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AC:
00ccff 01de      	MOVW R26,R28
00cd00 9612      	ADIW R26,2
00cd01 940e a81c 	CALL _strlen
00cd03 170e      	CP   R16,R30
00cd04 071f      	CPC  R17,R31
00cd05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AD:
                +
00cd06 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 24 ) )
00cd07 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 24 ) )
00cd08 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 24 ) )
00cd09 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 24 ) )
                 	__POINTD1FN _0x120000,24
00cd0a 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AE:
                +
00cd0c e0a7     +LDI R26 , LOW ( 0x7 )
00cd0d e0b0     +LDI R27 , HIGH ( 0x7 )
00cd0e e080     +LDI R24 , BYTE3 ( 0x7 )
00cd0f e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00cd10 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1AF:
00cd12 85ec      	LDD  R30,Y+12
00cd13 85fd      	LDD  R31,Y+12+1
00cd14 93fa      	ST   -Y,R31
00cd15 93ea      	ST   -Y,R30
00cd16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B0:
00cd17 eae9      	LDI  R30,LOW(_configRd)
00cd18 e0ff      	LDI  R31,HIGH(_configRd)
00cd19 93fa      	ST   -Y,R31
00cd1a 93ea      	ST   -Y,R30
00cd1b d8b2      	RCALL SUBOPT_0x7D
00cd1c 940c a790 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B1:
00cd1e 01de      	MOVW R26,R28
00cd1f 9697      	ADIW R26,39
00cd20 940e a81c 	CALL _strlen
00cd22 170e      	CP   R16,R30
00cd23 071f      	CPC  R17,R31
00cd24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B2:
                +
00cd25 a5ab     +LDD R26 , Y + 43
00cd26 a5bc     +LDD R27 , Y + 43 + 1
00cd27 a58d     +LDD R24 , Y + 43 + 2
00cd28 a59e     +LDD R25 , Y + 43 + 3
                 	__GETD2S 43
00cd29 940e 4201 	CALL _TIMER_checkTimerExceed
00cd2b 9730      	SBIW R30,0
00cd2c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B3:
00cd2d 91ec      	LD   R30,X
00cd2e e6a4      	LDI  R26,LOW(100)
00cd2f 9fea      	MUL  R30,R26
00cd30 01b0      	MOVW R22,R0
00cd31 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1B4:
00cd32 81e1      	LDD  R30,Z+1
00cd33 e0aa      	LDI  R26,LOW(10)
00cd34 9fea      	MUL  R30,R26
00cd35 01f0      	MOVW R30,R0
00cd36 01db      	MOVW R26,R22
00cd37 0fae      	ADD  R26,R30
00cd38 1fbf      	ADC  R27,R31
00cd39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B5:
00cd3a 81e2      	LDD  R30,Z+2
00cd3b e0f0      	LDI  R31,0
00cd3c 0fea      	ADD  R30,R26
00cd3d 1ffb      	ADC  R31,R27
00cd3e 940e e2dd 	CALL __CWD1
00cd40 940e e400 	CALL __PUTPARD1
00cd42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B6:
                +
00cd43 01fe     +MOVW R30 , R28
00cd44 5ce1     +SUBI R30 , LOW ( - 63 )
00cd45 4fff     +SBCI R31 , HIGH ( - 63 )
00cd46 9001     +LD R0 , Z +
00cd47 81f0     +LD R31 , Z
00cd48 2de0     +MOV R30 , R0
                 	__GETW1SX 63
00cd49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B7:
00cd4a 81e3      	LDD  R30,Z+3
00cd4b e6a4      	LDI  R26,LOW(100)
00cd4c 9fea      	MUL  R30,R26
00cd4d 01b0      	MOVW R22,R0
00cd4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B8:
00cd4f 81e4      	LDD  R30,Z+4
00cd50 e0aa      	LDI  R26,LOW(10)
00cd51 9fea      	MUL  R30,R26
00cd52 01f0      	MOVW R30,R0
00cd53 01db      	MOVW R26,R22
00cd54 0fae      	ADD  R26,R30
00cd55 1fbf      	ADC  R27,R31
00cd56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B9:
00cd57 81e5      	LDD  R30,Z+5
00cd58 e0f0      	LDI  R31,0
00cd59 0fea      	ADD  R30,R26
00cd5a 1ffb      	ADC  R31,R27
00cd5b 940e e2dd 	CALL __CWD1
00cd5d 940e e400 	CALL __PUTPARD1
00cd5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BA:
                +
00cd60 01fe     +MOVW R30 , R28
00cd61 5bed     +SUBI R30 , LOW ( - 67 )
00cd62 4fff     +SBCI R31 , HIGH ( - 67 )
00cd63 9001     +LD R0 , Z +
00cd64 81f0     +LD R31 , Z
00cd65 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00cd66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BB:
00cd67 81e6      	LDD  R30,Z+6
00cd68 e6a4      	LDI  R26,LOW(100)
00cd69 9fea      	MUL  R30,R26
00cd6a 01b0      	MOVW R22,R0
00cd6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BC:
00cd6c 81e7      	LDD  R30,Z+7
00cd6d e0aa      	LDI  R26,LOW(10)
00cd6e 9fea      	MUL  R30,R26
00cd6f 01f0      	MOVW R30,R0
00cd70 01db      	MOVW R26,R22
00cd71 0fae      	ADD  R26,R30
00cd72 1fbf      	ADC  R27,R31
00cd73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 56 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x1BD:
00cd74 0fea      	ADD  R30,R26
00cd75 1ffb      	ADC  R31,R27
00cd76 940e e2dd 	CALL __CWD1
00cd78 940e e400 	CALL __PUTPARD1
00cd7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BE:
                +
00cd7b 01fe     +MOVW R30 , R28
00cd7c 5be9     +SUBI R30 , LOW ( - 71 )
00cd7d 4fff     +SBCI R31 , HIGH ( - 71 )
00cd7e 9001     +LD R0 , Z +
00cd7f 81f0     +LD R31 , Z
00cd80 2de0     +MOV R30 , R0
                 	__GETW1SX 71
00cd81 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BF:
00cd82 85e1      	LDD  R30,Z+9
00cd83 e6a4      	LDI  R26,LOW(100)
00cd84 9fea      	MUL  R30,R26
00cd85 01b0      	MOVW R22,R0
00cd86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1C0:
00cd87 85e2      	LDD  R30,Z+10
00cd88 e0aa      	LDI  R26,LOW(10)
00cd89 9fea      	MUL  R30,R26
00cd8a 01f0      	MOVW R30,R0
00cd8b 01db      	MOVW R26,R22
00cd8c 0fae      	ADD  R26,R30
00cd8d 1fbf      	ADC  R27,R31
00cd8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C1:
00cd8f 85e3      	LDD  R30,Z+11
00cd90 e0f0      	LDI  R31,0
00cd91 cfe2      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C2:
                +
00cd92 01fe     +MOVW R30 , R28
00cd93 5be7     +SUBI R30 , LOW ( - 73 )
00cd94 4fff     +SBCI R31 , HIGH ( - 73 )
00cd95 9001     +LD R0 , Z +
00cd96 81f0     +LD R31 , Z
00cd97 2de0     +MOV R30 , R0
                 	__GETW1SX 73
00cd98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C3:
                +
00cd99 01fe     +MOVW R30 , R28
00cd9a 5be3     +SUBI R30 , LOW ( - 77 )
00cd9b 4fff     +SBCI R31 , HIGH ( - 77 )
00cd9c 9001     +LD R0 , Z +
00cd9d 81f0     +LD R31 , Z
00cd9e 2de0     +MOV R30 , R0
                 	__GETW1SX 77
00cd9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C4:
                +
00cda0 01fe     +MOVW R30 , R28
00cda1 5aef     +SUBI R30 , LOW ( - 81 )
00cda2 4fff     +SBCI R31 , HIGH ( - 81 )
00cda3 9001     +LD R0 , Z +
00cda4 81f0     +LD R31 , Z
00cda5 2de0     +MOV R30 , R0
                 	__GETW1SX 81
00cda6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C5:
                +
00cda7 01fe     +MOVW R30 , R28
00cda8 5aeb     +SUBI R30 , LOW ( - 85 )
00cda9 4fff     +SBCI R31 , HIGH ( - 85 )
00cdaa 9001     +LD R0 , Z +
00cdab 81f0     +LD R31 , Z
00cdac 2de0     +MOV R30 , R0
                 	__GETW1SX 85
00cdad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C6:
                +
00cdae 01fe     +MOVW R30 , R28
00cdaf 5ae9     +SUBI R30 , LOW ( - 87 )
00cdb0 4fff     +SBCI R31 , HIGH ( - 87 )
00cdb1 9001     +LD R0 , Z +
00cdb2 81f0     +LD R31 , Z
00cdb3 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00cdb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C7:
                +
00cdb5 01fe     +MOVW R30 , R28
00cdb6 5ae5     +SUBI R30 , LOW ( - 91 )
00cdb7 4fff     +SBCI R31 , HIGH ( - 91 )
00cdb8 9001     +LD R0 , Z +
00cdb9 81f0     +LD R31 , Z
00cdba 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00cdbb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C8:
                +
00cdbc 01fe     +MOVW R30 , R28
00cdbd 5ae1     +SUBI R30 , LOW ( - 95 )
00cdbe 4fff     +SBCI R31 , HIGH ( - 95 )
00cdbf 9001     +LD R0 , Z +
00cdc0 81f0     +LD R31 , Z
00cdc1 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00cdc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C9:
                +
00cdc3 01fe     +MOVW R30 , R28
00cdc4 59ed     +SUBI R30 , LOW ( - 99 )
00cdc5 4fff     +SBCI R31 , HIGH ( - 99 )
00cdc6 9001     +LD R0 , Z +
00cdc7 81f0     +LD R31 , Z
00cdc8 2de0     +MOV R30 , R0
                 	__GETW1SX 99
00cdc9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CA:
                +
00cdca e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5360 ) )
00cdcb e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5360 ) )
00cdcc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5360 ) )
00cdcd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5360 ) )
                 	__POINTD1FN _0x120000,5360
00cdce 940e e400 	CALL __PUTPARD1
00cdd0 01fe      	MOVW R30,R28
00cdd1 963a      	ADIW R30,10
00cdd2 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CB:
00cdd4 93fa      	ST   -Y,R31
00cdd5 93ea      	ST   -Y,R30
00cdd6 01fe      	MOVW R30,R28
00cdd7 9638      	ADIW R30,8
00cdd8 93fa      	ST   -Y,R31
00cdd9 93ea      	ST   -Y,R30
00cdda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1CC:
00cddb e0b0      	LDI  R27,0
00cddc 940c a790 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CD:
                +
00cdde 01fe     +MOVW R30 , R28
00cddf 5bef     +SUBI R30 , LOW ( - 65 )
00cde0 4fff     +SBCI R31 , HIGH ( - 65 )
00cde1 9001     +LD R0 , Z +
00cde2 81f0     +LD R31 , Z
00cde3 2de0     +MOV R30 , R0
                 	__GETW1SX 65
00cde4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1CE:
                +
00cde5 e020     +LDI R18 , LOW ( 0 )
00cde6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00cde7 e000     +LDI R16 , LOW ( 0 )
00cde8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00cde9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1CF:
00cdea 01f9      	MOVW R30,R18
                +
00cdeb 5f2f     +SUBI R18 , LOW ( - 1 )
00cdec 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cded 85a8      	LDD  R26,Y+8
00cdee 85b9      	LDD  R27,Y+8+1
00cdef 0fae      	ADD  R26,R30
00cdf0 1fbf      	ADC  R27,R31
00cdf1 91ec      	LD   R30,X
00cdf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D0:
                +
00cdf3 81ac     +LDD R26 , Y + 4
00cdf4 81bd     +LDD R27 , Y + 4 + 1
00cdf5 9618     +ADIW R26 , 8
00cdf6 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00cdf7 cff2      	RJMP SUBOPT_0x1CF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D1:
                +
00cdf8 81ac     +LDD R26 , Y + 4
00cdf9 81bd     +LDD R27 , Y + 4 + 1
00cdfa 9619     +ADIW R26 , 9
00cdfb 93ed     +ST X + , R30
00cdfc 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00cdfd 81ec      	LDD  R30,Y+4
00cdfe 81fd      	LDD  R31,Y+4+1
00cdff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D2:
00ce00 e0e1      	LDI  R30,LOW(1)
00ce01 e0f0      	LDI  R31,HIGH(1)
00ce02 940e e2f6 	CALL __MULW12U
00ce04 01df      	MOVW R26,R30
00ce05 940c a753 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D3:
00ce07 940e e3cc 	CALL __GETW1P
00ce09 170e      	CP   R16,R30
00ce0a 071f      	CPC  R17,R31
00ce0b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D4:
00ce0c 01f8      	MOVW R30,R16
00ce0d 0fea      	ADD  R30,R26
00ce0e 1ffb      	ADC  R31,R27
00ce0f 010f      	MOVW R0,R30
00ce10 01f9      	MOVW R30,R18
00ce11 0fe0      	ADD  R30,R16
00ce12 1ff1      	ADC  R31,R17
00ce13 85a8      	LDD  R26,Y+8
00ce14 85b9      	LDD  R27,Y+8+1
00ce15 cc07      	RJMP SUBOPT_0x132
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D5:
                +
00ce16 81ac     +LDD R26 , Y + 4
00ce17 81bd     +LDD R27 , Y + 4 + 1
00ce18 9618     +ADIW R26 , 8
00ce19 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00ce1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x1D6:
00ce1b e0f0      	LDI  R31,0
00ce1c 940e e2dd 	CALL __CWD1
                +
00ce1e 7fef     +ANDI R30 , LOW ( 0xFF )
00ce1f 70f0     +ANDI R31 , HIGH ( 0xFF )
00ce20 7060     +ANDI R22 , BYTE3 ( 0xFF )
00ce21 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00ce22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D7:
00ce23 01df      	MOVW R26,R30
00ce24 01cb      	MOVW R24,R22
00ce25 e1e8      	LDI  R30,LOW(24)
00ce26 940e e28b 	CALL __LSLD12
00ce28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D8:
00ce29 01df      	MOVW R26,R30
00ce2a 01cb      	MOVW R24,R22
00ce2b e0e8      	LDI  R30,LOW(8)
00ce2c 940e e28b 	CALL __LSLD12
00ce2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D9:
00ce2f 940e e271 	CALL __ORD12
                +
00ce31 81ac     +LDD R26 , Y + 4
00ce32 81bd     +LDD R27 , Y + 4 + 1
00ce33 9619     +ADIW R26 , 9
00ce34 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00ce36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1DA:
00ce37 01f9      	MOVW R30,R18
                +
00ce38 5f2f     +SUBI R18 , LOW ( - 1 )
00ce39 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00ce3a ceb1      	RJMP SUBOPT_0x1A9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DB:
00ce3b 940e e400 	CALL __PUTPARD1
00ce3d 85e8      	LDD  R30,Y+8
00ce3e 85f9      	LDD  R31,Y+8+1
00ce3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DC:
00ce40 93ba      	ST   -Y,R27
00ce41 93aa      	ST   -Y,R26
00ce42 ce8e      	RJMP SUBOPT_0x1A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1DD:
00ce43 940e a753 	CALL _malloc
00ce45 83ee      	STD  Y+6,R30
00ce46 83ff      	STD  Y+6+1,R31
00ce47 9730      	SBIW R30,0
00ce48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1DE:
                +
00ce49 eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00ce4a e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00ce4b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00ce4c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00ce4d cba0      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1DF:
00ce4e 85ea      	LDD  R30,Y+10
00ce4f 85fb      	LDD  R31,Y+10+1
00ce50 93fa      	ST   -Y,R31
00ce51 93ea      	ST   -Y,R30
00ce52 ce29      	RJMP SUBOPT_0x194
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E0:
00ce53 940e a790 	CALL _memcpy
00ce55 ccd3      	RJMP SUBOPT_0x15E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E1:
00ce56 e0a8      	LDI  R26,LOW(8)
00ce57 e0b0      	LDI  R27,0
00ce58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E2:
                +
00ce59 e6ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00ce5a e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00ce5b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00ce5c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00ce5d cb90      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E3:
                +
00ce5e e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00ce5f e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00ce60 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00ce61 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00ce62 cb8b      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E4:
                +
00ce63 e2e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00ce64 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00ce65 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00ce66 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00ce67 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E5:
00ce69 85ec      	LDD  R30,Y+12
00ce6a e0f0      	LDI  R31,0
00ce6b 70ef      	ANDI R30,LOW(0xF)
00ce6c 70f0      	ANDI R31,HIGH(0xF)
00ce6d 87e8      	STD  Y+8,R30
00ce6e 87f9      	STD  Y+8+1,R31
00ce6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E6:
00ce70 e0b0      	LDI  R27,0
00ce71 cfd1      	RJMP SUBOPT_0x1DD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1E7:
00ce72 940e e400 	CALL __PUTPARD1
00ce74 85ec      	LDD  R30,Y+12
00ce75 85fd      	LDD  R31,Y+12+1
00ce76 ca0a      	RJMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E8:
00ce77 940e e400 	CALL __PUTPARD1
                +
00ce79 e0e3     +LDI R30 , LOW ( 0x3 )
00ce7a e0f0     +LDI R31 , HIGH ( 0x3 )
00ce7b e060     +LDI R22 , BYTE3 ( 0x3 )
00ce7c e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00ce7d cdd5      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E9:
                +
00ce7e ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00ce7f e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00ce80 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00ce81 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00ce82 cb66      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EA:
                +
00ce83 e6e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00ce84 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00ce85 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00ce86 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00ce87 cb61      	RJMP SUBOPT_0x128
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EB:
                +
00ce88 e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00ce89 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00ce8a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00ce8b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00ce8c cb61      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EC:
                +
00ce8d ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00ce8e e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00ce8f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00ce90 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00ce91 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1ED:
00ce93 e2e2      	LDI  R30,LOW(34)
00ce94 e0f0      	LDI  R31,HIGH(34)
00ce95 17e0      	CP   R30,R16
00ce96 07f1      	CPC  R31,R17
00ce97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EE:
                +
00ce98 81a1     +LDD R26 , Z + 1
00ce99 81b2     +LDD R27 , Z + 1 + 1
00ce9a 8183     +LDD R24 , Z + 1 + 2
00ce9b 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00ce9c ce0a      	RJMP SUBOPT_0x19B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EF:
                +
00ce9d e4ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00ce9e e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00ce9f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00cea0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00cea1 940e e400 	CALL __PUTPARD1
00cea3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1F0:
00cea4 85ea      	LDD  R30,Y+10
00cea5 e0f0      	LDI  R31,0
00cea6 70ef      	ANDI R30,LOW(0xF)
00cea7 70f0      	ANDI R31,HIGH(0xF)
00cea8 01af      	MOVW R20,R30
00cea9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F1:
00ceaa 935a      	ST   -Y,R21
00ceab 934a      	ST   -Y,R20
00ceac 85aa      	LDD  R26,Y+10
00cead 85bb      	LDD  R27,Y+10+1
00ceae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F2:
00ceaf 940e e400 	CALL __PUTPARD1
00ceb1 940c c491 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1F3:
00ceb3 01fe      	MOVW R30,R28
00ceb4 9632      	ADIW R30,2
00ceb5 93fa      	ST   -Y,R31
00ceb6 93ea      	ST   -Y,R30
00ceb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F4:
00ceb8 d874      	RCALL SUBOPT_0xB3
00ceb9 940e e459 	CALL __CPD10
00cebb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1F5:
00cebc 940e e400 	CALL __PUTPARD1
00cebe d878      	RCALL SUBOPT_0xB5
00cebf cd93      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F6:
00cec0 940e e405 	CALL __PUTPARD2
00cec2 931a      	ST   -Y,R17
00cec3 930a      	ST   -Y,R16
00cec4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F7:
00cec5 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00cec6 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00cec7 e0a0      	LDI  R26,LOW(0)
00cec8 83a0      	STD  Z+0,R26
00cec9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F8:
00ceca 940e e400 	CALL __PUTPARD1
00cecc 85ec      	LDD  R30,Y+12
00cecd 940c c525 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F9:
00cecf e0ab      	LDI  R26,LOW(11)
00ced0 9f1a      	MUL  R17,R26
00ced1 01f0      	MOVW R30,R0
                +
00ced2 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00ced3 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00ced4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1FA:
00ced5 01df      	MOVW R26,R30
00ced6 940e a76e 	CALL _free
00ced8 e0ab      	LDI  R26,LOW(11)
00ced9 9f1a      	MUL  R17,R26
00ceda 01f0      	MOVW R30,R0
                +
00cedb 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00cedc 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00cedd e0a0      	LDI  R26,LOW(0)
00cede e0b0      	LDI  R27,HIGH(0)
00cedf 83a0      	STD  Z+0,R26
00cee0 83b1      	STD  Z+1,R27
00cee1 e0ab      	LDI  R26,LOW(11)
00cee2 9f1a      	MUL  R17,R26
00cee3 01f0      	MOVW R30,R0
                +
00cee4 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00cee5 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00cee6 e0a0      	LDI  R26,LOW(0)
00cee7 83a0      	STD  Z+0,R26
00cee8 cfe6      	RJMP SUBOPT_0x1F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1FB:
00cee9 e0a0      	LDI  R26,LOW(0)
00ceea 83a0      	STD  Z+0,R26
00ceeb e0ab      	LDI  R26,LOW(11)
00ceec 9f1a      	MUL  R17,R26
00ceed 01f0      	MOVW R30,R0
00ceee cfd6      	RJMP SUBOPT_0x1F7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1FC:
00ceef e0ab      	LDI  R26,LOW(11)
00cef0 9f1a      	MUL  R17,R26
00cef1 01f0      	MOVW R30,R0
                +
00cef2 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00cef3 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00cef4 e0a0      	LDI  R26,LOW(0)
00cef5 e0b0      	LDI  R27,HIGH(0)
00cef6 83a0      	STD  Z+0,R26
00cef7 83b1      	STD  Z+1,R27
00cef8 e0ab      	LDI  R26,LOW(11)
00cef9 9f1a      	MUL  R17,R26
00cefa 01f0      	MOVW R30,R0
                +
00cefb 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00cefc 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00cefd 940e c396 	CALL SUBOPT_0x2C
00ceff 940e e3fb 	CALL __PUTDZ20
00cf01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FD:
00cf02 940e e400 	CALL __PUTPARD1
00cf04 81ed      	LDD  R30,Y+5
00cf05 940c c525 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FE:
00cf07 2fe1      	MOV  R30,R17
00cf08 27ff      	CLR  R31
00cf09 2766      	CLR  R22
00cf0a 2777      	CLR  R23
00cf0b 940c c34d 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FF:
00cf0d e6e4      	LDI  R30,LOW(100)
00cf0e e0f0      	LDI  R31,HIGH(100)
00cf0f 940e e38d 	CALL __MODW21
00cf11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x200:
00cf12 e0e0      	LDI  R30,LOW(0)
                +
00cf13 83ee     +STD Y + 6 , R30
00cf14 83ef     +STD Y + 6 + 1 , R30
00cf15 87e8     +STD Y + 6 + 2 , R30
00cf16 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
00cf17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x201:
00cf18 940e c4dc 	CALL SUBOPT_0x59
00cf1a 2766      	CLR  R22
00cf1b 2777      	CLR  R23
00cf1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x202:
00cf1d 9631      	ADIW R30,1
00cf1e 940e e2dd 	CALL __CWD1
00cf20 940e e400 	CALL __PUTPARD1
00cf22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x203:
00cf23 81ea      	LDD  R30,Y+2
00cf24 81fb      	LDD  R31,Y+2+1
00cf25 940c c3bd 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x204:
00cf27 01df      	MOVW R26,R30
00cf28 01cb      	MOVW R24,R22
00cf29 01f8      	MOVW R30,R16
00cf2a 940e e2dd 	CALL __CWD1
00cf2c 940e e117 	CALL __CDF1
00cf2e 940e e417 	CALL __SWAPD12
00cf30 940e e14a 	CALL __SUBF12
00cf32 01df      	MOVW R26,R30
00cf33 01cb      	MOVW R24,R22
00cf34 940e a46b 	CALL _fabs
00cf36 01df      	MOVW R26,R30
00cf37 01cb      	MOVW R24,R22
00cf38 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x205:
00cf39 01f8      	MOVW R30,R16
00cf3a 940e e2dd 	CALL __CWD1
00cf3c 940e e117 	CALL __CDF1
00cf3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x206:
                +
00cf3f e0a0     +LDI R26 , LOW ( 0x3F000000 )
00cf40 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00cf41 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00cf42 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00cf43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x207:
                +
00cf44 e0a0     +LDI R26 , LOW ( 0x40A00000 )
00cf45 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00cf46 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00cf47 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00cf48 940e e1a1 	CALL __MULF12
00cf4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x208:
                +
00cf4b 01de     +MOVW R26 , R28
00cf4c 5aa6     +SUBI R26 , LOW ( - 90 )
00cf4d 4fbf     +SBCI R27 , HIGH ( - 90 )
00cf4e 900d     +LD R0 , X +
00cf4f 91bc     +LD R27 , X
00cf50 2da0     +MOV R26 , R0
                 	__GETW2SX 90
00cf51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x209:
00cf52 e0e0      	LDI  R30,LOW(0)
                +
00cf53 01de     +MOVW R26 , R28
00cf54 5ca0     +SUBI R26 , LOW ( - 64 )
00cf55 4fbf     +SBCI R27 , HIGH ( - 64 )
00cf56 93ed     +ST X + , R30
00cf57 93ed     +ST X + , R30
00cf58 93ed     +ST X + , R30
00cf59 93ec     +ST X , R30
                 	__CLRD1SX 64
                +
00cf5a e020     +LDI R18 , LOW ( 0 )
00cf5b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00cf5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x20A:
                +
00cf5d 01de     +MOVW R26 , R28
00cf5e 5aa6     +SUBI R26 , LOW ( - 90 )
00cf5f 4fbf     +SBCI R27 , HIGH ( - 90 )
00cf60 91ac     +LD R26 , X
                 	__GETB2SX 90
00cf61 5fa8      	SUBI R26,-LOW(8)
00cf62 940c 446f 	JMP  _read_adc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x20B:
00cf64 2766      	CLR  R22
00cf65 2777      	CLR  R23
                +
00cf66 01de     +MOVW R26 , R28
00cf67 5ca0     +SUBI R26 , LOW ( - 64 )
00cf68 4fbf     +SBCI R27 , HIGH ( - 64 )
00cf69 900d     +LD R0 , X +
00cf6a 901d     +LD R1 , X +
00cf6b 918d     +LD R24 , X +
00cf6c 919c     +LD R25 , X
00cf6d 01d0     +MOVW R26 , R0
                 	__GETD2SX 64
00cf6e 940e e258 	CALL __ADDD12
                +
00cf70 01de     +MOVW R26 , R28
00cf71 5ca0     +SUBI R26 , LOW ( - 64 )
00cf72 4fbf     +SBCI R27 , HIGH ( - 64 )
00cf73 93ed     +ST X + , R30
00cf74 93fd     +ST X + , R31
00cf75 936d     +ST X + , R22
00cf76 937c     +ST X , R23
                 	__PUTD1SX 64
00cf77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x20C:
                +
00cf78 01fe     +MOVW R30 , R28
00cf79 5ce0     +SUBI R30 , LOW ( - 64 )
00cf7a 4fff     +SBCI R31 , HIGH ( - 64 )
00cf7b 9001     +LD R0 , Z +
00cf7c 9011     +LD R1 , Z +
00cf7d 9161     +LD R22 , Z +
00cf7e 8170     +LD R23 , Z
00cf7f 01f0     +MOVW R30 , R0
                 	__GETD1SX 64
00cf80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20D:
00cf81 940e e400 	CALL __PUTPARD1
                +
00cf83 e0a0     +LDI R26 , LOW ( 0x41A00000 )
00cf84 e0b0     +LDI R27 , HIGH ( 0x41A00000 )
00cf85 ea80     +LDI R24 , BYTE3 ( 0x41A00000 )
00cf86 e491     +LDI R25 , BYTE4 ( 0x41A00000 )
                 	__GETD2N 0x41A00000
00cf87 940e a305 	CALL _iAD595ADCToVolt
                +
00cf89 87e8     +STD Y + 8 , R30
00cf8a 87f9     +STD Y + 8 + 1 , R31
00cf8b 876a     +STD Y + 8 + 2 , R22
00cf8c 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00cf8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 48 TIMES, CODE SIZE REDUCTION:185 WORDS
                 SUBOPT_0x20E:
                +
00cf8e 01fe     +MOVW R30 , R28
00cf8f 5ae6     +SUBI R30 , LOW ( - 90 )
00cf90 4fff     +SBCI R31 , HIGH ( - 90 )
00cf91 9001     +LD R0 , Z +
00cf92 81f0     +LD R31 , Z
00cf93 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00cf94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20F:
00cf95 e5a0      	LDI  R26,LOW(_iTCVoltData)
00cf96 e1b5      	LDI  R27,HIGH(_iTCVoltData)
00cf97 940e e2a7 	CALL __LSLW2
00cf99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x210:
00cf9a 940e c491 	CALL SUBOPT_0x4F
                +
00cf9c eaac     +LDI R26 , LOW ( 0x3E5A1CAC )
00cf9d e1bc     +LDI R27 , HIGH ( 0x3E5A1CAC )
00cf9e e58a     +LDI R24 , BYTE3 ( 0x3E5A1CAC )
00cf9f e39e     +LDI R25 , BYTE4 ( 0x3E5A1CAC )
                 	__GETD2N 0x3E5A1CAC
00cfa0 940e e151 	CALL __ADDF12
00cfa2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x211:
00cfa3 940e e2a7 	CALL __LSLW2
00cfa5 0fea      	ADD  R30,R26
00cfa6 1ffb      	ADC  R31,R27
00cfa7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:101 WORDS
                 SUBOPT_0x212:
00cfa8 940e e400 	CALL __PUTPARD1
00cfaa 91e0 1564 	LDS  R30,_iTCADCData
00cfac 91f0 1565 	LDS  R31,_iTCADCData+1
00cfae 9160 1566 	LDS  R22,_iTCADCData+2
00cfb0 9170 1567 	LDS  R23,_iTCADCData+3
00cfb2 940e e400 	CALL __PUTPARD1
00cfb4 91e0 1550 	LDS  R30,_iTCVoltData
00cfb6 91f0 1551 	LDS  R31,_iTCVoltData+1
00cfb8 9160 1552 	LDS  R22,_iTCVoltData+2
00cfba 9170 1553 	LDS  R23,_iTCVoltData+3
00cfbc 940e e400 	CALL __PUTPARD1
                +
00cfbe 91e0 1568+LDS R30 , _iTCADCData + ( 4 )
00cfc0 91f0 1569+LDS R31 , _iTCADCData + ( 4 ) + 1
00cfc2 9160 156a+LDS R22 , _iTCADCData + ( 4 ) + 2
00cfc4 9170 156b+LDS R23 , _iTCADCData + ( 4 ) + 3
                 	__GETD1MN _iTCADCData,4
00cfc6 940e e400 	CALL __PUTPARD1
                +
00cfc8 91e0 1554+LDS R30 , _iTCVoltData + ( 4 )
00cfca 91f0 1555+LDS R31 , _iTCVoltData + ( 4 ) + 1
00cfcc 9160 1556+LDS R22 , _iTCVoltData + ( 4 ) + 2
00cfce 9170 1557+LDS R23 , _iTCVoltData + ( 4 ) + 3
                 	__GETD1MN _iTCVoltData,4
00cfd0 940e e400 	CALL __PUTPARD1
                +
00cfd2 91e0 156c+LDS R30 , _iTCADCData + ( 8 )
00cfd4 91f0 156d+LDS R31 , _iTCADCData + ( 8 ) + 1
00cfd6 9160 156e+LDS R22 , _iTCADCData + ( 8 ) + 2
00cfd8 9170 156f+LDS R23 , _iTCADCData + ( 8 ) + 3
                 	__GETD1MN _iTCADCData,8
00cfda 940e e400 	CALL __PUTPARD1
                +
00cfdc 91e0 1558+LDS R30 , _iTCVoltData + ( 8 )
00cfde 91f0 1559+LDS R31 , _iTCVoltData + ( 8 ) + 1
00cfe0 9160 155a+LDS R22 , _iTCVoltData + ( 8 ) + 2
00cfe2 9170 155b+LDS R23 , _iTCVoltData + ( 8 ) + 3
                 	__GETD1MN _iTCVoltData,8
00cfe4 940e e400 	CALL __PUTPARD1
                +
00cfe6 91e0 1570+LDS R30 , _iTCADCData + ( 12 )
00cfe8 91f0 1571+LDS R31 , _iTCADCData + ( 12 ) + 1
00cfea 9160 1572+LDS R22 , _iTCADCData + ( 12 ) + 2
00cfec 9170 1573+LDS R23 , _iTCADCData + ( 12 ) + 3
                 	__GETD1MN _iTCADCData,12
00cfee 940e e400 	CALL __PUTPARD1
                +
00cff0 91e0 155c+LDS R30 , _iTCVoltData + ( 12 )
00cff2 91f0 155d+LDS R31 , _iTCVoltData + ( 12 ) + 1
00cff4 9160 155e+LDS R22 , _iTCVoltData + ( 12 ) + 2
00cff6 9170 155f+LDS R23 , _iTCVoltData + ( 12 ) + 3
                 	__GETD1MN _iTCVoltData,12
00cff8 940e e400 	CALL __PUTPARD1
                +
00cffa 91e0 1574+LDS R30 , _iTCADCData + ( 16 )
00cffc 91f0 1575+LDS R31 , _iTCADCData + ( 16 ) + 1
00cffe 9160 1576+LDS R22 , _iTCADCData + ( 16 ) + 2
00d000 9170 1577+LDS R23 , _iTCADCData + ( 16 ) + 3
                 	__GETD1MN _iTCADCData,16
00d002 940e e400 	CALL __PUTPARD1
                +
00d004 91e0 1560+LDS R30 , _iTCVoltData + ( 16 )
00d006 91f0 1561+LDS R31 , _iTCVoltData + ( 16 ) + 1
00d008 9160 1562+LDS R22 , _iTCVoltData + ( 16 ) + 2
00d00a 9170 1563+LDS R23 , _iTCVoltData + ( 16 ) + 3
                 	__GETD1MN _iTCVoltData,16
00d00c 940e e400 	CALL __PUTPARD1
00d00e e288      	LDI  R24,40
00d00f 940e 9ef8 	CALL _printDebug
00d011 96ac      	ADIW R28,44
00d012 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x213:
00d013 01df      	MOVW R26,R30
00d014 01cb      	MOVW R24,R22
                +
00d015 e4e2     +LDI R30 , LOW ( 0x3FD56042 )
00d016 e6f0     +LDI R31 , HIGH ( 0x3FD56042 )
00d017 ed65     +LDI R22 , BYTE3 ( 0x3FD56042 )
00d018 e37f     +LDI R23 , BYTE4 ( 0x3FD56042 )
                 	__GETD1N 0x3FD56042
00d019 940e e417 	CALL __SWAPD12
00d01b 940e e14a 	CALL __SUBF12
00d01d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x214:
00d01e 940e c6f4 	CALL SUBOPT_0xA8
00d020 940e e3fb 	CALL __PUTDZ20
00d022 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x215:
                +
00d023 e1e2     +LDI R30 , LOW ( 0xBFC08312 )
00d024 e8f3     +LDI R31 , HIGH ( 0xBFC08312 )
00d025 ec60     +LDI R22 , BYTE3 ( 0xBFC08312 )
00d026 eb7f     +LDI R23 , BYTE4 ( 0xBFC08312 )
                 	__GETD1N 0xBFC08312
00d027 940e e234 	CALL __CMPF12
00d029 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x216:
00d02a df20      	RCALL SUBOPT_0x208
00d02b 940e 6b60 	CALL _updateSensorADC
00d02d df60      	RCALL SUBOPT_0x20E
00d02e 940c c3bd 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x217:
00d030 df5d      	RCALL SUBOPT_0x20E
00d031 940c c3bd 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x218:
00d033 df5a      	RCALL SUBOPT_0x20E
00d034 e7a8      	LDI  R26,LOW(_t_S00D0002000)
00d035 e1b5      	LDI  R27,HIGH(_t_S00D0002000)
00d036 940e e2a7 	CALL __LSLW2
00d038 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x219:
                +
00d039 e0a5     +LDI R26 , LOW ( 0x5 )
00d03a e0b0     +LDI R27 , HIGH ( 0x5 )
00d03b e080     +LDI R24 , BYTE3 ( 0x5 )
00d03c e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00d03d 940c 4217 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x21A:
00d03f df4e      	RCALL SUBOPT_0x20E
00d040 56ef      	SUBI R30,LOW(-_steadyState_S00D0002000)
00d041 4efa      	SBCI R31,HIGH(-_steadyState_S00D0002000)
00d042 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x21B:
                +
00d043 01de     +MOVW R26 , R28
00d044 5aa8     +SUBI R26 , LOW ( - 88 )
00d045 4fbf     +SBCI R27 , HIGH ( - 88 )
00d046 900d     +LD R0 , X +
00d047 91bc     +LD R27 , X
00d048 2da0     +MOV R26 , R0
                 	__GETW2SX 88
00d049 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x21C:
                +
00d04a 01fe     +MOVW R30 , R28
00d04b 5ae8     +SUBI R30 , LOW ( - 88 )
00d04c 4fff     +SBCI R31 , HIGH ( - 88 )
00d04d 9001     +LD R0 , Z +
00d04e 81f0     +LD R31 , Z
00d04f 2de0     +MOV R30 , R0
                 	__GETW1SX 88
                +
00d050 8314     +STD Z + 4 , R17
                 	__PUTBZR 17,4
00d051 efee      	LDI  R30,LOW(65534)
00d052 efff      	LDI  R31,HIGH(65534)
00d053 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:137 WORDS
                 SUBOPT_0x21D:
00d054 e0f0      	LDI  R31,0
00d055 30e1      	CPI  R30,LOW(0x1)
00d056 e0a0      	LDI  R26,HIGH(0x1)
00d057 07fa      	CPC  R31,R26
00d058 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x21E:
                +
00d059 01de     +MOVW R26 , R28
00d05a 5ca0     +SUBI R26 , LOW ( - 64 )
00d05b 4fbf     +SBCI R27 , HIGH ( - 64 )
00d05c 900d     +LD R0 , X +
00d05d 901d     +LD R1 , X +
00d05e 918d     +LD R24 , X +
00d05f 919c     +LD R25 , X
00d060 01d0     +MOVW R26 , R0
                 	__GETD2SX 64
00d061 2766      	CLR  R22
00d062 2777      	CLR  R23
00d063 940e e258 	CALL __ADDD12
                +
00d065 01de     +MOVW R26 , R28
00d066 5ca0     +SUBI R26 , LOW ( - 64 )
00d067 4fbf     +SBCI R27 , HIGH ( - 64 )
00d068 93ed     +ST X + , R30
00d069 93fd     +ST X + , R31
00d06a 936d     +ST X + , R22
00d06b 937c     +ST X , R23
                 	__PUTD1SX 64
00d06c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x21F:
00d06d df0a      	RCALL SUBOPT_0x20C
00d06e 940e e400 	CALL __PUTPARD1
00d070 e1ae      	LDI  R26,LOW(30)
00d071 e0b0      	LDI  R27,0
00d072 940e a18f 	CALL _iAD595ADCToTemp
00d074 940c c886 	JMP SUBOPT_0xEA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x220:
00d076 df17      	RCALL SUBOPT_0x20E
00d077 eeaa      	LDI  R26,LOW(_epTempRef1)
00d078 e0b5      	LDI  R27,HIGH(_epTempRef1)
00d079 940e e2a7 	CALL __LSLW2
00d07b 0fae      	ADD  R26,R30
00d07c 1fbf      	ADC  R27,R31
00d07d 940e e424 	CALL __EEPROMRDD
00d07f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x221:
00d080 df0d      	RCALL SUBOPT_0x20E
00d081 eda6      	LDI  R26,LOW(_epADCRef1)
00d082 e0b5      	LDI  R27,HIGH(_epADCRef1)
00d083 940e e2a7 	CALL __LSLW2
00d085 0fae      	ADD  R26,R30
00d086 1fbf      	ADC  R27,R31
00d087 940e e424 	CALL __EEPROMRDD
00d089 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x222:
00d08a 940e e417 	CALL __SWAPD12
00d08c 940e e14a 	CALL __SUBF12
00d08e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x223:
00d08f eeaa      	LDI  R26,LOW(_epTempRef1)
00d090 e0b5      	LDI  R27,HIGH(_epTempRef1)
00d091 940e e2a7 	CALL __LSLW2
00d093 0fae      	ADD  R26,R30
00d094 1fbf      	ADC  R27,R31
00d095 940e e424 	CALL __EEPROMRDD
00d097 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x224:
                +
00d098 01fe     +MOVW R30 , R28
00d099 5be8     +SUBI R30 , LOW ( - 72 )
00d09a 4fff     +SBCI R31 , HIGH ( - 72 )
00d09b 9001     +LD R0 , Z +
00d09c 9011     +LD R1 , Z +
00d09d 9161     +LD R22 , Z +
00d09e 8170     +LD R23 , Z
00d09f 01f0     +MOVW R30 , R0
                 	__GETD1SX 72
00d0a0 940e e400 	CALL __PUTPARD1
00d0a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x225:
                +
00d0a3 adec     +LDD R30 , Y + 60
00d0a4 adfd     +LDD R31 , Y + 60 + 1
00d0a5 ad6e     +LDD R22 , Y + 60 + 2
00d0a6 ad7f     +LDD R23 , Y + 60 + 3
                 	__GETD1S 60
00d0a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x226:
                +
00d0a8 eaaf     +LDI R26 , LOW ( 0xBDE425AF )
00d0a9 e2b5     +LDI R27 , HIGH ( 0xBDE425AF )
00d0aa ee84     +LDI R24 , BYTE3 ( 0xBDE425AF )
00d0ab eb9d     +LDI R25 , BYTE4 ( 0xBDE425AF )
                 	__GETD2N 0xBDE425AF
00d0ac 940e e1a1 	CALL __MULF12
00d0ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x227:
00d0af dede      	RCALL SUBOPT_0x20E
00d0b0 ebad      	LDI  R26,LOW(_epFactor_C)
00d0b1 e0b5      	LDI  R27,HIGH(_epFactor_C)
00d0b2 940e e2a7 	CALL __LSLW2
00d0b4 0fae      	ADD  R26,R30
00d0b5 1fbf      	ADC  R27,R31
00d0b6 940e e424 	CALL __EEPROMRDD
00d0b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x228:
                +
00d0b9 eea9     +LDI R26 , LOW ( 0x3A25EFE9 )
00d0ba eebf     +LDI R27 , HIGH ( 0x3A25EFE9 )
00d0bb e285     +LDI R24 , BYTE3 ( 0x3A25EFE9 )
00d0bc e39a     +LDI R25 , BYTE4 ( 0x3A25EFE9 )
                 	__GETD2N 0x3A25EFE9
00d0bd 940e e1a1 	CALL __MULF12
00d0bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x229:
                +
00d0c0 eda5     +LDI R26 , LOW ( 0x3E2603D5 )
00d0c1 e0b3     +LDI R27 , HIGH ( 0x3E2603D5 )
00d0c2 e286     +LDI R24 , BYTE3 ( 0x3E2603D5 )
00d0c3 e39e     +LDI R25 , BYTE4 ( 0x3E2603D5 )
                 	__GETD2N 0x3E2603D5
00d0c4 940e e1a1 	CALL __MULF12
00d0c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22A:
00d0c7 df7b      	RCALL SUBOPT_0x21B
00d0c8 940e e3db 	CALL __PUTDP1
00d0ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22B:
00d0cb 940e e0e0 	CALL __CFD1
00d0cd 940e e400 	CALL __PUTPARD1
00d0cf 940c c59e 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22C:
                +
00d0d1 afe8     +STD Y + 56 , R30
00d0d2 aff9     +STD Y + 56 + 1 , R31
00d0d3 af6a     +STD Y + 56 + 2 , R22
00d0d4 af7b     +STD Y + 56 + 3 , R23
                 	__PUTD1S 56
00d0d5 deb8      	RCALL SUBOPT_0x20E
00d0d6 e0a3      	LDI  R26,LOW(_epADCRef2)
00d0d7 e0b6      	LDI  R27,HIGH(_epADCRef2)
00d0d8 940e e2a7 	CALL __LSLW2
00d0da 0fae      	ADD  R26,R30
00d0db 1fbf      	ADC  R27,R31
00d0dc 940e e424 	CALL __EEPROMRDD
00d0de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22D:
                +
00d0df a7ec     +STD Y + 44 , R30
00d0e0 a7fd     +STD Y + 44 + 1 , R31
00d0e1 a76e     +STD Y + 44 + 2 , R22
00d0e2 a77f     +STD Y + 44 + 3 , R23
                 	__PUTD1S 44
00d0e3 deaa      	RCALL SUBOPT_0x20E
00d0e4 e1a7      	LDI  R26,LOW(_epTempRef2)
00d0e5 e0b6      	LDI  R27,HIGH(_epTempRef2)
00d0e6 940e e2a7 	CALL __LSLW2
00d0e8 0fae      	ADD  R26,R30
00d0e9 1fbf      	ADC  R27,R31
00d0ea 940e e424 	CALL __EEPROMRDD
                +
00d0ec a7e8     +STD Y + 40 , R30
00d0ed a7f9     +STD Y + 40 + 1 , R31
00d0ee a76a     +STD Y + 40 + 2 , R22
00d0ef a77b     +STD Y + 40 + 3 , R23
                 	__PUTD1S 40
00d0f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22E:
00d0f1 de9c      	RCALL SUBOPT_0x20E
00d0f2 eaa9      	LDI  R26,LOW(_epFactor_B)
00d0f3 e0b5      	LDI  R27,HIGH(_epFactor_B)
00d0f4 940e e2a7 	CALL __LSLW2
00d0f6 0fae      	ADD  R26,R30
00d0f7 1fbf      	ADC  R27,R31
00d0f8 940e e424 	CALL __EEPROMRDD
00d0fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22F:
00d0fb e3a0      	LDI  R26,LOW(_epADCRef3)
00d0fc e0b6      	LDI  R27,HIGH(_epADCRef3)
00d0fd 940e e2a7 	CALL __LSLW2
00d0ff 0fae      	ADD  R26,R30
00d100 1fbf      	ADC  R27,R31
00d101 940e e424 	CALL __EEPROMRDD
00d103 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x230:
00d104 e4a4      	LDI  R26,LOW(_epTempRef3)
00d105 e0b6      	LDI  R27,HIGH(_epTempRef3)
00d106 940e e2a7 	CALL __LSLW2
00d108 0fae      	ADD  R26,R30
00d109 1fbf      	ADC  R27,R31
00d10a 940e e424 	CALL __EEPROMRDD
00d10c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x231:
                +
00d10d ade8     +LDD R30 , Y + 56
00d10e adf9     +LDD R31 , Y + 56 + 1
00d10f ad6a     +LDD R22 , Y + 56 + 2
00d110 ad7b     +LDD R23 , Y + 56 + 3
                 	__GETD1S 56
00d111 940e e400 	CALL __PUTPARD1
00d113 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x232:
                +
00d114 8da8     +LDD R26 , Y + 24
00d115 8db9     +LDD R27 , Y + 24 + 1
00d116 8d8a     +LDD R24 , Y + 24 + 2
00d117 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00d118 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x233:
                +
00d119 89ac     +LDD R26 , Y + 20
00d11a 89bd     +LDD R27 , Y + 20 + 1
00d11b 898e     +LDD R24 , Y + 20 + 2
00d11c 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00d11d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x234:
                +
00d11e 89a8     +LDD R26 , Y + 16
00d11f 89b9     +LDD R27 , Y + 16 + 1
00d120 898a     +LDD R24 , Y + 16 + 2
00d121 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00d122 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x235:
00d123 e9a5      	LDI  R26,LOW(_epFactor_A)
00d124 e0b5      	LDI  R27,HIGH(_epFactor_A)
00d125 940e e2a7 	CALL __LSLW2
00d127 0fae      	ADD  R26,R30
00d128 1fbf      	ADC  R27,R31
00d129 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x236:
00d12a 81ae      	LDD  R26,Y+6
00d12b 81bf      	LDD  R27,Y+6+1
00d12c 0fae      	ADD  R26,R30
00d12d 1fbf      	ADC  R27,R31
00d12e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x237:
00d12f 0fae      	ADD  R26,R30
00d130 1fbf      	ADC  R27,R31
00d131 91ac      	LD   R26,X
00d132 30a1      	CPI  R26,LOW(0x1)
00d133 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x238:
00d134 e0e5      	LDI  R30,LOW(5)
00d135 940e e31e 	CALL __MULB1W2U
                +
00d137 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
00d138 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
00d139 81e0      	LD   R30,Z
00d13a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x239:
00d13b 27ff      	CLR  R31
00d13c 2766      	CLR  R22
00d13d 2777      	CLR  R23
00d13e 940c c34d 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23A:
00d140 81ec      	LDD  R30,Y+4
00d141 81fd      	LDD  R31,Y+4+1
00d142 940c c3bd 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23B:
                +
00d144 e0e0     +LDI R30 , LOW ( 0x0 )
00d145 e0f0     +LDI R31 , HIGH ( 0x0 )
00d146 e060     +LDI R22 , BYTE3 ( 0x0 )
00d147 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d148 940e e438 	CALL __EEPROMWRD
00d14a 81ec      	LDD  R30,Y+4
00d14b 81fd      	LDD  R31,Y+4+1
00d14c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x23C:
00d14d eaa9      	LDI  R26,LOW(_epFactor_B)
00d14e e0b5      	LDI  R27,HIGH(_epFactor_B)
00d14f 940e e2a7 	CALL __LSLW2
00d151 0fae      	ADD  R26,R30
00d152 1fbf      	ADC  R27,R31
00d153 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23D:
00d154 ebad      	LDI  R26,LOW(_epFactor_C)
00d155 e0b5      	LDI  R27,HIGH(_epFactor_C)
00d156 ce4c      	RJMP SUBOPT_0x211
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23E:
                +
00d157 e0e0     +LDI R30 , LOW ( 0x0 )
00d158 e0f0     +LDI R31 , HIGH ( 0x0 )
00d159 e060     +LDI R22 , BYTE3 ( 0x0 )
00d15a e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d15b 940e e438 	CALL __EEPROMWRD
00d15d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x23F:
00d15e 89e8      	LDD  R30,Y+16
00d15f 89f9      	LDD  R31,Y+16+1
00d160 eda6      	LDI  R26,LOW(_epADCRef1)
00d161 e0b5      	LDI  R27,HIGH(_epADCRef1)
00d162 940e e2a7 	CALL __LSLW2
00d164 0fae      	ADD  R26,R30
00d165 1fbf      	ADC  R27,R31
00d166 940e e424 	CALL __EEPROMRDD
00d168 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x240:
00d169 89a8      	LDD  R26,Y+16
00d16a 89b9      	LDD  R27,Y+16+1
00d16b 5aa8      	SUBI R26,LOW(-_epCalType)
00d16c 4fb9      	SBCI R27,HIGH(-_epCalType)
00d16d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x241:
                +
00d16e eaef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 551 ) )
00d16f e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 551 ) )
00d170 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 551 ) )
00d171 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 551 ) )
                 	__POINTD1FN _0x1A0000,551
00d172 940c c87c 	JMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x242:
00d174 ebad      	LDI  R26,LOW(_epFactor_C)
00d175 e0b5      	LDI  R27,HIGH(_epFactor_C)
00d176 940e e2a7 	CALL __LSLW2
00d178 0fae      	ADD  R26,R30
00d179 1fbf      	ADC  R27,R31
00d17a c92c      	RJMP SUBOPT_0x14C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x243:
00d17b 89e8      	LDD  R30,Y+16
00d17c 89f9      	LDD  R31,Y+16+1
00d17d e1a7      	LDI  R26,LOW(_epTempRef2)
00d17e e0b6      	LDI  R27,HIGH(_epTempRef2)
00d17f 940e e2a7 	CALL __LSLW2
00d181 0fae      	ADD  R26,R30
00d182 1fbf      	ADC  R27,R31
00d183 940e e424 	CALL __EEPROMRDD
00d185 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x244:
00d186 89e8      	LDD  R30,Y+16
00d187 89f9      	LDD  R31,Y+16+1
00d188 e0a3      	LDI  R26,LOW(_epADCRef2)
00d189 e0b6      	LDI  R27,HIGH(_epADCRef2)
00d18a 940e e2a7 	CALL __LSLW2
00d18c 0fae      	ADD  R26,R30
00d18d 1fbf      	ADC  R27,R31
00d18e 940e e424 	CALL __EEPROMRDD
00d190 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x245:
                +
00d191 efe7     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 623 ) )
00d192 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 623 ) )
00d193 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 623 ) )
00d194 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 623 ) )
                 	__POINTD1FN _0x1A0000,623
00d195 940c c87c 	JMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x246:
00d197 940e e2a7 	CALL __LSLW2
00d199 0fae      	ADD  R26,R30
00d19a 1fbf      	ADC  R27,R31
00d19b 940e e424 	CALL __EEPROMRDD
00d19d 940e e400 	CALL __PUTPARD1
00d19f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x247:
00d1a0 940e e2a7 	CALL __LSLW2
00d1a2 0fae      	ADD  R26,R30
00d1a3 1fbf      	ADC  R27,R31
00d1a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x248:
00d1a5 940e e400 	CALL __PUTPARD1
00d1a7 8de8      	LDD  R30,Y+24
00d1a8 8df9      	LDD  R31,Y+24+1
00d1a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x249:
00d1aa e0e2      	LDI  R30,LOW(2)
00d1ab 93ea      	ST   -Y,R30
00d1ac 01de      	MOVW R26,R28
00d1ad 961b      	ADIW R26,11
00d1ae 940c a4f0 	JMP  _ftoa
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24A:
                +
00d1b0 ece8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 832 ) )
00d1b1 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 832 ) )
00d1b2 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 832 ) )
00d1b3 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 832 ) )
                 	__POINTD1FN _0x1A0000,832
00d1b4 940e e400 	CALL __PUTPARD1
00d1b6 e080      	LDI  R24,0
00d1b7 940e c186 	CALL _sprintf
00d1b9 9626      	ADIW R28,6
00d1ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24B:
                +
00d1bb e9e9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1041 ) )
00d1bc e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1041 ) )
00d1bd e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1041 ) )
00d1be e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1041 ) )
                 	__POINTD1FN _0x1A0000,1041
00d1bf 940e e400 	CALL __PUTPARD1
00d1c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24C:
00d1c2 01de      	MOVW R26,R28
00d1c3 9616      	ADIW R26,6
00d1c4 940c a81c 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24D:
00d1c6 53e0      	SUBI R30,LOW(48)
                +
00d1c7 89a8     +LDD R26 , Y + 16
00d1c8 89b9     +LDD R27 , Y + 16 + 1
00d1c9 9612     +ADIW R26 , 2
00d1ca 93ec     +ST X , R30
                 	__PUTB1SNS 16,2
00d1cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x24E:
00d1cc 53e0      	SUBI R30,LOW(48)
                +
00d1cd 89a8     +LDD R26 , Y + 16
00d1ce 89b9     +LDD R27 , Y + 16 + 1
00d1cf 9613     +ADIW R26 , 3
00d1d0 93ec     +ST X , R30
                 	__PUTB1SNS 16,3
00d1d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x24F:
00d1d2 53e0      	SUBI R30,LOW(48)
                +
00d1d3 89a8     +LDD R26 , Y + 16
00d1d4 89b9     +LDD R27 , Y + 16 + 1
00d1d5 9614     +ADIW R26 , 4
00d1d6 93ec     +ST X , R30
                 	__PUTB1SNS 16,4
00d1d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x250:
00d1d8 53e0      	SUBI R30,LOW(48)
                +
00d1d9 89a8     +LDD R26 , Y + 16
00d1da 89b9     +LDD R27 , Y + 16 + 1
00d1db 9615     +ADIW R26 , 5
00d1dc 93ec     +ST X , R30
                 	__PUTB1SNS 16,5
00d1dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x251:
00d1de 89a8      	LDD  R26,Y+16
00d1df 89b9      	LDD  R27,Y+16+1
00d1e0 9611      	ADIW R26,1
00d1e1 e0e0      	LDI  R30,LOW(0)
00d1e2 93ec      	ST   X,R30
00d1e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x252:
                +
00d1e4 e0e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1146 ) )
00d1e5 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1146 ) )
00d1e6 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1146 ) )
00d1e7 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1146 ) )
                 	__POINTD1FN _0x1A0000,1146
00d1e8 940e e400 	CALL __PUTPARD1
00d1ea 01fe      	MOVW R30,R28
00d1eb 963a      	ADIW R30,10
00d1ec 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x253:
00d1ee e0e0      	LDI  R30,LOW(0)
00d1ef 83e8      	ST   Y,R30
00d1f0 83e9      	STD  Y+1,R30
00d1f1 83ea      	STD  Y+2,R30
00d1f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x254:
00d1f3 940e e400 	CALL __PUTPARD1
00d1f5 89ea      	LDD  R30,Y+18
00d1f6 89fb      	LDD  R31,Y+18+1
00d1f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x255:
00d1f8 9fea      	MUL  R30,R26
00d1f9 01f0      	MOVW R30,R0
00d1fa 940e e2dd 	CALL __CWD1
00d1fc 940e e117 	CALL __CDF1
00d1fe 940e c4dc 	CALL SUBOPT_0x59
00d200 940e e151 	CALL __ADDF12
00d202 940e c73c 	CALL SUBOPT_0xB6
00d204 85ea      	LDD  R30,Y+10
00d205 85fb      	LDD  R31,Y+10+1
00d206 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x256:
00d207 940e c4dc 	CALL SUBOPT_0x59
00d209 940e e151 	CALL __ADDF12
00d20b 940e c73c 	CALL SUBOPT_0xB6
00d20d 85ea      	LDD  R30,Y+10
00d20e 85fb      	LDD  R31,Y+10+1
00d20f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x257:
00d210 e0f0      	LDI  R31,0
00d211 940e e2dd 	CALL __CWD1
00d213 940e e117 	CALL __CDF1
00d215 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x258:
00d216 940e e2dd 	CALL __CWD1
00d218 940e e400 	CALL __PUTPARD1
00d21a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x259:
00d21b e0e0      	LDI  R30,LOW(0)
                +
00d21c 83ea     +STD Y + 2 , R30
00d21d 83eb     +STD Y + 2 + 1 , R30
00d21e 83ec     +STD Y + 2 + 2 , R30
00d21f 83ed     +STD Y + 2 + 3 , R30
                 	__CLRD1S 2
                +
00d220 e000     +LDI R16 , LOW ( 0 )
00d221 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00d222 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x25A:
00d223 85ae      	LDD  R26,Y+14
00d224 5fa8      	SUBI R26,-LOW(8)
00d225 940e 446f 	CALL _read_adc
00d227 940e c732 	CALL SUBOPT_0xB4
00d229 2766      	CLR  R22
00d22a 2777      	CLR  R23
00d22b 940e e258 	CALL __ADDD12
00d22d 940c c728 	JMP SUBOPT_0xB2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25B:
00d22f 85ee      	LDD  R30,Y+14
00d230 85ff      	LDD  R31,Y+14+1
00d231 eda6      	LDI  R26,LOW(_epADCRef1)
00d232 e0b5      	LDI  R27,HIGH(_epADCRef1)
00d233 cd6f      	RJMP SUBOPT_0x211
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25C:
00d234 e1ae      	LDI  R26,LOW(30)
00d235 e0b0      	LDI  R27,0
00d236 940c a18f 	JMP  _iAD595ADCToTemp
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25D:
00d238 010f      	MOVW R0,R30
00d239 85ee      	LDD  R30,Y+14
00d23a 85ff      	LDD  R31,Y+14+1
00d23b 940c c3bd 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25E:
00d23d 940e e2a7 	CALL __LSLW2
00d23f 0fae      	ADD  R26,R30
00d240 1fbf      	ADC  R27,R31
00d241 940e c737 	CALL SUBOPT_0xB5
00d243 940e e438 	CALL __EEPROMWRD
00d245 85ae      	LDD  R26,Y+14
00d246 85bf      	LDD  R27,Y+14+1
00d247 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25F:
00d248 940e e448 	CALL __EEPROMWRB
00d24a 85ae      	LDD  R26,Y+14
00d24b 85bf      	LDD  R27,Y+14+1
00d24c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x260:
00d24d 85ee      	LDD  R30,Y+14
00d24e 85ff      	LDD  R31,Y+14+1
00d24f e0a3      	LDI  R26,LOW(_epADCRef2)
00d250 e0b6      	LDI  R27,HIGH(_epADCRef2)
00d251 cd51      	RJMP SUBOPT_0x211
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x261:
00d252 85ee      	LDD  R30,Y+14
00d253 85ff      	LDD  R31,Y+14+1
00d254 e3a0      	LDI  R26,LOW(_epADCRef3)
00d255 e0b6      	LDI  R27,HIGH(_epADCRef3)
00d256 cd4c      	RJMP SUBOPT_0x211
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x262:
00d257 01f5      	MOVW R30,R10
00d258 e0aa      	LDI  R26,LOW(10)
00d259 e0b0      	LDI  R27,HIGH(10)
00d25a 940e e2f6 	CALL __MULW12U
00d25c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x263:
00d25d 940e c4dc 	CALL SUBOPT_0x59
00d25f 940e e3fb 	CALL __PUTDZ20
00d261 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x264:
00d262 940e e3fb 	CALL __PUTDZ20
00d264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x265:
00d265 e0ea      	LDI  R30,LOW(10)
00d266 e0f0      	LDI  R31,HIGH(10)
00d267 940e e38d 	CALL __MODW21
00d269 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x266:
00d26a 01f6      	MOVW R30,R12
00d26b e0aa      	LDI  R26,LOW(10)
00d26c e0b0      	LDI  R27,HIGH(10)
00d26d 940e e2f6 	CALL __MULW12U
00d26f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x267:
00d270 01df      	MOVW R26,R30
00d271 940e e3d0 	CALL __GETD1P
00d273 81ac      	LDD  R26,Y+4
00d274 81bd      	LDD  R27,Y+4+1
00d275 940e e3db 	CALL __PUTDP1
00d277 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x268:
00d278 93e0 1483 	STS  _batteryVolt,R30
00d27a 93f0 1484 	STS  _batteryVolt+1,R31
00d27c 9360 1485 	STS  _batteryVolt+2,R22
00d27e 9370 1486 	STS  _batteryVolt+3,R23
00d280 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x269:
                +
00d281 91e0 136b+LDS R30 , _env_config + ( 6 )
00d283 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00d285 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00d287 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00d289 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26A:
00d28a 70e4      	ANDI R30,LOW(0x4)
00d28b e0f0      	LDI  R31,0
00d28c 940e e2b0 	CALL __ASRW2
00d28e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x26B:
00d28f 91e0 146b 	LDS  R30,_sdFreeSpace
00d291 91f0 146c 	LDS  R31,_sdFreeSpace+1
00d293 9160 146d 	LDS  R22,_sdFreeSpace+2
00d295 9170 146e 	LDS  R23,_sdFreeSpace+3
00d297 940e e459 	CALL __CPD10
00d299 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26C:
00d29a 81e8      	LD   R30,Y
00d29b 81f9      	LDD  R31,Y+1
00d29c 59e1      	SUBI R30,LOW(-_sensorStatus)
00d29d 4efb      	SBCI R31,HIGH(-_sensorStatus)
00d29e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26D:
00d29f 81ea      	LDD  R30,Y+2
00d2a0 81fb      	LDD  R31,Y+2+1
00d2a1 5eea      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00d2a2 4ef9      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00d2a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26E:
00d2a4 81ea      	LDD  R30,Y+2
00d2a5 81fb      	LDD  R31,Y+2+1
00d2a6 e0a2      	LDI  R26,LOW(_t_S00F0005000)
00d2a7 e1b6      	LDI  R27,HIGH(_t_S00F0005000)
00d2a8 940e e2a7 	CALL __LSLW2
00d2aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26F:
00d2ab e1ed      	LDI  R30,LOW(29)
00d2ac 940e e31e 	CALL __MULB1W2U
                +
00d2ae 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
00d2af 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
00d2b0 01df      	MOVW R26,R30
00d2b1 940c c33e 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x270:
00d2b3 81aa      	LDD  R26,Y+2
00d2b4 81bb      	LDD  R27,Y+2+1
00d2b5 58ac      	SUBI R26,LOW(-_dataStatus)
00d2b6 4ebb      	SBCI R27,HIGH(-_dataStatus)
00d2b7 91ec      	LD   R30,X
00d2b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x271:
00d2b9 81ea      	LDD  R30,Y+2
00d2ba 81fb      	LDD  R31,Y+2+1
00d2bb 5ee5      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00d2bc 4ef9      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00d2bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x272:
00d2be e1ed      	LDI  R30,LOW(29)
00d2bf 940e e31e 	CALL __MULB1W2U
                +
00d2c1 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00d2c2 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
00d2c3 01df      	MOVW R26,R30
00d2c4 940c c33e 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x273:
00d2c6 940e e2a7 	CALL __LSLW2
00d2c8 940c c339 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x274:
00d2ca 940e e2a7 	CALL __LSLW2
00d2cc 940c c32e 	JMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x275:
                +
00d2ce ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00d2cf e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00d2d0 0fe0      	ADD  R30,R16
00d2d1 1ff1      	ADC  R31,R17
00d2d2 81e0      	LD   R30,Z
00d2d3 30e0      	CPI  R30,0
00d2d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x276:
00d2d5 81aa      	LDD  R26,Y+2
00d2d6 81bb      	LDD  R27,Y+2+1
00d2d7 01cd      	MOVW R24,R26
00d2d8 916d      	LD   R22,X+
00d2d9 917c      	LD   R23,X
00d2da e0e4      	LDI  R30,LOW(4)
00d2db e0f0      	LDI  R31,HIGH(4)
00d2dc 1be0      	SUB  R30,R16
00d2dd 0bf1      	SBC  R31,R17
00d2de e0a1      	LDI  R26,LOW(1)
00d2df e0b0      	LDI  R27,HIGH(1)
00d2e0 940e e282 	CALL __LSLW12
00d2e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x277:
00d2e3 91a0 16a4 	LDS  R26,_last_wr_eventQ
00d2e5 91b0 16a5 	LDS  R27,_last_wr_eventQ+1
00d2e7 e0e6      	LDI  R30,LOW(6)
00d2e8 940e e31e 	CALL __MULB1W2U
00d2ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x278:
00d2eb 91a0 16a6 	LDS  R26,_last_rd_eventQ
00d2ed 91b0 16a7 	LDS  R27,_last_rd_eventQ+1
00d2ef e0e6      	LDI  R30,LOW(6)
00d2f0 940e e31e 	CALL __MULB1W2U
00d2f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x279:
00d2f3 81e0      	LD   R30,Z
00d2f4 81a8      	LD   R26,Y
00d2f5 81b9      	LDD  R27,Y+1
00d2f6 93ec      	ST   X,R30
00d2f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27A:
00d2f8 940e e477 	CALL __SAVELOCR4
                +
00d2fa e000     +LDI R16 , LOW ( 0 )
00d2fb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00d2fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27B:
00d2fd 0fa0      	ADD  R26,R16
00d2fe 1fb1      	ADC  R27,R17
00d2ff 91ec      	LD   R30,X
00d300 30e0      	CPI  R30,0
00d301 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27C:
00d302 93fa      	ST   -Y,R31
00d303 93ea      	ST   -Y,R30
                +
00d304 e0a3     +LDI R26 , LOW ( 0x3 )
00d305 e0b0     +LDI R27 , HIGH ( 0x3 )
00d306 e080     +LDI R24 , BYTE3 ( 0x3 )
00d307 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00d308 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27D:
00d309 81a8      	LD   R26,Y
00d30a 81b9      	LDD  R27,Y+1
00d30b 93ec      	ST   X,R30
00d30c e0e0      	LDI  R30,LOW(0)
00d30d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27E:
                +
00d30e 91a0 136b+LDS R26 , _env_config + ( 6 )
00d310 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
00d312 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
00d314 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
00d316 940e e465 	CALL __CPD02
00d318 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27F:
00d319 81a8      	LD   R26,Y
00d31a 81b9      	LDD  R27,Y+1
00d31b e0e0      	LDI  R30,LOW(0)
00d31c 93ec      	ST   X,R30
00d31d e0e1      	LDI  R30,LOW(1)
00d31e e0f0      	LDI  R31,HIGH(1)
00d31f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x280:
                +
00d320 91a0 1375+LDS R26 , _env_config + ( 16 )
00d322 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
00d324 940e e45d 	CALL __CPW02
00d326 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x281:
00d327 81ea      	LDD  R30,Y+2
00d328 81fb      	LDD  R31,Y+2+1
00d329 58e4      	SUBI R30,LOW(-_dinStatus)
00d32a 4efb      	SBCI R31,HIGH(-_dinStatus)
00d32b 81a0      	LD   R26,Z
00d32c 81ea      	LDD  R30,Y+2
00d32d 81fb      	LDD  R31,Y+2+1
00d32e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x282:
00d32f 81ea      	LDD  R30,Y+2
00d330 81fb      	LDD  R31,Y+2+1
00d331 52e8      	SUBI R30,LOW(-_t_flag_S0110006000)
00d332 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00d333 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x283:
00d334 81ea      	LDD  R30,Y+2
00d335 81fb      	LDD  R31,Y+2+1
00d336 58e4      	SUBI R30,LOW(-_dinStatus)
00d337 4efb      	SBCI R31,HIGH(-_dinStatus)
00d338 81e0      	LD   R30,Z
00d339 93ec      	ST   X,R30
00d33a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x284:
00d33b 93ba      	ST   -Y,R27
00d33c 93aa      	ST   -Y,R26
00d33d 81ea      	LDD  R30,Y+2
00d33e 81fb      	LDD  R31,Y+2+1
00d33f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x285:
00d340 81ea      	LDD  R30,Y+2
00d341 81fb      	LDD  R31,Y+2+1
00d342 59e1      	SUBI R30,LOW(-_sensorStatus)
00d343 4efb      	SBCI R31,HIGH(-_sensorStatus)
00d344 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x286:
00d345 81ea      	LDD  R30,Y+2
00d346 81fb      	LDD  R31,Y+2+1
00d347 51e0      	SUBI R30,LOW(-_t_flag_S0110007000)
00d348 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00d349 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x287:
00d34a 81ea      	LDD  R30,Y+2
00d34b 81fb      	LDD  R31,Y+2+1
00d34c edac      	LDI  R26,LOW(_t_S0110007000)
00d34d e1b6      	LDI  R27,HIGH(_t_S0110007000)
00d34e cf77      	RJMP SUBOPT_0x273
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x288:
00d34f 81ea      	LDD  R30,Y+2
00d350 81fb      	LDD  R31,Y+2+1
00d351 5fe2      	SUBI R30,LOW(-_t_flag_S0110008000)
00d352 4ef8      	SBCI R31,HIGH(-_t_flag_S0110008000)
00d353 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x289:
00d354 e088      	LDI  R24,8
00d355 940e 8079 	CALL _printOLED
00d357 962c      	ADIW R28,12
00d358 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28A:
                +
00d359 e0a5     +LDI R26 , 5
00d35a 9fa0     +MUL R26 , R16
00d35b 01f0     +MOVW R30 , R0
00d35c 9fa1     +MUL R26 , R17
00d35d 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,5
00d35e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x28B:
00d35f 940e e400 	CALL __PUTPARD1
00d361 01f8      	MOVW R30,R16
00d362 cbba      	RJMP SUBOPT_0x202
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28C:
00d363 940e e400 	CALL __PUTPARD1
00d365 cfee      	RJMP SUBOPT_0x289
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 118 TIMES, CODE SIZE REDUCTION:231 WORDS
                 SUBOPT_0x28D:
00d366 e084      	LDI  R24,4
00d367 940e 8079 	CALL _printOLED
00d369 9628      	ADIW R28,8
00d36a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28E:
00d36b 940e c62a 	CALL SUBOPT_0x8C
                +
00d36d e0e0     +LDI R30 , LOW ( 0x40400000 )
00d36e e0f0     +LDI R31 , HIGH ( 0x40400000 )
00d36f e460     +LDI R22 , BYTE3 ( 0x40400000 )
00d370 e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
00d371 940e e234 	CALL __CMPF12
00d373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28F:
00d374 940e c62a 	CALL SUBOPT_0x8C
                +
00d376 e3e3     +LDI R30 , LOW ( 0x40533333 )
00d377 e3f3     +LDI R31 , HIGH ( 0x40533333 )
00d378 e563     +LDI R22 , BYTE3 ( 0x40533333 )
00d379 e470     +LDI R23 , BYTE4 ( 0x40533333 )
                 	__GETD1N 0x40533333
00d37a 940e e234 	CALL __CMPF12
00d37c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x290:
00d37d 940e c62a 	CALL SUBOPT_0x8C
                +
00d37f eced     +LDI R30 , LOW ( 0x406CCCCD )
00d380 ecfc     +LDI R31 , HIGH ( 0x406CCCCD )
00d381 e66c     +LDI R22 , BYTE3 ( 0x406CCCCD )
00d382 e470     +LDI R23 , BYTE4 ( 0x406CCCCD )
                 	__GETD1N 0x406CCCCD
00d383 940e e234 	CALL __CMPF12
00d385 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x291:
00d386 940e c62a 	CALL SUBOPT_0x8C
                +
00d388 e0e0     +LDI R30 , LOW ( 0x40800000 )
00d389 e0f0     +LDI R31 , HIGH ( 0x40800000 )
00d38a e860     +LDI R22 , BYTE3 ( 0x40800000 )
00d38b e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
00d38c 940e e234 	CALL __CMPF12
00d38e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x292:
00d38f e080      	LDI  R24,0
00d390 940e 8079 	CALL _printOLED
00d392 9624      	ADIW R28,4
00d393 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x293:
00d394 940e e400 	CALL __PUTPARD1
00d396 81ec      	LDD  R30,Y+4
00d397 940c c525 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x294:
00d399 940e e254 	CALL __ADDW2R15
00d39b 940e e3d0 	CALL __GETD1P
00d39d 940e e400 	CALL __PUTPARD1
00d39f 01d8      	MOVW R26,R16
00d3a0 940c c1be 	JMP  _vsprintf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x295:
00d3a2 940e c4aa 	CALL SUBOPT_0x52
00d3a4 940e bbc6 	CALL _f_lseek
00d3a6 2f1e      	MOV  R17,R30
00d3a7 3010      	CPI  R17,0
00d3a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x296:
00d3a9 2fa1      	MOV  R26,R17
00d3aa 940e 80d9 	CALL _error
00d3ac efef      	LDI  R30,LOW(65535)
00d3ad efff      	LDI  R31,HIGH(65535)
00d3ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x297:
00d3af 93fa      	ST   -Y,R31
00d3b0 93ea      	ST   -Y,R30
00d3b1 01fe      	MOVW R30,R28
00d3b2 9633      	ADIW R30,3
00d3b3 93fa      	ST   -Y,R31
00d3b4 93ea      	ST   -Y,R30
00d3b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x298:
00d3b6 940e e400 	CALL __PUTPARD1
00d3b8 e4e7      	LDI  R30,LOW(_root_path)
00d3b9 e1f9      	LDI  R31,HIGH(_root_path)
00d3ba 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x299:
00d3bc 940e 80d9 	CALL _error
00d3be e0e0      	LDI  R30,LOW(0)
00d3bf 93e0 146b 	STS  _sdFreeSpace,R30
00d3c1 93e0 146c 	STS  _sdFreeSpace+1,R30
00d3c3 93e0 146d 	STS  _sdFreeSpace+2,R30
00d3c5 93e0 146e 	STS  _sdFreeSpace+3,R30
00d3c7 efef      	LDI  R30,LOW(65535)
00d3c8 efff      	LDI  R31,HIGH(65535)
00d3c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x29A:
00d3ca 81e2      	LDD  R30,Z+2
00d3cb e0f0      	LDI  R31,0
00d3cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x29B:
                +
00d3cd 81a9     +LDD R26 , Y + 1
00d3ce 81ba     +LDD R27 , Y + 1 + 1
00d3cf 818b     +LDD R24 , Y + 1 + 2
00d3d0 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00d3d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29C:
00d3d2 940e e2dd 	CALL __CWD1
00d3d4 940e e2fe 	CALL __MULD12U
00d3d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29D:
                +
00d3d7 eae0     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00d3d8 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00d3d9 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00d3da e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00d3db cfda      	RJMP SUBOPT_0x298
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x29E:
00d3dc 93fa      	ST   -Y,R31
00d3dd 93ea      	ST   -Y,R30
00d3de 01fe      	MOVW R30,R28
00d3df 9634      	ADIW R30,4
00d3e0 93fa      	ST   -Y,R31
00d3e1 93ea      	ST   -Y,R30
00d3e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x29F:
00d3e3 89ee      	LDD  R30,Y+22
00d3e4 89ff      	LDD  R31,Y+22+1
00d3e5 93fa      	ST   -Y,R31
00d3e6 93ea      	ST   -Y,R30
00d3e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A0:
00d3e8 01de      	MOVW R26,R28
00d3e9 961a      	ADIW R26,10
00d3ea 940e 8565 	CALL _LOG_getLastInsert
00d3ec 018f      	MOVW R16,R30
00d3ed 2311      	TST  R17
00d3ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A1:
00d3ef 940e c491 	CALL SUBOPT_0x4F
00d3f1 940e e400 	CALL __PUTPARD1
00d3f3 940c c467 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A2:
00d3f5 940e 85ed 	CALL _index2Addr
00d3f7 940c c6ef 	JMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A3:
00d3f9 940e c737 	CALL SUBOPT_0xB5
00d3fb 940e e400 	CALL __PUTPARD1
00d3fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A4:
00d3fe 940e c737 	CALL SUBOPT_0xB5
00d400 940c c7fa 	JMP SUBOPT_0xD3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x2A5:
00d402 93fa      	ST   -Y,R31
00d403 93ea      	ST   -Y,R30
00d404 940c c5a4 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2A6:
00d406 940e 80f9 	CALL _SD_writeData
00d408 018f      	MOVW R16,R30
00d409 2311      	TST  R17
00d40a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2A7:
00d40b 940e c737 	CALL SUBOPT_0xB5
                +
00d40d 5feb     +SUBI R30 , LOW ( - 5 )
00d40e 4fff     +SBCI R31 , HIGH ( - 5 )
00d40f 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00d410 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00d411 940e e400 	CALL __PUTPARD1
00d413 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A8:
00d414 940e c737 	CALL SUBOPT_0xB5
                +
00d416 5fe9     +SUBI R30 , LOW ( - 7 )
00d417 4fff     +SBCI R31 , HIGH ( - 7 )
00d418 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00d419 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00d41a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2A9:
00d41b 940e c804 	CALL SUBOPT_0xD5
00d41d 940e c75e 	CALL SUBOPT_0xBC
                +
00d41f 87ea     +STD Y + 10 , R30
00d420 87fb     +STD Y + 10 + 1 , R31
00d421 876c     +STD Y + 10 + 2 , R22
00d422 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d423 01df      	MOVW R26,R30
00d424 01cb      	MOVW R24,R22
00d425 940e 8580 	CALL _LOG_setLastInsert
00d427 018f      	MOVW R16,R30
00d428 2311      	TST  R17
00d429 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2AA:
00d42a 8de8      	LDD  R30,Y+24
00d42b 8df9      	LDD  R31,Y+24+1
00d42c 93fa      	ST   -Y,R31
00d42d 93ea      	ST   -Y,R30
00d42e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AB:
00d42f 01de      	MOVW R26,R28
00d430 961e      	ADIW R26,14
00d431 940e 8565 	CALL _LOG_getLastInsert
00d433 018f      	MOVW R16,R30
00d434 2311      	TST  R17
00d435 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AC:
00d436 01de      	MOVW R26,R28
00d437 961a      	ADIW R26,10
00d438 940e 85a1 	CALL _LOG_getLastSend
00d43a 018f      	MOVW R16,R30
00d43b 2311      	TST  R17
00d43c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AD:
                +
00d43d efee     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00d43e e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00d43f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00d440 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00d441 940c c62d 	JMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AE:
00d443 940e e400 	CALL __PUTPARD1
00d445 940e c827 	CALL SUBOPT_0xDC
00d447 940c c34d 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AF:
00d449 940e c815 	CALL SUBOPT_0xD9
00d44b 940e c810 	CALL SUBOPT_0xD8
00d44d 940e e470 	CALL __CPD21
00d44f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B0:
00d450 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00d451 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00d452 93fa      	ST   -Y,R31
00d453 93ea      	ST   -Y,R30
00d454 e0e1      	LDI  R30,LOW(1)
00d455 93ea      	ST   -Y,R30
00d456 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d457 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d458 93fa      	ST   -Y,R31
00d459 93ea      	ST   -Y,R30
00d45a e1a0      	LDI  R26,LOW(16)
00d45b e0b0      	LDI  R27,0
00d45c 940e 85ff 	CALL _LOG_createFile
00d45e 018f      	MOVW R16,R30
00d45f 2311      	TST  R17
00d460 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2B1:
00d461 940e 8150 	CALL _SD_readData
00d463 018f      	MOVW R16,R30
00d464 2311      	TST  R17
00d465 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2B2:
00d466 89ea      	LDD  R30,Y+18
00d467 89fb      	LDD  R31,Y+18+1
00d468 93fa      	ST   -Y,R31
00d469 93ea      	ST   -Y,R30
00d46a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B3:
00d46b 940e c491 	CALL SUBOPT_0x4F
00d46d 940e e400 	CALL __PUTPARD1
00d46f 940c c2b7 	JMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B4:
00d471 93fa      	ST   -Y,R31
00d472 93ea      	ST   -Y,R30
00d473 940c c59e 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B5:
00d475 940e c737 	CALL SUBOPT_0xB5
                +
00d477 5fe6     +SUBI R30 , LOW ( - 10 )
00d478 4fff     +SBCI R31 , HIGH ( - 10 )
00d479 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00d47a 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00d47b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B6:
00d47c ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00d47d e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00d47e 93fa      	ST   -Y,R31
00d47f 93ea      	ST   -Y,R30
00d480 e0e1      	LDI  R30,LOW(1)
00d481 93ea      	ST   -Y,R30
00d482 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d483 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d484 93fa      	ST   -Y,R31
00d485 93ea      	ST   -Y,R30
00d486 e1a0      	LDI  R26,LOW(16)
00d487 e0b0      	LDI  R27,0
00d488 940e 85ff 	CALL _LOG_createFile
00d48a 018f      	MOVW R16,R30
00d48b 2311      	TST  R17
00d48c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B7:
00d48d 81ec      	LDD  R30,Y+4
00d48e 81fd      	LDD  R31,Y+4+1
00d48f 93fa      	ST   -Y,R31
00d490 93ea      	ST   -Y,R30
00d491 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B8:
                +
00d492 e0e0     +LDI R30 , LOW ( 0x0 )
00d493 e0f0     +LDI R31 , HIGH ( 0x0 )
00d494 e060     +LDI R22 , BYTE3 ( 0x0 )
00d495 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d496 940e e400 	CALL __PUTPARD1
00d498 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B9:
                +
00d499 e0e4     +LDI R30 , LOW ( 0x4 )
00d49a e0f0     +LDI R31 , HIGH ( 0x4 )
00d49b e060     +LDI R22 , BYTE3 ( 0x4 )
00d49c e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00d49d 940e e400 	CALL __PUTPARD1
00d49f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2BA:
00d4a0 940e e400 	CALL __PUTPARD1
                +
00d4a2 01fe     +MOVW R30 , R28
00d4a3 5de5     +SUBI R30 , LOW ( - 555 )
00d4a4 4ffd     +SBCI R31 , HIGH ( - 555 )
00d4a5 9001     +LD R0 , Z +
00d4a6 81f0     +LD R31 , Z
00d4a7 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00d4a8 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2BB:
                +
00d4aa 01fe     +MOVW R30 , R28
00d4ab 5dec     +SUBI R30 , LOW ( - 548 )
00d4ac 4ffd     +SBCI R31 , HIGH ( - 548 )
00d4ad 9001     +LD R0 , Z +
00d4ae 81f0     +LD R31 , Z
00d4af 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00d4b0 93fa      	ST   -Y,R31
00d4b1 93ea      	ST   -Y,R30
                +
00d4b2 01de     +MOVW R26 , R28
00d4b3 5dac     +SUBI R26 , LOW ( - 548 )
00d4b4 4fbd     +SBCI R27 , HIGH ( - 548 )
00d4b5 900d     +LD R0 , X +
00d4b6 91bc     +LD R27 , X
00d4b7 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00d4b8 940c 9f7c 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2BC:
00d4ba ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d4bb e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d4bc 93fa      	ST   -Y,R31
00d4bd 93ea      	ST   -Y,R30
00d4be e1a0      	LDI  R26,LOW(16)
00d4bf e0b0      	LDI  R27,0
00d4c0 940e 85ff 	CALL _LOG_createFile
00d4c2 018f      	MOVW R16,R30
00d4c3 2311      	TST  R17
00d4c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2BD:
                +
00d4c5 e0e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00d4c6 e5fb     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00d4c7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00d4c8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00d4c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2BE:
00d4ca 940e e400 	CALL __PUTPARD1
00d4cc ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00d4cd e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00d4ce 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2BF:
00d4d0 01df      	MOVW R26,R30
00d4d1 940e e3d0 	CALL __GETD1P
00d4d3 81ae      	LDD  R26,Y+6
00d4d4 81bf      	LDD  R27,Y+6+1
00d4d5 940e e3db 	CALL __PUTDP1
00d4d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C0:
00d4d8 e0ab      	LDI  R26,LOW(11)
00d4d9 9f1a      	MUL  R17,R26
00d4da 01f0      	MOVW R30,R0
00d4db 52e8      	SUBI R30,LOW(-_dataLogQueue)
00d4dc 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00d4dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x2C1:
00d4de e0a0      	LDI  R26,LOW(0)
00d4df 83a0      	STD  Z+0,R26
00d4e0 e0ab      	LDI  R26,LOW(11)
00d4e1 9f1a      	MUL  R17,R26
00d4e2 01f0      	MOVW R30,R0
                +
00d4e3 52e7     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00d4e4 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00d4e5 940e c396 	CALL SUBOPT_0x2C
00d4e7 dd7a      	RCALL SUBOPT_0x264
00d4e8 e0ab      	LDI  R26,LOW(11)
00d4e9 9f1a      	MUL  R17,R26
00d4ea 01f0      	MOVW R30,R0
                +
00d4eb 52e3     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00d4ec 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00d4ed e0a0      	LDI  R26,LOW(0)
00d4ee e0b0      	LDI  R27,HIGH(0)
00d4ef 83a0      	STD  Z+0,R26
00d4f0 83b1      	STD  Z+1,R27
00d4f1 e0ab      	LDI  R26,LOW(11)
00d4f2 9f1a      	MUL  R17,R26
00d4f3 01f0      	MOVW R30,R0
                +
00d4f4 52e1     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00d4f5 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00d4f6 940e c396 	CALL SUBOPT_0x2C
00d4f8 cd69      	RJMP SUBOPT_0x264
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2C2:
                +
00d4f9 e0a7     +LDI R26 , 7
00d4fa 9fa0     +MUL R26 , R16
00d4fb 01f0     +MOVW R30 , R0
00d4fc 9fa1     +MUL R26 , R17
00d4fd 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00d4fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C3:
00d4ff e0a7      	LDI  R26,LOW(7)
00d500 9f1a      	MUL  R17,R26
00d501 01f0      	MOVW R30,R0
00d502 5be5      	SUBI R30,LOW(-_eventLogQueue)
00d503 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00d504 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2C4:
00d505 e0a0      	LDI  R26,LOW(0)
00d506 83a0      	STD  Z+0,R26
00d507 e0a7      	LDI  R26,LOW(7)
00d508 9f1a      	MUL  R17,R26
00d509 01f0      	MOVW R30,R0
00d50a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2C5:
                +
00d50b 5be4     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00d50c 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00d50d 940e c396 	CALL SUBOPT_0x2C
00d50f dd52      	RCALL SUBOPT_0x264
00d510 e0a7      	LDI  R26,LOW(7)
00d511 9f1a      	MUL  R17,R26
00d512 01f0      	MOVW R30,R0
                +
00d513 5be0     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00d514 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00d515 cfef      	RJMP SUBOPT_0x2C4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x2C6:
00d516 e0e1      	LDI  R30,LOW(1)
00d517 93e0 14df 	STS  _currentPage,R30
00d519 e0e0      	LDI  R30,LOW(0)
00d51a 93e0 1a47 	STS  _cursor_S0160000000,R30
                +
00d51c ecec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d51d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d51e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d51f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d520 940e e400 	CALL __PUTPARD1
00d522 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d524 940e e2d7 	CALL __CBD1
00d526 940e e400 	CALL __PUTPARD1
00d528 ce3d      	RJMP SUBOPT_0x28D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
                 SUBOPT_0x2C7:
                +
00d529 01fe     +MOVW R30 , R28
00d52a 5aea     +SUBI R30 , LOW ( - 86 )
00d52b 4fff     +SBCI R31 , HIGH ( - 86 )
00d52c 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d52d cb26      	RJMP SUBOPT_0x21D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:93 WORDS
                 SUBOPT_0x2C8:
00d52e 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d530 50a1      	SUBI R26,LOW(1)
00d531 93a0 1a47 	STS  _cursor_S0160000000,R26
00d533 30a0      	CPI  R26,0
00d534 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:218 WORDS
                 SUBOPT_0x2C9:
                +
00d535 ede5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 9 ) )
00d536 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 9 ) )
00d537 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 9 ) )
00d538 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 9 ) )
                 	__POINTD1FN _0x2C0000,9
00d539 940e e400 	CALL __PUTPARD1
00d53b 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d53d 940e e2d7 	CALL __CBD1
00d53f 940e e400 	CALL __PUTPARD1
00d541 ce24      	RJMP SUBOPT_0x28D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x2CA:
00d542 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d544 5faf      	SUBI R26,-LOW(1)
00d545 93a0 1a47 	STS  _cursor_S0160000000,R26
00d547 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x2CB:
00d548 e0e2      	LDI  R30,LOW(2)
00d549 93e0 14df 	STS  _currentPage,R30
00d54b e0e0      	LDI  R30,LOW(0)
00d54c 93e0 1a47 	STS  _cursor_S0160000000,R30
                +
00d54e edeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d54f e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d550 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d551 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d552 940e e400 	CALL __PUTPARD1
00d554 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d556 940e e2d7 	CALL __CBD1
00d558 940e e400 	CALL __PUTPARD1
00d55a ce0b      	RJMP SUBOPT_0x28D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x2CC:
00d55b 93e0 14df 	STS  _currentPage,R30
00d55d e0e0      	LDI  R30,LOW(0)
00d55e 93e0 1a47 	STS  _cursor_S0160000000,R30
00d560 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x2CD:
                +
00d561 eee1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d562 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d563 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d564 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d565 940e e400 	CALL __PUTPARD1
00d567 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d569 940e e2d7 	CALL __CBD1
00d56b 940e e400 	CALL __PUTPARD1
00d56d cdf8      	RJMP SUBOPT_0x28D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2CE:
                +
00d56e eee7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d56f e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d570 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d571 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d572 940e e400 	CALL __PUTPARD1
00d574 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d576 940e e2d7 	CALL __CBD1
00d578 940e e400 	CALL __PUTPARD1
00d57a cdeb      	RJMP SUBOPT_0x28D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2CF:
00d57b 93e0 14df 	STS  _currentPage,R30
00d57d e1e5      	LDI  R30,LOW(21)
00d57e 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
00d580 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2D0:
00d581 93e0 1a49 	STS  _tmpPrevPage_S0160000000,R30
00d583 e4ea      	LDI  R30,LOW(_entPwd_S0160000000)
00d584 e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d585 93fa      	ST   -Y,R31
00d586 93ea      	ST   -Y,R30
00d587 efef      	LDI  R30,LOW(255)
00d588 93ea      	ST   -Y,R30
00d589 940c c5a4 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2D1:
00d58b 940e a7d5 	CALL _memset
00d58d e0e0      	LDI  R30,LOW(0)
00d58e 93e0 1a47 	STS  _cursor_S0160000000,R30
00d590 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2D2:
                +
00d591 ede2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 6 ) )
00d592 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 6 ) )
00d593 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 6 ) )
00d594 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 6 ) )
                 	__POINTD1FN _0x2C0000,6
00d595 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2D3:
                +
00d596 efe0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 36 ) )
00d597 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 36 ) )
00d598 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 36 ) )
00d599 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 36 ) )
                 	__POINTD1FN _0x2C0000,36
00d59a 940e e400 	CALL __PUTPARD1
00d59c 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d59e 940e e2d7 	CALL __CBD1
00d5a0 940e e400 	CALL __PUTPARD1
00d5a2 cdc3      	RJMP SUBOPT_0x28D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2D4:
00d5a3 93e0 14df 	STS  _currentPage,R30
00d5a5 e0e7      	LDI  R30,LOW(7)
00d5a6 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
00d5a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D5:
                +
00d5a9 efe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 42 ) )
00d5aa e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 42 ) )
00d5ab e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 42 ) )
00d5ac e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 42 ) )
                 	__POINTD1FN _0x2C0000,42
00d5ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D6:
00d5ae 940e e400 	CALL __PUTPARD1
                +
00d5b0 e6e5     +LDI R30 , LOW ( _properties_config + ( 80 ) )
00d5b1 e1f1     +LDI R31 , HIGH ( _properties_config + ( 80 ) )
                 	__POINTW1MN _properties_config,80
00d5b2 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2D7:
00d5b4 e3a2      	LDI  R26,LOW(50)
00d5b5 e0b0      	LDI  R27,0
00d5b6 940e a7d5 	CALL _memset
00d5b8 01fe      	MOVW R30,R28
00d5b9 9638      	ADIW R30,8
00d5ba 93fa      	ST   -Y,R31
00d5bb 93ea      	ST   -Y,R30
                +
00d5bc ede1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 5 ) )
00d5bd e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 5 ) )
00d5be e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 5 ) )
00d5bf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 5 ) )
                 	__POINTD1FN _0x2C0000,5
00d5c0 940e e400 	CALL __PUTPARD1
00d5c2 e080      	LDI  R24,0
00d5c3 940e c186 	CALL _sprintf
00d5c5 9626      	ADIW R28,6
00d5c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D8:
00d5c7 01fe      	MOVW R30,R28
00d5c8 96fa      	ADIW R30,58
00d5c9 940c c8c7 	JMP SUBOPT_0xF7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D9:
00d5cb e1a4      	LDI  R26,LOW(20)
00d5cc e0b0      	LDI  R27,0
00d5cd 940c a7d5 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2DA:
00d5cf 01fe      	MOVW R30,R28
00d5d0 96fa      	ADIW R30,58
00d5d1 93fa      	ST   -Y,R31
00d5d2 93ea      	ST   -Y,R30
00d5d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2DB:
00d5d4 e080      	LDI  R24,0
00d5d5 940e c186 	CALL _sprintf
00d5d7 9626      	ADIW R28,6
00d5d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2DC:
00d5d9 01fe      	MOVW R30,R28
00d5da 9638      	ADIW R30,8
00d5db 93fa      	ST   -Y,R31
00d5dc 93ea      	ST   -Y,R30
00d5dd 01de      	MOVW R26,R28
00d5de 96dc      	ADIW R26,60
00d5df 940e a7e5 	CALL _strcat
00d5e1 cfe5      	RJMP SUBOPT_0x2D8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DD:
                +
00d5e2 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00d5e3 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00d5e4 0fe0      	ADD  R30,R16
00d5e5 1ff1      	ADC  R31,R17
00d5e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2DE:
00d5e7 01f9      	MOVW R30,R18
                +
00d5e8 5f2f     +SUBI R18 , LOW ( - 1 )
00d5e9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00d5ea 01de      	MOVW R26,R28
00d5eb 96da      	ADIW R26,58
00d5ec 0fae      	ADD  R26,R30
00d5ed 1fbf      	ADC  R27,R31
00d5ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DF:
00d5ef 940e e400 	CALL __PUTPARD1
00d5f1 01fe      	MOVW R30,R28
00d5f2 963c      	ADIW R30,12
00d5f3 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E0:
                +
00d5f5 01fe     +MOVW R30 , R28
00d5f6 5aec     +SUBI R30 , LOW ( - 84 )
00d5f7 4fff     +SBCI R31 , HIGH ( - 84 )
00d5f8 9001     +LD R0 , Z +
00d5f9 81f0     +LD R31 , Z
00d5fa 2de0     +MOV R30 , R0
                 	__GETW1SX 84
00d5fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E1:
                +
00d5fc 01fe     +MOVW R30 , R28
00d5fd 5aee     +SUBI R30 , LOW ( - 82 )
00d5fe 4fff     +SBCI R31 , HIGH ( - 82 )
00d5ff 9001     +LD R0 , Z +
00d600 81f0     +LD R31 , Z
00d601 2de0     +MOV R30 , R0
                 	__GETW1SX 82
00d602 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2E2:
                +
00d603 01de     +MOVW R26 , R28
00d604 5aac     +SUBI R26 , LOW ( - 84 )
00d605 4fbf     +SBCI R27 , HIGH ( - 84 )
00d606 900d     +LD R0 , X +
00d607 91bc     +LD R27 , X
00d608 2da0     +MOV R26 , R0
                 	__GETW2SX 84
00d609 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2E3:
00d60a e5e6      	LDI  R30,LOW(_setIp_S0160000000)
00d60b e1fa      	LDI  R31,HIGH(_setIp_S0160000000)
00d60c 93fa      	ST   -Y,R31
00d60d 93ea      	ST   -Y,R30
00d60e e6e2      	LDI  R30,LOW(_setMask_S0160000000)
00d60f e1fa      	LDI  R31,HIGH(_setMask_S0160000000)
00d610 93fa      	ST   -Y,R31
00d611 93ea      	ST   -Y,R30
00d612 e6ee      	LDI  R30,LOW(_setGw_S0160000000)
00d613 e1fa      	LDI  R31,HIGH(_setGw_S0160000000)
00d614 93fa      	ST   -Y,R31
00d615 93ea      	ST   -Y,R30
00d616 e7aa      	LDI  R26,LOW(_setServer_S0160000000)
00d617 e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
00d618 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2E4:
00d619 940e e400 	CALL __PUTPARD1
00d61b 91a0 1a56 	LDS  R26,_setIp_S0160000000
00d61d e6e4      	LDI  R30,LOW(100)
00d61e 9fea      	MUL  R30,R26
00d61f 01b0      	MOVW R22,R0
                +
00d620 91a0 1a57+LDS R26 , _setIp_S0160000000 + ( 1 )
                 	__GETB2MN _setIp_S0160000000,1
00d622 e0ea      	LDI  R30,LOW(10)
00d623 9fea      	MUL  R30,R26
00d624 01f0      	MOVW R30,R0
00d625 01db      	MOVW R26,R22
00d626 0fae      	ADD  R26,R30
00d627 1fbf      	ADC  R27,R31
                +
00d628 91e0 1a58+LDS R30 , _setIp_S0160000000 + ( 2 )
                 	__GETB1MN _setIp_S0160000000,2
00d62a e0f0      	LDI  R31,0
00d62b 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E5:
                +
00d62d 91a0 1a59+LDS R26 , _setIp_S0160000000 + ( 3 )
                 	__GETB2MN _setIp_S0160000000,3
00d62f e6e4      	LDI  R30,LOW(100)
00d630 9fea      	MUL  R30,R26
00d631 01b0      	MOVW R22,R0
                +
00d632 91a0 1a5a+LDS R26 , _setIp_S0160000000 + ( 4 )
                 	__GETB2MN _setIp_S0160000000,4
00d634 e0ea      	LDI  R30,LOW(10)
00d635 9fea      	MUL  R30,R26
00d636 01f0      	MOVW R30,R0
00d637 01db      	MOVW R26,R22
00d638 0fae      	ADD  R26,R30
00d639 1fbf      	ADC  R27,R31
                +
00d63a 91e0 1a5b+LDS R30 , _setIp_S0160000000 + ( 5 )
                 	__GETB1MN _setIp_S0160000000,5
00d63c e0f0      	LDI  R31,0
00d63d 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E6:
                +
00d63f 91a0 1a5c+LDS R26 , _setIp_S0160000000 + ( 6 )
                 	__GETB2MN _setIp_S0160000000,6
00d641 e6e4      	LDI  R30,LOW(100)
00d642 9fea      	MUL  R30,R26
00d643 01b0      	MOVW R22,R0
                +
00d644 91a0 1a5d+LDS R26 , _setIp_S0160000000 + ( 7 )
                 	__GETB2MN _setIp_S0160000000,7
00d646 e0ea      	LDI  R30,LOW(10)
00d647 9fea      	MUL  R30,R26
00d648 01f0      	MOVW R30,R0
00d649 01db      	MOVW R26,R22
00d64a 0fae      	ADD  R26,R30
00d64b 1fbf      	ADC  R27,R31
                +
00d64c 91e0 1a5e+LDS R30 , _setIp_S0160000000 + ( 8 )
                 	__GETB1MN _setIp_S0160000000,8
00d64e e0f0      	LDI  R31,0
00d64f 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E7:
                +
00d651 91a0 1a5f+LDS R26 , _setIp_S0160000000 + ( 9 )
                 	__GETB2MN _setIp_S0160000000,9
00d653 e6e4      	LDI  R30,LOW(100)
00d654 9fea      	MUL  R30,R26
00d655 01b0      	MOVW R22,R0
                +
00d656 91a0 1a60+LDS R26 , _setIp_S0160000000 + ( 10 )
                 	__GETB2MN _setIp_S0160000000,10
00d658 e0ea      	LDI  R30,LOW(10)
00d659 9fea      	MUL  R30,R26
00d65a 01f0      	MOVW R30,R0
00d65b 01db      	MOVW R26,R22
00d65c 0fae      	ADD  R26,R30
00d65d 1fbf      	ADC  R27,R31
                +
00d65e 91e0 1a61+LDS R30 , _setIp_S0160000000 + ( 11 )
                 	__GETB1MN _setIp_S0160000000,11
00d660 e0f0      	LDI  R31,0
00d661 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E8:
00d663 91a0 1a62 	LDS  R26,_setMask_S0160000000
00d665 e6e4      	LDI  R30,LOW(100)
00d666 9fea      	MUL  R30,R26
00d667 01b0      	MOVW R22,R0
                +
00d668 91a0 1a63+LDS R26 , _setMask_S0160000000 + ( 1 )
                 	__GETB2MN _setMask_S0160000000,1
00d66a e0ea      	LDI  R30,LOW(10)
00d66b 9fea      	MUL  R30,R26
00d66c 01f0      	MOVW R30,R0
00d66d 01db      	MOVW R26,R22
00d66e 0fae      	ADD  R26,R30
00d66f 1fbf      	ADC  R27,R31
                +
00d670 91e0 1a64+LDS R30 , _setMask_S0160000000 + ( 2 )
                 	__GETB1MN _setMask_S0160000000,2
00d672 e0f0      	LDI  R31,0
00d673 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E9:
                +
00d675 91a0 1a65+LDS R26 , _setMask_S0160000000 + ( 3 )
                 	__GETB2MN _setMask_S0160000000,3
00d677 e6e4      	LDI  R30,LOW(100)
00d678 9fea      	MUL  R30,R26
00d679 01b0      	MOVW R22,R0
                +
00d67a 91a0 1a66+LDS R26 , _setMask_S0160000000 + ( 4 )
                 	__GETB2MN _setMask_S0160000000,4
00d67c e0ea      	LDI  R30,LOW(10)
00d67d 9fea      	MUL  R30,R26
00d67e 01f0      	MOVW R30,R0
00d67f 01db      	MOVW R26,R22
00d680 0fae      	ADD  R26,R30
00d681 1fbf      	ADC  R27,R31
                +
00d682 91e0 1a67+LDS R30 , _setMask_S0160000000 + ( 5 )
                 	__GETB1MN _setMask_S0160000000,5
00d684 e0f0      	LDI  R31,0
00d685 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EA:
                +
00d687 91a0 1a68+LDS R26 , _setMask_S0160000000 + ( 6 )
                 	__GETB2MN _setMask_S0160000000,6
00d689 e6e4      	LDI  R30,LOW(100)
00d68a 9fea      	MUL  R30,R26
00d68b 01b0      	MOVW R22,R0
                +
00d68c 91a0 1a69+LDS R26 , _setMask_S0160000000 + ( 7 )
                 	__GETB2MN _setMask_S0160000000,7
00d68e e0ea      	LDI  R30,LOW(10)
00d68f 9fea      	MUL  R30,R26
00d690 01f0      	MOVW R30,R0
00d691 01db      	MOVW R26,R22
00d692 0fae      	ADD  R26,R30
00d693 1fbf      	ADC  R27,R31
                +
00d694 91e0 1a6a+LDS R30 , _setMask_S0160000000 + ( 8 )
                 	__GETB1MN _setMask_S0160000000,8
00d696 e0f0      	LDI  R31,0
00d697 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EB:
                +
00d699 91a0 1a6b+LDS R26 , _setMask_S0160000000 + ( 9 )
                 	__GETB2MN _setMask_S0160000000,9
00d69b e6e4      	LDI  R30,LOW(100)
00d69c 9fea      	MUL  R30,R26
00d69d 01b0      	MOVW R22,R0
                +
00d69e 91a0 1a6c+LDS R26 , _setMask_S0160000000 + ( 10 )
                 	__GETB2MN _setMask_S0160000000,10
00d6a0 e0ea      	LDI  R30,LOW(10)
00d6a1 9fea      	MUL  R30,R26
00d6a2 01f0      	MOVW R30,R0
00d6a3 01db      	MOVW R26,R22
00d6a4 0fae      	ADD  R26,R30
00d6a5 1fbf      	ADC  R27,R31
                +
00d6a6 91e0 1a6d+LDS R30 , _setMask_S0160000000 + ( 11 )
                 	__GETB1MN _setMask_S0160000000,11
00d6a8 e0f0      	LDI  R31,0
00d6a9 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EC:
00d6ab 91a0 1a6e 	LDS  R26,_setGw_S0160000000
00d6ad e6e4      	LDI  R30,LOW(100)
00d6ae 9fea      	MUL  R30,R26
00d6af 01b0      	MOVW R22,R0
                +
00d6b0 91a0 1a6f+LDS R26 , _setGw_S0160000000 + ( 1 )
                 	__GETB2MN _setGw_S0160000000,1
00d6b2 e0ea      	LDI  R30,LOW(10)
00d6b3 9fea      	MUL  R30,R26
00d6b4 01f0      	MOVW R30,R0
00d6b5 01db      	MOVW R26,R22
00d6b6 0fae      	ADD  R26,R30
00d6b7 1fbf      	ADC  R27,R31
                +
00d6b8 91e0 1a70+LDS R30 , _setGw_S0160000000 + ( 2 )
                 	__GETB1MN _setGw_S0160000000,2
00d6ba e0f0      	LDI  R31,0
00d6bb 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2ED:
                +
00d6bd 91a0 1a71+LDS R26 , _setGw_S0160000000 + ( 3 )
                 	__GETB2MN _setGw_S0160000000,3
00d6bf e6e4      	LDI  R30,LOW(100)
00d6c0 9fea      	MUL  R30,R26
00d6c1 01b0      	MOVW R22,R0
                +
00d6c2 91a0 1a72+LDS R26 , _setGw_S0160000000 + ( 4 )
                 	__GETB2MN _setGw_S0160000000,4
00d6c4 e0ea      	LDI  R30,LOW(10)
00d6c5 9fea      	MUL  R30,R26
00d6c6 01f0      	MOVW R30,R0
00d6c7 01db      	MOVW R26,R22
00d6c8 0fae      	ADD  R26,R30
00d6c9 1fbf      	ADC  R27,R31
                +
00d6ca 91e0 1a73+LDS R30 , _setGw_S0160000000 + ( 5 )
                 	__GETB1MN _setGw_S0160000000,5
00d6cc e0f0      	LDI  R31,0
00d6cd 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EE:
                +
00d6cf 91a0 1a74+LDS R26 , _setGw_S0160000000 + ( 6 )
                 	__GETB2MN _setGw_S0160000000,6
00d6d1 e6e4      	LDI  R30,LOW(100)
00d6d2 9fea      	MUL  R30,R26
00d6d3 01b0      	MOVW R22,R0
                +
00d6d4 91a0 1a75+LDS R26 , _setGw_S0160000000 + ( 7 )
                 	__GETB2MN _setGw_S0160000000,7
00d6d6 e0ea      	LDI  R30,LOW(10)
00d6d7 9fea      	MUL  R30,R26
00d6d8 01f0      	MOVW R30,R0
00d6d9 01db      	MOVW R26,R22
00d6da 0fae      	ADD  R26,R30
00d6db 1fbf      	ADC  R27,R31
                +
00d6dc 91e0 1a76+LDS R30 , _setGw_S0160000000 + ( 8 )
                 	__GETB1MN _setGw_S0160000000,8
00d6de e0f0      	LDI  R31,0
00d6df 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EF:
                +
00d6e1 91a0 1a77+LDS R26 , _setGw_S0160000000 + ( 9 )
                 	__GETB2MN _setGw_S0160000000,9
00d6e3 e6e4      	LDI  R30,LOW(100)
00d6e4 9fea      	MUL  R30,R26
00d6e5 01b0      	MOVW R22,R0
                +
00d6e6 91a0 1a78+LDS R26 , _setGw_S0160000000 + ( 10 )
                 	__GETB2MN _setGw_S0160000000,10
00d6e8 e0ea      	LDI  R30,LOW(10)
00d6e9 9fea      	MUL  R30,R26
00d6ea 01f0      	MOVW R30,R0
00d6eb 01db      	MOVW R26,R22
00d6ec 0fae      	ADD  R26,R30
00d6ed 1fbf      	ADC  R27,R31
                +
00d6ee 91e0 1a79+LDS R30 , _setGw_S0160000000 + ( 11 )
                 	__GETB1MN _setGw_S0160000000,11
00d6f0 e0f0      	LDI  R31,0
00d6f1 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2F0:
00d6f3 91a0 1a7a 	LDS  R26,_setServer_S0160000000
00d6f5 e6e4      	LDI  R30,LOW(100)
00d6f6 9fea      	MUL  R30,R26
00d6f7 01b0      	MOVW R22,R0
                +
00d6f8 91a0 1a7b+LDS R26 , _setServer_S0160000000 + ( 1 )
                 	__GETB2MN _setServer_S0160000000,1
00d6fa e0ea      	LDI  R30,LOW(10)
00d6fb 9fea      	MUL  R30,R26
00d6fc 01f0      	MOVW R30,R0
00d6fd 01db      	MOVW R26,R22
00d6fe 0fae      	ADD  R26,R30
00d6ff 1fbf      	ADC  R27,R31
                +
00d700 91e0 1a7c+LDS R30 , _setServer_S0160000000 + ( 2 )
                 	__GETB1MN _setServer_S0160000000,2
00d702 e0f0      	LDI  R31,0
00d703 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2F1:
                +
00d705 91a0 1a7d+LDS R26 , _setServer_S0160000000 + ( 3 )
                 	__GETB2MN _setServer_S0160000000,3
00d707 e6e4      	LDI  R30,LOW(100)
00d708 9fea      	MUL  R30,R26
00d709 01b0      	MOVW R22,R0
                +
00d70a 91a0 1a7e+LDS R26 , _setServer_S0160000000 + ( 4 )
                 	__GETB2MN _setServer_S0160000000,4
00d70c e0ea      	LDI  R30,LOW(10)
00d70d 9fea      	MUL  R30,R26
00d70e 01f0      	MOVW R30,R0
00d70f 01db      	MOVW R26,R22
00d710 0fae      	ADD  R26,R30
00d711 1fbf      	ADC  R27,R31
                +
00d712 91e0 1a7f+LDS R30 , _setServer_S0160000000 + ( 5 )
                 	__GETB1MN _setServer_S0160000000,5
00d714 e0f0      	LDI  R31,0
00d715 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2F2:
                +
00d717 91a0 1a80+LDS R26 , _setServer_S0160000000 + ( 6 )
                 	__GETB2MN _setServer_S0160000000,6
00d719 e6e4      	LDI  R30,LOW(100)
00d71a 9fea      	MUL  R30,R26
00d71b 01b0      	MOVW R22,R0
                +
00d71c 91a0 1a81+LDS R26 , _setServer_S0160000000 + ( 7 )
                 	__GETB2MN _setServer_S0160000000,7
00d71e e0ea      	LDI  R30,LOW(10)
00d71f 9fea      	MUL  R30,R26
00d720 01f0      	MOVW R30,R0
00d721 01db      	MOVW R26,R22
00d722 0fae      	ADD  R26,R30
00d723 1fbf      	ADC  R27,R31
                +
00d724 91e0 1a82+LDS R30 , _setServer_S0160000000 + ( 8 )
                 	__GETB1MN _setServer_S0160000000,8
00d726 e0f0      	LDI  R31,0
00d727 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2F3:
                +
00d729 91a0 1a83+LDS R26 , _setServer_S0160000000 + ( 9 )
                 	__GETB2MN _setServer_S0160000000,9
00d72b e6e4      	LDI  R30,LOW(100)
00d72c 9fea      	MUL  R30,R26
00d72d 01b0      	MOVW R22,R0
                +
00d72e 91a0 1a84+LDS R26 , _setServer_S0160000000 + ( 10 )
                 	__GETB2MN _setServer_S0160000000,10
00d730 e0ea      	LDI  R30,LOW(10)
00d731 9fea      	MUL  R30,R26
00d732 01f0      	MOVW R30,R0
00d733 01db      	MOVW R26,R22
00d734 0fae      	ADD  R26,R30
00d735 1fbf      	ADC  R27,R31
                +
00d736 91e0 1a85+LDS R30 , _setServer_S0160000000 + ( 11 )
                 	__GETB1MN _setServer_S0160000000,11
00d738 e0f0      	LDI  R31,0
00d739 940c cd74 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2F4:
00d73b 940e e400 	CALL __PUTPARD1
00d73d cc51      	RJMP SUBOPT_0x292
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2F5:
                +
00d73e 01fe     +MOVW R30 , R28
00d73f 5aea     +SUBI R30 , LOW ( - 86 )
00d740 4fff     +SBCI R31 , HIGH ( - 86 )
00d741 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d742 e0f0      	LDI  R31,0
00d743 30e2      	CPI  R30,LOW(0x2)
00d744 e0a0      	LDI  R26,HIGH(0x2)
00d745 07fa      	CPC  R31,R26
00d746 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2F6:
00d747 93e0 14df 	STS  _currentPage,R30
00d749 e0e1      	LDI  R30,LOW(1)
00d74a 93e0 1a47 	STS  _cursor_S0160000000,R30
00d74c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F7:
00d74d 93e0 14df 	STS  _currentPage,R30
00d74f e0e2      	LDI  R30,LOW(2)
00d750 93e0 1a47 	STS  _cursor_S0160000000,R30
00d752 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F8:
                +
00d753 edeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d754 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d755 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d756 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d757 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:501 WORDS
                 SUBOPT_0x2F9:
00d758 940e e400 	CALL __PUTPARD1
00d75a 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d75c 940e e2d7 	CALL __CBD1
00d75e 940e e400 	CALL __PUTPARD1
00d760 cc05      	RJMP SUBOPT_0x28D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FA:
00d761 940e e400 	CALL __PUTPARD1
00d763 91e0 1a86 	LDS  R30,_devEn_S0160000000
00d765 940c c525 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2FB:
                +
00d767 edea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 526 ) )
00d768 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 526 ) )
00d769 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 526 ) )
00d76a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 526 ) )
                 	__POINTD1FN _0x2C0000,526
00d76b cfec      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2FC:
                +
00d76c efe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d76d e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d76e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d76f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d770 940e e400 	CALL __PUTPARD1
00d772 01f8      	MOVW R30,R16
00d773 caa2      	RJMP SUBOPT_0x258
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2FD:
00d774 0fa0      	ADD  R26,R16
00d775 1fb1      	ADC  R27,R17
00d776 91ec      	LD   R30,X
00d777 940c c525 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2FE:
                +
00d779 efea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00d77a e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00d77b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00d77c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00d77d cfda      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2FF:
00d77e 940e e400 	CALL __PUTPARD1
00d780 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d782 e0f0      	LDI  R31,0
00d783 fde7      	SBRC R30,7
00d784 efff      	SER  R31
00d785 9632      	ADIW R30,2
00d786 ca8f      	RJMP SUBOPT_0x258
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x300:
                +
00d787 e1eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d788 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d789 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d78a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d78b cff2      	RJMP SUBOPT_0x2FF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x301:
00d78c eba6      	LDI  R26,LOW(_operating_config)
00d78d e1b1      	LDI  R27,HIGH(_operating_config)
00d78e 940e 4ec3 	CALL _setOperatingConfig
00d790 01af      	MOVW R20,R30
00d791 2355      	TST  R21
00d792 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x302:
                +
00d793 e4e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 636 ) )
00d794 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 636 ) )
00d795 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 636 ) )
00d796 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 636 ) )
                 	__POINTD1FN _0x2C0000,636
00d797 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x303:
00d799 e0e8      	LDI  R30,LOW(8)
00d79a 93e0 1a49 	STS  _tmpPrevPage_S0160000000,R30
00d79c e0e0      	LDI  R30,LOW(0)
00d79d 93e0 1a47 	STS  _cursor_S0160000000,R30
00d79f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x304:
                +
00d7a0 e7e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 684 ) )
00d7a1 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 684 ) )
00d7a2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 684 ) )
00d7a3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 684 ) )
                 	__POINTD1FN _0x2C0000,684
00d7a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x305:
                +
00d7a5 e7eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 687 ) )
00d7a6 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 687 ) )
00d7a7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 687 ) )
00d7a8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 687 ) )
                 	__POINTD1FN _0x2C0000,687
00d7a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x306:
                +
00d7aa e7ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 690 ) )
00d7ab e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 690 ) )
00d7ac e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 690 ) )
00d7ad e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 690 ) )
                 	__POINTD1FN _0x2C0000,690
00d7ae cfa9      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x307:
00d7af 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d7b1 e0b0      	LDI  R27,0
00d7b2 fda7      	SBRC R26,7
00d7b3 efbf      	SER  R27
00d7b4 e0e3      	LDI  R30,LOW(3)
00d7b5 e0f0      	LDI  R31,HIGH(3)
00d7b6 940e e38d 	CALL __MODW21
00d7b8 9730      	SBIW R30,0
00d7b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x308:
00d7ba 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d7bc e0b0      	LDI  R27,0
00d7bd 5aaa      	SUBI R26,LOW(-_setIp_S0160000000)
00d7be 4eb5      	SBCI R27,HIGH(-_setIp_S0160000000)
00d7bf 91ec      	LD   R30,X
00d7c0 5fef      	SUBI R30,-LOW(1)
00d7c1 93ec      	ST   X,R30
00d7c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x309:
00d7c3 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d7c5 e0f0      	LDI  R31,0
00d7c6 5aea      	SUBI R30,LOW(-_setIp_S0160000000)
00d7c7 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
00d7c8 e0a0      	LDI  R26,LOW(0)
00d7c9 83a0      	STD  Z+0,R26
00d7ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x30A:
                +
00d7cb efe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d7cc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d7cd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d7ce e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d7cf 940e e400 	CALL __PUTPARD1
00d7d1 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d7d3 940e e2d7 	CALL __CBD1
00d7d5 940e e400 	CALL __PUTPARD1
00d7d7 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d7d9 e0f0      	LDI  R31,0
00d7da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30B:
00d7db 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d7dd e0b0      	LDI  R27,0
00d7de 59ae      	SUBI R26,LOW(-_setMask_S0160000000)
00d7df 4eb5      	SBCI R27,HIGH(-_setMask_S0160000000)
00d7e0 91ec      	LD   R30,X
00d7e1 5fef      	SUBI R30,-LOW(1)
00d7e2 93ec      	ST   X,R30
00d7e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x30C:
00d7e4 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d7e6 e0f0      	LDI  R31,0
00d7e7 59ee      	SUBI R30,LOW(-_setMask_S0160000000)
00d7e8 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00d7e9 e0a0      	LDI  R26,LOW(0)
00d7ea 83a0      	STD  Z+0,R26
00d7eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30D:
00d7ec 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d7ee e0b0      	LDI  R27,0
00d7ef 59a2      	SUBI R26,LOW(-_setGw_S0160000000)
00d7f0 4eb5      	SBCI R27,HIGH(-_setGw_S0160000000)
00d7f1 91ec      	LD   R30,X
00d7f2 5fef      	SUBI R30,-LOW(1)
00d7f3 93ec      	ST   X,R30
00d7f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x30E:
00d7f5 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d7f7 e0f0      	LDI  R31,0
00d7f8 59e2      	SUBI R30,LOW(-_setGw_S0160000000)
00d7f9 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
00d7fa e0a0      	LDI  R26,LOW(0)
00d7fb 83a0      	STD  Z+0,R26
00d7fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30F:
00d7fd 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d7ff e0b0      	LDI  R27,0
00d800 58a6      	SUBI R26,LOW(-_setServer_S0160000000)
00d801 4eb5      	SBCI R27,HIGH(-_setServer_S0160000000)
00d802 91ec      	LD   R30,X
00d803 5fef      	SUBI R30,-LOW(1)
00d804 93ec      	ST   X,R30
00d805 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x310:
00d806 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d808 e0f0      	LDI  R31,0
00d809 58e6      	SUBI R30,LOW(-_setServer_S0160000000)
00d80a 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
00d80b e0a0      	LDI  R26,LOW(0)
00d80c 83a0      	STD  Z+0,R26
00d80d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x311:
00d80e 93e0 1a49 	STS  _tmpPrevPage_S0160000000,R30
00d810 e0e0      	LDI  R30,LOW(0)
00d811 93e0 1a47 	STS  _cursor_S0160000000,R30
00d813 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x312:
                +
00d814 ecec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d815 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d816 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d817 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d818 cf3f      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x313:
00d819 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d81b e0b0      	LDI  R27,0
00d81c fda7      	SBRC R26,7
00d81d efbf      	SER  R27
00d81e 940c 9805 	JMP  _showProbeConfig
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x314:
00d820 91a0 1a47 	LDS  R26,_cursor_S0160000000
00d822 e0b0      	LDI  R27,0
00d823 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x315:
00d824 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d826 e0f0      	LDI  R31,0
00d827 57e8      	SUBI R30,LOW(-_prbEn_S0160000000)
00d828 4ef5      	SBCI R31,HIGH(-_prbEn_S0160000000)
00d829 81e0      	LD   R30,Z
00d82a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x316:
00d82b 93ec      	ST   X,R30
                +
00d82c e1eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d82d e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d82e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d82f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d830 940e e400 	CALL __PUTPARD1
00d832 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x317:
00d833 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d835 940e e2d7 	CALL __CBD1
00d837 940e e400 	CALL __PUTPARD1
00d839 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x318:
00d83a e2e4      	LDI  R30,LOW(36)
00d83b 93e0 14df 	STS  _currentPage,R30
00d83d e0ee      	LDI  R30,LOW(14)
00d83e 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
00d840 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x319:
                +
00d841 eeec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 800 ) )
00d842 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 800 ) )
00d843 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 800 ) )
00d844 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 800 ) )
                 	__POINTD1FN _0x2C0000,800
00d845 cf12      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31A:
00d846 e2e4      	LDI  R30,LOW(36)
00d847 93e0 14df 	STS  _currentPage,R30
00d849 e1e1      	LDI  R30,LOW(17)
00d84a 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
00d84c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x31B:
                +
00d84d efe2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 806 ) )
00d84e e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 806 ) )
00d84f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 806 ) )
00d850 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 806 ) )
                 	__POINTD1FN _0x2C0000,806
00d851 cf06      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x31C:
                +
00d852 efe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 813 ) )
00d853 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 813 ) )
00d854 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 813 ) )
00d855 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 813 ) )
                 	__POINTD1FN _0x2C0000,813
00d856 cf01      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31D:
00d857 e5e2      	LDI  R30,LOW(_confPwd_S0160000000)
00d858 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00d859 93fa      	ST   -Y,R31
00d85a 93ea      	ST   -Y,R30
00d85b efef      	LDI  R30,LOW(255)
00d85c 93ea      	ST   -Y,R30
00d85d 940c c5a4 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x31E:
00d85f 91ec      	LD   R30,X
00d860 5fef      	SUBI R30,-LOW(1)
00d861 93ec      	ST   X,R30
00d862 30ea      	CPI  R30,LOW(0xA)
00d863 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31F:
00d864 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d866 e0f0      	LDI  R31,0
00d867 5be2      	SUBI R30,LOW(-_newPwd_S0160000000)
00d868 4ef5      	SBCI R31,HIGH(-_newPwd_S0160000000)
00d869 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x320:
                +
00d86a e0e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 822 ) )
00d86b e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 822 ) )
00d86c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 822 ) )
00d86d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 822 ) )
                 	__POINTD1FN _0x2C0000,822
00d86e 940e e400 	CALL __PUTPARD1
00d870 cfc2      	RJMP SUBOPT_0x317
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x321:
00d871 81e0      	LD   R30,Z
00d872 940e e2d7 	CALL __CBD1
00d874 caee      	RJMP SUBOPT_0x28C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x322:
00d875 e4ee      	LDI  R30,LOW(_newPwd_S0160000000)
00d876 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00d877 93fa      	ST   -Y,R31
00d878 93ea      	ST   -Y,R30
00d879 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x323:
00d87a efef      	LDI  R30,LOW(255)
00d87b 93ea      	ST   -Y,R30
00d87c 940c c5a4 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x324:
                +
00d87e 01fe     +MOVW R30 , R28
00d87f 5be0     +SUBI R30 , LOW ( - 80 )
00d880 4fff     +SBCI R31 , HIGH ( - 80 )
00d881 9001     +LD R0 , Z +
00d882 81f0     +LD R31 , Z
00d883 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00d884 93fa      	ST   -Y,R31
00d885 93ea      	ST   -Y,R30
00d886 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x325:
00d887 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d889 e0f0      	LDI  R31,0
00d88a 5aee      	SUBI R30,LOW(-_confPwd_S0160000000)
00d88b 4ef5      	SBCI R31,HIGH(-_confPwd_S0160000000)
00d88c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x326:
00d88d e0e1      	LDI  R30,LOW(1)
00d88e 93e0 14df 	STS  _currentPage,R30
00d890 e0e3      	LDI  R30,LOW(3)
00d891 93e0 1a47 	STS  _cursor_S0160000000,R30
00d893 cf80      	RJMP SUBOPT_0x312
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x327:
                +
00d894 e3ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 881 ) )
00d895 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 881 ) )
00d896 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 881 ) )
00d897 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 881 ) )
                 	__POINTD1FN _0x2C0000,881
00d898 940e e400 	CALL __PUTPARD1
00d89a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x328:
                +
00d89b e4e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 890 ) )
00d89c e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 890 ) )
00d89d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 890 ) )
00d89e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 890 ) )
                 	__POINTD1FN _0x2C0000,890
00d89f 940e e400 	CALL __PUTPARD1
00d8a1 91e0 1a91 	LDS  R30,_prb1_S0160000000
00d8a3 e0f0      	LDI  R31,0
00d8a4 940c cf1d 	JMP SUBOPT_0x202
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x329:
                +
00d8a6 e4ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 896 ) )
00d8a7 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 896 ) )
00d8a8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 896 ) )
00d8a9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 896 ) )
                 	__POINTD1FN _0x2C0000,896
00d8aa 940e e400 	CALL __PUTPARD1
00d8ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x32A:
00d8ad 91e0 1a91 	LDS  R30,_prb1_S0160000000
00d8af e0f0      	LDI  R31,0
00d8b0 940c cf1d 	JMP SUBOPT_0x202
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x32B:
                +
00d8b2 e5e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
00d8b3 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
00d8b4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
00d8b5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
00d8b6 cea1      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32C:
                +
00d8b7 e5eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 911 ) )
00d8b8 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 911 ) )
00d8b9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 911 ) )
00d8ba e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 911 ) )
                 	__POINTD1FN _0x2C0000,911
00d8bb ce9c      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x32D:
00d8bc 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d8be e0f0      	LDI  R31,0
00d8bf 57e2      	SUBI R30,LOW(-_vRef_S0160000000)
00d8c0 4ef5      	SBCI R31,HIGH(-_vRef_S0160000000)
00d8c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x32E:
                +
00d8c2 e6e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 917 ) )
00d8c3 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 917 ) )
00d8c4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 917 ) )
00d8c5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 917 ) )
                 	__POINTD1FN _0x2C0000,917
00d8c6 ce91      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32F:
00d8c7 91a0 1a91 	LDS  R26,_prb1_S0160000000
00d8c9 5faf      	SUBI R26,-LOW(1)
00d8ca 93a0 1a91 	STS  _prb1_S0160000000,R26
00d8cc 30a5      	CPI  R26,LOW(0x5)
00d8cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x330:
                +
00d8ce e6e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 923 ) )
00d8cf e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 923 ) )
00d8d0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 923 ) )
00d8d1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 923 ) )
                 	__POINTD1FN _0x2C0000,923
00d8d2 940e e400 	CALL __PUTPARD1
00d8d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x331:
00d8d5 91e0 1a92 	LDS  R30,_prb2_S0160000000
00d8d7 e0f0      	LDI  R31,0
00d8d8 940c cf1d 	JMP SUBOPT_0x202
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x332:
                +
00d8da e6ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 929 ) )
00d8db e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 929 ) )
00d8dc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 929 ) )
00d8dd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 929 ) )
                 	__POINTD1FN _0x2C0000,929
00d8de 940e e400 	CALL __PUTPARD1
00d8e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x333:
00d8e1 91e0 1a91 	LDS  R30,_prb1_S0160000000
00d8e3 e0f0      	LDI  R31,0
00d8e4 93fa      	ST   -Y,R31
00d8e5 93ea      	ST   -Y,R30
00d8e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x334:
00d8e7 93e0 14df 	STS  _currentPage,R30
00d8e9 e1e8      	LDI  R30,LOW(24)
00d8ea 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
00d8ec e1e9      	LDI  R30,LOW(25)
00d8ed cf20      	RJMP SUBOPT_0x311
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x335:
                +
00d8ee e7e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
00d8ef e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
00d8f0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
00d8f1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
00d8f2 ce65      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x336:
00d8f3 93fa      	ST   -Y,R31
00d8f4 93ea      	ST   -Y,R30
00d8f5 e9a3      	LDI  R26,LOW(_calPnt_S0160000000)
00d8f6 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00d8f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x337:
                +
00d8f8 e8e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 950 ) )
00d8f9 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 950 ) )
00d8fa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 950 ) )
00d8fb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 950 ) )
                 	__POINTD1FN _0x2C0000,950
00d8fc 940e e400 	CALL __PUTPARD1
00d8fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x338:
                +
00d8ff e9ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 979 ) )
00d900 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 979 ) )
00d901 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 979 ) )
00d902 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 979 ) )
                 	__POINTD1FN _0x2C0000,979
00d903 ce54      	RJMP SUBOPT_0x2F9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x339:
00d904 e2e5      	LDI  R30,LOW(37)
00d905 93e0 14df 	STS  _currentPage,R30
00d907 e1eb      	LDI  R30,LOW(27)
00d908 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
00d90a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33A:
00d90b e2e4      	LDI  R30,LOW(36)
00d90c 93e0 14df 	STS  _currentPage,R30
00d90e e1eb      	LDI  R30,LOW(27)
00d90f 93e0 1a48 	STS  _tmpNextPage_S0160000000,R30
00d911 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x33B:
00d912 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d914 e0f0      	LDI  R31,0
00d915 56ed      	SUBI R30,LOW(-_calPnt_S0160000000)
00d916 4ef5      	SBCI R31,HIGH(-_calPnt_S0160000000)
00d917 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33C:
                +
00d918 eee1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d919 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d91a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d91b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d91c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33D:
                +
00d91d eee7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d91e e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d91f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d920 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d921 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x33E:
00d922 e4ea      	LDI  R30,LOW(_entPwd_S0160000000)
00d923 e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d924 93fa      	ST   -Y,R31
00d925 93ea      	ST   -Y,R30
00d926 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33F:
                +
00d927 eae5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 985 ) )
00d928 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 985 ) )
00d929 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 985 ) )
00d92a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 985 ) )
                 	__POINTD1FN _0x2C0000,985
00d92b ce0f      	RJMP SUBOPT_0x2F4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x340:
00d92c 91e0 1a48 	LDS  R30,_tmpNextPage_S0160000000
00d92e e0f0      	LDI  R31,0
00d92f 30e7      	CPI  R30,LOW(0x7)
00d930 e0a0      	LDI  R26,HIGH(0x7)
00d931 07fa      	CPC  R31,R26
00d932 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x341:
00d933 91e0 1a47 	LDS  R30,_cursor_S0160000000
00d935 e0f0      	LDI  R31,0
00d936 5be6      	SUBI R30,LOW(-_entPwd_S0160000000)
00d937 4ef5      	SBCI R31,HIGH(-_entPwd_S0160000000)
00d938 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x342:
00d939 93e0 14df 	STS  _currentPage,R30
00d93b 91a0 1a49 	LDS  R26,_tmpPrevPage_S0160000000
00d93d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x343:
00d93e 940e e3cc 	CALL __GETW1P
00d940 93fa      	ST   -Y,R31
00d941 93ea      	ST   -Y,R30
00d942 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x344:
00d943 8def      	LDD  R30,Y+31
00d944 940e e2d7 	CALL __CBD1
00d946 940c c2e2 	JMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x345:
00d948 a9a8      	LDD  R26,Y+48
00d949 a9b9      	LDD  R27,Y+48+1
00d94a e1ed      	LDI  R30,LOW(29)
00d94b 940e e31e 	CALL __MULB1W2U
                +
00d94d 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00d94e 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00d94f 940c c5a7 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x346:
00d951 940e e400 	CALL __PUTPARD1
00d953 ada8      	LDD  R26,Y+56
00d954 adb9      	LDD  R27,Y+56+1
00d955 e1ed      	LDI  R30,LOW(29)
00d956 940e e31e 	CALL __MULB1W2U
                +
00d958 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00d959 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00d95a 940c c5a7 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x347:
00d95c adac      	LDD  R26,Y+60
00d95d adbd      	LDD  R27,Y+60+1
00d95e e1ed      	LDI  R30,LOW(29)
00d95f 940e e31e 	CALL __MULB1W2U
                +
00d961 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00d962 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00d963 940c c5a7 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x348:
                +
00d965 01de     +MOVW R26 , R28
00d966 5ca0     +SUBI R26 , LOW ( - 64 )
00d967 4fbf     +SBCI R27 , HIGH ( - 64 )
00d968 900d     +LD R0 , X +
00d969 91bc     +LD R27 , X
00d96a 2da0     +MOV R26 , R0
                 	__GETW2SX 64
00d96b c952      	RJMP SUBOPT_0x272
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x349:
00d96c 940e e400 	CALL __PUTPARD1
                +
00d96e 01de     +MOVW R26 , R28
00d96f 5bac     +SUBI R26 , LOW ( - 68 )
00d970 4fbf     +SBCI R27 , HIGH ( - 68 )
00d971 900d     +LD R0 , X +
00d972 91bc     +LD R27 , X
00d973 2da0     +MOV R26 , R0
                 	__GETW2SX 68
00d974 e1ed      	LDI  R30,LOW(29)
00d975 940e e31e 	CALL __MULB1W2U
                +
00d977 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00d978 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00d979 940c c5a7 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34A:
00d97b 93ba      	ST   -Y,R27
00d97c 93aa      	ST   -Y,R26
00d97d 9722      	SBIW R28,2
00d97e 940e e475 	CALL __SAVELOCR6
00d980 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34B:
00d981 940e e400 	CALL __PUTPARD1
00d983 01fa      	MOVW R30,R20
00d984 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x34C:
00d986 01da      	MOVW R26,R20
00d987 e6e4      	LDI  R30,LOW(100)
00d988 e0f0      	LDI  R31,HIGH(100)
00d989 940e e33c 	CALL __DIVW21U
00d98b 85a8      	LDD  R26,Y+8
00d98c 85b9      	LDD  R27,Y+8+1
00d98d 93ec      	ST   X,R30
00d98e 01da      	MOVW R26,R20
00d98f e6e4      	LDI  R30,LOW(100)
00d990 e0f0      	LDI  R31,HIGH(100)
00d991 940e e38a 	CALL __MODW21U
00d993 01df      	MOVW R26,R30
00d994 e0ea      	LDI  R30,LOW(10)
00d995 e0f0      	LDI  R31,HIGH(10)
00d996 940e e33c 	CALL __DIVW21U
                +
00d998 85a8     +LDD R26 , Y + 8
00d999 85b9     +LDD R27 , Y + 8 + 1
00d99a 9611     +ADIW R26 , 1
00d99b 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d99c 01da      	MOVW R26,R20
00d99d e6e4      	LDI  R30,LOW(100)
00d99e e0f0      	LDI  R31,HIGH(100)
00d99f 940e e38a 	CALL __MODW21U
00d9a1 01df      	MOVW R26,R30
00d9a2 e0ea      	LDI  R30,LOW(10)
00d9a3 e0f0      	LDI  R31,HIGH(10)
00d9a4 940e e38a 	CALL __MODW21U
                +
00d9a6 85a8     +LDD R26 , Y + 8
00d9a7 85b9     +LDD R27 , Y + 8 + 1
00d9a8 9612     +ADIW R26 , 2
00d9a9 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d9aa 85a8      	LDD  R26,Y+8
00d9ab 85b9      	LDD  R27,Y+8+1
00d9ac 9613      	ADIW R26,3
00d9ad e0e2      	LDI  R30,LOW(2)
00d9ae 93ec      	ST   X,R30
00d9af e0e0      	LDI  R30,LOW(0)
00d9b0 e0f0      	LDI  R31,HIGH(0)
00d9b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34D:
00d9b2 940e e400 	CALL __PUTPARD1
00d9b4 01f8      	MOVW R30,R16
00d9b5 940c c3d6 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x34E:
00d9b7 01d8      	MOVW R26,R16
00d9b8 e6e4      	LDI  R30,LOW(100)
00d9b9 e0f0      	LDI  R31,HIGH(100)
00d9ba 940e e33c 	CALL __DIVW21U
00d9bc 85a8      	LDD  R26,Y+8
00d9bd 85b9      	LDD  R27,Y+8+1
00d9be 93ec      	ST   X,R30
00d9bf 01d8      	MOVW R26,R16
00d9c0 e6e4      	LDI  R30,LOW(100)
00d9c1 e0f0      	LDI  R31,HIGH(100)
00d9c2 940e e38a 	CALL __MODW21U
00d9c4 01df      	MOVW R26,R30
00d9c5 e0ea      	LDI  R30,LOW(10)
00d9c6 e0f0      	LDI  R31,HIGH(10)
00d9c7 940e e33c 	CALL __DIVW21U
                +
00d9c9 85a8     +LDD R26 , Y + 8
00d9ca 85b9     +LDD R27 , Y + 8 + 1
00d9cb 9611     +ADIW R26 , 1
00d9cc 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d9cd 01d8      	MOVW R26,R16
00d9ce e6e4      	LDI  R30,LOW(100)
00d9cf e0f0      	LDI  R31,HIGH(100)
00d9d0 940e e38a 	CALL __MODW21U
00d9d2 01df      	MOVW R26,R30
00d9d3 e0ea      	LDI  R30,LOW(10)
00d9d4 e0f0      	LDI  R31,HIGH(10)
00d9d5 940e e38a 	CALL __MODW21U
                +
00d9d7 85a8     +LDD R26 , Y + 8
00d9d8 85b9     +LDD R27 , Y + 8 + 1
00d9d9 9612     +ADIW R26 , 2
00d9da 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d9db 85a8      	LDD  R26,Y+8
00d9dc 85b9      	LDD  R27,Y+8+1
00d9dd 9613      	ADIW R26,3
00d9de e0e1      	LDI  R30,LOW(1)
00d9df 93ec      	ST   X,R30
00d9e0 e0e0      	LDI  R30,LOW(0)
00d9e1 e0f0      	LDI  R31,HIGH(0)
00d9e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34F:
00d9e3 85aa      	LDD  R26,Y+10
00d9e4 85bb      	LDD  R27,Y+10+1
00d9e5 e6e4      	LDI  R30,LOW(100)
00d9e6 e0f0      	LDI  R31,HIGH(100)
00d9e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x350:
00d9e8 e8a9      	LDI  R26,LOW(_eep_vref_val)
00d9e9 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00d9ea 940e e424 	CALL __EEPROMRDD
00d9ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x351:
00d9ed 01df      	MOVW R26,R30
00d9ee 01cb      	MOVW R24,R22
00d9ef 940c c942 	JMP SUBOPT_0x10C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x352:
                +
00d9f1 87ea     +STD Y + 10 , R30
00d9f2 87fb     +STD Y + 10 + 1 , R31
00d9f3 876c     +STD Y + 10 + 2 , R22
00d9f4 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d9f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x353:
00d9f6 940e c804 	CALL SUBOPT_0xD5
00d9f8 940e e400 	CALL __PUTPARD1
00d9fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x354:
00d9fb 01f9      	MOVW R30,R18
00d9fc 9634      	ADIW R30,4
00d9fd 170e      	CP   R16,R30
00d9fe 071f      	CPC  R17,R31
00d9ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x355:
00da00 01f8      	MOVW R30,R16
00da01 1be2      	SUB  R30,R18
00da02 0bf3      	SBC  R31,R19
00da03 01de      	MOVW R26,R28
00da04 9650      	ADIW R26,16
00da05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x356:
00da06 01f8      	MOVW R30,R16
00da07 0fee      	LSL  R30
00da08 1fff      	ROL  R31
00da09 8dac      	LDD  R26,Y+28
00da0a 8dbd      	LDD  R27,Y+28+1
00da0b 0fae      	ADD  R26,R30
00da0c 1fbf      	ADC  R27,R31
00da0d 91ac      	LD   R26,X
00da0e 940e 9b8c 	CALL _h2i
00da10 e1a0      	LDI  R26,LOW(16)
00da11 02ea      	MULS R30,R26
00da12 01f0      	MOVW R30,R0
00da13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x357:
00da14 01f8      	MOVW R30,R16
00da15 0fee      	LSL  R30
00da16 1fff      	ROL  R31
00da17 9631      	ADIW R30,1
00da18 8dac      	LDD  R26,Y+28
00da19 8dbd      	LDD  R27,Y+28+1
00da1a 0fae      	ADD  R26,R30
00da1b 1fbf      	ADC  R27,R31
00da1c 91ac      	LD   R26,X
00da1d 940c 9b8c 	JMP  _h2i
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x358:
00da1f 93ec      	ST   X,R30
00da20 01d8      	MOVW R26,R16
00da21 1ba2      	SUB  R26,R18
00da22 0bb3      	SBC  R27,R19
00da23 e0e3      	LDI  R30,LOW(3)
00da24 e0f0      	LDI  R31,HIGH(3)
00da25 940e e324 	CALL __MULW12
00da27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x359:
00da28 8daa      	LDD  R26,Y+26
00da29 8dbb      	LDD  R27,Y+26+1
00da2a 0fea      	ADD  R30,R26
00da2b 1ffb      	ADC  R31,R27
00da2c 01bf      	MOVW R22,R30
00da2d cfd2      	RJMP SUBOPT_0x355
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35A:
00da2e 0fae      	ADD  R26,R30
00da2f 1fbf      	ADC  R27,R31
00da30 91ec      	LD   R30,X
00da31 e0f0      	LDI  R31,0
00da32 01df      	MOVW R26,R30
00da33 e6e4      	LDI  R30,LOW(100)
00da34 e0f0      	LDI  R31,HIGH(100)
00da35 940e e34f 	CALL __DIVW21
00da37 01db      	MOVW R26,R22
00da38 cfe6      	RJMP SUBOPT_0x358
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x35B:
00da39 0fae      	ADD  R26,R30
00da3a 1fbf      	ADC  R27,R31
00da3b 91ac      	LD   R26,X
00da3c 27bb      	CLR  R27
00da3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x35C:
00da3e 01df      	MOVW R26,R30
00da3f e0ea      	LDI  R30,LOW(10)
00da40 e0f0      	LDI  R31,HIGH(10)
00da41 940e e34f 	CALL __DIVW21
00da43 01db      	MOVW R26,R22
00da44 cfda      	RJMP SUBOPT_0x358
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35D:
00da45 01f8      	MOVW R30,R16
00da46 1be2      	SUB  R30,R18
00da47 0bf3      	SBC  R31,R19
00da48 01de      	MOVW R26,R28
00da49 961c      	ADIW R26,12
00da4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x35E:
00da4b 8da8      	LDD  R26,Y+24
00da4c 8db9      	LDD  R27,Y+24+1
00da4d 0fea      	ADD  R30,R26
00da4e 1ffb      	ADC  R31,R27
00da4f 01bf      	MOVW R22,R30
00da50 cff4      	RJMP SUBOPT_0x35D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x35F:
00da51 01f8      	MOVW R30,R16
00da52 1be2      	SUB  R30,R18
00da53 0bf3      	SBC  R31,R19
00da54 01de      	MOVW R26,R28
00da55 9618      	ADIW R26,8
00da56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x360:
00da57 89ae      	LDD  R26,Y+22
00da58 89bf      	LDD  R27,Y+22+1
00da59 0fea      	ADD  R30,R26
00da5a 1ffb      	ADC  R31,R27
00da5b 01bf      	MOVW R22,R30
00da5c cff4      	RJMP SUBOPT_0x35F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x361:
00da5d 89ac      	LDD  R26,Y+20
00da5e 89bd      	LDD  R27,Y+20+1
00da5f 0fea      	ADD  R30,R26
00da60 1ffb      	ADC  R31,R27
00da61 01bf      	MOVW R22,R30
00da62 01f8      	MOVW R30,R16
00da63 1be2      	SUB  R30,R18
00da64 0bf3      	SBC  R31,R19
00da65 940c cb61 	JMP SUBOPT_0x168
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x362:
00da67 91ec      	LD   R30,X
00da68 e0f0      	LDI  R31,0
00da69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x363:
00da6a 81e8      	LD   R30,Y
00da6b e0f0      	LDI  R31,0
00da6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x364:
00da6d 01de      	MOVW R26,R28
00da6e 965e      	ADIW R26,30
00da6f 0fae      	ADD  R26,R30
00da70 1fbf      	ADC  R27,R31
00da71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x365:
00da72 e0e0      	LDI  R30,LOW(0)
00da73 a3ea      	STD  Y+34,R30
00da74 01de      	MOVW R26,R28
00da75 965e      	ADIW R26,30
00da76 940c a4aa 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x366:
00da78 e0e0      	LDI  R30,LOW(0)
00da79 a3e8      	STD  Y+32,R30
00da7a 01de      	MOVW R26,R28
00da7b 965e      	ADIW R26,30
00da7c 940c a4aa 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x367:
                +
00da7e 87e8     +STD Y + 8 , R30
00da7f 87f9     +STD Y + 8 + 1 , R31
00da80 876a     +STD Y + 8 + 2 , R22
00da81 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00da82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x368:
                +
00da83 8be8     +STD Y + 16 , R30
00da84 8bf9     +STD Y + 16 + 1 , R31
00da85 8b6a     +STD Y + 16 + 2 , R22
00da86 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00da87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x369:
                +
00da88 8bec     +STD Y + 20 , R30
00da89 8bfd     +STD Y + 20 + 1 , R31
00da8a 8b6e     +STD Y + 20 + 2 , R22
00da8b 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00da8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36A:
00da8d 940e e400 	CALL __PUTPARD1
                +
00da8f 8dec     +LDD R30 , Y + 28
00da90 8dfd     +LDD R31 , Y + 28 + 1
00da91 8d6e     +LDD R22 , Y + 28 + 2
00da92 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
00da93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36B:
                +
00da94 e6e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 255 ) )
00da95 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 255 ) )
00da96 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 255 ) )
00da97 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 255 ) )
                 	__POINTD1FN _0x2E0000,255
00da98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36C:
00da99 01de      	MOVW R26,R28
00da9a 9611      	ADIW R26,1
00da9b 0fae      	ADD  R26,R30
00da9c 1fbf      	ADC  R27,R31
00da9d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36D:
00da9e e0e9      	LDI  R30,LOW(9)
00da9f e0f0      	LDI  R31,HIGH(9)
00daa0 93e0 10f4 	STS  _hwCalId,R30
00daa2 93f0 10f5 	STS  _hwCalId+1,R31
00daa4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36E:
00daa5 940e e400 	CALL __PUTPARD1
00daa7 940c c706 	JMP SUBOPT_0xAB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x36F:
00daa9 2fa1      	MOV  R26,R17
00daaa 27bb      	CLR  R27
00daab e0e3      	LDI  R30,LOW(3)
00daac e0f0      	LDI  R31,HIGH(3)
00daad 940e e38d 	CALL __MODW21
00daaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x370:
00dab0 2fa1      	MOV  R26,R17
00dab1 e0b0      	LDI  R27,0
00dab2 e0e3      	LDI  R30,LOW(3)
00dab3 e0f0      	LDI  R31,HIGH(3)
00dab4 940e e34f 	CALL __DIVW21
00dab6 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00dab7 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00dab8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x371:
00dab9 91ac      	LD   R26,X
00daba 940e c1e4 	CALL _isdigit
00dabc 30e0      	CPI  R30,0
00dabd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x372:
00dabe 01bf      	MOVW R22,R30
00dabf 01df      	MOVW R26,R30
00dac0 940e e42c 	CALL __EEPROMRDB
00dac2 2e0e      	MOV  R0,R30
00dac3 940c c706 	JMP SUBOPT_0xAB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x373:
                +
00dac5 e8eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 801 ) )
00dac6 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 801 ) )
00dac7 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 801 ) )
00dac8 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 801 ) )
                 	__POINTD1FN _0x2E0000,801
00dac9 940e e400 	CALL __PUTPARD1
00dacb 2fa1      	MOV  R26,R17
00dacc e0b0      	LDI  R27,0
00dacd 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00dace 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00dacf 940c ca2b 	JMP SUBOPT_0x135
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x374:
                +
00dad1 e7ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 19 ) )
00dad2 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 19 ) )
00dad3 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 19 ) )
00dad4 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 19 ) )
                 	__POINTD1FN _0x2E0000,19
00dad5 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x375:
00dad7 e6ef      	LDI  R30,LOW(_rxPackage3)
00dad8 e0fd      	LDI  R31,HIGH(_rxPackage3)
00dad9 93fa      	ST   -Y,R31
00dada 93ea      	ST   -Y,R30
00dadb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x376:
00dadc 940e e400 	CALL __PUTPARD1
00dade e0a7      	LDI  R26,LOW(7)
00dadf 940e a838 	CALL _strncmpf
00dae1 30e0      	CPI  R30,0
00dae2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x377:
00dae3 940e e400 	CALL __PUTPARD1
00dae5 01da      	MOVW R26,R20
00dae6 91ec      	LD   R30,X
00dae7 940c c388 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x378:
                +
00dae9 e4ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 741 ) )
00daea e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 741 ) )
00daeb e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 741 ) )
00daec e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 741 ) )
                 	__POINTD1FN _0x2E0000,741
00daed 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x379:
                +
00daef ecef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 869 ) )
00daf0 e6f8     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 869 ) )
00daf1 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 869 ) )
00daf2 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 869 ) )
                 	__POINTD1FN _0x2E0000,869
00daf3 940c c274 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37A:
00daf5 85ac      	LDD  R26,Y+12
00daf6 85bd      	LDD  R27,Y+12+1
00daf7 940c 9f16 	JMP  _print_hex_ascii_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x37B:
00daf9 91e0 1a99 	LDS  R30,_n
00dafb 91f0 1a9a 	LDS  R31,_n+1
00dafd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x37C:
00dafe 01f9      	MOVW R30,R18
00daff 940e e2a3 	CALL __LSLW4
00db01 56e5      	SUBI R30,LOW(-_a)
00db02 4ef5      	SBCI R31,HIGH(-_a)
00db03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x37D:
00db04 01df      	MOVW R26,R30
00db05 01f8      	MOVW R30,R16
00db06 940c d2ca 	JMP SUBOPT_0x274
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x37E:
00db08 85ea      	LDD  R30,Y+10
00db09 85fb      	LDD  R31,Y+10+1
00db0a 940e e2a3 	CALL __LSLW4
00db0c 56e5      	SUBI R30,LOW(-_a)
00db0d 4ef5      	SBCI R31,HIGH(-_a)
00db0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37F:
00db0f 01df      	MOVW R26,R30
00db10 01f9      	MOVW R30,R18
00db11 940c d2ca 	JMP SUBOPT_0x274
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x380:
00db13 01df      	MOVW R26,R30
00db14 01f9      	MOVW R30,R18
00db15 940c cfa3 	JMP SUBOPT_0x211
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x381:
00db17 01f8      	MOVW R30,R16
00db18 940e e2a3 	CALL __LSLW4
00db1a 56e5      	SUBI R30,LOW(-_a)
00db1b 4ef5      	SBCI R31,HIGH(-_a)
00db1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x382:
                +
00db1d e0e0     +LDI R30 , LOW ( 0x3F800000 )
00db1e e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00db1f e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00db20 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00db21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x383:
                +
00db22 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00db23 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00db24 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00db25 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00db26 940c d262 	JMP SUBOPT_0x264
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x384:
00db28 97ef      	SBIW R28,63
00db29 97ef      	SBIW R28,63
00db2a 97ef      	SBIW R28,63
00db2b 9727      	SBIW R28,7
00db2c ec84      	LDI  R24,196
00db2d e0a0      	LDI  R26,LOW(0)
00db2e e0b0      	LDI  R27,HIGH(0)
00db2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x385:
                +
00db30 e0e0     +LDI R30 , LOW ( 0x44800000 )
00db31 e0f0     +LDI R31 , HIGH ( 0x44800000 )
00db32 e860     +LDI R22 , BYTE3 ( 0x44800000 )
00db33 e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
00db34 940e e1ef 	CALL __DIVF21
                +
00db36 e3a3     +LDI R26 , LOW ( 0x40533333 )
00db37 e3b3     +LDI R27 , HIGH ( 0x40533333 )
00db38 e583     +LDI R24 , BYTE3 ( 0x40533333 )
00db39 e490     +LDI R25 , BYTE4 ( 0x40533333 )
                 	__GETD2N 0x40533333
00db3a 940e e1a1 	CALL __MULF12
00db3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x386:
                +
00db3d 01de     +MOVW R26 , R28
00db3e 54a6     +SUBI R26 , LOW ( - 186 )
00db3f 4fbf     +SBCI R27 , HIGH ( - 186 )
00db40 900d     +LD R0 , X +
00db41 901d     +LD R1 , X +
00db42 918d     +LD R24 , X +
00db43 919c     +LD R25 , X
00db44 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
                +
00db45 e1e2     +LDI R30 , LOW ( 0xBDC08312 )
00db46 e8f3     +LDI R31 , HIGH ( 0xBDC08312 )
00db47 ec60     +LDI R22 , BYTE3 ( 0xBDC08312 )
00db48 eb7d     +LDI R23 , BYTE4 ( 0xBDC08312 )
                 	__GETD1N 0xBDC08312
00db49 940e e234 	CALL __CMPF12
00db4b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x387:
                +
00db4c 01de     +MOVW R26 , R28
00db4d 54a6     +SUBI R26 , LOW ( - 186 )
00db4e 4fbf     +SBCI R27 , HIGH ( - 186 )
00db4f 900d     +LD R0 , X +
00db50 901d     +LD R1 , X +
00db51 918d     +LD R24 , X +
00db52 919c     +LD R25 , X
00db53 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
00db54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x388:
                +
00db55 e0e0     +LDI R30 , LOW ( 0xBEC00000 )
00db56 e0f0     +LDI R31 , HIGH ( 0xBEC00000 )
00db57 ec60     +LDI R22 , BYTE3 ( 0xBEC00000 )
00db58 eb7e     +LDI R23 , BYTE4 ( 0xBEC00000 )
                 	__GETD1N 0xBEC00000
00db59 940e e234 	CALL __CMPF12
00db5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x389:
                +
00db5c 01fe     +MOVW R30 , R28
00db5d 5ce2     +SUBI R30 , LOW ( - 62 )
00db5e 4fff     +SBCI R31 , HIGH ( - 62 )
00db5f 9001     +LD R0 , Z +
00db60 9011     +LD R1 , Z +
00db61 9161     +LD R22 , Z +
00db62 8170     +LD R23 , Z
00db63 01f0     +MOVW R30 , R0
                 	__GETD1SX 62
00db64 940e e400 	CALL __PUTPARD1
00db66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x38A:
00db67 940e e400 	CALL __PUTPARD1
00db69 01fe      	MOVW R30,R28
00db6a 53e6      	SUBI R30,LOW(-(202))
00db6b 4fff      	SBCI R31,HIGH(-(202))
00db6c 93fa      	ST   -Y,R31
00db6d 93ea      	ST   -Y,R30
00db6e 01fe      	MOVW R30,R28
00db6f 53e8      	SUBI R30,LOW(-(200))
00db70 4fff      	SBCI R31,HIGH(-(200))
00db71 93fa      	ST   -Y,R31
00db72 93ea      	ST   -Y,R30
00db73 01de      	MOVW R26,R28
00db74 53aa      	SUBI R26,LOW(-(198))
00db75 4fbf      	SBCI R27,HIGH(-(198))
00db76 940e a0eb 	CALL _gaussian
                +
00db78 01fe     +MOVW R30 , R28
00db79 54e6     +SUBI R30 , LOW ( - 186 )
00db7a 4fff     +SBCI R31 , HIGH ( - 186 )
00db7b 9001     +LD R0 , Z +
00db7c 9011     +LD R1 , Z +
00db7d 9161     +LD R22 , Z +
00db7e 8170     +LD R23 , Z
00db7f 01f0     +MOVW R30 , R0
                 	__GETD1SX 186
                +
00db80 01de     +MOVW R26 , R28
00db81 54ae     +SUBI R26 , LOW ( - 178 )
00db82 4fbf     +SBCI R27 , HIGH ( - 178 )
00db83 900d     +LD R0 , X +
00db84 901d     +LD R1 , X +
00db85 918d     +LD R24 , X +
00db86 919c     +LD R25 , X
00db87 01d0     +MOVW R26 , R0
                 	__GETD2SX 178
00db88 940e e1a1 	CALL __MULF12
00db8a dfc1      	RCALL SUBOPT_0x387
00db8b 940e e1a1 	CALL __MULF12
00db8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x38B:
                +
00db8e 01fe     +MOVW R30 , R28
00db8f 54e6     +SUBI R30 , LOW ( - 186 )
00db90 4fff     +SBCI R31 , HIGH ( - 186 )
00db91 9001     +LD R0 , Z +
00db92 9011     +LD R1 , Z +
00db93 9161     +LD R22 , Z +
00db94 8170     +LD R23 , Z
00db95 01f0     +MOVW R30 , R0
                 	__GETD1SX 186
00db96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x38C:
                +
00db97 01de     +MOVW R26 , R28
00db98 55a2     +SUBI R26 , LOW ( - 174 )
00db99 4fbf     +SBCI R27 , HIGH ( - 174 )
00db9a 900d     +LD R0 , X +
00db9b 901d     +LD R1 , X +
00db9c 918d     +LD R24 , X +
00db9d 919c     +LD R25 , X
00db9e 01d0     +MOVW R26 , R0
                 	__GETD2SX 174
00db9f 940e e1a1 	CALL __MULF12
00dba1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x38D:
00dba2 940e e151 	CALL __ADDF12
                +
00dba4 01de     +MOVW R26 , R28
00dba5 55a6     +SUBI R26 , LOW ( - 170 )
00dba6 4fbf     +SBCI R27 , HIGH ( - 170 )
00dba7 900d     +LD R0 , X +
00dba8 901d     +LD R1 , X +
00dba9 918d     +LD R24 , X +
00dbaa 919c     +LD R25 , X
00dbab 01d0     +MOVW R26 , R0
                 	__GETD2SX 170
00dbac 940e e151 	CALL __ADDF12
00dbae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38E:
00dbaf df9c      	RCALL SUBOPT_0x387
                +
00dbb0 e6e2     +LDI R30 , LOW ( 0xBF381062 )
00dbb1 e1f0     +LDI R31 , HIGH ( 0xBF381062 )
00dbb2 e368     +LDI R22 , BYTE3 ( 0xBF381062 )
00dbb3 eb7f     +LDI R23 , BYTE4 ( 0xBF381062 )
                 	__GETD1N 0xBF381062
00dbb4 940e e234 	CALL __CMPF12
00dbb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x38F:
00dbb7 940e e400 	CALL __PUTPARD1
00dbb9 01fe      	MOVW R30,R28
00dbba 5bee      	SUBI R30,LOW(-(66))
00dbbb 4fff      	SBCI R31,HIGH(-(66))
00dbbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x390:
00dbbd 01fe      	MOVW R30,R28
00dbbe 53e6      	SUBI R30,LOW(-(202))
00dbbf 4fff      	SBCI R31,HIGH(-(202))
00dbc0 93fa      	ST   -Y,R31
00dbc1 93ea      	ST   -Y,R30
00dbc2 01fe      	MOVW R30,R28
00dbc3 53e8      	SUBI R30,LOW(-(200))
00dbc4 4fff      	SBCI R31,HIGH(-(200))
00dbc5 93fa      	ST   -Y,R31
00dbc6 93ea      	ST   -Y,R30
00dbc7 01de      	MOVW R26,R28
00dbc8 53aa      	SUBI R26,LOW(-(198))
00dbc9 4fbf      	SBCI R27,HIGH(-(198))
00dbca 940e a0eb 	CALL _gaussian
00dbcc dfc1      	RCALL SUBOPT_0x38B
                +
00dbcd 01de     +MOVW R26 , R28
00dbce 54ae     +SUBI R26 , LOW ( - 178 )
00dbcf 4fbf     +SBCI R27 , HIGH ( - 178 )
00dbd0 900d     +LD R0 , X +
00dbd1 901d     +LD R1 , X +
00dbd2 918d     +LD R24 , X +
00dbd3 919c     +LD R25 , X
00dbd4 01d0     +MOVW R26 , R0
                 	__GETD2SX 178
00dbd5 940e e1a1 	CALL __MULF12
00dbd7 df74      	RCALL SUBOPT_0x387
00dbd8 940e e1a1 	CALL __MULF12
00dbda 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x391:
00dbdb dfb2      	RCALL SUBOPT_0x38B
00dbdc cfba      	RJMP SUBOPT_0x38C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x392:
00dbdd df6e      	RCALL SUBOPT_0x387
                +
00dbde e2e1     +LDI R30 , LOW ( 0xBF82B021 )
00dbdf ebf0     +LDI R31 , HIGH ( 0xBF82B021 )
00dbe0 e862     +LDI R22 , BYTE3 ( 0xBF82B021 )
00dbe1 eb7f     +LDI R23 , BYTE4 ( 0xBF82B021 )
                 	__GETD1N 0xBF82B021
00dbe2 940e e234 	CALL __CMPF12
00dbe4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x393:
00dbe5 df66      	RCALL SUBOPT_0x387
                +
00dbe6 e9e8     +LDI R30 , LOW ( 0xBFA26E98 )
00dbe7 e6fe     +LDI R31 , HIGH ( 0xBFA26E98 )
00dbe8 ea62     +LDI R22 , BYTE3 ( 0xBFA26E98 )
00dbe9 eb7f     +LDI R23 , BYTE4 ( 0xBFA26E98 )
                 	__GETD1N 0xBFA26E98
00dbea 940e e234 	CALL __CMPF12
00dbec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x394:
                +
00dbed e0e0     +LDI R30 , LOW ( 0x447A0000 )
00dbee e0f0     +LDI R31 , HIGH ( 0x447A0000 )
00dbef e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
00dbf0 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
00dbf1 940e e1a1 	CALL __MULF12
00dbf3 cdf9      	RJMP SUBOPT_0x351
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x395:
00dbf4 de8e      	RCALL SUBOPT_0x368
00dbf5 940c d11e 	JMP SUBOPT_0x234
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x396:
                +
00dbf7 01de     +MOVW R26 , R28
00dbf8 54a8     +SUBI R26 , LOW ( - 184 )
00dbf9 4fbf     +SBCI R27 , HIGH ( - 184 )
00dbfa 900d     +LD R0 , X +
00dbfb 901d     +LD R1 , X +
00dbfc 918d     +LD R24 , X +
00dbfd 919c     +LD R25 , X
00dbfe 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
                +
00dbff e1e2     +LDI R30 , LOW ( 0xBDC08312 )
00dc00 e8f3     +LDI R31 , HIGH ( 0xBDC08312 )
00dc01 ec60     +LDI R22 , BYTE3 ( 0xBDC08312 )
00dc02 eb7d     +LDI R23 , BYTE4 ( 0xBDC08312 )
                 	__GETD1N 0xBDC08312
00dc03 940e e234 	CALL __CMPF12
00dc05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x397:
                +
00dc06 01de     +MOVW R26 , R28
00dc07 54a8     +SUBI R26 , LOW ( - 184 )
00dc08 4fbf     +SBCI R27 , HIGH ( - 184 )
00dc09 900d     +LD R0 , X +
00dc0a 901d     +LD R1 , X +
00dc0b 918d     +LD R24 , X +
00dc0c 919c     +LD R25 , X
00dc0d 01d0     +MOVW R26 , R0
                 	__GETD2SX 184
00dc0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x398:
00dc0f 940e e400 	CALL __PUTPARD1
00dc11 01fe      	MOVW R30,R28
00dc12 53e8      	SUBI R30,LOW(-(200))
00dc13 4fff      	SBCI R31,HIGH(-(200))
00dc14 93fa      	ST   -Y,R31
00dc15 93ea      	ST   -Y,R30
00dc16 01fe      	MOVW R30,R28
00dc17 53ea      	SUBI R30,LOW(-(198))
00dc18 4fff      	SBCI R31,HIGH(-(198))
00dc19 93fa      	ST   -Y,R31
00dc1a 93ea      	ST   -Y,R30
00dc1b 01de      	MOVW R26,R28
00dc1c 53ac      	SUBI R26,LOW(-(196))
00dc1d 4fbf      	SBCI R27,HIGH(-(196))
00dc1e 940e a0eb 	CALL _gaussian
                +
00dc20 01fe     +MOVW R30 , R28
00dc21 54e8     +SUBI R30 , LOW ( - 184 )
00dc22 4fff     +SBCI R31 , HIGH ( - 184 )
00dc23 9001     +LD R0 , Z +
00dc24 9011     +LD R1 , Z +
00dc25 9161     +LD R22 , Z +
00dc26 8170     +LD R23 , Z
00dc27 01f0     +MOVW R30 , R0
                 	__GETD1SX 184
                +
00dc28 01de     +MOVW R26 , R28
00dc29 55a0     +SUBI R26 , LOW ( - 176 )
00dc2a 4fbf     +SBCI R27 , HIGH ( - 176 )
00dc2b 900d     +LD R0 , X +
00dc2c 901d     +LD R1 , X +
00dc2d 918d     +LD R24 , X +
00dc2e 919c     +LD R25 , X
00dc2f 01d0     +MOVW R26 , R0
                 	__GETD2SX 176
00dc30 940e e1a1 	CALL __MULF12
00dc32 dfd3      	RCALL SUBOPT_0x397
00dc33 940e e1a1 	CALL __MULF12
00dc35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x399:
                +
00dc36 01fe     +MOVW R30 , R28
00dc37 54e8     +SUBI R30 , LOW ( - 184 )
00dc38 4fff     +SBCI R31 , HIGH ( - 184 )
00dc39 9001     +LD R0 , Z +
00dc3a 9011     +LD R1 , Z +
00dc3b 9161     +LD R22 , Z +
00dc3c 8170     +LD R23 , Z
00dc3d 01f0     +MOVW R30 , R0
                 	__GETD1SX 184
00dc3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x39A:
                +
00dc3f 01de     +MOVW R26 , R28
00dc40 55a4     +SUBI R26 , LOW ( - 172 )
00dc41 4fbf     +SBCI R27 , HIGH ( - 172 )
00dc42 900d     +LD R0 , X +
00dc43 901d     +LD R1 , X +
00dc44 918d     +LD R24 , X +
00dc45 919c     +LD R25 , X
00dc46 01d0     +MOVW R26 , R0
                 	__GETD2SX 172
00dc47 940e e1a1 	CALL __MULF12
00dc49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x39B:
00dc4a 940e e151 	CALL __ADDF12
                +
00dc4c 01de     +MOVW R26 , R28
00dc4d 55a8     +SUBI R26 , LOW ( - 168 )
00dc4e 4fbf     +SBCI R27 , HIGH ( - 168 )
00dc4f 900d     +LD R0 , X +
00dc50 901d     +LD R1 , X +
00dc51 918d     +LD R24 , X +
00dc52 919c     +LD R25 , X
00dc53 01d0     +MOVW R26 , R0
                 	__GETD2SX 168
00dc54 940e e151 	CALL __ADDF12
00dc56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39C:
00dc57 dfae      	RCALL SUBOPT_0x397
                +
00dc58 e6e2     +LDI R30 , LOW ( 0xBF381062 )
00dc59 e1f0     +LDI R31 , HIGH ( 0xBF381062 )
00dc5a e368     +LDI R22 , BYTE3 ( 0xBF381062 )
00dc5b eb7f     +LDI R23 , BYTE4 ( 0xBF381062 )
                 	__GETD1N 0xBF381062
00dc5c 940e e234 	CALL __CMPF12
00dc5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x39D:
00dc5f 01fe      	MOVW R30,R28
00dc60 53e8      	SUBI R30,LOW(-(200))
00dc61 4fff      	SBCI R31,HIGH(-(200))
00dc62 93fa      	ST   -Y,R31
00dc63 93ea      	ST   -Y,R30
00dc64 01fe      	MOVW R30,R28
00dc65 53ea      	SUBI R30,LOW(-(198))
00dc66 4fff      	SBCI R31,HIGH(-(198))
00dc67 93fa      	ST   -Y,R31
00dc68 93ea      	ST   -Y,R30
00dc69 01de      	MOVW R26,R28
00dc6a 53ac      	SUBI R26,LOW(-(196))
00dc6b 4fbf      	SBCI R27,HIGH(-(196))
00dc6c 940e a0eb 	CALL _gaussian
00dc6e dfc7      	RCALL SUBOPT_0x399
                +
00dc6f 01de     +MOVW R26 , R28
00dc70 55a0     +SUBI R26 , LOW ( - 176 )
00dc71 4fbf     +SBCI R27 , HIGH ( - 176 )
00dc72 900d     +LD R0 , X +
00dc73 901d     +LD R1 , X +
00dc74 918d     +LD R24 , X +
00dc75 919c     +LD R25 , X
00dc76 01d0     +MOVW R26 , R0
                 	__GETD2SX 176
00dc77 940e e1a1 	CALL __MULF12
00dc79 df8c      	RCALL SUBOPT_0x397
00dc7a 940e e1a1 	CALL __MULF12
00dc7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39E:
00dc7d dfb8      	RCALL SUBOPT_0x399
00dc7e cfc0      	RJMP SUBOPT_0x39A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39F:
00dc7f df86      	RCALL SUBOPT_0x397
                +
00dc80 e2e1     +LDI R30 , LOW ( 0xBF82B021 )
00dc81 ebf0     +LDI R31 , HIGH ( 0xBF82B021 )
00dc82 e862     +LDI R22 , BYTE3 ( 0xBF82B021 )
00dc83 eb7f     +LDI R23 , BYTE4 ( 0xBF82B021 )
                 	__GETD1N 0xBF82B021
00dc84 940e e234 	CALL __CMPF12
00dc86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A0:
00dc87 940e e400 	CALL __PUTPARD1
00dc89 01fe      	MOVW R30,R28
00dc8a 5ce0      	SUBI R30,LOW(-(64))
00dc8b 4fff      	SBCI R31,HIGH(-(64))
00dc8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A1:
00dc8d df78      	RCALL SUBOPT_0x397
                +
00dc8e e9e8     +LDI R30 , LOW ( 0xBFA26E98 )
00dc8f e6fe     +LDI R31 , HIGH ( 0xBFA26E98 )
00dc90 ea62     +LDI R22 , BYTE3 ( 0xBFA26E98 )
00dc91 eb7f     +LDI R23 , BYTE4 ( 0xBFA26E98 )
                 	__GETD1N 0xBFA26E98
00dc92 940e e234 	CALL __CMPF12
00dc94 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3A2:
                +
00dc95 87e9     +STD Y + 9 , R30
00dc96 87fa     +STD Y + 9 + 1 , R31
00dc97 876b     +STD Y + 9 + 2 , R22
00dc98 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00dc99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3A3:
00dc9a 81ae      	LDD  R26,Y+6
00dc9b 81bf      	LDD  R27,Y+6+1
00dc9c 9611      	ADIW R26,1
00dc9d 83ae      	STD  Y+6,R26
00dc9e 83bf      	STD  Y+6+1,R27
00dc9f 9711      	SBIW R26,1
00dca0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A4:
00dca1 940e c732 	CALL SUBOPT_0xB4
                +
00dca3 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00dca4 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00dca5 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00dca6 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00dca7 940e e1a1 	CALL __MULF12
00dca9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3A5:
00dcaa 940e c72d 	CALL SUBOPT_0xB3
                +
00dcac 85a9     +LDD R26 , Y + 9
00dcad 85ba     +LDD R27 , Y + 9 + 1
00dcae 858b     +LDD R24 , Y + 9 + 2
00dcaf 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00dcb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3A6:
00dcb1 940e c942 	CALL SUBOPT_0x10C
00dcb3 940e e1a1 	CALL __MULF12
00dcb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A7:
00dcb6 940e cf3f 	CALL SUBOPT_0x206
00dcb8 940e e151 	CALL __ADDF12
00dcba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A8:
00dcbb 2fe0      	MOV  R30,R16
00dcbc 5de0      	SUBI R30,-LOW(48)
00dcbd 93ec      	ST   X,R30
00dcbe 2fe0      	MOV  R30,R16
00dcbf e0f0      	LDI  R31,0
00dcc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A9:
00dcc1 940e e2dd 	CALL __CWD1
00dcc3 940e e117 	CALL __CDF1
00dcc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3AA:
                +
00dcc6 85a9     +LDD R26 , Y + 9
00dcc7 85ba     +LDD R27 , Y + 9 + 1
00dcc8 858b     +LDD R24 , Y + 9 + 2
00dcc9 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00dcca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AB:
00dccb 89e8      	LDD  R30,Y+16
00dccc 89f9      	LDD  R31,Y+16+1
00dccd 9631      	ADIW R30,1
00dcce 8be8      	STD  Y+16,R30
00dccf 8bf9      	STD  Y+16+1,R31
00dcd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AC:
00dcd1 940e c2ba 	CALL SUBOPT_0xB
00dcd3 cfdd      	RJMP SUBOPT_0x3A6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AD:
00dcd4 940e e1a1 	CALL __MULF12
00dcd6 940c c886 	JMP SUBOPT_0xEA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AE:
00dcd8 93e0 1ad1 	STS  __seed_G100,R30
00dcda 93f0 1ad2 	STS  __seed_G100+1,R31
00dcdc 9360 1ad3 	STS  __seed_G100+2,R22
00dcde 9370 1ad4 	STS  __seed_G100+3,R23
00dce0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AF:
00dce1 940e e3cc 	CALL __GETW1P
00dce3 83ee      	STD  Y+6,R30
00dce4 83ff      	STD  Y+6+1,R31
00dce5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3B0:
00dce6 e0f0      	LDI  R31,0
00dce7 940e e2dd 	CALL __CWD1
00dce9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3B1:
00dcea 940e e3d6 	CALL __GETD1P_INC
00dcec 940e c7fa 	CALL SUBOPT_0xD3
00dcee 940e e3e0 	CALL __PUTDP1_DEC
00dcf0 940c c81a 	JMP SUBOPT_0xDA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B2:
00dcf2 940e e3d0 	CALL __GETD1P
                +
00dcf4 83e9     +STD Y + 1 , R30
00dcf5 83fa     +STD Y + 1 + 1 , R31
00dcf6 836b     +STD Y + 1 + 2 , R22
00dcf7 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00dcf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B3:
                +
00dcf9 81ed     +LDD R30 , Y + 5
00dcfa 81fe     +LDD R31 , Y + 5 + 1
00dcfb 816f     +LDD R22 , Y + 5 + 2
00dcfc 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00dcfd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x3B4:
00dcfe 85e9      	LDD  R30,Y+9
00dcff 85fa      	LDD  R31,Y+9+1
00dd00 81a1      	LDD  R26,Z+1
00dd01 93aa      	ST   -Y,R26
00dd02 85ea      	LDD  R30,Y+10
00dd03 85fb      	LDD  R31,Y+10+1
00dd04 96f2      	ADIW R30,50
00dd05 93fa      	ST   -Y,R31
00dd06 93ea      	ST   -Y,R30
00dd07 940e c617 	CALL SUBOPT_0x89
00dd09 940e e400 	CALL __PUTPARD1
00dd0b e0a1      	LDI  R26,LOW(1)
00dd0c 940c aad5 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B5:
                +
00dd0e a1a2     +LDD R26 , Z + 34
00dd0f a1b3     +LDD R27 , Z + 34 + 1
00dd10 a184     +LDD R24 , Z + 34 + 2
00dd11 a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00dd12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B6:
00dd13 93fa      	ST   -Y,R31
00dd14 93ea      	ST   -Y,R30
00dd15 940e c491 	CALL SUBOPT_0x4F
00dd17 940e e400 	CALL __PUTPARD1
00dd19 e0a1      	LDI  R26,LOW(1)
00dd1a 940e aa70 	CALL _disk_read
00dd1c 30e0      	CPI  R30,0
00dd1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B7:
00dd1e 940e c396 	CALL SUBOPT_0x2C
00dd20 940c ae12 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3B8:
00dd22 96f2      	ADIW R30,50
00dd23 93fa      	ST   -Y,R31
00dd24 93ea      	ST   -Y,R30
00dd25 e0e0      	LDI  R30,LOW(0)
00dd26 e0f0      	LDI  R31,HIGH(0)
00dd27 93fa      	ST   -Y,R31
00dd28 93ea      	ST   -Y,R30
00dd29 e0a0      	LDI  R26,LOW(512)
00dd2a e0b2      	LDI  R27,HIGH(512)
00dd2b 940c adb5 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B9:
00dd2d 940e e3d0 	CALL __GETD1P
00dd2f 01d0      	MOVW R26,R0
00dd30 940e e3db 	CALL __PUTDP1
00dd32 81e9      	LDD  R30,Y+1
00dd33 81fa      	LDD  R31,Y+1+1
00dd34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3BA:
                +
00dd35 89a2     +LDD R26 , Z + 18
00dd36 89b3     +LDD R27 , Z + 18 + 1
00dd37 8984     +LDD R24 , Z + 18 + 2
00dd38 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00dd39 940e e405 	CALL __PUTPARD2
00dd3b e0a1      	LDI  R26,LOW(1)
00dd3c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3BB:
                +
00dd3d 30a2     +CPI R26 , LOW ( 0x2 )
00dd3e e0e0     +LDI R30 , HIGH ( 0x2 )
00dd3f 07be     +CPC R27 , R30
00dd40 e0e0     +LDI R30 , BYTE3 ( 0x2 )
00dd41 078e     +CPC R24 , R30
00dd42 e0e0     +LDI R30 , BYTE4 ( 0x2 )
00dd43 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00dd44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BC:
                +
00dd45 e0e1     +LDI R30 , LOW ( 0x1 )
00dd46 e0f0     +LDI R31 , HIGH ( 0x1 )
00dd47 e060     +LDI R22 , BYTE3 ( 0x1 )
00dd48 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00dd49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BD:
00dd4a 940e e3d0 	CALL __GETD1P
00dd4c 940c c6ef 	JMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3BE:
00dd4e 01d9      	MOVW R26,R18
00dd4f e0e0      	LDI  R30,LOW(512)
00dd50 e0f2      	LDI  R31,HIGH(512)
00dd51 940e e33c 	CALL __DIVW21U
00dd53 940c cf18 	JMP SUBOPT_0x201
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3BF:
00dd55 940e e25d 	CALL __ADDD21
00dd57 940e ae12 	CALL _move_window_G103
00dd59 30e0      	CPI  R30,0
00dd5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C0:
00dd5b 85ac      	LDD  R26,Y+12
00dd5c 85bd      	LDD  R27,Y+12+1
00dd5d 96d2      	ADIW R26,50
00dd5e 01f9      	MOVW R30,R18
00dd5f 70f1      	ANDI R31,HIGH(0x1FF)
00dd60 0fae      	ADD  R26,R30
00dd61 1fbf      	ADC  R27,R31
00dd62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C1:
                +
00dd63 e0e0     +LDI R30 , LOW ( 0x100 )
00dd64 e0f1     +LDI R31 , HIGH ( 0x100 )
00dd65 e060     +LDI R22 , BYTE3 ( 0x100 )
00dd66 e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00dd67 940e e354 	CALL __DIVD21U
00dd69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C2:
00dd6a 940e e31e 	CALL __MULB1W2U
00dd6c 70f1      	ANDI R31,HIGH(0x1FF)
00dd6d 85ac      	LDD  R26,Y+12
00dd6e 85bd      	LDD  R27,Y+12+1
00dd6f 96d2      	ADIW R26,50
00dd70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C3:
                +
00dd71 e8e0     +LDI R30 , LOW ( 0x80 )
00dd72 e0f0     +LDI R31 , HIGH ( 0x80 )
00dd73 e060     +LDI R22 , BYTE3 ( 0x80 )
00dd74 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00dd75 940e e354 	CALL __DIVD21U
00dd77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C4:
                +
00dd78 85ae     +LDD R26 , Y + 14
00dd79 85bf     +LDD R27 , Y + 14 + 1
00dd7a 8988     +LDD R24 , Y + 14 + 2
00dd7b 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00dd7c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3C5:
00dd7d 01d8      	MOVW R26,R16
00dd7e e0e0      	LDI  R30,LOW(512)
00dd7f e0f2      	LDI  R31,HIGH(512)
00dd80 940e e33c 	CALL __DIVW21U
00dd82 940e c810 	CALL SUBOPT_0xD8
00dd84 2766      	CLR  R22
00dd85 2777      	CLR  R23
00dd86 940e e25d 	CALL __ADDD21
00dd88 940e ae12 	CALL _move_window_G103
00dd8a 2f5e      	MOV  R21,R30
00dd8b 3050      	CPI  R21,0
00dd8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C6:
00dd8d 89aa      	LDD  R26,Y+18
00dd8e 89bb      	LDD  R27,Y+18+1
00dd8f 96d2      	ADIW R26,50
00dd90 01f8      	MOVW R30,R16
00dd91 70f1      	ANDI R31,HIGH(0x1FF)
00dd92 0fea      	ADD  R30,R26
00dd93 1ffb      	ADC  R31,R27
00dd94 019f      	MOVW R18,R30
00dd95 85ee      	LDD  R30,Y+14
00dd96 70e1      	ANDI R30,LOW(0x1)
00dd97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C7:
00dd98 940e c810 	CALL SUBOPT_0xD8
00dd9a 940e e25d 	CALL __ADDD21
00dd9c 940e ae12 	CALL _move_window_G103
00dd9e 2f5e      	MOV  R21,R30
00dd9f 3050      	CPI  R21,0
00dda0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C8:
00dda1 940e e31e 	CALL __MULB1W2U
00dda3 70f1      	ANDI R31,HIGH(0x1FF)
00dda4 89aa      	LDD  R26,Y+18
00dda5 89bb      	LDD  R27,Y+18+1
00dda6 96d2      	ADIW R26,50
00dda7 0fea      	ADD  R30,R26
00dda8 1ffb      	ADC  R31,R27
00dda9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C9:
                +
00ddaa 81ad     +LDD R26 , Y + 5
00ddab 81be     +LDD R27 , Y + 5 + 1
00ddac 818f     +LDD R24 , Y + 5 + 2
00ddad 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00ddae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3CA:
00ddaf 85a9      	LDD  R26,Y+9
00ddb0 85ba      	LDD  R27,Y+9+1
00ddb1 965e      	ADIW R26,30
00ddb2 940e e3d0 	CALL __GETD1P
00ddb4 dff5      	RCALL SUBOPT_0x3C9
00ddb5 940e e470 	CALL __CPD21
00ddb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CB:
                +
00ddb8 81e9     +LDD R30 , Y + 1
00ddb9 81fa     +LDD R31 , Y + 1 + 1
00ddba 816b     +LDD R22 , Y + 1 + 2
00ddbb 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00ddbc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3CC:
                +
00ddbd 30a1     +CPI R26 , LOW ( 0x1 )
00ddbe e0e0     +LDI R30 , HIGH ( 0x1 )
00ddbf 07be     +CPC R27 , R30
00ddc0 e0e0     +LDI R30 , BYTE3 ( 0x1 )
00ddc1 078e     +CPC R24 , R30
00ddc2 e0e0     +LDI R30 , BYTE4 ( 0x1 )
00ddc3 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00ddc4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CD:
                +
00ddc5 85a6     +LDD R26 , Z + 14
00ddc6 85b7     +LDD R27 , Z + 14 + 1
00ddc7 8980     +LDD R24 , Z + 14 + 2
00ddc8 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00ddc9 940c c3fc 	JMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CE:
                +
00ddcb 83ed     +STD Y + 5 , R30
00ddcc 83fe     +STD Y + 5 + 1 , R31
00ddcd 836f     +STD Y + 5 + 2 , R22
00ddce 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00ddcf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CF:
00ddd0 89ec      	LDD  R30,Y+20
00ddd1 89fd      	LDD  R31,Y+20+1
00ddd2 93fa      	ST   -Y,R31
00ddd3 93ea      	ST   -Y,R30
00ddd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D0:
                +
00ddd5 89aa     +LDD R26 , Y + 18
00ddd6 89bb     +LDD R27 , Y + 18 + 1
00ddd7 898c     +LDD R24 , Y + 18 + 2
00ddd8 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00ddd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D1:
                +
00ddda e0e2     +LDI R30 , LOW ( 0x2 )
00dddb e0f0     +LDI R31 , HIGH ( 0x2 )
00dddc e060     +LDI R22 , BYTE3 ( 0x2 )
00dddd e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00ddde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D2:
00dddf 940e c617 	CALL SUBOPT_0x89
00dde1 940e c810 	CALL SUBOPT_0xD8
00dde3 940e e46b 	CALL __CPD12
00dde5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D3:
                +
00dde6 e0e0     +LDI R30 , LOW ( 0x0 )
00dde7 e0f0     +LDI R31 , HIGH ( 0x0 )
00dde8 e060     +LDI R22 , BYTE3 ( 0x0 )
00dde9 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00ddea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3D4:
00ddeb 85a8      	LDD  R26,Y+8
00ddec 85b9      	LDD  R27,Y+8+1
00dded 940e e3cc 	CALL __GETW1P
00ddef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D5:
00ddf0 967e      	ADIW R30,30
00ddf1 01df      	MOVW R26,R30
00ddf2 940e e3d0 	CALL __GETD1P
00ddf4 940e c732 	CALL SUBOPT_0xB4
00ddf6 940e e470 	CALL __CPD21
00ddf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D6:
00ddf9 940e c72d 	CALL SUBOPT_0xB3
                +
00ddfb 85a8     +LDD R26 , Y + 8
00ddfc 85b9     +LDD R27 , Y + 8 + 1
00ddfd 961a     +ADIW R26 , 10
00ddfe 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00de00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D7:
00de01 85a8      	LDD  R26,Y+8
00de02 85b9      	LDD  R27,Y+8+1
00de03 cb3a      	RJMP SUBOPT_0x343
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3D8:
00de04 2766      	CLR  R22
00de05 2777      	CLR  R23
00de06 940e e258 	CALL __ADDD12
00de08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D9:
00de09 70ef      	ANDI R30,LOW(0xF)
00de0a 70f0      	ANDI R31,HIGH(0xF)
00de0b 0fee      	LSL  R30
00de0c 940e e2a3 	CALL __LSLW4
00de0e 0fea      	ADD  R30,R26
00de0f 1ffb      	ADC  R31,R27
00de10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DA:
00de11 940e e3d0 	CALL __GETD1P
00de13 940e e459 	CALL __CPD10
00de15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3DB:
00de16 85a9      	LDD  R26,Y+9
00de17 85ba      	LDD  R27,Y+9+1
00de18 940e e3cc 	CALL __GETW1P
00de1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3DC:
00de1b 85a9      	LDD  R26,Y+9
00de1c 85ba      	LDD  R27,Y+9+1
00de1d cb20      	RJMP SUBOPT_0x343
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DD:
00de1e 85eb      	LDD  R30,Y+11
00de1f 85fc      	LDD  R31,Y+11+1
                +
00de20 85a2     +LDD R26 , Z + 10
00de21 85b3     +LDD R27 , Z + 10 + 1
00de22 8584     +LDD R24 , Z + 10 + 2
00de23 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00de24 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3DE:
00de25 967e      	ADIW R30,30
00de26 01df      	MOVW R26,R30
00de27 940e e3d0 	CALL __GETD1P
00de29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DF:
00de2a 81ac      	LDD  R26,Y+4
00de2b 81bd      	LDD  R27,Y+4+1
00de2c cb11      	RJMP SUBOPT_0x343
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3E0:
00de2d 81ee      	LDD  R30,Y+6
00de2e 81ff      	LDD  R31,Y+6+1
                +
00de2f 85a6     +LDD R26 , Z + 14
00de30 85b7     +LDD R27 , Z + 14 + 1
00de31 8980     +LDD R24 , Z + 14 + 2
00de32 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00de33 940e ae12 	CALL _move_window_G103
00de35 2f1e      	MOV  R17,R30
00de36 3010      	CPI  R17,0
00de37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E1:
00de38 933a      	ST   -Y,R19
00de39 932a      	ST   -Y,R18
00de3a 81ee      	LDD  R30,Y+6
00de3b 81ff      	LDD  R31,Y+6+1
00de3c 89a4      	LDD  R26,Z+20
00de3d 89b5      	LDD  R27,Z+21
00de3e 93ba      	ST   -Y,R27
00de3f 93aa      	ST   -Y,R26
00de40 940c c467 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3E2:
00de42 2fe2      	MOV  R30,R18
00de43 5f2f      	SUBI R18,-1
00de44 e0f0      	LDI  R31,0
00de45 0fe4      	ADD  R30,R20
00de46 1ff5      	ADC  R31,R21
00de47 8300      	ST   Z,R16
00de48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E3:
00de49 e0f0      	LDI  R31,0
00de4a 0fe4      	ADD  R30,R20
00de4b 1ff5      	ADC  R31,R21
00de4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E4:
                +
00de4d 81ae     +LDD R26 , Y + 6
00de4e 81bf     +LDD R27 , Y + 6 + 1
00de4f 9616     +ADIW R26 , 6
00de50 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00de52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E5:
00de53 01d9      	MOVW R26,R18
00de54 9654      	ADIW R26,20
00de55 940c c33e 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E6:
00de57 01d9      	MOVW R26,R18
00de58 965a      	ADIW R26,26
00de59 940e e3cc 	CALL __GETW1P
00de5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E7:
00de5c 2766      	CLR  R22
00de5d 2777      	CLR  R23
00de5e 940e e271 	CALL __ORD12
00de60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E8:
00de61 940e e400 	CALL __PUTPARD1
00de63 e0a1      	LDI  R26,LOW(1)
00de64 940e aa70 	CALL _disk_read
00de66 30e0      	CPI  R30,0
00de67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3E9:
00de68 96f2      	ADIW R30,50
00de69 50e2      	SUBI R30,LOW(-510)
00de6a 4ffe      	SBCI R31,HIGH(-510)
00de6b 01df      	MOVW R26,R30
00de6c 940e e3cc 	CALL __GETW1P
00de6e 35e5      	CPI  R30,LOW(0xAA55)
00de6f eaaa      	LDI  R26,HIGH(0xAA55)
00de70 07fa      	CPC  R31,R26
00de71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3EA:
00de72 940e e3d0 	CALL __GETD1P
                +
00de74 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00de75 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00de76 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00de77 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00de78 34e6     +CPI R30 , LOW ( 0x544146 )
00de79 e4a1     +LDI R26 , HIGH ( 0x544146 )
00de7a 07fa     +CPC R31 , R26
00de7b e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00de7c 076a     +CPC R22 , R26
00de7d e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00de7e 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00de7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3EB:
00de80 edaa      	LDI  R26,LOW(_FatFs_G103)
00de81 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00de82 e0f0      	LDI  R31,0
00de83 0fee      	LSL  R30
00de84 1fff      	ROL  R31
00de85 0fae      	ADD  R26,R30
00de86 1fbf      	ADC  R27,R31
00de87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3EC:
                +
00de88 8bea     +STD Y + 18 , R30
00de89 8bfb     +STD Y + 18 + 1 , R31
00de8a 8b6c     +STD Y + 18 + 2 , R22
00de8b 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00de8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3ED:
00de8d 81ae      	LDD  R26,Y+6
00de8e 81bf      	LDD  R27,Y+6+1
00de8f 5ca0      	SUBI R26,LOW(-64)
00de90 4fbf      	SBCI R27,HIGH(-64)
00de91 940e e3cc 	CALL __GETW1P
00de93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3EE:
                +
00de94 87ee     +STD Y + 14 , R30
00de95 87ff     +STD Y + 14 + 1 , R31
00de96 8b68     +STD Y + 14 + 2 , R22
00de97 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00de98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3EF:
00de99 81ee      	LDD  R30,Y+6
00de9a 81ff      	LDD  R31,Y+6+1
00de9b 85a0      	LDD  R26,Z+8
00de9c 85b1      	LDD  R27,Z+9
00de9d 01fd      	MOVW R30,R26
00de9e 940e e2b5 	CALL __LSRW4
00dea0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F0:
00dea1 81ee      	LDD  R30,Y+6
00dea2 81ff      	LDD  R31,Y+6+1
00dea3 de6a      	RCALL SUBOPT_0x3B5
00dea4 940e c7ff 	CALL SUBOPT_0xD4
00dea6 940e e258 	CALL __ADDD12
00dea8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F1:
00dea9 940e ae12 	CALL _move_window_G103
00deab 2f1e      	MOV  R17,R30
00deac 3010      	CPI  R17,0
00dead 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F2:
00deae 8daa      	LDD  R26,Y+26
00deaf 8dbb      	LDD  R27,Y+26+1
00deb0 ca8d      	RJMP SUBOPT_0x343
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3F3:
00deb1 81a2      	LDD  R26,Z+2
00deb2 81b3      	LDD  R27,Z+3
00deb3 940e b6bf 	CALL _validate_G103
00deb5 2f1e      	MOV  R17,R30
00deb6 3010      	CPI  R17,0
00deb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F4:
00deb8 8dea      	LDD  R30,Y+26
00deb9 8dfb      	LDD  R31,Y+26+1
                +
00deba 81a6     +LDD R26 , Z + 6
00debb 81b7     +LDD R27 , Z + 6 + 1
00debc 8580     +LDD R24 , Z + 6 + 2
00debd 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00debe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F5:
00debf 01fd      	MOVW R30,R26
00dec0 01bc      	MOVW R22,R24
00dec1 70f1      	ANDI R31,HIGH(0x1FF)
00dec2 9730      	SBIW R30,0
00dec3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F6:
00dec4 8dec      	LDD  R30,Y+28
00dec5 8dfd      	LDD  R31,Y+28+1
                +
00dec6 89a2     +LDD R26 , Z + 18
00dec7 89b3     +LDD R27 , Z + 18 + 1
00dec8 8984     +LDD R24 , Z + 18 + 2
00dec9 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00deca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3F7:
00decb 8daa      	LDD  R26,Y+26
00decc 8dbb      	LDD  R27,Y+26+1
00decd 9614      	ADIW R26,4
00dece 91ec      	LD   R30,X
00decf 68e0      	ORI  R30,0x80
00ded0 93ec      	ST   X,R30
00ded1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F8:
00ded2 8dea      	LDD  R30,Y+26
00ded3 8dfb      	LDD  R31,Y+26+1
00ded4 81e5      	LDD  R30,Z+5
00ded5 e0f0      	LDI  R31,0
00ded6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F9:
00ded7 e0e0      	LDI  R30,LOW(512)
00ded8 e0f2      	LDI  R31,HIGH(512)
00ded9 940e e33c 	CALL __DIVW21U
00dedb 01af      	MOVW R20,R30
00dedc 2e04      	MOV  R0,R20
00dedd 2a05      	OR   R0,R21
00dede 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3FA:
00dedf 8daa      	LDD  R26,Y+26
00dee0 8dbb      	LDD  R27,Y+26+1
00dee1 940e e3cc 	CALL __GETW1P
00dee3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FB:
00dee4 81e1      	LDD  R30,Z+1
00dee5 93ea      	ST   -Y,R30
00dee6 81ef      	LDD  R30,Y+7
00dee7 85f8      	LDD  R31,Y+7+1
00dee8 93fa      	ST   -Y,R31
00dee9 93ea      	ST   -Y,R30
00deea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3FC:
00deeb 8dea      	LDD  R30,Y+26
00deec 8dfb      	LDD  R31,Y+26+1
                +
00deed 89a6     +LDD R26 , Z + 22
00deee 89b7     +LDD R27 , Z + 22 + 1
00deef 8d80     +LDD R24 , Z + 22 + 2
00def0 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00def1 940c c815 	JMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3FD:
00def3 940e e267 	CALL __SUBD21
00def5 01fa      	MOVW R30,R20
00def6 2766      	CLR  R22
00def7 2777      	CLR  R23
00def8 940e e470 	CALL __CPD21
00defa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3FE:
00defb 940e e267 	CALL __SUBD21
                +
00defd e0e0     +LDI R30 , LOW ( 0x200 )
00defe e0f2     +LDI R31 , HIGH ( 0x200 )
00deff e060     +LDI R22 , BYTE3 ( 0x200 )
00df00 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00df01 940e e2fe 	CALL __MULD12U
00df03 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3FF:
00df04 9615      	ADIW R26,5
00df05 91ec      	LD   R30,X
00df06 0fe4      	ADD  R30,R20
00df07 93ec      	ST   X,R30
00df08 01fa      	MOVW R30,R20
00df09 0fee      	LSL  R30
00df0a 1fff      	ROL  R31
00df0b 2ffe      	MOV  R31,R30
00df0c e0e0      	LDI  R30,0
00df0d 019f      	MOVW R18,R30
00df0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x400:
00df0f 81e1      	LDD  R30,Z+1
00df10 93ea      	ST   -Y,R30
00df11 8deb      	LDD  R30,Y+27
00df12 8dfc      	LDD  R31,Y+27+1
00df13 96b0      	ADIW R30,32
00df14 93fa      	ST   -Y,R31
00df15 93ea      	ST   -Y,R30
00df16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x401:
                +
00df17 89a6     +LDD R26 , Z + 22
00df18 89b7     +LDD R27 , Z + 22 + 1
00df19 8d80     +LDD R24 , Z + 22 + 2
00df1a 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00df1b 940e e405 	CALL __PUTPARD2
00df1d e0a1      	LDI  R26,LOW(1)
00df1e 940e aad5 	CALL _disk_write
00df20 30e0      	CPI  R30,0
00df21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x402:
00df22 9614      	ADIW R26,4
00df23 91ec      	LD   R30,X
00df24 7bef      	ANDI R30,0xBF
00df25 93ec      	ST   X,R30
00df26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x403:
00df27 9615      	ADIW R26,5
00df28 91ec      	LD   R30,X
00df29 5fef      	SUBI R30,-LOW(1)
00df2a 93ec      	ST   X,R30
00df2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x404:
00df2c 9616      	ADIW R26,6
00df2d 940e e3cc 	CALL __GETW1P
00df2f 70f1      	ANDI R31,HIGH(0x1FF)
00df30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x405:
00df31 9636      	ADIW R30,6
00df32 010f      	MOVW R0,R30
00df33 01df      	MOVW R26,R30
00df34 940e e3d0 	CALL __GETD1P
00df36 01df      	MOVW R26,R30
00df37 01cb      	MOVW R24,R22
00df38 01f9      	MOVW R30,R18
00df39 ceca      	RJMP SUBOPT_0x3D8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x406:
00df3a 91ed      	LD   R30,X+
00df3b 91fd      	LD   R31,X+
00df3c 0fe2      	ADD  R30,R18
00df3d 1ff3      	ADC  R31,R19
00df3e 93fe      	ST   -X,R31
00df3f 93ee      	ST   -X,R30
00df40 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x407:
00df41 89ae      	LDD  R26,Y+22
00df42 89bf      	LDD  R27,Y+22+1
00df43 c9fa      	RJMP SUBOPT_0x343
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x408:
00df44 89ae      	LDD  R26,Y+22
00df45 89bf      	LDD  R27,Y+22+1
00df46 961a      	ADIW R26,10
00df47 940e e3d0 	CALL __GETD1P
00df49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x409:
00df4a 89ee      	LDD  R30,Y+22
00df4b 89ff      	LDD  R31,Y+22+1
                +
00df4c 81a6     +LDD R26 , Z + 6
00df4d 81b7     +LDD R27 , Z + 6 + 1
00df4e 8580     +LDD R24 , Z + 6 + 2
00df4f 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00df50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x40A:
00df51 89ae      	LDD  R26,Y+22
00df52 89bf      	LDD  R27,Y+22+1
00df53 940e e3cc 	CALL __GETW1P
00df55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40B:
00df56 8de8      	LDD  R30,Y+24
00df57 8df9      	LDD  R31,Y+24+1
                +
00df58 89a2     +LDD R26 , Z + 18
00df59 89b3     +LDD R27 , Z + 18 + 1
00df5a 8984     +LDD R24 , Z + 18 + 2
00df5b 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00df5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x40C:
00df5d 89ae      	LDD  R26,Y+22
00df5e 89bf      	LDD  R27,Y+22+1
00df5f 9614      	ADIW R26,4
00df60 91ec      	LD   R30,X
00df61 68e0      	ORI  R30,0x80
00df62 93ec      	ST   X,R30
00df63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x40D:
00df64 81e1      	LDD  R30,Z+1
00df65 93ea      	ST   -Y,R30
00df66 89ef      	LDD  R30,Y+23
00df67 8df8      	LDD  R31,Y+23+1
00df68 96b0      	ADIW R30,32
00df69 93fa      	ST   -Y,R31
00df6a 93ea      	ST   -Y,R30
00df6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40E:
00df6c 89ee      	LDD  R30,Y+22
00df6d 89ff      	LDD  R31,Y+22+1
00df6e 81e5      	LDD  R30,Z+5
00df6f e0f0      	LDI  R31,0
00df70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40F:
00df71 89ee      	LDD  R30,Y+22
00df72 89ff      	LDD  R31,Y+22+1
                +
00df73 89a6     +LDD R26 , Z + 22
00df74 89b7     +LDD R27 , Z + 22 + 1
00df75 8d80     +LDD R24 , Z + 22 + 2
00df76 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00df77 940c c491 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x410:
00df79 89ee      	LDD  R30,Y+22
00df7a 89ff      	LDD  R31,Y+22+1
00df7b 96b0      	ADIW R30,32
00df7c 93fa      	ST   -Y,R31
00df7d 93ea      	ST   -Y,R30
00df7e 8de8      	LDD  R30,Y+24
00df7f 8df9      	LDD  R31,Y+24+1
00df80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x411:
00df81 89ad      	LDD  R26,Y+21
00df82 89be      	LDD  R27,Y+21+1
00df83 c9ba      	RJMP SUBOPT_0x343
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x412:
00df84 89ad      	LDD  R26,Y+21
00df85 89be      	LDD  R27,Y+21+1
00df86 961a      	ADIW R26,10
00df87 940e e3d0 	CALL __GETD1P
00df89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x413:
                +
00df8a 89a9     +LDD R26 , Y + 17
00df8b 89ba     +LDD R27 , Y + 17 + 1
00df8c 898b     +LDD R24 , Y + 17 + 2
00df8d 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00df8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x414:
                +
00df8f 8be9     +STD Y + 17 , R30
00df90 8bfa     +STD Y + 17 + 1 , R31
00df91 8b6b     +STD Y + 17 + 2 , R22
00df92 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00df93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x415:
                +
00df94 89ad     +LDD R26 , Y + 21
00df95 89be     +LDD R27 , Y + 21 + 1
00df96 9616     +ADIW R26 , 6
00df97 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00df99 89ad      	LDD  R26,Y+21
00df9a 89be      	LDD  R27,Y+21+1
00df9b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x416:
00df9c 89ad      	LDD  R26,Y+21
00df9d 89be      	LDD  R27,Y+21+1
00df9e 940e e3cc 	CALL __GETW1P
00dfa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x417:
                +
00dfa1 89e9     +LDD R30 , Y + 17
00dfa2 89fa     +LDD R31 , Y + 17 + 1
00dfa3 896b     +LDD R22 , Y + 17 + 2
00dfa4 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00dfa5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x418:
00dfa6 940e c81a 	CALL SUBOPT_0xDA
00dfa8 01df      	MOVW R26,R30
00dfa9 01cb      	MOVW R24,R22
00dfaa 940e c54a 	CALL SUBOPT_0x6B
00dfac 940e e354 	CALL __DIVD21U
00dfae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x419:
00dfaf 940e e3d0 	CALL __GETD1P
                +
00dfb1 87ed     +STD Y + 13 , R30
00dfb2 87fe     +STD Y + 13 + 1 , R31
00dfb3 876f     +STD Y + 13 + 2 , R22
00dfb4 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00dfb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x41A:
                +
00dfb6 85ed     +LDD R30 , Y + 13
00dfb7 85fe     +LDD R31 , Y + 13 + 1
00dfb8 856f     +LDD R22 , Y + 13 + 2
00dfb9 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00dfba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41B:
00dfbb 940e b06c 	CALL _create_chain_G103
                +
00dfbd 87ed     +STD Y + 13 , R30
00dfbe 87fe     +STD Y + 13 + 1 , R31
00dfbf 876f     +STD Y + 13 + 2 , R22
00dfc0 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00dfc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x41C:
                +
00dfc2 85ad     +LDD R26 , Y + 13
00dfc3 85be     +LDD R27 , Y + 13 + 1
00dfc4 858f     +LDD R24 , Y + 13 + 2
00dfc5 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00dfc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41D:
00dfc7 89ad      	LDD  R26,Y+21
00dfc8 89be      	LDD  R27,Y+21+1
00dfc9 9614      	ADIW R26,4
00dfca 91ec      	LD   R30,X
00dfcb 68e0      	ORI  R30,0x80
00dfcc 93ec      	ST   X,R30
00dfcd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x41E:
00dfce dfe7      	RCALL SUBOPT_0x41A
                +
00dfcf 89ad     +LDD R26 , Y + 21
00dfd0 89be     +LDD R27 , Y + 21 + 1
00dfd1 9652     +ADIW R26 , 18
00dfd2 940e e3db+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00dfd4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x41F:
                +
00dfd5 85af     +LDD R26 , Y + 15
00dfd6 89b8     +LDD R27 , Y + 15 + 1
00dfd7 8989     +LDD R24 , Y + 15 + 2
00dfd8 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00dfd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x420:
00dfda 89ed      	LDD  R30,Y+21
00dfdb 89fe      	LDD  R31,Y+21+1
00dfdc 9636      	ADIW R30,6
00dfdd 010f      	MOVW R0,R30
00dfde 01df      	MOVW R26,R30
00dfdf 940e e3d0 	CALL __GETD1P
00dfe1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x421:
00dfe2 89ed      	LDD  R30,Y+21
00dfe3 89fe      	LDD  R31,Y+21+1
                +
00dfe4 81a6     +LDD R26 , Z + 6
00dfe5 81b7     +LDD R27 , Z + 6 + 1
00dfe6 8580     +LDD R24 , Z + 6 + 2
00dfe7 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00dfe8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x422:
00dfe9 940e c7ff 	CALL SUBOPT_0xD4
00dfeb 940e c75e 	CALL SUBOPT_0xBC
00dfed ce9a      	RJMP SUBOPT_0x3EC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x423:
00dfee 940e c6f4 	CALL SUBOPT_0xA8
00dff0 ccc0      	RJMP SUBOPT_0x3A6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x424:
00dff1 940e c617 	CALL SUBOPT_0x89
00dff3 940e c2ba 	CALL SUBOPT_0xB
00dff5 940e e234 	CALL __CMPF12
00dff7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x425:
00dff8 940e c2ba 	CALL SUBOPT_0xB
                +
00dffa eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00dffb ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00dffc ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00dffd e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00dffe ccd5      	RJMP SUBOPT_0x3AD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x426:
00dfff 85a8      	LDD  R26,Y+8
00e000 85b9      	LDD  R27,Y+8+1
00e001 9611      	ADIW R26,1
00e002 87a8      	STD  Y+8,R26
00e003 87b9      	STD  Y+8+1,R27
00e004 9711      	SBIW R26,1
00e005 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x427:
00e006 932a      	ST   -Y,R18
00e007 81af      	LDD  R26,Y+7
00e008 85b8      	LDD  R27,Y+7+1
00e009 940e c54a 	CALL SUBOPT_0x6B
00e00b bf6c      	OUT  EIND,R22
00e00c 9519      	EICALL
00e00d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x428:
                +
00e00e 01fe     +MOVW R30 , R28
00e00f 5ae0     +SUBI R30 , LOW ( - 96 )
00e010 4fff     +SBCI R31 , HIGH ( - 96 )
00e011 9001     +LD R0 , Z +
00e012 81f0     +LD R31 , Z
00e013 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00e014 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x429:
00e015 9734      	SBIW R30,4
                +
00e016 01de     +MOVW R26 , R28
00e017 5aa0     +SUBI R26 , LOW ( - 96 )
00e018 4fbf     +SBCI R27 , HIGH ( - 96 )
00e019 93ed     +ST X + , R30
00e01a 93fc     +ST X , R31
                 	__PUTW1SX 96
00e01b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x42A:
00e01c 81af      	LDD  R26,Y+7
00e01d 85b8      	LDD  R27,Y+7+1
00e01e 940e c54a 	CALL SUBOPT_0x6B
00e020 bf6c      	OUT  EIND,R22
00e021 9519      	EICALL
00e022 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x42B:
                +
00e023 01de     +MOVW R26 , R28
00e024 5aa0     +SUBI R26 , LOW ( - 96 )
00e025 4fbf     +SBCI R27 , HIGH ( - 96 )
00e026 900d     +LD R0 , X +
00e027 91bc     +LD R27 , X
00e028 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00e029 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x42C:
00e02a dfe3      	RCALL SUBOPT_0x428
00e02b cfe9      	RJMP SUBOPT_0x429
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x42D:
00e02c 8be8      	STD  Y+16,R30
00e02d 8bf9      	STD  Y+16+1,R31
00e02e 89a8      	LDD  R26,Y+16
00e02f 89b9      	LDD  R27,Y+16+1
00e030 940e a81c 	CALL _strlen
00e032 2f1e      	MOV  R17,R30
00e033 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x42E:
00e034 7f0b      	ANDI R16,LOW(251)
00e035 8de9      	LDD  R30,Y+25
00e036 93ea      	ST   -Y,R30
                +
00e037 01de     +MOVW R26 , R28
00e038 5aa5     +SUBI R26 , LOW ( - 91 )
00e039 4fbf     +SBCI R27 , HIGH ( - 91 )
00e03a 900d     +LD R0 , X +
00e03b 91bc     +LD R27 , X
00e03c 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00e03d 01fe     +MOVW R30 , R28
00e03e 5ae3     +SUBI R30 , LOW ( - 93 )
00e03f 4fff     +SBCI R31 , HIGH ( - 93 )
00e040 9001     +LD R0 , Z +
00e041 9011     +LD R1 , Z +
00e042 9161     +LD R22 , Z +
00e043 8170     +LD R23 , Z
00e044 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00e045 bf6c      	OUT  EIND,R22
00e046 9519      	EICALL
00e047 3050      	CPI  R21,0
00e048 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42F:
                +
00e049 e5ef     +LDI R30 , LOW ( _put_buff_G104 )
00e04a ebfe     +LDI R31 , HIGH ( _put_buff_G104 )
00e04b e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00e04c e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00e04d 940e e400 	CALL __PUTPARD1
00e04f 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00e050 9858      	cbi  __i2c_port,__scl_bit
00e051 9859      	cbi  __i2c_port,__sda_bit
00e052 9a50      	sbi  __i2c_dir,__scl_bit
00e053 9851      	cbi  __i2c_dir,__sda_bit
00e054 c015      	rjmp __i2c_delay2
                 _i2c_start:
00e055 9851      	cbi  __i2c_dir,__sda_bit
00e056 9850      	cbi  __i2c_dir,__scl_bit
00e057 27ee      	clr  r30
00e058 0000      	nop
00e059 9b49      	sbis __i2c_pin,__sda_bit
00e05a 9508      	ret
00e05b 9b48      	sbis __i2c_pin,__scl_bit
00e05c 9508      	ret
00e05d d004      	rcall __i2c_delay1
00e05e 9a51      	sbi  __i2c_dir,__sda_bit
00e05f d002      	rcall __i2c_delay1
00e060 9a50      	sbi  __i2c_dir,__scl_bit
00e061 e0e1      	ldi  r30,1
                 __i2c_delay1:
00e062 e06d      	ldi  r22,13
00e063 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00e064 9a51      	sbi  __i2c_dir,__sda_bit
00e065 9a50      	sbi  __i2c_dir,__scl_bit
00e066 d003      	rcall __i2c_delay2
00e067 9850      	cbi  __i2c_dir,__scl_bit
00e068 dff9      	rcall __i2c_delay1
00e069 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00e06a e16b      	ldi  r22,27
                 __i2c_delay2l:
00e06b 956a      	dec  r22
00e06c f7f1      	brne __i2c_delay2l
00e06d 9508      	ret
                 _i2c_read:
00e06e e078      	ldi  r23,8
                 __i2c_read0:
00e06f 9850      	cbi  __i2c_dir,__scl_bit
00e070 dff1      	rcall __i2c_delay1
                 __i2c_read3:
00e071 9b48      	sbis __i2c_pin,__scl_bit
00e072 cffe      	rjmp __i2c_read3
00e073 dfee      	rcall __i2c_delay1
00e074 9488      	clc
00e075 9949      	sbic __i2c_pin,__sda_bit
00e076 9408      	sec
00e077 9a50      	sbi  __i2c_dir,__scl_bit
00e078 dff1      	rcall __i2c_delay2
00e079 1fee      	rol  r30
00e07a 957a      	dec  r23
00e07b f799      	brne __i2c_read0
00e07c 2f7a      	mov  r23,r26
00e07d 2377      	tst  r23
00e07e f411      	brne __i2c_read1
00e07f 9851      	cbi  __i2c_dir,__sda_bit
00e080 c001      	rjmp __i2c_read2
                 __i2c_read1:
00e081 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00e082 dfdf      	rcall __i2c_delay1
00e083 9850      	cbi  __i2c_dir,__scl_bit
00e084 dfe5      	rcall __i2c_delay2
00e085 9a50      	sbi  __i2c_dir,__scl_bit
00e086 dfdb      	rcall __i2c_delay1
00e087 9851      	cbi  __i2c_dir,__sda_bit
00e088 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00e089 e078      	ldi  r23,8
                 __i2c_write0:
00e08a 0faa      	lsl  r26
00e08b f410      	brcc __i2c_write1
00e08c 9851      	cbi  __i2c_dir,__sda_bit
00e08d c001      	rjmp __i2c_write2
                 __i2c_write1:
00e08e 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00e08f dfda      	rcall __i2c_delay2
00e090 9850      	cbi  __i2c_dir,__scl_bit
00e091 dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00e092 9b48      	sbis __i2c_pin,__scl_bit
00e093 cffe      	rjmp __i2c_write3
00e094 dfcd      	rcall __i2c_delay1
00e095 9a50      	sbi  __i2c_dir,__scl_bit
00e096 957a      	dec  r23
00e097 f791      	brne __i2c_write0
00e098 9851      	cbi  __i2c_dir,__sda_bit
00e099 dfc8      	rcall __i2c_delay1
00e09a 9850      	cbi  __i2c_dir,__scl_bit
00e09b dfce      	rcall __i2c_delay2
00e09c e0e1      	ldi  r30,1
00e09d 9949      	sbic __i2c_pin,__sda_bit
00e09e 27ee      	clr  r30
00e09f 9a50      	sbi  __i2c_dir,__scl_bit
00e0a0 cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00e0a1 9610      	adiw r26,0
00e0a2 f039      	breq __delay_ms1
                 __delay_ms0:
                +
00e0a3 ed80     +LDI R24 , LOW ( 0x7D0 )
00e0a4 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00e0a5 9701     +SBIW R24 , 1
00e0a6 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00e0a7 95a8      	wdr
00e0a8 9711      	sbiw r26,1
00e0a9 f7c9      	brne __delay_ms0
                 __delay_ms1:
00e0aa 9508      	ret
                 
                 __ANEGF1:
00e0ab 9730      	SBIW R30,0
00e0ac 4060      	SBCI R22,0
00e0ad 4070      	SBCI R23,0
00e0ae f009      	BREQ __ANEGF10
00e0af 5870      	SUBI R23,0x80
                 __ANEGF10:
00e0b0 9508      	RET
                 
                 __ROUND_REPACK:
00e0b1 2355      	TST  R21
00e0b2 f442      	BRPL __REPACK
00e0b3 3850      	CPI  R21,0x80
00e0b4 f411      	BRNE __ROUND_REPACK0
00e0b5 ffe0      	SBRS R30,0
00e0b6 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00e0b7 9631      	ADIW R30,1
00e0b8 1f69      	ADC  R22,R25
00e0b9 1f79      	ADC  R23,R25
00e0ba f06b      	BRVS __REPACK1
                 
                 __REPACK:
00e0bb e850      	LDI  R21,0x80
00e0bc 2757      	EOR  R21,R23
00e0bd f411      	BRNE __REPACK0
00e0be 935f      	PUSH R21
00e0bf c0cf      	RJMP __ZERORES
                 __REPACK0:
00e0c0 3f5f      	CPI  R21,0xFF
00e0c1 f031      	BREQ __REPACK1
00e0c2 0f66      	LSL  R22
00e0c3 0c00      	LSL  R0
00e0c4 9557      	ROR  R21
00e0c5 9567      	ROR  R22
00e0c6 2f75      	MOV  R23,R21
00e0c7 9508      	RET
                 __REPACK1:
00e0c8 935f      	PUSH R21
00e0c9 2000      	TST  R0
00e0ca f00a      	BRMI __REPACK2
00e0cb c0cf      	RJMP __MAXRES
                 __REPACK2:
00e0cc c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00e0cd e850      	LDI  R21,0x80
00e0ce 2e19      	MOV  R1,R25
00e0cf 2215      	AND  R1,R21
00e0d0 0f88      	LSL  R24
00e0d1 1f99      	ROL  R25
00e0d2 2795      	EOR  R25,R21
00e0d3 0f55      	LSL  R21
00e0d4 9587      	ROR  R24
                 
                 __UNPACK1:
00e0d5 e850      	LDI  R21,0x80
00e0d6 2e07      	MOV  R0,R23
00e0d7 2205      	AND  R0,R21
00e0d8 0f66      	LSL  R22
00e0d9 1f77      	ROL  R23
00e0da 2775      	EOR  R23,R21
00e0db 0f55      	LSL  R21
00e0dc 9567      	ROR  R22
00e0dd 9508      	RET
                 
                 __CFD1U:
00e0de 9468      	SET
00e0df c001      	RJMP __CFD1U0
                 __CFD1:
00e0e0 94e8      	CLT
                 __CFD1U0:
00e0e1 935f      	PUSH R21
00e0e2 dff2      	RCALL __UNPACK1
00e0e3 3870      	CPI  R23,0x80
00e0e4 f018      	BRLO __CFD10
00e0e5 3f7f      	CPI  R23,0xFF
00e0e6 f408      	BRCC __CFD10
00e0e7 c0a7      	RJMP __ZERORES
                 __CFD10:
00e0e8 e156      	LDI  R21,22
00e0e9 1b57      	SUB  R21,R23
00e0ea f4aa      	BRPL __CFD11
00e0eb 9551      	NEG  R21
00e0ec 3058      	CPI  R21,8
00e0ed f40e      	BRTC __CFD19
00e0ee 3059      	CPI  R21,9
                 __CFD19:
00e0ef f030      	BRLO __CFD17
00e0f0 efef      	SER  R30
00e0f1 efff      	SER  R31
00e0f2 ef6f      	SER  R22
00e0f3 e77f      	LDI  R23,0x7F
00e0f4 f977      	BLD  R23,7
00e0f5 c01a      	RJMP __CFD15
                 __CFD17:
00e0f6 2777      	CLR  R23
00e0f7 2355      	TST  R21
00e0f8 f0b9      	BREQ __CFD15
                 __CFD18:
00e0f9 0fee      	LSL  R30
00e0fa 1fff      	ROL  R31
00e0fb 1f66      	ROL  R22
00e0fc 1f77      	ROL  R23
00e0fd 955a      	DEC  R21
00e0fe f7d1      	BRNE __CFD18
00e0ff c010      	RJMP __CFD15
                 __CFD11:
00e100 2777      	CLR  R23
                 __CFD12:
00e101 3058      	CPI  R21,8
00e102 f028      	BRLO __CFD13
00e103 2fef      	MOV  R30,R31
00e104 2ff6      	MOV  R31,R22
00e105 2f67      	MOV  R22,R23
00e106 5058      	SUBI R21,8
00e107 cff9      	RJMP __CFD12
                 __CFD13:
00e108 2355      	TST  R21
00e109 f031      	BREQ __CFD15
                 __CFD14:
00e10a 9576      	LSR  R23
00e10b 9567      	ROR  R22
00e10c 95f7      	ROR  R31
00e10d 95e7      	ROR  R30
00e10e 955a      	DEC  R21
00e10f f7d1      	BRNE __CFD14
                 __CFD15:
00e110 2000      	TST  R0
00e111 f40a      	BRPL __CFD16
00e112 d167      	RCALL __ANEGD1
                 __CFD16:
00e113 915f      	POP  R21
00e114 9508      	RET
                 
                 __CDF1U:
00e115 9468      	SET
00e116 c001      	RJMP __CDF1U0
                 __CDF1:
00e117 94e8      	CLT
                 __CDF1U0:
00e118 9730      	SBIW R30,0
00e119 4060      	SBCI R22,0
00e11a 4070      	SBCI R23,0
00e11b f0b1      	BREQ __CDF10
00e11c 2400      	CLR  R0
00e11d f026      	BRTS __CDF11
00e11e 2377      	TST  R23
00e11f f412      	BRPL __CDF11
00e120 9400      	COM  R0
00e121 d158      	RCALL __ANEGD1
                 __CDF11:
00e122 2e17      	MOV  R1,R23
00e123 e17e      	LDI  R23,30
00e124 2011      	TST  R1
                 __CDF12:
00e125 f032      	BRMI __CDF13
00e126 957a      	DEC  R23
00e127 0fee      	LSL  R30
00e128 1fff      	ROL  R31
00e129 1f66      	ROL  R22
00e12a 1c11      	ROL  R1
00e12b cff9      	RJMP __CDF12
                 __CDF13:
00e12c 2fef      	MOV  R30,R31
00e12d 2ff6      	MOV  R31,R22
00e12e 2d61      	MOV  R22,R1
00e12f 935f      	PUSH R21
00e130 df8a      	RCALL __REPACK
00e131 915f      	POP  R21
                 __CDF10:
00e132 9508      	RET
                 
                 __SWAPACC:
00e133 934f      	PUSH R20
00e134 01af      	MOVW R20,R30
00e135 01fd      	MOVW R30,R26
00e136 01da      	MOVW R26,R20
00e137 01ab      	MOVW R20,R22
00e138 01bc      	MOVW R22,R24
00e139 01ca      	MOVW R24,R20
00e13a 2d40      	MOV  R20,R0
00e13b 2c01      	MOV  R0,R1
00e13c 2e14      	MOV  R1,R20
00e13d 914f      	POP  R20
00e13e 9508      	RET
                 
                 __UADD12:
00e13f 0fea      	ADD  R30,R26
00e140 1ffb      	ADC  R31,R27
00e141 1f68      	ADC  R22,R24
00e142 9508      	RET
                 
                 __NEGMAN1:
00e143 95e0      	COM  R30
00e144 95f0      	COM  R31
00e145 9560      	COM  R22
00e146 5fef      	SUBI R30,-1
00e147 4fff      	SBCI R31,-1
00e148 4f6f      	SBCI R22,-1
00e149 9508      	RET
                 
                 __SUBF12:
00e14a 935f      	PUSH R21
00e14b df81      	RCALL __UNPACK
00e14c 3890      	CPI  R25,0x80
00e14d f171      	BREQ __ADDF129
00e14e e850      	LDI  R21,0x80
00e14f 2615      	EOR  R1,R21
                 
00e150 c004      	RJMP __ADDF120
                 
                 __ADDF12:
00e151 935f      	PUSH R21
00e152 df7a      	RCALL __UNPACK
00e153 3890      	CPI  R25,0x80
00e154 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00e155 3870      	CPI  R23,0x80
00e156 f121      	BREQ __ADDF128
                 __ADDF121:
00e157 2f57      	MOV  R21,R23
00e158 1b59      	SUB  R21,R25
00e159 f12b      	BRVS __ADDF1211
00e15a f412      	BRPL __ADDF122
00e15b dfd7      	RCALL __SWAPACC
00e15c cffa      	RJMP __ADDF121
                 __ADDF122:
00e15d 3158      	CPI  R21,24
00e15e f018      	BRLO __ADDF123
00e15f 27aa      	CLR  R26
00e160 27bb      	CLR  R27
00e161 2788      	CLR  R24
                 __ADDF123:
00e162 3058      	CPI  R21,8
00e163 f028      	BRLO __ADDF124
00e164 2fab      	MOV  R26,R27
00e165 2fb8      	MOV  R27,R24
00e166 2788      	CLR  R24
00e167 5058      	SUBI R21,8
00e168 cff9      	RJMP __ADDF123
                 __ADDF124:
00e169 2355      	TST  R21
00e16a f029      	BREQ __ADDF126
                 __ADDF125:
00e16b 9586      	LSR  R24
00e16c 95b7      	ROR  R27
00e16d 95a7      	ROR  R26
00e16e 955a      	DEC  R21
00e16f f7d9      	BRNE __ADDF125
                 __ADDF126:
00e170 2d50      	MOV  R21,R0
00e171 2551      	EOR  R21,R1
00e172 f072      	BRMI __ADDF127
00e173 dfcb      	RCALL __UADD12
00e174 f438      	BRCC __ADDF129
00e175 9567      	ROR  R22
00e176 95f7      	ROR  R31
00e177 95e7      	ROR  R30
00e178 9573      	INC  R23
00e179 f413      	BRVC __ADDF129
00e17a c020      	RJMP __MAXRES
                 __ADDF128:
00e17b dfb7      	RCALL __SWAPACC
                 __ADDF129:
00e17c df3e      	RCALL __REPACK
00e17d 915f      	POP  R21
00e17e 9508      	RET
                 __ADDF1211:
00e17f f7d8      	BRCC __ADDF128
00e180 cffb      	RJMP __ADDF129
                 __ADDF127:
00e181 1bea      	SUB  R30,R26
00e182 0bfb      	SBC  R31,R27
00e183 0b68      	SBC  R22,R24
00e184 f051      	BREQ __ZERORES
00e185 f410      	BRCC __ADDF1210
00e186 9400      	COM  R0
00e187 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00e188 2366      	TST  R22
00e189 f392      	BRMI __ADDF129
00e18a 0fee      	LSL  R30
00e18b 1fff      	ROL  R31
00e18c 1f66      	ROL  R22
00e18d 957a      	DEC  R23
00e18e f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00e18f 27ee      	CLR  R30
00e190 27ff      	CLR  R31
00e191 2766      	CLR  R22
00e192 2777      	CLR  R23
00e193 915f      	POP  R21
00e194 9508      	RET
                 
                 __MINRES:
00e195 efef      	SER  R30
00e196 efff      	SER  R31
00e197 e76f      	LDI  R22,0x7F
00e198 ef7f      	SER  R23
00e199 915f      	POP  R21
00e19a 9508      	RET
                 
                 __MAXRES:
00e19b efef      	SER  R30
00e19c efff      	SER  R31
00e19d e76f      	LDI  R22,0x7F
00e19e e77f      	LDI  R23,0x7F
00e19f 915f      	POP  R21
00e1a0 9508      	RET
                 
                 __MULF12:
00e1a1 935f      	PUSH R21
00e1a2 df2a      	RCALL __UNPACK
00e1a3 3870      	CPI  R23,0x80
00e1a4 f351      	BREQ __ZERORES
00e1a5 3890      	CPI  R25,0x80
00e1a6 f341      	BREQ __ZERORES
00e1a7 2401      	EOR  R0,R1
00e1a8 9408      	SEC
00e1a9 1f79      	ADC  R23,R25
00e1aa f423      	BRVC __MULF124
00e1ab f31c      	BRLT __ZERORES
                 __MULF125:
00e1ac 2000      	TST  R0
00e1ad f33a      	BRMI __MINRES
00e1ae cfec      	RJMP __MAXRES
                 __MULF124:
00e1af 920f      	PUSH R0
00e1b0 931f      	PUSH R17
00e1b1 932f      	PUSH R18
00e1b2 933f      	PUSH R19
00e1b3 934f      	PUSH R20
00e1b4 2711      	CLR  R17
00e1b5 2722      	CLR  R18
00e1b6 2799      	CLR  R25
00e1b7 9f68      	MUL  R22,R24
00e1b8 01a0      	MOVW R20,R0
00e1b9 9f8f      	MUL  R24,R31
00e1ba 2d30      	MOV  R19,R0
00e1bb 0d41      	ADD  R20,R1
00e1bc 1f59      	ADC  R21,R25
00e1bd 9f6b      	MUL  R22,R27
00e1be 0d30      	ADD  R19,R0
00e1bf 1d41      	ADC  R20,R1
00e1c0 1f59      	ADC  R21,R25
00e1c1 9f8e      	MUL  R24,R30
00e1c2 d027      	RCALL __MULF126
00e1c3 9fbf      	MUL  R27,R31
00e1c4 d025      	RCALL __MULF126
00e1c5 9f6a      	MUL  R22,R26
00e1c6 d023      	RCALL __MULF126
00e1c7 9fbe      	MUL  R27,R30
00e1c8 d01d      	RCALL __MULF127
00e1c9 9faf      	MUL  R26,R31
00e1ca d01b      	RCALL __MULF127
00e1cb 9fae      	MUL  R26,R30
00e1cc 0d11      	ADD  R17,R1
00e1cd 1f29      	ADC  R18,R25
00e1ce 1f39      	ADC  R19,R25
00e1cf 1f49      	ADC  R20,R25
00e1d0 1f59      	ADC  R21,R25
00e1d1 2fe3      	MOV  R30,R19
00e1d2 2ff4      	MOV  R31,R20
00e1d3 2f65      	MOV  R22,R21
00e1d4 2f52      	MOV  R21,R18
00e1d5 914f      	POP  R20
00e1d6 913f      	POP  R19
00e1d7 912f      	POP  R18
00e1d8 911f      	POP  R17
00e1d9 900f      	POP  R0
00e1da 2366      	TST  R22
00e1db f02a      	BRMI __MULF122
00e1dc 0f55      	LSL  R21
00e1dd 1fee      	ROL  R30
00e1de 1fff      	ROL  R31
00e1df 1f66      	ROL  R22
00e1e0 c002      	RJMP __MULF123
                 __MULF122:
00e1e1 9573      	INC  R23
00e1e2 f24b      	BRVS __MULF125
                 __MULF123:
00e1e3 decd      	RCALL __ROUND_REPACK
00e1e4 915f      	POP  R21
00e1e5 9508      	RET
                 
                 __MULF127:
00e1e6 0d10      	ADD  R17,R0
00e1e7 1d21      	ADC  R18,R1
00e1e8 1f39      	ADC  R19,R25
00e1e9 c002      	RJMP __MULF128
                 __MULF126:
00e1ea 0d20      	ADD  R18,R0
00e1eb 1d31      	ADC  R19,R1
                 __MULF128:
00e1ec 1f49      	ADC  R20,R25
00e1ed 1f59      	ADC  R21,R25
00e1ee 9508      	RET
                 
                 __DIVF21:
00e1ef 935f      	PUSH R21
00e1f0 dedc      	RCALL __UNPACK
00e1f1 3870      	CPI  R23,0x80
00e1f2 f421      	BRNE __DIVF210
00e1f3 2011      	TST  R1
                 __DIVF211:
00e1f4 f40a      	BRPL __DIVF219
00e1f5 cf9f      	RJMP __MINRES
                 __DIVF219:
00e1f6 cfa4      	RJMP __MAXRES
                 __DIVF210:
00e1f7 3890      	CPI  R25,0x80
00e1f8 f409      	BRNE __DIVF218
                 __DIVF217:
00e1f9 cf95      	RJMP __ZERORES
                 __DIVF218:
00e1fa 2401      	EOR  R0,R1
00e1fb 9408      	SEC
00e1fc 0b97      	SBC  R25,R23
00e1fd f41b      	BRVC __DIVF216
00e1fe f3d4      	BRLT __DIVF217
00e1ff 2000      	TST  R0
00e200 cff3      	RJMP __DIVF211
                 __DIVF216:
00e201 2f79      	MOV  R23,R25
00e202 931f      	PUSH R17
00e203 932f      	PUSH R18
00e204 933f      	PUSH R19
00e205 934f      	PUSH R20
00e206 2411      	CLR  R1
00e207 2711      	CLR  R17
00e208 2722      	CLR  R18
00e209 2733      	CLR  R19
00e20a 2744      	CLR  R20
00e20b 2755      	CLR  R21
00e20c e290      	LDI  R25,32
                 __DIVF212:
00e20d 17ae      	CP   R26,R30
00e20e 07bf      	CPC  R27,R31
00e20f 0786      	CPC  R24,R22
00e210 0741      	CPC  R20,R17
00e211 f030      	BRLO __DIVF213
00e212 1bae      	SUB  R26,R30
00e213 0bbf      	SBC  R27,R31
00e214 0b86      	SBC  R24,R22
00e215 0b41      	SBC  R20,R17
00e216 9408      	SEC
00e217 c001      	RJMP __DIVF214
                 __DIVF213:
00e218 9488      	CLC
                 __DIVF214:
00e219 1f55      	ROL  R21
00e21a 1f22      	ROL  R18
00e21b 1f33      	ROL  R19
00e21c 1c11      	ROL  R1
00e21d 1faa      	ROL  R26
00e21e 1fbb      	ROL  R27
00e21f 1f88      	ROL  R24
00e220 1f44      	ROL  R20
00e221 959a      	DEC  R25
00e222 f751      	BRNE __DIVF212
00e223 01f9      	MOVW R30,R18
00e224 2d61      	MOV  R22,R1
00e225 914f      	POP  R20
00e226 913f      	POP  R19
00e227 912f      	POP  R18
00e228 911f      	POP  R17
00e229 2366      	TST  R22
00e22a f032      	BRMI __DIVF215
00e22b 0f55      	LSL  R21
00e22c 1fee      	ROL  R30
00e22d 1fff      	ROL  R31
00e22e 1f66      	ROL  R22
00e22f 957a      	DEC  R23
00e230 f243      	BRVS __DIVF217
                 __DIVF215:
00e231 de7f      	RCALL __ROUND_REPACK
00e232 915f      	POP  R21
00e233 9508      	RET
                 
                 __CMPF12:
00e234 2399      	TST  R25
00e235 f09a      	BRMI __CMPF120
00e236 2377      	TST  R23
00e237 f042      	BRMI __CMPF121
00e238 1797      	CP   R25,R23
00e239 f048      	BRLO __CMPF122
00e23a f429      	BRNE __CMPF121
00e23b 17ae      	CP   R26,R30
00e23c 07bf      	CPC  R27,R31
00e23d 0786      	CPC  R24,R22
00e23e f020      	BRLO __CMPF122
00e23f f031      	BREQ __CMPF123
                 __CMPF121:
00e240 9498      	CLZ
00e241 9488      	CLC
00e242 9508      	RET
                 __CMPF122:
00e243 9498      	CLZ
00e244 9408      	SEC
00e245 9508      	RET
                 __CMPF123:
00e246 9418      	SEZ
00e247 9488      	CLC
00e248 9508      	RET
                 __CMPF120:
00e249 2377      	TST  R23
00e24a f7c2      	BRPL __CMPF122
00e24b 1797      	CP   R25,R23
00e24c f398      	BRLO __CMPF121
00e24d f7a9      	BRNE __CMPF122
00e24e 17ea      	CP   R30,R26
00e24f 07fb      	CPC  R31,R27
00e250 0768      	CPC  R22,R24
00e251 f388      	BRLO __CMPF122
00e252 f399      	BREQ __CMPF123
00e253 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00e254 2400      	CLR  R0
00e255 0daf      	ADD  R26,R15
00e256 1db0      	ADC  R27,R0
00e257 9508      	RET
                 
                 __ADDD12:
00e258 0fea      	ADD  R30,R26
00e259 1ffb      	ADC  R31,R27
00e25a 1f68      	ADC  R22,R24
00e25b 1f79      	ADC  R23,R25
00e25c 9508      	RET
                 
                 __ADDD21:
00e25d 0fae      	ADD  R26,R30
00e25e 1fbf      	ADC  R27,R31
00e25f 1f86      	ADC  R24,R22
00e260 1f97      	ADC  R25,R23
00e261 9508      	RET
                 
                 __SUBD12:
00e262 1bea      	SUB  R30,R26
00e263 0bfb      	SBC  R31,R27
00e264 0b68      	SBC  R22,R24
00e265 0b79      	SBC  R23,R25
00e266 9508      	RET
                 
                 __SUBD21:
00e267 1bae      	SUB  R26,R30
00e268 0bbf      	SBC  R27,R31
00e269 0b86      	SBC  R24,R22
00e26a 0b97      	SBC  R25,R23
00e26b 9508      	RET
                 
                 __ANDD12:
00e26c 23ea      	AND  R30,R26
00e26d 23fb      	AND  R31,R27
00e26e 2368      	AND  R22,R24
00e26f 2379      	AND  R23,R25
00e270 9508      	RET
                 
                 __ORD12:
00e271 2bea      	OR   R30,R26
00e272 2bfb      	OR   R31,R27
00e273 2b68      	OR   R22,R24
00e274 2b79      	OR   R23,R25
00e275 9508      	RET
                 
                 __ANEGW1:
00e276 95f1      	NEG  R31
00e277 95e1      	NEG  R30
00e278 40f0      	SBCI R31,0
00e279 9508      	RET
                 
                 __ANEGD1:
00e27a 95f0      	COM  R31
00e27b 9560      	COM  R22
00e27c 9570      	COM  R23
00e27d 95e1      	NEG  R30
00e27e 4fff      	SBCI R31,-1
00e27f 4f6f      	SBCI R22,-1
00e280 4f7f      	SBCI R23,-1
00e281 9508      	RET
                 
                 __LSLW12:
00e282 23ee      	TST  R30
00e283 2e0e      	MOV  R0,R30
00e284 01fd      	MOVW R30,R26
00e285 f021      	BREQ __LSLW12R
                 __LSLW12L:
00e286 0fee      	LSL  R30
00e287 1fff      	ROL  R31
00e288 940a      	DEC  R0
00e289 f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00e28a 9508      	RET
                 
                 __LSLD12:
00e28b 23ee      	TST  R30
00e28c 2e0e      	MOV  R0,R30
00e28d 01fd      	MOVW R30,R26
00e28e 01bc      	MOVW R22,R24
00e28f f031      	BREQ __LSLD12R
                 __LSLD12L:
00e290 0fee      	LSL  R30
00e291 1fff      	ROL  R31
00e292 1f66      	ROL  R22
00e293 1f77      	ROL  R23
00e294 940a      	DEC  R0
00e295 f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00e296 9508      	RET
                 
                 __LSRD12:
00e297 23ee      	TST  R30
00e298 2e0e      	MOV  R0,R30
00e299 01fd      	MOVW R30,R26
00e29a 01bc      	MOVW R22,R24
00e29b f031      	BREQ __LSRD12R
                 __LSRD12L:
00e29c 9576      	LSR  R23
00e29d 9567      	ROR  R22
00e29e 95f7      	ROR  R31
00e29f 95e7      	ROR  R30
00e2a0 940a      	DEC  R0
00e2a1 f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00e2a2 9508      	RET
                 
                 __LSLW4:
00e2a3 0fee      	LSL  R30
00e2a4 1fff      	ROL  R31
                 __LSLW3:
00e2a5 0fee      	LSL  R30
00e2a6 1fff      	ROL  R31
                 __LSLW2:
00e2a7 0fee      	LSL  R30
00e2a8 1fff      	ROL  R31
00e2a9 0fee      	LSL  R30
00e2aa 1fff      	ROL  R31
00e2ab 9508      	RET
                 
                 __ASRW4:
00e2ac 95f5      	ASR  R31
00e2ad 95e7      	ROR  R30
                 __ASRW3:
00e2ae 95f5      	ASR  R31
00e2af 95e7      	ROR  R30
                 __ASRW2:
00e2b0 95f5      	ASR  R31
00e2b1 95e7      	ROR  R30
00e2b2 95f5      	ASR  R31
00e2b3 95e7      	ROR  R30
00e2b4 9508      	RET
                 
                 __LSRW4:
00e2b5 95f6      	LSR  R31
00e2b6 95e7      	ROR  R30
                 __LSRW3:
00e2b7 95f6      	LSR  R31
00e2b8 95e7      	ROR  R30
                 __LSRW2:
00e2b9 95f6      	LSR  R31
00e2ba 95e7      	ROR  R30
00e2bb 95f6      	LSR  R31
00e2bc 95e7      	ROR  R30
00e2bd 9508      	RET
                 
                 __LSRD1:
00e2be 9576      	LSR  R23
00e2bf 9567      	ROR  R22
00e2c0 95f7      	ROR  R31
00e2c1 95e7      	ROR  R30
00e2c2 9508      	RET
                 
                 __LSLD1:
00e2c3 0fee      	LSL  R30
00e2c4 1fff      	ROL  R31
00e2c5 1f66      	ROL  R22
00e2c6 1f77      	ROL  R23
00e2c7 9508      	RET
                 
                 __ASRW8:
00e2c8 2fef      	MOV  R30,R31
00e2c9 27ff      	CLR  R31
00e2ca fde7      	SBRC R30,7
00e2cb efff      	SER  R31
00e2cc 9508      	RET
                 
                 __LSRD16:
00e2cd 2fe6      	MOV  R30,R22
00e2ce 2ff7      	MOV  R31,R23
00e2cf e060      	LDI  R22,0
00e2d0 e070      	LDI  R23,0
00e2d1 9508      	RET
                 
                 __LSLD16:
00e2d2 2f6e      	MOV  R22,R30
00e2d3 2f7f      	MOV  R23,R31
00e2d4 e0e0      	LDI  R30,0
00e2d5 e0f0      	LDI  R31,0
00e2d6 9508      	RET
                 
                 __CBD1:
00e2d7 2ffe      	MOV  R31,R30
00e2d8 0fff      	ADD  R31,R31
00e2d9 0bff      	SBC  R31,R31
00e2da 2f6f      	MOV  R22,R31
00e2db 2f7f      	MOV  R23,R31
00e2dc 9508      	RET
                 
                 __CWD1:
00e2dd 2f6f      	MOV  R22,R31
00e2de 0f66      	ADD  R22,R22
00e2df 0b66      	SBC  R22,R22
00e2e0 2f76      	MOV  R23,R22
00e2e1 9508      	RET
                 
                 __COMD1:
00e2e2 95e0      	COM  R30
00e2e3 95f0      	COM  R31
00e2e4 9560      	COM  R22
00e2e5 9570      	COM  R23
00e2e6 9508      	RET
                 
                 __EQB12:
00e2e7 17ea      	CP   R30,R26
00e2e8 e0e1      	LDI  R30,1
00e2e9 f009      	BREQ __EQB12T
00e2ea 27ee      	CLR  R30
                 __EQB12T:
00e2eb 9508      	RET
                 
                 __LNEGB1:
00e2ec 23ee      	TST  R30
00e2ed e0e1      	LDI  R30,1
00e2ee f009      	BREQ __LNEGB1F
00e2ef 27ee      	CLR  R30
                 __LNEGB1F:
00e2f0 9508      	RET
                 
                 __LNEGW1:
00e2f1 2bef      	OR   R30,R31
00e2f2 e0e1      	LDI  R30,1
00e2f3 f009      	BREQ __LNEGW1F
00e2f4 e0e0      	LDI  R30,0
                 __LNEGW1F:
00e2f5 9508      	RET
                 
                 __MULW12U:
00e2f6 9ffa      	MUL  R31,R26
00e2f7 2df0      	MOV  R31,R0
00e2f8 9feb      	MUL  R30,R27
00e2f9 0df0      	ADD  R31,R0
00e2fa 9fea      	MUL  R30,R26
00e2fb 2de0      	MOV  R30,R0
00e2fc 0df1      	ADD  R31,R1
00e2fd 9508      	RET
                 
                 __MULD12U:
00e2fe 9f7a      	MUL  R23,R26
00e2ff 2d70      	MOV  R23,R0
00e300 9f6b      	MUL  R22,R27
00e301 0d70      	ADD  R23,R0
00e302 9ff8      	MUL  R31,R24
00e303 0d70      	ADD  R23,R0
00e304 9fe9      	MUL  R30,R25
00e305 0d70      	ADD  R23,R0
00e306 9f6a      	MUL  R22,R26
00e307 2d60      	MOV  R22,R0
00e308 0d71      	ADD  R23,R1
00e309 9ffb      	MUL  R31,R27
00e30a 0d60      	ADD  R22,R0
00e30b 1d71      	ADC  R23,R1
00e30c 9fe8      	MUL  R30,R24
00e30d 0d60      	ADD  R22,R0
00e30e 1d71      	ADC  R23,R1
00e30f 2788      	CLR  R24
00e310 9ffa      	MUL  R31,R26
00e311 2df0      	MOV  R31,R0
00e312 0d61      	ADD  R22,R1
00e313 1f78      	ADC  R23,R24
00e314 9feb      	MUL  R30,R27
00e315 0df0      	ADD  R31,R0
00e316 1d61      	ADC  R22,R1
00e317 1f78      	ADC  R23,R24
00e318 9fea      	MUL  R30,R26
00e319 2de0      	MOV  R30,R0
00e31a 0df1      	ADD  R31,R1
00e31b 1f68      	ADC  R22,R24
00e31c 1f78      	ADC  R23,R24
00e31d 9508      	RET
                 
                 __MULB1W2U:
00e31e 2f6e      	MOV  R22,R30
00e31f 9f6a      	MUL  R22,R26
00e320 01f0      	MOVW R30,R0
00e321 9f6b      	MUL  R22,R27
00e322 0df0      	ADD  R31,R0
00e323 9508      	RET
                 
                 __MULW12:
00e324 d086      	RCALL __CHKSIGNW
00e325 dfd0      	RCALL __MULW12U
00e326 f40e      	BRTC __MULW121
00e327 df4e      	RCALL __ANEGW1
                 __MULW121:
00e328 9508      	RET
                 
                 __DIVB21U:
00e329 2400      	CLR  R0
00e32a e098      	LDI  R25,8
                 __DIVB21U1:
00e32b 0faa      	LSL  R26
00e32c 1c00      	ROL  R0
00e32d 1a0e      	SUB  R0,R30
00e32e f410      	BRCC __DIVB21U2
00e32f 0e0e      	ADD  R0,R30
00e330 c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00e331 60a1      	SBR  R26,1
                 __DIVB21U3:
00e332 959a      	DEC  R25
00e333 f7b9      	BRNE __DIVB21U1
00e334 2fea      	MOV  R30,R26
00e335 2da0      	MOV  R26,R0
00e336 9508      	RET
                 
                 __DIVB21:
00e337 d067      	RCALL __CHKSIGNB
00e338 dff0      	RCALL __DIVB21U
00e339 f40e      	BRTC __DIVB211
00e33a 95e1      	NEG  R30
                 __DIVB211:
00e33b 9508      	RET
                 
                 __DIVW21U:
00e33c 2400      	CLR  R0
00e33d 2411      	CLR  R1
00e33e e190      	LDI  R25,16
                 __DIVW21U1:
00e33f 0faa      	LSL  R26
00e340 1fbb      	ROL  R27
00e341 1c00      	ROL  R0
00e342 1c11      	ROL  R1
00e343 1a0e      	SUB  R0,R30
00e344 0a1f      	SBC  R1,R31
00e345 f418      	BRCC __DIVW21U2
00e346 0e0e      	ADD  R0,R30
00e347 1e1f      	ADC  R1,R31
00e348 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00e349 60a1      	SBR  R26,1
                 __DIVW21U3:
00e34a 959a      	DEC  R25
00e34b f799      	BRNE __DIVW21U1
00e34c 01fd      	MOVW R30,R26
00e34d 01d0      	MOVW R26,R0
00e34e 9508      	RET
                 
                 __DIVW21:
00e34f d05b      	RCALL __CHKSIGNW
00e350 dfeb      	RCALL __DIVW21U
00e351 f40e      	BRTC __DIVW211
00e352 df23      	RCALL __ANEGW1
                 __DIVW211:
00e353 9508      	RET
                 
                 __DIVD21U:
00e354 933f      	PUSH R19
00e355 934f      	PUSH R20
00e356 935f      	PUSH R21
00e357 2400      	CLR  R0
00e358 2411      	CLR  R1
00e359 2744      	CLR  R20
00e35a 2755      	CLR  R21
00e35b e230      	LDI  R19,32
                 __DIVD21U1:
00e35c 0faa      	LSL  R26
00e35d 1fbb      	ROL  R27
00e35e 1f88      	ROL  R24
00e35f 1f99      	ROL  R25
00e360 1c00      	ROL  R0
00e361 1c11      	ROL  R1
00e362 1f44      	ROL  R20
00e363 1f55      	ROL  R21
00e364 1a0e      	SUB  R0,R30
00e365 0a1f      	SBC  R1,R31
00e366 0b46      	SBC  R20,R22
00e367 0b57      	SBC  R21,R23
00e368 f428      	BRCC __DIVD21U2
00e369 0e0e      	ADD  R0,R30
00e36a 1e1f      	ADC  R1,R31
00e36b 1f46      	ADC  R20,R22
00e36c 1f57      	ADC  R21,R23
00e36d c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00e36e 60a1      	SBR  R26,1
                 __DIVD21U3:
00e36f 953a      	DEC  R19
00e370 f759      	BRNE __DIVD21U1
00e371 01fd      	MOVW R30,R26
00e372 01bc      	MOVW R22,R24
00e373 01d0      	MOVW R26,R0
00e374 01ca      	MOVW R24,R20
00e375 915f      	POP  R21
00e376 914f      	POP  R20
00e377 913f      	POP  R19
00e378 9508      	RET
                 
                 __DIVD21:
00e379 d03f      	RCALL __CHKSIGND
00e37a dfd9      	RCALL __DIVD21U
00e37b f40e      	BRTC __DIVD211
00e37c defd      	RCALL __ANEGD1
                 __DIVD211:
00e37d 9508      	RET
                 
                 __MODB21:
00e37e 94e8      	CLT
00e37f ffa7      	SBRS R26,7
00e380 c002      	RJMP __MODB211
00e381 95a1      	NEG  R26
00e382 9468      	SET
                 __MODB211:
00e383 fde7      	SBRC R30,7
00e384 95e1      	NEG  R30
00e385 dfa3      	RCALL __DIVB21U
00e386 2fea      	MOV  R30,R26
00e387 f40e      	BRTC __MODB212
00e388 95e1      	NEG  R30
                 __MODB212:
00e389 9508      	RET
                 
                 __MODW21U:
00e38a dfb1      	RCALL __DIVW21U
00e38b 01fd      	MOVW R30,R26
00e38c 9508      	RET
                 
                 __MODW21:
00e38d 94e8      	CLT
00e38e ffb7      	SBRS R27,7
00e38f c004      	RJMP __MODW211
00e390 95a0      	COM  R26
00e391 95b0      	COM  R27
00e392 9611      	ADIW R26,1
00e393 9468      	SET
                 __MODW211:
00e394 fdf7      	SBRC R31,7
00e395 dee0      	RCALL __ANEGW1
00e396 dfa5      	RCALL __DIVW21U
00e397 01fd      	MOVW R30,R26
00e398 f40e      	BRTC __MODW212
00e399 dedc      	RCALL __ANEGW1
                 __MODW212:
00e39a 9508      	RET
                 
                 __MODD21U:
00e39b dfb8      	RCALL __DIVD21U
00e39c 01fd      	MOVW R30,R26
00e39d 01bc      	MOVW R22,R24
00e39e 9508      	RET
                 
                 __CHKSIGNB:
00e39f 94e8      	CLT
00e3a0 ffe7      	SBRS R30,7
00e3a1 c002      	RJMP __CHKSB1
00e3a2 95e1      	NEG  R30
00e3a3 9468      	SET
                 __CHKSB1:
00e3a4 ffa7      	SBRS R26,7
00e3a5 c004      	RJMP __CHKSB2
00e3a6 95a1      	NEG  R26
00e3a7 f800      	BLD  R0,0
00e3a8 9403      	INC  R0
00e3a9 fa00      	BST  R0,0
                 __CHKSB2:
00e3aa 9508      	RET
                 
                 __CHKSIGNW:
00e3ab 94e8      	CLT
00e3ac fff7      	SBRS R31,7
00e3ad c002      	RJMP __CHKSW1
00e3ae dec7      	RCALL __ANEGW1
00e3af 9468      	SET
                 __CHKSW1:
00e3b0 ffb7      	SBRS R27,7
00e3b1 c006      	RJMP __CHKSW2
00e3b2 95a0      	COM  R26
00e3b3 95b0      	COM  R27
00e3b4 9611      	ADIW R26,1
00e3b5 f800      	BLD  R0,0
00e3b6 9403      	INC  R0
00e3b7 fa00      	BST  R0,0
                 __CHKSW2:
00e3b8 9508      	RET
                 
                 __CHKSIGND:
00e3b9 94e8      	CLT
00e3ba ff77      	SBRS R23,7
00e3bb c002      	RJMP __CHKSD1
00e3bc debd      	RCALL __ANEGD1
00e3bd 9468      	SET
                 __CHKSD1:
00e3be ff97      	SBRS R25,7
00e3bf c00b      	RJMP __CHKSD2
00e3c0 2400      	CLR  R0
00e3c1 95a0      	COM  R26
00e3c2 95b0      	COM  R27
00e3c3 9580      	COM  R24
00e3c4 9590      	COM  R25
00e3c5 9611      	ADIW R26,1
00e3c6 1d80      	ADC  R24,R0
00e3c7 1d90      	ADC  R25,R0
00e3c8 f800      	BLD  R0,0
00e3c9 9403      	INC  R0
00e3ca fa00      	BST  R0,0
                 __CHKSD2:
00e3cb 9508      	RET
                 
                 __GETW1P:
00e3cc 91ed      	LD   R30,X+
00e3cd 91fc      	LD   R31,X
00e3ce 9711      	SBIW R26,1
00e3cf 9508      	RET
                 
                 __GETD1P:
00e3d0 91ed      	LD   R30,X+
00e3d1 91fd      	LD   R31,X+
00e3d2 916d      	LD   R22,X+
00e3d3 917c      	LD   R23,X
00e3d4 9713      	SBIW R26,3
00e3d5 9508      	RET
                 
                 __GETD1P_INC:
00e3d6 91ed      	LD   R30,X+
00e3d7 91fd      	LD   R31,X+
00e3d8 916d      	LD   R22,X+
00e3d9 917d      	LD   R23,X+
00e3da 9508      	RET
                 
                 __PUTDP1:
00e3db 93ed      	ST   X+,R30
00e3dc 93fd      	ST   X+,R31
00e3dd 936d      	ST   X+,R22
00e3de 937c      	ST   X,R23
00e3df 9508      	RET
                 
                 __PUTDP1_DEC:
00e3e0 937e      	ST   -X,R23
00e3e1 936e      	ST   -X,R22
00e3e2 93fe      	ST   -X,R31
00e3e3 93ee      	ST   -X,R30
00e3e4 9508      	RET
                 
                 __GETD1PF:
00e3e5 bf6b      	OUT  RAMPZ,R22
00e3e6 9007      	ELPM R0,Z+
00e3e7 9017      	ELPM R1,Z+
00e3e8 9167      	ELPM R22,Z+
00e3e9 9176      	ELPM R23,Z
00e3ea 01f0      	MOVW R30,R0
00e3eb 9508      	RET
                 
                 __GETD1S0:
00e3ec 81e8      	LD   R30,Y
00e3ed 81f9      	LDD  R31,Y+1
00e3ee 816a      	LDD  R22,Y+2
00e3ef 817b      	LDD  R23,Y+3
00e3f0 9508      	RET
                 
                 __GETD2S0:
00e3f1 81a8      	LD   R26,Y
00e3f2 81b9      	LDD  R27,Y+1
00e3f3 818a      	LDD  R24,Y+2
00e3f4 819b      	LDD  R25,Y+3
00e3f5 9508      	RET
                 
                 __PUTD1S0:
00e3f6 83e8      	ST   Y,R30
00e3f7 83f9      	STD  Y+1,R31
00e3f8 836a      	STD  Y+2,R22
00e3f9 837b      	STD  Y+3,R23
00e3fa 9508      	RET
                 
                 __PUTDZ20:
00e3fb 83a0      	ST   Z,R26
00e3fc 83b1      	STD  Z+1,R27
00e3fd 8382      	STD  Z+2,R24
00e3fe 8393      	STD  Z+3,R25
00e3ff 9508      	RET
                 
                 __PUTPARD1:
00e400 937a      	ST   -Y,R23
00e401 936a      	ST   -Y,R22
00e402 93fa      	ST   -Y,R31
00e403 93ea      	ST   -Y,R30
00e404 9508      	RET
                 
                 __PUTPARD2:
00e405 939a      	ST   -Y,R25
00e406 938a      	ST   -Y,R24
00e407 93ba      	ST   -Y,R27
00e408 93aa      	ST   -Y,R26
00e409 9508      	RET
                 
                 __PUTPARL:
00e40a 27bb      	CLR  R27
                 __PUTPAR:
00e40b 0fea      	ADD  R30,R26
00e40c 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00e40d 9002      	LD   R0,-Z
00e40e 920a      	ST   -Y,R0
00e40f 9711      	SBIW R26,1
00e410 f7e1      	BRNE __PUTPAR0
00e411 9508      	RET
                 
                 __CDF2U:
00e412 9468      	SET
00e413 c001      	RJMP __CDF2U0
                 __CDF2:
00e414 94e8      	CLT
                 __CDF2U0:
00e415 d001      	RCALL __SWAPD12
00e416 dd01      	RCALL __CDF1U0
                 
                 __SWAPD12:
00e417 2e18      	MOV  R1,R24
00e418 2f86      	MOV  R24,R22
00e419 2d61      	MOV  R22,R1
00e41a 2e19      	MOV  R1,R25
00e41b 2f97      	MOV  R25,R23
00e41c 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00e41d 2e1b      	MOV  R1,R27
00e41e 2fbf      	MOV  R27,R31
00e41f 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00e420 2e1a      	MOV  R1,R26
00e421 2fae      	MOV  R26,R30
00e422 2de1      	MOV  R30,R1
00e423 9508      	RET
                 
                 __EEPROMRDD:
00e424 9612      	ADIW R26,2
00e425 d002      	RCALL __EEPROMRDW
00e426 01bf      	MOVW R22,R30
00e427 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00e428 9611      	ADIW R26,1
00e429 d002      	RCALL __EEPROMRDB
00e42a 2ffe      	MOV  R31,R30
00e42b 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00e42c 99f9      	SBIC EECR,EEWE
00e42d cffe      	RJMP __EEPROMRDB
00e42e 93ff      	PUSH R31
00e42f b7ff      	IN   R31,SREG
00e430 94f8      	CLI
00e431 bda1      	OUT  EEARL,R26
00e432 bdb2      	OUT  EEARH,R27
00e433 9af8      	SBI  EECR,EERE
00e434 b5e0      	IN   R30,EEDR
00e435 bfff      	OUT  SREG,R31
00e436 91ff      	POP  R31
00e437 9508      	RET
                 
                 __EEPROMWRD:
00e438 d007      	RCALL __EEPROMWRW
00e439 9612      	ADIW R26,2
00e43a 010f      	MOVW R0,R30
00e43b 01fb      	MOVW R30,R22
00e43c d003      	RCALL __EEPROMWRW
00e43d 01f0      	MOVW R30,R0
00e43e 9712      	SBIW R26,2
00e43f 9508      	RET
                 
                 __EEPROMWRW:
00e440 d007      	RCALL __EEPROMWRB
00e441 9611      	ADIW R26,1
00e442 93ef      	PUSH R30
00e443 2fef      	MOV  R30,R31
00e444 d003      	RCALL __EEPROMWRB
00e445 91ef      	POP  R30
00e446 9711      	SBIW R26,1
00e447 9508      	RET
                 
                 __EEPROMWRB:
00e448 9bf9      	SBIS EECR,EEWE
00e449 c002      	RJMP __EEPROMWRB1
00e44a 95a8      	WDR
00e44b cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00e44c b79f      	IN   R25,SREG
00e44d 94f8      	CLI
00e44e bda1      	OUT  EEARL,R26
00e44f bdb2      	OUT  EEARH,R27
00e450 9af8      	SBI  EECR,EERE
00e451 b580      	IN   R24,EEDR
00e452 17e8      	CP   R30,R24
00e453 f019      	BREQ __EEPROMWRB0
00e454 bde0      	OUT  EEDR,R30
00e455 9afa      	SBI  EECR,EEMWE
00e456 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00e457 bf9f      	OUT  SREG,R25
00e458 9508      	RET
                 
                 __CPD10:
00e459 9730      	SBIW R30,0
00e45a 4060      	SBCI R22,0
00e45b 4070      	SBCI R23,0
00e45c 9508      	RET
                 
                 __CPW02:
00e45d 2400      	CLR  R0
00e45e 160a      	CP   R0,R26
00e45f 060b      	CPC  R0,R27
00e460 9508      	RET
                 
                 __CPD20:
00e461 9710      	SBIW R26,0
00e462 4080      	SBCI R24,0
00e463 4090      	SBCI R25,0
00e464 9508      	RET
                 
                 __CPD02:
00e465 2400      	CLR  R0
00e466 160a      	CP   R0,R26
00e467 060b      	CPC  R0,R27
00e468 0608      	CPC  R0,R24
00e469 0609      	CPC  R0,R25
00e46a 9508      	RET
                 
                 __CPD12:
00e46b 17ea      	CP   R30,R26
00e46c 07fb      	CPC  R31,R27
00e46d 0768      	CPC  R22,R24
00e46e 0779      	CPC  R23,R25
00e46f 9508      	RET
                 
                 __CPD21:
00e470 17ae      	CP   R26,R30
00e471 07bf      	CPC  R27,R31
00e472 0786      	CPC  R24,R22
00e473 0797      	CPC  R25,R23
00e474 9508      	RET
                 
                 __SAVELOCR6:
00e475 935a      	ST   -Y,R21
                 __SAVELOCR5:
00e476 934a      	ST   -Y,R20
                 __SAVELOCR4:
00e477 933a      	ST   -Y,R19
                 __SAVELOCR3:
00e478 932a      	ST   -Y,R18
                 __SAVELOCR2:
00e479 931a      	ST   -Y,R17
00e47a 930a      	ST   -Y,R16
00e47b 9508      	RET
                 
                 __LOADLOCR6:
00e47c 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00e47d 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00e47e 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00e47f 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00e480 8119      	LDD  R17,Y+1
00e481 8108      	LD   R16,Y
00e482 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00e483 0fac      	ADD  R26,R28
00e484 1fbd      	ADC  R27,R29
00e485 bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00e486 9007      	ELPM R0,Z+
00e487 920d      	ST   X+,R0
00e488 958a      	DEC  R24
00e489 f7e1      	BRNE __INITLOC0
00e48a 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 579 r1 : 111 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  14 
r16: 839 r17: 963 r18: 523 r19: 411 r20: 308 r21: 245 r22:1482 r23:1324 
r24: 480 r25: 355 r26:4592 r27:1689 r28: 632 r29:  23 r30:8205 r31:3421 
x  : 700 y  :4034 z  : 718 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 239 add   : 248 
adiw  : 829 and   :  15 andi  : 198 asr   :   6 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :  20 brcs  :   5 break :   0 breq  : 636 
brge  : 191 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 131 
brlt  :  68 brmi  :  32 brne  : 867 brpl  : 157 brsh  : 126 brtc  :  10 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   5 call  :7087 
cbi   :  41 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 208 cls   :   0 clt   :  11 clv   :   0 clz   :   2 com   :  32 
cp    : 111 cpc   : 563 cpi   :1184 cpse  :   0 dec   :  22 des   :   0 
eicall:  11 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 109 inc   :   8 jmp   : 391 
ld    : 800 ldd   :2857 ldi   :7255 lds   : 721 lpm   :   0 lsl   :  40 
lsr   :  21 mov   : 384 movw  :1336 mul   : 114 muls  :   4 mulsu :   0 
neg   :  11 nop   :   1 or    :  66 ori   :  50 out   : 113 pop   : 440 
push  : 440 rcall : 317 ret   :1072 reti  :   5 rjmp  :1770 rol   :  60 
ror   :  33 sbc   :  39 sbci  : 774 sbi   :  32 sbic  :   5 sbis  :   9 
sbiw  : 272 sbr   :   5 sbrc  :  17 sbrs  :  61 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  17 ses   :   0 set   :  10 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1226 std   : 546 sts   : 506 
sub   :  32 subi  : 832 swap  :   7 tst   : 166 wdr   :  13 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x01c916  89638  27376 117014  262144  44.6%
[.dseg] 0x000200 0x001adf      0   3567   3567    8703  41.0%
[.eseg] 0x000000 0x00065d      0   1629   1629    4096  39.8%

Assembly complete, 0 errors, 41 warnings
