
AVRASM ver. 2.1.30  C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm Thu Nov 05 15:50:27 2015

C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 3519 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 418b 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 419c 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 4198 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 4194 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 3f35 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 41b5 	JMP  _timer3_ovf_isr
000048 940c 4057 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 41d1 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 4063 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 4081 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 2e30
000077 3432
000078 0062      	.DB  0x30,0x2E,0x32,0x34,0x62,0x0
                 _tempTable:
000079 0000
00007a c2a0
00007b 0000
00007c c28c      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0x8C,0xC2
00007d 0000
00007e c270
00007f 0000
000080 c248      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0x48,0xC2
000081 0000
000082 c220
000083 0000
000084 c1f0      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0xF0,0xC1
000085 0000
000086 c1a0
000087 0000
000088 c120      	.DB  0x0,0x0,0xA0,0xC1,0x0,0x0,0x20,0xC1
000089 0000
00008a 0000
00008b 0000
00008c 4120      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x41
00008d 0000
00008e 41a0
00008f 0000
000090 41f0      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0xF0,0x41
000091 0000
000092 4220
000093 0000
000094 4248      	.DB  0x0,0x0,0x20,0x42,0x0,0x0,0x48,0x42
000095 0000
000096 4270      	.DB  0x0,0x0,0x70,0x42
                 _adcTable:
000097 6333
000098 4391
000099 85fa
00009a 439a      	.DB  0x33,0x63,0x91,0x43,0xFA,0x85,0x9A,0x43
00009b 5c05
00009c 43a3
00009d e979
00009e 43ab      	.DB  0x5,0x5C,0xA3,0x43,0x79,0xE9,0xAB,0x43
00009f 3237
0000a0 43b4
0000a1 39a0
0000a2 43bc      	.DB  0x37,0x32,0xB4,0x43,0xA0,0x39,0xBC,0x43
0000a3 030f
0000a4 43c4
0000a5 917f
0000a6 43cb      	.DB  0xF,0x3,0xC4,0x43,0x7F,0x91,0xCB,0x43
0000a7 e7ab
0000a8 43d2
0000a9 0810
0000aa 43da      	.DB  0xAB,0xE7,0xD2,0x43,0x10,0x8,0xDA,0x43
0000ab f4fb
0000ac 43e0
0000ad b08d
0000ae 43e7      	.DB  0xFB,0xF4,0xE0,0x43,0x8D,0xB0,0xE7,0x43
0000af 3cc6
0000b0 43ee
0000b1 9b99
0000b2 43f4      	.DB  0xC6,0x3C,0xEE,0x43,0x99,0x9B,0xF4,0x43
0000b3 ceb5
0000b4 43fa      	.DB  0xB5,0xCE,0xFA,0x43
                 _error_msg:
0000b5 4da4
0000b6 0000
0000b7 4da5
0000b8 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
0000b9 4db1
0000ba 0000
0000bb 4dbc
0000bc 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
0000bd 4dc9
0000be 0000
0000bf 4dd4
0000c0 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
0000c1 4ddf
0000c2 0000
0000c3 4def
0000c4 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
0000c5 4df9
0000c6 0000
0000c7 4e02
0000c8 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
0000c9 4e14
0000ca 0000
0000cb 4e27
0000cc 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
0000cd 4e38
0000ce 0000
0000cf 4e47
0000d0 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
0000d1 4e58
0000d2 0000
0000d3 4e68
0000d4 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
0000d5 4324
0000d6 444d
0000d7 4453
0000d8 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
0000d9 4324
0000da 444d
0000db 4152
0000dc 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000dd 4324
0000de 444d
0000df 4c43
0000e0 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000e1 4324
0000e2 444d
0000e3 5653
0000e4 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000e5 4324
0000e6 444d
0000e7 4e53
0000e8 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000e9 4324
0000ea 444d
0000eb 4544
0000ec 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000ed 4324
0000ee 444d
0000ef 4444
0000f0 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000f1 4324
0000f2 444d
0000f3 5353
0000f4 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000f5 4324
0000f6 444d
0000f7 5352
0000f8 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _cmdGetADCSensor:
0000f9 4324
0000fa 444d
0000fb 4147
0000fc 0053      	.DB  0x24,0x43,0x4D,0x44,0x47,0x41,0x53,0x0
                 _k1:
0000fd 2220
0000fe 2b2a
0000ff 5b2c
000100 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
000101 7f7c
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1238): warning: .cseg .db misalignment - padding zero byte
000102 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
000103 0000
000104 0000      	.DW  0,0
                 
                 _0x3:
000105 0000
000106 0000
000107 0000
000108 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000109 0000
00010a 0a3d
00010b 3fd7
00010c 0000      	.DB  0x0,0x0,0x3D,0xA,0xD7,0x3F,0x0,0x0
00010d 0000
00010e 0000
00010f 0000
000110 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000111 0000
000112 0000
000113 0000
000114 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000115 0000
000116 0000
000117 0000
000118 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000119 0000
00011a 0000
00011b 0000
00011c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00011d 0000
00011e 0000
00011f 0000
000120 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000121 0000
000122 0000
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1252): warning: .cseg .db misalignment - padding zero byte
000123 0000      	.DB  0x0,0x0,0x0,0x0,0x0
                 _0xA5:
000124 ffff
000125 ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
000126 0a0d
000127 2d2d
000128 2d2d
000129 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
00012a 4920
00012b 696e
00012c 6974
00012d 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
00012e 4320
00012f 6d6f
000130 6c70
000131 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
000132 2065
000133 2d2d
000134 2d2d
000135 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000136 0a0d
000137 4300
000138 6e6f
000139 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
00013a 7463
00013b 3a20
00013c 6320
00013d 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
00013e 6174
00013f 7463
000140 742e
000141 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
000142 6e61
000143 6740
000144 616d
000145 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
000146 632e
000147 6d6f
000148 0a0d
000149 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
00014a 616d
00014b 6e69
00014c 203e
00014d 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
00014e 5374
00014f 6e65
000150 6f73
000151 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000152 6e6f
000153 6966
000154 2867
000155 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000156 2029
000157 7265
000158 6f72
000159 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
00015a 000a
00015b 6d3c
00015c 6961
00015d 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
00015e 6120
00015f 6464
000160 6553
000161 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
000162 726f
000163 6144
000164 6174
000165 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000166 7565
000167 2865
000168 6425
000169 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
00016a 312e
00016b 2966
00016c 6620
00016d 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
00016e 656c
00016f 0d64
000170 000a
000171 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
000172 6961
000173 3e6e
000174 7520
000175 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000176 7461
000177 5365
000178 6174
000179 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
00017a 2873
00017b 2029
00017c 6166
00017d 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00017e 6465
00017f 0a0d
000180 3c00
000181 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
000182 6e69
000183 203e
000184 706f
000185 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000186 7461
000187 6e69
000188 2067
000189 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
00018a 6564
00018b 6520
00018c 7272
00018d 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
00018e 2121
00018f 5b20
000190 7830
000191 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
000192 5832
000193 0d5d
000194 000a
000195 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000196 6961
000197 3e6e
000198 5320
000199 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
00019a 6572
00019b 6461
00019c 654d
00019d 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
00019e 7972
00019f 6552
0001a0 616d
0001a1 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
0001a2 2928
0001a3 6620
0001a4 6961
0001a5 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0001a6 0d64
0001a7 000a
0001a8 6d3c
0001a9 6961      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6D,0x61,0x69
0001aa 3e6e
0001ab 5b20
0001ac 6544
0001ad 6976      	.DB  0x6E,0x3E,0x20,0x5B,0x44,0x65,0x76,0x69
0001ae 6563
0001af 6420
0001b0 7369
0001b1 6261      	.DB  0x63,0x65,0x20,0x64,0x69,0x73,0x61,0x62
0001b2 656c
0001b3 205d
0001b4 545b
0001b5 5059      	.DB  0x6C,0x65,0x5D,0x20,0x5B,0x54,0x59,0x50
0001b6 2d45
0001b7 5d4b
0001b8 2420
0001b9 4d43      	.DB  0x45,0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D
0001ba 5344
0001bb 534e
0001bc 4e20
0001bd 3a20      	.DB  0x44,0x53,0x4E,0x53,0x20,0x4E,0x20,0x3A
0001be 5820
0001bf 582e
0001c0 2058
0001c1 2020      	.DB  0x20,0x58,0x2E,0x58,0x58,0x20,0x20,0x20
0001c2 2020
0001c3 2020
0001c4 2020
0001c5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001c6 2020
0001c7 2020
0001c8 2020
0001c9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ca 0d20
0001cb 3c00
0001cc 616d
0001cd 6e69      	.DB  0x20,0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E
0001ce 203e
0001cf 445b
0001d0 7665
0001d1 6369      	.DB  0x3E,0x20,0x5B,0x44,0x65,0x76,0x69,0x63
0001d2 2065
0001d3 6964
0001d4 6173
0001d5 6c62      	.DB  0x65,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
0001d6 5d65
0001d7 5b20
0001d8 5954
0001d9 4550      	.DB  0x65,0x5D,0x20,0x5B,0x54,0x59,0x50,0x45
0001da 4b2d
0001db 205d
0001dc 4324
0001dd 444d      	.DB  0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44
0001de 4e53
0001df 2053
0001e0 6425
0001e1 3a20      	.DB  0x53,0x4E,0x53,0x20,0x25,0x64,0x20,0x3A
0001e2 2520
0001e3 2066
0001e4 2020
0001e5 2020      	.DB  0x20,0x25,0x66,0x20,0x20,0x20,0x20,0x20
0001e6 2020
0001e7 2020
0001e8 2020
0001e9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ea 2020
0001eb 2020
0001ec 2020
0001ed 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001ee 000d
0001ef 6d3c
0001f0 6961
0001f1 3e6e      	.DB  0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
0001f2 5b20
0001f3 6544
0001f4 6976
0001f5 6563      	.DB  0x20,0x5B,0x44,0x65,0x76,0x69,0x63,0x65
0001f6 6420
0001f7 7369
0001f8 6261
0001f9 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
0001fa 205d
0001fb 545b
0001fc 5059
0001fd 2d45      	.DB  0x5D,0x20,0x5B,0x54,0x59,0x50,0x45,0x2D
0001fe 5d4b
0001ff 2420
000200 4d43
000201 5344      	.DB  0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44,0x53
000202 534e
000203 2520
000204 2064
000205 203a      	.DB  0x4E,0x53,0x20,0x25,0x64,0x20,0x3A,0x20
000206 6964
000207 6373
000208 6e6f
000209 656e      	.DB  0x64,0x69,0x73,0x63,0x6F,0x6E,0x6E,0x65
00020a 7463
00020b 6465
00020c 2020
00020d 2020      	.DB  0x63,0x74,0x65,0x64,0x20,0x20,0x20,0x20
00020e 2020
00020f 2020
000210 2020
000211 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
000212 3c00
000213 616d
000214 6e69
000215 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000216 445b
000217 7665
000218 6369
000219 2065      	.DB  0x5B,0x44,0x65,0x76,0x69,0x63,0x65,0x20
00021a 6964
00021b 6173
00021c 6c62
00021d 5d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x5D
00021e 5b20
00021f 4d54
000220 4345
000221 205d      	.DB  0x20,0x5B,0x54,0x4D,0x45,0x43,0x5D,0x20
000222 2020
000223 2020
000224 2020
000225 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000226 2020
000227 2020
000228 2020
000229 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022a 2020
00022b 2020
00022c 2020
00022d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00022e 2020
00022f 2020
000230 2020
000231 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000232 2020
000233 2020
000234 2020
000235 000d      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0xD,0x0
000236 6d3c
000237 6961
000238 3e6e
000239 5b20      	.DB  0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B
00023a 6544
00023b 6976
00023c 6563
00023d 6420      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x20,0x64
00023e 7369
00023f 6261
000240 656c
000241 205d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0x5D,0x20
000242 505b
000243 3154
000244 3030
000245 205d      	.DB  0x5B,0x50,0x54,0x31,0x30,0x30,0x5D,0x20
000246 2020
000247 2020
000248 2020
000249 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024a 2020
00024b 2020
00024c 2020
00024d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00024e 2020
00024f 2020
000250 2020
000251 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000252 2020
000253 2020
000254 2020
000255 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000256 2020
000257 2020
000258 0d20
000259 3c00      	.DB  0x20,0x20,0x20,0x20,0x20,0xD,0x0,0x3C
00025a 616d
00025b 6e69
00025c 203e
00025d 445b      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B,0x44
00025e 7665
00025f 6369
000260 2065
000261 6964      	.DB  0x65,0x76,0x69,0x63,0x65,0x20,0x64,0x69
000262 6173
000263 6c62
000264 5d65
000265 5b20      	.DB  0x73,0x61,0x62,0x6C,0x65,0x5D,0x20,0x5B
000266 4552
000267 4553
000268 5652
000269 4445      	.DB  0x52,0x45,0x53,0x45,0x52,0x56,0x45,0x44
00026a 205d
00026b 2020
00026c 2020
00026d 2020      	.DB  0x5D,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00026e 2020
00026f 2020
000270 2020
000271 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000272 2020
000273 2020
000274 2020
000275 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000276 2020
000277 2020
000278 2020
000279 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00027a 2020
00027b 2020
00027c 000d
00027d 753c      	.DB  0x20,0x20,0x20,0x20,0xD,0x0,0x3C,0x75
00027e 6470
00027f 7461
000280 5365
000281 6174      	.DB  0x70,0x64,0x61,0x74,0x65,0x53,0x74,0x61
000282 7574
000283 3e73
000284 4520
000285 4854      	.DB  0x74,0x75,0x73,0x3E,0x20,0x45,0x54,0x48
000286 725f
000287 7473
000288 745f
000289 6d69      	.DB  0x5F,0x72,0x73,0x74,0x5F,0x74,0x69,0x6D
00028a 7265
00028b 7420
00028c 6d69
00028d 2065      	.DB  0x65,0x72,0x20,0x74,0x69,0x6D,0x65,0x20
00028e 656c
00028f 7466
000290 3d20
000291 2520      	.DB  0x6C,0x65,0x66,0x74,0x20,0x3D,0x20,0x25
000292 646c
000293 2528
000294 586c
000295 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
000296 000a
000297 0a0d
000298 653c
000299 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00029a 746e
00029b 6143
00029c 7470
00029d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00029e 3e65
00029f 2120
0002a0 2121
0002a1 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0002a2 2121
0002a3 2121
0002a4 2121
0002a5 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
0002a6 6e6f
0002a7 7469
0002a8 726f
0002a9 4d20      	.DB  0x6F,0x6E,0x69,0x74,0x6F,0x72,0x20,0x4D
0002aa 646f
0002ab 2065
0002ac 2121
0002ad 2121      	.DB  0x6F,0x64,0x65,0x20,0x21,0x21,0x21,0x21
0002ae 0d21
0002af 000a
0002b0 0a0d
0002b1 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
0002b2 6576
0002b3 746e
0002b4 6143
0002b5 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
0002b6 7275
0002b7 3e65
0002b8 2120
0002b9 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
0002ba 2121
0002bb 2121
0002bc 2121
0002bd 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002be 4d20
0002bf 6961
0002c0 746e
0002c1 6e65      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
0002c2 6e61
0002c3 6563
0002c4 4920
0002c5 206e      	.DB  0x61,0x6E,0x63,0x65,0x20,0x49,0x6E,0x20
0002c6 7250
0002c7 676f
0002c8 6572
0002c9 7373      	.DB  0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73
0002ca 2120
0002cb 2121
0002cc 2121
0002cd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002ce 3c00
0002cf 7665
0002d0 6e65
0002d1 4374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0002d2 7061
0002d3 7574
0002d4 6572
0002d5 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0002d6 6461
0002d7 4564
0002d8 6576
0002d9 746e      	.DB  0x61,0x64,0x64,0x45,0x76,0x65,0x6E,0x74
0002da 7551
0002db 7565
0002dc 2865
0002dd 2029      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x29,0x20
0002de 6166
0002df 6c69
0002e0 6465
0002e1 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0002e2 0d00
0002e3 3c0a
0002e4 7665
0002e5 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002e6 4374
0002e7 7061
0002e8 7574
0002e9 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002ea 203e
0002eb 2121
0002ec 2121
0002ed 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002ee 2121
0002ef 2121
0002f0 2021
0002f1 614d      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x4D,0x61
0002f2 6e69
0002f3 5020
0002f4 776f
0002f5 7265      	.DB  0x69,0x6E,0x20,0x50,0x6F,0x77,0x65,0x72
0002f6 4420
0002f7 776f
0002f8 206e
0002f9 2121      	.DB  0x20,0x44,0x6F,0x77,0x6E,0x20,0x21,0x21
0002fa 2121
0002fb 0d21
0002fc 000a
0002fd 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0002fe 653c
0002ff 6576
000300 746e
000301 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
000302 7470
000303 7275
000304 3e65
000305 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
000306 2121
000307 2121
000308 2121
000309 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00030a 2121
00030b 4d20
00030c 6961
00030d 206e      	.DB  0x21,0x21,0x20,0x4D,0x61,0x69,0x6E,0x20
00030e 6f50
00030f 6577
000310 2072
000311 7055      	.DB  0x50,0x6F,0x77,0x65,0x72,0x20,0x55,0x70
000312 2120
000313 2121
000314 2121
000315 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000316 0d00
000317 3c0a
000318 7665
000319 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
00031a 4374
00031b 7061
00031c 7574
00031d 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00031e 203e
00031f 2121
000320 2121
000321 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
000322 2121
000323 2121
000324 2021
000325 6142      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x42,0x61
000326 7474
000327 7265
000328 2079
000329 6f4c      	.DB  0x74,0x74,0x65,0x72,0x79,0x20,0x4C,0x6F
00032a 2077
00032b 2121
00032c 2121
00032d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00032e 000a
00032f 0a0d
000330 653c
000331 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000332 746e
000333 6143
000334 7470
000335 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000336 3e65
000337 2120
000338 2121
000339 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00033a 2121
00033b 2121
00033c 2121
00033d 4220      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x42
00033e 7461
00033f 6574
000340 7972
000341 4f20      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x20,0x4F
000342 204b
000343 2121
000344 2121
000345 0d21      	.DB  0x4B,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000346 000a
000347 0a0d
000348 653c
000349 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00034a 746e
00034b 6143
00034c 7470
00034d 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
00034e 3e65
00034f 2120
000350 2121
000351 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000352 2121
000353 2121
000354 2121
000355 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000356 6d65
000357 726f
000358 2079
000359 6f4c      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4C,0x6F
00035a 2077
00035b 2121
00035c 2121
00035d 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
00035e 000a
00035f 0a0d
000360 653c
000361 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000362 746e
000363 6143
000364 7470
000365 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000366 3e65
000367 2120
000368 2121
000369 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00036a 2121
00036b 2121
00036c 2121
00036d 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
00036e 6d65
00036f 726f
000370 2079
000371 7245      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x45,0x72
000372 6f72
000373 2072
000374 2121
000375 2121      	.DB  0x72,0x6F,0x72,0x20,0x21,0x21,0x21,0x21
000376 0d21
000377 000a
000378 0a0d
000379 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
00037a 6576
00037b 746e
00037c 6143
00037d 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
00037e 7275
00037f 3e65
000380 2120
000381 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
000382 2121
000383 2121
000384 2121
000385 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000386 4d20
000387 6d65
000388 726f
000389 2079      	.DB  0x20,0x4D,0x65,0x6D,0x6F,0x72,0x79,0x20
00038a 4b4f
00038b 2120
00038c 2121
00038d 2121      	.DB  0x4F,0x4B,0x20,0x21,0x21,0x21,0x21,0x21
00038e 0a0d
00038f 0d00
000390 3c0a
000391 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000392 6e65
000393 4374
000394 7061
000395 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
000396 6572
000397 203e
000398 2121
000399 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
00039a 2121
00039b 2121
00039c 2121
00039d 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
00039e 6944
00039f 206e
0003a0 6425
0003a1 5220      	.DB  0x44,0x69,0x6E,0x20,0x25,0x64,0x20,0x52
0003a2 7369
0003a3 6e69
0003a4 2067
0003a5 2121      	.DB  0x69,0x73,0x69,0x6E,0x67,0x20,0x21,0x21
0003a6 2121
0003a7 0d21
0003a8 000a
0003a9 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0003aa 653c
0003ab 6576
0003ac 746e
0003ad 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
0003ae 7470
0003af 7275
0003b0 3e65
0003b1 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
0003b2 2121
0003b3 2121
0003b4 2121
0003b5 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0003b6 2121
0003b7 4420
0003b8 6e69
0003b9 2520      	.DB  0x21,0x21,0x20,0x44,0x69,0x6E,0x20,0x25
0003ba 2064
0003bb 6146
0003bc 6c6c
0003bd 6e69      	.DB  0x64,0x20,0x46,0x61,0x6C,0x6C,0x69,0x6E
0003be 2067
0003bf 2121
0003c0 2121
0003c1 0d21      	.DB  0x67,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0003c2 000a
0003c3 0a0d
0003c4 653c
0003c5 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0003c6 746e
0003c7 6143
0003c8 7470
0003c9 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0003ca 3e65
0003cb 2120
0003cc 2121
0003cd 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0003ce 2121
0003cf 2121
0003d0 2121
0003d1 5020      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x50
0003d2 4f52
0003d3 4542
0003d4 2520
0003d5 2064      	.DB  0x52,0x4F,0x42,0x45,0x20,0x25,0x64,0x20
0003d6 4944
0003d7 4353
0003d8 4e4f
0003d9 454e      	.DB  0x44,0x49,0x53,0x43,0x4F,0x4E,0x4E,0x45
0003da 5443
0003db 2120
0003dc 2121
0003dd 2121      	.DB  0x43,0x54,0x20,0x21,0x21,0x21,0x21,0x21
0003de 0a0d
0003df 4100
0003e0 314c
0003e1 2532      	.DB  0xD,0xA,0x0,0x41,0x4C,0x31,0x32,0x25
0003e2 6431
0003e3 0d00
0003e4 3c0a
0003e5 7665      	.DB  0x31,0x64,0x0,0xD,0xA,0x3C,0x65,0x76
0003e6 6e65
0003e7 4374
0003e8 7061
0003e9 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
0003ea 6572
0003eb 203e
0003ec 2121
0003ed 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
0003ee 2121
0003ef 2121
0003f0 2121
0003f1 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
0003f2 5250
0003f3 424f
0003f4 2045
0003f5 6425      	.DB  0x50,0x52,0x4F,0x42,0x45,0x20,0x25,0x64
0003f6 4320
0003f7 4e4f
0003f8 454e
0003f9 5443      	.DB  0x20,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0003fa 2120
0003fb 2121
0003fc 2121
0003fd 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003fe 4100
0003ff 304c
000400 2532
000401 6431      	.DB  0x0,0x41,0x4C,0x30,0x32,0x25,0x31,0x64
000402 0d00
000403 3c0a
000404 7665
000405 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000406 4374
000407 7061
000408 7574
000409 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00040a 203e
00040b 2121
00040c 2121
00040d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00040e 2121
00040f 2121
000410 2021
000411 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000412 424f
000413 2045
000414 6425
000415 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000416 6d65
000417 6570
000418 6172
000419 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00041a 6572
00041b 4520
00041c 5252
00041d 524f      	.DB  0x72,0x65,0x20,0x45,0x52,0x52,0x4F,0x52
00041e 2120
00041f 2121
000420 2121
000421 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000422 0d00
000423 3c0a
000424 7665
000425 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000426 4374
000427 7061
000428 7574
000429 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
00042a 203e
00042b 2121
00042c 2121
00042d 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00042e 2121
00042f 2121
000430 2021
000431 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
000432 424f
000433 2045
000434 6425
000435 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000436 6d65
000437 6570
000438 6172
000439 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
00043a 6572
00043b 4f20
00043c 204b
00043d 2121      	.DB  0x72,0x65,0x20,0x4F,0x4B,0x20,0x21,0x21
00043e 2121
00043f 0d21
000440 000a
000441 733c      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0x3C,0x73
000442 6174
000443 7574
000444 5273
000445 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000446 726f
000447 3e74
000448 5220
000449 5045      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x52,0x45,0x50
00044a 524f
00044b 5f54
00044c 4953
00044d 474e      	.DB  0x4F,0x52,0x54,0x5F,0x53,0x49,0x4E,0x47
00044e 454c
00044f 6d20
000450 646f
000451 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
000452 6f6e
000453 2074
000454 7573
000455 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000456 726f
000457 6574
000458 2064
000459 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
00045a 0d74
00045b 000a
00045c 733c
00045d 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00045e 7574
00045f 5273
000460 7065
000461 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000462 3e74
000463 5220
000464 5045
000465 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
000466 5f54
000467 554d
000468 544c
000469 5049      	.DB  0x54,0x5F,0x4D,0x55,0x4C,0x54,0x49,0x50
00046a 454c
00046b 6d20
00046c 646f
00046d 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
00046e 6f6e
00046f 2074
000470 7573
000471 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000472 726f
000473 6574
000474 2064
000475 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000476 0d74
000477 000a
000478 733c
000479 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
00047a 7574
00047b 5273
00047c 7065
00047d 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00047e 3e74
00047f 6d20
000480 6c61
000481 6f6c      	.DB  0x74,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
000482 2063
000483 6166
000484 6c69
000485 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000486 2820
000487 6425
000488 6220
000489 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
00048a 7365
00048b 0d29
00048c 000a
00048d 733c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x73
00048e 6174
00048f 7574
000490 5273
000491 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000492 726f
000493 3e74
000494 6720
000495 7465      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x67,0x65,0x74
000496 6544
000497 6976
000498 6563
000499 7453      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x53,0x74
00049a 7461
00049b 2865
00049c 2029
00049d 6166      	.DB  0x61,0x74,0x65,0x28,0x29,0x20,0x66,0x61
00049e 6c69
00049f 6465
0004a0 0a0d
0004a1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0004a2 7473
0004a3 7461
0004a4 7375
0004a5 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
0004a6 6f70
0004a7 7472
0004a8 203e
0004a9 7473      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x73,0x74
0004aa 7461
0004ab 7375
0004ac 7220
0004ad 7065      	.DB  0x61,0x74,0x75,0x73,0x20,0x72,0x65,0x70
0004ae 726f
0004af 2074
0004b0 6361
0004b1 6d63      	.DB  0x6F,0x72,0x74,0x20,0x61,0x63,0x63,0x6D
0004b2 7520
0004b3 6b6e
0004b4 6f6e
0004b5 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0004b6 5b20
0004b7 7830
0004b8 3025
0004b9 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0004ba 0d5d
0004bb 000a
0004bc 733c
0004bd 6174      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
0004be 7574
0004bf 5273
0004c0 7065
0004c1 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
0004c2 3e74
0004c3 4520
0004c4 4854
0004c5 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0004c6 6e65
0004c7 5364
0004c8 6174
0004c9 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
0004ca 5273
0004cb 7065
0004cc 726f
0004cd 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0004ce 646d
0004cf 2928
0004d0 6620
0004d1 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
0004d2 656c
0004d3 0d64
0004d4 000a
0004d5 733c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x73
0004d6 6e65
0004d7 6f73
0004d8 4472
0004d9 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0004da 5261
0004db 7065
0004dc 726f
0004dd 3e74      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0004de 5b20
0004df 6c25
0004e0 5d64
0004e1 255b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x25
0004e2 5d64
0004e3 255b
0004e4 322e
0004e5 5d66      	.DB  0x64,0x5D,0x5B,0x25,0x2E,0x32,0x66,0x5D
0004e6 0a0d
0004e7 0d00
0004e8 3c0a
0004e9 6573      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x73,0x65
0004ea 736e
0004eb 726f
0004ec 6144
0004ed 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
0004ee 6552
0004ef 6f70
0004f0 7472
0004f1 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0004f2 3d3d
0004f3 203d
0004f4 5245
0004f5 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0004f6 2052
0004f7 4e49
0004f8 4f46
0004f9 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0004fa 4954
0004fb 4e4f
0004fc 4920
0004fd 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0004fe 4554
0004ff 504d
000500 5120
000501 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
000502 4555
000503 3d20
000504 3d3d
000505 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
000506 3c00
000507 6573
000508 736e
000509 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00050a 6144
00050b 6174
00050c 6552
00050d 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
00050e 7472
00050f 203e
000510 5445
000511 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
000512 6573
000513 646e
000514 6144
000515 6174      	.DB  0x73,0x65,0x6E,0x64,0x44,0x61,0x74,0x61
000516 6552
000517 6f70
000518 7472
000519 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00051a 2864
00051b 2029
00051c 6166
00051d 6c69      	.DB  0x64,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00051e 6465
00051f 0a0d
000520 3c00
000521 7665      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x65,0x76
000522 6e65
000523 5274
000524 7065
000525 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000526 3e74
000527 5b20
000528 6c25
000529 5d64      	.DB  0x74,0x3E,0x20,0x5B,0x25,0x6C,0x64,0x5D
00052a 305b
00052b 2578
00052c 3230
00052d 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00052e 305b
00052f 2578
000530 3230
000531 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000532 0a0d
000533 0d00
000534 3c0a
000535 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000536 6e65
000537 5274
000538 7065
000539 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
00053a 3e74
00053b 3d20
00053c 3d3d
00053d 4520      	.DB  0x74,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
00053e 5252
00053f 524f
000540 4920
000541 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
000542 4d4f
000543 5441
000544 4f49
000545 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
000546 4e49
000547 5420
000548 4d45
000549 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
00054a 5551
00054b 5545
00054c 2045
00054d 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
00054e 0d3d
00054f 000a
000550 653c
000551 6576      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
000552 746e
000553 6552
000554 6f70
000555 7472      	.DB  0x6E,0x74,0x52,0x65,0x70,0x6F,0x72,0x74
000556 203e
000557 5445
000558 5f48
000559 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
00055a 646e
00055b 7645
00055c 6e65
00055d 5274      	.DB  0x6E,0x64,0x45,0x76,0x65,0x6E,0x74,0x52
00055e 7065
00055f 726f
000560 4374
000561 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000562 2928
000563 6620
000564 6961
000565 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000566 0d64
000567 000a
000568 733c
000569 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00056a 6f73
00056b 4472
00056c 7461
00056d 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
00056e 7661
00056f 3e65
000570 7420
000571 6d69      	.DB  0x61,0x76,0x65,0x3E,0x20,0x74,0x69,0x6D
000572 5b65
000573 6c25
000574 5d64
000575 632c      	.DB  0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x63
000576 5b68
000577 6425
000578 2c5d
000579 6176      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76,0x61
00057a 5b6c
00057b 2e25
00057c 6632
00057d 0d5d      	.DB  0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD
00057e 000a
00057f 0a0d
000580 733c
000581 6e65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x73,0x65,0x6E
000582 6f73
000583 4472
000584 7461
000585 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000586 7661
000587 3e65
000588 3d20
000589 3d3d      	.DB  0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D,0x3D
00058a 4520
00058b 5252
00058c 524f
00058d 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
00058e 464e
00058f 4d4f
000590 5441
000591 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
000592 204e
000593 4e49
000594 5420
000595 4d45      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x54,0x45,0x4D
000596 2050
000597 5551
000598 5545
000599 2045      	.DB  0x50,0x20,0x51,0x55,0x45,0x55,0x45,0x20
00059a 3d3d
00059b 0d3d
00059c 000a
00059d 733c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x73
00059e 6e65
00059f 6f73
0005a0 4472
0005a1 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0005a2 5361
0005a3 7661
0005a4 3e65
0005a5 4c20      	.DB  0x61,0x53,0x61,0x76,0x65,0x3E,0x20,0x4C
0005a6 474f
0005a7 6f5f
0005a8 6570
0005a9 466e      	.DB  0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46
0005aa 6c69
0005ab 2865
0005ac 7325
0005ad 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0005ae 6166
0005af 6c69
0005b0 6465
0005b1 202c      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x2C,0x20
0005b2 6f63
0005b3 6c75
0005b4 6e64
0005b5 7427      	.DB  0x63,0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74
0005b6 7320
0005b7 7661
0005b8 2065
0005b9 6f6c      	.DB  0x20,0x73,0x61,0x76,0x65,0x20,0x6C,0x6F
0005ba 0d67
0005bb 000a
0005bc 733c
0005bd 6e65      	.DB  0x67,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0005be 6f73
0005bf 4472
0005c0 7461
0005c1 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
0005c2 7661
0005c3 3e65
0005c4 4c20
0005c5 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
0005c6 695f
0005c7 736e
0005c8 7265
0005c9 4474      	.DB  0x5F,0x69,0x6E,0x73,0x65,0x72,0x74,0x44
0005ca 7461
0005cb 2861
0005cc 2029
0005cd 6166      	.DB  0x61,0x74,0x61,0x28,0x29,0x20,0x66,0x61
0005ce 6c69
0005cf 6465
0005d0 0a0d
0005d1 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0005d2 6573
0005d3 736e
0005d4 726f
0005d5 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0005d6 6174
0005d7 6153
0005d8 6576
0005d9 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
0005da 4f4c
0005db 5f47
0005dc 6c63
0005dd 736f      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73
0005de 4665
0005df 6c69
0005e0 2865
0005e1 2029      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x29,0x20
0005e2 6166
0005e3 6c69
0005e4 6465
0005e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0005e6 3c00
0005e7 6573
0005e8 736e
0005e9 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0005ea 6144
0005eb 6174
0005ec 6153
0005ed 6576      	.DB  0x44,0x61,0x74,0x61,0x53,0x61,0x76,0x65
0005ee 203e
0005ef 6144
0005f0 6174
0005f1 4c20      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x20,0x4C
0005f2 676f
0005f3 6920
0005f4 2073
0005f5 6f6e      	.DB  0x6F,0x67,0x20,0x69,0x73,0x20,0x6E,0x6F
0005f6 2074
0005f7 6d65
0005f8 7470
0005f9 0d79      	.DB  0x74,0x20,0x65,0x6D,0x70,0x74,0x79,0xD
0005fa 000a
0005fb 653c
0005fc 6576
0005fd 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005fe 6153
0005ff 6576
000600 203e
000601 6974      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x74,0x69
000602 656d
000603 255b
000604 646c
000605 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000606 6469
000607 305b
000608 2578
000609 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
00060a 5d58
00060b 732c
00060c 6174
00060d 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00060e 7830
00060f 3025
000610 5832
000611 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000612 000a
000613 0a0d
000614 653c
000615 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000616 746e
000617 6153
000618 6576
000619 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
00061a 3d3d
00061b 203d
00061c 5245
00061d 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
00061e 2052
00061f 4e49
000620 4f46
000621 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
000622 4954
000623 4e4f
000624 4920
000625 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
000626 4554
000627 504d
000628 5120
000629 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
00062a 4555
00062b 3d20
00062c 3d3d
00062d 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
00062e 3c00
00062f 7665
000630 6e65
000631 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000632 7661
000633 3e65
000634 4c20
000635 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000636 6f5f
000637 6570
000638 466e
000639 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
00063a 2865
00063b 7325
00063c 2029
00063d 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
00063e 6c69
00063f 6465
000640 202c
000641 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
000642 6c75
000643 6e64
000644 7427
000645 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
000646 7661
000647 2065
000648 6f6c
000649 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
00064a 000a
00064b 653c
00064c 6576
00064d 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
00064e 6153
00064f 6576
000650 203e
000651 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
000652 5f47
000653 6e69
000654 6573
000655 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
000656 7645
000657 6e65
000658 2874
000659 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
00065a 6166
00065b 6c69
00065c 6465
00065d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00065e 3c00
00065f 7665
000660 6e65
000661 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
000662 7661
000663 3e65
000664 4c20
000665 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000666 635f
000667 6f6c
000668 6573
000669 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
00066a 656c
00066b 2928
00066c 6620
00066d 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00066e 656c
00066f 0d64
000670 000a
000671 653c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x65
000672 6576
000673 746e
000674 6153
000675 6576      	.DB  0x76,0x65,0x6E,0x74,0x53,0x61,0x76,0x65
000676 203e
000677 7645
000678 6e65
000679 2074      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00067a 6f4c
00067b 2067
00067c 7369
00067d 6e20      	.DB  0x4C,0x6F,0x67,0x20,0x69,0x73,0x20,0x6E
00067e 746f
00067f 6520
000680 706d
000681 7974      	.DB  0x6F,0x74,0x20,0x65,0x6D,0x70,0x74,0x79
000682 0a0d
000683 3c00
000684 6f6c
000685 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000686 7065
000687 726f
000688 3e74
000689 4320      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x43
00068a 6568
00068b 6b63
00068c 4420
00068d 7461      	.DB  0x68,0x65,0x63,0x6B,0x20,0x44,0x61,0x74
00068e 2061
00068f 6f4c
000690 2067
000691 7845      	.DB  0x61,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000692 7369
000693 0d74
000694 000a
000695 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000696 676f
000697 6552
000698 6f70
000699 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00069a 203e
00069b 4f4c
00069c 5f47
00069d 706f      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F,0x70
00069e 6e65
00069f 6946
0006a0 656c
0006a1 2528      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x28,0x25
0006a2 2973
0006a3 6620
0006a4 6961
0006a5 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0006a6 0d64
0006a7 000a
0006a8 6c3c
0006a9 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
0006aa 6552
0006ab 6f70
0006ac 7472
0006ad 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0006ae 4f4c
0006af 5f47
0006b0 6572
0006b1 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
0006b2 6144
0006b3 6174
0006b4 2528
0006b5 2973      	.DB  0x44,0x61,0x74,0x61,0x28,0x25,0x73,0x29
0006b6 6620
0006b7 6961
0006b8 656c
0006b9 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0006ba 000a
0006bb 6c3c
0006bc 676f
0006bd 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0006be 6f70
0006bf 7472
0006c0 203e
0006c1 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0006c2 5f47
0006c3 6572
0006c4 6461
0006c5 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0006c6 6174
0006c7 2928
0006c8 4c20
0006c9 676f      	.DB  0x74,0x61,0x28,0x29,0x20,0x4C,0x6F,0x67
0006ca 6520
0006cb 706d
0006cc 7974
0006cd 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
0006ce 0d00
0006cf 3c0a
0006d0 6f6c
0006d1 5267      	.DB  0x0,0xD,0xA,0x3C,0x6C,0x6F,0x67,0x52
0006d2 7065
0006d3 726f
0006d4 3e74
0006d5 3d20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D
0006d6 3d3d
0006d7 4520
0006d8 5252
0006d9 524f      	.DB  0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F,0x52
0006da 4920
0006db 464e
0006dc 4d4f
0006dd 5441      	.DB  0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54
0006de 4f49
0006df 204e
0006e0 4e49
0006e1 2520      	.DB  0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20,0x25
0006e2 2073
0006e3 3d3d
0006e4 0d3d
0006e5 000a      	.DB  0x73,0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0
0006e6 6c3c
0006e7 676f
0006e8 6552
0006e9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0006ea 7472
0006eb 203e
0006ec 6144
0006ed 6174      	.DB  0x72,0x74,0x3E,0x20,0x44,0x61,0x74,0x61
0006ee 6f4c
0006ef 2067
0006f0 6f66
0006f1 6e75      	.DB  0x4C,0x6F,0x67,0x20,0x66,0x6F,0x75,0x6E
0006f2 2064
0006f3 6974
0006f4 656d
0006f5 255b      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0006f6 646c
0006f7 2c5d
0006f8 6863
0006f9 255b      	.DB  0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B,0x25
0006fa 5d64
0006fb 762c
0006fc 6c61
0006fd 255b      	.DB  0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B,0x25
0006fe 322e
0006ff 5d66
000700 0a0d
000701 3c00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x3C
000702 6f6c
000703 5267
000704 7065
000705 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
000706 3e74
000707 4520
000708 4854
000709 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
00070a 6e65
00070b 4464
00070c 7461
00070d 5261      	.DB  0x65,0x6E,0x64,0x44,0x61,0x74,0x61,0x52
00070e 7065
00070f 726f
000710 4374
000711 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
000712 2928
000713 6620
000714 6961
000715 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000716 0d64
000717 000a
000718 6c3c
000719 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
00071a 6552
00071b 6f70
00071c 7472
00071d 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
00071e 6144
00071f 6174
000720 6f4c
000721 2067      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x20
000722 6573
000723 746e
000724 6620
000725 6172      	.DB  0x73,0x65,0x6E,0x74,0x20,0x66,0x72,0x61
000726 656d
000727 4449
000728 305b
000729 2578      	.DB  0x6D,0x65,0x49,0x44,0x5B,0x30,0x78,0x25
00072a 3230
00072b 5d58
00072c 6c20
00072d 676f      	.DB  0x30,0x32,0x58,0x5D,0x20,0x6C,0x6F,0x67
00072e 4449
00072f 305b
000730 2578
000731 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
000732 5d58
000733 0a0d
000734 3c00
000735 6f6c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
000736 5267
000737 7065
000738 726f
000739 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
00073a 4c20
00073b 474f
00073c 635f
00073d 6f6c      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F
00073e 6573
00073f 6946
000740 656c
000741 2928      	.DB  0x73,0x65,0x46,0x69,0x6C,0x65,0x28,0x29
000742 6620
000743 6961
000744 656c
000745 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
000746 000a
000747 6c3c
000748 676f
000749 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00074a 6f70
00074b 7472
00074c 203e
00074d 6843      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x43,0x68
00074e 6365
00074f 206b
000750 7645
000751 6e65      	.DB  0x65,0x63,0x6B,0x20,0x45,0x76,0x65,0x6E
000752 2074
000753 6f4c
000754 2067
000755 7845      	.DB  0x74,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000756 7369
000757 0d74
000758 000a
000759 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
00075a 676f
00075b 6552
00075c 6f70
00075d 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
00075e 203e
00075f 4f4c
000760 5f47
000761 6572      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x72,0x65
000762 6461
000763 7645
000764 6e65
000765 2874      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x28
000766 2029
000767 6166
000768 6c69
000769 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00076a 0a0d
00076b 3c00
00076c 6f6c
00076d 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00076e 7065
00076f 726f
000770 3e74
000771 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
000772 474f
000773 725f
000774 6165
000775 4564      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x45
000776 6576
000777 746e
000778 2928
000779 4c20      	.DB  0x76,0x65,0x6E,0x74,0x28,0x29,0x20,0x4C
00077a 676f
00077b 6520
00077c 706d
00077d 7974      	.DB  0x6F,0x67,0x20,0x65,0x6D,0x70,0x74,0x79
00077e 0a0d
00077f 3c00
000780 6f6c
000781 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000782 7065
000783 726f
000784 3e74
000785 4520      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x45
000786 6576
000787 746e
000788 6f4c
000789 2067      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x20
00078a 6f66
00078b 6e75
00078c 2064
00078d 6974      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x20,0x74,0x69
00078e 656d
00078f 255b
000790 646c
000791 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
000792 6469
000793 305b
000794 2578
000795 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
000796 5d58
000797 732c
000798 6174
000799 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
00079a 7830
00079b 3025
00079c 5832
00079d 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00079e 000a
00079f 6c3c
0007a0 676f
0007a1 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007a2 6f70
0007a3 7472
0007a4 203e
0007a5 5445      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x45,0x54
0007a6 5f48
0007a7 6573
0007a8 646e
0007a9 7645      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x45,0x76
0007aa 6e65
0007ab 5274
0007ac 7065
0007ad 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
0007ae 4374
0007af 646d
0007b0 2928
0007b1 6620      	.DB  0x74,0x43,0x6D,0x64,0x28,0x29,0x20,0x66
0007b2 6961
0007b3 656c
0007b4 0d64
0007b5 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0007b6 6c3c
0007b7 676f
0007b8 6552
0007b9 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0007ba 7472
0007bb 203e
0007bc 7645
0007bd 6e65      	.DB  0x72,0x74,0x3E,0x20,0x45,0x76,0x65,0x6E
0007be 4c74
0007bf 676f
0007c0 7320
0007c1 6e65      	.DB  0x74,0x4C,0x6F,0x67,0x20,0x73,0x65,0x6E
0007c2 2074
0007c3 7266
0007c4 6d61
0007c5 4965      	.DB  0x74,0x20,0x66,0x72,0x61,0x6D,0x65,0x49
0007c6 5b44
0007c7 7830
0007c8 3025
0007c9 5832      	.DB  0x44,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0007ca 205d
0007cb 6f6c
0007cc 4967
0007cd 5b44      	.DB  0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44,0x5B
0007ce 7830
0007cf 3025
0007d0 5832
0007d1 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0007d2 000a
0007d3 6c3c
0007d4 676f
0007d5 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007d6 6f70
0007d7 7472
0007d8 203e
0007d9 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0007da 5f47
0007db 6c63
0007dc 736f
0007dd 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
0007de 6c69
0007df 2865
0007e0 7325
0007e1 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0007e2 6166
0007e3 6c69
0007e4 6465
0007e5 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1688): warning: .cseg .db misalignment - padding zero byte
0007e6 0000      	.DB  0x0
                 _0x20000:
0007e7 0a0d
0007e8 6f50
0007e9 6577
0007ea 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
0007eb 6e6f
0007ec 5220
0007ed 7365
0007ee 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0007ef 0a0d
0007f0 0d00
0007f1 450a
0007f2 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0007f3 7265
0007f4 616e
0007f5 206c
0007f6 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0007f7 6573
0007f8 0d74
0007f9 000a
0007fa 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0007fb 7242
0007fc 776f
0007fd 2d6e
0007fe 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0007ff 2074
000800 6552
000801 6573
000802 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
000803 000a
000804 0a0d
000805 6157
000806 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
000807 6468
000808 676f
000809 5220
00080a 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
00080b 7465
00080c 0a0d
00080d 0d00
00080e 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
00080f 4154
000810 2047
000811 6552
000812 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
000813 0d74
000814 000a
000815 693c
000816 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
000817 6974
000818 6c61
000819 735f
00081a 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
00081b 6574
00081c 3e6d
00081d 4c20
00081e 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
00081f 695f
000820 696e
000821 2874
000822 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
000823 6166
000824 6c69
000825 6465
000826 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000827 3c00
000828 6e69
000829 7469
00082a 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
00082b 5f6c
00082c 7973
00082d 7473
00082e 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
00082f 203e
000830 4453
000831 695f
000832 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
000833 2874
000834 2029
000835 6166
000836 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000837 6465
000838 0a0d
000839 4900
00083a 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
00083b 6974
00083c 6c61
00083d 4420
00083e 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
00083f 6369
000840 2065
000841 6f43
000842 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
000843 656c
000844 6574
000845 2064
000846 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
000847 2d20
000848 0020
000849 3025
00084a 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
00084b 252d
00084c 3230
00084d 2d64
00084e 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
00084f 6432
000850 2520
000851 3230
000852 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000853 3025
000854 6432
000855 253a
000856 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000857 0d64
000858 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
000859 0a0d
00085a 2121
00085b 2121
00085c 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
00085d 2121
00085e 2121
00085f 2121
000860 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000861 2121
000862 2121
000863 2121
000864 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000865 2121
000866 2121
000867 2121
000868 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000869 2121
00086a 2121
00086b 2121
00086c 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00086d 0a0d
00086e 2100
00086f 2121
000870 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
000871 2121
000872 4520
000873 6874
000874 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
000875 6675
000876 6566
000877 2072
000878 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
000879 7265
00087a 6c66
00087b 776f
00087c 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
00087d 2121
00087e 2121
00087f 2121
000880 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1730): warning: .cseg .db misalignment - padding zero byte
000881 0000      	.DB  0x0
                 _0x60000:
000882 543c
000883 4d49
000884 5245
000885 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
000886 7465
000887 6954
000888 656d
000889 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
00088a 4520
00088b 5252
00088c 203a
00088d 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
00088e 6972
00088f 646f
000890 3d20
000891 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
000892 0a0d
000893 3c00
000894 4954
000895 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
000896 5f52
000897 6573
000898 5474
000899 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
00089a 7265
00089b 203e
00089c 6162
00089d 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
00089e 6f43
00089f 6e75
0008a0 6574
0008a1 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
0008a2 6c25
0008a3 5d64
0008a4 2b20
0008a5 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
0008a6 7265
0008a7 6f69
0008a8 5b64
0008a9 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
0008aa 5d64
0008ab 3d20
0008ac 2520
0008ad 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
0008ae 4f20
0008af 4556
0008b0 4652
0008b1 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
0008b2 2157
0008b3 0d21
0008b4 000a
0008b5 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
0008b6 5444
0008b7 203e
0008b8 6157
0008b9 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
0008ba 4468
0008bb 676f
0008bc 5420
0008bd 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
0008be 7265
0008bf 5220
0008c0 7365
0008c1 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
0008c2 2121
0008c3 0a0d
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1748): warning: .cseg .db misalignment - padding zero byte
0008c4 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
0008c5 ffff      	.DB  0xFF,0xFF
                 _0x80000:
0008c6 493c
0008c7 5f4f
0008c8 656b
0008c9 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008ca 6568
0008cb 6b63
0008cc 203e
0008cd 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008ce 2079
0008cf 4f4d
0008d0 4544
0008d1 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
0008d2 3c00
0008d3 4f49
0008d4 6b5f
0008d5 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008d6 6843
0008d7 6365
0008d8 3e6b
0008d9 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008da 7965
0008db 5520
0008dc 0d50
0008dd 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
0008de 493c
0008df 5f4f
0008e0 656b
0008e1 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008e2 6568
0008e3 6b63
0008e4 203e
0008e5 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008e6 2079
0008e7 4f44
0008e8 4e57
0008e9 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
0008ea 3c00
0008eb 4f49
0008ec 6b5f
0008ed 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008ee 6843
0008ef 6365
0008f0 3e6b
0008f1 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008f2 7965
0008f3 4f20
0008f4 0d4b
0008f5 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0008f6 6e49
0008f7 7469
0008f8 6169
0008f9 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0008fa 697a
0008fb 676e
0008fc 4120
0008fd 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0008fe 2e2e
0008ff 0020
000900 4b4f
000901 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1768): warning: .cseg .db misalignment - padding zero byte
000902 0000      	.DB  0x0
                 _0xC0003:
000903 0063
000904 0000
000905 0063
000906 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
000907 0063
000908 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
000909 5f63
00090a 6974
00090b 656d
00090c 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
00090d 646c
00090e 205d
00090f 2026
000910 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
000911 6974
000912 656d
000913 255b
000914 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
000915 205d
000916 3e3d
000917 6420
000918 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
000919 5b66
00091a 6c25
00091b 5d64
00091c 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
00091d 3e00
00091e 203e
00091f 5452
000920 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
000921 6573
000922 4274
000923 6e69
000924 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
000925 2079
000926 5452
000927 2043
000928 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
000929 636e
00092a 0d2e
00092b 000a
00092c 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
00092d 4354
00092e 735f
00092f 7465
000930 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
000931 6574
000932 6954
000933 656d
000934 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
000935 6954
000936 656d
000937 6f7a
000938 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
000939 6f20
00093a 7475
00093b 6f20
00093c 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
00093d 6172
00093e 676e
00093f 2065
000940 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000941 642b
000942 0d29
000943 000a
000944 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
000945 2e6e
000946 0020
000947 7554
000948 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
000949 0020
00094a 6557
00094b 2e64
00094c 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
00094d 6854
00094e 2e75
00094f 0020
000950 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
000951 2e69
000952 0020
000953 6153
000954 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
000955 0020
000956 7553
000957 2e6e
000958 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
000959 255b
00095a 5d64
00095b 3025
00095c 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
00095d 252d
00095e 3230
00095f 2d64
000960 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000961 6432
000962 2520
000963 3230
000964 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
000965 3025
000966 6432
000967 253a
000968 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000969 0d64
00096a 000a
00096b 7552
00096c 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
00096d 6e69
00096e 2067
00096f 6977
000970 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
000971 5320
000972 7379
000973 6574
000974 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
000975 6c43
000976 636f
000977 206b
000978 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1801): warning: .cseg .db misalignment - padding zero byte
000979 0000      	.DB  0x0
                 _0xE0003:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1803): warning: .cseg .db misalignment - padding zero byte
00097a 0001      	.DB  0x1
                 _0xE0004:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1805): warning: .cseg .db misalignment - padding zero byte
00097b 0001      	.DB  0x1
                 _0xE0005:
00097c 0101
00097d 0101
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1807): warning: .cseg .db misalignment - padding zero byte
00097e 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
00097f 0101
000980 0101
000981 0101
000982 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
000983 0101
000984 0101
000985 0101
000986 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
000987 0101
000988 0101
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1812): warning: .cseg .db misalignment - padding zero byte
000989 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1814): warning: .cseg .db misalignment - padding zero byte
00098a 0001      	.DB  0x1
                 _0xE0009:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1816): warning: .cseg .db misalignment - padding zero byte
00098b 0001      	.DB  0x1
                 _0xE000A:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(1818): warning: .cseg .db misalignment - padding zero byte
00098c 0001      	.DB  0x1
                 _0xE0000:
00098d 673c
00098e 7465
00098f 7250
000990 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
000991 7265
000992 6974
000993 7365
000994 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
000995 666e
000996 6769
000997 203e
000998 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000999 6320
00099a 6e6f
00099b 6966
00099c 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
00099d 6172
00099e 6974
00099f 6e6f
0009a0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
0009a1 7375
0009a2 2065
0009a3 6564
0009a4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
0009a5 6c75
0009a6 0d74
0009a7 000a
0009a8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
0009a9 7465
0009aa 704f
0009ab 7265
0009ac 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0009ad 6e69
0009ae 4367
0009af 6e6f
0009b0 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0009b1 3e67
0009b2 6e20
0009b3 206f
0009b4 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
0009b5 666e
0009b6 6769
0009b7 7275
0009b8 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
0009b9 6f69
0009ba 2c6e
0009bb 7520
0009bc 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
0009bd 6420
0009be 6665
0009bf 7561
0009c0 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
0009c1 0a0d
0009c2 3c00
0009c3 6567
0009c4 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
0009c5 6570
0009c6 6172
0009c7 6974
0009c8 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
0009c9 6f43
0009ca 666e
0009cb 6769
0009cc 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0009cd 6f6d
0009ce 6564
0009cf 2020
0009d0 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
0009d1 2020
0009d2 2020
0009d3 2020
0009d4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0009d5 3e3e
0009d6 3020
0009d7 2578
0009d8 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
0009d9 0d58
0009da 000a
0009db 673c
0009dc 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
0009dd 704f
0009de 7265
0009df 7461
0009e0 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
0009e1 4367
0009e2 6e6f
0009e3 6966
0009e4 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0009e5 6420
0009e6 7665
0009e7 6369
0009e8 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
0009e9 616e
0009ea 6c62
0009eb 2065
0009ec 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009ed 3e20
0009ee 203e
0009ef 7830
0009f0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0009f1 5832
0009f2 0a0d
0009f3 3c00
0009f4 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0009f5 4f74
0009f6 6570
0009f7 6172
0009f8 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0009f9 676e
0009fa 6f43
0009fb 666e
0009fc 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0009fd 203e
0009fe 6c61
0009ff 7261
000a00 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
000a01 616e
000a02 6c62
000a03 2065
000a04 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000a05 2020
000a06 3e3e
000a07 3020
000a08 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000a09 3230
000a0a 0d58
000a0b 000a
000a0c 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
000a0d 7465
000a0e 704f
000a0f 7265
000a10 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
000a11 6e69
000a12 4367
000a13 6e6f
000a14 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
000a15 3e67
000a16 7320
000a17 6e65
000a18 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
000a19 4572
000a1a 616e
000a1b 6c62
000a1c 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000a1d 2020
000a1e 3e20
000a1f 203e
000a20 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
000a21 7830
000a22 3025
000a23 5832
000a24 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
000a25 673c
000a26 7465
000a27 6553
000a28 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
000a29 726f
000a2a 6f43
000a2b 666e
000a2c 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000a2d 203e
000a2e 6573
000a2f 736e
000a30 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
000a31 6320
000a32 6168
000a33 6e6e
000a34 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000a35 6f20
000a36 7475
000a37 6f20
000a38 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000a39 6172
000a3a 676e
000a3b 2065
000a3c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000a3d 2964
000a3e 0a0d
000a3f 3c00
000a40 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000a41 5374
000a42 6e65
000a43 6f73
000a44 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000a45 6e6f
000a46 6966
000a47 3e67
000a48 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
000a49 206f
000a4a 6f63
000a4b 666e
000a4c 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
000a4d 7275
000a4e 7461
000a4f 6f69
000a50 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000a51 7520
000a52 6573
000a53 6420
000a54 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000a55 7561
000a56 746c
000a57 0a0d
000a58 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
000a59 6567
000a5a 4174
000a5b 7875
000a5c 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000a5d 436e
000a5e 6e6f
000a5f 6966
000a60 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a61 6420
000a62 6769
000a63 7469
000a64 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000a65 6920
000a66 706e
000a67 7475
000a68 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
000a69 6168
000a6a 6e6e
000a6b 6c65
000a6c 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a6d 7475
000a6e 6f20
000a6f 2066
000a70 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a71 676e
000a72 2065
000a73 2528
000a74 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a75 0a0d
000a76 3c00
000a77 6567
000a78 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a79 7875
000a7a 6944
000a7b 436e
000a7c 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000a7d 6966
000a7e 3e67
000a7f 6e20
000a80 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000a81 6f63
000a82 666e
000a83 6769
000a84 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000a85 7461
000a86 6f69
000a87 2c6e
000a88 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
000a89 6573
000a8a 6420
000a8b 6665
000a8c 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000a8d 746c
000a8e 0a0d
000a8f 3c00
000a90 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000a91 4174
000a92 7875
000a93 6f44
000a94 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000a95 6f43
000a96 666e
000a97 6769
000a98 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a99 6964
000a9a 6967
000a9b 6174
000a9c 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000a9d 756f
000a9e 7074
000a9f 7475
000aa0 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000aa1 6168
000aa2 6e6e
000aa3 6c65
000aa4 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000aa5 7475
000aa6 6f20
000aa7 2066
000aa8 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000aa9 676e
000aaa 2065
000aab 2528
000aac 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000aad 0a0d
000aae 3c00
000aaf 6567
000ab0 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000ab1 7875
000ab2 6f44
000ab3 7475
000ab4 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000ab5 666e
000ab6 6769
000ab7 203e
000ab8 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000ab9 6320
000aba 6e6f
000abb 6966
000abc 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000abd 6172
000abe 6974
000abf 6e6f
000ac0 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000ac1 7375
000ac2 2065
000ac3 6564
000ac4 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000ac5 6c75
000ac6 0d74
000ac7 000a
000ac8 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000ac9 7465
000aca 7541
000acb 4478
000acc 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000acd 4374
000ace 6e6f
000acf 6966
000ad0 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000ad1 2d20
000ad2 202d
000ad3 4843
000ad4 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
000ad5 2064
000ad6 2d2d
000ad7 0d20
000ad8 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
000ad9 673c
000ada 7465
000adb 7541
000adc 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
000add 756f
000ade 4374
000adf 6e6f
000ae0 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000ae1 3e67
000ae2 6520
000ae3 616e
000ae4 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
000ae5 2065
000ae6 2020
000ae7 2020
000ae8 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000ae9 2020
000aea 305b
000aeb 2578
000aec 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
000aed 5d58
000aee 0a0d
000aef 3c00
000af0 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
000af1 4174
000af2 7875
000af3 6f44
000af4 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000af5 6f43
000af6 666e
000af7 6769
000af8 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000af9 7473
000afa 7461
000afb 4f65
000afc 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
000afd 6576
000afe 746e
000aff 2020
000b00 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
000b01 7830
000b02 3025
000b03 5832
000b04 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000b05 000a
000b06 673c
000b07 7465
000b08 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
000b09 4478
000b0a 756f
000b0b 4374
000b0c 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
000b0d 6966
000b0e 3e67
000b0f 6e20
000b10 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
000b11 6562
000b12 4572
000b13 5376
000b14 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
000b15 2020
000b16 2020
000b17 255b
000b18 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b19 3e2d
000b1a 3c00
000b1b 6567
000b1c 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000b1d 7875
000b1e 6941
000b1f 436e
000b20 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000b21 6966
000b22 3e67
000b23 6120
000b24 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000b25 6f6c
000b26 2067
000b27 6e69
000b28 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000b29 2074
000b2a 6863
000b2b 6e61
000b2c 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000b2d 206c
000b2e 756f
000b2f 2074
000b30 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000b31 7220
000b32 6e61
000b33 6567
000b34 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000b35 6425
000b36 0d29
000b37 000a
000b38 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000b39 7465
000b3a 7541
000b3b 4178
000b3c 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000b3d 6f43
000b3e 666e
000b3f 6769
000b40 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b41 6f6e
000b42 6320
000b43 6e6f
000b44 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b45 7567
000b46 6172
000b47 6974
000b48 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b49 202c
000b4a 7375
000b4b 2065
000b4c 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b4d 6166
000b4e 6c75
000b4f 0d74
000b50 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b51 673c
000b52 7465
000b53 7541
000b54 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000b55 756f
000b56 4374
000b57 6e6f
000b58 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000b59 3e67
000b5a 6120
000b5b 616e
000b5c 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000b5d 2067
000b5e 756f
000b5f 7074
000b60 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000b61 6320
000b62 6168
000b63 6e6e
000b64 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000b65 6f20
000b66 7475
000b67 6f20
000b68 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000b69 6172
000b6a 676e
000b6b 2065
000b6c 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000b6d 2964
000b6e 0a0d
000b6f 3c00
000b70 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000b71 4174
000b72 7875
000b73 6f41
000b74 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000b75 6f43
000b76 666e
000b77 6769
000b78 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b79 6f6e
000b7a 6320
000b7b 6e6f
000b7c 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b7d 7567
000b7e 6172
000b7f 6974
000b80 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b81 202c
000b82 7375
000b83 2065
000b84 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b85 6166
000b86 6c75
000b87 0d74
000b88 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b89 673c
000b8a 7465
000b8b 7542
000b8c 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b8d 7265
000b8e 6f43
000b8f 666e
000b90 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b91 203e
000b92 6f6e
000b93 6320
000b94 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000b95 6966
000b96 7567
000b97 6172
000b98 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000b99 6e6f
000b9a 202c
000b9b 7375
000b9c 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000b9d 6564
000b9e 6166
000b9f 6c75
000ba0 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000ba1 000a
000ba2 673c
000ba3 7465
000ba4 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000ba5 7a7a
000ba6 7265
000ba7 6f43
000ba8 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000ba9 6769
000baa 203e
000bab 6e65
000bac 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000bad 656c
000bae 2020
000baf 2020
000bb0 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000bb1 2020
000bb2 2020
000bb3 2020
000bb4 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000bb5 305b
000bb6 2578
000bb7 3230
000bb8 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000bb9 0a0d
000bba 3c00
000bbb 6567
000bbc 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000bbd 7a75
000bbe 657a
000bbf 4372
000bc0 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000bc1 6966
000bc2 3e67
000bc3 6520
000bc4 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000bc5 746e
000bc6 6f53
000bc7 7275
000bc8 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000bc9 754e
000bca 626d
000bcb 7265
000bcc 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000bcd 5b3e
000bce 6425
000bcf 0d5d
000bd0 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000bd1 673c
000bd2 7465
000bd3 7542
000bd4 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000bd5 7265
000bd6 6f43
000bd7 666e
000bd8 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000bd9 203e
000bda 7665
000bdb 6e65
000bdc 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000bdd 756f
000bde 6372
000bdf 2065
000be0 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000be1 2020
000be2 2020
000be3 3e3e
000be4 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000be5 6567
000be6 4574
000be7 766e
000be8 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000be9 7261
000bea 436d
000beb 6e6f
000bec 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000bed 3e67
000bee 6e20
000bef 206f
000bf0 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000bf1 666e
000bf2 6769
000bf3 7275
000bf4 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000bf5 6f69
000bf6 2c6e
000bf7 7520
000bf8 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000bf9 6420
000bfa 6665
000bfb 7561
000bfc 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000bfd 0a0d
000bfe 3c00
000bff 6567
000c00 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c01 766e
000c02 6c41
000c03 7261
000c04 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c05 6e6f
000c06 6966
000c07 3e67
000c08 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c09 6d73
000c0a 5352
000c0b 4953
000c0c 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000c0d 6576
000c0e 206c
000c0f 2020
000c10 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c11 2020
000c12 2020
000c13 255b
000c14 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c15 0a0d
000c16 3c00
000c17 6567
000c18 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c19 766e
000c1a 6c41
000c1b 7261
000c1c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c1d 6e6f
000c1e 6966
000c1f 3e67
000c20 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c21 6d73
000c22 7243
000c23 6465
000c24 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000c25 6142
000c26 616c
000c27 636e
000c28 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000c29 2020
000c2a 2020
000c2b 255b
000c2c 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c2d 0a0d
000c2e 3c00
000c2f 6567
000c30 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c31 766e
000c32 6c41
000c33 7261
000c34 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c35 6e6f
000c36 6966
000c37 3e67
000c38 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000c39 7461
000c3a 6574
000c3b 7972
000c3c 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000c3d 6576
000c3e 206c
000c3f 2020
000c40 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c41 2020
000c42 2020
000c43 255b
000c44 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c45 0a0d
000c46 3c00
000c47 6567
000c48 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c49 766e
000c4a 6c41
000c4b 7261
000c4c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c4d 6e6f
000c4e 6966
000c4f 3e67
000c50 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c51 6d6f
000c52 536d
000c53 6769
000c54 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000c55 4c6c
000c56 7665
000c57 6c65
000c58 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000c59 2020
000c5a 2020
000c5b 255b
000c5c 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c5d 0a0d
000c5e 3c00
000c5f 6567
000c60 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c61 766e
000c62 6c41
000c63 7261
000c64 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c65 6e6f
000c66 6966
000c67 3e67
000c68 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c69 6d6f
000c6a 4c6d
000c6b 736f
000c6c 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000c6d 6c65
000c6e 7961
000c6f 2020
000c70 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000c71 2020
000c72 2020
000c73 255b
000c74 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c75 0a0d
000c76 3c00
000c77 6567
000c78 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c79 766e
000c7a 6c41
000c7b 7261
000c7c 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c7d 6e6f
000c7e 6966
000c7f 3e67
000c80 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000c81 6d65
000c82 726f
000c83 4d79
000c84 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000c85 2020
000c86 2020
000c87 2020
000c88 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000c89 2020
000c8a 2020
000c8b 255b
000c8c 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000c8d 0a0d
000c8e 3c00
000c8f 6567
000c90 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c91 6174
000c92 7574
000c93 5273
000c94 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c95 726f
000c96 4374
000c97 6e6f
000c98 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c99 3e67
000c9a 6e20
000c9b 206f
000c9c 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000c9d 666e
000c9e 6769
000c9f 7275
000ca0 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000ca1 6f69
000ca2 2c6e
000ca3 7520
000ca4 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000ca5 6420
000ca6 6665
000ca7 7561
000ca8 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000ca9 0a0d
000caa 3c00
000cab 6567
000cac 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000cad 6174
000cae 7574
000caf 5273
000cb0 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000cb1 726f
000cb2 4374
000cb3 6e6f
000cb4 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000cb5 3e67
000cb6 6120
000cb7 6363
000cb8 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000cb9 2020
000cba 2020
000cbb 2020
000cbc 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000cbd 7830
000cbe 3025
000cbf 5832
000cc0 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000cc1 000a
000cc2 673c
000cc3 7465
000cc4 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000cc5 7461
000cc6 7375
000cc7 6552
000cc8 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000cc9 7472
000cca 6f43
000ccb 666e
000ccc 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000ccd 203e
000cce 6e69
000ccf 7674
000cd0 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000cd1 2020
000cd2 2020
000cd3 2020
000cd4 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000cd5 5d64
000cd6 0a0d
000cd7 3c00
000cd8 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000cd9 4f74
000cda 6570
000cdb 6172
000cdc 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000cdd 676e
000cde 6f43
000cdf 666e
000ce0 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000ce1 203e
000ce2 7245
000ce3 6f72
000ce4 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000ce5 6f20
000ce6 6570
000ce7 6172
000ce8 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000ce9 676e
000cea 6d20
000ceb 646f
000cec 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000ced 6e69
000cee 6176
000cef 696c
000cf0 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000cf1 305b
000cf2 2578
000cf3 3230
000cf4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000cf5 0a0d
000cf6 0d00
000cf7 200a
000cf8 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000cf9 6564
000cfa 2020
000cfb 2020
000cfc 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000cfd 2020
000cfe 2020
000cff 2020
000d00 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000d01 3020
000d02 2578
000d03 3230
000d04 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000d05 0a0d
000d06 6420
000d07 7665
000d08 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000d09 4565
000d0a 616e
000d0b 6c62
000d0c 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000d0d 2020
000d0e 3e20
000d0f 203e
000d10 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000d11 3025
000d12 5832
000d13 0d00
000d14 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000d15 6c61
000d16 7261
000d17 456d
000d18 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000d19 6c62
000d1a 2065
000d1b 2020
000d1c 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000d1d 3e3e
000d1e 3020
000d1f 2578
000d20 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000d21 0058
000d22 0a0d
000d23 7320
000d24 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000d25 6f73
000d26 4572
000d27 616e
000d28 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000d29 2065
000d2a 2020
000d2b 3e20
000d2c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d2d 3c00
000d2e 6573
000d2f 5374
000d30 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000d31 6f73
000d32 4372
000d33 6e6f
000d34 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000d35 3e67
000d36 4520
000d37 5252
000d38 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000d39 6863
000d3a 6e61
000d3b 656e
000d3c 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000d3d 756f
000d3e 2074
000d3f 666f
000d40 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000d41 6e61
000d42 6567
000d43 0a0d
000d44 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000d45 6573
000d46 5374
000d47 6e65
000d48 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000d49 4372
000d4a 6e6f
000d4b 6966
000d4c 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000d4d 4520
000d4e 5252
000d4f 203a
000d50 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000d51 706d
000d52 696c
000d53 676e
000d54 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000d55 6574
000d56 6320
000d57 756f
000d58 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000d59 276e
000d5a 2074
000d5b 6562
000d5c 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000d5d 7465
000d5e 7420
000d5f 206f
000d60 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000d61 000a
000d62 0a0d
000d63 7320
000d64 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000d65 6c70
000d66 6e69
000d67 5267
000d68 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000d69 2065
000d6a 2020
000d6b 3e20
000d6c 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d6d 7830
000d6e 3025
000d6f 5834
000d70 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000d71 200a
000d72 6572
000d73 634f
000d74 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000d75 7272
000d76 6e65
000d77 6563
000d78 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000d79 2020
000d7a 3e3e
000d7b 3020
000d7c 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d7d 3430
000d7e 0058
000d7f 0a0d
000d80 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000d81 6d69
000d82 5365
000d83 6174
000d84 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000d85 6f48
000d86 7275
000d87 2020
000d88 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000d89 203e
000d8a 7830
000d8b 3025
000d8c 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000d8d 0d00
000d8e 200a
000d8f 6974
000d90 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000d91 7453
000d92 7261
000d93 4d74
000d94 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000d95 2020
000d96 2020
000d97 3e3e
000d98 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000d99 2578
000d9a 3230
000d9b 0058
000d9c 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000d9d 7420
000d9e 6d69
000d9f 5365
000da0 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000da1 4870
000da2 756f
000da3 2072
000da4 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000da5 3e20
000da6 203e
000da7 7830
000da8 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000da9 5832
000daa 0d00
000dab 200a
000dac 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000dad 656d
000dae 7453
000daf 706f
000db0 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000db1 206e
000db2 2020
000db3 2020
000db4 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000db5 3020
000db6 2578
000db7 3230
000db8 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000db9 0a0d
000dba 6c20
000dbb 776f
000dbc 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000dbd 694c
000dbe 696d
000dbf 2074
000dc0 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000dc1 2020
000dc2 3e20
000dc3 203e
000dc4 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000dc5 5b20
000dc6 3025
000dc7 6c34
000dc8 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000dc9 0d00
000dca 200a
000dcb 6f6c
000dcc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000dcd 4472
000dce 6c65
000dcf 7961
000dd0 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000dd1 2020
000dd2 2020
000dd3 3e3e
000dd4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dd5 2064
000dd6 255b
000dd7 3230
000dd8 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000dd9 0d00
000dda 200a
000ddb 6f6c
000ddc 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000ddd 4572
000dde 7478
000ddf 6572
000de0 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000de1 2020
000de2 2020
000de3 3e3e
000de4 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000de5 2066
000de6 255b
000de7 3430
000de8 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000de9 005d
000dea 0a0d
000deb 7520
000dec 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000ded 7265
000dee 694c
000def 696d
000df0 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000df1 2020
000df2 2020
000df3 3e20
000df4 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000df5 6625
000df6 5b20
000df7 3025
000df8 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000df9 5d58
000dfa 0d00
000dfb 200a
000dfc 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000dfd 6570
000dfe 4472
000dff 6c65
000e00 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000e01 2020
000e02 2020
000e03 2020
000e04 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000e05 2520
000e06 2064
000e07 255b
000e08 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000e09 5d58
000e0a 0d00
000e0b 200a
000e0c 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000e0d 6570
000e0e 4572
000e0f 7478
000e10 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000e11 656d
000e12 2020
000e13 2020
000e14 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000e15 2520
000e16 2066
000e17 255b
000e18 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000e19 586c
000e1a 005d
000e1b 0a0d
000e1c 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000e1d 6168
000e1e 6e6e
000e1f 6c65
000e20 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000e21 2020
000e22 2020
000e23 2020
000e24 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e25 203e
000e26 255b
000e27 5d64
000e28 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000e29 200a
000e2a 6863
000e2b 6e61
000e2c 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000e2d 456c
000e2e 616e
000e2f 6c62
000e30 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000e31 2020
000e32 3e3e
000e33 3020
000e34 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e35 3230
000e36 0058
000e37 0a0d
000e38 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000e39 616c
000e3a 6d72
000e3b 6544
000e3c 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000e3d 2079
000e3e 2020
000e3f 2020
000e40 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e41 203e
000e42 6425
000e43 0d00
000e44 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000e45 6573
000e46 4174
000e47 7875
000e48 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000e49 7475
000e4a 6f43
000e4b 666e
000e4c 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000e4d 203e
000e4e 6843
000e4f 6e61
000e50 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000e51 206c
000e52 7245
000e53 6f72
000e54 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000e55 0d21
000e56 000a
000e57 0a0d
000e58 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000e59 7465
000e5a 7541
000e5b 4478
000e5c 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000e5d 4374
000e5e 6e6f
000e5f 6966
000e60 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000e61 6520
000e62 6576
000e63 746e
000e64 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e65 7275
000e66 6563
000e67 754e
000e68 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000e69 7265
000e6a 6920
000e6b 2073
000e6c 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000e6d 206f
000e6e 6f6c
000e6f 676e
000e70 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000e71 6425
000e72 2129
000e73 0d21
000e74 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000e75 0a0d
000e76 6320
000e77 6168
000e78 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000e79 6c65
000e7a 2020
000e7b 2020
000e7c 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000e7d 2020
000e7e 2020
000e7f 3e20
000e80 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e81 255b
000e82 5d64
000e83 0d00
000e84 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000e85 6863
000e86 6e61
000e87 656e
000e88 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000e89 616e
000e8a 6c62
000e8b 2065
000e8c 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000e8d 2020
000e8e 3e3e
000e8f 3020
000e90 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e91 3230
000e92 0058
000e93 0a0d
000e94 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000e95 6174
000e96 6574
000e97 6e4f
000e98 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000e99 6e65
000e9a 2074
000e9b 2020
000e9c 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000e9d 3e20
000e9e 203e
000e9f 7830
000ea0 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000ea1 5832
000ea2 0d00
000ea3 200a
000ea4 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000ea5 6e65
000ea6 5374
000ea7 756f
000ea8 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000ea9 4e65
000eaa 6d75
000eab 6562
000eac 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000ead 3e3e
000eae 2520
000eaf 0064
000eb0 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000eb1 6520
000eb2 6576
000eb3 746e
000eb4 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000eb5 7275
000eb6 6563
000eb7 2020
000eb8 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000eb9 2020
000eba 3e20
000ebb 203e
000ebc 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000ebd 200a
000ebe 6c61
000ebf 7261
000ec0 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000ec1 7665
000ec2 6c65
000ec3 2020
000ec4 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000ec5 2020
000ec6 3e3e
000ec7 2520
000ec8 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000ec9 0a0d
000eca 733c
000ecb 7465
000ecc 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000ecd 4178
000ece 756f
000ecf 4374
000ed0 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000ed1 6966
000ed2 3e67
000ed3 4320
000ed4 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000ed5 6e6e
000ed6 6c65
000ed7 4520
000ed8 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000ed9 726f
000eda 2121
000edb 0a0d
000edc 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000edd 3c0a
000ede 6573
000edf 4174
000ee0 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000ee1 6f41
000ee2 7475
000ee3 6f43
000ee4 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000ee5 6769
000ee6 203e
000ee7 7665
000ee8 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000ee9 5374
000eea 756f
000eeb 6372
000eec 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000eed 6d75
000eee 6562
000eef 2072
000ef0 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000ef1 7420
000ef2 6f6f
000ef3 6c20
000ef4 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000ef5 2067
000ef6 2528
000ef7 2964
000ef8 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000ef9 0a0d
000efa 0d00
000efb 200a
000efc 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000efd 6576
000efe 4f6c
000eff 456e
000f00 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000f01 746e
000f02 2020
000f03 2020
000f04 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000f05 3e3e
000f06 2520
000f07 0066
000f08 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000f09 733c
000f0a 7465
000f0b 7542
000f0c 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000f0d 7265
000f0e 6f43
000f0f 666e
000f10 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000f11 203e
000f12 7665
000f13 6e65
000f14 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000f15 756f
000f16 6372
000f17 4e65
000f18 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000f19 6562
000f1a 2072
000f1b 7369
000f1c 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000f1d 6f6f
000f1e 6c20
000f1f 6e6f
000f20 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000f21 2528
000f22 2964
000f23 2121
000f24 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000f25 0d00
000f26 200a
000f27 6e65
000f28 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000f29 656c
000f2a 2020
000f2b 2020
000f2c 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000f2d 2020
000f2e 2020
000f2f 2020
000f30 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f31 3020
000f32 2578
000f33 3230
000f34 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000f35 0a0d
000f36 6520
000f37 6576
000f38 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000f39 6f53
000f3a 7275
000f3b 6563
000f3c 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000f3d 2020
000f3e 2020
000f3f 3e20
000f40 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000f41 0a0d
000f42 6720
000f43 6d73
000f44 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000f45 4953
000f46 654c
000f47 6576
000f48 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000f49 2020
000f4a 2020
000f4b 3e3e
000f4c 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000f4d 2066
000f4e 4264
000f4f 0d00
000f50 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000f51 7367
000f52 436d
000f53 6572
000f54 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000f55 4274
000f56 6c61
000f57 6e61
000f58 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000f59 3e20
000f5a 203e
000f5b 6425
000f5c 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000f5d 6861
000f5e 0074
000f5f 0a0d
000f60 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000f61 7461
000f62 6574
000f63 7972
000f64 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000f65 6576
000f66 206c
000f67 2020
000f68 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000f69 3e3e
000f6a 2520
000f6b 2066
000f6c 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000f6d 746c
000f6e 0073
000f6f 0a0d
000f70 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000f71 6d6f
000f72 536d
000f73 6769
000f74 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000f75 4c6c
000f76 7665
000f77 6c65
000f78 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000f79 3e3e
000f7a 2520
000f7b 2066
000f7c 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000f7d 0d00
000f7e 200a
000f7f 6f63
000f80 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000f81 6f4c
000f82 7473
000f83 6544
000f84 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000f85 2079
000f86 2020
000f87 3e20
000f88 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000f89 6425
000f8a 7320
000f8b 6365
000f8c 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000f8d 200a
000f8e 656d
000f8f 6f6d
000f90 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000f91 694d
000f92 206e
000f93 2020
000f94 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000f95 2020
000f96 3e20
000f97 203e
000f98 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000f99 4d20
000f9a 2e42
000f9b 0d00
000f9c 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000f9d 6361
000f9e 6d63
000f9f 2020
000fa0 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000fa1 3e20
000fa2 203e
000fa3 6625
000fa4 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000fa5 0042
000fa6 0a0d
000fa7 6920
000fa8 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000fa9 2076
000faa 2020
000fab 2020
000fac 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000fad 2520
000fae 2064
000faf 6142
000fb0 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000fb1 3c00
000fb2 616d
000fb3 6e69
000fb4 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000fb5 6567
000fb6 5374
000fb7 6e65
000fb8 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000fb9 4372
000fba 6e6f
000fbb 6966
000fbc 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000fbd 6425
000fbe 2029
000fbf 7265
000fc0 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000fc1 0d72
000fc2 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000fc3 453c
000fc4 4854
000fc5 735f
000fc6 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fc7 4e64
000fc8 6361
000fc9 3e6b
000fca 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000fcb 6e65
000fcc 6964
000fcd 676e
000fce 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000fcf 0a0d
000fd0 3c00
000fd1 5445
000fd2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fd3 6573
000fd4 646e
000fd5 7453
000fd6 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000fd7 7375
000fd8 6552
000fd9 7571
000fda 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000fdb 4174
000fdc 6b63
000fdd 203e
000fde 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000fdf 646e
000fe0 6e69
000fe1 2e67
000fe2 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000fe3 000a
000fe4 453c
000fe5 4854
000fe6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000fe7 6e65
000fe8 5364
000fe9 6174
000fea 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000feb 5273
000fec 7065
000fed 726f
000fee 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000fef 646d
000ff0 203e
000ff1 7266
000ff2 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000ff3 4c65
000ff4 6e65
000ff5 7420
000ff6 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000ff7 6c20
000ff8 6e6f
000ff9 2067
000ffa 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000ffb 2064
000ffc 7962
000ffd 6574
000ffe 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000fff 0a0d
001000 3c00
001001 5445
001002 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001003 6573
001004 646e
001005 7453
001006 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
001007 7375
001008 6552
001009 6f70
00100a 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
00100b 6d43
00100c 3e64
00100d 6d20
00100e 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
00100f 6f6c
001010 2063
001011 6166
001012 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
001013 6465
001014 2820
001015 6425
001016 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001017 7479
001018 7365
001019 0d29
00101a 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
00101b 453c
00101c 4854
00101d 735f
00101e 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00101f 4564
001020 6576
001021 746e
001022 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
001023 6f70
001024 7472
001025 6d43
001026 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
001027 5720
001028 6f72
001029 676e
00102a 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
00102b 6576
00102c 746e
00102d 7954
00102e 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
00102f 3020
001030 2578
001031 3230
001032 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
001033 000a
001034 453c
001035 4854
001036 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001037 6e65
001038 4564
001039 6576
00103a 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
00103b 6552
00103c 6f70
00103d 7472
00103e 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
00103f 3e64
001040 6120
001041 6464
001042 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
001043 6e65
001044 4c74
001045 676f
001046 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
001047 7565
001048 2865
001049 7830
00104a 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
00104b 5832
00104c 252c
00104d 646c
00104e 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
00104f 2578
001050 3230
001051 2c58
001052 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
001053 3025
001054 5832
001055 2029
001056 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
001057 6c69
001058 6465
001059 0a0d
00105a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00105b 5445
00105c 5f48
00105d 6573
00105e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00105f 7645
001060 6e65
001061 5274
001062 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
001063 726f
001064 4374
001065 646d
001066 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
001067 6573
001068 646e
001069 6e69
00106a 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
00106b 0d2e
00106c 000a
00106d 453c
00106e 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00106f 735f
001070 6e65
001071 4364
001072 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001073 6966
001074 4d67
001075 6e61
001076 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001077 4e65
001078 6361
001079 3e6b
00107a 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
00107b 6e65
00107c 6964
00107d 676e
00107e 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
00107f 0a0d
001080 3c00
001081 5445
001082 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001083 6573
001084 646e
001085 6f43
001086 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
001087 6769
001088 614d
001089 616e
00108a 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
00108b 6341
00108c 3e6b
00108d 6620
00108e 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
00108f 656d
001090 654c
001091 206e
001092 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
001093 206f
001094 6f6c
001095 676e
001096 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
001097 6425
001098 6220
001099 7479
00109a 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00109b 0d29
00109c 000a
00109d 453c
00109e 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00109f 735f
0010a0 6e65
0010a1 4364
0010a2 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
0010a3 6966
0010a4 4d67
0010a5 6e61
0010a6 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
0010a7 4165
0010a8 6b63
0010a9 203e
0010aa 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
0010ab 6c6c
0010ac 636f
0010ad 6620
0010ae 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
0010af 656c
0010b0 2064
0010b1 2528
0010b2 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
0010b3 7962
0010b4 6574
0010b5 2973
0010b6 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
0010b7 3c00
0010b8 5445
0010b9 5f48
0010ba 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
0010bb 646e
0010bc 6f43
0010bd 666e
0010be 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
0010bf 614d
0010c0 616e
0010c1 6567
0010c2 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
0010c3 3e6b
0010c4 7320
0010c5 6e65
0010c6 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
0010c7 676e
0010c8 2e2e
0010c9 0a0d
0010ca 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
0010cb 5445
0010cc 5f48
0010cd 6573
0010ce 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010cf 6144
0010d0 6174
0010d1 6552
0010d2 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010d3 7472
0010d4 6d43
0010d5 3e64
0010d6 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
0010d7 6f72
0010d8 676e
0010d9 6420
0010da 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
0010db 5461
0010dc 7079
0010dd 2065
0010de 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
0010df 3025
0010e0 5832
0010e1 0a0d
0010e2 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
0010e3 5445
0010e4 5f48
0010e5 6573
0010e6 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010e7 6144
0010e8 6174
0010e9 6552
0010ea 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010eb 7472
0010ec 6d43
0010ed 3e64
0010ee 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
0010ef 6464
0010f0 6144
0010f1 6174
0010f2 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
0010f3 5167
0010f4 6575
0010f5 6575
0010f6 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
0010f7 2578
0010f8 3230
0010f9 2c58
0010fa 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
0010fb 2c64
0010fc 7525
0010fd 252c
0010fe 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
0010ff 2966
001100 6620
001101 6961
001102 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001103 0d64
001104 000a
001105 453c
001106 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001107 735f
001108 6e65
001109 4464
00110a 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
00110b 5261
00110c 7065
00110d 726f
00110e 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
00110f 646d
001110 203e
001111 6573
001112 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
001113 6e69
001114 2e67
001115 0d2e
001116 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
001117 453c
001118 4854
001119 735f
00111a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00111b 4c64
00111c 676f
00111d 614d
00111e 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
00111f 7570
001120 616c
001121 6974
001122 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
001123 6341
001124 3e6b
001125 7320
001126 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
001127 6964
001128 676e
001129 2e2e
00112a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00112b 3c00
00112c 5445
00112d 5f48
00112e 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
00112f 646e
001130 654e
001131 7774
001132 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
001133 4d6b
001134 6961
001135 746e
001136 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001137 6e61
001138 6563
001139 6341
00113a 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
00113b 7320
00113c 6e65
00113d 6964
00113e 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
00113f 2e2e
001140 0a0d
001141 3c00
001142 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
001143 5f48
001144 6572
001145 6f6d
001146 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
001147 6544
001148 6976
001149 6563
00114a 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
00114b 746e
00114c 6f72
00114d 416c
00114e 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
00114f 203e
001150 6573
001151 646e
001152 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
001153 2e67
001154 0d2e
001155 000a
001156 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
001157 4854
001158 635f
001159 656c
00115a 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
00115b 7544
00115c 6c70
00115d 6369
00115e 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
00115f 5265
001160 7165
001161 6575
001162 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001163 6d43
001164 3e64
001165 7320
001166 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
001167 6964
001168 676e
001169 2e2e
00116a 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
00116b 0d00
00116c 3c0a
00116d 5445
00116e 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
00116f 6863
001170 6365
001171 506b
001172 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001173 4c68
001174 676f
001175 203e
001176 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
001177 203d
001178 5245
001179 4f52
00117a 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
00117b 4e49
00117c 4f46
00117d 414d
00117e 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
00117f 4e4f
001180 4920
001181 204e
001182 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
001183 4154
001184 4c20
001185 474f
001186 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
001187 4555
001188 4555
001189 3d20
00118a 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
00118b 0a0d
00118c 3c00
00118d 5445
00118e 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00118f 6863
001190 6365
001191 506b
001192 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001193 4c68
001194 676f
001195 203e
001196 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
001197 6174
001198 6f4c
001199 2067
00119a 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
00119b 656d
00119c 255b
00119d 646c
00119e 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
00119f 6863
0011a0 255b
0011a1 5d64
0011a2 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
0011a3 6c61
0011a4 255b
0011a5 322e
0011a6 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
0011a7 0a0d
0011a8 3c00
0011a9 5445
0011aa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011ab 6863
0011ac 6365
0011ad 506b
0011ae 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011af 4c68
0011b0 676f
0011b1 203e
0011b2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011b3 5f47
0011b4 706f
0011b5 6e65
0011b6 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
0011b7 656c
0011b8 2528
0011b9 2973
0011ba 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0011bb 6961
0011bc 656c
0011bd 2c64
0011be 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
0011bf 756f
0011c0 646c
0011c1 276e
0011c2 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
0011c3 6173
0011c4 6576
0011c5 6c20
0011c6 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
0011c7 0a0d
0011c8 3c00
0011c9 5445
0011ca 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011cb 6863
0011cc 6365
0011cd 506b
0011ce 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011cf 4c68
0011d0 676f
0011d1 203e
0011d2 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011d3 5f47
0011d4 6e69
0011d5 6573
0011d6 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0011d7 6144
0011d8 6174
0011d9 2928
0011da 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
0011db 6961
0011dc 656c
0011dd 0d64
0011de 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0011df 453c
0011e0 4854
0011e1 635f
0011e2 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
0011e3 6b63
0011e4 7550
0011e5 6873
0011e6 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
0011e7 3e67
0011e8 4c20
0011e9 474f
0011ea 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
0011eb 6f6c
0011ec 6573
0011ed 6946
0011ee 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0011ef 2928
0011f0 6620
0011f1 6961
0011f2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011f3 0d64
0011f4 000a
0011f5 453c
0011f6 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011f7 635f
0011f8 6568
0011f9 6b63
0011fa 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0011fb 6873
0011fc 6f4c
0011fd 3e67
0011fe 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0011ff 736e
001200 7265
001201 6574
001202 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
001203 6144
001204 6174
001205 4c20
001206 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
001207 0a0d
001208 0d00
001209 3c0a
00120a 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
00120b 5f48
00120c 6863
00120d 6365
00120e 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
00120f 7375
001210 4c68
001211 676f
001212 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
001213 3d3d
001214 203d
001215 5245
001216 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
001217 2052
001218 4e49
001219 4f46
00121a 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
00121b 4954
00121c 4e4f
00121d 4920
00121e 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
00121f 5645
001220 4e45
001221 2054
001222 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
001223 2047
001224 5551
001225 5545
001226 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
001227 3d3d
001228 0d3d
001229 000a
00122a 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
00122b 4854
00122c 635f
00122d 6568
00122e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00122f 7550
001230 6873
001231 6f4c
001232 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001233 4520
001234 6576
001235 746e
001236 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
001237 2067
001238 6974
001239 656d
00123a 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
00123b 646c
00123c 2c5d
00123d 6469
00123e 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
00123f 2578
001240 3230
001241 5d58
001242 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
001243 6174
001244 5b74
001245 7830
001246 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
001247 5832
001248 0d5d
001249 000a
00124a 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
00124b 4854
00124c 635f
00124d 6568
00124e 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
00124f 7550
001250 6873
001251 6f4c
001252 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
001253 4920
001254 736e
001255 7265
001256 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
001257 2064
001258 7645
001259 6e65
00125a 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
00125b 6f4c
00125c 0d67
00125d 000a
00125e 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
00125f 4854
001260 725f
001261 7465
001262 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
001263 736e
001264 696d
001265 3e74
001266 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
001267 6361
001268 656b
001269 2074
00126a 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
00126b 2578
00126c 3230
00126d 5d58
00126e 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
00126f 7078
001270 7269
001271 6465
001272 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
001273 3c00
001274 5445
001275 5f48
001276 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001277 7274
001278 6e61
001279 6d73
00127a 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
00127b 203e
00127c 7075
00127d 6164
00127e 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
00127f 6c20
001280 676f
001281 6144
001282 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
001283 7420
001284 6d69
001285 6f65
001286 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
001287 0a0d
001288 3c00
001289 5445
00128a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00128b 6572
00128c 7274
00128d 6e61
00128e 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
00128f 7469
001290 203e
001291 7075
001292 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
001293 6574
001294 6c20
001295 676f
001296 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
001297 6e65
001298 2074
001299 6974
00129a 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
00129b 756f
00129c 0d74
00129d 000a
00129e 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
00129f 4854
0012a0 725f
0012a1 7465
0012a2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012a3 736e
0012a4 696d
0012a5 3e74
0012a6 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
0012a7 6d6f
0012a8 4c6d
0012a9 736f
0012aa 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
0012ab 6d69
0012ac 7265
0012ad 3d20
0012ae 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
0012af 646c
0012b0 2528
0012b1 586c
0012b2 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
0012b3 000a
0012b4 453c
0012b5 4854
0012b6 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
0012b7 7465
0012b8 6172
0012b9 736e
0012ba 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
0012bb 3e74
0012bc 4c20
0012bd 736f
0012be 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0012bf 6d69
0012c0 7265
0012c1 7420
0012c2 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0012c3 2065
0012c4 656c
0012c5 7466
0012c6 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0012c7 2520
0012c8 646c
0012c9 2528
0012ca 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0012cb 0d29
0012cc 000a
0012cd 0a0d
0012ce 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
0012cf 4854
0012d0 725f
0012d1 7465
0012d2 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012d3 736e
0012d4 696d
0012d5 3e74
0012d6 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
0012d7 522d
0012d8 7465
0012d9 6172
0012da 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
0012db 696d
0012dc 7474
0012dd 6e69
0012de 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
0012df 202d
0012e0 305b
0012e1 2578
0012e2 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0012e3 5d58
0012e4 0a0d
0012e5 3c00
0012e6 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
0012e7 5f48
0012e8 7270
0012e9 636f
0012ea 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0012eb 5073
0012ec 6361
0012ed 656b
0012ee 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0012ef 7320
0012f0 6174
0012f1 7574
0012f2 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0012f3 6572
0012f4 7571
0012f5 7365
0012f6 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0012f7 6e69
0012f8 6176
0012f9 696c
0012fa 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0012fb 656c
0012fc 676e
0012fd 6874
0012fe 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0012ff 6425
001300 0d29
001301 000a
001302 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001303 4854
001304 705f
001305 6f72
001306 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001307 7373
001308 6150
001309 6b63
00130a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00130b 203e
00130c 6170
00130d 6c79
00130e 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
00130f 2064
001310 616d
001311 6c6c
001312 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001313 2928
001314 6620
001315 6961
001316 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001317 0d64
001318 000a
001319 453c
00131a 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00131b 705f
00131c 6f72
00131d 6563
00131e 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
00131f 6150
001320 6b63
001321 7465
001322 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001323 7473
001324 7461
001325 7375
001326 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
001327 7571
001328 7365
001329 5074
00132a 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
00132b 6573
00132c 2872
00132d 2029
00132e 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
00132f 6c69
001330 6465
001331 0a0d
001332 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001333 2d0a
001334 732d
001335 6174
001336 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
001337 5273
001338 7165
001339 6575
00133a 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
00133b 6150
00133c 7372
00133d 7265
00133e 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
00133f 4320
001340 444d
001341 5b20
001342 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
001343 3025
001344 5832
001345 0d5d
001346 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001347 6361
001348 6563
001349 7373
00134a 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
00134b 6874
00134c 646f
00134d 2020
00134e 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
00134f 305b
001350 2578
001351 3230
001352 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
001353 0a0d
001354 6900
001355 746e
001356 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
001357 6176
001358 206c
001359 2020
00135a 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
00135b 2020
00135c 5b20
00135d 7830
00135e 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
00135f 5834
001360 205d
001361 203d
001362 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
001363 0a0d
001364 7300
001365 6174
001366 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
001367 4c73
001368 7369
001369 2074
00136a 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
00136b 2020
00136c 7c20
00136d 2500
00136e 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
00136f 7c58
001370 0d00
001371 2d0a
001372 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
001373 2e2e
001374 6f44
001375 656e
001376 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
001377 2d20
001378 0d2d
001379 000a
00137a 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
00137b 4854
00137c 705f
00137d 6f72
00137e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00137f 7373
001380 6150
001381 6b63
001382 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001383 203e
001384 7473
001385 7461
001386 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
001387 7220
001388 7065
001389 726f
00138a 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
00138b 6e69
00138c 6176
00138d 696c
00138e 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00138f 656c
001390 676e
001391 6874
001392 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001393 6425
001394 0d29
001395 000a
001396 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
001397 2d2d
001398 7473
001399 7461
00139a 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
00139b 6552
00139c 6f70
00139d 7472
00139e 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
00139f 7372
0013a0 7265
0013a1 2d2d
0013a2 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0013a3 4b43
0013a4 5b20
0013a5 7830
0013a6 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0013a7 5832
0013a8 0d5d
0013a9 000a
0013aa 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
0013ab 7869
0013ac 6954
0013ad 656d
0013ae 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
0013af 2020
0013b0 2020
0013b1 2020
0013b2 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
0013b3 2578
0013b4 3230
0013b5 5d58
0013b6 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013b7 2578
0013b8 3230
0013b9 5d58
0013ba 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bb 2578
0013bc 3230
0013bd 5d58
0013be 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013bf 2578
0013c0 3230
0013c1 5d58
0013c2 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0013c3 3c00
0013c4 5445
0013c5 5f48
0013c6 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0013c7 636f
0013c8 7365
0013c9 5073
0013ca 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0013cb 656b
0013cc 3e74
0013cd 6520
0013ce 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
0013cf 746e
0013d0 7220
0013d1 7065
0013d2 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
0013d3 2074
0013d4 6e69
0013d5 6176
0013d6 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0013d7 2064
0013d8 656c
0013d9 676e
0013da 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0013db 2820
0013dc 6425
0013dd 0d29
0013de 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0013df 0a0d
0013e0 2d2d
0013e1 7665
0013e2 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
0013e3 5274
0013e4 7065
0013e5 726f
0013e6 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
0013e7 7261
0013e8 6573
0013e9 2d72
0013ea 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
0013eb 4341
0013ec 204b
0013ed 305b
0013ee 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0013ef 3230
0013f0 5d58
0013f1 0a0d
0013f2 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0013f3 5445
0013f4 5f48
0013f5 7270
0013f6 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013f7 7365
0013f8 5073
0013f9 6361
0013fa 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0013fb 3e74
0013fc 6720
0013fd 746f
0013fe 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0013ff 6576
001400 746e
001401 6c20
001402 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
001403 6120
001404 6b63
001405 0a0d
001406 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
001407 6f6c
001408 5267
001409 7065
00140a 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
00140b 3e74
00140c 4c20
00140d 474f
00140e 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
00140f 6570
001410 466e
001411 6c69
001412 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
001413 7325
001414 2029
001415 6166
001416 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
001417 6465
001418 0a0d
001419 3c00
00141a 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
00141b 5f47
00141c 6572
00141d 6461
00141e 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
00141f 6174
001420 203e
001421 4f4c
001422 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
001423 6573
001424 4c74
001425 7361
001426 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
001427 6e65
001428 2864
001429 2029
00142a 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
00142b 6c69
00142c 6465
00142d 0a0d
00142e 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00142f 4f4c
001430 5f47
001431 6572
001432 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
001433 6144
001434 6174
001435 203e
001436 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
001437 5f47
001438 6573
001439 4c74
00143a 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
00143b 5374
00143c 6e65
00143d 2864
00143e 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
00143f 252c
001440 646c
001441 0d29
001442 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
001443 6c3c
001444 676f
001445 6552
001446 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
001447 7472
001448 203e
001449 4f4c
00144a 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
00144b 6c63
00144c 736f
00144d 4665
00144e 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
00144f 2865
001450 7325
001451 2029
001452 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
001453 6c69
001454 6465
001455 0a0d
001456 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001457 5445
001458 5f48
001459 7270
00145a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00145b 7365
00145c 5073
00145d 6361
00145e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00145f 3e74
001460 4320
001461 6e6f
001462 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
001463 2067
001464 614d
001465 616e
001466 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
001467 0a0d
001468 3c00
001469 5445
00146a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00146b 7270
00146c 636f
00146d 7365
00146e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00146f 6361
001470 656b
001471 3e74
001472 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
001473 6e6f
001474 6966
001475 7567
001476 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001477 6974
001478 6e6f
001479 6d20
00147a 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
00147b 6761
00147c 6d65
00147d 6e65
00147e 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
00147f 6e69
001480 6176
001481 696c
001482 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001483 656c
001484 676e
001485 6874
001486 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001487 6425
001488 0d29
001489 000a
00148a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00148b 4854
00148c 705f
00148d 6f72
00148e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00148f 7373
001490 6150
001491 6b63
001492 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001493 203e
001494 6170
001495 6c79
001496 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
001497 2064
001498 616d
001499 6c6c
00149a 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00149b 2528
00149c 2964
00149d 6620
00149e 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
00149f 656c
0014a0 0d64
0014a1 000a
0014a2 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
0014a3 4854
0014a4 705f
0014a5 6f72
0014a6 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014a7 7373
0014a8 6150
0014a9 6b63
0014aa 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014ab 203e
0014ac 6f63
0014ad 666e
0014ae 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0014af 614d
0014b0 616e
0014b1 6567
0014b2 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
0014b3 7372
0014b4 7265
0014b5 2928
0014b6 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
0014b7 6961
0014b8 656c
0014b9 0d64
0014ba 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0014bb 0a0d
0014bc 2d2d
0014bd 6f63
0014be 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
0014bf 6769
0014c0 614d
0014c1 616e
0014c2 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0014c3 6150
0014c4 7372
0014c5 7265
0014c6 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0014c7 4320
0014c8 444d
0014c9 5b20
0014ca 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0014cb 3025
0014cc 5832
0014cd 0d5d
0014ce 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0014cf 6361
0014d0 6463
0014d1 2020
0014d2 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
0014d3 2020
0014d4 2020
0014d5 2020
0014d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014d7 305b
0014d8 2578
0014d9 3230
0014da 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0014db 0a0d
0014dc 6300
0014dd 666e
0014de 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
0014df 2020
0014e0 2020
0014e1 2020
0014e2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014e3 2020
0014e4 5b20
0014e5 7830
0014e6 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
0014e7 5832
0014e8 0d5d
0014e9 000a
0014ea 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0014eb 4854
0014ec 705f
0014ed 6f72
0014ee 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014ef 7373
0014f0 6150
0014f1 6b63
0014f2 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014f3 203e
0014f4 6567
0014f5 4374
0014f6 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0014f7 6966
0014f8 4c67
0014f9 6e65
0014fa 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0014fb 6620
0014fc 6961
0014fd 656c
0014fe 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0014ff 000a
001500 453c
001501 4854
001502 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
001503 6f72
001504 6563
001505 7373
001506 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001507 6b63
001508 7465
001509 203e
00150a 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
00150b 6766
00150c 6452
00150d 6d20
00150e 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
00150f 6f6c
001510 2863
001511 2029
001512 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
001513 6c69
001514 6465
001515 0a0d
001516 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001517 5445
001518 5f48
001519 7270
00151a 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
00151b 7365
00151c 5073
00151d 6361
00151e 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
00151f 3e74
001520 6320
001521 6e6f
001522 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
001523 5267
001524 6165
001525 2864
001526 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
001527 6166
001528 6c69
001529 6465
00152a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00152b 3c00
00152c 5445
00152d 5f48
00152e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00152f 636f
001530 7365
001531 5073
001532 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001533 656b
001534 3e74
001535 5220
001536 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
001537 4d43
001538 2044
001539 203a
00153a 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
00153b 5f48
00153c 6573
00153d 646e
00153e 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
00153f 666e
001540 6769
001541 614d
001542 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001543 6567
001544 6341
001545 286b
001546 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
001547 6166
001548 6c69
001549 6465
00154a 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00154b 3c00
00154c 5445
00154d 5f48
00154e 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
00154f 636f
001550 7365
001551 5073
001552 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
001553 656b
001554 3e74
001555 6320
001556 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
001557 5767
001558 2072
001559 616d
00155a 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
00155b 636f
00155c 2928
00155d 6620
00155e 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
00155f 656c
001560 0d64
001561 000a
001562 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
001563 4854
001564 705f
001565 6f72
001566 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001567 7373
001568 6150
001569 6b63
00156a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00156b 203e
00156c 6f63
00156d 666e
00156e 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
00156f 7257
001570 7469
001571 2865
001572 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
001573 6166
001574 6c69
001575 6465
001576 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001577 5700
001578 5241
001579 204e
00157a 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
00157b 453c
00157c 4854
00157d 705f
00157e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00157f 6563
001580 7373
001581 6150
001582 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
001583 7465
001584 203e
001585 5257
001586 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
001587 444d
001588 3a20
001589 4520
00158a 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
00158b 735f
00158c 6e65
00158d 4364
00158e 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00158f 6966
001590 4d67
001591 6e61
001592 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001593 4165
001594 6b63
001595 2928
001596 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
001597 6961
001598 656c
001599 0d64
00159a 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00159b 453c
00159c 4854
00159d 705f
00159e 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
00159f 6563
0015a0 7373
0015a1 6150
0015a2 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0015a3 7465
0015a4 203e
0015a5 6f63
0015a6 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
0015a7 6769
0015a8 6f43
0015a9 666e
0015aa 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
0015ab 286d
0015ac 2029
0015ad 6166
0015ae 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0015af 6465
0015b0 0a0d
0015b1 3c00
0015b2 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
0015b3 5f48
0015b4 7270
0015b5 636f
0015b6 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0015b7 5073
0015b8 6361
0015b9 656b
0015ba 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0015bb 7520
0015bc 6b6e
0015bd 6f6e
0015be 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0015bf 7420
0015c0 7079
0015c1 2065
0015c2 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
0015c3 2072
0015c4 6f63
0015c5 666e
0015c6 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0015c7 3e2d
0015c8 6361
0015c9 6463
0015ca 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
0015cb 7830
0015cc 3025
0015cd 5832
0015ce 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0015cf 000a
0015d0 453c
0015d1 4854
0015d2 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0015d3 6f72
0015d4 6563
0015d5 7373
0015d6 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0015d7 6b63
0015d8 7465
0015d9 203e
0015da 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
0015db 6174
0015dc 7220
0015dd 7065
0015de 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
0015df 2074
0015e0 6e69
0015e1 6176
0015e2 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0015e3 2064
0015e4 656c
0015e5 676e
0015e6 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0015e7 2820
0015e8 6425
0015e9 0d29
0015ea 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0015eb 0a0d
0015ec 2d2d
0015ed 6164
0015ee 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0015ef 6552
0015f0 6f70
0015f1 7472
0015f2 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0015f3 7372
0015f4 7265
0015f5 2d2d
0015f6 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0015f7 4b43
0015f8 5b20
0015f9 7830
0015fa 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0015fb 5832
0015fc 0d5d
0015fd 000a
0015fe 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0015ff 4854
001600 705f
001601 6f72
001602 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001603 7373
001604 6150
001605 6b63
001606 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001607 203e
001608 6f67
001609 2074
00160a 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
00160b 6174
00160c 6c20
00160d 676f
00160e 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
00160f 6b63
001610 0a0d
001611 3c00
001612 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
001613 5f48
001614 7270
001615 636f
001616 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001617 5073
001618 6361
001619 656b
00161a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00161b 6c20
00161c 676f
00161d 6d20
00161e 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
00161f 7069
001620 6c75
001621 7461
001622 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001623 206e
001624 4328
001625 444d
001626 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
001627 6e69
001628 6176
001629 696c
00162a 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00162b 656c
00162c 676e
00162d 6874
00162e 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00162f 6425
001630 0d29
001631 000a
001632 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001633 4854
001634 705f
001635 6f72
001636 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001637 7373
001638 6150
001639 6b63
00163a 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00163b 203e
00163c 6f6c
00163d 4d67
00163e 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
00163f 7069
001640 6c75
001641 7461
001642 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001643 436e
001644 646d
001645 6150
001646 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001647 7265
001648 2928
001649 6620
00164a 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
00164b 656c
00164c 0d64
00164d 000a
00164e 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00164f 2d2d
001650 6f6c
001651 4d67
001652 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001653 7069
001654 6c75
001655 7461
001656 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001657 436e
001658 646d
001659 6150
00165a 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
00165b 7265
00165c 2d2d
00165d 4320
00165e 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
00165f 5b20
001660 7830
001661 3025
001662 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001663 0d5d
001664 000a
001665 5374
001666 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
001667 7472
001668 2020
001669 2020
00166a 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
00166b 2020
00166c 2020
00166d 255b
00166e 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00166f 0d5d
001670 000a
001671 5374
001672 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
001673 2070
001674 2020
001675 2020
001676 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001677 2020
001678 2020
001679 255b
00167a 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
00167b 0d5d
00167c 000a
00167d 453c
00167e 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00167f 705f
001680 6f72
001681 6563
001682 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001683 6150
001684 6b63
001685 7465
001686 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001687 6573
001688 4c74
001689 676f
00168a 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
00168b 696e
00168c 7570
00168d 616c
00168e 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
00168f 6353
001690 6568
001691 616d
001692 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
001693 6620
001694 6961
001695 656c
001696 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001697 000a
001698 453c
001699 4854
00169a 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
00169b 6f72
00169c 6563
00169d 7373
00169e 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
00169f 6b63
0016a0 7465
0016a1 203e
0016a2 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
0016a3 2067
0016a4 616d
0016a5 696e
0016a6 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
0016a7 616c
0016a8 6974
0016a9 6e6f
0016aa 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
0016ab 4341
0016ac 294b
0016ad 6920
0016ae 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
0016af 6c61
0016b0 6469
0016b1 6c20
0016b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0016b3 7467
0016b4 2068
0016b5 2528
0016b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0016b7 0a0d
0016b8 0d00
0016b9 2d0a
0016ba 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
0016bb 676f
0016bc 614d
0016bd 696e
0016be 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
0016bf 616c
0016c0 6974
0016c1 6e6f
0016c2 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
0016c3 506b
0016c4 7261
0016c5 6573
0016c6 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
0016c7 202d
0016c8 4341
0016c9 204b
0016ca 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
0016cb 2578
0016cc 3230
0016cd 5d58
0016ce 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0016cf 7300
0016d0 6174
0016d1 7574
0016d2 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0016d3 2020
0016d4 2020
0016d5 2020
0016d6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016d7 5b20
0016d8 6c25
0016d9 5d64
0016da 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0016db 3c00
0016dc 5445
0016dd 5f48
0016de 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0016df 636f
0016e0 7365
0016e1 5073
0016e2 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0016e3 656b
0016e4 3e74
0016e5 6e20
0016e6 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
0016e7 6f77
0016e8 6b72
0016e9 6d20
0016ea 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
0016eb 746e
0016ec 6e65
0016ed 6e61
0016ee 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0016ef 6920
0016f0 766e
0016f1 6c61
0016f2 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0016f3 6c20
0016f4 6e65
0016f5 7467
0016f6 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0016f7 2528
0016f8 2964
0016f9 0a0d
0016fa 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0016fb 5445
0016fc 5f48
0016fd 7270
0016fe 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0016ff 7365
001700 5073
001701 6361
001702 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001703 3e74
001704 6e20
001705 7465
001706 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
001707 6b72
001708 614d
001709 6e69
00170a 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00170b 616e
00170c 636e
00170d 5065
00170e 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
00170f 6573
001710 2872
001711 2029
001712 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
001713 6c69
001714 6465
001715 0a0d
001716 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001717 2d0a
001718 6e2d
001719 7465
00171a 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
00171b 6b72
00171c 614d
00171d 6e69
00171e 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
00171f 616e
001720 636e
001721 5065
001722 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
001723 6573
001724 2d72
001725 202d
001726 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
001727 2044
001728 305b
001729 2578
00172a 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00172b 5d58
00172c 0a0d
00172d 6300
00172e 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
00172f 2020
001730 2020
001731 2020
001732 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001733 2020
001734 2020
001735 5b20
001736 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001737 3025
001738 5832
001739 0d5d
00173a 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
00173b 6164
00173c 6174
00173d 654c
00173e 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
00173f 2020
001740 2020
001741 2020
001742 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001743 255b
001744 5d64
001745 0a0d
001746 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
001747 7461
001748 2061
001749 2d2d
00174a 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
00174b 2020
00174c 2020
00174d 2020
00174e 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
00174f 000a
001750 2d2d
001751 2d2d
001752 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
001753 2d2d
001754 0a0d
001755 3c00
001756 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
001757 5f48
001758 7270
001759 636f
00175a 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00175b 5073
00175c 6361
00175d 656b
00175e 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00175f 7320
001760 7465
001761 6954
001762 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
001763 7953
001764 636e
001765 6353
001766 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
001767 616d
001768 2928
001769 6620
00176a 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
00176b 656c
00176c 0d64
00176d 000a
00176e 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
00176f 4e52
001770 3a20
001771 3c20
001772 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
001773 5f48
001774 7270
001775 636f
001776 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001777 5073
001778 6361
001779 656b
00177a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00177b 4e20
00177c 5445
00177d 5f57
00177e 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
00177f 454d
001780 535f
001781 4e59
001782 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
001783 203a
001784 5445
001785 5f48
001786 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001787 646e
001788 654e
001789 7774
00178a 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00178b 4d6b
00178c 6961
00178d 746e
00178e 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
00178f 6e61
001790 6563
001791 6341
001792 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
001793 2029
001794 6166
001795 6c69
001796 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001797 0a0d
001798 3c00
001799 5445
00179a 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00179b 7270
00179c 636f
00179d 7365
00179e 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
00179f 6361
0017a0 656b
0017a1 3e74
0017a2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017a3 6d65
0017a4 746f
0017a5 2065
0017a6 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
0017a7 6976
0017a8 6563
0017a9 6320
0017aa 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
0017ab 7274
0017ac 6c6f
0017ad 6920
0017ae 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
0017af 6c61
0017b0 6469
0017b1 6c20
0017b2 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
0017b3 7467
0017b4 2068
0017b5 2528
0017b6 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0017b7 0a0d
0017b8 3c00
0017b9 5445
0017ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017bb 7270
0017bc 636f
0017bd 7365
0017be 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017bf 6361
0017c0 656b
0017c1 3e74
0017c2 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017c3 6d65
0017c4 746f
0017c5 4465
0017c6 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
0017c7 6369
0017c8 4365
0017c9 6e6f
0017ca 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
0017cb 6c6f
0017cc 6150
0017cd 7372
0017ce 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
0017cf 2928
0017d0 6620
0017d1 6961
0017d2 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0017d3 0d64
0017d4 000a
0017d5 0a0d
0017d6 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
0017d7 6572
0017d8 6f6d
0017d9 6574
0017da 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
0017db 6976
0017dc 6563
0017dd 6f43
0017de 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
0017df 6f72
0017e0 506c
0017e1 7261
0017e2 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
0017e3 2d72
0017e4 202d
0017e5 4d43
0017e6 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
0017e7 305b
0017e8 2578
0017e9 3230
0017ea 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0017eb 0a0d
0017ec 7600
0017ed 6c61
0017ee 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0017ef 2020
0017f0 2020
0017f1 2020
0017f2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0017f3 2020
0017f4 5b20
0017f5 6c25
0017f6 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0017f7 0a0d
0017f8 3c00
0017f9 5445
0017fa 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017fb 7270
0017fc 636f
0017fd 7365
0017fe 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017ff 6361
001800 656b
001801 3e74
001802 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
001803 7465
001804 6954
001805 656d
001806 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
001807 636e
001808 6353
001809 6568
00180a 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
00180b 2528
00180c 646c
00180d 2029
00180e 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
00180f 6c69
001810 6465
001811 0a0d
001812 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
001813 5241
001814 204e
001815 203a
001816 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
001817 4854
001818 705f
001819 6f72
00181a 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00181b 7373
00181c 6150
00181d 6b63
00181e 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00181f 203e
001820 4544
001821 4356
001822 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
001823 5f4c
001824 554d
001825 4554
001826 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
001827 414c
001828 4d52
001829 3a20
00182a 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
00182b 4854
00182c 725f
00182d 6d65
00182e 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
00182f 4465
001830 7665
001831 6369
001832 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
001833 6e6f
001834 7274
001835 6c6f
001836 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
001837 286b
001838 2029
001839 6166
00183a 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00183b 6465
00183c 0a0d
00183d 3c00
00183e 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
00183f 5f48
001840 7270
001841 636f
001842 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001843 5073
001844 6361
001845 656b
001846 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001847 6320
001848 656c
001849 7261
00184a 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
00184b 7369
00184c 2074
00184d 4341
00184e 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
00184f 6e69
001850 6176
001851 696c
001852 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001853 656c
001854 676e
001855 6874
001856 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001857 6425
001858 0d29
001859 000a
00185a 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00185b 4854
00185c 705f
00185d 6f72
00185e 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
00185f 7373
001860 6150
001861 6b63
001862 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001863 203e
001864 6c63
001865 6165
001866 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
001867 7369
001868 5074
001869 7261
00186a 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
00186b 2872
00186c 2029
00186d 6166
00186e 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00186f 6465
001870 0a0d
001871 0d00
001872 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001873 632d
001874 656c
001875 7261
001876 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
001877 7473
001878 6150
001879 7372
00187a 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
00187b 2d2d
00187c 4120
00187d 4b43
00187e 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
00187f 7830
001880 3025
001881 5832
001882 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001883 000a
001884 7473
001885 7461
001886 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
001887 2020
001888 2020
001889 2020
00188a 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00188b 2020
00188c 305b
00188d 2578
00188e 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
00188f 5d58
001890 0a0d
001891 3c00
001892 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
001893 5f48
001894 7270
001895 636f
001896 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001897 5073
001898 6361
001899 656b
00189a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00189b 6320
00189c 656c
00189d 7261
00189e 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
00189f 7075
0018a0 696c
0018a1 6163
0018a2 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
0018a3 7220
0018a4 7165
0018a5 6575
0018a6 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
0018a7 2820
0018a8 4341
0018a9 294b
0018aa 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
0018ab 4355
0018ac 4543
0018ad 5353
0018ae 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
0018af 0a0d
0018b0 3c00
0018b1 5445
0018b2 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0018b3 7270
0018b4 636f
0018b5 7365
0018b6 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0018b7 6361
0018b8 656b
0018b9 3e74
0018ba 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
0018bb 656c
0018bc 7261
0018bd 6420
0018be 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
0018bf 696c
0018c0 6163
0018c1 6574
0018c2 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
0018c3 7165
0018c4 6575
0018c5 7473
0018c6 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
0018c7 4341
0018c8 294b
0018c9 4620
0018ca 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
0018cb 454c
0018cc 5b44
0018cd 7830
0018ce 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
0018cf 5832
0018d0 215d
0018d1 0d21
0018d2 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
0018d3 453c
0018d4 4854
0018d5 705f
0018d6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018d7 6563
0018d8 7373
0018d9 6150
0018da 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018db 7465
0018dc 203e
0018dd 6e75
0018de 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
0018df 776f
0018e0 206e
0018e1 7974
0018e2 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
0018e3 6620
0018e4 726f
0018e5 6320
0018e6 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
0018e7 6c5f
0018e8 7473
0018e9 735f
0018ea 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
0018eb 633e
0018ec 646d
0018ed 5b20
0018ee 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0018ef 3025
0018f0 5832
0018f1 0d5d
0018f2 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0018f3 453c
0018f4 4854
0018f5 705f
0018f6 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018f7 6563
0018f8 7373
0018f9 6150
0018fa 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018fb 7465
0018fc 203e
0018fd 6966
0018fe 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0018ff 6177
001900 6572
001901 7520
001902 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
001903 616f
001904 2064
001905 6168
001906 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
001907 7427
001908 7320
001909 7075
00190a 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
00190b 7472
00190c 6465
00190d 7920
00190e 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
00190f 0a0d
001910 0d00
001911 3c0a
001912 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
001913 5f48
001914 7270
001915 636f
001916 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001917 5073
001918 6361
001919 656b
00191a 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
00191b 6920
00191c 766e
00191d 6c61
00191e 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
00191f 6620
001920 6172
001921 656d
001922 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
001923 7079
001924 2065
001925 2028
001926 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
001927 5832
001928 2920
001929 2121
00192a 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
00192b 3c00
00192c 5445
00192d 5f48
00192e 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00192f 6563
001930 7669
001931 3e65
001932 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
001933 6c61
001934 6f6c
001935 2e63
001936 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
001937 4941
001938 454c
001939 2e44
00193a 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
00193b 000a
00193c 007e
00193d 0a0d
00193e 6e69      	.DB  0xA,0x0,0x7E,0x0,0xD,0xA,0x69,0x6E
00193f 6176
001940 696c
001941 2064
001942 656c      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6C,0x65
001943 676e
001944 6874
001945 2121
001946 0a0d      	.DB  0x6E,0x67,0x74,0x68,0x21,0x21,0xD,0xA
001947 3c00
001948 5445
001949 5f48
00194a 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
00194b 6563
00194c 7669
00194d 3e65
00194e 6320      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x63
00194f 6568
001950 6b63
001951 7573
001952 206d      	.DB  0x68,0x65,0x63,0x6B,0x73,0x75,0x6D,0x20
001953 7265
001954 6f72
001955 0d72
001956 000a      	.DB  0x65,0x72,0x72,0x6F,0x72,0xD,0xA,0x0
001957 453c
001958 4854
001959 735f
00195a 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00195b 3e64
00195c 5720
00195d 5241
00195e 494e      	.DB  0x64,0x3E,0x20,0x57,0x41,0x52,0x4E,0x49
00195f 474e
001960 3a20
001961 5020
001962 6361      	.DB  0x4E,0x47,0x20,0x3A,0x20,0x50,0x61,0x63
001963 656b
001964 2074
001965 7369
001966 7420      	.DB  0x6B,0x65,0x74,0x20,0x69,0x73,0x20,0x74
001967 6f6f
001968 6c20
001969 6e6f
00196a 2867      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x28
00196b 6425
00196c 6220
00196d 7479
00196e 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
00196f 0d29
001970 000a
001971 453c
001972 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001973 735f
001974 6e65
001975 3e64
001976 5720      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20,0x57
001977 5241
001978 494e
001979 474e
00197a 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
00197b 4520
00197c 4854
00197d 735f
00197e 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
00197f 2064
001980 616d
001981 6c6c
001982 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001983 6620
001984 6961
001985 656c
001986 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
001987 2528
001988 2964
001989 0a0d
00198a 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
00198b 5445
00198c 5f48
00198d 6573
00198e 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
00198f 203e
001990 5445
001991 5f48
001992 6461      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x61,0x64
001993 5764
001994 6961
001995 5174
001996 6575      	.DB  0x64,0x57,0x61,0x69,0x74,0x51,0x75,0x65
001997 6575
001998 2928
001999 6620
00199a 6961      	.DB  0x75,0x65,0x28,0x29,0x20,0x66,0x61,0x69
00199b 656c
00199c 2064
00199d 695b
00199e 3a64      	.DB  0x6C,0x65,0x64,0x20,0x5B,0x69,0x64,0x3A
00199f 7830
0019a0 3025
0019a1 5832
0019a2 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0019a3 000a
0019a4 453c
0019a5 4854
0019a6 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
0019a7 6977
0019a8 6374
0019a9 4d68
0019aa 646f      	.DB  0x77,0x69,0x74,0x63,0x68,0x4D,0x6F,0x64
0019ab 3e65
0019ac 7320
0019ad 6977
0019ae 6374      	.DB  0x65,0x3E,0x20,0x73,0x77,0x69,0x74,0x63
0019af 2068
0019b0 6f74
0019b1 4320
0019b2 6e6f      	.DB  0x68,0x20,0x74,0x6F,0x20,0x43,0x6F,0x6E
0019b3 6966
0019b4 2067
0019b5 6f6d
0019b6 6564      	.DB  0x66,0x69,0x67,0x20,0x6D,0x6F,0x64,0x65
0019b7 0a0d
0019b8 3c00
0019b9 5445
0019ba 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0019bb 7773
0019bc 7469
0019bd 6863
0019be 6f4d      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x4D,0x6F
0019bf 6564
0019c0 203e
0019c1 7773
0019c2 7469      	.DB  0x64,0x65,0x3E,0x20,0x73,0x77,0x69,0x74
0019c3 6863
0019c4 7420
0019c5 206f
0019c6 6f4e      	.DB  0x63,0x68,0x20,0x74,0x6F,0x20,0x4E,0x6F
0019c7 6d72
0019c8 6c61
0019c9 6d20
0019ca 646f      	.DB  0x72,0x6D,0x61,0x6C,0x20,0x6D,0x6F,0x64
0019cb 0d65
0019cc 000a
0019cd 453c
0019ce 4854      	.DB  0x65,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0019cf 675f
0019d0 7465
0019d1 6f43
0019d2 666e      	.DB  0x5F,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
0019d3 6769
0019d4 203e
0019d5 7257
0019d6 7469      	.DB  0x69,0x67,0x3E,0x20,0x57,0x72,0x69,0x74
0019d7 2065
0019d8 6f74
0019d9 7520
0019da 7261      	.DB  0x65,0x20,0x74,0x6F,0x20,0x75,0x61,0x72
0019db 2074
0019dc 2030
0019dd 003a
0019de 453c      	.DB  0x74,0x20,0x30,0x20,0x3A,0x0,0x3C,0x45
0019df 4854
0019e0 735f
0019e1 7465
0019e2 6f43      	.DB  0x54,0x48,0x5F,0x73,0x65,0x74,0x43,0x6F
0019e3 666e
0019e4 6769
0019e5 203e
0019e6 616d      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D,0x61
0019e7 6c6c
0019e8 636f
0019e9 4328
0019ea 4e4f      	.DB  0x6C,0x6C,0x6F,0x63,0x28,0x43,0x4F,0x4E
0019eb 5f46
0019ec 4552
0019ed 4441
0019ee 425f      	.DB  0x46,0x5F,0x52,0x45,0x41,0x44,0x5F,0x42
0019ef 4655
0019f0 4546
0019f1 2952
0019f2 6620      	.DB  0x55,0x46,0x46,0x45,0x52,0x29,0x20,0x66
0019f3 6961
0019f4 656c
0019f5 0d64
0019f6 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0019f7 453c
0019f8 4854
0019f9 735f
0019fa 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
0019fb 6f43
0019fc 666e
0019fd 6769
0019fe 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0019ff 7257
001a00 7469
001a01 2065
001a02 6f74      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x74,0x6F
001a03 7520
001a04 7261
001a05 2074
001a06 2030      	.DB  0x20,0x75,0x61,0x72,0x74,0x20,0x30,0x20
001a07 003a
001a08 453c
001a09 4854
001a0a 735f      	.DB  0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a0b 7465
001a0c 6f43
001a0d 666e
001a0e 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a0f 203e
001a10 6572
001a11 6461
001a12 6320      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x63
001a13 6e6f
001a14 6966
001a15 2067
001a16 7266      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x20,0x66,0x72
001a17 6d6f
001a18 4520
001a19 4854
001a1a 6d20      	.DB  0x6F,0x6D,0x20,0x45,0x54,0x48,0x20,0x6D
001a1b 646f
001a1c 6c75
001a1d 2065
001a1e 6166      	.DB  0x6F,0x64,0x75,0x6C,0x65,0x20,0x66,0x61
001a1f 6c69
001a20 6465
001a21 0a0d
001a22 2500      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x25
001a23 3230
001a24 2558
001a25 3230
001a26 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a27 3230
001a28 2558
001a29 3230
001a2a 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2b 3230
001a2c 2558
001a2d 3230
001a2e 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a2f 3230
001a30 2558
001a31 3230
001a32 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a33 3230
001a34 2558
001a35 3230
001a36 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a37 3230
001a38 2558
001a39 3230
001a3a 0058      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x0
001a3b 453c
001a3c 4854
001a3d 735f
001a3e 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
001a3f 6f43
001a40 666e
001a41 6769
001a42 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
001a43 6553
001a44 2074
001a45 7453
001a46 6972      	.DB  0x53,0x65,0x74,0x20,0x53,0x74,0x72,0x69
001a47 676e
001a48 5b20
001a49 7325
001a4a 0d5d      	.DB  0x6E,0x67,0x20,0x5B,0x25,0x73,0x5D,0xD
001a4b 000a
001a4c 453c
001a4d 4854
001a4e 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a4f 7465
001a50 6f43
001a51 666e
001a52 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a53 203e
001a54 6553
001a55 7474
001a56 6e69      	.DB  0x3E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E
001a57 2067
001a58 736d
001a59 2067
001a5a 2d2d      	.DB  0x67,0x20,0x6D,0x73,0x67,0x20,0x2D,0x2D
001a5b 0d2d
001a5c 000a
001a5d 0a0d
001a5e 2d2d      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001a5f 0d2d
001a60 000a
001a61 453c
001a62 4854      	.DB  0x2D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001a63 725f
001a64 7365
001a65 7465
001a66 203e      	.DB  0x5F,0x72,0x65,0x73,0x65,0x74,0x3E,0x20
001a67 6552
001a68 6573
001a69 7474
001a6a 6e69      	.DB  0x52,0x65,0x73,0x65,0x74,0x74,0x69,0x6E
001a6b 2067
001a6c 7445
001a6d 6568
001a6e 6e72      	.DB  0x67,0x20,0x45,0x74,0x68,0x65,0x72,0x6E
001a6f 7465
001a70 4d20
001a71 646f
001a72 6c75      	.DB  0x65,0x74,0x20,0x4D,0x6F,0x64,0x75,0x6C
001a73 2c65
001a74 7020
001a75 656c
001a76 7361      	.DB  0x65,0x2C,0x20,0x70,0x6C,0x65,0x61,0x73
001a77 2065
001a78 6177
001a79 7469
001a7a 002e      	.DB  0x65,0x20,0x77,0x61,0x69,0x74,0x2E,0x0
001a7b 2e2e
001a7c 442e
001a7d 6e6f
001a7e 0d65      	.DB  0x2E,0x2E,0x2E,0x44,0x6F,0x6E,0x65,0xD
001a7f 000a      	.DB  0xA,0x0
                 _0x140000:
001a80 733c
001a81 6174
001a82 7574
001a83 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001a84 7165
001a85 6575
001a86 7473
001a87 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
001a88 7372
001a89 7265
001a8a 203e
001a8b 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
001a8c 6c6c
001a8d 636f
001a8e 6620
001a8f 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001a90 656c
001a91 0d64
001a92 000a
001a93 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001a94 6e6f
001a95 6966
001a96 4d67
001a97 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
001a98 6761
001a99 5065
001a9a 7261
001a9b 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
001a9c 3e72
001a9d 0a0d
001a9e 3c00
001a9f 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
001aa0 666e
001aa1 6769
001aa2 614d
001aa3 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001aa4 6567
001aa5 6150
001aa6 7372
001aa7 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
001aa8 203e
001aa9 4552
001aaa 4441
001aab 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
001aac 0d47
001aad 000a
001aae 633c
001aaf 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ab0 6966
001ab1 4d67
001ab2 6e61
001ab3 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001ab4 5065
001ab5 7261
001ab6 6573
001ab7 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
001ab8 5720
001ab9 4952
001aba 4954
001abb 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
001abc 0a0d
001abd 3c00
001abe 6f63
001abf 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ac0 6769
001ac1 614d
001ac2 616e
001ac3 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001ac4 6150
001ac5 7372
001ac6 7265
001ac7 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
001ac8 6f63
001ac9 666e
001aca 654c
001acb 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
001acc 203d
001acd 6425
001ace 0a0d
001acf 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
001ad0 6f63
001ad1 666e
001ad2 6769
001ad3 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
001ad4 616e
001ad5 6567
001ad6 6150
001ad7 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
001ad8 7265
001ad9 203e
001ada 616d
001adb 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
001adc 636f
001add 6620
001ade 6961
001adf 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
001ae0 0d64
001ae1 000a
001ae2 6e3c
001ae3 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
001ae4 6f77
001ae5 6b72
001ae6 614d
001ae7 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
001ae8 6574
001ae9 616e
001aea 636e
001aeb 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
001aec 7261
001aed 6573
001aee 3e72
001aef 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
001af0 6c61
001af1 6f6c
001af2 2063
001af3 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
001af4 6c69
001af5 6465
001af6 2820
001af7 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
001af8 0d29
001af9 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
001afa 673c
001afb 7465
001afc 6f43
001afd 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001afe 6769
001aff 654c
001b00 3e6e
001b01 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001b02 6b6e
001b03 6f6e
001b04 6e77
001b05 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001b06 6e6f
001b07 6966
001b08 7567
001b09 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001b0a 6974
001b0b 6e6f
001b0c 7420
001b0d 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001b0e 2065
001b0f 305b
001b10 2578
001b11 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001b12 5d58
001b13 0a0d
001b14 3c00
001b15 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001b16 666e
001b17 6769
001b18 6552
001b19 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b1a 203e
001b1b 4f43
001b1c 464e
001b1d 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001b1e 4f52
001b1f 4550
001b20 5452
001b21 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001b22 2053
001b23 616d
001b24 6c6c
001b25 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001b26 2031
001b27 6166
001b28 6c69
001b29 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001b2a 2820
001b2b 6425
001b2c 6220
001b2d 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001b2e 7365
001b2f 0d29
001b30 000a
001b31 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001b32 6e6f
001b33 6966
001b34 5267
001b35 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001b36 3e64
001b37 6720
001b38 7465
001b39 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001b3a 706f
001b3b 7265
001b3c 6974
001b3d 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001b3e 6f43
001b3f 666e
001b40 6769
001b41 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001b42 6620
001b43 6961
001b44 656c
001b45 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001b46 000a
001b47 0a0d
001b48 2d2d
001b49 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001b4a 4552
001b4b 4441
001b4c 4320
001b4d 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001b4e 5f46
001b4f 5250
001b50 504f
001b51 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001b52 4954
001b53 5345
001b54 2d20
001b55 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001b56 0a0d
001b57 2500
001b58 0d73
001b59 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001b5a 6425
001b5b 0a0d
001b5c 3c00
001b5d 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001b5e 666e
001b5f 6769
001b60 6552
001b61 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b62 203e
001b63 4f43
001b64 464e
001b65 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001b66 4550
001b67 4152
001b68 4554
001b69 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001b6a 6c61
001b6b 6f6c
001b6c 3163
001b6d 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001b6e 6961
001b6f 656c
001b70 2064
001b71 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001b72 2064
001b73 7962
001b74 6574
001b75 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001b76 0a0d
001b77 3c00
001b78 6f63
001b79 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001b7a 6769
001b7b 6552
001b7c 6461
001b7d 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001b7e 6567
001b7f 4f74
001b80 6570
001b81 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001b82 6974
001b83 676e
001b84 6f43
001b85 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001b86 6769
001b87 2928
001b88 6620
001b89 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001b8a 656c
001b8b 0d64
001b8c 000a
001b8d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001b8e 2d2d
001b8f 202d
001b90 4552
001b91 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001b92 4320
001b93 4e4f
001b94 5f46
001b95 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001b96 5245
001b97 5441
001b98 2045
001b99 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001b9a 0d2d
001b9b 000a
001b9c 6f6d
001b9d 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001b9e 2020
001b9f 2020
001ba0 2020
001ba1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001ba2 2020
001ba3 2020
001ba4 305b
001ba5 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001ba6 3230
001ba7 5d58
001ba8 0a0d
001ba9 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001baa 7665
001bab 6369
001bac 4565
001bad 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001bae 6c62
001baf 2065
001bb0 2020
001bb1 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001bb2 7830
001bb3 3025
001bb4 5832
001bb5 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001bb6 000a
001bb7 6c61
001bb8 7261
001bb9 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001bba 616e
001bbb 6c62
001bbc 2065
001bbd 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001bbe 2020
001bbf 305b
001bc0 2578
001bc1 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001bc2 5d58
001bc3 0a0d
001bc4 7300
001bc5 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001bc6 6f73
001bc7 4572
001bc8 616e
001bc9 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001bca 2065
001bcb 2020
001bcc 0020
001bcd 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001bce 2578
001bcf 3230
001bd0 5d58
001bd1 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001bd2 6f63
001bd3 666e
001bd4 6769
001bd5 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001bd6 6461
001bd7 203e
001bd8 4f43
001bd9 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001bda 535f
001bdb 4e45
001bdc 4f53
001bdd 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001bde 616d
001bdf 6c6c
001be0 636f
001be1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001be2 6166
001be3 6c69
001be4 6465
001be5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001be6 6425
001be7 6220
001be8 7479
001be9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001bea 0d29
001beb 000a
001bec 633c
001bed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001bee 6966
001bef 5267
001bf0 6165
001bf1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001bf2 6720
001bf3 7465
001bf4 6553
001bf5 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001bf6 726f
001bf7 6f43
001bf8 666e
001bf9 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001bfa 2928
001bfb 6620
001bfc 6961
001bfd 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001bfe 0d64
001bff 000a
001c00 0a0d
001c01 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001c02 202d
001c03 4552
001c04 4441
001c05 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001c06 4e4f
001c07 5f46
001c08 4553
001c09 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001c0a 524f
001c0b 5b20
001c0c 6425
001c0d 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001c0e 2d2d
001c0f 0a0d
001c10 7300
001c11 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001c12 6c70
001c13 6e69
001c14 5267
001c15 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001c16 2065
001c17 2020
001c18 5b20
001c19 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c1a 0d5d
001c1b 000a
001c1c 6572
001c1d 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001c1e 7563
001c1f 7272
001c20 6e65
001c21 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001c22 2020
001c23 2020
001c24 305b
001c25 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001c26 3430
001c27 5d58
001c28 0a0d
001c29 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001c2a 6d69
001c2b 5365
001c2c 6174
001c2d 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001c2e 6f48
001c2f 7275
001c30 2020
001c31 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001c32 6425
001c33 0d5d
001c34 000a
001c35 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001c36 656d
001c37 7453
001c38 7261
001c39 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001c3a 6e69
001c3b 2020
001c3c 2020
001c3d 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001c3e 5d64
001c3f 0a0d
001c40 7400
001c41 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001c42 5365
001c43 6f74
001c44 4870
001c45 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001c46 2072
001c47 2020
001c48 5b20
001c49 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c4a 0d5d
001c4b 000a
001c4c 6974
001c4d 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001c4e 7453
001c4f 706f
001c50 694d
001c51 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001c52 2020
001c53 2020
001c54 255b
001c55 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001c56 0a0d
001c57 6c00
001c58 776f
001c59 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001c5a 694c
001c5b 696d
001c5c 2074
001c5d 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001c5e 2020
001c5f 5b20
001c60 6625
001c61 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001c62 000a
001c63 6f6c
001c64 6577
001c65 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001c66 6c65
001c67 7961
001c68 2020
001c69 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001c6a 2020
001c6b 255b
001c6c 5d64
001c6d 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c6e 6c00
001c6f 776f
001c70 7265
001c71 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001c72 7274
001c73 6d65
001c74 2065
001c75 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001c76 5b20
001c77 6625
001c78 0d5d
001c79 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001c7a 7075
001c7b 6570
001c7c 4c72
001c7d 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001c7e 7469
001c7f 2020
001c80 2020
001c81 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001c82 255b
001c83 5d66
001c84 0a0d
001c85 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001c86 7070
001c87 7265
001c88 6544
001c89 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001c8a 2079
001c8b 2020
001c8c 2020
001c8d 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001c8e 6425
001c8f 0d5d
001c90 000a
001c91 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001c92 6570
001c93 4572
001c94 7478
001c95 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001c96 656d
001c97 2020
001c98 2020
001c99 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001c9a 5d66
001c9b 0a0d
001c9c 3c00
001c9d 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001c9e 666e
001c9f 6769
001ca0 6552
001ca1 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001ca2 203e
001ca3 4f43
001ca4 464e
001ca5 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001ca6 5855
001ca7 4944
001ca8 6d20
001ca9 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001caa 6f6c
001cab 3163
001cac 6620
001cad 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001cae 656c
001caf 2064
001cb0 2528
001cb1 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001cb2 7962
001cb3 6574
001cb4 2973
001cb5 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001cb6 3c00
001cb7 6f63
001cb8 666e
001cb9 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001cba 6552
001cbb 6461
001cbc 203e
001cbd 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001cbe 4174
001cbf 7875
001cc0 6944
001cc1 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001cc2 6e6f
001cc3 6966
001cc4 2867
001cc5 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001cc6 6166
001cc7 6c69
001cc8 6465
001cc9 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001cca 0d00
001ccb 2d0a
001ccc 2d2d
001ccd 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001cce 4145
001ccf 2044
001cd0 4f43
001cd1 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001cd2 415f
001cd3 5855
001cd4 4944
001cd5 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001cd6 6425
001cd7 2d5d
001cd8 2d2d
001cd9 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001cda 6300
001cdb 6168
001cdc 6e6e
001cdd 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001cde 6e45
001cdf 6261
001ce0 656c
001ce1 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001ce2 2020
001ce3 305b
001ce4 2578
001ce5 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001ce6 5d58
001ce7 0a0d
001ce8 6100
001ce9 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001cea 6d72
001ceb 6544
001cec 616c
001ced 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001cee 2020
001cef 2020
001cf0 2020
001cf1 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001cf2 5d64
001cf3 0a0d
001cf4 3c00
001cf5 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001cf6 666e
001cf7 6769
001cf8 6552
001cf9 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001cfa 203e
001cfb 4f43
001cfc 464e
001cfd 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001cfe 5855
001cff 4f44
001d00 6d20
001d01 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001d02 6f6c
001d03 3163
001d04 6620
001d05 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001d06 656c
001d07 2064
001d08 2528
001d09 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001d0a 7962
001d0b 6574
001d0c 2973
001d0d 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001d0e 3c00
001d0f 6f63
001d10 666e
001d11 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001d12 6552
001d13 6461
001d14 203e
001d15 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001d16 4174
001d17 7875
001d18 6f44
001d19 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001d1a 6f43
001d1b 666e
001d1c 6769
001d1d 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001d1e 6620
001d1f 6961
001d20 656c
001d21 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001d22 000a
001d23 0a0d
001d24 2d2d
001d25 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001d26 4552
001d27 4441
001d28 4320
001d29 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001d2a 5f46
001d2b 5541
001d2c 4458
001d2d 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001d2e 255b
001d2f 5d64
001d30 2d2d
001d31 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001d32 000a
001d33 6863
001d34 6e61
001d35 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001d36 456c
001d37 616e
001d38 6c62
001d39 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001d3a 2020
001d3b 2020
001d3c 305b
001d3d 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001d3e 3230
001d3f 5d58
001d40 0a0d
001d41 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001d42 6174
001d43 6574
001d44 6e4f
001d45 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001d46 6e65
001d47 2074
001d48 2020
001d49 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001d4a 5b20
001d4b 6425
001d4c 0d5d
001d4d 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001d4e 7665
001d4f 6e65
001d50 5374
001d51 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001d52 6372
001d53 4e65
001d54 6d75
001d55 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001d56 2072
001d57 255b
001d58 5d64
001d59 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001d5a 6500
001d5b 6576
001d5c 746e
001d5d 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001d5e 7275
001d5f 6563
001d60 2020
001d61 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001d62 2020
001d63 0020
001d64 633c
001d65 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001d66 6966
001d67 5267
001d68 6165
001d69 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d6a 4320
001d6b 4e4f
001d6c 5f46
001d6d 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001d6e 4158
001d6f 2049
001d70 616d
001d71 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001d72 636f
001d73 2031
001d74 6166
001d75 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001d76 6465
001d77 2820
001d78 6425
001d79 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001d7a 7479
001d7b 7365
001d7c 0d29
001d7d 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001d7e 633c
001d7f 6e6f
001d80 6966
001d81 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d82 6165
001d83 3e64
001d84 6720
001d85 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001d86 7541
001d87 4178
001d88 6e69
001d89 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001d8a 666e
001d8b 6769
001d8c 2928
001d8d 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001d8e 6961
001d8f 656c
001d90 0d64
001d91 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001d92 0a0d
001d93 2d2d
001d94 202d
001d95 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001d96 4441
001d97 4320
001d98 4e4f
001d99 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d9a 5541
001d9b 4158
001d9c 2049
001d9d 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001d9e 5d64
001d9f 2d2d
001da0 0d2d
001da1 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001da2 6c61
001da3 7261
001da4 446d
001da5 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001da6 7961
001da7 2020
001da8 2020
001da9 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001daa 5b20
001dab 6625
001dac 0d5d
001dad 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001dae 633c
001daf 6e6f
001db0 6966
001db1 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001db2 6165
001db3 3e64
001db4 4320
001db5 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001db6 5f46
001db7 5541
001db8 4158
001db9 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001dba 616d
001dbb 6c6c
001dbc 636f
001dbd 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001dbe 6166
001dbf 6c69
001dc0 6465
001dc1 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001dc2 6425
001dc3 6220
001dc4 7479
001dc5 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001dc6 0d29
001dc7 000a
001dc8 633c
001dc9 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001dca 6966
001dcb 5267
001dcc 6165
001dcd 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001dce 6720
001dcf 7465
001dd0 7541
001dd1 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001dd2 756f
001dd3 4374
001dd4 6e6f
001dd5 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001dd6 2867
001dd7 2029
001dd8 6166
001dd9 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001dda 6465
001ddb 0a0d
001ddc 0d00
001ddd 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001dde 2d2d
001ddf 5220
001de0 4145
001de1 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001de2 4f43
001de3 464e
001de4 415f
001de5 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001de6 4f41
001de7 5b20
001de8 6425
001de9 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001dea 2d2d
001deb 0a0d
001dec 6c00
001ded 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001dee 6c65
001def 6e4f
001df0 7645
001df1 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001df2 2074
001df3 2020
001df4 2020
001df5 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001df6 6625
001df7 0d5d
001df8 000a
001df9 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001dfa 6e6f
001dfb 6966
001dfc 5267
001dfd 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001dfe 3e64
001dff 4320
001e00 4e4f
001e01 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001e02 5542
001e03 5a5a
001e04 5245
001e05 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001e06 6c61
001e07 6f6c
001e08 3163
001e09 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001e0a 6961
001e0b 656c
001e0c 2064
001e0d 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001e0e 2064
001e0f 7962
001e10 6574
001e11 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001e12 0a0d
001e13 3c00
001e14 6f63
001e15 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001e16 6769
001e17 6552
001e18 6461
001e19 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001e1a 6567
001e1b 4274
001e1c 7a75
001e1d 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001e1e 4372
001e1f 6e6f
001e20 6966
001e21 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001e22 2029
001e23 6166
001e24 6c69
001e25 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001e26 0a0d
001e27 0d00
001e28 2d0a
001e29 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001e2a 5220
001e2b 4145
001e2c 2044
001e2d 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001e2e 464e
001e2f 425f
001e30 5a55
001e31 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001e32 2052
001e33 2d2d
001e34 0d2d
001e35 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001e36 6e65
001e37 6261
001e38 656c
001e39 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001e3a 2020
001e3b 2020
001e3c 2020
001e3d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001e3e 2020
001e3f 305b
001e40 2578
001e41 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001e42 5d58
001e43 0a0d
001e44 3c00
001e45 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001e46 666e
001e47 6769
001e48 6552
001e49 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001e4a 203e
001e4b 4f43
001e4c 464e
001e4d 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001e4e 564e
001e4f 4c41
001e50 5241
001e51 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001e52 616d
001e53 6c6c
001e54 636f
001e55 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001e56 6166
001e57 6c69
001e58 6465
001e59 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001e5a 6425
001e5b 6220
001e5c 7479
001e5d 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001e5e 0d29
001e5f 000a
001e60 633c
001e61 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001e62 6966
001e63 5267
001e64 6165
001e65 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001e66 6720
001e67 7465
001e68 6e45
001e69 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001e6a 616c
001e6b 6d72
001e6c 6f43
001e6d 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001e6e 6769
001e6f 2928
001e70 6620
001e71 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001e72 656c
001e73 0d64
001e74 000a
001e75 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001e76 2d2d
001e77 202d
001e78 4552
001e79 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001e7a 4320
001e7b 4e4f
001e7c 5f46
001e7d 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001e7e 4156
001e7f 414c
001e80 4d52
001e81 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001e82 2d2d
001e83 0a0d
001e84 6700
001e85 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001e86 5352
001e87 4953
001e88 654c
001e89 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001e8a 206c
001e8b 2020
001e8c 2020
001e8d 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001e8e 6625
001e8f 0d5d
001e90 000a
001e91 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001e92 436d
001e93 6572
001e94 6964
001e95 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001e96 6c61
001e97 6e61
001e98 6563
001e99 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001e9a 255b
001e9b 5d64
001e9c 0a0d
001e9d 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001e9e 7461
001e9f 6574
001ea0 7972
001ea1 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001ea2 6576
001ea3 206c
001ea4 2020
001ea5 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001ea6 5b20
001ea7 6625
001ea8 0d5d
001ea9 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001eaa 6f63
001eab 6d6d
001eac 6953
001ead 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001eae 6c61
001eaf 654c
001eb0 6576
001eb1 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001eb2 2020
001eb3 255b
001eb4 5d66
001eb5 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001eb6 6300
001eb7 6d6f
001eb8 4c6d
001eb9 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001eba 4474
001ebb 6c65
001ebc 7961
001ebd 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001ebe 2020
001ebf 5b20
001ec0 6425
001ec1 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001ec2 000a
001ec3 656d
001ec4 6f6d
001ec5 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001ec6 694d
001ec7 206e
001ec8 2020
001ec9 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001eca 2020
001ecb 2020
001ecc 255b
001ecd 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001ece 0a0d
001ecf 3c00
001ed0 6f63
001ed1 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ed2 6769
001ed3 6552
001ed4 6461
001ed5 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001ed6 4f43
001ed7 464e
001ed8 535f
001ed9 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001eda 5254
001edb 5045
001edc 524f
001edd 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001ede 616d
001edf 6c6c
001ee0 636f
001ee1 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001ee2 6166
001ee3 6c69
001ee4 6465
001ee5 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001ee6 6425
001ee7 6220
001ee8 7479
001ee9 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001eea 0d29
001eeb 000a
001eec 633c
001eed 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001eee 6966
001eef 5267
001ef0 6165
001ef1 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001ef2 6720
001ef3 7465
001ef4 7453
001ef5 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001ef6 7375
001ef7 6552
001ef8 6f70
001ef9 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001efa 6f43
001efb 666e
001efc 6769
001efd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001efe 6620
001eff 6961
001f00 656c
001f01 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001f02 000a
001f03 0a0d
001f04 2d2d
001f05 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f06 4552
001f07 4441
001f08 4320
001f09 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001f0a 5f46
001f0b 5453
001f0c 5441
001f0d 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001f0e 4f50
001f0f 5452
001f10 2d20
001f11 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001f12 0a0d
001f13 6100
001f14 6363
001f15 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001f16 2020
001f17 2020
001f18 5b20
001f19 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001f1a 3025
001f1b 5832
001f1c 0d5d
001f1d 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001f1e 6e69
001f1f 7674
001f20 2020
001f21 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001f22 2020
001f23 255b
001f24 5d64
001f25 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001f26 3c00
001f27 6f63
001f28 666e
001f29 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f2a 6552
001f2b 6461
001f2c 203e
001f2d 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001f2e 6e6b
001f2f 776f
001f30 206e
001f31 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001f32 666e
001f33 6769
001f34 7275
001f35 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001f36 6f69
001f37 206e
001f38 7974
001f39 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001f3a 5b20
001f3b 7830
001f3c 3025
001f3d 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001f3e 0d5d
001f3f 000a
001f40 0a0d
001f41 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001f42 2d2d
001f43 5720
001f44 4952
001f45 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001f46 4320
001f47 4e4f
001f48 4946
001f49 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001f4a 6170
001f4b 6b63
001f4c 7465
001f4d 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001f4e 6425
001f4f 2d29
001f50 2d2d
001f51 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001f52 000a
001f53 0a0d
001f54 2d2d
001f55 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f56 7257
001f57 7469
001f58 2065
001f59 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f5a 464e
001f5b 505f
001f5c 4f52
001f5d 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001f5e 5452
001f5f 4549
001f60 2053
001f61 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001f62 002d
001f63 633c
001f64 6e6f
001f65 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001f66 5767
001f67 6972
001f68 6574
001f69 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001f6a 6573
001f6b 5074
001f6c 6f72
001f6d 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001f6e 7472
001f6f 6569
001f70 4373
001f71 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001f72 6966
001f73 2867
001f74 2029
001f75 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001f76 6c69
001f77 6465
001f78 0a0d
001f79 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001f7a 2d0a
001f7b 2d2d
001f7c 5720
001f7d 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001f7e 6574
001f7f 4320
001f80 4e4f
001f81 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001f82 504f
001f83 5245
001f84 5441
001f85 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001f86 2d2d
001f87 002d
001f88 633c
001f89 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f8a 6966
001f8b 5767
001f8c 6972
001f8d 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f8e 203e
001f8f 6573
001f90 4f74
001f91 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001f92 6172
001f93 6974
001f94 676e
001f95 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001f96 666e
001f97 6769
001f98 2928
001f99 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f9a 6961
001f9b 656c
001f9c 0d64
001f9d 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f9e 0a0d
001f9f 2d2d
001fa0 202d
001fa1 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001fa2 7469
001fa3 2065
001fa4 4f43
001fa5 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001fa6 535f
001fa7 4e45
001fa8 4f53
001fa9 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001faa 2528
001fab 2964
001fac 2d20
001fad 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001fae 3c00
001faf 6f63
001fb0 666e
001fb1 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001fb2 7257
001fb3 7469
001fb4 3e65
001fb5 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001fb6 7465
001fb7 6553
001fb8 736e
001fb9 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001fba 6f43
001fbb 666e
001fbc 6769
001fbd 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001fbe 6620
001fbf 6961
001fc0 656c
001fc1 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001fc2 000a
001fc3 0a0d
001fc4 2d2d
001fc5 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001fc6 7257
001fc7 7469
001fc8 2065
001fc9 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001fca 464e
001fcb 415f
001fcc 5855
001fcd 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001fce 2820
001fcf 6425
001fd0 2029
001fd1 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001fd2 002d
001fd3 633c
001fd4 6e6f
001fd5 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001fd6 5767
001fd7 6972
001fd8 6574
001fd9 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001fda 6573
001fdb 4174
001fdc 7875
001fdd 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001fde 436e
001fdf 6e6f
001fe0 6966
001fe1 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001fe2 2029
001fe3 6166
001fe4 6c69
001fe5 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001fe6 0a0d
001fe7 0d00
001fe8 2d0a
001fe9 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001fea 5720
001feb 6972
001fec 6574
001fed 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001fee 4e4f
001fef 5f46
001ff0 5541
001ff1 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001ff2 204f
001ff3 2528
001ff4 2964
001ff5 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001ff6 2d2d
001ff7 3c00
001ff8 6f63
001ff9 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ffa 6769
001ffb 7257
001ffc 7469
001ffd 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001ffe 7320
001fff 7465
002000 7541
002001 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
002002 756f
002003 4374
002004 6e6f
002005 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
002006 2867
002007 2029
002008 6166
002009 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
00200a 6465
00200b 0a0d
00200c 0d00
00200d 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00200e 2d2d
00200f 5720
002010 6972
002011 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
002012 4320
002013 4e4f
002014 5f46
002015 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
002016 4158
002017 2049
002018 2528
002019 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
00201a 2d20
00201b 2d2d
00201c 3c00
00201d 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
00201e 666e
00201f 6769
002020 7257
002021 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
002022 3e65
002023 7320
002024 7465
002025 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
002026 4178
002027 6e69
002028 6f43
002029 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
00202a 6769
00202b 2928
00202c 6620
00202d 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00202e 656c
00202f 0d64
002030 000a
002031 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
002032 2d2d
002033 202d
002034 7257
002035 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002036 2065
002037 4f43
002038 464e
002039 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
00203a 5855
00203b 4f41
00203c 2820
00203d 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
00203e 2029
00203f 2d2d
002040 002d
002041 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
002042 6e6f
002043 6966
002044 5767
002045 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002046 6574
002047 203e
002048 6573
002049 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
00204a 7875
00204b 6f41
00204c 7475
00204d 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
00204e 666e
00204f 6769
002050 2928
002051 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
002052 6961
002053 656c
002054 0d64
002055 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002056 0a0d
002057 2d2d
002058 202d
002059 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
00205a 7469
00205b 2065
00205c 4f43
00205d 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
00205e 425f
00205f 5a55
002060 455a
002061 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
002062 2d2d
002063 002d
002064 633c
002065 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
002066 6966
002067 5767
002068 6972
002069 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
00206a 203e
00206b 6573
00206c 4274
00206d 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
00206e 657a
00206f 4372
002070 6e6f
002071 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
002072 2867
002073 2029
002074 6166
002075 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002076 6465
002077 0a0d
002078 0d00
002079 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00207a 2d2d
00207b 5720
00207c 6972
00207d 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
00207e 4320
00207f 4e4f
002080 5f46
002081 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
002082 4156
002083 414c
002084 4d52
002085 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
002086 2d2d
002087 3c00
002088 6f63
002089 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
00208a 6769
00208b 7257
00208c 7469
00208d 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
00208e 7320
00208f 7465
002090 6e45
002091 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
002092 616c
002093 6d72
002094 6f43
002095 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
002096 6769
002097 2928
002098 6620
002099 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
00209a 656c
00209b 0d64
00209c 000a
00209d 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00209e 2d2d
00209f 202d
0020a0 7257
0020a1 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
0020a2 2065
0020a3 4f43
0020a4 464e
0020a5 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
0020a6 4154
0020a7 5254
0020a8 5045
0020a9 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
0020aa 2054
0020ab 2d2d
0020ac 002d
0020ad 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
0020ae 6e6f
0020af 6966
0020b0 5767
0020b1 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
0020b2 6574
0020b3 203e
0020b4 6573
0020b5 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
0020b6 6174
0020b7 7574
0020b8 5273
0020b9 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
0020ba 726f
0020bb 4374
0020bc 6e6f
0020bd 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
0020be 2867
0020bf 2029
0020c0 6166
0020c1 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0020c2 6465
0020c3 0a0d
0020c4 3c00
0020c5 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0020c6 4c74
0020c7 676f
0020c8 614d
0020c9 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
0020ca 7570
0020cb 616c
0020cc 6574
0020cd 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
0020ce 6568
0020cf 616d
0020d0 203e
0020d1 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
0020d2 656d
0020d3 7020
0020d4 7265
0020d5 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
0020d6 2064
0020d7 7265
0020d8 6f72
0020d9 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
0020da 7473
0020db 7261
0020dc 5b74
0020dd 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
0020de 5d64
0020df 2d20
0020e0 7320
0020e1 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
0020e2 5b70
0020e3 6c25
0020e4 5d64
0020e5 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0020e6 3c00
0020e7 6573
0020e8 5474
0020e9 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
0020ea 5365
0020eb 6e79
0020ec 5363
0020ed 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
0020ee 6d65
0020ef 3e61
0020f0 4720
0020f1 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
0020f2 3020
0020f3 5520
0020f4 696e
0020f5 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
0020f6 6974
0020f7 656d
0020f8 7320
0020f9 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
0020fa 706d
0020fb 0a0d
0020fc 3c00
0020fd 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
0020fe 5474
0020ff 6d69
002100 5365
002101 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
002102 5363
002103 6863
002104 6d65
002105 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
002106 5220
002107 6365
002108 6965
002109 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
00210a 2064
00210b 6974
00210c 656d
00210d 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
00210e 6e79
00210f 2e63
002110 7020
002111 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
002112 656b
002113 2074
002114 6c25
002115 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
002116 000a
002117 733c
002118 7465
002119 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
00211a 656d
00211b 7953
00211c 636e
00211d 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
00211e 6568
00211f 616d
002120 203e
002121 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
002122 5f43
002123 6573
002124 4274
002125 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
002126 7261
002127 2879
002128 6c25
002129 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
00212a 6620
00212b 6961
00212c 656c
00212d 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00212e 000a
00212f 733c
002130 7465
002131 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
002132 6574
002133 6c41
002134 7261
002135 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002136 7020
002137 7265
002138 616d
002139 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
00213a 746e
00213b 6d20
00213c 7475
00213d 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
00213e 6c61
00213f 7261
002140 0d6d
002141 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
002142 733c
002143 7465
002144 754d
002145 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002146 6c41
002147 7261
002148 3e6d
002149 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
00214a 766e
00214b 6c61
00214c 6469
00214d 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
00214e 7265
00214f 6f69
002150 2064
002151 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
002152 646c
002153 0d29
002154 000a
002155 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002156 7465
002157 754d
002158 6574
002159 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
00215a 7261
00215b 3e6d
00215c 6d20
00215d 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
00215e 2065
00215f 6c61
002160 7261
002161 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
002162 6f66
002163 2072
002164 6c25
002165 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002166 6573
002167 6f63
002168 646e
002169 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
00216a 3c00
00216b 6573
00216c 4d74
00216d 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
00216e 4165
00216f 616c
002170 6d72
002171 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002172 4c41
002173 5241
002174 5f4d
002175 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002176 6574
002177 2528
002178 646c
002179 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
00217a 6166
00217b 6c69
00217c 6465
00217d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3357): warning: .cseg .db misalignment - padding zero byte
00217e 0000      	.DB  0x0
                 _0x18001D:
00217f 0000
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3359): warning: .cseg .db misalignment - padding zero byte
002180 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
002181 0a0d
002182 0a0d
002183 453c
002184 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
002185 615f
002186 6464
002187 6157
002188 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
002189 7551
00218a 7565
00218b 3e65
00218c 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
00218d 5241
00218e 494e
00218f 474e
002190 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
002191 5720
002192 6961
002193 2074
002194 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
002195 7565
002196 2065
002197 5546
002198 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
002199 0a0d
00219a 0a0d
00219b 3c00
00219c 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
00219d 5f48
00219e 6461
00219f 5764
0021a0 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
0021a1 5174
0021a2 6575
0021a3 6575
0021a4 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
0021a5 616d
0021a6 6c6c
0021a7 636f
0021a8 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
0021a9 2964
0021aa 6620
0021ab 6961
0021ac 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0021ad 0d64
0021ae 000a
0021af 0a0d
0021b0 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
0021b1 2020
0021b2 2020
0021b3 2020
0021b4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b5 2020
0021b6 2020
0021b7 2020
0021b8 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021b9 2020
0021ba 2020
0021bb 2020
0021bc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021bd 2020
0021be 2020
0021bf 2020
0021c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c1 2020
0021c2 4120
0021c3 6464
0021c4 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
0021c5 2820
0021c6 3025
0021c7 5832
0021c8 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
0021c9 6f74
0021ca 6520
0021cb 6874
0021cc 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
0021cd 6961
0021ce 5174
0021cf 6575
0021d0 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0021d1 255b
0021d2 5d64
0021d3 0a0d
0021d4 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0021d5 200a
0021d6 2020
0021d7 2020
0021d8 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021d9 2020
0021da 2020
0021db 2020
0021dc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021dd 2020
0021de 2020
0021df 2020
0021e0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e1 2020
0021e2 2020
0021e3 2020
0021e4 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021e5 2020
0021e6 2020
0021e7 2020
0021e8 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0021e9 6f6d
0021ea 6576
0021eb 2064
0021ec 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0021ed 3230
0021ee 2958
0021ef 7420
0021f0 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0021f1 7465
0021f2 5f68
0021f3 6177
0021f4 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0021f5 7551
0021f6 7565
0021f7 5b65
0021f8 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0021f9 0d5d
0021fa 000a
0021fb 0a0d
0021fc 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
0021fd 4157
0021fe 4e52
0021ff 4e49
002200 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002201 203a
002202 5445
002203 5f48
002204 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
002205 6f6d
002206 6576
002207 6157
002208 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
002209 7551
00220a 7565
00220b 2865
00220c 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
00220d 5832
00220e 2029
00220f 6f6e
002210 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
002211 6f66
002212 6e75
002213 2164
002214 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
002215 0d0a
002216 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A001A:
002217 ffff
002218 ffff
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3400): warning: .cseg .db misalignment - padding zero byte
002219 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x1A001B:
00221a 0000
00221b 0000
00221c 0000
00221d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00221e 0000
00221f 0000
002220 0000
002221 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002222 0000
002223 0000
002224 0000
002225 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002226 0000
002227 0000
002228 0000
002229 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222a 0000
00222b 0000
00222c 0000
00222d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00222e 0000
00222f 0000
002230 0000
002231 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002232 0000
002233 0000
002234 0000
002235 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002236 0000
002237 0000
002238 0000
002239 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00223a 0000
00223b 0000
00223c 0000
00223d 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x1A0000:
00223e 695b
00223f 6553
002240 736e
002241 726f      	.DB  0x5B,0x69,0x53,0x65,0x6E,0x73,0x6F,0x72
002242 6547
002243 5674
002244 6c61
002245 6575      	.DB  0x47,0x65,0x74,0x56,0x61,0x6C,0x75,0x65
002246 645d
002247 7461
002248 5b61
002249 6300      	.DB  0x5D,0x64,0x61,0x74,0x61,0x5B,0x0,0x63
00224a 2568
00224b 3a64
00224c 2520
00224d 3430      	.DB  0x68,0x25,0x64,0x3A,0x20,0x25,0x30,0x34
00224e 2064
00224f 6300
002250 2568
002251 3a64      	.DB  0x64,0x20,0x0,0x63,0x68,0x25,0x64,0x3A
002252 2520
002253 3430
002254 2c64
002255 0020      	.DB  0x20,0x25,0x30,0x34,0x64,0x2C,0x20,0x0
002256 0d5d
002257 000a
002258 733c
002259 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00225a 6f73
00225b 5272
00225c 6165
00225d 3e64      	.DB  0x73,0x6F,0x72,0x52,0x65,0x61,0x64,0x3E
00225e 4520
00225f 5252
002260 203a
002261 6863      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x63,0x68
002262 7620
002263 6c61
002264 6575
002265 6f20      	.DB  0x20,0x76,0x61,0x6C,0x75,0x65,0x20,0x6F
002266 7475
002267 6f20
002268 2066
002269 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
00226a 676e
00226b 0d65
00226c 000a
00226d 6554      	.DB  0x6E,0x67,0x65,0xD,0xA,0x0,0x54,0x65
00226e 706d
00226f 6152
002270 2877
002271 6625      	.DB  0x6D,0x70,0x52,0x61,0x77,0x28,0x25,0x66
002272 2c29
002273 5420
002274 6d65
002275 5270      	.DB  0x29,0x2C,0x20,0x54,0x65,0x6D,0x70,0x52
002276 6665
002277 2528
002278 2966
002279 202c      	.DB  0x65,0x66,0x28,0x25,0x66,0x29,0x2C,0x20
00227a 664f
00227b 7366
00227c 7465
00227d 2528      	.DB  0x4F,0x66,0x66,0x73,0x65,0x74,0x28,0x25
00227e 2966
00227f 0a0d
002280 3c00
002281 6573      	.DB  0x66,0x29,0xD,0xA,0x0,0x3C,0x73,0x65
002282 736e
002283 726f
002284 6143
002285 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
002286 7262
002287 7461
002288 3165
002289 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x31,0x3E,0x20
00228a 4241
00228b 524f
00228c 3a54
00228d 7320      	.DB  0x41,0x42,0x4F,0x52,0x54,0x3A,0x20,0x73
00228e 6e65
00228f 6f73
002290 2072
002291 6863      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x20,0x63,0x68
002292 2520
002293 2064
002294 7369
002295 6420      	.DB  0x20,0x25,0x64,0x20,0x69,0x73,0x20,0x64
002296 7369
002297 6261
002298 656c
002299 0a0d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0xD,0xA
00229a 3c00
00229b 6573
00229c 736e
00229d 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00229e 6143
00229f 696c
0022a0 7262
0022a1 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
0022a2 3165
0022a3 203e
0022a4 4241
0022a5 524f      	.DB  0x65,0x31,0x3E,0x20,0x41,0x42,0x4F,0x52
0022a6 3a54
0022a7 7320
0022a8 6e65
0022a9 6f73      	.DB  0x54,0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F
0022aa 2072
0022ab 6863
0022ac 2520
0022ad 2064      	.DB  0x72,0x20,0x63,0x68,0x20,0x25,0x64,0x20
0022ae 7265
0022af 6f72
0022b0 2872
0022b1 7830      	.DB  0x65,0x72,0x72,0x6F,0x72,0x28,0x30,0x78
0022b2 3025
0022b3 5832
0022b4 0d29
0022b5 000a      	.DB  0x25,0x30,0x32,0x58,0x29,0xD,0xA,0x0
0022b6 733c
0022b7 6e65
0022b8 6f73
0022b9 4372      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x43
0022ba 6c61
0022bb 6269
0022bc 6172
0022bd 6574      	.DB  0x61,0x6C,0x69,0x62,0x72,0x61,0x74,0x65
0022be 3e32
0022bf 4120
0022c0 4f42
0022c1 5452      	.DB  0x32,0x3E,0x20,0x41,0x42,0x4F,0x52,0x54
0022c2 203a
0022c3 6573
0022c4 736e
0022c5 726f      	.DB  0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
0022c6 6320
0022c7 2068
0022c8 6425
0022c9 4e20      	.DB  0x20,0x63,0x68,0x20,0x25,0x64,0x20,0x4E
0022ca 206f
0022cb 6573
0022cc 2074
0022cd 6f70      	.DB  0x6F,0x20,0x73,0x65,0x74,0x20,0x70,0x6F
0022ce 6e69
0022cf 2074
0022d0 6f66
0022d1 6e75      	.DB  0x69,0x6E,0x74,0x20,0x66,0x6F,0x75,0x6E
0022d2 0d64
0022d3 000a
0022d4 733c
0022d5 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0022d6 6f73
0022d7 4372
0022d8 6c61
0022d9 6269      	.DB  0x73,0x6F,0x72,0x43,0x61,0x6C,0x69,0x62
0022da 6172
0022db 6574
0022dc 3e32
0022dd 2d20      	.DB  0x72,0x61,0x74,0x65,0x32,0x3E,0x20,0x2D
0022de 202d
0022df 4143
0022e0 5f4c
0022e1 5845      	.DB  0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45,0x58
0022e2 4f54
0022e3 4646
0022e4 4553
0022e5 2054      	.DB  0x54,0x4F,0x46,0x46,0x53,0x45,0x54,0x20
0022e6 2d2d
0022e7 0a0d
0022e8 3c00
0022e9 6573      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73,0x65
0022ea 736e
0022eb 726f
0022ec 6143
0022ed 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
0022ee 7262
0022ef 7461
0022f0 3265
0022f1 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
0022f2 2d2d
0022f3 2d43
0022f4 3e2d
0022f5 2520      	.DB  0x2D,0x2D,0x43,0x2D,0x2D,0x3E,0x20,0x25
0022f6 0d66
0022f7 000a
0022f8 733c
0022f9 6e65      	.DB  0x66,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0022fa 6f73
0022fb 4372
0022fc 6c61
0022fd 6269      	.DB  0x73,0x6F,0x72,0x43,0x61,0x6C,0x69,0x62
0022fe 6172
0022ff 6574
002300 3e32
002301 2d20      	.DB  0x72,0x61,0x74,0x65,0x32,0x3E,0x20,0x2D
002302 202d
002303 4143
002304 5f4c
002305 5845      	.DB  0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45,0x58
002306 4c54
002307 4e49
002308 4145
002309 2052      	.DB  0x54,0x4C,0x49,0x4E,0x45,0x41,0x52,0x20
00230a 2d2d
00230b 0a0d
00230c 3c00
00230d 6573      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73,0x65
00230e 736e
00230f 726f
002310 6143
002311 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
002312 7262
002313 7461
002314 3265
002315 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
002316 2d2d
002317 2d42
002318 3e2d
002319 2520      	.DB  0x2D,0x2D,0x42,0x2D,0x2D,0x3E,0x20,0x25
00231a 0d66
00231b 000a
00231c 733c
00231d 6e65      	.DB  0x66,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00231e 6f73
00231f 4372
002320 6c61
002321 6269      	.DB  0x73,0x6F,0x72,0x43,0x61,0x6C,0x69,0x62
002322 6172
002323 6574
002324 3e32
002325 2d20      	.DB  0x72,0x61,0x74,0x65,0x32,0x3E,0x20,0x2D
002326 202d
002327 4143
002328 5f4c
002329 5845      	.DB  0x2D,0x20,0x43,0x41,0x4C,0x5F,0x45,0x58
00232a 5054
00232b 4c4f
00232c 4e59
00232d 4d4f      	.DB  0x54,0x50,0x4F,0x4C,0x59,0x4E,0x4F,0x4D
00232e 4149
00232f 204c
002330 2d2d
002331 0a0d      	.DB  0x49,0x41,0x4C,0x20,0x2D,0x2D,0xD,0xA
002332 3c00
002333 6573
002334 736e
002335 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
002336 6143
002337 696c
002338 7262
002339 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
00233a 3265
00233b 203e
00233c 2d2d
00233d 2d41      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x41,0x2D
00233e 3e2d
00233f 2520
002340 0d66
002341 000a      	.DB  0x2D,0x3E,0x20,0x25,0x66,0xD,0xA,0x0
002342 733c
002343 6e65
002344 6f73
002345 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
002346 7465
002347 7543
002348 7272
002349 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
00234a 5374
00234b 7465
00234c 6f50
00234d 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
00234e 3e74
00234f 7420
002350 6d65
002351 5270      	.DB  0x74,0x3E,0x20,0x74,0x65,0x6D,0x70,0x52
002352 6665
002353 2031
002354 203d
002355 255b      	.DB  0x65,0x66,0x31,0x20,0x3D,0x20,0x5B,0x25
002356 5d66
002357 255b
002358 5d66
002359 0a0d      	.DB  0x66,0x5D,0x5B,0x25,0x66,0x5D,0xD,0xA
00235a 3c00
00235b 6573
00235c 736e
00235d 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00235e 6547
00235f 4374
002360 7275
002361 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
002362 746e
002363 6553
002364 5074
002365 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
002366 746e
002367 203e
002368 6574
002369 706d      	.DB  0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D,0x70
00236a 6552
00236b 3166
00236c 6e20
00236d 746f      	.DB  0x52,0x65,0x66,0x31,0x20,0x6E,0x6F,0x74
00236e 7320
00236f 7465
002370 5b20
002371 2e30      	.DB  0x20,0x73,0x65,0x74,0x20,0x5B,0x30,0x2E
002372 3030
002373 0d5d
002374 000a
002375 2e30      	.DB  0x30,0x30,0x5D,0xD,0xA,0x0,0x30,0x2E
002376 3030
002377 3c00
002378 6573
002379 736e      	.DB  0x30,0x30,0x0,0x3C,0x73,0x65,0x6E,0x73
00237a 726f
00237b 6547
00237c 4374
00237d 7275      	.DB  0x6F,0x72,0x47,0x65,0x74,0x43,0x75,0x72
00237e 6572
00237f 746e
002380 6553
002381 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
002382 696f
002383 746e
002384 203e
002385 6574      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74,0x65
002386 706d
002387 6552
002388 3266
002389 3d20      	.DB  0x6D,0x70,0x52,0x65,0x66,0x32,0x20,0x3D
00238a 5b20
00238b 6625
00238c 5b5d
00238d 6625      	.DB  0x20,0x5B,0x25,0x66,0x5D,0x5B,0x25,0x66
00238e 0d5d
00238f 000a
002390 733c
002391 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002392 6f73
002393 4772
002394 7465
002395 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
002396 7272
002397 6e65
002398 5374
002399 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
00239a 6f50
00239b 6e69
00239c 3e74
00239d 7420      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x74
00239e 6d65
00239f 5270
0023a0 6665
0023a1 2032      	.DB  0x65,0x6D,0x70,0x52,0x65,0x66,0x32,0x20
0023a2 6f6e
0023a3 2074
0023a4 6573
0023a5 2074      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x65,0x74,0x20
0023a6 305b
0023a7 302e
0023a8 5d30
0023a9 0a0d      	.DB  0x5B,0x30,0x2E,0x30,0x30,0x5D,0xD,0xA
0023aa 3c00
0023ab 6573
0023ac 736e
0023ad 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0023ae 6547
0023af 4374
0023b0 7275
0023b1 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
0023b2 746e
0023b3 6553
0023b4 5074
0023b5 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
0023b6 746e
0023b7 203e
0023b8 6574
0023b9 706d      	.DB  0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D,0x70
0023ba 6552
0023bb 3366
0023bc 3d20
0023bd 5b20      	.DB  0x52,0x65,0x66,0x33,0x20,0x3D,0x20,0x5B
0023be 6625
0023bf 5b5d
0023c0 6625
0023c1 0d5d      	.DB  0x25,0x66,0x5D,0x5B,0x25,0x66,0x5D,0xD
0023c2 000a
0023c3 733c
0023c4 6e65
0023c5 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0023c6 4772
0023c7 7465
0023c8 7543
0023c9 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
0023ca 6e65
0023cb 5374
0023cc 7465
0023cd 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
0023ce 6e69
0023cf 3e74
0023d0 7420
0023d1 6d65      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D
0023d2 5270
0023d3 6665
0023d4 2033
0023d5 6f6e      	.DB  0x70,0x52,0x65,0x66,0x33,0x20,0x6E,0x6F
0023d6 2074
0023d7 6573
0023d8 2074
0023d9 305b      	.DB  0x74,0x20,0x73,0x65,0x74,0x20,0x5B,0x30
0023da 302e
0023db 5d30
0023dc 0a0d
0023dd 3c00      	.DB  0x2E,0x30,0x30,0x5D,0xD,0xA,0x0,0x3C
0023de 6573
0023df 736e
0023e0 726f
0023e1 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
0023e2 4374
0023e3 7275
0023e4 6572
0023e5 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
0023e6 6553
0023e7 5074
0023e8 696f
0023e9 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
0023ea 203e
0023eb 6e69
0023ec 6176
0023ed 696c      	.DB  0x3E,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0023ee 2064
0023ef 6170
0023f0 6172
0023f1 746d      	.DB  0x64,0x20,0x70,0x61,0x72,0x61,0x6D,0x74
0023f2 7265
0023f3 7020
0023f4 746e
0023f5 3e2d      	.DB  0x65,0x72,0x20,0x70,0x6E,0x74,0x2D,0x3E
0023f6 255b
0023f7 5d64
0023f8 0a0d
0023f9 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
0023fa 6573
0023fb 736e
0023fc 726f
0023fd 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
0023fe 4374
0023ff 7275
002400 6572
002401 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
002402 6553
002403 5074
002404 696f
002405 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
002406 203e
002407 6572
002408 6461
002409 7620      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x76
00240a 6c61
00240b 2528
00240c 2964
00240d 3d20      	.DB  0x61,0x6C,0x28,0x25,0x64,0x29,0x20,0x3D
00240e 5b20
00240f 7325
002410 0d5d
002411 000a      	.DB  0x20,0x5B,0x25,0x73,0x5D,0xD,0xA,0x0
002412 733c
002413 6e65
002414 6f73
002415 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
002416 7465
002417 7543
002418 7272
002419 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
00241a 5374
00241b 7465
00241c 6f50
00241d 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
00241e 3e74
00241f 6f20
002420 7475
002421 6f20      	.DB  0x74,0x3E,0x20,0x6F,0x75,0x74,0x20,0x6F
002422 2066
002423 6f63
002424 646e
002425 7469      	.DB  0x66,0x20,0x63,0x6F,0x6E,0x64,0x69,0x74
002426 6f69
002427 206e
002428 6176
002429 536c      	.DB  0x69,0x6F,0x6E,0x20,0x76,0x61,0x6C,0x53
00242a 7274
00242b 3d20
00242c 2720
00242d 7325      	.DB  0x74,0x72,0x20,0x3D,0x20,0x27,0x25,0x73
00242e 0027
00242f 733c
002430 6e65
002431 6f73      	.DB  0x27,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
002432 4772
002433 7465
002434 7543
002435 7272      	.DB  0x72,0x47,0x65,0x74,0x43,0x75,0x72,0x72
002436 6e65
002437 5374
002438 7465
002439 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
00243a 6e69
00243b 3e74
00243c 6220
00243d 6675      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x62,0x75,0x66
00243e 7220
00243f 6165
002440 0064
002441 255b      	.DB  0x20,0x72,0x65,0x61,0x64,0x0,0x5B,0x25
002442 5d64
002443 3c00
002444 6573
002445 736e      	.DB  0x64,0x5D,0x0,0x3C,0x73,0x65,0x6E,0x73
002446 726f
002447 6553
002448 4374
002449 7275      	.DB  0x6F,0x72,0x53,0x65,0x74,0x43,0x75,0x72
00244a 6572
00244b 746e
00244c 6553
00244d 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
00244e 696f
00244f 746e
002450 203e
002451 4241      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x41,0x42
002452 524f
002453 3a54
002454 7320
002455 6e65      	.DB  0x4F,0x52,0x54,0x3A,0x20,0x73,0x65,0x6E
002456 6f73
002457 2072
002458 6863
002459 2520      	.DB  0x73,0x6F,0x72,0x20,0x63,0x68,0x20,0x25
00245a 2064
00245b 7369
00245c 6420
00245d 7369      	.DB  0x64,0x20,0x69,0x73,0x20,0x64,0x69,0x73
00245e 6261
00245f 656c
002460 0a0d
002461 3c00      	.DB  0x61,0x62,0x6C,0x65,0xD,0xA,0x0,0x3C
002462 6573
002463 736e
002464 726f
002465 6553      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x53,0x65
002466 4374
002467 7275
002468 6572
002469 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
00246a 6553
00246b 5074
00246c 696f
00246d 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
00246e 203e
00246f 4241
002470 524f
002471 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
002472 7320
002473 6e65
002474 6f73
002475 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
002476 6863
002477 2520
002478 2064
002479 7265      	.DB  0x63,0x68,0x20,0x25,0x64,0x20,0x65,0x72
00247a 6f72
00247b 2872
00247c 7830
00247d 3025      	.DB  0x72,0x6F,0x72,0x28,0x30,0x78,0x25,0x30
00247e 5832
00247f 0d29
002480 000a
002481 733c      	.DB  0x32,0x58,0x29,0xD,0xA,0x0,0x3C,0x73
002482 6e65
002483 6f73
002484 5372
002485 7465      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x53,0x65,0x74
002486 7543
002487 7272
002488 6e65
002489 5374      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x53
00248a 7465
00248b 6f50
00248c 6e69
00248d 3e74      	.DB  0x65,0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E
00248e 6220
00248f 6675
002490 203a
002491 255b      	.DB  0x20,0x62,0x75,0x66,0x3A,0x20,0x5B,0x25
002492 5d64
002493 5b2f
002494 6425
002495 5b5d      	.DB  0x64,0x5D,0x2F,0x5B,0x25,0x64,0x5D,0x5B
002496 6425
002497 5b5d
002498 6425
002499 5b5d      	.DB  0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D,0x5B
00249a 6425
00249b 5b5d
00249c 6425
00249d 0d5d      	.DB  0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D,0xD
00249e 000a
00249f 733c
0024a0 6e65
0024a1 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0024a2 5372
0024a3 7465
0024a4 7543
0024a5 7272      	.DB  0x72,0x53,0x65,0x74,0x43,0x75,0x72,0x72
0024a6 6e65
0024a7 5374
0024a8 7465
0024a9 6f50      	.DB  0x65,0x6E,0x74,0x53,0x65,0x74,0x50,0x6F
0024aa 6e69
0024ab 3e74
0024ac 7320
0024ad 6e65      	.DB  0x69,0x6E,0x74,0x3E,0x20,0x73,0x65,0x6E
0024ae 6f73
0024af 2072
0024b0 3125
0024b1 2c64      	.DB  0x73,0x6F,0x72,0x20,0x25,0x31,0x64,0x2C
0024b2 7020
0024b3 696f
0024b4 746e
0024b5 2520      	.DB  0x20,0x70,0x6F,0x69,0x6E,0x74,0x20,0x25
0024b6 6431
0024b7 202c
0024b8 6573
0024b9 2074      	.DB  0x31,0x64,0x2C,0x20,0x73,0x65,0x74,0x20
0024ba 6f74
0024bb 5b20
0024bc 6625
0024bd 005d      	.DB  0x74,0x6F,0x20,0x5B,0x25,0x66,0x5D,0x0
                 _0x1C0005:
0024be 0000
0024bf 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
0024c0 ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
0024c1 ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3579): warning: .cseg .db misalignment - padding zero byte
0024c2 00ff      	.DB  0xFF
                 _0x1E003A:
0024c3 ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
0024c4 753c
0024c5 6470
0024c6 7461
0024c7 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
0024c8 6d6f
0024c9 536d
0024ca 6174
0024cb 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
0024cc 3e73
0024cd 4c20
0024ce 736f
0024cf 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0024d0 6d69
0024d1 7265
0024d2 7420
0024d3 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0024d4 2065
0024d5 656c
0024d6 7466
0024d7 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0024d8 2520
0024d9 646c
0024da 2528
0024db 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0024dc 0d29
0024dd 000a
0024de 753c
0024df 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
0024e0 7461
0024e1 4365
0024e2 6d6f
0024e3 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
0024e4 6174
0024e5 7574
0024e6 3e73
0024e7 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
0024e8 7265
0024e9 6576
0024ea 2072
0024eb 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
0024ec 6e77
0024ed 2121
0024ee 0d21
0024ef 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
0024f0 753c
0024f1 6470
0024f2 7461
0024f3 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
0024f4 6d6f
0024f5 536d
0024f6 6174
0024f7 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
0024f8 3e73
0024f9 5320
0024fa 7265
0024fb 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
0024fc 2072
0024fd 7055
0024fe 2121
0024ff 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
002500 000a
002501 633c
002502 6568
002503 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
002504 7250
002505 626f
002506 4165
002507 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
002508 6d72
002509 203e
00250a 6573
00250b 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
00250c 726f
00250d 6320
00250e 6168
00250f 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
002510 6c65
002511 6f20
002512 7475
002513 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
002514 2066
002515 6172
002516 676e
002517 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
002518 2528
002519 2964
00251a 0a0d
00251b 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
00251c 7075
00251d 6164
00251e 6574
00251f 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
002520 6174
002521 7453
002522 7461
002523 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
002524 203e
002525 4241
002526 524f
002527 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
002528 7320
002529 6e65
00252a 6f73
00252b 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
00252c 6863
00252d 6e61
00252e 656e
00252f 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
002530 756f
002531 2074
002532 666f
002533 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
002534 6e61
002535 6567
002536 2820
002537 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
002538 0d29
002539 000a
00253a 753c
00253b 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
00253c 7461
00253d 4465
00253e 6e69
00253f 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
002540 7461
002541 7375
002542 203e
002543 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
002544 6e61
002545 656e
002546 5b6c
002547 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
002548 205d
002549 756f
00254a 2074
00254b 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
00254c 7220
00254d 6e61
00254e 6567
00254f 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
002550 3c00
002551 6567
002552 4474
002553 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
002554 6369
002555 5365
002556 6174
002557 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
002558 203e
002559 7473
00255a 7461
00255b 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
00255c 203d
00255d 305b
00255e 2578
00255f 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
002560 5d58
002561 0a0d
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3622): warning: .cseg .db misalignment - padding zero byte
002562 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
002563 ffff
002564 ffff
002565 ffff
002566 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002567 ffff
002568 ffff
002569 ffff
00256a ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
00256b ffff
00256c ffff
00256d ffff
00256e ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
00256f ffff
002570 ffff
002571 ffff
002572 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3630): warning: .cseg .db misalignment - padding zero byte
002573 0069      	.DB  0x69
                 _0x2200B1:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3632): warning: .cseg .db misalignment - padding zero byte
002574 0069      	.DB  0x69
                 _0x2200C5:
002575 6969      	.DB  0x69,0x69
                 _0x2200CF:
002576 6969
002577 6969
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3636): warning: .cseg .db misalignment - padding zero byte
002578 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
002579 ffff
00257a ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3640): warning: .cseg .db misalignment - padding zero byte
00257b 00ff      	.DB  0xFF
                 _0x220000:
00257c 633c
00257d 6568
00257e 6b63
00257f 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
002580 7261
002581 466d
002582 6f72
002583 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
002584 6372
002585 203e
002586 5347
002587 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
002588 6f4e
002589 2074
00258a 7573
00258b 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
00258c 726f
00258d 2074
00258e 6579
00258f 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
002590 305b
002591 2578
002592 3230
002593 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
002594 0a0d
002595 3c00
002596 6863
002597 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002598 416b
002599 616c
00259a 6d72
00259b 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
00259c 6d6f
00259d 7253
00259e 3e63
00259f 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
0025a0 616c
0025a1 6d72
0025a2 7253
0025a3 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
0025a4 6e75
0025a5 6e6b
0025a6 776f
0025a7 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
0025a8 305b
0025a9 2578
0025aa 3230
0025ab 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0025ac 0a0d
0025ad 3c00
0025ae 6863
0025af 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0025b0 536b
0025b1 6e65
0025b2 4464
0025b3 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
0025b4 6c41
0025b5 7261
0025b6 3e6d
0025b7 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
0025b8 6168
0025b9 6e6e
0025ba 6c65
0025bb 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
0025bc 7475
0025bd 6f20
0025be 2066
0025bf 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
0025c0 676e
0025c1 2065
0025c2 255b
0025c3 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
0025c4 0a0d
0025c5 3c00
0025c6 6863
0025c7 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
0025c8 536b
0025c9 6e65
0025ca 4464
0025cb 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
0025cc 4161
0025cd 616c
0025ce 6d72
0025cf 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
0025d0 7250
0025d1 626f
0025d2 2065
0025d3 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
0025d4 6420
0025d5 7461
0025d6 4161
0025d7 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
0025d8 6d72
0025d9 305b
0025da 2578
0025db 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
0025dc 5d58
0025dd 0a0d
0025de 3c00
0025df 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
0025e0 5241
0025e1 5f4d
0025e2 6863
0025e3 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
0025e4 4d6b
0025e5 7475
0025e6 4565
0025e7 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
0025e8 7269
0025e9 6465
0025ea 203e
0025eb 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
0025ec 6176
0025ed 696c
0025ee 2064
0025ef 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
0025f0 6574
0025f1 6f4d
0025f2 6564
0025f3 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
0025f4 6425
0025f5 0d29
0025f6 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
0025f7 5444
0025f8 3025
0025f9 6432
0025fa 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
0025fb 3230
0025fc 2d64
0025fd 3025
0025fe 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
0025ff 5400
002600 254d
002601 3230
002602 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
002603 3025
002604 6432
002605 4400
002606 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
002607 6431
002608 2e25
002609 6631
00260a 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
00260b 2556
00260c 6431
00260d 5245
00260e 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
00260f 0042
002610 5644
002611 3125
002612 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
002613 5252
002614 4255
002615 4400
002616 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
002617 6431
002618 5245
002619 4e52
00261a 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
00261b 5644
00261c 3125
00261d 4564
00261e 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
00261f 4853
002620 4400
002621 2556
002622 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
002623 4544
002624 4554
002625 5443
002626 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
002627 0047
002628 4f3c
002629 454c
00262a 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
00262b 6873
00262c 776f
00262d 6553
00262e 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
00262f 726f
002630 6156
002631 756c
002632 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
002633 7320
002634 6e65
002635 6f73
002636 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
002637 6425
002638 2e5d
002639 7473
00263a 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
00263b 7375
00263c 7520
00263d 6b6e
00263e 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
00263f 6e77
002640 5b20
002641 7830
002642 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
002643 5832
002644 0d5d
002645 000a
002646 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
002647 3125
002648 4e64
002649 412f
00264a 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
00264b 3147
00264c 4200
00264d 304c
00264e 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
00264f 314c
002650 4200
002651 324c
002652 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
002653 334c
002654 4200
002655 344c
002656 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
002657 4c4f
002658 4445
002659 735f
00265a 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
00265b 4977
00265c 706e
00265d 7475
00265e 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
00265f 7461
002660 7375
002661 203e
002662 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
002663 3a52
002664 6320
002665 2068
002666 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
002667 756c
002668 2065
002669 756f
00266a 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
00266b 666f
00266c 7220
00266d 6e61
00266e 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
00266f 212e
002670 0d21
002671 000a
002672 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
002673 3125
002674 2564
002675 6431
002676 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
002677 4c4f
002678 4445
002679 735f
00267a 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
00267b 4f77
00267c 7475
00267d 7570
00267e 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
00267f 6174
002680 7574
002681 3e73
002682 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
002683 5252
002684 203a
002685 6863
002686 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
002687 6c61
002688 6575
002689 6f20
00268a 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
00268b 6f20
00268c 2066
00268d 6172
00268e 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
00268f 2e65
002690 2121
002691 0a0d
002692 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
002693 2550
002694 6431
002695 3125
002696 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002697 4353
002698 3125
002699 0064
00269a 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
00269b 3125
00269c 0064
00269d 5a42
00269e 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
00269f 0064
0026a0 534d
0026a1 3125
0026a2 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
0026a3 4c41
0026a4 3125
0026a5 2564
0026a6 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
0026a7 3125
0026a8 2564
0026a9 6431
0026aa 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
0026ab 2564
0026ac 6431
0026ad 3125
0026ae 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
0026af 6431
0026b0 3125
0026b1 2564
0026b2 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
0026b3 3125
0026b4 2564
0026b5 6431
0026b6 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
0026b7 210a
0026b8 2121
0026b9 2021
0026ba 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
0026bb 4445
0026bc 4520
0026bd 7272
0026be 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
0026bf 2120
0026c0 2121
0026c1 0d21
0026c2 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
0026c3 6e49
0026c4 7469
0026c5 6169
0026c6 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0026c7 697a
0026c8 676e
0026c9 4f20
0026ca 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
0026cb 2e44
0026cc 202e
0026cd 4f00
0026ce 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
0026cf 000a      	.DB  0xA,0x0
                 _0x260003:
0026d0 3a30
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3730): warning: .cseg .db misalignment - padding zero byte
0026d1 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
0026d2 4600
0026d3 5f52
0026d4 4944
0026d5 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
0026d6 455f
0026d7 5252
0026d8 4600
0026d9 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
0026da 4e49
0026db 5f54
0026dc 5245
0026dd 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
0026de 5246
0026df 4e5f
0026e0 544f
0026e1 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
0026e2 4145
0026e3 5944
0026e4 4600
0026e5 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
0026e6 4f4e
0026e7 465f
0026e8 4c49
0026e9 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
0026ea 5246
0026eb 4e5f
0026ec 5f4f
0026ed 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
0026ee 4854
0026ef 4600
0026f0 5f52
0026f1 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
0026f2 4156
0026f3 494c
0026f4 5f44
0026f5 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
0026f6 454d
0026f7 4600
0026f8 5f52
0026f9 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
0026fa 494e
0026fb 4445
0026fc 4600
0026fd 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
0026fe 5845
0026ff 5349
002700 0054
002701 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
002702 495f
002703 564e
002704 4c41
002705 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
002706 4f5f
002707 4a42
002708 4345
002709 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
00270a 5246
00270b 575f
00270c 4952
00270d 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
00270e 505f
00270f 4f52
002710 4554
002711 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
002712 4445
002713 4600
002714 5f52
002715 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
002716 4156
002717 494c
002718 5f44
002719 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
00271a 5649
00271b 0045
00271c 5246
00271d 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
00271e 544f
00271f 455f
002720 414e
002721 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
002722 4445
002723 4600
002724 5f52
002725 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
002726 465f
002727 4c49
002728 5345
002729 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
00272a 4554
00272b 004d
00272c 5246
00272d 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
00272e 464b
00272f 5f53
002730 4241
002731 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
002732 4554
002733 0044
002734 5246
002735 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
002736 4d49
002737 4f45
002738 5455
002739 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
00273a 5245
00273b 3e52
00273c 2520
00273d 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
00273e 0a0d
00273f 3c00
002740 4453
002741 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
002742 6972
002743 6574
002744 6144
002745 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002746 203e
002747 4453
002748 4320
002749 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
00274a 2064
00274b 6f6e
00274c 2074
00274d 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
00274e 6461
00274f 0d79
002750 000a
002751 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
002752 5f44
002753 7277
002754 7469
002755 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002756 7461
002757 3e61
002758 6620
002759 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
00275a 6573
00275b 6b65
00275c 2528
00275d 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
00275e 6620
00275f 6961
002760 656c
002761 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
002762 0d21
002763 000a
002764 533c
002765 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
002766 7277
002767 7469
002768 4465
002769 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
00276a 3e61
00276b 6620
00276c 775f
00276d 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
00276e 6574
00276f 2928
002770 6620
002771 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002772 656c
002773 0d64
002774 000a
002775 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
002776 5f44
002777 7277
002778 7469
002779 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00277a 7461
00277b 3e61
00277c 6120
00277d 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
00277e 6175
00277f 5f6c
002780 7277
002781 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
002782 5b65
002783 7525
002784 205d
002785 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
002786 6c20
002787 6e65
002788 255b
002789 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
00278a 0a0d
00278b 3c00
00278c 4453
00278d 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
00278e 6165
00278f 4464
002790 7461
002791 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
002792 5320
002793 2044
002794 6143
002795 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
002796 6e20
002797 746f
002798 7220
002799 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
00279a 7964
00279b 0a0d
00279c 3c00
00279d 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
00279e 725f
00279f 6165
0027a0 4464
0027a1 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0027a2 3e61
0027a3 6620
0027a4 6c5f
0027a5 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
0027a6 6b65
0027a7 2528
0027a8 2975
0027a9 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
0027aa 6961
0027ab 656c
0027ac 2164
0027ad 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
0027ae 000a
0027af 533c
0027b0 5f44
0027b1 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
0027b2 6461
0027b3 6144
0027b4 6174
0027b5 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
0027b6 5f66
0027b7 6572
0027b8 6461
0027b9 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
0027ba 6620
0027bb 6961
0027bc 656c
0027bd 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0027be 000a
0027bf 533c
0027c0 5f44
0027c1 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
0027c2 7469
0027c3 4465
0027c4 7461
0027c5 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
0027c6 6120
0027c7 7463
0027c8 6175
0027c9 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
0027ca 6572
0027cb 6461
0027cc 255b
0027cd 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
0027ce 2120
0027cf 203d
0027d0 656c
0027d1 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
0027d2 7525
0027d3 0d5d
0027d4 000a
0027d5 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
0027d6 5f44
0027d7 6572
0027d8 6461
0027d9 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
0027da 6f6d
0027db 7972
0027dc 6552
0027dd 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
0027de 6e69
0027df 203e
0027e0 5f66
0027e1 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
0027e2 6674
0027e3 6572
0027e4 2865
0027e5 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
0027e6 2029
0027e7 7265
0027e8 6f72
0027e9 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
0027ea 0d21
0027eb 000a
0027ec 6f4c
0027ed 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
0027ee 6163
0027ef 206c
0027f0 7264
0027f1 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
0027f2 2065
0027f3 3a30
0027f4 6d20
0027f5 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
0027f6 746e
0027f7 6465
0027f8 4520
0027f9 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
0027fa 524f
0027fb 0a0d
0027fc 4c00
0027fd 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
0027fe 6369
0027ff 6c61
002800 6420
002801 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
002802 6576
002803 3020
002804 203a
002805 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
002806 6e75
002807 6574
002808 2064
002809 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
00280a 0a0d
00280b 4c00
00280c 676f
00280d 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
00280e 6c61
00280f 6420
002810 6972
002811 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
002812 3020
002813 203a
002814 6e75
002815 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
002816 6e75
002817 6574
002818 2064
002819 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
00281a 4f52
00281b 0d52
00281c 000a
00281d 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
00281e 6967
00281f 6163
002820 206c
002821 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
002822 7669
002823 2065
002824 3a30
002825 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
002826 6d6e
002827 756f
002828 746e
002829 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
00282a 4f20
00282b 0d4b
00282c 000a
00282d 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
00282e 5f44
00282f 6572
002830 6f6d
002831 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
002832 3e74
002833 5320
002834 5f44
002835 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
002836 6f6d
002837 6e75
002838 2874
002839 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
00283a 6166
00283b 6c69
00283c 6465
00283d 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
00283e 3c00
00283f 4453
002840 725f
002841 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
002842 756f
002843 746e
002844 203e
002845 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
002846 6d5f
002847 756f
002848 746e
002849 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
00284a 6620
00284b 6961
00284c 656c
00284d 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00284e 000a
00284f 533c
002850 5f44
002851 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
002852 6165
002853 6574
002854 6946
002855 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002856 203e
002857 4453
002858 4320
002859 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
00285a 2064
00285b 6f6e
00285c 2074
00285d 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
00285e 6461
00285f 0d79
002860 000a
002861 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
002862 7325
002863 3c00
002864 4453
002865 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
002866 6572
002867 7461
002868 4665
002869 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
00286a 3e65
00286b 6620
00286c 6f5f
00286d 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
00286e 286e
00286f 2029
002870 6166
002871 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002872 6465
002873 0a0d
002874 3c00
002875 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
002876 635f
002877 6572
002878 7461
002879 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
00287a 6c69
00287b 3e65
00287c 6620
00287d 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
00287e 6f6c
00287f 6573
002880 2928
002881 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
002882 6961
002883 656c
002884 0d64
002885 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002886 533c
002887 5f44
002888 706f
002889 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
00288a 6946
00288b 656c
00288c 203e
00288d 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
00288e 4320
00288f 7261
002890 2064
002891 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002892 2074
002893 6572
002894 6461
002895 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
002896 000a
002897 533c
002898 5f44
002899 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
00289a 6e65
00289b 6946
00289c 656c
00289d 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
00289e 5f66
00289f 706f
0028a0 6e65
0028a1 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
0028a2 5b20
0028a3 7325
0028a4 205d
0028a5 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
0028a6 6c69
0028a7 6465
0028a8 0a0d
0028a9 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0028aa 4453
0028ab 635f
0028ac 6f6c
0028ad 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
0028ae 6946
0028af 656c
0028b0 203e
0028b1 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
0028b2 4320
0028b3 7261
0028b4 2064
0028b5 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
0028b6 2074
0028b7 6572
0028b8 6461
0028b9 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
0028ba 000a
0028bb 533c
0028bc 5f44
0028bd 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
0028be 736f
0028bf 4665
0028c0 6c69
0028c1 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
0028c2 6620
0028c3 635f
0028c4 6f6c
0028c5 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
0028c6 2928
0028c7 6620
0028c8 6961
0028c9 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0028ca 0d64
0028cb 000a
0028cc 533c
0028cd 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
0028ce 6e69
0028cf 7469
0028d0 203e
0028d1 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
0028d2 7261
0028d3 2074
0028d4 6e69
0028d5 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
0028d6 6169
0028d7 206c
0028d8 656d
0028d9 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
0028da 7972
0028db 6320
0028dc 7261
0028dd 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
0028de 000a
0028df 0a0d
0028e0 533c
0028e1 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
0028e2 6e69
0028e3 7469
0028e4 203e
0028e5 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
0028e6 6e75
0028e7 6974
0028e8 676e
0028e9 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
0028ea 2044
0028eb 6143
0028ec 6472
0028ed 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
0028ee 002e
0028ef 533c
0028f0 5f44
0028f1 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
0028f2 7469
0028f3 203e
0028f4 4453
0028f5 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
0028f6 756f
0028f7 746e
0028f8 2928
0028f9 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
0028fa 6961
0028fb 656c
0028fc 0d64
0028fd 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0028fe 0a0d
0028ff 533c
002900 5f44
002901 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
002902 7469
002903 203e
002904 6843
002905 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
002906 206b
002907 6143
002908 6472
002909 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
00290a 7a69
00290b 2e65
00290c 2e2e
00290d 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
00290e 4453
00290f 695f
002910 696e
002911 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
002912 5320
002913 5f44
002914 6572
002915 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002916 654d
002917 6f6d
002918 7972
002919 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
00291a 616d
00291b 6e69
00291c 2928
00291d 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
00291e 6961
00291f 656c
002920 0d64
002921 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002922 533c
002923 5f44
002924 6e69
002925 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
002926 203e
002927 7246
002928 6565
002929 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
00292a 6170
00292b 6563
00292c 6f20
00292d 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
00292e 6f6c
00292f 6967
002930 6163
002931 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
002932 7264
002933 7669
002934 2065
002935 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
002936 2520
002937 756c
002938 6b20
002939 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
00293a 6574
00293b 0d73
00293c 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
00293d 6164
00293e 6174
00293f 6c2e
002940 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
002941 7665
002942 6e65
002943 2e74
002944 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3891): warning: .cseg .db misalignment - padding zero byte
002945 0067      	.DB  0x67
                 _0x280005:
002946 7265
002947 6f72
002948 2e72
002949 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(3894): warning: .cseg .db misalignment - padding zero byte
00294a 0067      	.DB  0x67
                 _0x280006:
00294b 0000
00294c 0000
00294d 0000
00294e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00294f ffff
002950 ffff
002951 ffff
002952 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
002953 813d
002954 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
002955 817c
002956 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
002957 4c3c
002958 474f
002959 695f
00295a 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
00295b 7265
00295c 4474
00295d 7461
00295e 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
00295f 4c20
002960 474f
002961 675f
002962 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002963 614c
002964 7473
002965 6e49
002966 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002967 7472
002968 2928
002969 6620
00296a 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
00296b 656c
00296c 0d64
00296d 000a
00296e 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
00296f 474f
002970 695f
002971 736e
002972 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002973 4474
002974 7461
002975 3e61
002976 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
002977 5f44
002978 7277
002979 7469
00297a 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00297b 7461
00297c 2861
00297d 6c66
00297e 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
00297f 2029
002980 6166
002981 6c69
002982 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002983 0a0d
002984 3c00
002985 4f4c
002986 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002987 6e69
002988 6573
002989 7472
00298a 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
00298b 6174
00298c 203e
00298d 4453
00298e 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
00298f 6972
002990 6574
002991 6144
002992 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002993 7428
002994 6d69
002995 7365
002996 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
002997 706d
002998 2029
002999 6166
00299a 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
00299b 6465
00299c 0a0d
00299d 3c00
00299e 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
00299f 5f47
0029a0 6e69
0029a1 6573
0029a2 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0029a3 6144
0029a4 6174
0029a5 203e
0029a6 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0029a7 775f
0029a8 6972
0029a9 6574
0029aa 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0029ab 6174
0029ac 6328
0029ad 6168
0029ae 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
0029af 6c65
0029b0 2029
0029b1 6166
0029b2 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
0029b3 6465
0029b4 0a0d
0029b5 3c00
0029b6 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029b7 5f47
0029b8 6e69
0029b9 6573
0029ba 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0029bb 6144
0029bc 6174
0029bd 203e
0029be 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
0029bf 775f
0029c0 6972
0029c1 6574
0029c2 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
0029c3 6174
0029c4 7628
0029c5 6c61
0029c6 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
0029c7 2029
0029c8 6166
0029c9 6c69
0029ca 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
0029cb 0a0d
0029cc 3c00
0029cd 4f4c
0029ce 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
0029cf 6e69
0029d0 6573
0029d1 7472
0029d2 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
0029d3 6174
0029d4 203e
0029d5 4f4c
0029d6 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0029d7 6573
0029d8 4c74
0029d9 7361
0029da 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
0029db 736e
0029dc 7265
0029dd 2874
0029de 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
0029df 2964
0029e0 6620
0029e1 6961
0029e2 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0029e3 0d64
0029e4 000a
0029e5 4c3c
0029e6 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
0029e7 725f
0029e8 6165
0029e9 4464
0029ea 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
0029eb 3e61
0029ec 4c20
0029ed 474f
0029ee 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
0029ef 7465
0029f0 614c
0029f1 7473
0029f2 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
0029f3 6573
0029f4 7472
0029f5 2928
0029f6 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
0029f7 6961
0029f8 656c
0029f9 0d64
0029fa 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0029fb 4c3c
0029fc 474f
0029fd 725f
0029fe 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
0029ff 4464
002a00 7461
002a01 3e61
002a02 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
002a03 474f
002a04 675f
002a05 7465
002a06 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
002a07 7473
002a08 6553
002a09 646e
002a0a 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
002a0b 6620
002a0c 6961
002a0d 656c
002a0e 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002a0f 000a
002a10 4c3c
002a11 474f
002a12 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
002a13 6165
002a14 4564
002a15 6576
002a16 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
002a17 203e
002a18 616c
002a19 7473
002a1a 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
002a1b 646e
002a1c 6c2f
002a1d 7361
002a1e 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
002a1f 736e
002a20 7265
002a21 2074
002a22 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
002a23 3e2d
002a24 2520
002a25 646c
002a26 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
002a27 646c
002a28 0a0d
002a29 3c00
002a2a 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a2b 5f47
002a2c 6572
002a2d 6461
002a2e 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002a2f 6174
002a30 203e
002a31 6f4c
002a32 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
002a33 6d65
002a34 7470
002a35 2e79
002a36 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002a37 0d21
002a38 000a
002a39 443c
002a3a 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
002a3b 4755
002a3c 435f
002a3d 656c
002a3e 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
002a3f 6f4c
002a40 4667
002a41 6c69
002a42 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
002a43 4c20
002a44 474f
002a45 635f
002a46 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
002a47 7461
002a48 4665
002a49 6c69
002a4a 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002a4b 7325
002a4c 2029
002a4d 6166
002a4e 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002a4f 6465
002a50 0a0d
002a51 3c00
002a52 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a53 5f47
002a54 6572
002a55 6461
002a56 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002a57 6174
002a58 203e
002a59 4453
002a5a 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
002a5b 6165
002a5c 4464
002a5d 7461
002a5e 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002a5f 6c66
002a60 6761
002a61 2029
002a62 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002a63 6c69
002a64 6465
002a65 0a0d
002a66 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002a67 4f4c
002a68 5f47
002a69 6572
002a6a 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002a6b 6144
002a6c 6174
002a6d 203e
002a6e 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002a6f 725f
002a70 6165
002a71 4464
002a72 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002a73 2861
002a74 6974
002a75 656d
002a76 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002a77 6d61
002a78 2970
002a79 6620
002a7a 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002a7b 656c
002a7c 0d64
002a7d 000a
002a7e 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a7f 474f
002a80 725f
002a81 6165
002a82 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
002a83 7461
002a84 3e61
002a85 5320
002a86 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
002a87 6572
002a88 6461
002a89 6144
002a8a 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a8b 6328
002a8c 6168
002a8d 6e6e
002a8e 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
002a8f 2029
002a90 6166
002a91 6c69
002a92 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a93 0a0d
002a94 3c00
002a95 4f4c
002a96 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a97 6572
002a98 6461
002a99 6144
002a9a 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a9b 203e
002a9c 4453
002a9d 725f
002a9e 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002a9f 4464
002aa0 7461
002aa1 2861
002aa2 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
002aa3 756c
002aa4 2965
002aa5 6620
002aa6 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
002aa7 656c
002aa8 0d64
002aa9 000a
002aaa 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002aab 474f
002aac 695f
002aad 736e
002aae 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002aaf 4574
002ab0 6576
002ab1 746e
002ab2 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002ab3 4f4c
002ab4 5f47
002ab5 6567
002ab6 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
002ab7 7361
002ab8 4974
002ab9 736e
002aba 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
002abb 2874
002abc 2029
002abd 6166
002abe 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002abf 6465
002ac0 0a0d
002ac1 3c00
002ac2 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002ac3 5f47
002ac4 6e69
002ac5 6573
002ac6 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002ac7 7645
002ac8 6e65
002ac9 3e74
002aca 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002acb 5f44
002acc 7277
002acd 7469
002ace 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002acf 7461
002ad0 2861
002ad1 6c66
002ad2 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002ad3 2029
002ad4 6166
002ad5 6c69
002ad6 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002ad7 0a0d
002ad8 3c00
002ad9 4f4c
002ada 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002adb 6e69
002adc 6573
002add 7472
002ade 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
002adf 6e65
002ae0 3e74
002ae1 5320
002ae2 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002ae3 7277
002ae4 7469
002ae5 4465
002ae6 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002ae7 2861
002ae8 6974
002ae9 656d
002aea 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002aeb 6d61
002aec 2970
002aed 6620
002aee 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002aef 656c
002af0 0d64
002af1 000a
002af2 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002af3 474f
002af4 695f
002af5 736e
002af6 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002af7 4574
002af8 6576
002af9 746e
002afa 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002afb 4453
002afc 775f
002afd 6972
002afe 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
002aff 6144
002b00 6174
002b01 6928
002b02 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002b03 6620
002b04 6961
002b05 656c
002b06 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b07 000a
002b08 4c3c
002b09 474f
002b0a 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b0b 736e
002b0c 7265
002b0d 4574
002b0e 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b0f 746e
002b10 203e
002b11 4453
002b12 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002b13 6972
002b14 6574
002b15 6144
002b16 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002b17 7328
002b18 6174
002b19 7574
002b1a 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002b1b 6620
002b1c 6961
002b1d 656c
002b1e 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002b1f 000a
002b20 4c3c
002b21 474f
002b22 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002b23 736e
002b24 7265
002b25 4574
002b26 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002b27 746e
002b28 203e
002b29 4f4c
002b2a 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002b2b 6573
002b2c 4c74
002b2d 7361
002b2e 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002b2f 736e
002b30 7265
002b31 2874
002b32 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002b33 2964
002b34 6620
002b35 6961
002b36 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b37 0d64
002b38 000a
002b39 4c3c
002b3a 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b3b 725f
002b3c 6165
002b3d 4564
002b3e 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b3f 746e
002b40 203e
002b41 4f4c
002b42 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002b43 6567
002b44 4c74
002b45 7361
002b46 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002b47 736e
002b48 7265
002b49 2874
002b4a 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
002b4b 6166
002b4c 6c69
002b4d 6465
002b4e 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002b4f 3c00
002b50 4f4c
002b51 5f47
002b52 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
002b53 6461
002b54 7645
002b55 6e65
002b56 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
002b57 4c20
002b58 474f
002b59 675f
002b5a 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002b5b 614c
002b5c 7473
002b5d 6553
002b5e 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002b5f 2928
002b60 6620
002b61 6961
002b62 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b63 0d64
002b64 000a
002b65 4c3c
002b66 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b67 725f
002b68 6165
002b69 4564
002b6a 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b6b 746e
002b6c 203e
002b6d 6f4c
002b6e 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
002b6f 6d65
002b70 7470
002b71 2e79
002b72 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002b73 0d21
002b74 000a
002b75 4c3c
002b76 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b77 725f
002b78 6165
002b79 4564
002b7a 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b7b 746e
002b7c 203e
002b7d 4453
002b7e 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002b7f 6165
002b80 4464
002b81 7461
002b82 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002b83 6c66
002b84 6761
002b85 2029
002b86 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002b87 6c69
002b88 6465
002b89 0a0d
002b8a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002b8b 4f4c
002b8c 5f47
002b8d 6572
002b8e 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002b8f 7645
002b90 6e65
002b91 3e74
002b92 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002b93 5f44
002b94 6572
002b95 6461
002b96 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002b97 6174
002b98 7428
002b99 6d69
002b9a 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
002b9b 6174
002b9c 706d
002b9d 2029
002b9e 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
002b9f 6c69
002ba0 6465
002ba1 0a0d
002ba2 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002ba3 4f4c
002ba4 5f47
002ba5 6572
002ba6 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002ba7 7645
002ba8 6e65
002ba9 3e74
002baa 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002bab 5f44
002bac 6572
002bad 6461
002bae 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002baf 6174
002bb0 6928
002bb1 2964
002bb2 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
002bb3 6961
002bb4 656c
002bb5 0d64
002bb6 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002bb7 4c3c
002bb8 474f
002bb9 725f
002bba 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002bbb 4564
002bbc 6576
002bbd 746e
002bbe 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002bbf 4453
002bc0 725f
002bc1 6165
002bc2 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
002bc3 7461
002bc4 2861
002bc5 7473
002bc6 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
002bc7 7375
002bc8 2029
002bc9 6166
002bca 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002bcb 6465
002bcc 0a0d
002bcd 3c00
002bce 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002bcf 5f47
002bd0 6567
002bd1 4c74
002bd2 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002bd3 4974
002bd4 736e
002bd5 7265
002bd6 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002bd7 5320
002bd8 5f44
002bd9 6572
002bda 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002bdb 6144
002bdc 6174
002bdd 2928
002bde 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
002bdf 6961
002be0 656c
002be1 0d64
002be2 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002be3 4c3c
002be4 474f
002be5 675f
002be6 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002be7 614c
002be8 7473
002be9 6e49
002bea 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002beb 7472
002bec 203e
002bed 6f67
002bee 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
002bef 6c25
002bf0 0d64
002bf1 000a
002bf2 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002bf3 474f
002bf4 735f
002bf5 7465
002bf6 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002bf7 7473
002bf8 6e49
002bf9 6573
002bfa 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002bfb 203e
002bfc 7277
002bfd 7469
002bfe 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002bff 2067
002c00 6c25
002c01 0d64
002c02 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c03 4c3c
002c04 474f
002c05 735f
002c06 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c07 614c
002c08 7473
002c09 6e49
002c0a 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002c0b 7472
002c0c 203e
002c0d 4453
002c0e 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002c0f 6165
002c10 4464
002c11 7461
002c12 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002c13 2029
002c14 6166
002c15 6c69
002c16 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002c17 0a0d
002c18 3c00
002c19 4f4c
002c1a 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002c1b 6567
002c1c 4c74
002c1d 7361
002c1e 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
002c1f 6e65
002c20 3e64
002c21 5320
002c22 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
002c23 6572
002c24 6461
002c25 6144
002c26 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002c27 2928
002c28 6620
002c29 6961
002c2a 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002c2b 0d64
002c2c 000a
002c2d 4c3c
002c2e 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002c2f 675f
002c30 7465
002c31 614c
002c32 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
002c33 6553
002c34 646e
002c35 203e
002c36 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
002c37 2074
002c38 6c25
002c39 0d64
002c3a 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c3b 4c3c
002c3c 474f
002c3d 735f
002c3e 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c3f 614c
002c40 7473
002c41 6553
002c42 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002c43 203e
002c44 7277
002c45 7469
002c46 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c47 2067
002c48 6c25
002c49 0d64
002c4a 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002c4b 4c3c
002c4c 474f
002c4d 735f
002c4e 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002c4f 614c
002c50 7473
002c51 6553
002c52 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002c53 203e
002c54 4453
002c55 725f
002c56 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002c57 4464
002c58 7461
002c59 2861
002c5a 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
002c5b 6166
002c5c 6c69
002c5d 6465
002c5e 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002c5f 3c00
002c60 4f4c
002c61 5f47
002c62 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c63 6165
002c64 6574
002c65 6946
002c66 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c67 203e
002c68 4453
002c69 635f
002c6a 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
002c6b 7461
002c6c 4665
002c6d 6c69
002c6e 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002c6f 7325
002c70 2029
002c71 6166
002c72 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002c73 6465
002c74 0a0d
002c75 3c00
002c76 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c77 5f47
002c78 7263
002c79 6165
002c7a 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002c7b 6946
002c7c 656c
002c7d 203e
002c7e 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
002c7f 6120
002c80 726c
002c81 6165
002c82 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002c83 6520
002c84 6978
002c85 7473
002c86 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002c87 3c00
002c88 4f4c
002c89 5f47
002c8a 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c8b 6165
002c8c 6574
002c8d 6946
002c8e 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c8f 203e
002c90 7325
002c91 6320
002c92 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002c93 7461
002c94 6465
002c95 0a0d
002c96 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002c97 4f4c
002c98 5f47
002c99 7263
002c9a 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002c9b 6574
002c9c 6946
002c9d 656c
002c9e 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002c9f 7325
002ca0 6320
002ca1 6e6f
002ca2 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002ca3 6e69
002ca4 6465
002ca5 6e20
002ca6 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002ca7 6e69
002ca8 7469
002ca9 6169
002caa 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002cab 6164
002cac 6174
002cad 0a0d
002cae 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002caf 4f4c
002cb0 5f47
002cb1 7263
002cb2 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002cb3 6574
002cb4 6946
002cb5 656c
002cb6 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002cb7 4453
002cb8 6f5f
002cb9 6570
002cba 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002cbb 6c69
002cbc 2865
002cbd 7325
002cbe 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002cbf 6166
002cc0 6c69
002cc1 6465
002cc2 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002cc3 3c00
002cc4 4f4c
002cc5 5f47
002cc6 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002cc7 6165
002cc8 6574
002cc9 6946
002cca 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002ccb 203e
002ccc 7277
002ccd 7469
002cce 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002ccf 2067
002cd0 6e69
002cd1 7469
002cd2 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002cd3 206c
002cd4 6164
002cd5 6174
002cd6 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002cd7 3c00
002cd8 4f4c
002cd9 5f47
002cda 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002cdb 6165
002cdc 6574
002cdd 6946
002cde 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002cdf 203e
002ce0 4453
002ce1 775f
002ce2 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002ce3 6574
002ce4 6144
002ce5 6174
002ce6 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002ce7 6620
002ce8 6961
002ce9 656c
002cea 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002ceb 7257
002cec 7469
002ced 6e69
002cee 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002cef 202e
002cf0 0a0d
002cf1 3c00
002cf2 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002cf3 5f47
002cf4 7263
002cf5 6165
002cf6 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002cf7 6946
002cf8 656c
002cf9 203e
002cfa 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002cfb 635f
002cfc 6f6c
002cfd 6573
002cfe 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002cff 656c
002d00 2928
002d01 6620
002d02 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002d03 656c
002d04 0d64
002d05 000a
002d06 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002d07 474f
002d08 695f
002d09 696e
002d0a 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002d0b 4920
002d0c 696e
002d0d 6974
002d0e 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002d0f 6c20
002d10 676f
002d11 6620
002d12 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002d13 0d65
002d14 000a
002d15 4c3c
002d16 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002d17 695f
002d18 696e
002d19 3e74
002d1a 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002d1b 474f
002d1c 635f
002d1d 6572
002d1e 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002d1f 4665
002d20 6c69
002d21 2865
002d22 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002d23 2029
002d24 6166
002d25 6c69
002d26 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002d27 0a0d
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4147): warning: .cseg .db misalignment - padding zero byte
002d28 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002d29 0a0d
002d2a 0a0d
002d2b 613c
002d2c 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002d2d 6144
002d2e 6174
002d2f 6f4c
002d30 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002d31 6575
002d32 6575
002d33 203e
002d34 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002d35 4e52
002d36 4e49
002d37 2047
002d38 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002d39 6164
002d3a 6174
002d3b 6f4c
002d3c 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002d3d 6575
002d3e 6575
002d3f 4620
002d40 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002d41 0d4c
002d42 0d0a
002d43 000a
002d44 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002d45 613c
002d46 6464
002d47 6144
002d48 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002d49 6f4c
002d4a 5167
002d4b 6575
002d4c 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d4d 203e
002d4e 2020
002d4f 2020
002d50 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d51 2020
002d52 2020
002d53 2020
002d54 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d55 2020
002d56 2020
002d57 2020
002d58 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d59 2020
002d5a 2020
002d5b 6441
002d5c 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002d5d 2064
002d5e 2528
002d5f 3230
002d60 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002d61 7420
002d62 206f
002d63 6164
002d64 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002d65 6f4c
002d66 5167
002d67 6575
002d68 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d69 255b
002d6a 5d64
002d6b 4320
002d6c 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002d6d 746e
002d6e 3d20
002d6f 2520
002d70 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002d71 000a
002d72 723c
002d73 6165
002d74 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d75 7461
002d76 4c61
002d77 676f
002d78 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d79 7565
002d7a 3e65
002d7b 5720
002d7c 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d7d 3a4e
002d7e 6420
002d7f 7461
002d80 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002d81 676f
002d82 7551
002d83 7565
002d84 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002d85 6d65
002d86 7470
002d87 2179
002d88 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002d89 000a
002d8a 723c
002d8b 6165
002d8c 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d8d 7461
002d8e 4c61
002d8f 676f
002d90 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d91 7565
002d92 3e65
002d93 5720
002d94 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d95 3a4e
002d96 6e20
002d97 746f
002d98 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002d99 756f
002d9a 646e
002d9b 6920
002d9c 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002d9d 7830
002d9e 3025
002d9f 5832
002da0 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002da1 6e69
002da2 6420
002da3 7461
002da4 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002da5 676f
002da6 7551
002da7 7565
002da8 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002da9 000a
002daa 0a0d
002dab 723c
002dac 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002dad 766f
002dae 4465
002daf 7461
002db0 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002db1 676f
002db2 7551
002db3 7565
002db4 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002db5 2020
002db6 2020
002db7 2020
002db8 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002db9 2020
002dba 2020
002dbb 2020
002dbc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dbd 2020
002dbe 2020
002dbf 2020
002dc0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc1 6552
002dc2 6f6d
002dc3 6576
002dc4 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002dc5 2528
002dc6 3230
002dc7 2958
002dc8 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002dc9 6f72
002dca 206d
002dcb 6164
002dcc 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002dcd 6f4c
002dce 5167
002dcf 6575
002dd0 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002dd1 255b
002dd2 5d64
002dd3 0a0d
002dd4 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002dd5 6572
002dd6 6f6d
002dd7 6576
002dd8 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002dd9 6174
002dda 6f4c
002ddb 5167
002ddc 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002ddd 6575
002dde 203e
002ddf 4157
002de0 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002de1 203a
002de2 6f6e
002de3 2074
002de4 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002de5 6e75
002de6 2064
002de7 6469
002de8 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002de9 2578
002dea 3230
002deb 5d58
002dec 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002ded 206e
002dee 6164
002def 6174
002df0 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002df1 5167
002df2 6575
002df3 6575
002df4 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002df5 0d00
002df6 0d0a
002df7 3c0a
002df8 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002df9 4564
002dfa 6576
002dfb 746e
002dfc 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002dfd 5167
002dfe 6575
002dff 6575
002e00 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002e01 4157
002e02 4e52
002e03 4e49
002e04 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002e05 203a
002e06 7665
002e07 6e65
002e08 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e09 676f
002e0a 7551
002e0b 7565
002e0c 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002e0d 5546
002e0e 4c4c
002e0f 0a0d
002e10 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002e11 0d00
002e12 3c0a
002e13 6461
002e14 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002e15 6576
002e16 746e
002e17 6f4c
002e18 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002e19 6575
002e1a 6575
002e1b 203e
002e1c 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002e1d 2020
002e1e 2020
002e1f 2020
002e20 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e21 2020
002e22 2020
002e23 2020
002e24 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e25 2020
002e26 2020
002e27 2020
002e28 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002e29 6564
002e2a 2064
002e2b 2528
002e2c 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002e2d 2958
002e2e 7420
002e2f 206f
002e30 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002e31 6e65
002e32 4c74
002e33 676f
002e34 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002e35 7565
002e36 5b65
002e37 6425
002e38 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002e39 6f43
002e3a 6e75
002e3b 2074
002e3c 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002e3d 6425
002e3e 0a0d
002e3f 3c00
002e40 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002e41 6461
002e42 7645
002e43 6e65
002e44 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002e45 676f
002e46 7551
002e47 7565
002e48 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e49 5720
002e4a 5241
002e4b 3a4e
002e4c 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002e4d 6576
002e4e 746e
002e4f 6f4c
002e50 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002e51 6575
002e52 6575
002e53 6520
002e54 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002e55 7974
002e56 2121
002e57 0a0d
002e58 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002e59 6572
002e5a 6461
002e5b 7645
002e5c 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002e5d 4c74
002e5e 676f
002e5f 7551
002e60 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002e61 3e65
002e62 5720
002e63 5241
002e64 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002e65 6e20
002e66 746f
002e67 6620
002e68 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002e69 646e
002e6a 6920
002e6b 5b64
002e6c 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002e6d 3025
002e6e 5832
002e6f 205d
002e70 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002e71 6520
002e72 6576
002e73 746e
002e74 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e75 5167
002e76 6575
002e77 6575
002e78 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002e79 0d00
002e7a 3c0a
002e7b 6572
002e7c 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002e7d 6576
002e7e 7645
002e7f 6e65
002e80 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002e81 676f
002e82 7551
002e83 7565
002e84 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e85 2020
002e86 2020
002e87 2020
002e88 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e89 2020
002e8a 2020
002e8b 2020
002e8c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e8d 2020
002e8e 2020
002e8f 2020
002e90 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002e91 6f6d
002e92 6576
002e93 2064
002e94 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002e95 3230
002e96 2958
002e97 6620
002e98 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002e99 206d
002e9a 7665
002e9b 6e65
002e9c 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e9d 676f
002e9e 7551
002e9f 7565
002ea0 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002ea1 6425
002ea2 0d5d
002ea3 000a
002ea4 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002ea5 6d65
002ea6 766f
002ea7 4565
002ea8 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002ea9 746e
002eaa 6f4c
002eab 5167
002eac 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002ead 6575
002eae 203e
002eaf 4157
002eb0 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002eb1 203a
002eb2 6f6e
002eb3 2074
002eb4 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002eb5 6e75
002eb6 2064
002eb7 6469
002eb8 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002eb9 2578
002eba 3230
002ebb 5d58
002ebc 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002ebd 206e
002ebe 7665
002ebf 6e65
002ec0 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002ec1 676f
002ec2 7551
002ec3 7565
002ec4 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002ec5 000a      	.DB  0xA,0x0
                 _0x2C0003:
002ec6 0000
002ec7 0000
002ec8 0000
002ec9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002eca 0000
002ecb 0000
002ecc 0000
002ecd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ece 0000
002ecf 0000
002ed0 0000
002ed1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ed2 0000
002ed3 0000
002ed4 0000
002ed5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ed6 0000
002ed7 0000
002ed8 0000
002ed9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002eda 0000
002edb 0000
002edc 0000
002edd 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ede 0000
002edf 0000
002ee0 0000
002ee1 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ee2 0000
002ee3 0000
002ee4 0000
002ee5 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ee6 0000
002ee7 0000
002ee8 0000
002ee9 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002eea 0591
002eeb 058d
002eec 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C027A:
002eed 0000
002eee 0000
002eef 0000
002ef0 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ef1 0000
002ef2 0000
002ef3 0000
002ef4 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002ef5 0000
002ef6 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002ef7 314d
002ef8 3125
002ef9 0064
002efa 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002efb 4d00
002efc 2541
002efd 6431
002efe 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002eff 2532
002f00 6431
002f01 4d00
002f02 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002f03 6431
002f04 4d00
002f05 2534
002f06 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002f07 5000
002f08 0031
002f09 354d
002f0a 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002f0b 0064
002f0c 3050
002f0d 3c00
002f0e 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002f0f 554e
002f10 705f
002f11 6f72
002f12 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002f13 7373
002f14 654b
002f15 3e79
002f16 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002f17 2550
002f18 2c73
002f19 7325
002f1a 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002f1b 2c73
002f1c 5200
002f1d 6165
002f1e 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002f1f 6d69
002f20 2c65
002f21 4400
002f22 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002f23 6c61
002f24 676f
002f25 6567
002f26 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002f27 5500
002f28 6b6e
002f29 6f6e
002f2a 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002f2b 002c
002f2c 6e45
002f2d 6261
002f2e 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002f2f 002c
002f30 6944
002f31 6173
002f32 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002f33 2c65
002f34 3c00
002f35 454d
002f36 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002f37 705f
002f38 6f72
002f39 6563
002f3a 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002f3b 654b
002f3c 3e79
002f3d 5620
002f3e 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002f3f 0073
002f40 4d3c
002f41 4e45
002f42 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002f43 7270
002f44 636f
002f45 7365
002f46 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002f47 7965
002f48 203e
002f49 616d
002f4a 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002f4b 636f
002f4c 4328
002f4d 4e4f
002f4e 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002f4f 4552
002f50 4441
002f51 425f
002f52 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002f53 4546
002f54 2952
002f55 6620
002f56 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002f57 656c
002f58 0d64
002f59 000a
002f5a 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002f5b 4e45
002f5c 5f55
002f5d 7270
002f5e 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002f5f 7365
002f60 4b73
002f61 7965
002f62 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002f63 5445
002f64 5f48
002f65 6567
002f66 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002f67 6e6f
002f68 6966
002f69 2867
002f6a 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002f6b 6166
002f6c 6c69
002f6d 6465
002f6e 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002f6f 3c00
002f70 454d
002f71 554e
002f72 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f73 6f72
002f74 6563
002f75 7373
002f76 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f77 3e79
002f78 4520
002f79 4854
002f7a 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002f7b 7465
002f7c 6f43
002f7d 666e
002f7e 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002f7f 2928
002f80 7320
002f81 6375
002f82 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002f83 7373
002f84 0a0d
002f85 0d00
002f86 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002f87 3c0a
002f88 454d
002f89 554e
002f8a 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f8b 6f72
002f8c 6563
002f8d 7373
002f8e 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f8f 3e79
002f90 7220
002f91 6165
002f92 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
002f93 6425
002f94 205d
002f95 2d2d
002f96 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
002f97 000a
002f98 4d3c
002f99 4e45
002f9a 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002f9b 7270
002f9c 636f
002f9d 7365
002f9e 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002f9f 7965
002fa0 203e
002fa1 6567
002fa2 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
002fa3 7465
002fa4 6f77
002fa5 6b72
002fa6 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
002fa7 6f66
002fa8 2928
002fa9 6620
002faa 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
002fab 656c
002fac 0d64
002fad 000a
002fae 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002faf 4e45
002fb0 5f55
002fb1 7270
002fb2 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002fb3 7365
002fb4 4b73
002fb5 7965
002fb6 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002fb7 4e56
002fb8 7525
002fb9 252e
002fba 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fbb 7525
002fbc 252e
002fbd 2c75
002fbe 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002fbf 252e
002fc0 2e75
002fc1 7525
002fc2 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002fc3 2c75
002fc4 7525
002fc5 252e
002fc6 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
002fc7 7525
002fc8 252e
002fc9 2c75
002fca 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002fcb 252e
002fcc 2e75
002fcd 7525
002fce 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002fcf 2c75
002fd0 0a0d
002fd1 5600
002fd2 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
002fd3 2e75
002fd4 7525
002fd5 252e
002fd6 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fd7 7525
002fd8 252c
002fd9 2e75
002fda 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002fdb 252e
002fdc 2e75
002fdd 7525
002fde 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002fdf 2e75
002fe0 7525
002fe1 252e
002fe2 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002fe3 7525
002fe4 252c
002fe5 2e75
002fe6 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002fe7 252e
002fe8 2e75
002fe9 7525
002fea 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
002feb 4d3c
002fec 4e45
002fed 5f55
002fee 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002fef 636f
002ff0 7365
002ff1 4b73
002ff2 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002ff3 203e
002ff4 6564
002ff5 4576
002ff6 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
002ff7 6425
002ff8 205d
002ff9 6c61
002ffa 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
002ffb 5b6e
002ffc 6425
002ffd 005d
002ffe 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
002fff 3125
003000 0064
003001 4445
003002 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
003003 6431
003004 4500
003005 3344
003006 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
003007 0064
003008 4953
003009 4900
00300a 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
00300b 5831
00300c 3125
00300d 0064
00300e 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
00300f 3125
003010 0064
003011 4d3c
003012 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
003013 5f55
003014 7270
003015 636f
003016 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
003017 4b73
003018 7965
003019 203e
00301a 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
00301b 4576
00301c 206e
00301d 3e2d
00301e 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
00301f 2544
003020 6431
003021 3125
003022 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
003023 4d3c
003024 4e45
003025 5f55
003026 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
003027 636f
003028 7365
003029 4b73
00302a 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
00302b 203e
00302c 6c61
00302d 456d
00302e 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
00302f 3e2d
003030 4520
003031 2544
003032 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
003033 3125
003034 0064
003035 4d3c
003036 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
003037 5f55
003038 7270
003039 636f
00303a 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00303b 4b73
00303c 7965
00303d 203e
00303e 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
00303f 4f74
003040 6570
003041 6172
003042 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
003043 676e
003044 6f43
003045 666e
003046 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
003047 2928
003048 6620
003049 6961
00304a 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
00304b 0d64
00304c 000a
00304d 4c46
00304e 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
00304f 0049
003050 4149
003051 3125
003052 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
003053 4d53
003054 5300
003055 0047
003056 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
003057 5300
003058 2546
003059 2e75
00305a 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
00305b 252e
00305c 2e75
00305d 7525
00305e 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
00305f 2e75
003060 7525
003061 252e
003062 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003063 7525
003064 252c
003065 2e75
003066 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
003067 252e
003068 2e75
003069 7525
00306a 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
00306b 2e75
00306c 7525
00306d 252e
00306e 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
00306f 7525
003070 002c
003071 4d3c
003072 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
003073 5f55
003074 7270
003075 636f
003076 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
003077 4b73
003078 7965
003079 203e
00307a 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
00307b 5f48
00307c 6573
00307d 4374
00307e 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
00307f 6966
003080 2867
003081 2029
003082 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
003083 6c69
003084 6465
003085 0d20
003086 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
003087 554d
003088 3125
003089 0064
00308a 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
00308b 3125
00308c 2a64
00308d 5000
00308e 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
00308f 6431
003090 5000
003091 0035
003092 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
003093 3125
003094 2564
003095 6431
003096 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
003097 454d
003098 554e
003099 705f
00309a 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
00309b 6563
00309c 7373
00309d 654b
00309e 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
00309f 6e20
0030a0 7765
0030a1 7750
0030a2 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
0030a3 2026
0030a4 6f63
0030a5 666e
0030a6 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
0030a7 2064
0030a8 6f6e
0030a9 2074
0030aa 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
0030ab 6374
0030ac 0d68
0030ad 000a
0030ae 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
0030af 5600
0030b0 2544
0030b1 6431
0030b2 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
0030b3 0064
0030b4 3153
0030b5 3125
0030b6 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
0030b7 3253
0030b8 3125
0030b9 0064
0030ba 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
0030bb 4d00
0030bc 2537
0030bd 6431
0030be 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
0030bf 2541
0030c0 6431
0030c1 5300
0030c2 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
0030c3 6431
0030c4 5000
0030c5 254e
0030c6 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
0030c7 4300
0030c8 2543
0030c9 6431
0030ca 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
0030cb 2538
0030cc 6431
0030cd 4300
0030ce 2550      	.DB  0x38,0x25,0x31,0x64,0x0,0x43,0x50,0x25
0030cf 6431
0030d0 3125
0030d1 0064
0030d2 4443      	.DB  0x31,0x64,0x25,0x31,0x64,0x0,0x43,0x44
0030d3 3125
0030d4 2564
0030d5 6431
0030d6 6300      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x63
0030d7 6c61
0030d8 6e50
0030d9 5b74
0030da 3125      	.DB  0x61,0x6C,0x50,0x6E,0x74,0x5B,0x25,0x31
0030db 5d64
0030dc 3d20
0030dd 2520
0030de 6431      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x31,0x64
0030df 0a0d
0030e0 4300
0030e1 2541
0030e2 6431      	.DB  0xD,0xA,0x0,0x43,0x41,0x25,0x31,0x64
0030e3 5700
0030e4 0050
0030e5 5350
0030e6 5000      	.DB  0x0,0x57,0x50,0x0,0x50,0x53,0x0,0x50
0030e7 0034
0030e8 455b
0030e9 005d
0030ea 445b      	.DB  0x34,0x0,0x5B,0x45,0x5D,0x0,0x5B,0x44
0030eb 005d
0030ec 6e45
0030ed 6261
0030ee 656c      	.DB  0x5D,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
0030ef 4400
0030f0 7369
0030f1 6261
0030f2 656c      	.DB  0x0,0x44,0x69,0x73,0x61,0x62,0x6C,0x65
0030f3 3c00
0030f4 6873
0030f5 776f
0030f6 7250      	.DB  0x0,0x3C,0x73,0x68,0x6F,0x77,0x50,0x72
0030f7 626f
0030f8 4365
0030f9 6e6f
0030fa 6966      	.DB  0x6F,0x62,0x65,0x43,0x6F,0x6E,0x66,0x69
0030fb 3e67
0030fc 5020
0030fd 2543
0030fe 6431      	.DB  0x67,0x3E,0x20,0x50,0x43,0x25,0x31,0x64
0030ff 3125
003100 2564
003101 2c64
003102 7325      	.DB  0x25,0x31,0x64,0x25,0x64,0x2C,0x25,0x73
003103 252c
003104 2c73
003105 2e25
003106 6631      	.DB  0x2C,0x25,0x73,0x2C,0x25,0x2E,0x31,0x66
003107 252c
003108 2c64
003109 2e25
00310a 6631      	.DB  0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31,0x66
00310b 252c
00310c 312e
00310d 2c66
00310e 6425      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x2C,0x25,0x64
00310f 252c
003110 312e
003111 0066
003112 0a0d      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x0,0xD,0xA
003113 673c
003114 7465
003115 635f
003116 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
003117 6572
003118 746e
003119 735f
00311a 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
00311b 6c70
00311c 6e69
00311d 3e67
00311e 7220      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x72
00311f 6165
003120 206c
003121 6176
003122 756c      	.DB  0x65,0x61,0x6C,0x20,0x76,0x61,0x6C,0x75
003123 2065
003124 2528
003125 206c
003126 6573      	.DB  0x65,0x20,0x28,0x25,0x6C,0x20,0x73,0x65
003127 2e63
003128 0d29
003129 000a
00312a 673c      	.DB  0x63,0x2E,0x29,0xD,0xA,0x0,0x3C,0x67
00312b 7465
00312c 635f
00312d 7275
00312e 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
00312f 746e
003130 735f
003131 6d61
003132 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003133 6e69
003134 3e67
003135 2520
003136 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
003137 7268
003138 0d2e
003139 000a
00313a 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
00313b 7465
00313c 635f
00313d 7275
00313e 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
00313f 746e
003140 735f
003141 6d61
003142 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003143 6e69
003144 3e67
003145 2520
003146 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
003147 696d
003148 2e6e
003149 0a0d
00314a 3c00      	.DB  0x6D,0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C
00314b 6567
00314c 5f74
00314d 7563
00314e 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
00314f 6e65
003150 5f74
003151 6173
003152 706d      	.DB  0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70
003153 696c
003154 676e
003155 203e
003156 6425      	.DB  0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25,0x64
003157 7320
003158 6365
003159 0d2e
00315a 000a      	.DB  0x20,0x73,0x65,0x63,0x2E,0xD,0xA,0x0
00315b 673c
00315c 7465
00315d 635f
00315e 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
00315f 6572
003160 746e
003161 735f
003162 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
003163 6c70
003164 6e69
003165 3e67
003166 2520      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25
003167 2064
003168 696d
003169 2e6e
00316a 2520      	.DB  0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20,0x25
00316b 2064
00316c 6573
00316d 2e63
00316e 0020      	.DB  0x64,0x20,0x73,0x65,0x63,0x2E,0x20,0x0
00316f 2d2d
003170 203e
003171 6425
003172 6d20      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20,0x6D
003173 6e69
003174 0d2e
003175 000a
003176 673c      	.DB  0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C,0x67
003177 7465
003178 635f
003179 7275
00317a 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
00317b 746e
00317c 735f
00317d 6d61
00317e 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
00317f 6e69
003180 3e67
003181 2520
003182 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
003183 7268
003184 202e
003185 6425
003186 6d20      	.DB  0x68,0x72,0x2E,0x20,0x25,0x64,0x20,0x6D
003187 6e69
003188 202e
003189 6425
00318a 7320      	.DB  0x69,0x6E,0x2E,0x20,0x25,0x64,0x20,0x73
00318b 6365
00318c 202e
00318d 2d00
00318e 3e2d      	.DB  0x65,0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E
00318f 2520
003190 2064
003191 7268
003192 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
003193 000a
003194 673c
003195 7465
003196 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
003197 7275
003198 6572
003199 746e
00319a 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
00319b 6d61
00319c 6c70
00319d 6e69
00319e 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
00319f 4320
0031a0 6e61
0031a1 7427
0031a2 5320      	.DB  0x20,0x43,0x61,0x6E,0x27,0x74,0x20,0x53
0031a3 6f68
0031a4 2e77
0031a5 0a0d
0031a6 3c00      	.DB  0x68,0x6F,0x77,0x2E,0xD,0xA,0x0,0x3C
0031a7 6567
0031a8 5f74
0031a9 7563
0031aa 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
0031ab 6e65
0031ac 5f74
0031ad 7276
0031ae 6665      	.DB  0x65,0x6E,0x74,0x5F,0x76,0x72,0x65,0x66
0031af 203e
0031b0 7276
0031b1 6665
0031b2 2528      	.DB  0x3E,0x20,0x76,0x72,0x65,0x66,0x28,0x25
0031b3 2966
0031b4 7620
0031b5 6c61
0031b6 6d54      	.DB  0x66,0x29,0x20,0x76,0x61,0x6C,0x54,0x6D
0031b7 2070
0031b8 203d
0031b9 7325
0031ba 0a0d      	.DB  0x70,0x20,0x3D,0x20,0x25,0x73,0xD,0xA
0031bb 3c00
0031bc 6567
0031bd 5f74
0031be 7563      	.DB  0x0,0x3C,0x67,0x65,0x74,0x5F,0x63,0x75
0031bf 7272
0031c0 6e65
0031c1 5f74
0031c2 7276      	.DB  0x72,0x72,0x65,0x6E,0x74,0x5F,0x76,0x72
0031c3 6665
0031c4 203e
0031c5 7562
0031c6 2066      	.DB  0x65,0x66,0x3E,0x20,0x62,0x75,0x66,0x20
0031c7 3e2d
0031c8 0020
0031c9 255b
0031ca 5d63      	.DB  0x2D,0x3E,0x20,0x0,0x5B,0x25,0x63,0x5D
0031cb 3c00
0031cc 6567
0031cd 4e74
0031ce 7465      	.DB  0x0,0x3C,0x67,0x65,0x74,0x4E,0x65,0x74
0031cf 6f77
0031d0 6b72
0031d1 6e49
0031d2 6f66      	.DB  0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F
0031d3 203e
0031d4 494c
0031d5 2050
0031d6 203a      	.DB  0x3E,0x20,0x4C,0x49,0x50,0x20,0x3A,0x20
0031d7 7525
0031d8 252e
0031d9 2e75
0031da 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
0031db 252e
0031dc 0d75
0031dd 000a
0031de 673c      	.DB  0x2E,0x25,0x75,0xD,0xA,0x0,0x3C,0x67
0031df 7465
0031e0 654e
0031e1 7774
0031e2 726f      	.DB  0x65,0x74,0x4E,0x65,0x74,0x77,0x6F,0x72
0031e3 496b
0031e4 666e
0031e5 3e6f
0031e6 4d20      	.DB  0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4D
0031e7 4b53
0031e8 3a20
0031e9 2520
0031ea 2e75      	.DB  0x53,0x4B,0x20,0x3A,0x20,0x25,0x75,0x2E
0031eb 7525
0031ec 252e
0031ed 2e75
0031ee 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
0031ef 0a0d
0031f0 3c00
0031f1 6567
0031f2 4e74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4E
0031f3 7465
0031f4 6f77
0031f5 6b72
0031f6 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
0031f7 6f66
0031f8 203e
0031f9 4744
0031fa 2057      	.DB  0x66,0x6F,0x3E,0x20,0x44,0x47,0x57,0x20
0031fb 203a
0031fc 7525
0031fd 252e
0031fe 2e75      	.DB  0x3A,0x20,0x25,0x75,0x2E,0x25,0x75,0x2E
0031ff 7525
003200 252e
003201 0d75
003202 000a      	.DB  0x25,0x75,0x2E,0x25,0x75,0xD,0xA,0x0
003203 673c
003204 7465
003205 654e
003206 7774      	.DB  0x3C,0x67,0x65,0x74,0x4E,0x65,0x74,0x77
003207 726f
003208 496b
003209 666e
00320a 3e6f      	.DB  0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E
00320b 5320
00320c 5049
00320d 3a20
00320e 2520      	.DB  0x20,0x53,0x49,0x50,0x20,0x3A,0x20,0x25
00320f 2e75
003210 7525
003211 252e
003212 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003213 7525
003214 0a0d
003215 3c00
003216 6573      	.DB  0x25,0x75,0xD,0xA,0x0,0x3C,0x73,0x65
003217 5f74
003218 7276
003219 6665
00321a 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
00321b 255b
00321c 5d64
00321d 255b
00321e 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
00321f 255b
003220 5d64
003221 2d20
003222 203e      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x2D,0x3E,0x20
003223 6425
003224 2d20
003225 203e
003226 6625      	.DB  0x25,0x64,0x20,0x2D,0x3E,0x20,0x25,0x66
003227 0a0d
003228 3c00
003229 6572
00322a 6d63      	.DB  0xD,0xA,0x0,0x3C,0x72,0x65,0x63,0x6D
00322b 3e70
00322c 7320
00322d 6372
00322e 5b31      	.DB  0x70,0x3E,0x20,0x73,0x72,0x63,0x31,0x5B
00322f 3025
003230 5832
003231 205d
003232 7273      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x73,0x72
003233 3263
003234 255b
003235 3230
003236 5d58      	.DB  0x63,0x32,0x5B,0x25,0x30,0x32,0x58,0x5D
003237 7520
003238 6573
003239 5b72
00323a 3025      	.DB  0x20,0x75,0x73,0x65,0x72,0x5B,0x25,0x30
00323b 5832
00323c 205d
00323d 6573
00323e 7672      	.DB  0x32,0x58,0x5D,0x20,0x73,0x65,0x72,0x76
00323f 6369
003240 5b65
003241 3025
003242 5832      	.DB  0x69,0x63,0x65,0x5B,0x25,0x30,0x32,0x58
003243 0d5d
003244 000a      	.DB  0x5D,0xD,0xA,0x0
                 _0x2E0003:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4482): warning: .cseg .db misalignment - padding zero byte
003245 0009      	.DB  0x9
                 _0x2E0000:
003246 475b
003247 7465
003248 4120
003249 4344      	.DB  0x5B,0x47,0x65,0x74,0x20,0x41,0x44,0x43
00324a 6f20
00324b 2066
00324c 6573
00324d 736e      	.DB  0x20,0x6F,0x66,0x20,0x73,0x65,0x6E,0x73
00324e 726f
00324f 0d5d
003250 000a
003251 0a0d      	.DB  0x6F,0x72,0x5D,0xD,0xA,0x0,0xD,0xA
003252 443c
003253 6265
003254 6775
003255 533e      	.DB  0x3C,0x44,0x65,0x62,0x75,0x67,0x3E,0x53
003256 7465
003257 6143
003258 3a6c
003259 0d20      	.DB  0x65,0x74,0x43,0x61,0x6C,0x3A,0x20,0xD
00325a 000a
00325b 6553
00325c 736e
00325d 726f      	.DB  0xA,0x0,0x53,0x65,0x6E,0x73,0x6F,0x72
00325e 5420
00325f 7079
003260 3a65
003261 6425      	.DB  0x20,0x54,0x79,0x70,0x65,0x3A,0x25,0x64
003262 0d20
003263 000a
003264 6567
003265 2074      	.DB  0x20,0xD,0xA,0x0,0x67,0x65,0x74,0x20
003266 6579
003267 7261
003268 3d20
003269 2520      	.DB  0x79,0x65,0x61,0x72,0x20,0x3D,0x20,0x25
00326a 0d64
00326b 000a
00326c 6567
00326d 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
00326e 6f6d
00326f 746e
003270 2068
003271 203d      	.DB  0x6D,0x6F,0x6E,0x74,0x68,0x20,0x3D,0x20
003272 6425
003273 0a0d
003274 6700
003275 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
003276 6420
003277 7461
003278 2065
003279 203d      	.DB  0x20,0x64,0x61,0x74,0x65,0x20,0x3D,0x20
00327a 6425
00327b 0a0d
00327c 6700
00327d 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
00327e 6820
00327f 756f
003280 2072
003281 203d      	.DB  0x20,0x68,0x6F,0x75,0x72,0x20,0x3D,0x20
003282 6425
003283 0a0d
003284 6700
003285 7465      	.DB  0x25,0x64,0xD,0xA,0x0,0x67,0x65,0x74
003286 6d20
003287 6e69
003288 3d20
003289 2520      	.DB  0x20,0x6D,0x69,0x6E,0x20,0x3D,0x20,0x25
00328a 0d64
00328b 000a
00328c 6567
00328d 2074      	.DB  0x64,0xD,0xA,0x0,0x67,0x65,0x74,0x20
00328e 6573
00328f 2063
003290 203d
003291 6425      	.DB  0x73,0x65,0x63,0x20,0x3D,0x20,0x25,0x64
003292 0a0d
003293 6700
003294 7465
003295 7420      	.DB  0xD,0xA,0x0,0x67,0x65,0x74,0x20,0x74
003296 6d69
003297 7a65
003298 6e6f
003299 2065      	.DB  0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65,0x20
00329a 203d
00329b 2b25
00329c 0d64
00329d 000a      	.DB  0x3D,0x20,0x25,0x2B,0x64,0xD,0xA,0x0
00329e 0a0d
00329f 443c
0032a0 4245
0032a1 4755      	.DB  0xD,0xA,0x3C,0x44,0x45,0x42,0x55,0x47
0032a2 203e
0032a3 6c41
0032a4 7261
0032a5 206d      	.DB  0x3E,0x20,0x41,0x6C,0x61,0x72,0x6D,0x20
0032a6 7453
0032a7 7461
0032a8 7375
0032a9 5220      	.DB  0x53,0x74,0x61,0x74,0x75,0x73,0x20,0x52
0032aa 7365
0032ab 7465
0032ac 2e2e
0032ad 2121      	.DB  0x65,0x73,0x65,0x74,0x2E,0x2E,0x21,0x21
0032ae 0a0d
0032af 3c00
0032b0 4544
0032b1 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0032b2 5f47
0032b3 6c43
0032b4 6165
0032b5 4c72      	.DB  0x47,0x5F,0x43,0x6C,0x65,0x61,0x72,0x4C
0032b6 676f
0032b7 6946
0032b8 656c
0032b9 203e      	.DB  0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E,0x20
0032ba 6552
0032bb 692d
0032bc 696e
0032bd 6974      	.DB  0x52,0x65,0x2D,0x69,0x6E,0x69,0x74,0x69
0032be 7461
0032bf 2065
0032c0 6f6c
0032c1 2067      	.DB  0x61,0x74,0x65,0x20,0x6C,0x6F,0x67,0x20
0032c2 6966
0032c3 656c
0032c4 0a0d
0032c5 3c00      	.DB  0x66,0x69,0x6C,0x65,0xD,0xA,0x0,0x3C
0032c6 4544
0032c7 5542
0032c8 5f47
0032c9 6c43      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x43,0x6C
0032ca 6165
0032cb 4c72
0032cc 676f
0032cd 6946      	.DB  0x65,0x61,0x72,0x4C,0x6F,0x67,0x46,0x69
0032ce 656c
0032cf 203e
0032d0 4f4c
0032d1 5f47      	.DB  0x6C,0x65,0x3E,0x20,0x4C,0x4F,0x47,0x5F
0032d2 7263
0032d3 6165
0032d4 6574
0032d5 6946      	.DB  0x63,0x72,0x65,0x61,0x74,0x65,0x46,0x69
0032d6 656c
0032d7 2528
0032d8 2973
0032d9 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0032da 6961
0032db 656c
0032dc 0d64
0032dd 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0032de 443c
0032df 4245
0032e0 4755
0032e1 735f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x73
0032e2 7465
0032e3 6552
0032e4 6c61
0032e5 7256      	.DB  0x65,0x74,0x52,0x65,0x61,0x6C,0x56,0x72
0032e6 6665
0032e7 203e
0032e8 6567
0032e9 2074      	.DB  0x65,0x66,0x3E,0x20,0x67,0x65,0x74,0x20
0032ea 6573
0032eb 2074
0032ec 7256
0032ed 6665      	.DB  0x73,0x65,0x74,0x20,0x56,0x72,0x65,0x66
0032ee 733c
0032ef 7274
0032f0 6e69
0032f1 3e67      	.DB  0x3C,0x73,0x74,0x72,0x69,0x6E,0x67,0x3E
0032f2 2520
0032f3 0d73
0032f4 000a
0032f5 443c      	.DB  0x20,0x25,0x73,0xD,0xA,0x0,0x3C,0x44
0032f6 4245
0032f7 4755
0032f8 735f
0032f9 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
0032fa 6552
0032fb 6c61
0032fc 7256
0032fd 6665      	.DB  0x52,0x65,0x61,0x6C,0x56,0x72,0x65,0x66
0032fe 203e
0032ff 6641
003300 6574
003301 2072      	.DB  0x3E,0x20,0x41,0x66,0x74,0x65,0x72,0x20
003302 6f63
003303 766e
003304 7265
003305 2074      	.DB  0x63,0x6F,0x6E,0x76,0x65,0x72,0x74,0x20
003306 203d
003307 6625
003308 0a0d
003309 3c00      	.DB  0x3D,0x20,0x25,0x66,0xD,0xA,0x0,0x3C
00330a 4544
00330b 5542
00330c 5f47
00330d 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
00330e 736e
00330f 726f
003310 6553
003311 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
003312 7463
003313 203e
003314 6854
003315 7369      	.DB  0x63,0x74,0x3E,0x20,0x54,0x68,0x69,0x73
003316 5420
003317 4d45
003318 5f50
003319 4553      	.DB  0x20,0x54,0x45,0x4D,0x50,0x5F,0x53,0x45
00331a 204c
00331b 6f6e
00331c 2074
00331d 7573      	.DB  0x4C,0x20,0x6E,0x6F,0x74,0x20,0x73,0x75
00331e 7070
00331f 726f
003320 0d74
003321 0d0a      	.DB  0x70,0x70,0x6F,0x72,0x74,0xD,0xA,0xD
003322 000a
003323 443c
003324 4245
003325 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
003326 735f
003327 6e65
003328 6f73
003329 5372      	.DB  0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
00332a 6c65
00332b 6365
00332c 3e74
00332d 4420      	.DB  0x65,0x6C,0x65,0x63,0x74,0x3E,0x20,0x44
00332e 7365
00332f 6c65
003330 6365
003331 2074      	.DB  0x65,0x73,0x65,0x6C,0x65,0x63,0x74,0x20
003332 6573
003333 736e
003334 726f
003335 0a0d      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0xD,0xA
003336 0a0d
003337 3c00
003338 4544
003339 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00333a 5f47
00333b 6573
00333c 736e
00333d 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
00333e 6553
00333f 656c
003340 7463
003341 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
003342 6553
003343 656c
003344 7463
003345 6465      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x65,0x64
003346 7320
003347 6e65
003348 6f73
003349 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
00334a 6425
00334b 0a0d
00334c 0a0d
00334d 3c00      	.DB  0x25,0x64,0xD,0xA,0xD,0xA,0x0,0x3C
00334e 4544
00334f 5542
003350 5f47
003351 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003352 736e
003353 726f
003354 6553
003355 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
003356 7463
003357 203e
003358 5245
003359 4f52      	.DB  0x63,0x74,0x3E,0x20,0x45,0x52,0x52,0x4F
00335a 2052
00335b 203a
00335c 6553
00335d 656c      	.DB  0x52,0x20,0x3A,0x20,0x53,0x65,0x6C,0x65
00335e 7463
00335f 6e69
003360 2067
003361 6573      	.DB  0x63,0x74,0x69,0x6E,0x67,0x20,0x73,0x65
003362 736e
003363 726f
003364 5b20
003365 6325      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x5B,0x25,0x63
003366 5b5d
003367 7830
003368 3025
003369 5832      	.DB  0x5D,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
00336a 0d5d
00336b 0d0a
00336c 000a
00336d 443c      	.DB  0x5D,0xD,0xA,0xD,0xA,0x0,0x3C,0x44
00336e 4245
00336f 4755
003370 735f
003371 7465      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x74
003372 6553
003373 6972
003374 6c61
003375 754e      	.DB  0x53,0x65,0x72,0x69,0x61,0x6C,0x4E,0x75
003376 626d
003377 7265
003378 203e
003379 6e69      	.DB  0x6D,0x62,0x65,0x72,0x3E,0x20,0x69,0x6E
00337a 6176
00337b 696c
00337c 2064
00337d 6573      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x73,0x65
00337e 7474
00337f 6e69
003380 2067
003381 7473      	.DB  0x74,0x74,0x69,0x6E,0x67,0x20,0x73,0x74
003382 6972
003383 676e
003384 2820
003385 6325      	.DB  0x72,0x69,0x6E,0x67,0x20,0x28,0x25,0x63
003386 5b29
003387 7830
003388 3025
003389 5d32      	.DB  0x29,0x5B,0x30,0x78,0x25,0x30,0x32,0x5D
00338a 0a0d
00338b 3c00
00338c 4544
00338d 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00338e 5f47
00338f 6573
003390 5374
003391 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
003392 6169
003393 4e6c
003394 6d75
003395 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
003396 3e72
003397 5220
003398 7065
003399 616c      	.DB  0x72,0x3E,0x20,0x52,0x65,0x70,0x6C,0x61
00339a 6963
00339b 676e
00339c 4420
00339d 5645      	.DB  0x63,0x69,0x6E,0x67,0x20,0x44,0x45,0x56
00339e 4349
00339f 5f45
0033a0 4553
0033a1 4952      	.DB  0x49,0x43,0x45,0x5F,0x53,0x45,0x52,0x49
0033a2 4c41
0033a3 2e2e
0033a4 0a0d
0033a5 3c00      	.DB  0x41,0x4C,0x2E,0x2E,0xD,0xA,0x0,0x3C
0033a6 4544
0033a7 5542
0033a8 5f47
0033a9 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0033aa 5374
0033ab 7265
0033ac 6169
0033ad 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
0033ae 6d75
0033af 6562
0033b0 3e72
0033b1 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
0033b2 7465
0033b3 5320
0033b4 7274
0033b5 6e69      	.DB  0x65,0x74,0x20,0x53,0x74,0x72,0x69,0x6E
0033b6 2067
0033b7 2d2d
0033b8 203e
0033b9 5b00      	.DB  0x67,0x20,0x2D,0x2D,0x3E,0x20,0x0,0x5B
0033ba 6325
0033bb 2500
0033bc 5d63
0033bd 3c00      	.DB  0x25,0x63,0x0,0x25,0x63,0x5D,0x0,0x3C
0033be 4544
0033bf 5542
0033c0 5f47
0033c1 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0033c2 5374
0033c3 7265
0033c4 6169
0033c5 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
0033c6 6d75
0033c7 6562
0033c8 3e72
0033c9 5320      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x53
0033ca 6375
0033cb 6563
0033cc 7373
0033cd 2121      	.DB  0x75,0x63,0x63,0x65,0x73,0x73,0x21,0x21
0033ce 4420
0033cf 5645
0033d0 535f
0033d1 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
0033d2 4149
0033d3 204c
0033d4 3d3d
0033d5 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
0033d6 5b00
0033d7 3025
0033d8 5832
0033d9 005d      	.DB  0x0,0x5B,0x25,0x30,0x32,0x58,0x5D,0x0
0033da 443c
0033db 4245
0033dc 4755
0033dd 725f      	.DB  0x3C,0x44,0x45,0x42,0x55,0x47,0x5F,0x72
0033de 6165
0033df 5364
0033e0 7265
0033e1 6169      	.DB  0x65,0x61,0x64,0x53,0x65,0x72,0x69,0x61
0033e2 4e6c
0033e3 6d75
0033e4 6562
0033e5 3e72      	.DB  0x6C,0x4E,0x75,0x6D,0x62,0x65,0x72,0x3E
0033e6 4420
0033e7 5645
0033e8 535f
0033e9 5245      	.DB  0x20,0x44,0x45,0x56,0x5F,0x53,0x45,0x52
0033ea 4149
0033eb 204c
0033ec 3d3d
0033ed 203e      	.DB  0x49,0x41,0x4C,0x20,0x3D,0x3D,0x3E,0x20
0033ee 4700
0033ef 7465
0033f0 4420
0033f1 6265      	.DB  0x0,0x47,0x65,0x74,0x20,0x44,0x65,0x62
0033f2 6775
0033f3 5220
0033f4 7165
0033f5 3a2e      	.DB  0x75,0x67,0x20,0x52,0x65,0x71,0x2E,0x3A
0033f6 2500
0033f7 3530
0033f8 2064
0033f9 2020      	.DB  0x0,0x25,0x30,0x35,0x64,0x20,0x20,0x20
0033fa 2500
0033fb 3230
0033fc 2078
0033fd 2e00      	.DB  0x0,0x25,0x30,0x32,0x78,0x20,0x0,0x2E
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4594): warning: .cseg .db misalignment - padding zero byte
0033fe 0000      	.DB  0x0
                 _0x300003:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4596): warning: .cseg .db misalignment - padding zero byte
0033ff 0003      	.DB  0x3
                 _0x340003:
003400 0000
003401 c120
003402 0000
003403 c1a0      	.DB  0x0,0x0,0x20,0xC1,0x0,0x0,0xA0,0xC1
003404 0000
003405 c220
003406 0000
003407 c220      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0x20,0xC2
003408 0000
003409 c270
00340a 0000
00340b c2a0      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0xA0,0xC2
00340c 0000
00340d c2a0
00340e 0000
00340f c2c8      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0xC8,0xC2
003410 0000
003411 c2f0
003412 0000
003413 c2f0      	.DB  0x0,0x0,0xF0,0xC2,0x0,0x0,0xF0,0xC2
003414 0000
003415 c30c
003416 0000
003417 c320      	.DB  0x0,0x0,0xC,0xC3,0x0,0x0,0x20,0xC3
003418 0000
003419 c320
00341a 0000
00341b c334      	.DB  0x0,0x0,0x20,0xC3,0x0,0x0,0x34,0xC3
00341c 0000
00341d c348
00341e 8312
00341f bdc0      	.DB  0x0,0x0,0x48,0xC3,0x12,0x83,0xC0,0xBD
003420 8937
003421 be41
003422 0000
003423 bec0      	.DB  0x37,0x89,0x41,0xBE,0x0,0x0,0xC0,0xBE
003424 0000
003425 bec0
003426 4fdf
003427 bf0d      	.DB  0x0,0x0,0xC0,0xBE,0xDF,0x4F,0xD,0xBF
003428 1062
003429 bf38
00342a 1062
00342b bf38      	.DB  0x62,0x10,0x38,0xBF,0x62,0x10,0x38,0xBF
00342c 4189
00342d bf60
00342e b021
00342f bf82      	.DB  0x89,0x41,0x60,0xBF,0x21,0xB0,0x82,0xBF
003430 b021
003431 bf82
003432 74bc
003433 bf93      	.DB  0x21,0xB0,0x82,0xBF,0xBC,0x74,0x93,0xBF
003434 6e98
003435 bfa2
003436 6e98
003437 bfa2      	.DB  0x98,0x6E,0xA2,0xBF,0x98,0x6E,0xA2,0xBF
003438 5c29
003439 bfaf
00343a 1cac
00343b bfba      	.DB  0x29,0x5C,0xAF,0xBF,0xAC,0x1C,0xBA,0xBF
00343c 0000
00343d c348
00343e 0000
00343f c320      	.DB  0x0,0x0,0x48,0xC3,0x0,0x0,0x20,0xC3
003440 0000
003441 c2c8
003442 1cac
003443 bfba      	.DB  0x0,0x0,0xC8,0xC2,0xAC,0x1C,0xBA,0xBF
003444 6e98
003445 bfa2
003446 4189
003447 bf60      	.DB  0x98,0x6E,0xA2,0xBF,0x89,0x41,0x60,0xBF
003448 0000
003449 c2c8
00344a 0000
00344b c270      	.DB  0x0,0x0,0xC8,0xC2,0x0,0x0,0x70,0xC2
00344c 0000
00344d c120
00344e 4189
00344f bf60      	.DB  0x0,0x0,0x20,0xC1,0x89,0x41,0x60,0xBF
003450 4fdf
003451 bf0d
003452 8312
003453 bdc0      	.DB  0xDF,0x4F,0xD,0xBF,0x12,0x83,0xC0,0xBD
003454 0000
003455 0000
003456 0000
003457 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003458 0000
003459 0000
00345a 0000
00345b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
00345c 0000
00345d 0000
00345e 6042
00345f 3fd5      	.DB  0x0,0x0,0x0,0x0,0x42,0x60,0xD5,0x3F
003460 0000
003461 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x34001B:
003462 0000
003463 0000
003464 0000
003465 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
003466 0a3d
003467 3fd7
003468 0000
003469 0000      	.DB  0x3D,0xA,0xD7,0x3F,0x0,0x0,0x0,0x0
                 _0x2000060:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4627): warning: .cseg .db misalignment - padding zero byte
00346a 0001      	.DB  0x1
                 _0x2000000:
00346b 4e2d
00346c 4e41
00346d 4900
00346e 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4630): warning: .cseg .db misalignment - padding zero byte
00346f 0000      	.DB  0x0
                 _0x2040003:
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4632): warning: .cseg .db misalignment - padding zero byte
003470 0001      	.DB  0x1
                 _0x2080000:
003471 4e2d
003472 4e41
C:\Data\Projects\AVR\IMS-ETH\iNT_ETH_CLOUD_Thermocouple_v01\List\iNT_ETH.asm(4634): warning: .cseg .db misalignment - padding zero byte
003473 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
003474 0004      	.DW  0x04
003475 1d8a      	.DW  0x1D8A
003476 0206 0000 	.DD  __HEAP_START_MARKER*2
                 
003478 0004      	.DW  0x04
003479 14e0      	.DW  _ETH_rst_timer_S0000001000
00347a 0248 0000 	.DD  _0xA5*2
                 
00347c 002b      	.DW  0x2B
00347d 0cf0      	.DW  _0x40009
00347e 10b2 0000 	.DD  _0x40000*2
                 
003480 0026      	.DW  0x26
003481 0d1b      	.DW  _0x40009+43
003482 10dd 0000 	.DD  _0x40000*2+43
                 
003484 002b      	.DW  0x2B
003485 0d41      	.DW  _0x40009+81
003486 10b2 0000 	.DD  _0x40000*2
                 
003488 0002      	.DW  0x02
003489 1434      	.DW  _d_out
00348a 118a 0000 	.DD  _0x80003*2
                 
00348c 0001      	.DW  0x01
00348d 10f6      	.DW  _is_properties_config_update
00348e 12f4 0000 	.DD  _0xE0003*2
                 
003490 0001      	.DW  0x01
003491 10f7      	.DW  _is_operating_config_update
003492 12f6 0000 	.DD  _0xE0004*2
                 
003494 0005      	.DW  0x05
003495 10f8      	.DW  _is_sensor_config_update
003496 12f8 0000 	.DD  _0xE0005*2
                 
003498 0010      	.DW  0x10
003499 10fd      	.DW  _is_din_config_update
00349a 12fe 0000 	.DD  _0xE0006*2
                 
00349c 0005      	.DW  0x05
00349d 110d      	.DW  _is_dout_config_update
00349e 130e 0000 	.DD  _0xE0007*2
                 
0034a0 0001      	.DW  0x01
0034a1 1112      	.DW  _is_buzzer_config_update
0034a2 1314 0000 	.DD  _0xE0008*2
                 
0034a4 0001      	.DW  0x01
0034a5 1113      	.DW  _is_status_config_update
0034a6 1316 0000 	.DD  _0xE0009*2
                 
0034a8 0001      	.DW  0x01
0034a9 1114      	.DW  _is_env_config_update
0034aa 1318 0000 	.DD  _0xE000A*2
                 
0034ac 0002      	.DW  0x02
0034ad 0d6c      	.DW  _0x1200D0
0034ae 3278 0000 	.DD  _0x120000*2+4850
                 
0034b0 0003      	.DW  0x03
0034b1 0007      	.DW  0x07
0034b2 42fe 0000 	.DD  _0x18001D*2
                 
0034b4 0005      	.DW  0x05
0034b5 1564      	.DW  _lastCheck_S00D0002000
0034b6 442e 0000 	.DD  _0x1A001A*2
                 
0034b8 0004      	.DW  0x04
0034b9 000a      	.DW  0x0A
0034ba 497c 0000 	.DD  _0x1C0005*2
                 
0034bc 0002      	.DW  0x02
0034bd 147c      	.DW  _dinStatus
0034be 4980 0000 	.DD  _0x1E0003*2
                 
0034c0 0002      	.DW  0x02
0034c1 147e      	.DW  _doutStatus
0034c2 4982 0000 	.DD  _0x1E0004*2
                 
0034c4 0001      	.DW  0x01
0034c5 1480      	.DW  _serverCommStatus
0034c6 4984 0000 	.DD  _0x1E0005*2
                 
0034c8 0002      	.DW  0x02
0034c9 1600      	.DW  _lastDinCheck_S00F0006000
0034ca 4986 0000 	.DD  _0x1E003A*2
                 
0034cc 0010      	.DW  0x10
0034cd 1496      	.DW  _dinAlarm
0034ce 4ac6 0000 	.DD  _0x220003*2
                 
0034d0 0010      	.DW  0x10
0034d1 1682      	.DW  _ainAlarm
0034d2 4ad6 0000 	.DD  _0x220004*2
                 
0034d4 0001      	.DW  0x01
0034d5 169c      	.DW  _lastCheck_S0110003000
0034d6 4ae6 0000 	.DD  _0x2200A8*2
                 
0034d8 0001      	.DW  0x01
0034d9 16a2      	.DW  _lastCheck_S0110004000
0034da 4ae8 0000 	.DD  _0x2200B1*2
                 
0034dc 0002      	.DW  0x02
0034dd 16b2      	.DW  _lastCheck_S0110006000
0034de 4aea 0000 	.DD  _0x2200C5*2
                 
0034e0 0005      	.DW  0x05
0034e1 16cd      	.DW  _lastCheck_S0110007000
0034e2 4aec 0000 	.DD  _0x2200CF*2
                 
0034e4 0004      	.DW  0x04
0034e5 1487      	.DW  _muteAlarmExpired
0034e6 4af2 0000 	.DD  _0x2200DD*2
                 
0034e8 0001      	.DW  0x01
0034e9 0006      	.DW  0x06
0034ea 4af6 0000 	.DD  _0x2200F6*2
                 
0034ec 0003      	.DW  0x03
0034ed 191f      	.DW  _root_path
0034ee 4da0 0000 	.DD  _0x260003*2
                 
0034f0 0008      	.DW  0x08
0034f1 14a8      	.DW  _LOGFILE_DATA
0034f2 527a 0000 	.DD  _0x280003*2
                 
0034f4 0009      	.DW  0x09
0034f5 14b1      	.DW  _LOGFILE_EVENT
0034f6 5282 0000 	.DD  _0x280004*2
                 
0034f8 0009      	.DW  0x09
0034f9 14bb      	.DW  _LOGFILE_ERROR
0034fa 528c 0000 	.DD  _0x280005*2
                 
0034fc 0010      	.DW  0x10
0034fd 14c5      	.DW  _LOG_INIT_STR
0034fe 5296 0000 	.DD  _0x280006*2
                 
003500 0004      	.DW  0x04
003501 14d5      	.DW  _LOG_openFile
003502 52a6 0000 	.DD  _0x280007*2
                 
003504 0004      	.DW  0x04
003505 14d9      	.DW  _LOG_closeFile
003506 52aa 0000 	.DD  _0x280008*2
                 
003508 0001      	.DW  0x01
003509 10f4      	.DW  _hwCalId
00350a 648a 0000 	.DD  _0x2E0003*2
                 
00350c 0001      	.DW  0x01
00350d 1a71      	.DW  _n
00350e 67fe 0000 	.DD  _0x300003*2
                 
003510 0001      	.DW  0x01
003511 1aa9      	.DW  __seed_G100
003512 68d4 0000 	.DD  _0x2000060*2
                 
003514 0001      	.DW  0x01
003515 1aad      	.DW  _status_G102
003516 68e0 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
003518 0000      	.DW  0
                 
                 __RESET:
003519 94f8      	CLI
00351a 27ee      	CLR  R30
00351b bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00351c e0f1      	LDI  R31,1
00351d bff5      	OUT  MCUCR,R31
00351e bfe5      	OUT  MCUCR,R30
00351f 93e0 0074 	STS  XMCRA,R30
003521 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
003523 e1f8      	LDI  R31,0x18
003524 95a8      	WDR
003525 b7a4      	IN   R26,MCUSR
003526 7fa7      	CBR  R26,8
003527 bfa4      	OUT  MCUSR,R26
003528 93f0 0060 	STS  WDTCSR,R31
00352a 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00352c e08d      	LDI  R24,(14-2)+1
00352d e0a2      	LDI  R26,2
00352e 27bb      	CLR  R27
                 __CLEAR_REG:
00352f 93ed      	ST   X+,R30
003530 958a      	DEC  R24
003531 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
003532 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
003533 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
003534 e0a0      	LDI  R26,LOW(__SRAM_START)
003535 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
003536 93ed      	ST   X+,R30
003537 9701      	SBIW R24,1
003538 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
003539 eee8      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00353a e6f8      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
00353b e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00353c bfdb      	OUT  RAMPZ,R29
00353d 9187      	ELPM R24,Z+
00353e 9197      	ELPM R25,Z+
00353f 9700      	SBIW R24,0
003540 f081      	BREQ __GLOBAL_INI_END
003541 91a7      	ELPM R26,Z+
003542 91b7      	ELPM R27,Z+
003543 9007      	ELPM R0,Z+
003544 9017      	ELPM R1,Z+
003545 91c7      	ELPM R28,Z+
003546 91d7      	ELPM R29,Z+
003547 01bf      	MOVW R22,R30
003548 b7db      	IN   R29,RAMPZ
003549 01f0      	MOVW R30,R0
00354a bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
00354b 9007      	ELPM R0,Z+
00354c 920d      	ST   X+,R0
00354d 9701      	SBIW R24,1
00354e f7e1      	BRNE __GLOBAL_INI_LOOP
00354f 01fb      	MOVW R30,R22
003550 cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
003551 e0e0      	LDI  R30,__GPIOR0_INIT
003552 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
003553 e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
003554 bfed      	OUT  SPL,R30
003555 e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
003556 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
003557 efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
003558 e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
003559 940c 355b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "oled.h"
                 ;#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;#include "smoothFilter.h"
                 ;#include "ad595.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;//#include <interrupt.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0034 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;
                 ;
                 ;//void SIG_OUTPUT_COMPARE1A( void ) __attribute__ ( (naked) );
                 ;//	void SIG_OUTPUT_COMPARE1A( void )
                 ;//	{
                 ;//		//vPortYieldFromTick();
                 ;//		//asm volatile ( "reti" );
                 ;//	}
                 ;
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 004D {
                 
                 	.CSEG
                 _main:
                 ; 0000 004E     int                     err,i=0,k=0,res,last_status;
                 ; 0000 004F 
                 ; 0000 0050     TIMER                   sensor_report_timer[5];
                 ; 0000 0051     TIMER                   status_report_timer;
                 ; 0000 0052     TIMER                   check_reset_timer;
                 ; 0000 0053     TIMER                   check_memory_timer;
                 ; 0000 0054     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 0055     TIMER                   readSensorTimer = 0;
                 ; 0000 0056     unsigned long int       timestamp_rd;
                 ; 0000 0057 
                 ; 0000 0058     char                    key_press = 0;
                 ; 0000 0059 
                 ; 0000 005A     float tmpA = 0.0;
                 ; 0000 005B     float tmpB = 0.0;
                 ; 0000 005C     float tmpC = 0.0;
                 ; 0000 005D 
                 ; 0000 005E     int ivADC = 0;
                 ; 0000 005F     float ivADCFloat = 0.0;
                 ; 0000 0060     float ivVolt = 0.0;
                 ; 0000 0061     float ivVoltPlusffset = 0.0;
                 ; 0000 0062     float ivTempC = 0.0;
                 ; 0000 0063     float ivVoltzero = 0.0;
                 ; 0000 0064     float ivZero = 1.68;
                 ; 0000 0065 
                 ; 0000 0066     long viADCbuffer = 0;
                 ; 0000 0067 
                 ; 0000 0068     float ivADCbuffFloat = 0.0;
                 ; 0000 0069     int j = 0;
                 ; 0000 006A 
                 ; 0000 006B     //int i = 0;
                 ; 0000 006C 
                 ; 0000 006D 
                 ; 0000 006E     //int viADCbuffer[];
                 ; 0000 006F 
                 ; 0000 0070     struct rtc_structure st_rtc;
                 ; 0000 0071 
                 ; 0000 0072     // -------- System Initialize ----------- //
                 ; 0000 0073     do{ err = initial_system();  }while(err);
00355b 97ef      	SBIW R28,63
00355c 97ec      	SBIW R28,60
00355d e38d      	LDI  R24,61
00355e e1aa      	LDI  R26,LOW(26)
00355f e0b0      	LDI  R27,HIGH(26)
003560 e0ea      	LDI  R30,LOW(_0x3*2)
003561 e0f2      	LDI  R31,HIGH(_0x3*2)
003562 e060      	LDI  R22,BYTE3(_0x3*2)
003563 940e e0dc 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+121
                 ;	last_status -> Y+119
                 ;	sensor_report_timer -> Y+99
                 ;	status_report_timer -> Y+95
                 ;	check_reset_timer -> Y+91
                 ;	check_memory_timer -> Y+87
                 ;	clear_duplicate_timer -> Y+83
                 ;	readSensorTimer -> Y+79
                 ;	timestamp_rd -> Y+75
                 ;	key_press -> Y+74
                 ;	tmpA -> Y+70
                 ;	tmpB -> Y+66
                 ;	tmpC -> Y+62
                 ;	ivADC -> Y+60
                 ;	ivADCFloat -> Y+56
                 ;	ivVolt -> Y+52
                 ;	ivVoltPlusffset -> Y+48
                 ;	ivTempC -> Y+44
                 ;	ivVoltzero -> Y+40
                 ;	ivZero -> Y+36
                 ;	viADCbuffer -> Y+32
                 ;	ivADCbuffFloat -> Y+28
                 ;	j -> Y+26
                 ;	st_rtc -> Y+0
003565 940e c01b 	CALL SUBOPT_0x0
                 _0x5:
003567 940e 3e04 	CALL _initial_system
003569 018f      	MOVW R16,R30
00356a 2e00      	MOV  R0,R16
00356b 2a01      	OR   R0,R17
00356c f7d1      	BRNE _0x5
                 ; 0000 0074 
                 ; 0000 0075 
                 ; 0000 0076 //    DDRH=0xF8;
                 ; 0000 0077 //    PORTH =0x00;
                 ; 0000 0078 //    delay_ms(100);
                 ; 0000 0079 //
                 ; 0000 007A //    while(1){
                 ; 0000 007B //        #asm("wdr")
                 ; 0000 007C //        PORTH = 0xF0;
                 ; 0000 007D //        delay_ms(1000);
                 ; 0000 007E //        PORTH = 0x00;
                 ; 0000 007F //        delay_ms(1000);
                 ; 0000 0080 //    }
                 ; 0000 0081 
                 ; 0000 0082 
                 ; 0000 0083     //ETH_CONF;
                 ; 0000 0084 
                 ; 0000 0085     ETH_switchMode((unsigned char) MODE_NORM);
00356d e8a0      	LDI  R26,LOW(128)
00356e 940e 5dfb 	CALL _ETH_switchMode
                 ; 0000 0086     //ETH_NORM;
                 ; 0000 0087    // ETH_reset();
                 ; 0000 0088    // ETH_OFF;
                 ; 0000 0089    // delay_ms(2000);
                 ; 0000 008A    // ETH_ON;
                 ; 0000 008B 
                 ; 0000 008C     // -- alarm indicator initialize -- //
                 ; 0000 008D     buzzer_on = 0;          // -- buzzer off -- //
003570 98f3      	CBI  0x1E,3
                 ; 0000 008E     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
003571 e040     +LDI R20 , LOW ( 0 )
003572 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
003573 3042     +CPI R20 , LOW ( 2 )
003574 e0e0     +LDI R30 , HIGH ( 2 )
003575 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003576 f44c      	BRGE _0xB
                 ; 0000 008F     {
                 ; 0000 0090         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
003577 940e c020 	CALL SUBOPT_0x1
003579 940e c02a 	CALL SUBOPT_0x2
00357b 940e 42d6 	CALL _IO_dout
                 ; 0000 0091     }
                +
00357d 5f4f     +SUBI R20 , LOW ( - 1 )
00357e 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00357f cff3      	RJMP _0xA
                 _0xB:
                 ; 0000 0092 
                 ; 0000 0093     initDataLogQueue();
003580 940e 868a 	CALL _initDataLogQueue
                 ; 0000 0094     initEventLogQueue();
003582 940e 8760 	CALL _initEventLogQueue
                 ; 0000 0095     ETH_initWaitQueue();
003584 940e 69de 	CALL _ETH_initWaitQueue
                 ; 0000 0096 
                 ; 0000 0097     printDebug("\r\n------ Initial Complete ------\r\n");
                +
003586 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
003587 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
003588 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
003589 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
00358a 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0098     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
00358c e6ef     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
00358d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
00358e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
00358f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
003590 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0099 
                 ; 0000 009A 
                 ; 0000 009B     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 009C 
                 ; 0000 009D     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
003592 e020     +LDI R18 , LOW ( 0 )
003593 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
003594 3025     +CPI R18 , LOW ( 5 )
003595 e0e0     +LDI R30 , HIGH ( 5 )
003596 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003597 f444      	BRGE _0xE
                 ; 0000 009E         if(operating_config.sensorEnable[i]){
003598 940e c036 	CALL SUBOPT_0x4
00359a f011      	BREQ _0xF
                 ; 0000 009F             TIMER_setTimer(&sensor_report_timer[i], 5);
00359b 940e c03d 	CALL SUBOPT_0x5
                 ; 0000 00A0         }
                 ; 0000 00A1     }
                 _0xF:
                +
00359d 5f2f     +SUBI R18 , LOW ( - 1 )
00359e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00359f cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 00A2 
                 ; 0000 00A3 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 00A4 //                 -90, -20, 50,
                 ; 0000 00A5 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 00A6 //
                 ; 0000 00A7 //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 00A8 //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 00A9 //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 00AA 
                 ; 0000 00AB     TIMER_setTimer(&status_report_timer, 7);
0035a0 940e c04d 	CALL SUBOPT_0x6
                 ; 0000 00AC     TIMER_setTimer(&check_reset_timer, 60);
0035a2 940e c058 	CALL SUBOPT_0x7
                 ; 0000 00AD     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0035a4 940e c063 	CALL SUBOPT_0x8
                 ; 0000 00AE 
                 ; 0000 00AF 
                 ; 0000 00B0 //    while(1){
                 ; 0000 00B1 //        #asm("wdr")
                 ; 0000 00B2 //        viADCbuffer = 0;
                 ; 0000 00B3 //        for(j=0;j<30;j++){
                 ; 0000 00B4 //           viADCbuffer += read_adc(8);
                 ; 0000 00B5 //        }
                 ; 0000 00B6 //        //printDebug("ADC[0] Temp C : %f\r\n",iAD595ADCToTemp(viADCbuffer,30));
                 ; 0000 00B7 //        iAD595ADCToTemp(viADCbuffer,30);
                 ; 0000 00B8 //        delay_ms(500);
                 ; 0000 00B9 //    }
                 ; 0000 00BA 
                 ; 0000 00BB 
                 ; 0000 00BC     while(1){
                 _0x10:
                 ; 0000 00BD 
                 ; 0000 00BE         #asm("wdr")
0035a6 95a8      	wdr
                 ; 0000 00BF 
                 ; 0000 00C0         // Reset at 05.00 in every day
                 ; 0000 00C1         if(TIMER_checkTimerExceed(check_reset_timer))
                +
0035a7 01de     +MOVW R26 , R28
0035a8 5aa5     +SUBI R26 , LOW ( - 91 )
0035a9 4fbf     +SBCI R27 , HIGH ( - 91 )
0035aa 900d     +LD R0 , X +
0035ab 901d     +LD R1 , X +
0035ac 918d     +LD R24 , X +
0035ad 919c     +LD R25 , X
0035ae 01d0     +MOVW R26 , R0
                 	__GETD2SX 91
0035af 940e 4130 	CALL _TIMER_checkTimerExceed
0035b1 9730      	SBIW R30,0
0035b2 f0c1      	BREQ _0x13
                 ; 0000 00C2         {
                 ; 0000 00C3             TIMER_setTimer(&check_reset_timer, 60);
0035b3 940e c058 	CALL SUBOPT_0x7
                 ; 0000 00C4             RTC_getDateTime(&st_rtc, 7);
0035b5 940e c06e 	CALL SUBOPT_0x9
0035b7 940e c072 	CALL SUBOPT_0xA
0035b9 940e 47ea 	CALL _RTC_getDateTime
                 ; 0000 00C5 //            printRTC(st_rtc);
                 ; 0000 00C6             if(st_rtc.hour == 5) {
0035bb 940e c075 	CALL SUBOPT_0xB
                +
0035bd 30a5     +CPI R26 , LOW ( 0x5 )
0035be e0e0     +LDI R30 , HIGH ( 0x5 )
0035bf 07be     +CPC R27 , R30
0035c0 e0e0     +LDI R30 , BYTE3 ( 0x5 )
0035c1 078e     +CPC R24 , R30
0035c2 e0e0     +LDI R30 , BYTE4 ( 0x5 )
0035c3 079e     +CPC R25 , R30
                 	__CPD2N 0x5
0035c4 f431      	BRNE _0x14
                 ; 0000 00C7                 if(st_rtc.min == 0) {
0035c5 940e c07a 	CALL SUBOPT_0xC
0035c7 940e e0b2 	CALL __CPD10
0035c9 f409      	BRNE _0x15
                 ; 0000 00C8                     while(1);
                 _0x16:
0035ca cfff      	RJMP _0x16
                 ; 0000 00C9                 }
                 ; 0000 00CA             }
                 _0x15:
                 ; 0000 00CB         }
                 _0x14:
                 ; 0000 00CC 
                 ; 0000 00CD         // ----------- Received Debug Request ---------- //
                 ; 0000 00CE         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
0035cb 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
0035cd 30e0      	CPI  R30,0
0035ce f011      	BREQ _0x19
0035cf 940e 9d6d 	CALL _debug_req
                 ; 0000 00CF 
                 ; 0000 00D0         // ----------- On Device Key Press ------------- //
                 ; 0000 00D1         key_press = IO_keyCheck();
                 _0x19:
0035d1 940e 42f4 	CALL _IO_keyCheck
                +
0035d3 01de     +MOVW R26 , R28
0035d4 5ba6     +SUBI R26 , LOW ( - 74 )
0035d5 4fbf     +SBCI R27 , HIGH ( - 74 )
0035d6 93ec     +ST X , R30
                 	__PUTB1SX 74
                 ; 0000 00D2         if(key_press){
0035d7 30e0      	CPI  R30,0
0035d8 f031      	BREQ _0x1A
                 ; 0000 00D3             MENU_processKey(key_press);
                +
0035d9 01de     +MOVW R26 , R28
0035da 5ba6     +SUBI R26 , LOW ( - 74 )
0035db 4fbf     +SBCI R27 , HIGH ( - 74 )
0035dc 91ac     +LD R26 , X
                 	__GETB2SX 74
0035dd 940e 8772 	CALL _MENU_processKey
                 ; 0000 00D4         }
                 ; 0000 00D5 
                 ; 0000 00D6         // ----------- Ethernet Communication ---------- //
                 ; 0000 00D7         ETH_receive();
                 _0x1A:
0035df 940e 5cb1 	CALL _ETH_receive
                 ; 0000 00D8         ETH_retransmit();
0035e1 940e 56f7 	CALL _ETH_retransmit
                 ; 0000 00D9 
                 ; 0000 00DA         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00DB         if(is_properties_config_update){
0035e3 91e0 10f6 	LDS  R30,_is_properties_config_update
0035e5 30e0      	CPI  R30,0
0035e6 f011      	BREQ _0x1B
                 ; 0000 00DC             getPropertiesConfig(&properties_config);
0035e7 940e c07f 	CALL SUBOPT_0xD
                 ; 0000 00DD             is_properties_config_update = 0;
                 ; 0000 00DE         }
                 ; 0000 00DF 
                 ; 0000 00E0         if(is_operating_config_update){
                 _0x1B:
0035e9 91e0 10f7 	LDS  R30,_is_operating_config_update
0035eb 30e0      	CPI  R30,0
0035ec f011      	BREQ _0x1C
                 ; 0000 00E1             getOperatingConfig(&operating_config);
0035ed 940e c087 	CALL SUBOPT_0xE
                 ; 0000 00E2             is_operating_config_update = 0;
                 ; 0000 00E3         }
                 ; 0000 00E4 
                 ; 0000 00E5         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1C:
                +
0035ef e020     +LDI R18 , LOW ( 0 )
0035f0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E:
                +
0035f1 3025     +CPI R18 , LOW ( 5 )
0035f2 e0e0     +LDI R30 , HIGH ( 5 )
0035f3 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0035f4 f504      	BRGE _0x1F
                 ; 0000 00E6             if(is_sensor_config_update[i]){
0035f5 efa8      	LDI  R26,LOW(_is_sensor_config_update)
0035f6 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
0035f7 940e c08f 	CALL SUBOPT_0xF
0035f9 f0c1      	BREQ _0x20
                 ; 0000 00E7                 err = getSensorConfig(i,&sensor_config[i]);
0035fa 933a      	ST   -Y,R19
0035fb 932a      	ST   -Y,R18
0035fc 940e c094 	CALL SUBOPT_0x10
0035fe 940e 49a7 	CALL _getSensorConfig
003600 018f      	MOVW R16,R30
                 ; 0000 00E8                 if(err < 0){
003601 2311      	TST  R17
003602 f44a      	BRPL _0x21
                 ; 0000 00E9                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
003603 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
003604 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
003605 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
003606 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
003607 940e c09d 	CALL SUBOPT_0x11
003609 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 00EA                     continue;
00360b c006      	RJMP _0x1D
                 ; 0000 00EB                 }
                 ; 0000 00EC                 is_sensor_config_update[i] = 0;
                 _0x21:
00360c efa8      	LDI  R26,LOW(_is_sensor_config_update)
00360d e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
00360e 940e c0aa 	CALL SUBOPT_0x13
                 ; 0000 00ED                 TIMER_setTimer(&sensor_report_timer[i], 5);
003610 940e c03d 	CALL SUBOPT_0x5
                 ; 0000 00EE             }
                 ; 0000 00EF         }
                 _0x20:
                 _0x1D:
                +
003612 5f2f     +SUBI R18 , LOW ( - 1 )
003613 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003614 cfdc      	RJMP _0x1E
                 _0x1F:
                 ; 0000 00F0 
                 ; 0000 00F1         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
003615 91e0 1112 	LDS  R30,_is_buzzer_config_update
003617 30e0      	CPI  R30,0
003618 f011      	BREQ _0x22
                 ; 0000 00F2             getBuzzerConfig(&buzz_config);
003619 940e c0af 	CALL SUBOPT_0x14
                 ; 0000 00F3             is_buzzer_config_update = 0;
                 ; 0000 00F4         }
                 ; 0000 00F5 
                 ; 0000 00F6         for(i=0;i<USE_DIN;i++){
                 _0x22:
                +
00361b e020     +LDI R18 , LOW ( 0 )
00361c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
00361d 3022     +CPI R18 , LOW ( 2 )
00361e e0e0     +LDI R30 , HIGH ( 2 )
00361f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003620 f49c      	BRGE _0x25
                 ; 0000 00F7             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
003621 efad      	LDI  R26,LOW(_is_din_config_update)
003622 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003623 940e c08f 	CALL SUBOPT_0xF
003625 f059      	BREQ _0x26
                 ; 0000 00F8                 getAuxDinConfig(i,&din_config[i]);
003626 933a      	ST   -Y,R19
003627 932a      	ST   -Y,R18
003628 940e c0b7 	CALL SUBOPT_0x15
00362a 01df      	MOVW R26,R30
00362b 940e 4a8f 	CALL _getAuxDinConfig
                 ; 0000 00F9                 is_din_config_update[i] = 0;
00362d efad      	LDI  R26,LOW(_is_din_config_update)
00362e e1b0      	LDI  R27,HIGH(_is_din_config_update)
00362f 940e c0aa 	CALL SUBOPT_0x13
                 ; 0000 00FA             }
                 ; 0000 00FB         }
                 _0x26:
                +
003631 5f2f     +SUBI R18 , LOW ( - 1 )
003632 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003633 cfe9      	RJMP _0x24
                 _0x25:
                 ; 0000 00FC 
                 ; 0000 00FD         for(i=0;i<USE_DOUT;i++){
                +
003634 e020     +LDI R18 , LOW ( 0 )
003635 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x28:
                +
003636 3022     +CPI R18 , LOW ( 2 )
003637 e0e0     +LDI R30 , HIGH ( 2 )
003638 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003639 f49c      	BRGE _0x29
                 ; 0000 00FE             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
00363a e0ad      	LDI  R26,LOW(_is_dout_config_update)
00363b e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00363c 940e c08f 	CALL SUBOPT_0xF
00363e f059      	BREQ _0x2A
                 ; 0000 00FF                 getAuxDoutConfig(i,&dout_config[i]);
00363f 933a      	ST   -Y,R19
003640 932a      	ST   -Y,R18
                +
003641 e2a6     +LDI R26 , 38
003642 9fa2     +MUL R26 , R18
003643 01f0     +MOVW R30 , R0
003644 9fa3     +MUL R26 , R19
003645 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
003646 940e c0bf 	CALL SUBOPT_0x16
                 ; 0000 0100                 is_dout_config_update[i] = 0;
003648 940e c0aa 	CALL SUBOPT_0x13
                 ; 0000 0101             }
                 ; 0000 0102         }
                 _0x2A:
                +
00364a 5f2f     +SUBI R18 , LOW ( - 1 )
00364b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00364c cfe9      	RJMP _0x28
                 _0x29:
                 ; 0000 0103 
                 ; 0000 0104         if(is_status_config_update){
00364d 91e0 1113 	LDS  R30,_is_status_config_update
00364f 30e0      	CPI  R30,0
003650 f021      	BREQ _0x2B
                 ; 0000 0105             getStatusReportConfig(&status_config);
003651 940e c0c7 	CALL SUBOPT_0x17
                 ; 0000 0106             is_status_config_update = 0;
                 ; 0000 0107 
                 ; 0000 0108             TIMER_setTimer(&status_report_timer, 7);
003653 940e c04d 	CALL SUBOPT_0x6
                 ; 0000 0109         }
                 ; 0000 010A 
                 ; 0000 010B         if(is_env_config_update){
                 _0x2B:
003655 91e0 1114 	LDS  R30,_is_env_config_update
003657 30e0      	CPI  R30,0
003658 f011      	BREQ _0x2C
                 ; 0000 010C             getEnvAlarmConfig(&env_config);
003659 940e c0cf 	CALL SUBOPT_0x18
                 ; 0000 010D             is_env_config_update = 0;
                 ; 0000 010E         }
                 ; 0000 010F 
                 ; 0000 0110         /*bongkot test*/
                 ; 0000 0111 //        operating_config.deviceEnable = 1;
                 ; 0000 0112 //        operating_config.sensorEnable[0] = 1;
                 ; 0000 0113 //        operating_config.sensorEnable[1] = 0;
                 ; 0000 0114 //        operating_config.sensorEnable[2] = 0;
                 ; 0000 0115 //        operating_config.sensorEnable[3] = 0;
                 ; 0000 0116 //        operating_config.sensorEnable[4] = 0;
                 ; 0000 0117 
                 ; 0000 0118         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2C:
                +
00365b 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
00365d 30e0      	CPI  R30,0
00365e f411      	BRNE PC+3
00365f 940c 3869 	JMP _0x2D
                 ; 0000 0119         {
                 ; 0000 011A             // -------------- Sensor Association -------------- //
                 ; 0000 011B             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003661 e020     +LDI R18 , LOW ( 0 )
003662 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2F:
                +
003663 3025     +CPI R18 , LOW ( 5 )
003664 e0e0     +LDI R30 , HIGH ( 5 )
003665 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003666 f014      	BRLT PC+3
003667 940c 36ae 	JMP _0x30
                 ; 0000 011C             {
                 ; 0000 011D                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
003669 940e c036 	CALL SUBOPT_0x4
00366b f411      	BRNE PC+3
00366c 940c 36ab 	JMP _0x31
                 ; 0000 011E                 {
                 ; 0000 011F                     //** test **//
                 ; 0000 0120 //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 0121 //                    {
                 ; 0000 0122 //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 0123 //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 0124 //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 0125 //                    }
                 ; 0000 0126                     //-- test --//
                 ; 0000 0127 
                 ; 0000 0128                     //printDebug("<main> sensorRead\r\n");
                 ; 0000 0129                     err = sensorRead(i,&sensor[i]);
00366e 940e c0d7 	CALL SUBOPT_0x19
003670 940e 6b91 	CALL _sensorRead
003672 018f      	MOVW R16,R30
                 ; 0000 012A                     if(err < 0)                                 // . sensor value error . //
003673 2311      	TST  R17
003674 f1b2      	BRMI _0x2E
                 ; 0000 012B                     {
                 ; 0000 012C                         continue;
                 ; 0000 012D                     }
                 ; 0000 012E                     else                                        // . sensor value valid . //
                 ; 0000 012F                     {
                 ; 0000 0130                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 0131                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
003675 940e c0e2 	CALL SUBOPT_0x1A
003677 940e c0e9 	CALL SUBOPT_0x1B
003679 940e c0ee 	CALL SUBOPT_0x1C
00367b f179      	BREQ _0x34
                 ; 0000 0132                         {
                 ; 0000 0133                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
00367c 940e c0e2 	CALL SUBOPT_0x1A
00367e 940e c0f4 	CALL SUBOPT_0x1D
003680 940e c094 	CALL SUBOPT_0x10
003682 940e c0f9 	CALL SUBOPT_0x1E
003684 940e c0fe 	CALL SUBOPT_0x1F
                 ; 0000 0134 
                 ; 0000 0135                             timestamp_rd = DS1672_read();
003686 940e 44bd 	CALL _DS1672_read
                +
003688 01de     +MOVW R26 , R28
003689 5ba5     +SUBI R26 , LOW ( - 75 )
00368a 4fbf     +SBCI R27 , HIGH ( - 75 )
00368b 93ed     +ST X + , R30
00368c 93fd     +ST X + , R31
00368d 936d     +ST X + , R22
00368e 937c     +ST X , R23
                 	__PUTD1SX 75
                 ; 0000 0136                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
00368f 940e e05e 	CALL __PUTPARD1
003691 940e c0d7 	CALL SUBOPT_0x19
003693 940e e02e 	CALL __GETD1P
003695 01df      	MOVW R26,R30
003696 01cb      	MOVW R24,R22
003697 940e 7416 	CALL _addDataQueue
003699 018f      	MOVW R16,R30
                 ; 0000 0137                             if(err<0){
00369a 2311      	TST  R17
00369b f47a      	BRPL _0x35
                 ; 0000 0138                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
00369c ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
00369d e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
00369e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
00369f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
0036a0 940e c09d 	CALL SUBOPT_0x11
                +
0036a2 e0a5     +LDI R26 , 5
0036a3 9fa2     +MUL R26 , R18
0036a4 01f0     +MOVW R30 , R0
0036a5 9fa3     +MUL R26 , R19
0036a6 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
0036a7 940e c102 	CALL SUBOPT_0x20
0036a9 940e c108 	CALL SUBOPT_0x21
                 ; 0000 0139                                 continue;   // -- continue other sensor
                 ; 0000 013A                             }
                 ; 0000 013B                         }
                 _0x35:
                 ; 0000 013C                         else{
                 _0x34:
                 ; 0000 013D                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 013E                         }
                 ; 0000 013F                     }
                 ; 0000 0140 
                 ; 0000 0141                 }
                 ; 0000 0142                 else                                            // .. sensor disable .. //
                 _0x31:
                 ; 0000 0143                 {
                 ; 0000 0144                 }
                 ; 0000 0145             } // -- iterate each probe -- //
                 _0x2E:
                +
0036ab 5f2f     +SUBI R18 , LOW ( - 1 )
0036ac 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0036ad cfb5      	RJMP _0x2F
                 _0x30:
                 ; 0000 0146 
                 ; 0000 0147             #asm("wdr")
0036ae 95a8      	wdr
                 ; 0000 0148             // --------------- Status Management --------------- //
                 ; 0000 0149            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 014A             last_status = updateStatus();
0036af d22a      	RCALL _updateStatus
                +
0036b0 01de     +MOVW R26 , R28
0036b1 58a9     +SUBI R26 , LOW ( - 119 )
0036b2 4fbf     +SBCI R27 , HIGH ( - 119 )
0036b3 93ed     +ST X + , R30
0036b4 93fc     +ST X , R31
                 	__PUTW1SX 119
                 ; 0000 014B 
                 ; 0000 014C             // --------------- Alarm Management --------------- //
                 ; 0000 014D             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
0036b5 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0036b7 30e0      	CPI  R30,0
0036b8 f411      	BRNE PC+3
0036b9 940c 372e 	JMP _0x38
                 ; 0000 014E             {
                 ; 0000 014F                 // -- check alarm all -- //
                 ; 0000 0150                 if(last_status < 0)                             // .. status update falied .. //
                +
0036bb 01de     +MOVW R26 , R28
0036bc 58a8     +SUBI R26 , LOW ( - 120 )
0036bd 4fbf     +SBCI R27 , HIGH ( - 120 )
0036be 91ac     +LD R26 , X
                 	__GETB2SX 120
0036bf 23aa      	TST  R26
0036c0 f43a      	BRPL _0x39
                 ; 0000 0151                 {
                 ; 0000 0152                     printDebug("<main> updateStatus() failed\r\n");
                +
0036c1 eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
0036c2 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
0036c3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
0036c4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
0036c5 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0153                 }
                 ; 0000 0154                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
0036c7 c062      	RJMP _0x3A
                 _0x39:
                +
0036c8 01de     +MOVW R26 , R28
0036c9 58a9     +SUBI R26 , LOW ( - 119 )
0036ca 4fbf     +SBCI R27 , HIGH ( - 119 )
0036cb 900d     +LD R0 , X +
0036cc 91bc     +LD R27 , X
0036cd 2da0     +MOV R26 , R0
                 	__GETW2SX 119
0036ce 940e e0b6 	CALL __CPW02
0036d0 f424      	BRGE _0x3C
0036d1 91e0 148b 	LDS  R30,_muteMode
0036d3 30e0      	CPI  R30,0
0036d4 f009      	BREQ _0x3D
                 _0x3C:
0036d5 c044      	RJMP _0x3B
                 _0x3D:
                 ; 0000 0155                 {
                 ; 0000 0156                     // -- Buzzer Alarm -- //
                 ; 0000 0157                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
0036d6 91a0 133d 	LDS  R26,_buzz_config
0036d8 30a1      	CPI  R26,LOW(0x1)
0036d9 f471      	BRNE _0x3E
                 ; 0000 0158                     {
                 ; 0000 0159                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 015A                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
0036da e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
0036db e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
0036dc 93fa      	ST   -Y,R31
0036dd 93ea      	ST   -Y,R30
                +
0036de 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
0036e0 27bb      	CLR  R27
0036e1 940e c10f 	CALL SUBOPT_0x22
                 ; 0000 015B                         if(res){
0036e3 f011      	BREQ _0x3F
                 ; 0000 015C                             buzzer_on = 1;          // -- buzzer on -- //
0036e4 9af3      	SBI  0x1E,3
                 ; 0000 015D                         }
                 ; 0000 015E                         else{
0036e5 c001      	RJMP _0x42
                 _0x3F:
                 ; 0000 015F                             buzzer_on = 0;          // -- buzzer off -- //
0036e6 98f3      	CBI  0x1E,3
                 ; 0000 0160                         }
                 _0x42:
                 ; 0000 0161                     }
                 ; 0000 0162                     else                                        // -- buzzer disabled -- //
0036e7 c001      	RJMP _0x45
                 _0x3E:
                 ; 0000 0163                     {
                 ; 0000 0164                         buzzer_on = 0;                  // -- buzzer off -- //
0036e8 98f3      	CBI  0x1E,3
                 ; 0000 0165                     }
                 _0x45:
                 ; 0000 0166 
                 ; 0000 0167                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0168                     for(k=0;k<USE_DOUT;k++)
                +
0036e9 e040     +LDI R20 , LOW ( 0 )
0036ea e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x49:
                +
0036eb 3042     +CPI R20 , LOW ( 2 )
0036ec e0e0     +LDI R30 , HIGH ( 2 )
0036ed 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0036ee f554      	BRGE _0x4A
                 ; 0000 0169                     {
                 ; 0000 016A                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
0036ef 940e c118 	CALL SUBOPT_0x23
0036f1 58e1      	SUBI R30,LOW(-_dout_config)
0036f2 4efd      	SBCI R31,HIGH(-_dout_config)
0036f3 81a0      	LD   R26,Z
0036f4 30a1      	CPI  R26,LOW(0x1)
0036f5 f4d1      	BRNE _0x4B
                 ; 0000 016B                         {
                 ; 0000 016C                             // -- check alarm Digital Output -- //
                 ; 0000 016D //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 016E                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
0036f6 940e c118 	CALL SUBOPT_0x23
                +
0036f8 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
0036f9 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
0036fa 93fa      	ST   -Y,R31
0036fb 93ea      	ST   -Y,R30
0036fc 940e c118 	CALL SUBOPT_0x23
                +
0036fe 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
0036ff 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
003700 81a0      	LD   R26,Z
003701 e0b0      	LDI  R27,0
003702 940e c10f 	CALL SUBOPT_0x22
                 ; 0000 016F                             if(res){
003704 f021      	BREQ _0x4C
                 ; 0000 0170                                 IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
003705 940e c020 	CALL SUBOPT_0x1
003707 81a0      	LD   R26,Z
003708 c004      	RJMP _0x133
                 ; 0000 0171                             }
                 ; 0000 0172                             else{
                 _0x4C:
                 ; 0000 0173                                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
003709 940e c020 	CALL SUBOPT_0x1
00370b 940e c02a 	CALL SUBOPT_0x2
                 _0x133:
00370d 940e 42d6 	CALL _IO_dout
                 ; 0000 0174                             }
                 ; 0000 0175                         }
                 ; 0000 0176                         else                                                // -- digital output disabled -- //
00370f c006      	RJMP _0x4E
                 _0x4B:
                 ; 0000 0177                         {
                 ; 0000 0178                             IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
003710 940e c020 	CALL SUBOPT_0x1
003712 940e c02a 	CALL SUBOPT_0x2
003714 940e 42d6 	CALL _IO_dout
                 ; 0000 0179                         }
                 _0x4E:
                 ; 0000 017A                     }
                +
003716 5f4f     +SUBI R20 , LOW ( - 1 )
003717 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003718 cfd2      	RJMP _0x49
                 _0x4A:
                 ; 0000 017B                 }
                 ; 0000 017C                 else                                            // .. no event .. //
003719 c010      	RJMP _0x4F
                 _0x3B:
                 ; 0000 017D                 {
                 ; 0000 017E                     // -- no alarm -- // ^_^
                 ; 0000 017F                     buzzer_on = 0;                  // -- buzzer off -- //
00371a 98f3      	CBI  0x1E,3
                 ; 0000 0180                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
00371b e040     +LDI R20 , LOW ( 0 )
00371c e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x53:
                +
00371d 3042     +CPI R20 , LOW ( 2 )
00371e e0e0     +LDI R30 , HIGH ( 2 )
00371f 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003720 f44c      	BRGE _0x54
                 ; 0000 0181                     {
                 ; 0000 0182                         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
003721 940e c020 	CALL SUBOPT_0x1
003723 940e c02a 	CALL SUBOPT_0x2
003725 940e 42d6 	CALL _IO_dout
                 ; 0000 0183                     }
                +
003727 5f4f     +SUBI R20 , LOW ( - 1 )
003728 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003729 cff3      	RJMP _0x53
                 _0x54:
                 ; 0000 0184                 }
                 _0x4F:
                 _0x3A:
                 ; 0000 0185 
                 ; 0000 0186                 res = eventCapture();                           // -- send event packet if needed -- //
00372a d224      	RCALL _eventCapture
00372b 940e c11e 	CALL SUBOPT_0x24
                 ; 0000 0187             }
                 ; 0000 0188             else                                                // .. alarm disable .. //
00372d c010      	RJMP _0x55
                 _0x38:
                 ; 0000 0189             {
                 ; 0000 018A             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 018B                 // -- no alarm -- // ;-P
                 ; 0000 018C                 buzzer_on = 0;                      // -- buzzer off -- //
00372e 98f3      	CBI  0x1E,3
                 ; 0000 018D                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
00372f e040     +LDI R20 , LOW ( 0 )
003730 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x59:
                +
003731 3042     +CPI R20 , LOW ( 2 )
003732 e0e0     +LDI R30 , HIGH ( 2 )
003733 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003734 f44c      	BRGE _0x5A
                 ; 0000 018E                 {
                 ; 0000 018F                     IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
003735 940e c020 	CALL SUBOPT_0x1
003737 940e c02a 	CALL SUBOPT_0x2
003739 940e 42d6 	CALL _IO_dout
                 ; 0000 0190                 }
                +
00373b 5f4f     +SUBI R20 , LOW ( - 1 )
00373c 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00373d cff3      	RJMP _0x59
                 _0x5A:
                 ; 0000 0191             }
                 _0x55:
                 ; 0000 0192 
                 ; 0000 0193             // -- check mute expired -- //
                 ; 0000 0194             if(muteMode){
00373e 91e0 148b 	LDS  R30,_muteMode
003740 30e0      	CPI  R30,0
003741 f059      	BREQ _0x5B
                 ; 0000 0195                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 0196                 if(ALARM_checkMuteExpired()){
003742 940e 7d0a 	CALL _ALARM_checkMuteExpired
003744 9730      	SBIW R30,0
003745 f039      	BREQ _0x5C
                 ; 0000 0197                     muteAlarmExpired = 0xFFFFFFFF;
003746 940e c124 	CALL SUBOPT_0x25
003748 940e c129 	CALL SUBOPT_0x26
                 ; 0000 0198                     muteMode = 0;
00374a e0e0      	LDI  R30,LOW(0)
00374b 93e0 148b 	STS  _muteMode,R30
                 ; 0000 0199                 }
                 ; 0000 019A             }
                 _0x5C:
                 ; 0000 019B 
                 ; 0000 019C             // ---------------- Operating Mode ---------------- //
                 ; 0000 019D //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 019E 
                 ; 0000 019F             /*bongkot test*/
                 ; 0000 01A0             operating_config.mode == MODE_REALTIME;
                 _0x5B:
00374d 91a0 11b6 	LDS  R26,_operating_config
00374f e1e0      	LDI  R30,LOW(16)
003750 940e df45 	CALL __EQB12
                 ; 0000 01A1             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
003752 31a0      	CPI  R26,LOW(0x10)
003753 f011      	BREQ PC+3
003754 940c 37a0 	JMP _0x5D
                 ; 0000 01A2             {
                 ; 0000 01A3                 if(!duplicateListClear)
003756 91e0 1425 	LDS  R30,_duplicateListClear
003758 30e0      	CPI  R30,0
003759 f4f1      	BRNE _0x5E
                 ; 0000 01A4                 {
                 ; 0000 01A5                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
00375a 01de     +MOVW R26 , R28
00375b 5aad     +SUBI R26 , LOW ( - 83 )
00375c 4fbf     +SBCI R27 , HIGH ( - 83 )
00375d 900d     +LD R0 , X +
00375e 901d     +LD R1 , X +
00375f 918d     +LD R24 , X +
003760 919c     +LD R25 , X
003761 01d0     +MOVW R26 , R0
                 	__GETD2SX 83
003762 940e 4130 	CALL _TIMER_checkTimerExceed
003764 940e c11e 	CALL SUBOPT_0x24
                 ; 0000 01A6                     if(res != 0){
                +
003766 01fe     +MOVW R30 , R28
003767 58e7     +SUBI R30 , LOW ( - 121 )
003768 4fff     +SBCI R31 , HIGH ( - 121 )
003769 9001     +LD R0 , Z +
00376a 81f0     +LD R31 , Z
00376b 2de0     +MOV R30 , R0
                 	__GETW1SX 121
00376c 9730      	SBIW R30,0
00376d f039      	BREQ _0x5F
                 ; 0000 01A7                         TIMER_setTimer(&clear_duplicate_timer, 10);
00376e 01fe      	MOVW R30,R28
00376f 5aed      	SUBI R30,LOW(-(83))
003770 4fff      	SBCI R31,HIGH(-(83))
003771 940e c132 	CALL SUBOPT_0x27
                 ; 0000 01A8                         ETH_clearDuplicateRequestCmd();
003773 940e 560b 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 01A9                     }
                 ; 0000 01AA 
                 ; 0000 01AB                     sensorDataSave();
                 _0x5F:
003775 d449      	RCALL _sensorDataSave
                 ; 0000 01AC                     eventSave();
003776 d4cc      	RCALL _eventSave
                 ; 0000 01AD                 }
                 ; 0000 01AE                 else
003777 c027      	RJMP _0x60
                 _0x5E:
                 ; 0000 01AF                 {
                 ; 0000 01B0                     if(TIMER_checkTimerExceed(status_report_timer))
                +
003778 01de     +MOVW R26 , R28
003779 5aa1     +SUBI R26 , LOW ( - 95 )
00377a 4fbf     +SBCI R27 , HIGH ( - 95 )
00377b 900d     +LD R0 , X +
00377c 901d     +LD R1 , X +
00377d 918d     +LD R24 , X +
00377e 919c     +LD R25 , X
00377f 01d0     +MOVW R26 , R0
                 	__GETD2SX 95
003780 940e 4130 	CALL _TIMER_checkTimerExceed
003782 9730      	SBIW R30,0
003783 f071      	BREQ _0x61
                 ; 0000 01B1                     {
                 ; 0000 01B2                         TIMER_setTimer(&status_report_timer, status_config.intv);
003784 01fe      	MOVW R30,R28
003785 5ae1      	SUBI R30,LOW(-(95))
003786 4fff      	SBCI R31,HIGH(-(95))
003787 93fa      	ST   -Y,R31
003788 93ea      	ST   -Y,R30
                +
003789 91a0 1363+LDS R26 , _status_config + ( 1 )
00378b 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
00378d 2788      	CLR  R24
00378e 2799      	CLR  R25
00378f 940e 4146 	CALL _TIMER_setTimer
                 ; 0000 01B3 
                 ; 0000 01B4                         statusReport();
003791 d2e9      	RCALL _statusReport
                 ; 0000 01B5                     }
                 ; 0000 01B6 
                 ; 0000 01B7                     // -- report log only when no realtime data not ready -- //
                 ; 0000 01B8                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x61:
003792 d389      	RCALL _sensorDataReport
003793 9730      	SBIW R30,0
003794 f441      	BRNE _0x63
003795 d3da      	RCALL _eventReport
003796 9730      	SBIW R30,0
003797 f429      	BRNE _0x63
003798 940e c13a 	CALL SUBOPT_0x28
00379a 940e e0be 	CALL __CPD02
00379c f008      	BRLO _0x64
                 _0x63:
00379d c001      	RJMP _0x62
                 _0x64:
                 ; 0000 01B9                     {
                 ; 0000 01BA                         logReport();
00379e d52c      	RCALL _logReport
                 ; 0000 01BB                     }
                 ; 0000 01BC                 }
                 _0x62:
                 _0x60:
                 ; 0000 01BD             }
                 ; 0000 01BE             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
00379f c011      	RJMP _0x65
                 _0x5D:
0037a0 91a0 11b6 	LDS  R26,_operating_config
0037a2 32a0      	CPI  R26,LOW(0x20)
0037a3 f419      	BRNE _0x66
                 ; 0000 01BF             {
                 ; 0000 01C0                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 01C1                 sensorDataSave();
0037a4 d41a      	RCALL _sensorDataSave
                 ; 0000 01C2               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 01C3                 eventSave();
0037a5 d49d      	RCALL _eventSave
                 ; 0000 01C4             }
                 ; 0000 01C5             else                                                // .. unknown mode .. //
0037a6 c00a      	RJMP _0x67
                 _0x66:
                 ; 0000 01C6             {
                 ; 0000 01C7                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
0037a7 e0e1     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
0037a8 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
0037a9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
0037aa e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
0037ab 940e e05e 	CALL __PUTPARD1
0037ad 91e0 11b6 	LDS  R30,_operating_config
0037af 940e c143 	CALL SUBOPT_0x29
                 ; 0000 01C8             }
                 _0x67:
                 _0x65:
                 ; 0000 01C9 
                 ; 0000 01CA             #asm("wdr")
0037b1 95a8      	wdr
                 ; 0000 01CB             if(timer_1sec_flag)
0037b2 9bf2      	SBIS 0x1E,2
0037b3 c0b4      	RJMP _0x68
                 ; 0000 01CC             {
                 ; 0000 01CD               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 01CE                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
0037b4 01de     +MOVW R26 , R28
0037b5 5aa9     +SUBI R26 , LOW ( - 87 )
0037b6 4fbf     +SBCI R27 , HIGH ( - 87 )
0037b7 900d     +LD R0 , X +
0037b8 901d     +LD R1 , X +
0037b9 918d     +LD R24 , X +
0037ba 919c     +LD R25 , X
0037bb 01d0     +MOVW R26 , R0
                 	__GETD2SX 87
0037bc 940e 4130 	CALL _TIMER_checkTimerExceed
0037be 9730      	SBIW R30,0
0037bf f021      	BREQ _0x6A
0037c0 91a0 1482 	LDS  R26,_memoryStatus
0037c2 30a1      	CPI  R26,LOW(0x1)
0037c3 f409      	BRNE _0x6B
                 _0x6A:
0037c4 c014      	RJMP _0x69
                 _0x6B:
                 ; 0000 01CF                 {
                 ; 0000 01D0               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 01D1                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0037c5 940e c063 	CALL SUBOPT_0x8
                 ; 0000 01D2 
                 ; 0000 01D3                     res = SD_readMemoryRemain(&sdFreeSpace);
0037c7 e6ab      	LDI  R26,LOW(_sdFreeSpace)
0037c8 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
0037c9 940e 8094 	CALL _SD_readMemoryRemain
0037cb 940e c11e 	CALL SUBOPT_0x24
                 ; 0000 01D4                     if(res < 0){
                +
0037cd 01de     +MOVW R26 , R28
0037ce 58a6     +SUBI R26 , LOW ( - 122 )
0037cf 4fbf     +SBCI R27 , HIGH ( - 122 )
0037d0 91ac     +LD R26 , X
                 	__GETB2SX 122
0037d1 23aa      	TST  R26
0037d2 f432      	BRPL _0x6C
                 ; 0000 01D5                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
0037d3 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
0037d4 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
0037d5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
0037d6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
0037d7 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 01D6                     }
                 ; 0000 01D7                 }
                 _0x6C:
                 ; 0000 01D8 
                 ; 0000 01D9                 if(currentPage == P_MONITOR)
                 _0x69:
0037d9 91e0 14df 	LDS  R30,_currentPage
0037db 30e0      	CPI  R30,0
0037dc f569      	BRNE _0x6D
                 ; 0000 01DA                 {
                 ; 0000 01DB               //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 01DC                     OLED_showSensorValue();
0037dd 940e 7d96 	CALL _OLED_showSensorValue
                 ; 0000 01DD 
                 ; 0000 01DE                     for(i=0;i<2;i++){
                +
0037df e020     +LDI R18 , LOW ( 0 )
0037e0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
                +
0037e1 3022     +CPI R18 , LOW ( 2 )
0037e2 e0e0     +LDI R30 , HIGH ( 2 )
0037e3 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0037e4 f454      	BRGE _0x70
                 ; 0000 01DF                         OLED_showInputStatus(i,dinStatus[i]);
0037e5 933a      	ST   -Y,R19
0037e6 932a      	ST   -Y,R18
0037e7 940e c149 	CALL SUBOPT_0x2A
0037e9 91ac      	LD   R26,X
0037ea 940e 7e57 	CALL _OLED_showInputStatus
                 ; 0000 01E0                     }
                +
0037ec 5f2f     +SUBI R18 , LOW ( - 1 )
0037ed 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0037ee cff2      	RJMP _0x6F
                 _0x70:
                 ; 0000 01E1 
                 ; 0000 01E2                     for(i=0;i<2;i++){
                +
0037ef e020     +LDI R18 , LOW ( 0 )
0037f0 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x72:
                +
0037f1 3022     +CPI R18 , LOW ( 2 )
0037f2 e0e0     +LDI R30 , HIGH ( 2 )
0037f3 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0037f4 f464      	BRGE _0x73
                 ; 0000 01E3                         OLED_showOutputStatus(i,doutStatus[i]);
0037f5 933a      	ST   -Y,R19
0037f6 932a      	ST   -Y,R18
0037f7 e7ae      	LDI  R26,LOW(_doutStatus)
0037f8 e1b4      	LDI  R27,HIGH(_doutStatus)
0037f9 0fa2      	ADD  R26,R18
0037fa 1fb3      	ADC  R27,R19
0037fb 91ac      	LD   R26,X
0037fc 940e 7e7c 	CALL _OLED_showOutputStatus
                 ; 0000 01E4                     }
                +
0037fe 5f2f     +SUBI R18 , LOW ( - 1 )
0037ff 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003800 cff0      	RJMP _0x72
                 _0x73:
                 ; 0000 01E5 
                 ; 0000 01E6                //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01E7                     OLED_showDateTime(properties_config.timeZone);
                +
003801 91a0 11b5+LDS R26 , _properties_config + ( 160 )
                 	__GETB2MN _properties_config,160
003803 e0b0      	LDI  R27,0
003804 fda7      	SBRC R26,7
003805 efbf      	SER  R27
003806 940e 7d72 	CALL _OLED_showDateTime
                 ; 0000 01E8 
                 ; 0000 01E9               //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01EA                     OLED_showAlarmStatus();
003808 940e 7ed5 	CALL _OLED_showAlarmStatus
                 ; 0000 01EB                 }
                 ; 0000 01EC 
                 ; 0000 01ED               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01EE                 switch(powerSrcStatus){
                 _0x6D:
00380a 91e0 147a 	LDS  R30,_powerSrcStatus
00380c 940e c14e 	CALL SUBOPT_0x2B
                 ; 0000 01EF                     case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
00380e f439      	BRNE _0x77
00380f e0e0      	LDI  R30,LOW(0)
003810 93ea      	ST   -Y,R30
003811 940e c151 	CALL SUBOPT_0x2C
003813 940e 7e14 	CALL _OLED_showPowerStatus
003815 c00a      	RJMP _0x76
                 ; 0000 01F0                     case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 _0x77:
003816 30e1      	CPI  R30,LOW(0x1)
003817 e0a0      	LDI  R26,HIGH(0x1)
003818 07fa      	CPC  R31,R26
003819 f431      	BRNE _0x79
00381a e0e1      	LDI  R30,LOW(1)
00381b 93ea      	ST   -Y,R30
00381c 940e c156 	CALL SUBOPT_0x2D
00381e 940e 7e14 	CALL _OLED_showPowerStatus
                 ; 0000 01F1                     default             :   break;
                 _0x79:
                 ; 0000 01F2                 }
                 _0x76:
                 ; 0000 01F3 
                 ; 0000 01F4             //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01F5                 switch(serverCommStatus){
003820 91e0 1480 	LDS  R30,_serverCommStatus
003822 940e c14e 	CALL SUBOPT_0x2B
                 ; 0000 01F6                     case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
003824 f411      	BRNE _0x7D
003825 e0a2      	LDI  R26,LOW(2)
003826 c007      	RJMP _0x134
                 ; 0000 01F7                     case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 _0x7D:
003827 30e2      	CPI  R30,LOW(0x2)
003828 e0a0      	LDI  R26,HIGH(0x2)
003829 07fa      	CPC  R31,R26
00382a f411      	BRNE _0x7F
00382b e0a1      	LDI  R26,LOW(1)
00382c c001      	RJMP _0x134
                 ; 0000 01F8                     default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 _0x7F:
00382d e0a0      	LDI  R26,LOW(0)
                 _0x134:
00382e 940e 7ead 	CALL _OLED_showServerCommStatus
                 ; 0000 01F9                 }
                 ; 0000 01FA 
                 ; 0000 01FB             //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01FC                 switch(lanStatus){
003830 91e0 1481 	LDS  R30,_lanStatus
003832 940e c14e 	CALL SUBOPT_0x2B
                 ; 0000 01FD                     case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
003834 f421      	BRNE _0x83
003835 e0a1      	LDI  R26,LOW(1)
003836 940e 7eb7 	CALL _OLED_showLanStatus
003838 c007      	RJMP _0x82
                 ; 0000 01FE                     case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 _0x83:
003839 30e1      	CPI  R30,LOW(0x1)
00383a e0a0      	LDI  R26,HIGH(0x1)
00383b 07fa      	CPC  R31,R26
00383c f419      	BRNE _0x85
00383d e0a0      	LDI  R26,LOW(0)
00383e 940e 7eb7 	CALL _OLED_showLanStatus
                 ; 0000 01FF                     default                     :   break;
                 _0x85:
                 ; 0000 0200                 }
                 _0x82:
                 ; 0000 0201 
                 ; 0000 0202             //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 0203                 if(muteMode){
003840 91e0 148b 	LDS  R30,_muteMode
003842 30e0      	CPI  R30,0
003843 f011      	BREQ _0x86
                 ; 0000 0204                     OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
003844 e0a2      	LDI  R26,LOW(2)
003845 c007      	RJMP _0x135
                 ; 0000 0205                 }
                 ; 0000 0206                 else if(buzz_config.enable == 0x01){
                 _0x86:
003846 91a0 133d 	LDS  R26,_buzz_config
003848 30a1      	CPI  R26,LOW(0x1)
003849 f411      	BRNE _0x88
                 ; 0000 0207                     OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
00384a e0a0      	LDI  R26,LOW(0)
00384b c001      	RJMP _0x135
                 ; 0000 0208                 }
                 ; 0000 0209                 else{
                 _0x88:
                 ; 0000 020A                     OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
00384c e0a1      	LDI  R26,LOW(1)
                 _0x135:
00384d 940e 7ec1 	CALL _OLED_showBuzzerStatus
                 ; 0000 020B                 }
                 ; 0000 020C 
                 ; 0000 020D            //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 020E                 switch(memoryStatus){
00384f 91e0 1482 	LDS  R30,_memoryStatus
003851 940e c14e 	CALL SUBOPT_0x2B
                 ; 0000 020F                     case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
003853 f421      	BRNE _0x8D
003854 e0a0      	LDI  R26,LOW(0)
003855 940e 7ecb 	CALL _OLED_showMemoryStatus
003857 c00f      	RJMP _0x8C
                 ; 0000 0210                     case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 _0x8D:
003858 30e1      	CPI  R30,LOW(0x1)
003859 e0a0      	LDI  R26,HIGH(0x1)
00385a 07fa      	CPC  R31,R26
00385b f421      	BRNE _0x8E
00385c e0a1      	LDI  R26,LOW(1)
00385d 940e 7ecb 	CALL _OLED_showMemoryStatus
00385f c007      	RJMP _0x8C
                 ; 0000 0211                     case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 _0x8E:
003860 30e2      	CPI  R30,LOW(0x2)
003861 e0a0      	LDI  R26,HIGH(0x2)
003862 07fa      	CPC  R31,R26
003863 f419      	BRNE _0x90
003864 e0a2      	LDI  R26,LOW(2)
003865 940e 7ecb 	CALL _OLED_showMemoryStatus
                 ; 0000 0212                     default                 :   break;
                 _0x90:
                 ; 0000 0213                 }
                 _0x8C:
                 ; 0000 0214 
                 ; 0000 0215                 timer_1sec_flag = 0;
003867 98f2      	CBI  0x1E,2
                 ; 0000 0216             }
                 ; 0000 0217         } // -- device enable -- //
                 _0x68:
                 ; 0000 0218         else                                                    // ----- device disable ----- //
003868 c06e      	RJMP _0x93
                 _0x2D:
                 ; 0000 0219         {
                 ; 0000 021A             // -- no alarm -- // ;-P
                 ; 0000 021B             buzzer_on = 0;                      // -- buzzer off -- //
003869 98f3      	CBI  0x1E,3
                 ; 0000 021C             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
00386a e040     +LDI R20 , LOW ( 0 )
00386b e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x97:
                +
00386c 3042     +CPI R20 , LOW ( 2 )
00386d e0e0     +LDI R30 , HIGH ( 2 )
00386e 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00386f f44c      	BRGE _0x98
                 ; 0000 021D             {
                 ; 0000 021E                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
003870 940e c020 	CALL SUBOPT_0x1
003872 940e c02a 	CALL SUBOPT_0x2
003874 940e 42d6 	CALL _IO_dout
                 ; 0000 021F             }
                +
003876 5f4f     +SUBI R20 , LOW ( - 1 )
003877 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003878 cff3      	RJMP _0x97
                 _0x98:
                 ; 0000 0220 
                 ; 0000 0221 
                 ; 0000 0222             if(TEMP_SEL == TEMP_TYPE_K){
003879 940e c15f 	CALL SUBOPT_0x2E
00387b f5e9      	BRNE _0x99
                 ; 0000 0223                 if(hwCalId == 9){
00387c 91a0 10f4 	LDS  R26,_hwCalId
00387e 91b0 10f5 	LDS  R27,_hwCalId+1
003880 9719      	SBIW R26,9
003881 f439      	BRNE _0x9A
                 ; 0000 0224                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                +
003882 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
003883 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
003884 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
003885 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
003886 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0225                     //printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                 ; 0000 0226                 }
                 ; 0000 0227                 else if(SENSOR_CONNECT){
003888 c02d      	RJMP _0x9B
                 _0x9A:
003889 940e c16a 	CALL SUBOPT_0x2F
00388b 9730      	SBIW R30,0
00388c f0f9      	BREQ _0x9C
                 ; 0000 0228                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : %f                     \r",hwCalId,(adcData[hwCalId]*ADC_CONV_FAC*100));
                +
00388d e9e7     +LDI R30 , LOW ( 2 * _0x0 + ( 331 ) )
00388e e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 331 ) )
00388f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 331 ) )
003890 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 331 ) )
                 	__POINTD1FN _0x0,331
003891 940e c171 	CALL SUBOPT_0x30
003893 2766      	CLR  R22
003894 2777      	CLR  R23
003895 940e c171 	CALL SUBOPT_0x30
003897 940e c178 	CALL SUBOPT_0x31
003899 940e c0e9 	CALL SUBOPT_0x1B
00389b 937f      	PUSH R23
00389c 936f      	PUSH R22
00389d 93ff      	PUSH R31
00389e 93ef      	PUSH R30
00389f 940e c17d 	CALL SUBOPT_0x32
0038a1 91af      	POP  R26
0038a2 91bf      	POP  R27
0038a3 918f      	POP  R24
0038a4 919f      	POP  R25
0038a5 940e ddff 	CALL __MULF12
0038a7 940e c18a 	CALL SUBOPT_0x33
0038a9 940e c108 	CALL SUBOPT_0x21
                 ; 0000 0229                 }
                 ; 0000 022A                 else{
0038ab c00a      	RJMP _0x9D
                 _0x9C:
                 ; 0000 022B                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : disconnected           \r",hwCalId);
                +
0038ac edee     +LDI R30 , LOW ( 2 * _0x0 + ( 402 ) )
0038ad e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 402 ) )
0038ae e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 402 ) )
0038af e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 402 ) )
                 	__POINTD1FN _0x0,402
0038b0 940e c171 	CALL SUBOPT_0x30
0038b2 940e c191 	CALL SUBOPT_0x34
0038b4 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 022C                 }
                 _0x9D:
                 _0x9B:
                 ; 0000 022D                 delay_ms(200);
0038b6 940e c196 	CALL SUBOPT_0x35
                 ; 0000 022E             }
                 ; 0000 022F             else if(TEMP_SEL == TEMP_TMEC){
0038b8 c01e      	RJMP _0x9E
                 _0x99:
0038b9 940e c15f 	CALL SUBOPT_0x2E
0038bb 30e1      	CPI  R30,LOW(0x1)
0038bc f429      	BRNE _0x9F
                 ; 0000 0230                     printDebug("<main> [Device disable] [TMEC]                                       \r");
                +
0038bd e2e5     +LDI R30 , LOW ( 2 * _0x0 + ( 473 ) )
0038be e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 473 ) )
0038bf e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 473 ) )
0038c0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 473 ) )
                 	__POINTD1FN _0x0,473
0038c1 c011      	RJMP _0x136
                 ; 0000 0231             }
                 ; 0000 0232             else if(TEMP_SEL == TEMP_PT100){
                 _0x9F:
0038c2 940e c15f 	CALL SUBOPT_0x2E
0038c4 30e2      	CPI  R30,LOW(0x2)
0038c5 f429      	BRNE _0xA1
                 ; 0000 0233                     printDebug("<main> [Device disable] [PT100]                                      \r");
                +
0038c6 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 544 ) )
0038c7 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 544 ) )
0038c8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 544 ) )
0038c9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 544 ) )
                 	__POINTD1FN _0x0,544
0038ca c008      	RJMP _0x136
                 ; 0000 0234             }
                 ; 0000 0235             else if(TEMP_SEL == TEMP_RESERVED){
                 _0xA1:
0038cb 940e c15f 	CALL SUBOPT_0x2E
0038cd 30e3      	CPI  R30,LOW(0x3)
0038ce f441      	BRNE _0xA3
                 ; 0000 0236                     printDebug("<main> [Device disable] [RESERVED]                                   \r");
                +
0038cf ebe3     +LDI R30 , LOW ( 2 * _0x0 + ( 615 ) )
0038d0 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 615 ) )
0038d1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 615 ) )
0038d2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 615 ) )
                 	__POINTD1FN _0x0,615
                 _0x136:
0038d3 940e e05e 	CALL __PUTPARD1
0038d5 940e c19a 	CALL SUBOPT_0x36
                 ; 0000 0237             }
                 ; 0000 0238         }
                 _0xA3:
                 _0x9E:
                 _0x93:
                 ; 0000 0239 
                 ; 0000 023A         #asm("wdr")
0038d7 95a8      	wdr
                 ; 0000 023B     }
0038d8 cccd      	RJMP _0x10
                 ; 0000 023C 
                 ; 0000 023D }
                 _0xA4:
0038d9 cfff      	RJMP _0xA4
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 0245 {
                 _updateStatus:
                 ; 0000 0246     int                 res=0, i=0, err=0;
                 ; 0000 0247     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0248 
                 ; 0000 0249     // --------------- Update Sensor's Event --------------- //
                 ; 0000 024A     for(i=0;i<MAX_SENS_CHANNEL;i++)
0038da 940e c19f 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
0038dc e020     +LDI R18 , LOW ( 0 )
0038dd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA7:
                +
0038de 3025     +CPI R18 , LOW ( 5 )
0038df e0e0     +LDI R30 , HIGH ( 5 )
0038e0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0038e1 f4dc      	BRGE _0xA8
                 ; 0000 024B     {
                 ; 0000 024C         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
0038e2 940e c036 	CALL SUBOPT_0x4
0038e4 f0a9      	BREQ _0xA9
                 ; 0000 024D         {
                 ; 0000 024E             // ----------- Update Probe Status ------------------------- //
                 ; 0000 024F             err =   updateSensorStatus(i);
0038e5 01d9      	MOVW R26,R18
0038e6 940e 7557 	CALL _updateSensorStatus
0038e8 01af      	MOVW R20,R30
                 ; 0000 0250             if(err >= 0){
0038e9 2355      	TST  R21
0038ea f07a      	BRMI _0xAA
                 ; 0000 0251                 res |=  err;
                +
0038eb 2b04     +OR R16 , R20
0038ec 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0252                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
0038ed 940e c1a4 	CALL SUBOPT_0x38
0038ef f019      	BREQ _0xAC
0038f0 2e04      	MOV  R0,R20
0038f1 2a05      	OR   R0,R21
0038f2 f009      	BREQ _0xAD
                 _0xAC:
0038f3 c006      	RJMP _0xAB
                 _0xAD:
                 ; 0000 0253                 {
                 ; 0000 0254                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 0255                     err =   updateDataStatus(i);
0038f4 01d9      	MOVW R26,R18
0038f5 940e 758a 	CALL _updateDataStatus
0038f7 01af      	MOVW R20,R30
                 ; 0000 0256                     res |=  err;
                +
0038f8 2b04     +OR R16 , R20
0038f9 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0257                 }
                 ; 0000 0258             }
                 _0xAB:
                 ; 0000 0259         }
                 _0xAA:
                 ; 0000 025A     }
                 _0xA9:
                +
0038fa 5f2f     +SUBI R18 , LOW ( - 1 )
0038fb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0038fc cfe1      	RJMP _0xA7
                 _0xA8:
                 ; 0000 025B 
                 ; 0000 025C     // --- Update Battery Status --- //
                 ; 0000 025D     err =   updateBatteryStatus();
0038fd 940e 7476 	CALL _updateBatteryStatus
0038ff 01af      	MOVW R20,R30
                 ; 0000 025E     res |=  err;
                +
003900 2b04     +OR R16 , R20
003901 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 025F     // --- Update Digital Input Status --- //
                 ; 0000 0260     err =   updateDinStatus();
003902 940e 7673 	CALL _updateDinStatus
003904 01af      	MOVW R20,R30
                 ; 0000 0261     res |=  err;
                +
003905 2b04     +OR R16 , R20
003906 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0262     // --- Update Digital Output Status --- //
                 ; 0000 0263     err =   updateDoutStatus();
003907 940e 76ef 	CALL _updateDoutStatus
003909 01af      	MOVW R20,R30
                 ; 0000 0264     res |=  err;
                +
00390a 2b04     +OR R16 , R20
00390b 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0265     // --- Update Analog Input Status --- //
                 ; 0000 0266     // --- Update Communication Status --- //
                 ; 0000 0267     err =   updateCommStatus();
00390c 940e 74d3 	CALL _updateCommStatus
00390e 01af      	MOVW R20,R30
                 ; 0000 0268     if(err){
00390f 2e04      	MOV  R0,R20
003910 2a05      	OR   R0,R21
003911 f189      	BREQ _0xAE
                 ; 0000 0269 
                 ; 0000 026A         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
003912 940e c1ae 	CALL SUBOPT_0x39
003914 940e c1b7 	CALL SUBOPT_0x3A
003916 f029      	BREQ _0xB0
003917 940e c1ae 	CALL SUBOPT_0x39
003919 940e e0be 	CALL __CPD02
00391b f471      	BRNE _0xAF
                 _0xB0:
                 ; 0000 026B             TIMER_setTimer(&ETH_rst_timer,15);
00391c eee0      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
00391d e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
00391e 940e c1bf 	CALL SUBOPT_0x3B
                 ; 0000 026C             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
003920 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 686 ) )
003921 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 686 ) )
003922 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 686 ) )
003923 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 686 ) )
                 	__POINTD1FN _0x0,686
003924 940e c1c7 	CALL SUBOPT_0x3C
003926 940e c1c7 	CALL SUBOPT_0x3C
003928 940e c108 	CALL SUBOPT_0x21
                 ; 0000 026D         }
                 ; 0000 026E 
                 ; 0000 026F         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0xAF:
00392a 940e c1ae 	CALL SUBOPT_0x39
00392c 940e 4130 	CALL _TIMER_checkTimerExceed
00392e 30e1      	CPI  R30,LOW(0x1)
00392f e0a0      	LDI  R26,HIGH(0x1)
003930 07fa      	CPC  R31,R26
003931 f489      	BRNE _0xB2
                 ; 0000 0270             ETH_NORM;
003932 91e0 0102 	LDS  R30,258
003934 77ef      	ANDI R30,0x7F
003935 93e0 0102 	STS  258,R30
                 ; 0000 0271             ETH_reset();
003937 940e 6087 	CALL _ETH_reset
                 ; 0000 0272             ETH_rst_timer = 0xFFFFFFFF;
003939 940e c124 	CALL SUBOPT_0x25
00393b 93e0 14e0 	STS  _ETH_rst_timer_S0000001000,R30
00393d 93f0 14e1 	STS  _ETH_rst_timer_S0000001000+1,R31
00393f 9360 14e2 	STS  _ETH_rst_timer_S0000001000+2,R22
003941 9370 14e3 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 0273         }
                 ; 0000 0274     }
                 _0xB2:
                 ; 0000 0275     res |=  err;
                 _0xAE:
                +
003943 2b04     +OR R16 , R20
003944 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0276     // --- Update Memory Card Status --- //
                 ; 0000 0277     err =   updateMemoryStatus();
003945 940e 7537 	CALL _updateMemoryStatus
003947 01af      	MOVW R20,R30
                 ; 0000 0278     res |=  err;
                +
003948 2b04     +OR R16 , R20
003949 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0279 
                 ; 0000 027A     return res;
00394a 01f8      	MOVW R30,R16
00394b 940e e0d5 	CALL __LOADLOCR6
00394d 9626      	ADIW R28,6
00394e 9508      	RET
                 ; 0000 027B }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 027E {
                 _eventCapture:
                 ; 0000 027F     int                 res=0, i=0, err=0;
                 ; 0000 0280     unsigned long int   timestamp_rd;
                 ; 0000 0281     unsigned char       statusCode;
                 ; 0000 0282 
                 ; 0000 0283     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 0284     err =   checkSendMIPAlarm(&statusCode);
00394f 9725      	SBIW R28,5
003950 940e c19f 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
003952 01de      	MOVW R26,R28
003953 9616      	ADIW R26,6
003954 940e 7acf 	CALL _checkSendMIPAlarm
003956 940e c1dc 	CALL SUBOPT_0x3D
                 ; 0000 0285     res |=  err;
                 ; 0000 0286     if(err){
003958 f0c1      	BREQ _0xB3
                 ; 0000 0287         timestamp_rd    = DS1672_read();
003959 940e c1e2 	CALL SUBOPT_0x3E
                 ; 0000 0288         if(statusCode)
00395b f029      	BREQ _0xB4
                 ; 0000 0289         {
                 ; 0000 028A             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
00395c e2ee     +LDI R30 , LOW ( 2 * _0x0 + ( 738 ) )
00395d e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 738 ) )
00395e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 738 ) )
00395f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD1FN _0x0,738
003960 c004      	RJMP _0x137
                 ; 0000 028B             //printOLED("AL12%1d",i+1);
                 ; 0000 028C         }
                 ; 0000 028D         else
                 _0xB4:
                 ; 0000 028E         {
                 ; 0000 028F             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
003961 e6e0     +LDI R30 , LOW ( 2 * _0x0 + ( 788 ) )
003962 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 788 ) )
003963 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 788 ) )
003964 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 788 ) )
                 	__POINTD1FN _0x0,788
                 _0x137:
003965 940e e05e 	CALL __PUTPARD1
003967 940e c19a 	CALL SUBOPT_0x36
                 ; 0000 0290             //printOLED("AL02%1d",i+1);
                 ; 0000 0291         }
                 ; 0000 0292         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
003969 940e c1eb 	CALL SUBOPT_0x3F
00396b e1e0      	LDI  R30,LOW(16)
00396c 940e c1f2 	CALL SUBOPT_0x40
                 ; 0000 0293         if(err < 0){
00396e f412      	BRPL _0xB6
                 ; 0000 0294             printDebug("<eventCapture> addEventQueue() failed\r\n");
00396f 940e c1f9 	CALL SUBOPT_0x41
                 ; 0000 0295         }
                 ; 0000 0296     }
                 _0xB6:
                 ; 0000 0297 
                 ; 0000 0298     /*
                 ; 0000 0299     // -- Analog Input Event -- //
                 ; 0000 029A     // -- reserved -- //
                 ; 0000 029B     */
                 ; 0000 029C     // --------------- Check for Power Down Event --------------- //
                 ; 0000 029D     err =   checkSendPowerAlarm(&statusCode);
                 _0xB3:
003971 01de      	MOVW R26,R28
003972 9616      	ADIW R26,6
003973 940e 7ae4 	CALL _checkSendPowerAlarm
003975 940e c1dc 	CALL SUBOPT_0x3D
                 ; 0000 029E     res |=  err;
                 ; 0000 029F     if(err){
003977 f0c1      	BREQ _0xB7
                 ; 0000 02A0         timestamp_rd    = DS1672_read();
003978 940e c1e2 	CALL SUBOPT_0x3E
                 ; 0000 02A1         if(statusCode)
00397a f029      	BREQ _0xB8
                 ; 0000 02A2         {
                 ; 0000 02A3             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
00397b ece5     +LDI R30 , LOW ( 2 * _0x0 + ( 889 ) )
00397c e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 889 ) )
00397d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 889 ) )
00397e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 889 ) )
                 	__POINTD1FN _0x0,889
00397f c004      	RJMP _0x138
                 ; 0000 02A4             //printOLED("AL12%1d",i+1);
                 ; 0000 02A5         }
                 ; 0000 02A6         else
                 _0xB8:
                 ; 0000 02A7         {
                 ; 0000 02A8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
003980 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 942 ) )
003981 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 942 ) )
003982 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 942 ) )
003983 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 942 ) )
                 	__POINTD1FN _0x0,942
                 _0x138:
003984 940e e05e 	CALL __PUTPARD1
003986 940e c19a 	CALL SUBOPT_0x36
                 ; 0000 02A9             //printOLED("AL02%1d",i+1);
                 ; 0000 02AA         }
                 ; 0000 02AB         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
003988 940e c1eb 	CALL SUBOPT_0x3F
00398a e5e0      	LDI  R30,LOW(80)
00398b 940e c1f2 	CALL SUBOPT_0x40
                 ; 0000 02AC         if(err < 0){
00398d f412      	BRPL _0xBA
                 ; 0000 02AD             printDebug("<eventCapture> addEventQueue() failed\r\n");
00398e 940e c1f9 	CALL SUBOPT_0x41
                 ; 0000 02AE         }
                 ; 0000 02AF     }
                 _0xBA:
                 ; 0000 02B0 
                 ; 0000 02B1     // --------------- Check for Battery Event --------------- //
                 ; 0000 02B2     err =   checkSendBatteryAlarm(&statusCode);
                 _0xB7:
003990 01de      	MOVW R26,R28
003991 9616      	ADIW R26,6
003992 940e 7b2c 	CALL _checkSendBatteryAlarm
003994 940e c1dc 	CALL SUBOPT_0x3D
                 ; 0000 02B3     res |=  err;
                 ; 0000 02B4     if(err){
003996 f0c1      	BREQ _0xBB
                 ; 0000 02B5         timestamp_rd    = DS1672_read();
003997 940e c1e2 	CALL SUBOPT_0x3E
                 ; 0000 02B6         if(statusCode)
003999 f029      	BREQ _0xBC
                 ; 0000 02B7         {
                 ; 0000 02B8             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
00399a e2ed     +LDI R30 , LOW ( 2 * _0x0 + ( 993 ) )
00399b e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 993 ) )
00399c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 993 ) )
00399d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 993 ) )
                 	__POINTD1FN _0x0,993
00399e c004      	RJMP _0x139
                 ; 0000 02B9             //printOLED("AL12%1d",i+1);
                 ; 0000 02BA         }
                 ; 0000 02BB         else
                 _0xBC:
                 ; 0000 02BC         {
                 ; 0000 02BD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
00399f e5ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1042 ) )
0039a0 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1042 ) )
0039a1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1042 ) )
0039a2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1042 ) )
                 	__POINTD1FN _0x0,1042
                 _0x139:
0039a3 940e e05e 	CALL __PUTPARD1
0039a5 940e c19a 	CALL SUBOPT_0x36
                 ; 0000 02BE             //printOLED("AL02%1d",i+1);
                 ; 0000 02BF         }
                 ; 0000 02C0         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
0039a7 940e c1eb 	CALL SUBOPT_0x3F
0039a9 e5e1      	LDI  R30,LOW(81)
0039aa 940e c1f2 	CALL SUBOPT_0x40
                 ; 0000 02C1         if(err < 0){
0039ac f412      	BRPL _0xBE
                 ; 0000 02C2             printDebug("<eventCapture> addEventQueue() failed\r\n");
0039ad 940e c1f9 	CALL SUBOPT_0x41
                 ; 0000 02C3         }
                 ; 0000 02C4     }
                 _0xBE:
                 ; 0000 02C5 
                 ; 0000 02C6     // --------------- Check for Memory Event --------------- //
                 ; 0000 02C7     err =   checkSendMemoryAlarm(&statusCode);
                 _0xBB:
0039af 01de      	MOVW R26,R28
0039b0 9616      	ADIW R26,6
0039b1 940e 7b85 	CALL _checkSendMemoryAlarm
0039b3 940e c1dc 	CALL SUBOPT_0x3D
                 ; 0000 02C8     res |=  err;
                 ; 0000 02C9     if(err){
0039b5 f131      	BREQ _0xBF
                 ; 0000 02CA         timestamp_rd    = DS1672_read();
0039b6 940e 44bd 	CALL _DS1672_read
                +
0039b8 83ef     +STD Y + 7 , R30
0039b9 87f8     +STD Y + 7 + 1 , R31
0039ba 8769     +STD Y + 7 + 2 , R22
0039bb 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 02CB         if(statusCode == ES_LOWMEMORY)
0039bc 81ae      	LDD  R26,Y+6
0039bd 30a1      	CPI  R26,LOW(0x1)
0039be f429      	BRNE _0xC0
                 ; 0000 02CC         {
                 ; 0000 02CD             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
0039bf e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1090 ) )
0039c0 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1090 ) )
0039c1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1090 ) )
0039c2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1090 ) )
                 	__POINTD1FN _0x0,1090
0039c3 c00c      	RJMP _0x13A
                 ; 0000 02CE             //printOLED("AL12%1d",i+1);
                 ; 0000 02CF         }
                 ; 0000 02D0         else if(statusCode == ES_MEMORYERROR)
                 _0xC0:
0039c4 81ae      	LDD  R26,Y+6
0039c5 30a2      	CPI  R26,LOW(0x2)
0039c6 f429      	BRNE _0xC2
                 ; 0000 02D1         {
                 ; 0000 02D2             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
0039c7 ebee     +LDI R30 , LOW ( 2 * _0x0 + ( 1138 ) )
0039c8 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1138 ) )
0039c9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1138 ) )
0039ca e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1138 ) )
                 	__POINTD1FN _0x0,1138
0039cb c004      	RJMP _0x13A
                 ; 0000 02D3             //printOLED("AL12%1d",i+1);
                 ; 0000 02D4         }
                 ; 0000 02D5         else
                 _0xC2:
                 ; 0000 02D6         {
                 ; 0000 02D7             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
0039cc efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1188 ) )
0039cd e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1188 ) )
0039ce e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1188 ) )
0039cf e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1188 ) )
                 	__POINTD1FN _0x0,1188
                 _0x13A:
0039d0 940e e05e 	CALL __PUTPARD1
0039d2 940e c19a 	CALL SUBOPT_0x36
                 ; 0000 02D8             //printOLED("AL02%1d",i+1);
                 ; 0000 02D9         }
                 ; 0000 02DA         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
0039d4 940e c1eb 	CALL SUBOPT_0x3F
0039d6 e7e0      	LDI  R30,LOW(112)
0039d7 940e c1f2 	CALL SUBOPT_0x40
                 ; 0000 02DB         if(err < 0){
0039d9 f412      	BRPL _0xC4
                 ; 0000 02DC             printDebug("<eventCapture> addEventQueue() failed\r\n");
0039da 940e c1f9 	CALL SUBOPT_0x41
                 ; 0000 02DD         }
                 ; 0000 02DE     }
                 _0xC4:
                 ; 0000 02DF 
                 ; 0000 02E0     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 02E1     for(i=0;i<USE_DIN;i++)
                 _0xBF:
                +
0039dc e020     +LDI R18 , LOW ( 0 )
0039dd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC6:
                +
0039de 3022     +CPI R18 , LOW ( 2 )
0039df e0e0     +LDI R30 , HIGH ( 2 )
0039e0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
0039e1 f544      	BRGE _0xC7
                 ; 0000 02E2     {
                 ; 0000 02E3         if(din_config[i].channelEnable)
0039e2 940e c0b7 	CALL SUBOPT_0x15
0039e4 81e0      	LD   R30,Z
0039e5 30e0      	CPI  R30,0
0039e6 f101      	BREQ _0xC8
                 ; 0000 02E4         {
                 ; 0000 02E5             err =   checkSendDinAlarm(i,&statusCode);
0039e7 940e c1fe 	CALL SUBOPT_0x42
0039e9 940e 7bd3 	CALL _checkSendDinAlarm
0039eb 940e c1dc 	CALL SUBOPT_0x3D
                 ; 0000 02E6             res |=  err;
                 ; 0000 02E7             if(err){
0039ed f0c9      	BREQ _0xC9
                 ; 0000 02E8                 timestamp_rd    = DS1672_read();
0039ee 940e c1e2 	CALL SUBOPT_0x3E
                 ; 0000 02E9                 if(statusCode)
0039f0 f029      	BREQ _0xCA
                 ; 0000 02EA                 {
                 ; 0000 02EB                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
0039f1 e1ef     +LDI R30 , LOW ( 2 * _0x0 + ( 1235 ) )
0039f2 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1235 ) )
0039f3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1235 ) )
0039f4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1235 ) )
                 	__POINTD1FN _0x0,1235
0039f5 c004      	RJMP _0x13B
                 ; 0000 02EC                     //printOLED("AL12%1d",i+1);
                 ; 0000 02ED                 }
                 ; 0000 02EE                 else
                 _0xCA:
                 ; 0000 02EF                 {
                 ; 0000 02F0                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
0039f6 e5e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1286 ) )
0039f7 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1286 ) )
0039f8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1286 ) )
0039f9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1286 ) )
                 	__POINTD1FN _0x0,1286
                 _0x13B:
0039fa 940e e05e 	CALL __PUTPARD1
0039fc 940e c203 	CALL SUBOPT_0x43
                 ; 0000 02F1                     //printOLED("AL02%1d",i+1);
                 ; 0000 02F2                 }
                 ; 0000 02F3                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
0039fe 940e c1eb 	CALL SUBOPT_0x3F
003a00 2fe2      	MOV  R30,R18
003a01 6ce0      	ORI  R30,LOW(0xC0)
003a02 940e c1f2 	CALL SUBOPT_0x40
                 ; 0000 02F4                 if(err < 0){
003a04 f412      	BRPL _0xCC
                 ; 0000 02F5                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003a05 940e c1f9 	CALL SUBOPT_0x41
                 ; 0000 02F6                 }
                 ; 0000 02F7             }
                 _0xCC:
                 ; 0000 02F8         }// -- din channel Enable -- //
                 _0xC9:
                 ; 0000 02F9     }// -- for loop -- //
                 _0xC8:
                +
003a07 5f2f     +SUBI R18 , LOW ( - 1 )
003a08 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003a09 cfd4      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02FA 
                 ; 0000 02FB     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02FC     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003a0a e020     +LDI R18 , LOW ( 0 )
003a0b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCE:
                +
003a0c 3025     +CPI R18 , LOW ( 5 )
003a0d e0e0     +LDI R30 , HIGH ( 5 )
003a0e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003a0f f014      	BRLT PC+3
003a10 940c 3a76 	JMP _0xCF
                 ; 0000 02FD     {
                 ; 0000 02FE         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
003a12 940e c036 	CALL SUBOPT_0x4
003a14 f411      	BRNE PC+3
003a15 940c 3a73 	JMP _0xD0
                 ; 0000 02FF         {
                 ; 0000 0300             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 0301             err =   checkSendSensorAlarm(i,&statusCode);
003a17 940e c1fe 	CALL SUBOPT_0x42
003a19 940e 7c31 	CALL _checkSendSensorAlarm
003a1b 940e c1dc 	CALL SUBOPT_0x3D
                 ; 0000 0302             res |=  err;
                 ; 0000 0303             if(err){
003a1d f131      	BREQ _0xD1
                 ; 0000 0304                 timestamp_rd    = DS1672_read();
003a1e 940e c1e2 	CALL SUBOPT_0x3E
                 ; 0000 0305                 if(statusCode)
003a20 f059      	BREQ _0xD2
                 ; 0000 0306                 {
                 ; 0000 0307                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
003a21 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1338 ) )
003a22 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1338 ) )
003a23 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1338 ) )
003a24 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1338 ) )
                 	__POINTD1FN _0x0,1338
003a25 940e c20a 	CALL SUBOPT_0x44
                 ; 0000 0308                     printOLED("AL12%1d",i+1);
                +
003a27 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003a28 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003a29 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003a2a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003a2b c00a      	RJMP _0x13C
                 ; 0000 0309                 }
                 ; 0000 030A                 else
                 _0xD2:
                 ; 0000 030B                 {
                 ; 0000 030C                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
003a2c ece7     +LDI R30 , LOW ( 2 * _0x0 + ( 1403 ) )
003a2d e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1403 ) )
003a2e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1403 ) )
003a2f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1403 ) )
                 	__POINTD1FN _0x0,1403
003a30 940e c20a 	CALL SUBOPT_0x44
                 ; 0000 030D                     printOLED("AL02%1d",i+1);
                +
003a32 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003a33 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003a34 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003a35 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13C:
003a36 940e e05e 	CALL __PUTPARD1
003a38 940e c20d 	CALL SUBOPT_0x45
                 ; 0000 030E                 }
                 ; 0000 030F 
                 ; 0000 0310                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
003a3a 940e c1eb 	CALL SUBOPT_0x3F
003a3c 2fe2      	MOV  R30,R18
003a3d 6fe0      	ORI  R30,LOW(0xF0)
003a3e 940e c1f2 	CALL SUBOPT_0x40
                 ; 0000 0311                 if(err < 0){
003a40 f412      	BRPL _0xD4
                 ; 0000 0312                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003a41 940e c1f9 	CALL SUBOPT_0x41
                 ; 0000 0313                 }
                 ; 0000 0314             }// -- check sensor alarm -- //
                 _0xD4:
                 ; 0000 0315             else
003a43 c02f      	RJMP _0xD5
                 _0xD1:
                 ; 0000 0316             {
                 ; 0000 0317                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
003a44 940e c1a4 	CALL SUBOPT_0x38
003a46 f161      	BREQ _0xD6
                 ; 0000 0318                 {
                 ; 0000 0319                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 031A                     err =   checkSendDataAlarm(i,&statusCode);
003a47 940e c1fe 	CALL SUBOPT_0x42
003a49 940e 7c95 	CALL _checkSendDataAlarm
003a4b 940e c1dc 	CALL SUBOPT_0x3D
                 ; 0000 031B                     res |=  err;
                 ; 0000 031C                     if(err){
003a4d f129      	BREQ _0xD7
                 ; 0000 031D                         timestamp_rd    = DS1672_read();
003a4e 940e c1e2 	CALL SUBOPT_0x3E
                 ; 0000 031E                         if(statusCode)
003a50 f059      	BREQ _0xD8
                 ; 0000 031F                         {
                 ; 0000 0320                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
003a51 e0e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1465 ) )
003a52 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1465 ) )
003a53 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1465 ) )
003a54 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1465 ) )
                 	__POINTD1FN _0x0,1465
003a55 940e c20a 	CALL SUBOPT_0x44
                 ; 0000 0321                             printOLED("AL12%1d",i+1);
                +
003a57 ebef     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003a58 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003a59 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003a5a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003a5b c00a      	RJMP _0x13D
                 ; 0000 0322                         }
                 ; 0000 0323                         else
                 _0xD8:
                 ; 0000 0324                         {
                 ; 0000 0325                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
003a5c e4e5     +LDI R30 , LOW ( 2 * _0x0 + ( 1529 ) )
003a5d e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1529 ) )
003a5e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1529 ) )
003a5f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1529 ) )
                 	__POINTD1FN _0x0,1529
003a60 940e c20a 	CALL SUBOPT_0x44
                 ; 0000 0326                             printOLED("AL02%1d",i+1);
                +
003a62 efed     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003a63 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003a64 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003a65 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13D:
003a66 940e e05e 	CALL __PUTPARD1
003a68 940e c20d 	CALL SUBOPT_0x45
                 ; 0000 0327                         }
                 ; 0000 0328                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003a6a 940e c1eb 	CALL SUBOPT_0x3F
003a6c 2fe2      	MOV  R30,R18
003a6d 6ee0      	ORI  R30,LOW(0xE0)
003a6e 940e c1f2 	CALL SUBOPT_0x40
                 ; 0000 0329                         if(err < 0){
003a70 f412      	BRPL _0xDA
                 ; 0000 032A                             printDebug("<eventCapture> addEventQueue() failed\r\n");
003a71 940e c1f9 	CALL SUBOPT_0x41
                 ; 0000 032B                         }
                 ; 0000 032C                     }
                 _0xDA:
                 ; 0000 032D                 }// -- sensor.alarmEnable -- //
                 _0xD7:
                 ; 0000 032E             }// -- check data alarm -- //
                 _0xD6:
                 _0xD5:
                 ; 0000 032F         }// -- sensor Enable -- //
                 ; 0000 0330     }// -- for loop -- //
                 _0xD0:
                +
003a73 5f2f     +SUBI R18 , LOW ( - 1 )
003a74 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003a75 cf96      	RJMP _0xCE
                 _0xCF:
                 ; 0000 0331 
                 ; 0000 0332 
                 ; 0000 0333     return res;
003a76 01f8      	MOVW R30,R16
003a77 940e e0d5 	CALL __LOADLOCR6
003a79 962b      	ADIW R28,11
003a7a 9508      	RET
                 ; 0000 0334 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 033C {
                 _statusReport:
                 ; 0000 033D     int                     res = 0;
                 ; 0000 033E     unsigned long int       timestamp_rd;
                 ; 0000 033F     unsigned char           *param;
                 ; 0000 0340     int                     paramLen = 0;
                 ; 0000 0341 
                 ; 0000 0342     unsigned short          deviceState;
                 ; 0000 0343 
                 ; 0000 0344     switch (status_config.accm)
003a7b 9726      	SBIW R28,6
003a7c 940e c218 	CALL SUBOPT_0x46
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
003a7e e040     +LDI R20 , LOW ( 0 )
003a7f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
003a80 91e0 1362 	LDS  R30,_status_config
003a82 940e c21d 	CALL SUBOPT_0x47
                 ; 0000 0345     {
                 ; 0000 0346         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
003a84 f449      	BRNE _0xDE
                +
003a85 e8e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1590 ) )
003a86 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1590 ) )
003a87 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1590 ) )
003a88 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1590 ) )
                 	__POINTD1FN _0x0,1590
003a89 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0347                                     return -1;
003a8b efef      	LDI  R30,LOW(65535)
003a8c efff      	LDI  R31,HIGH(65535)
003a8d c08a      	RJMP _0x20E009C
                 ; 0000 0348         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xDE:
003a8e 32e0      	CPI  R30,LOW(0x20)
003a8f e0a0      	LDI  R26,HIGH(0x20)
003a90 07fa      	CPC  R31,R26
003a91 f449      	BRNE _0xDF
                +
003a92 ebe8     +LDI R30 , LOW ( 2 * _0x0 + ( 1644 ) )
003a93 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1644 ) )
003a94 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1644 ) )
003a95 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1644 ) )
                 	__POINTD1FN _0x0,1644
003a96 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0349                                     return -1;
003a98 efef      	LDI  R30,LOW(65535)
003a99 efff      	LDI  R31,HIGH(65535)
003a9a c07d      	RJMP _0x20E009C
                 ; 0000 034A         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xDF:
003a9b 33e0      	CPI  R30,LOW(0x30)
003a9c e0a0      	LDI  R26,HIGH(0x30)
003a9d 07fa      	CPC  R31,R26
003a9e f011      	BREQ PC+3
003a9f 940c 3af1 	JMP _0xE3
003aa1 940e c222 	CALL SUBOPT_0x48
003aa3 940e a4fe 	CALL _malloc
003aa5 019f      	MOVW R18,R30
                 ; 0000 034B                                     if(param == NULL){
003aa6 2e02      	MOV  R0,R18
003aa7 2a03      	OR   R0,R19
003aa8 f449      	BRNE _0xE1
                 ; 0000 034C                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
003aa9 efe0     +LDI R30 , LOW ( 2 * _0x0 + ( 1700 ) )
003aaa e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1700 ) )
003aab e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1700 ) )
003aac e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1700 ) )
                 	__POINTD1FN _0x0,1700
003aad 940e c225 	CALL SUBOPT_0x49
                 ; 0000 034D                                         return -1;
003aaf efef      	LDI  R30,LOW(65535)
003ab0 efff      	LDI  R31,HIGH(65535)
003ab1 c066      	RJMP _0x20E009C
                 ; 0000 034E                                     }
                 ; 0000 034F 
                 ; 0000 0350                                     res = getDeviceState(&deviceState);
                 _0xE1:
003ab2 01de      	MOVW R26,R28
003ab3 9616      	ADIW R26,6
003ab4 940e 7704 	CALL _getDeviceState
003ab6 018f      	MOVW R16,R30
                 ; 0000 0351                                     if(res<0){
003ab7 2311      	TST  R17
003ab8 f452      	BRPL _0xE2
                 ; 0000 0352                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
003ab9 e1ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1742 ) )
003aba e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1742 ) )
003abb e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1742 ) )
003abc e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1742 ) )
                 	__POINTD1FN _0x0,1742
003abd 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0353                                         free ( param );
003abf 01d9      	MOVW R26,R18
003ac0 940e c22d 	CALL SUBOPT_0x4A
                 ; 0000 0354                                         return -1;
003ac2 c055      	RJMP _0x20E009C
                 ; 0000 0355                                     }
                 ; 0000 0356 
                 ; 0000 0357                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xE2:
003ac3 940e c232 	CALL SUBOPT_0x4B
003ac5 81ef      	LDD  R30,Y+7
003ac6 70f0      	ANDI R31,HIGH(0x0)
003ac7 93ec      	ST   X,R30
                 ; 0000 0358                                     param[paramLen++] = (deviceState & 0x00FF);
003ac8 940e c232 	CALL SUBOPT_0x4B
003aca 81ee      	LDD  R30,Y+6
003acb 93ec      	ST   X,R30
                 ; 0000 0359                                     param[paramLen++] = powerSrcStatus;
003acc 940e c239 	CALL SUBOPT_0x4C
003ace 91a0 147a 	LDS  R26,_powerSrcStatus
003ad0 83a0      	STD  Z+0,R26
                 ; 0000 035A 
                 ; 0000 035B 
                 ; 0000 035C                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
003ad1 01fa      	MOVW R30,R20
003ad2 0fe2      	ADD  R30,R18
003ad3 1ff3      	ADC  R31,R19
003ad4 93fa      	ST   -Y,R31
003ad5 93ea      	ST   -Y,R30
003ad6 e8e3      	LDI  R30,LOW(_batteryVolt)
003ad7 e1f4      	LDI  R31,HIGH(_batteryVolt)
003ad8 940e c23f 	CALL SUBOPT_0x4D
                 ; 0000 035D                                     paramLen         += sizeof(batteryVolt);
                +
003ada 5f4c     +SUBI R20 , LOW ( - 4 )
003adb 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 035E 
                 ; 0000 035F                                     param[paramLen++] = dinStatus[0];
003adc 940e c239 	CALL SUBOPT_0x4C
003ade 91a0 147c 	LDS  R26,_dinStatus
003ae0 83a0      	STD  Z+0,R26
                 ; 0000 0360                                     param[paramLen++] = dinStatus[1];
003ae1 940e c239 	CALL SUBOPT_0x4C
                +
003ae3 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
003ae5 83a0      	STD  Z+0,R26
                 ; 0000 0361                                     param[paramLen++] = doutStatus[0];
003ae6 940e c239 	CALL SUBOPT_0x4C
003ae8 91a0 147e 	LDS  R26,_doutStatus
003aea 83a0      	STD  Z+0,R26
                 ; 0000 0362                                     param[paramLen++] = doutStatus[1];
003aeb 940e c239 	CALL SUBOPT_0x4C
                +
003aed 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
003aef 83a0      	STD  Z+0,R26
                 ; 0000 0363 
                 ; 0000 0364                                     break;
003af0 c00d      	RJMP _0xDD
                 ; 0000 0365         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xE3:
                +
003af1 e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1783 ) )
003af2 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1783 ) )
003af3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1783 ) )
003af4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1783 ) )
                 	__POINTD1FN _0x0,1783
003af5 940e e05e 	CALL __PUTPARD1
003af7 91e0 1362 	LDS  R30,_status_config
003af9 940e c143 	CALL SUBOPT_0x29
                 ; 0000 0366                                     return -1;
003afb efef      	LDI  R30,LOW(65535)
003afc efff      	LDI  R31,HIGH(65535)
003afd c01a      	RJMP _0x20E009C
                 ; 0000 0367     }
                 _0xDD:
                 ; 0000 0368 
                 ; 0000 0369     timestamp_rd = DS1672_read();
003afe 940e c245 	CALL SUBOPT_0x4E
                 ; 0000 036A 
                 ; 0000 036B     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
003b00 940e c24c 	CALL SUBOPT_0x4F
003b02 940e e05e 	CALL __PUTPARD1
003b04 91e0 1362 	LDS  R30,_status_config
003b06 93ea      	ST   -Y,R30
003b07 933a      	ST   -Y,R19
003b08 932a      	ST   -Y,R18
003b09 01da      	MOVW R26,R20
003b0a 940e 5394 	CALL _ETH_sendStatusReportCmd
003b0c 018f      	MOVW R16,R30
                 ; 0000 036C     if(res < 0)
003b0d 2311      	TST  R17
003b0e f432      	BRPL _0xE4
                 ; 0000 036D     {
                 ; 0000 036E         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
003b0f e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 1836 ) )
003b10 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1836 ) )
003b11 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1836 ) )
003b12 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1836 ) )
                 	__POINTD1FN _0x0,1836
003b13 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 036F     }
                 ; 0000 0370 
                 ; 0000 0371     free ( param );
                 _0xE4:
003b15 01d9      	MOVW R26,R18
003b16 940e a519 	CALL _free
                 ; 0000 0372 }
                 _0x20E009C:
003b18 940e e0d5 	CALL __LOADLOCR6
003b1a 962c      	ADIW R28,12
003b1b 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 0375 {
                 _sensorDataReport:
                 ; 0000 0376     int                     count = 0;
                 ; 0000 0377     int                     res;
                 ; 0000 0378     unsigned long int       timestamp;
                 ; 0000 0379     unsigned int            channel;
                 ; 0000 037A     float                   value;
                 ; 0000 037B 
                 ; 0000 037C     // -- for debug -- //
                 ; 0000 037D     //struct rtc_structure    dt;
                 ; 0000 037E     // --------------- //
                 ; 0000 037F     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 0380 
                 ; 0000 0381     while (count < MAX_DATA_QUEUE)
003b1c 9728      	SBIW R28,8
003b1d 940e c218 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xE5:
                +
003b1f 300a     +CPI R16 , LOW ( 10 )
003b20 e0e0     +LDI R30 , HIGH ( 10 )
003b21 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
003b22 f014      	BRLT PC+3
003b23 940c 3b6b 	JMP _0xE7
                 ; 0000 0382     {
                 ; 0000 0383         res = fetchDataQueue(&timestamp, &channel, &value);
003b25 01fe      	MOVW R30,R28
003b26 963a      	ADIW R30,10
003b27 93fa      	ST   -Y,R31
003b28 93ea      	ST   -Y,R30
003b29 b7ed      	IN   R30,SPL
003b2a b7fe      	IN   R31,SPH
003b2b 9731      	SBIW R30,1
003b2c 93fa      	ST   -Y,R31
003b2d 93ea      	ST   -Y,R30
003b2e 935f      	PUSH R21
003b2f 934f      	PUSH R20
003b30 01de      	MOVW R26,R28
003b31 961a      	ADIW R26,10
003b32 940e 7445 	CALL _fetchDataQueue
003b34 914f      	POP  R20
003b35 915f      	POP  R21
003b36 019f      	MOVW R18,R30
                 ; 0000 0384         if(res < 0)
003b37 2333      	TST  R19
003b38 f192      	BRMI _0xE7
                 ; 0000 0385         {
                 ; 0000 0386             break;
                 ; 0000 0387         }
                 ; 0000 0388         else
                 ; 0000 0389         {
                 ; 0000 038A             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
003b39 eaea     +LDI R30 , LOW ( 2 * _0x0 + ( 1886 ) )
003b3a e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1886 ) )
003b3b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1886 ) )
003b3c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1886 ) )
                 	__POINTD1FN _0x0,1886
003b3d 940e c251 	CALL SUBOPT_0x50
003b3f 01fa      	MOVW R30,R20
003b40 940e c191 	CALL SUBOPT_0x34
003b42 940e c25a 	CALL SUBOPT_0x51
                 ; 0000 038B             /*
                 ; 0000 038C             binary_to_date(timestamp, &dt);
                 ; 0000 038D             printRTC(dt);
                 ; 0000 038E             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 038F             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 0390             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 0391             */
                 ; 0000 0392 
                 ; 0000 0393             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003b44 940e c265 	CALL SUBOPT_0x52
003b46 940e e0be 	CALL __CPD02
003b48 f039      	BREQ _0xEB
003b49 940e c26a 	CALL SUBOPT_0x53
003b4b f021      	BREQ _0xEB
                +
003b4c 3045     +CPI R20 , LOW ( 5 )
003b4d e0e0     +LDI R30 , HIGH ( 5 )
003b4e 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
003b4f f038      	BRLO _0xEA
                 _0xEB:
                 ; 0000 0394             {
                 ; 0000 0395                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003b50 ecef     +LDI R30 , LOW ( 2 * _0x0 + ( 1923 ) )
003b51 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1923 ) )
003b52 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1923 ) )
003b53 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1923 ) )
                 	__POINTD1FN _0x0,1923
003b54 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0396                 continue;
003b56 cfc8      	RJMP _0xE5
                 ; 0000 0397             }
                 ; 0000 0398 
                 ; 0000 0399 
                 ; 0000 039A             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xEA:
003b57 e0e0      	LDI  R30,LOW(0)
003b58 940e c26c 	CALL SUBOPT_0x54
003b5a 935a      	ST   -Y,R21
003b5b 934a      	ST   -Y,R20
003b5c 940e c274 	CALL SUBOPT_0x55
003b5e 019f      	MOVW R18,R30
                 ; 0000 039B             if(res < 0)
003b5f 2333      	TST  R19
003b60 f43a      	BRPL _0xED
                 ; 0000 039C             {
                 ; 0000 039D                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
003b61 e0ed     +LDI R30 , LOW ( 2 * _0x0 + ( 1985 ) )
003b62 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 1985 ) )
003b63 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1985 ) )
003b64 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1985 ) )
                 	__POINTD1FN _0x0,1985
003b65 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 039E                 // --- Keep in Log --- //
                 ; 0000 039F                 continue;
003b67 cfb7      	RJMP _0xE5
                 ; 0000 03A0             }
                 ; 0000 03A1             count++;
                 _0xED:
                +
003b68 5f0f     +SUBI R16 , LOW ( - 1 )
003b69 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03A2         }
                 ; 0000 03A3 
                 ; 0000 03A4     }
003b6a cfb4      	RJMP _0xE5
                 _0xE7:
                 ; 0000 03A5 
                 ; 0000 03A6     return count;
003b6b 01f8      	MOVW R30,R16
003b6c 940e e0d5 	CALL __LOADLOCR6
003b6e 962e      	ADIW R28,14
003b6f 9508      	RET
                 ; 0000 03A7 }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 03AA {
                 _eventReport:
                 ; 0000 03AB     int                     count = 0;
                 ; 0000 03AC     int                     res;
                 ; 0000 03AD     unsigned long int       timestamp;
                 ; 0000 03AE     unsigned char           eventID;
                 ; 0000 03AF     unsigned char           eventStatus;
                 ; 0000 03B0 
                 ; 0000 03B1     // -- for debug -- //
                 ; 0000 03B2     //struct rtc_structure    dt;
                 ; 0000 03B3     // --------------- //
                 ; 0000 03B4     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 03B5 
                 ; 0000 03B6     while (count < MAX_EVENT_QUEUE)
003b70 9724      	SBIW R28,4
003b71 940e c218 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xEE:
                +
003b73 3104     +CPI R16 , LOW ( 20 )
003b74 e0e0     +LDI R30 , HIGH ( 20 )
003b75 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003b76 f014      	BRLT PC+3
003b77 940c 3bba 	JMP _0xF0
                 ; 0000 03B7     {
                 ; 0000 03B8         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003b79 940e c27a 	CALL SUBOPT_0x56
003b7b b7ed      	IN   R30,SPL
003b7c b7fe      	IN   R31,SPH
003b7d 93fa      	ST   -Y,R31
003b7e 93ea      	ST   -Y,R30
003b7f 935f      	PUSH R21
003b80 b7ad      	IN   R26,SPL
003b81 b7be      	IN   R27,SPH
003b82 934f      	PUSH R20
003b83 940e 77a9 	CALL _fetchEventQueue
003b85 914f      	POP  R20
003b86 915f      	POP  R21
003b87 019f      	MOVW R18,R30
                 ; 0000 03B9         if(res < 0)
003b88 2333      	TST  R19
003b89 f182      	BRMI _0xF0
                 ; 0000 03BA         {
                 ; 0000 03BB             break;
                 ; 0000 03BC         }
                 ; 0000 03BD         else
                 ; 0000 03BE         {
                 ; 0000 03BF 
                 ; 0000 03C0             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003b8a e4e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2037 ) )
003b8b e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2037 ) )
003b8c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2037 ) )
003b8d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2037 ) )
                 	__POINTD1FN _0x0,2037
003b8e 940e c27f 	CALL SUBOPT_0x57
003b90 940e e05e 	CALL __PUTPARD1
003b92 940e c286 	CALL SUBOPT_0x58
                 ; 0000 03C1             /*
                 ; 0000 03C2             binary_to_date(timestamp, &dt);
                 ; 0000 03C3             printRTC(dt);
                 ; 0000 03C4             */
                 ; 0000 03C5 
                 ; 0000 03C6             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003b94 940e c297 	CALL SUBOPT_0x59
003b96 940e e0be 	CALL __CPD02
003b98 f029      	BREQ _0xF4
003b99 940e c297 	CALL SUBOPT_0x59
003b9b 940e c1b7 	CALL SUBOPT_0x3A
003b9d f439      	BRNE _0xF3
                 _0xF4:
                 ; 0000 03C7             {
                 ; 0000 03C8                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003b9e e6e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2075 ) )
003b9f e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2075 ) )
003ba0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2075 ) )
003ba1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2075 ) )
                 	__POINTD1FN _0x0,2075
003ba2 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 03C9                 continue;
003ba4 cfce      	RJMP _0xEE
                 ; 0000 03CA             }
                 ; 0000 03CB 
                 ; 0000 03CC 
                 ; 0000 03CD             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xF3:
003ba5 e0e0      	LDI  R30,LOW(0)
003ba6 93ea      	ST   -Y,R30
003ba7 940e c1eb 	CALL SUBOPT_0x3F
003ba9 935a      	ST   -Y,R21
003baa 2fa4      	MOV  R26,R20
003bab 940e 53e3 	CALL _ETH_sendEventReportCmd
003bad 019f      	MOVW R18,R30
                 ; 0000 03CE             if(res < 0)
003bae 2333      	TST  R19
003baf f43a      	BRPL _0xF6
                 ; 0000 03CF             {
                 ; 0000 03D0                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003bb0 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 2132 ) )
003bb1 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2132 ) )
003bb2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2132 ) )
003bb3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2132 ) )
                 	__POINTD1FN _0x0,2132
003bb4 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 03D1                 // --- Keep in Log --- //
                 ; 0000 03D2                 continue;
003bb6 cfbc      	RJMP _0xEE
                 ; 0000 03D3             }
                 ; 0000 03D4             count++;
                 _0xF6:
                +
003bb7 5f0f     +SUBI R16 , LOW ( - 1 )
003bb8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 03D5         }
                 ; 0000 03D6     }
003bb9 cfb9      	RJMP _0xEE
                 _0xF0:
                 ; 0000 03D7 
                 ; 0000 03D8     return count;
003bba 01f8      	MOVW R30,R16
003bbb 940e e0d5 	CALL __LOADLOCR6
003bbd 962a      	ADIW R28,10
003bbe 9508      	RET
                 ; 0000 03D9 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 03E1 {
                 _sensorDataSave:
                 ; 0000 03E2     FIL                     file;
                 ; 0000 03E3     char                    isFileOpen = 0;
                 ; 0000 03E4     int                     count = 0;
                 ; 0000 03E5     int                     res;
                 ; 0000 03E6     unsigned long int       timestamp;
                 ; 0000 03E7     unsigned int            channel;
                 ; 0000 03E8     float                   value;
                 ; 0000 03E9 
                 ; 0000 03EA 
                 ; 0000 03EB     // -- for debug -- //
                 ; 0000 03EC     //struct rtc_structure    dt;
                 ; 0000 03ED     // --------------- //
                 ; 0000 03EE 
                 ; 0000 03EF     while (count < MAX_DATA_QUEUE)
003bbf 97aa      	SBIW R28,42
003bc0 50d2      	SUBI R29,2
003bc1 940e e0ce 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
003bc3 e010      	LDI  R17,0
                +
003bc4 e020     +LDI R18 , LOW ( 0 )
003bc5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF7:
                +
003bc6 302a     +CPI R18 , LOW ( 10 )
003bc7 e0e0     +LDI R30 , HIGH ( 10 )
003bc8 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
003bc9 f014      	BRLT PC+3
003bca 940c 3c23 	JMP _0xF9
                 ; 0000 03F0     {
                 ; 0000 03F1         res = fetchDataQueue(&timestamp, &channel, &value);
003bcc 940e c29c 	CALL SUBOPT_0x5A
003bce 940e c29c 	CALL SUBOPT_0x5A
003bd0 01de      	MOVW R26,R28
003bd1 961a      	ADIW R26,10
003bd2 940e 7445 	CALL _fetchDataQueue
003bd4 01af      	MOVW R20,R30
                 ; 0000 03F2         if(res < 0)
003bd5 2355      	TST  R21
003bd6 f40a      	BRPL _0xFA
                 ; 0000 03F3         {
                 ; 0000 03F4             break;
003bd7 c04b      	RJMP _0xF9
                 ; 0000 03F5         }
                 ; 0000 03F6         else
                 _0xFA:
                 ; 0000 03F7         {
                 ; 0000 03F8             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003bd8 ede0     +LDI R30 , LOW ( 2 * _0x0 + ( 2180 ) )
003bd9 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2180 ) )
003bda e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2180 ) )
003bdb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2180 ) )
                 	__POINTD1FN _0x0,2180
003bdc 940e c2a1 	CALL SUBOPT_0x5B
003bde 89ea      	LDD  R30,Y+18
003bdf 89fb      	LDD  R31,Y+18+1
003be0 940e c191 	CALL SUBOPT_0x34
003be2 940e c25a 	CALL SUBOPT_0x51
                 ; 0000 03F9             /*
                 ; 0000 03FA             binary_to_date(timestamp, &dt);
                 ; 0000 03FB             printRTC(dt);
                 ; 0000 03FC             */
                 ; 0000 03FD 
                 ; 0000 03FE             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003be4 940e c075 	CALL SUBOPT_0xB
003be6 940e e0be 	CALL __CPD02
003be8 f039      	BREQ _0xFD
003be9 940e c2a7 	CALL SUBOPT_0x5C
003beb f021      	BREQ _0xFD
003bec 85aa      	LDD  R26,Y+10
003bed 85bb      	LDD  R27,Y+10+1
003bee 9715      	SBIW R26,5
003bef f038      	BRLO _0xFC
                 _0xFD:
                 ; 0000 03FF             {
                 ; 0000 0400                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003bf0 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2226 ) )
003bf1 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2226 ) )
003bf2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2226 ) )
003bf3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2226 ) )
                 	__POINTD1FN _0x0,2226
003bf4 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0401                 continue;
003bf6 cfcf      	RJMP _0xF7
                 ; 0000 0402             }
                 ; 0000 0403 
                 ; 0000 0404             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0405             if(!isFileOpen)
                 _0xFC:
003bf7 3010      	CPI  R17,0
003bf8 f489      	BRNE _0xFF
                 ; 0000 0406             {
                 ; 0000 0407                 res = LOG_openFile(&file,LOGFILE_DATA);
003bf9 940e c2a9 	CALL SUBOPT_0x5D
003bfb 940e c2ae 	CALL SUBOPT_0x5E
003bfd 01af      	MOVW R20,R30
                 ; 0000 0408                 if(res < 0)
003bfe 2355      	TST  R21
003bff f44a      	BRPL _0x100
                 ; 0000 0409                 {
                 ; 0000 040A                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
003c00 e3ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2286 ) )
003c01 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2286 ) )
003c02 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2286 ) )
003c03 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2286 ) )
                 	__POINTD1FN _0x0,2286
003c04 940e c2b9 	CALL SUBOPT_0x5F
003c06 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 040B                     continue;
003c08 cfbd      	RJMP _0xF7
                 ; 0000 040C                 }
                 ; 0000 040D                 isFileOpen = 1;
                 _0x100:
003c09 e011      	LDI  R17,LOW(1)
                 ; 0000 040E             }
                 ; 0000 040F 
                 ; 0000 0410             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xFF:
003c0a 940e c2a9 	CALL SUBOPT_0x5D
003c0c 940e c2be 	CALL SUBOPT_0x60
003c0e 940e e05e 	CALL __PUTPARD1
003c10 89e8      	LDD  R30,Y+16
003c11 89f9      	LDD  R31,Y+16+1
003c12 93fa      	ST   -Y,R31
003c13 93ea      	ST   -Y,R30
003c14 940e c2c3 	CALL SUBOPT_0x61
003c16 01af      	MOVW R20,R30
                 ; 0000 0411             if(res < 0)
003c17 2355      	TST  R21
003c18 f43a      	BRPL _0x101
                 ; 0000 0412             {
                 ; 0000 0413                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
003c19 e7e8     +LDI R30 , LOW ( 2 * _0x0 + ( 2348 ) )
003c1a e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2348 ) )
003c1b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2348 ) )
003c1c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2348 ) )
                 	__POINTD1FN _0x0,2348
003c1d 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0414                 continue;
003c1f cfa6      	RJMP _0xF7
                 ; 0000 0415             }
                 ; 0000 0416             count++;
                 _0x101:
                +
003c20 5f2f     +SUBI R18 , LOW ( - 1 )
003c21 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0417         }
                 ; 0000 0418     }
003c22 cfa3      	RJMP _0xF7
                 _0xF9:
                 ; 0000 0419 
                 ; 0000 041A     if(isFileOpen)
003c23 3010      	CPI  R17,0
003c24 f071      	BREQ _0x102
                 ; 0000 041B     {
                 ; 0000 041C         res = LOG_closeFile(&file);
003c25 01de      	MOVW R26,R28
003c26 9650      	ADIW R26,16
003c27 940e c2c9 	CALL SUBOPT_0x62
                 ; 0000 041D         if(res < 0)
003c29 f44a      	BRPL _0x103
                 ; 0000 041E         {
                 ; 0000 041F             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
003c2a eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 2391 ) )
003c2b e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2391 ) )
003c2c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2391 ) )
003c2d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2391 ) )
                 	__POINTD1FN _0x0,2391
003c2e 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0420             return -1;
003c30 efef      	LDI  R30,LOW(65535)
003c31 efff      	LDI  R31,HIGH(65535)
003c32 c00b      	RJMP _0x20E009B
                 ; 0000 0421         }
                 ; 0000 0422     }
                 _0x103:
                 ; 0000 0423 
                 ; 0000 0424     if(count > 0){
                 _0x102:
003c33 2400      	CLR  R0
003c34 1602      	CP   R0,R18
003c35 0603      	CPC  R0,R19
003c36 f434      	BRGE _0x104
                 ; 0000 0425         //isDataLogEmpty  = 0;
                 ; 0000 0426         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
003c37 eced     +LDI R30 , LOW ( 2 * _0x0 + ( 2433 ) )
003c38 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2433 ) )
003c39 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2433 ) )
003c3a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2433 ) )
                 	__POINTD1FN _0x0,2433
003c3b 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0427     }
                 ; 0000 0428 
                 ; 0000 0429     return count;
                 _0x104:
003c3d 01f9      	MOVW R30,R18
                 _0x20E009B:
003c3e 940e e0d5 	CALL __LOADLOCR6
003c40 96e0      	ADIW R28,48
003c41 5fde      	SUBI R29,-2
003c42 9508      	RET
                 ; 0000 042A }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 042D {
                 _eventSave:
                 ; 0000 042E     FIL                     file;
                 ; 0000 042F     char                    isFileOpen = 0;
                 ; 0000 0430     int                     count = 0;
                 ; 0000 0431     int                     res;
                 ; 0000 0432     unsigned long int       timestamp;
                 ; 0000 0433     unsigned char           eventID;
                 ; 0000 0434     unsigned char           eventStatus;
                 ; 0000 0435 
                 ; 0000 0436     // -- for debug -- //
                 ; 0000 0437     //struct rtc_structure    dt;
                 ; 0000 0438     // --------------- //
                 ; 0000 0439 
                 ; 0000 043A     while (count < MAX_EVENT_QUEUE)
003c43 97a5      	SBIW R28,37
003c44 50d2      	SUBI R29,2
003c45 940e e0ce 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
003c47 e010      	LDI  R17,0
                +
003c48 e020     +LDI R18 , LOW ( 0 )
003c49 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x105:
                +
003c4a 3124     +CPI R18 , LOW ( 20 )
003c4b e0e0     +LDI R30 , HIGH ( 20 )
003c4c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
003c4d f014      	BRLT PC+3
003c4e 940c 3cab 	JMP _0x107
                 ; 0000 043B     {
                 ; 0000 043C         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003c50 940e c2d4 	CALL SUBOPT_0x63
003c52 b7ed      	IN   R30,SPL
003c53 b7fe      	IN   R31,SPH
003c54 93fa      	ST   -Y,R31
003c55 93ea      	ST   -Y,R30
003c56 930f      	PUSH R16
003c57 01de      	MOVW R26,R28
003c58 961a      	ADIW R26,10
003c59 940e 77a9 	CALL _fetchEventQueue
003c5b 910f      	POP  R16
003c5c 01af      	MOVW R20,R30
                 ; 0000 043D         if(res < 0)
003c5d 2355      	TST  R21
003c5e f40a      	BRPL _0x108
                 ; 0000 043E         {
                 ; 0000 043F             break;
003c5f c04b      	RJMP _0x107
                 ; 0000 0440         }
                 ; 0000 0441         else
                 _0x108:
                 ; 0000 0442         {
                 ; 0000 0443             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003c60 efe6     +LDI R30 , LOW ( 2 * _0x0 + ( 2474 ) )
003c61 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2474 ) )
003c62 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2474 ) )
003c63 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2474 ) )
                 	__POINTD1FN _0x0,2474
003c64 940e e05e 	CALL __PUTPARD1
003c66 940e c2d9 	CALL SUBOPT_0x64
003c68 2fe0      	MOV  R30,R16
003c69 940e c2e0 	CALL SUBOPT_0x65
003c6b 89ea      	LDD  R30,Y+18
003c6c 940e c2e0 	CALL SUBOPT_0x65
003c6e 940e c2e6 	CALL SUBOPT_0x66
                 ; 0000 0444             /*
                 ; 0000 0445             binary_to_date(timestamp, &dt);
                 ; 0000 0446             printRTC(dt);
                 ; 0000 0447             */
                 ; 0000 0448 
                 ; 0000 0449             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003c70 940e c2eb 	CALL SUBOPT_0x67
003c72 940e e0be 	CALL __CPD02
003c74 f029      	BREQ _0x10B
003c75 940e c2eb 	CALL SUBOPT_0x67
003c77 940e c1b7 	CALL SUBOPT_0x3A
003c79 f439      	BRNE _0x10A
                 _0x10B:
                 ; 0000 044A             {
                 ; 0000 044B                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003c7a e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2522 ) )
003c7b e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2522 ) )
003c7c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2522 ) )
003c7d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2522 ) )
                 	__POINTD1FN _0x0,2522
003c7e 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 044C                 continue;
003c80 cfc9      	RJMP _0x105
                 ; 0000 044D             }
                 ; 0000 044E 
                 ; 0000 044F             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 0450             if(!isFileOpen)
                 _0x10A:
003c81 3010      	CPI  R17,0
003c82 f489      	BRNE _0x10D
                 ; 0000 0451             {
                 ; 0000 0452                 res = LOG_openFile(&file,LOGFILE_EVENT);
003c83 940e c2f0 	CALL SUBOPT_0x68
003c85 940e c2f5 	CALL SUBOPT_0x69
003c87 01af      	MOVW R20,R30
                 ; 0000 0453                 if(res < 0)
003c88 2355      	TST  R21
003c89 f44a      	BRPL _0x10E
                 ; 0000 0454                 {
                 ; 0000 0455                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
003c8a e5ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2577 ) )
003c8b e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2577 ) )
003c8c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2577 ) )
003c8d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2577 ) )
                 	__POINTD1FN _0x0,2577
003c8e 940e c300 	CALL SUBOPT_0x6A
003c90 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 0456                     continue;
003c92 cfb7      	RJMP _0x105
                 ; 0000 0457                 }
                 ; 0000 0458                 isFileOpen = 1;
                 _0x10E:
003c93 e011      	LDI  R17,LOW(1)
                 ; 0000 0459             }
                 ; 0000 045A 
                 ; 0000 045B             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0x10D:
003c94 940e c2f0 	CALL SUBOPT_0x68
003c96 940e c305 	CALL SUBOPT_0x6B
003c98 940e e05e 	CALL __PUTPARD1
003c9a 930a      	ST   -Y,R16
003c9b 85ad      	LDD  R26,Y+13
003c9c 940e 8321 	CALL _LOG_insertEvent
003c9e 01af      	MOVW R20,R30
                 ; 0000 045C             if(res < 0)
003c9f 2355      	TST  R21
003ca0 f43a      	BRPL _0x10F
                 ; 0000 045D             {
                 ; 0000 045E                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003ca1 e9e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2634 ) )
003ca2 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2634 ) )
003ca3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2634 ) )
003ca4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2634 ) )
                 	__POINTD1FN _0x0,2634
003ca5 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 045F                 continue;
003ca7 cfa2      	RJMP _0x105
                 ; 0000 0460             }
                 ; 0000 0461             count++;
                 _0x10F:
                +
003ca8 5f2f     +SUBI R18 , LOW ( - 1 )
003ca9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 0462         }
                 ; 0000 0463     }
003caa cf9f      	RJMP _0x105
                 _0x107:
                 ; 0000 0464 
                 ; 0000 0465     if(isFileOpen)
003cab 3010      	CPI  R17,0
003cac f071      	BREQ _0x110
                 ; 0000 0466     {
                 ; 0000 0467         res = LOG_closeFile(&file);
003cad 01de      	MOVW R26,R28
003cae 961b      	ADIW R26,11
003caf 940e c2c9 	CALL SUBOPT_0x62
                 ; 0000 0468         if(res < 0)
003cb1 f44a      	BRPL _0x111
                 ; 0000 0469         {
                 ; 0000 046A             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003cb2 ebed     +LDI R30 , LOW ( 2 * _0x0 + ( 2673 ) )
003cb3 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2673 ) )
003cb4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2673 ) )
003cb5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2673 ) )
                 	__POINTD1FN _0x0,2673
003cb6 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 046B             return -1;
003cb8 efef      	LDI  R30,LOW(65535)
003cb9 efff      	LDI  R31,HIGH(65535)
003cba c00b      	RJMP _0x20E009A
                 ; 0000 046C         }
                 ; 0000 046D     }
                 _0x111:
                 ; 0000 046E 
                 ; 0000 046F     if(count > 0){
                 _0x110:
003cbb 2400      	CLR  R0
003cbc 1602      	CP   R0,R18
003cbd 0603      	CPC  R0,R19
003cbe f434      	BRGE _0x112
                 ; 0000 0470         //isEventLogEmpty    = 0;
                 ; 0000 0471         printDebug("<eventSave> Event Log is not empty\r\n");
                +
003cbf eee2     +LDI R30 , LOW ( 2 * _0x0 + ( 2710 ) )
003cc0 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2710 ) )
003cc1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2710 ) )
003cc2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2710 ) )
                 	__POINTD1FN _0x0,2710
003cc3 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0472     }
                 ; 0000 0473 
                 ; 0000 0474     return count;
                 _0x112:
003cc5 01f9      	MOVW R30,R18
                 _0x20E009A:
003cc6 940e e0d5 	CALL __LOADLOCR6
003cc8 96ab      	ADIW R28,43
003cc9 5fde      	SUBI R29,-2
003cca 9508      	RET
                 ; 0000 0475 }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0478 {
                 _logReport:
                 ; 0000 0479     FIL                     file;
                 ; 0000 047A     int                     res;
                 ; 0000 047B     unsigned long int       index;
                 ; 0000 047C     unsigned long int       timestamp;
                 ; 0000 047D     unsigned int            channel;
                 ; 0000 047E     float                   value;
                 ; 0000 047F     unsigned char           id;
                 ; 0000 0480     unsigned char           status;
                 ; 0000 0481 
                 ; 0000 0482     // -- send data log if any exist -- //
                 ; 0000 0483     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
003ccb 97ac      	SBIW R28,44
003ccc 50d2      	SUBI R29,2
003ccd 940e e0ce 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
003ccf 91e0 14dd 	LDS  R30,_isDataLogEmpty
003cd1 30e0      	CPI  R30,0
003cd2 f421      	BRNE _0x114
003cd3 91a0 1426 	LDS  R26,_logDataWait
003cd5 30a0      	CPI  R26,LOW(0x0)
003cd6 f009      	BREQ _0x115
                 _0x114:
003cd7 c091      	RJMP _0x113
                 _0x115:
                 ; 0000 0484     {
                 ; 0000 0485         printDebug("<logReport> Check Data Log Exist\r\n");
                +
003cd8 e0e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2747 ) )
003cd9 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2747 ) )
003cda e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2747 ) )
003cdb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2747 ) )
                 	__POINTD1FN _0x0,2747
003cdc 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0486         res = LOG_openFile(&file,LOGFILE_DATA);
003cde 940e c30a 	CALL SUBOPT_0x6C
003ce0 940e c2ae 	CALL SUBOPT_0x5E
003ce2 018f      	MOVW R16,R30
                 ; 0000 0487         if(res < 0)
003ce3 2311      	TST  R17
003ce4 f44a      	BRPL _0x116
                 ; 0000 0488         {
                 ; 0000 0489             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
003ce5 e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003ce6 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003ce7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003ce8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003ce9 940e c2b9 	CALL SUBOPT_0x5F
003ceb 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 048A         }
                 ; 0000 048B         else
003ced c07b      	RJMP _0x117
                 _0x116:
                 ; 0000 048C         {
                 ; 0000 048D             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
003cee 940e c30a 	CALL SUBOPT_0x6C
003cf0 940e c29c 	CALL SUBOPT_0x5A
003cf2 b7ed      	IN   R30,SPL
003cf3 b7fe      	IN   R31,SPH
003cf4 9731      	SBIW R30,1
003cf5 93fa      	ST   -Y,R31
003cf6 93ea      	ST   -Y,R30
003cf7 933f      	PUSH R19
003cf8 932f      	PUSH R18
003cf9 940e c29c 	CALL SUBOPT_0x5A
003cfb 01de      	MOVW R26,R28
003cfc 9656      	ADIW R26,22
003cfd 940e 8286 	CALL _LOG_readData
003cff 912f      	POP  R18
003d00 913f      	POP  R19
003d01 018f      	MOVW R16,R30
                 ; 0000 048E             if(res < 0)
003d02 2311      	TST  R17
003d03 f44a      	BRPL _0x118
                 ; 0000 048F             {
                 ; 0000 0490                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
003d04 e5e0     +LDI R30 , LOW ( 2 * _0x0 + ( 2820 ) )
003d05 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2820 ) )
003d06 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2820 ) )
003d07 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2820 ) )
                 	__POINTD1FN _0x0,2820
003d08 940e c2b9 	CALL SUBOPT_0x5F
003d0a 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 0491             }
                 ; 0000 0492             else if(res == 0)
003d0c c053      	RJMP _0x119
                 _0x118:
003d0d 2e00      	MOV  R0,R16
003d0e 2a01      	OR   R0,R17
003d0f f439      	BRNE _0x11A
                 ; 0000 0493             {
                 ; 0000 0494                 //isDataLogEmpty      = 1;
                 ; 0000 0495                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
003d10 e7e6     +LDI R30 , LOW ( 2 * _0x0 + ( 2858 ) )
003d11 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2858 ) )
003d12 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2858 ) )
003d13 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2858 ) )
                 	__POINTD1FN _0x0,2858
003d14 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 0496             }
                 ; 0000 0497             else
003d16 c049      	RJMP _0x11B
                 _0x11A:
                 ; 0000 0498             {
                 ; 0000 0499                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003d17 940e c30f 	CALL SUBOPT_0x6D
003d19 f039      	BREQ _0x11D
003d1a 940e c26a 	CALL SUBOPT_0x53
003d1c f021      	BREQ _0x11D
                +
003d1d 3025     +CPI R18 , LOW ( 5 )
003d1e e0e0     +LDI R30 , HIGH ( 5 )
003d1f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003d20 f048      	BRLO _0x11C
                 _0x11D:
                 ; 0000 049A                 {
                 ; 0000 049B                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
003d21 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003d22 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003d23 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003d24 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003d25 940e c2b9 	CALL SUBOPT_0x5F
003d27 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 049C                 }
                 ; 0000 049D                 else
003d29 c036      	RJMP _0x11F
                 _0x11C:
                 ; 0000 049E                 {
                 ; 0000 049F                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003d2a ecec     +LDI R30 , LOW ( 2 * _0x0 + ( 2944 ) )
003d2b e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2944 ) )
003d2c e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2944 ) )
003d2d e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2944 ) )
                 	__POINTD1FN _0x0,2944
003d2e 940e c251 	CALL SUBOPT_0x50
003d30 01f9      	MOVW R30,R18
003d31 940e c191 	CALL SUBOPT_0x34
003d33 940e c25a 	CALL SUBOPT_0x51
                 ; 0000 04A0                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003d35 e0e1      	LDI  R30,LOW(1)
003d36 940e c26c 	CALL SUBOPT_0x54
003d38 933a      	ST   -Y,R19
003d39 932a      	ST   -Y,R18
003d3a 940e c274 	CALL SUBOPT_0x55
003d3c 018f      	MOVW R16,R30
                 ; 0000 04A1                     if(res < 0)
003d3d 2311      	TST  R17
003d3e f44a      	BRPL _0x120
                 ; 0000 04A2                     {
                 ; 0000 04A3                         logDataWait.frameID    = 0;
003d3f 940e c313 	CALL SUBOPT_0x6E
                 ; 0000 04A4                         logDataWait.logID      = 0;
                 ; 0000 04A5                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003d41 e0e3     +LDI R30 , LOW ( 2 * _0x0 + ( 2999 ) )
003d42 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 2999 ) )
003d43 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2999 ) )
003d44 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2999 ) )
                 	__POINTD1FN _0x0,2999
003d45 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 04A6                     }
                 ; 0000 04A7                     else
003d47 c018      	RJMP _0x121
                 _0x120:
                 ; 0000 04A8                     {
                 ; 0000 04A9                         logDataWait.logID       = index;
003d48 940e c2be 	CALL SUBOPT_0x60
                +
003d4a 93e0 1427+STS _logDataWait + ( 1 ) , R30
003d4c 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003d4e 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003d50 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 04AA                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003d52 e3e0     +LDI R30 , LOW ( 2 * _0x0 + ( 3044 ) )
003d53 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3044 ) )
003d54 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3044 ) )
003d55 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3044 ) )
                 	__POINTD1FN _0x0,3044
003d56 940e e05e 	CALL __PUTPARD1
003d58 91e0 1426 	LDS  R30,_logDataWait
003d5a 940e c2e0 	CALL SUBOPT_0x65
003d5c 940e c323 	CALL SUBOPT_0x6F
003d5e 940e c108 	CALL SUBOPT_0x21
                 ; 0000 04AB                     }
                 _0x121:
                 ; 0000 04AC                 }
                 _0x11F:
                 ; 0000 04AD             }
                 _0x11B:
                 _0x119:
                 ; 0000 04AE 
                 ; 0000 04AF             res = LOG_closeFile(&file);
003d60 940e c32c 	CALL SUBOPT_0x70
                 ; 0000 04B0             if(res < 0)
003d62 f432      	BRPL _0x122
                 ; 0000 04B1             {
                 ; 0000 04B2                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003d63 e6e9     +LDI R30 , LOW ( 2 * _0x0 + ( 3101 ) )
003d64 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3101 ) )
003d65 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3101 ) )
003d66 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3101 ) )
                 	__POINTD1FN _0x0,3101
003d67 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 04B3             }
                 ; 0000 04B4         }
                 _0x122:
                 _0x117:
                 ; 0000 04B5     }
                 ; 0000 04B6 
                 ; 0000 04B7     // -- send event log if any exist -- //
                 ; 0000 04B8     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0x113:
003d69 91e0 14de 	LDS  R30,_isEventLogEmpty
003d6b 30e0      	CPI  R30,0
003d6c f421      	BRNE _0x124
003d6d 91a0 142b 	LDS  R26,_logEventWait
003d6f 30a0      	CPI  R26,LOW(0x0)
003d70 f009      	BREQ _0x125
                 _0x124:
003d71 c08b      	RJMP _0x123
                 _0x125:
                 ; 0000 04B9     {
                 ; 0000 04BA         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003d72 e8ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3138 ) )
003d73 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3138 ) )
003d74 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3138 ) )
003d75 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3138 ) )
                 	__POINTD1FN _0x0,3138
003d76 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 04BB         res = LOG_openFile(&file,LOGFILE_EVENT);
003d78 940e c30a 	CALL SUBOPT_0x6C
003d7a 940e c2f5 	CALL SUBOPT_0x69
003d7c 018f      	MOVW R16,R30
                 ; 0000 04BC         if(res < 0)
003d7d 2311      	TST  R17
003d7e f42a      	BRPL _0x126
                 ; 0000 04BD         {
                 ; 0000 04BE             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003d7f e2ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003d80 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003d81 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003d82 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003d83 c071      	RJMP _0x13E
                 ; 0000 04BF         }
                 ; 0000 04C0         else
                 _0x126:
                 ; 0000 04C1         {
                 ; 0000 04C2             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003d84 940e c30a 	CALL SUBOPT_0x6C
003d86 940e c29c 	CALL SUBOPT_0x5A
003d88 b7ed      	IN   R30,SPL
003d89 b7fe      	IN   R31,SPH
003d8a 93fa      	ST   -Y,R31
003d8b 93ea      	ST   -Y,R30
003d8c 935f      	PUSH R21
003d8d b7ed      	IN   R30,SPL
003d8e b7fe      	IN   R31,SPH
003d8f 93fa      	ST   -Y,R31
003d90 93ea      	ST   -Y,R30
003d91 934f      	PUSH R20
003d92 01de      	MOVW R26,R28
003d93 9656      	ADIW R26,22
003d94 940e 83ad 	CALL _LOG_readEvent
003d96 914f      	POP  R20
003d97 915f      	POP  R21
003d98 018f      	MOVW R16,R30
                 ; 0000 04C3             if(res < 0)
003d99 2311      	TST  R17
003d9a f43a      	BRPL _0x128
                 ; 0000 04C4             {
                 ; 0000 04C5                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003d9b ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 3174 ) )
003d9c e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3174 ) )
003d9d e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3174 ) )
003d9e e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3174 ) )
                 	__POINTD1FN _0x0,3174
003d9f 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 04C6             }
                 ; 0000 04C7             else if(res == 0)
003da1 c04c      	RJMP _0x129
                 _0x128:
003da2 2e00      	MOV  R0,R16
003da3 2a01      	OR   R0,R17
003da4 f439      	BRNE _0x12A
                 ; 0000 04C8             {
                 ; 0000 04C9                 //isEventLogEmpty     = 1;
                 ; 0000 04CA                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003da5 ede7     +LDI R30 , LOW ( 2 * _0x0 + ( 3211 ) )
003da6 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3211 ) )
003da7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3211 ) )
003da8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3211 ) )
                 	__POINTD1FN _0x0,3211
003da9 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 04CB             }
                 ; 0000 04CC             else
003dab c042      	RJMP _0x12B
                 _0x12A:
                 ; 0000 04CD             {
                 ; 0000 04CE                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003dac 940e c30f 	CALL SUBOPT_0x6D
003dae f019      	BREQ _0x12D
003daf 940e c26a 	CALL SUBOPT_0x53
003db1 f449      	BRNE _0x12C
                 _0x12D:
                 ; 0000 04CF                 {
                 ; 0000 04D0                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003db2 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003db3 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003db4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003db5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003db6 940e c300 	CALL SUBOPT_0x6A
003db8 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 04D1                 }
                 ; 0000 04D2                 else
003dba c033      	RJMP _0x12F
                 _0x12C:
                 ; 0000 04D3                 {
                 ; 0000 04D4                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003dbb efef     +LDI R30 , LOW ( 2 * _0x0 + ( 3251 ) )
003dbc e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3251 ) )
003dbd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3251 ) )
003dbe e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3251 ) )
                 	__POINTD1FN _0x0,3251
003dbf 940e c251 	CALL SUBOPT_0x50
003dc1 940e c286 	CALL SUBOPT_0x58
                 ; 0000 04D5                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003dc3 e0e1      	LDI  R30,LOW(1)
003dc4 940e c26c 	CALL SUBOPT_0x54
003dc6 935a      	ST   -Y,R21
003dc7 2fa4      	MOV  R26,R20
003dc8 940e 53e3 	CALL _ETH_sendEventReportCmd
003dca 018f      	MOVW R16,R30
                 ; 0000 04D6                     if(res < 0)
003dcb 2311      	TST  R17
003dcc f44a      	BRPL _0x130
                 ; 0000 04D7                     {
                 ; 0000 04D8                         logEventWait.frameID    = 0;
003dcd 940e c339 	CALL SUBOPT_0x71
                 ; 0000 04D9                         logEventWait.logID      = 0;
                 ; 0000 04DA                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003dcf e3ee     +LDI R30 , LOW ( 2 * _0x0 + ( 3314 ) )
003dd0 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3314 ) )
003dd1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3314 ) )
003dd2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3314 ) )
                 	__POINTD1FN _0x0,3314
003dd3 940e c02f 	CALL SUBOPT_0x3
                 ; 0000 04DB                     }
                 ; 0000 04DC                     else
003dd5 c018      	RJMP _0x131
                 _0x130:
                 ; 0000 04DD                     {
                 ; 0000 04DE                         logEventWait.logID      = index;
003dd6 940e c2be 	CALL SUBOPT_0x60
                +
003dd8 93e0 142c+STS _logEventWait + ( 1 ) , R30
003dda 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003ddc 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003dde 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 04DF                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003de0 e6ec     +LDI R30 , LOW ( 2 * _0x0 + ( 3360 ) )
003de1 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3360 ) )
003de2 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3360 ) )
003de3 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3360 ) )
                 	__POINTD1FN _0x0,3360
003de4 940e e05e 	CALL __PUTPARD1
003de6 91e0 142b 	LDS  R30,_logEventWait
003de8 940e c2e0 	CALL SUBOPT_0x65
003dea 940e c349 	CALL SUBOPT_0x72
003dec 940e c108 	CALL SUBOPT_0x21
                 ; 0000 04E0                     }
                 _0x131:
                 ; 0000 04E1                 }
                 _0x12F:
                 ; 0000 04E2             }
                 _0x12B:
                 _0x129:
                 ; 0000 04E3 
                 ; 0000 04E4             res = LOG_closeFile(&file);
003dee 940e c32c 	CALL SUBOPT_0x70
                 ; 0000 04E5             if(res < 0)
003df0 f462      	BRPL _0x132
                 ; 0000 04E6             {
                 ; 0000 04E7                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003df1 eae6     +LDI R30 , LOW ( 2 * _0x0 + ( 3418 ) )
003df2 e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3418 ) )
003df3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3418 ) )
003df4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3418 ) )
                 	__POINTD1FN _0x0,3418
                 _0x13E:
003df5 940e e05e 	CALL __PUTPARD1
003df7 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
003df8 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
003df9 940e c191 	CALL SUBOPT_0x34
003dfb 940e c0a5 	CALL SUBOPT_0x12
                 ; 0000 04E8             }
                 ; 0000 04E9         }
                 _0x132:
                 ; 0000 04EA     }
                 ; 0000 04EB 
                 ; 0000 04EC     return 0;
                 _0x123:
003dfd e0e0      	LDI  R30,LOW(0)
003dfe e0f0      	LDI  R31,HIGH(0)
003dff 940e e0d5 	CALL __LOADLOCR6
003e01 96e2      	ADIW R28,50
003e02 5fde      	SUBI R29,-2
003e03 9508      	RET
                 ; 0000 04ED }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003e04 931a      	ST   -Y,R17
003e05 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003e06 e000     +LDI R16 , LOW ( 0 )
003e07 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003e08 e8e0      	LDI  R30,LOW(128)
003e09 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003e0b e0e0      	LDI  R30,LOW(0)
003e0c 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003e0e 940e 40f3 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003e10 b7e4      	IN   R30,0x34
003e11 ffe0      	SBRS R30,0
003e12 c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003e13 ecee     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003e14 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003e15 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003e16 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003e17 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003e19 b7e4      	IN   R30,0x34
003e1a 7fee      	ANDI R30,0xFE
003e1b bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003e1c b7e4      	IN   R30,0x34
003e1d ffe1      	SBRS R30,1
003e1e c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003e1f eee1     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003e20 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003e21 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003e22 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003e23 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003e25 b7e4      	IN   R30,0x34
003e26 7fed      	ANDI R30,0xFD
003e27 bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003e28 b7e4      	IN   R30,0x34
003e29 ffe2      	SBRS R30,2
003e2a c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003e2b efe4     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003e2c e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003e2d e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003e2e e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003e2f 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003e31 b7e4      	IN   R30,0x34
003e32 7feb      	ANDI R30,0xFB
003e33 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003e34 b7e4      	IN   R30,0x34
003e35 ffe3      	SBRS R30,3
003e36 c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003e37 e0e8     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003e38 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003e39 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003e3a e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003e3b 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003e3d b7e4      	IN   R30,0x34
003e3e 7fe7      	ANDI R30,0XF7
003e3f bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003e40 b7e4      	IN   R30,0x34
003e41 ffe4      	SBRS R30,4
003e42 c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003e43 e1eb     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003e44 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003e45 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003e46 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003e47 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003e49 b7e4      	IN   R30,0x34
003e4a 7eef      	ANDI R30,0xEF
003e4b bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003e4c 940e 4297 	CALL _init_io
                 ; 0001 0036     init_i2c();
003e4e d052      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003e4f d054      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003e50 940e 4488 	CALL _init_adc
                 ; 0001 0039     init_timer();
003e52 940e 41e4 	CALL _init_timer
                 ; 0001 003A     init_common();
003e54 d054      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003e55 940e c352 	CALL SUBOPT_0x73
003e57 940e 4271 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003e59 efa4      	LDI  R26,LOW(500)
003e5a e0b1      	LDI  R27,HIGH(500)
003e5b 940e dcff 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003e5d 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003e5e 940e 487d 	CALL _init_RTC
003e60 940e c355 	CALL SUBOPT_0x74
                 ; 0001 0043     init_oled();        delay_ms(100);
003e62 940e 7fb5 	CALL _init_oled
003e64 940e c355 	CALL SUBOPT_0x74
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003e66 940e 4429 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003e68 940e c359 	CALL SUBOPT_0x75
003e6a 940e 4271 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003e6c 940e c35c 	CALL SUBOPT_0x76
003e6e 940e 4271 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003e70 940e c35f 	CALL SUBOPT_0x77
003e72 940e 4271 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003e74 940e 52e1 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     playBeep();
003e76 d04a      	RCALL _playBeep
                 ; 0001 004D     showLedInitComplete();
003e77 d09c      	RCALL _showLedInitComplete
                 ; 0001 004E     showDebugInitComplete();
003e78 d04d      	RCALL _showDebugInitComplete
                 ; 0001 004F 
                 ; 0001 0050     if(SD_init() == 0)
003e79 940e 81a4 	CALL _SD_init
003e7b 9730      	SBIW R30,0
003e7c f459      	BRNE _0x2000A
                 ; 0001 0051     {
                 ; 0001 0052         if(LOG_init() < 0)
003e7d 940e 8588 	CALL _LOG_init
003e7f 23ff      	TST  R31
003e80 f432      	BRPL _0x2000B
                 ; 0001 0053         {
                 ; 0001 0054             // -- log status = error -- //
                 ; 0001 0055             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003e81 e2ea     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003e82 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003e83 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003e84 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003e85 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 0056         }
                 ; 0001 0057 
                 ; 0001 0058         // -- log status = ok -- //
                 ; 0001 0059     }
                 _0x2000B:
                 ; 0001 005A     else
003e87 c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005B     {
                 ; 0001 005C         // -- sd status = error -- //
                 ; 0001 005D         printDebug("<initial_system> SD_init() failed\r\n");
                +
003e88 e4ef     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003e89 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003e8a e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003e8b e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003e8c 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 005E     }
                 _0x2000C:
                 ; 0001 005F 
                 ; 0001 0060     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003e8e e0a8      	LDI  R26,LOW(8)
003e8f 940e 439e 	CALL _read_adc
003e91 e0ad      	LDI  R26,LOW(13)
003e92 e0b0      	LDI  R27,HIGH(13)
003e93 940e df54 	CALL __MULW12U
003e95 91a0 1430 	LDS  R26,_raw_rtc
003e97 91b0 1431 	LDS  R27,_raw_rtc+1
003e99 0fae      	ADD  R26,R30
003e9a 1fbf      	ADC  R27,R31
003e9b 940e a442 	CALL _srand
                 ; 0001 0061 
                 ; 0001 0062     // -------- Configuration Initialize ----------- //
                 ; 0001 0063 //    readConfig();
                 ; 0001 0064 //    initAlarm();        //delay_ms(100);
                 ; 0001 0065 //
                 ; 0001 0066 //    if(init_logfile() < 0){
                 ; 0001 0067 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0068 //        return -1;
                 ; 0001 0069 //    }
                 ; 0001 006A 
                 ; 0001 006B 
                 ; 0001 006C     return res;
003e9d 01f8      	MOVW R30,R16
003e9e 9109      	LD   R16,Y+
003e9f 9119      	LD   R17,Y+
003ea0 9508      	RET
                 ; 0001 006D }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0070 {
                 _init_i2c:
                 ; 0001 0071     // I2C Bus initialization
                 ; 0001 0072     i2c_init();
003ea1 940e dcae 	CALL _i2c_init
                 ; 0001 0073 }
003ea3 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0076 {
                 _init_spi:
                 ; 0001 0077     // SPI initialization
                 ; 0001 0078     // SPI Type: Master
                 ; 0001 0079     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007A     // SPI Clock Phase: Cycle Start
                 ; 0001 007B     // SPI Clock Polarity: Low
                 ; 0001 007C     // SPI Data Order: MSB First
                 ; 0001 007D     SPCR=0x50;
003ea4 e5e0      	LDI  R30,LOW(80)
003ea5 bdec      	OUT  0x2C,R30
                 ; 0001 007E     SPSR=0x00;
003ea6 e0e0      	LDI  R30,LOW(0)
003ea7 bded      	OUT  0x2D,R30
                 ; 0001 007F }
003ea8 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0082 {
                 _init_common:
                 ; 0001 0083     // External Interrupt(s) initialization
                 ; 0001 0084     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0085     EICRA=0x00;
003ea9 e0e0      	LDI  R30,LOW(0)
003eaa 93e0 0069 	STS  105,R30
                 ; 0001 0086     EICRB=0x00;
003eac 93e0 006a 	STS  106,R30
                 ; 0001 0087     EIMSK=0x00;
003eae bbed      	OUT  0x1D,R30
                 ; 0001 0088 
                 ; 0001 0089     PCMSK0=0x00;
003eaf 93e0 006b 	STS  107,R30
                 ; 0001 008A     PCMSK1=0x00;
003eb1 93e0 006c 	STS  108,R30
                 ; 0001 008B     PCMSK2=0x00;
003eb3 93e0 006d 	STS  109,R30
                 ; 0001 008C     PCICR=0x00;
003eb5 93e0 0068 	STS  104,R30
                 ; 0001 008D 
                 ; 0001 008E     // Analog Comparator initialization
                 ; 0001 008F     // Analog Comparator: Off
                 ; 0001 0090     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0091     ACSR=0x80;
003eb7 e8e0      	LDI  R30,LOW(128)
003eb8 bfe0      	OUT  0x30,R30
                 ; 0001 0092     ADCSRB=0x00;
003eb9 e0e0      	LDI  R30,LOW(0)
003eba 93e0 007b 	STS  123,R30
                 ; 0001 0093     DIDR1=0x00;
003ebc 93e0 007f 	STS  127,R30
                 ; 0001 0094 
                 ; 0001 0095     // TWI initialization
                 ; 0001 0096     // TWI disabled
                 ; 0001 0097     TWCR=0x00;
003ebe 93e0 00bc 	STS  188,R30
                 ; 0001 0098 }
003ec0 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009B {
                 _playBeep:
                 ; 0001 009C     BUZZER = 1;                                     // Buzzer ON Starting
003ec1 9a77      	SBI  0xE,7
                 ; 0001 009D     delay_ms(200);
003ec2 940e c196 	CALL SUBOPT_0x35
                 ; 0001 009E     BUZZER = 0;
003ec4 9877      	CBI  0xE,7
                 ; 0001 009F }
003ec5 9508      	RET
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A2 {
                 _showDebugInitComplete:
                 ; 0001 00A3     struct rtc_structure time;
                 ; 0001 00A4     struct prop_cnfg_st properties_config;
                 ; 0001 00A5 
                 ; 0001 00A6     printDebug("Initial Device Completed at - ");
003ec6 97ef      	SBIW R28,63
003ec7 97ef      	SBIW R28,63
003ec8 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003ec9 e7e3     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003eca e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003ecb e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003ecc e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003ecd 940e c02f 	CALL SUBOPT_0x3
                 ; 0001 00A7     RTC_getDateTime(&time,properties_config.timeZone);
003ecf 01fe      	MOVW R30,R28
003ed0 55ef      	SUBI R30,LOW(-(161))
003ed1 4fff      	SBCI R31,HIGH(-(161))
003ed2 93fa      	ST   -Y,R31
003ed3 93ea      	ST   -Y,R30
003ed4 01de      	MOVW R26,R28
003ed5 55ae      	SUBI R26,LOW(-162)
003ed6 4fbf      	SBCI R27,HIGH(-162)
003ed7 91ec      	LD   R30,X
003ed8 e0f0      	LDI  R31,0
003ed9 fde7      	SBRC R30,7
003eda efff      	SER  R31
003edb 01df      	MOVW R26,R30
003edc 940e 47ea 	CALL _RTC_getDateTime
                 ; 0001 00A8     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00A9             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003ede e9e2     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003edf e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003ee0 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003ee1 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003ee2 940e e05e 	CALL __PUTPARD1
                +
003ee4 01fe     +MOVW R30 , R28
003ee5 55eb     +SUBI R30 , LOW ( - 165 )
003ee6 4fff     +SBCI R31 , HIGH ( - 165 )
003ee7 9001     +LD R0 , Z +
003ee8 9011     +LD R1 , Z +
003ee9 9161     +LD R22 , Z +
003eea 8170     +LD R23 , Z
003eeb 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003eec 940e e05e 	CALL __PUTPARD1
003eee 01fe      	MOVW R30,R28
003eef 55e7      	SUBI R30,LOW(-(169))
003ef0 4fff      	SBCI R31,HIGH(-(169))
003ef1 9634      	ADIW R30,4
003ef2 940e c362 	CALL SUBOPT_0x78
003ef4 01fe      	MOVW R30,R28
003ef5 55e3      	SUBI R30,LOW(-(173))
003ef6 4fff      	SBCI R31,HIGH(-(173))
003ef7 9638      	ADIW R30,8
003ef8 940e c362 	CALL SUBOPT_0x78
003efa 01fe      	MOVW R30,R28
003efb 54ef      	SUBI R30,LOW(-(177))
003efc 4fff      	SBCI R31,HIGH(-(177))
003efd 963c      	ADIW R30,12
003efe 940e c362 	CALL SUBOPT_0x78
003f00 01fe      	MOVW R30,R28
003f01 54eb      	SUBI R30,LOW(-(181))
003f02 4fff      	SBCI R31,HIGH(-(181))
003f03 9670      	ADIW R30,16
003f04 940e c362 	CALL SUBOPT_0x78
003f06 01fe      	MOVW R30,R28
003f07 54e7      	SUBI R30,LOW(-(185))
003f08 4fff      	SBCI R31,HIGH(-(185))
003f09 9674      	ADIW R30,20
003f0a 940e c362 	CALL SUBOPT_0x78
003f0c e188      	LDI  R24,24
003f0d 940e 9de6 	CALL _printDebug
003f0f 966c      	ADIW R28,28
                 ; 0001 00AA }
003f10 96ef      	ADIW R28,63
003f11 96ef      	ADIW R28,63
003f12 96ed      	ADIW R28,61
003f13 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AD {
                 _showLedInitComplete:
                 ; 0001 00AE     LED_ON(BIT_LED_ALARM);
003f14 91e0 0102 	LDS  R30,258
003f16 7bef      	ANDI R30,0xBF
003f17 940e c368 	CALL SUBOPT_0x79
                 ; 0001 00AF     delay_ms(200);
                 ; 0001 00B0 
                 ; 0001 00B1     LED_ON(BIT_LED_LINK);
003f19 91e0 0102 	LDS  R30,258
003f1b 7def      	ANDI R30,0xDF
003f1c 940e c368 	CALL SUBOPT_0x79
                 ; 0001 00B2     delay_ms(200);
                 ; 0001 00B3 
                 ; 0001 00B4     LED_ON(BIT_LED_TEMP);
003f1e 91e0 0102 	LDS  R30,258
003f20 7eef      	ANDI R30,0xEF
003f21 940e c368 	CALL SUBOPT_0x79
                 ; 0001 00B5     delay_ms(200);
                 ; 0001 00B6 
                 ; 0001 00B7     LED_ON(BIT_LED_PWR);
003f23 91e0 0102 	LDS  R30,258
003f25 7fe7      	ANDI R30,0XF7
003f26 940e c368 	CALL SUBOPT_0x79
                 ; 0001 00B8     delay_ms(200);
                 ; 0001 00B9 
                 ; 0001 00BA     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003f28 91e0 0102 	LDS  R30,258
003f2a 67e8      	ORI  R30,LOW(0x78)
003f2b 940e c368 	CALL SUBOPT_0x79
                 ; 0001 00BB     delay_ms(200);
                 ; 0001 00BC 
                 ; 0001 00BD     LED_ON(BIT_LED_PWR);
003f2d 91e0 0102 	LDS  R30,258
003f2f 7fe7      	ANDI R30,0XF7
003f30 93e0 0102 	STS  258,R30
                 ; 0001 00BE     delay_ms(50);
003f32 940e c36b 	CALL SUBOPT_0x7A
                 ; 0001 00BF }
003f34 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
003f35 940e c36f 	CALL SUBOPT_0x7B
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
003f37 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
003f39 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003f3b 2fe1      	MOV  R30,R17
003f3c 71ec      	ANDI R30,LOW(0x1C)
003f3d f011      	BREQ PC+3
003f3e 940c 3fe9 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
003f40 91e0 1420 	LDS  R30,_ETH_current_mode
003f42 30e0      	CPI  R30,0
003f43 f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
003f44 eaa3      	LDI  R26,LOW(_rx_wr_index0)
003f45 e0bf      	LDI  R27,HIGH(_rx_wr_index0)
003f46 940e c383 	CALL SUBOPT_0x7C
003f48 9731      	SBIW R30,1
003f49 55e1      	SUBI R30,LOW(-_rx_buffer0)
003f4a 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003f4b 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
003f4c 91a0 0fa3 	LDS  R26,_rx_wr_index0
003f4e 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
003f50 3fa4      	CPI  R26,LOW(0x1F4)
003f51 e0e1      	LDI  R30,HIGH(0x1F4)
003f52 07be      	CPC  R27,R30
003f53 f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
003f54 e0e0      	LDI  R30,LOW(0)
003f55 93e0 0fa3 	STS  _rx_wr_index0,R30
003f57 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
003f59 eaa7      	LDI  R26,LOW(_rx_counter0)
003f5a e0bf      	LDI  R27,HIGH(_rx_counter0)
003f5b 940e c383 	CALL SUBOPT_0x7C
003f5d 3fe4      	CPI  R30,LOW(0x1F4)
003f5e e0a1      	LDI  R26,HIGH(0x1F4)
003f5f 07fa      	CPC  R31,R26
003f60 f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
003f61 e0e0      	LDI  R30,LOW(0)
003f62 93e0 0fa7 	STS  _rx_counter0,R30
003f64 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
003f66 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003f67 e0e3      	LDI  R30,LOW(3)
003f68 93ea      	ST   -Y,R30
                +
003f69 efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
003f6a e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
003f6b d154      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
003f6c e0e3      	LDI  R30,LOW(3)
003f6d 93ea      	ST   -Y,R30
                +
003f6e e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
003f6f e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
003f70 d14f      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003f71 e0e3      	LDI  R30,LOW(3)
003f72 93ea      	ST   -Y,R30
                +
003f73 e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
003f74 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
003f75 d14a      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
003f76 c072      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
003f77 2fa0      	MOV  R26,R16
003f78 d13d      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
003f79 940e c389 	CALL SUBOPT_0x7D
003f7b 34a5      	CPI  R26,LOW(0x145)
003f7c e0e1      	LDI  R30,HIGH(0x145)
003f7d 07be      	CPC  R27,R30
003f7e f411      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
003f7f 940e c38e 	CALL SUBOPT_0x7E
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
003f81 330c      	CPI  R16,60
003f82 f421      	BRNE _0x4000D
003f83 91a0 10f0 	LDS  R26,_config_start
003f85 30a0      	CPI  R26,LOW(0x0)
003f86 f009      	BREQ _0x4000E
                 _0x4000D:
003f87 c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
003f88 e0e1      	LDI  R30,LOW(1)
003f89 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
003f8b e0e0      	LDI  R30,LOW(0)
003f8c 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
003f8e 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
003f90 c058      	RJMP _0x4000F
                 _0x4000C:
003f91 300d      	CPI  R16,13
003f92 f461      	BRNE _0x40011
003f93 91a0 10f2 	LDS  R26,_config_end
003f95 30a0      	CPI  R26,LOW(0x0)
003f96 f441      	BRNE _0x40011
003f97 91a0 10f0 	LDS  R26,_config_start
003f99 30a1      	CPI  R26,LOW(0x1)
003f9a f421      	BRNE _0x40011
003f9b 91a0 10f3 	LDS  R26,_config_response
003f9d 30a0      	CPI  R26,LOW(0x0)
003f9e f409      	BRNE _0x40012
                 _0x40011:
003f9f c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
003fa0 e0ed      	LDI  R30,LOW(13)
003fa1 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
003fa3 c045      	RJMP _0x40013
                 _0x40010:
003fa4 300a      	CPI  R16,10
003fa5 f461      	BRNE _0x40015
003fa6 91a0 10f2 	LDS  R26,_config_end
003fa8 30ad      	CPI  R26,LOW(0xD)
003fa9 f441      	BRNE _0x40015
003faa 91a0 10f0 	LDS  R26,_config_start
003fac 30a1      	CPI  R26,LOW(0x1)
003fad f421      	BRNE _0x40015
003fae 91a0 10f3 	LDS  R26,_config_response
003fb0 30a0      	CPI  R26,LOW(0x0)
003fb1 f409      	BRNE _0x40016
                 _0x40015:
003fb2 c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
003fb3 e0ea      	LDI  R30,LOW(10)
003fb4 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
003fb6 e0e1      	LDI  R30,LOW(1)
003fb7 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
003fb9 c02f      	RJMP _0x40017
                 _0x40014:
003fba 3405      	CPI  R16,69
003fbb f441      	BRNE _0x40019
003fbc 91a0 10f0 	LDS  R26,_config_start
003fbe 30a1      	CPI  R26,LOW(0x1)
003fbf f421      	BRNE _0x40019
003fc0 91a0 10f3 	LDS  R26,_config_response
003fc2 30a0      	CPI  R26,LOW(0x0)
003fc3 f009      	BREQ _0x4001A
                 _0x40019:
003fc4 c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
003fc5 e4e5      	LDI  R30,LOW(69)
003fc6 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
003fc8 c020      	RJMP _0x4001B
                 _0x40018:
003fc9 3503      	CPI  R16,83
003fca f441      	BRNE _0x4001D
003fcb 91a0 10f0 	LDS  R26,_config_start
003fcd 30a1      	CPI  R26,LOW(0x1)
003fce f421      	BRNE _0x4001D
003fcf 91a0 10f3 	LDS  R26,_config_response
003fd1 30a0      	CPI  R26,LOW(0x0)
003fd2 f009      	BREQ _0x4001E
                 _0x4001D:
003fd3 c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
003fd4 e5e3      	LDI  R30,LOW(83)
003fd5 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
003fd7 c011      	RJMP _0x4001F
                 _0x4001C:
003fd8 91a0 10f0 	LDS  R26,_config_start
003fda 30a1      	CPI  R26,LOW(0x1)
003fdb f421      	BRNE _0x40021
003fdc 91a0 10f3 	LDS  R26,_config_response
003fde 30a0      	CPI  R26,LOW(0x0)
003fdf f409      	BRNE _0x40022
                 _0x40021:
003fe0 c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
003fe1 eeae      	LDI  R26,LOW(_configLen)
003fe2 e1b0      	LDI  R27,HIGH(_configLen)
003fe3 940e c383 	CALL SUBOPT_0x7C
003fe5 9731      	SBIW R30,1
003fe6 55e7      	SUBI R30,LOW(-_configRd)
003fe7 4ff0      	SBCI R31,HIGH(-_configRd)
003fe8 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
003fe9 c0b8      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
003fea 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
003feb 91e0 00c0 	LDS  R30,192
003fed 72e0      	ANDI R30,LOW(0x20)
003fee f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
003fef 81e8      	LD   R30,Y
003ff0 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
003ff2 c0cb      	RJMP _0x20E0099
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
003ff3 940e c394 	CALL SUBOPT_0x7F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
003ff5 e020     +LDI R18 , LOW ( 0 )
003ff6 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
003ff7 91a0 0fa7 	LDS  R26,_rx_counter0
003ff9 91b0 0fa8 	LDS  R27,_rx_counter0+1
003ffb 940e e0b6 	CALL __CPW02
003ffd f010      	BRLO PC+3
003ffe 940c 4040 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
004000 eaa5      	LDI  R26,LOW(_rx_rd_index0)
004001 e0bf      	LDI  R27,HIGH(_rx_rd_index0)
004002 940e c383 	CALL SUBOPT_0x7C
004004 9731      	SBIW R30,1
004005 55e1      	SUBI R30,LOW(-_rx_buffer0)
004006 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
004007 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
004008 91a0 0fa5 	LDS  R26,_rx_rd_index0
00400a 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
00400c 3fa4      	CPI  R26,LOW(0x1F4)
00400d e0e1      	LDI  R30,HIGH(0x1F4)
00400e 07be      	CPC  R27,R30
00400f f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
004010 e0e0      	LDI  R30,LOW(0)
004011 93e0 0fa5 	STS  _rx_rd_index0,R30
004013 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
004015 91e0 00c1 	LDS  R30,193
004017 77ef      	ANDI R30,0x7F
004018 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
00401a eaa7      	LDI  R26,LOW(_rx_counter0)
00401b e0bf      	LDI  R27,HIGH(_rx_counter0)
00401c 91ed      	LD   R30,X+
00401d 91fd      	LD   R31,X+
00401e 9731      	SBIW R30,1
00401f 93fe      	ST   -X,R31
004020 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
004021 91e0 00c1 	LDS  R30,193
004023 68e0      	ORI  R30,0x80
004024 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
004026 940e c399 	CALL SUBOPT_0x80
004028 93fa      	ST   -Y,R31
004029 93ea      	ST   -Y,R30
00402a b7ed      	IN   R30,SPL
00402b b7fe      	IN   R31,SPH
00402c 93fa      	ST   -Y,R31
00402d 93ea      	ST   -Y,R30
00402e 931f      	PUSH R17
00402f 940e c359 	CALL SUBOPT_0x75
004031 940e a53b 	CALL _memcpy
004033 911f      	POP  R17
                 ; 0002 0092         len++;
                +
004034 5f2f     +SUBI R18 , LOW ( - 1 )
004035 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
004036 81ee      	LDD  R30,Y+6
004037 81ff      	LDD  R31,Y+6+1
004038 17e2      	CP   R30,R18
004039 07f3      	CPC  R31,R19
00403a f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
00403b 81ac      	LDD  R26,Y+4
00403c 81bd      	LDD  R27,Y+4+1
00403d 940e dcff 	CALL _delay_ms
                 ; 0002 0098     }
00403f cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
004040 01f9      	MOVW R30,R18
004041 940e e0d7 	CALL __LOADLOCR4
004043 c145      	RJMP _0x20E0098
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
004044 940e c3a0 	CALL SUBOPT_0x81
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
004046 e000     +LDI R16 , LOW ( 0 )
004047 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
004048 940e c3a5 	CALL SUBOPT_0x82
00404a f43c      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
00404b 940e c3aa 	CALL SUBOPT_0x83
00404d 91ac      	LD   R26,X
00404e df9b      	RCALL _putchar0
                 ; 0002 00A1     }
                +
00404f 5f0f     +SUBI R16 , LOW ( - 1 )
004050 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004051 cff6      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
004052 01f8      	MOVW R30,R16
004053 8119      	LDD  R17,Y+1
004054 8108      	LDD  R16,Y+0
004055 9626      	ADIW R28,6
004056 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
004057 93ea      	ST   -Y,R30
004058 b7ef      	IN   R30,SREG
004059 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
00405a 931a      	ST   -Y,R17
00405b 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
00405c 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
00405e 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
004060 2fe1      	MOV  R30,R17
004061 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
004062 c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
004063 93ea      	ST   -Y,R30
004064 b7ef      	IN   R30,SREG
004065 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
004066 931a      	ST   -Y,R17
004067 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
004068 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
00406a 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
00406c 2fe1      	MOV  R30,R17
00406d 71ec      	ANDI R30,LOW(0x1C)
00406e f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
00406f 340b      	CPI  R16,75
004070 f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
004071 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
004072 9109      	LD   R16,Y+
004073 9119      	LD   R17,Y+
004074 91e9      	LD   R30,Y+
004075 bfef      	OUT  SREG,R30
004076 91e9      	LD   R30,Y+
004077 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
004078 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
004079 91e0 00d0 	LDS  R30,208
00407b 72e0      	ANDI R30,LOW(0x20)
00407c f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
00407d 81e8      	LD   R30,Y
00407e 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
004080 c03d      	RJMP _0x20E0099
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
004081 940e c36f 	CALL SUBOPT_0x7B
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
004083 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
004085 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
004087 2fe1      	MOV  R30,R17
004088 71ec      	ANDI R30,LOW(0x1C)
004089 f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
00408a 2fa0      	MOV  R26,R16
00408b d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
00408c 3204      	CPI  R16,36
00408d f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
00408e 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
00408f 2de5      	MOV  R30,R5
004090 9453      	INC  R5
004091 e0f0      	LDI  R31,0
004092 59e1      	SUBI R30,LOW(-_rxPackage3)
004093 4ff2      	SBCI R31,HIGH(-_rxPackage3)
004094 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
004095 e4e0      	LDI  R30,LOW(64)
004096 165e      	CP   R5,R30
004097 f008      	BRLO _0x4003E
004098 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
004099 3203      	CPI  R16,35
00409a f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
00409b 2de5      	MOV  R30,R5
00409c 50e1      	SUBI R30,LOW(1)
00409d 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
00409e 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
00409f e0e1      	LDI  R30,LOW(1)
0040a0 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
0040a2 9109      	LD   R16,Y+
0040a3 9119      	LD   R17,Y+
0040a4 91e9      	LD   R30,Y+
0040a5 bfef      	OUT  SREG,R30
0040a6 91e9      	LD   R30,Y+
0040a7 bfec      	OUT  EIND,R30
0040a8 91e9      	LD   R30,Y+
0040a9 bfeb      	OUT  RAMPZ,R30
0040aa 91f9      	LD   R31,Y+
0040ab 91e9      	LD   R30,Y+
0040ac 91b9      	LD   R27,Y+
0040ad 91a9      	LD   R26,Y+
0040ae 9199      	LD   R25,Y+
0040af 9189      	LD   R24,Y+
0040b0 9179      	LD   R23,Y+
0040b1 9169      	LD   R22,Y+
0040b2 90f9      	LD   R15,Y+
0040b3 9019      	LD   R1,Y+
0040b4 9009      	LD   R0,Y+
0040b5 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
0040b6 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
0040b7 91e0 0130 	LDS  R30,304
0040b9 72e0      	ANDI R30,LOW(0x20)
0040ba f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
0040bb 81e8      	LD   R30,Y
0040bc 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E0099:
0040be 9621      	ADIW R28,1
0040bf 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
0040c0 93ba      	ST   -Y,R27
0040c1 93aa      	ST   -Y,R26
0040c2 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
0040c3 e010      	LDI  R17,0
0040c4 81eb      	LDD  R30,Y+3
0040c5 940e c14e 	CALL SUBOPT_0x2B
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
0040c7 f429      	BRNE _0x40046
0040c8 81a9      	LDD  R26,Y+1
0040c9 81ba      	LDD  R27,Y+1+1
0040ca 940e bbf9 	CALL _puts
                 ; 0002 0100                 break;
0040cc c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
0040cd 30e1      	CPI  R30,LOW(0x1)
0040ce e0a0      	LDI  R26,HIGH(0x1)
0040cf 07fa      	CPC  R31,R26
0040d0 f431      	BRNE _0x40047
                 _0x40048:
0040d1 940e c3b0 	CALL SUBOPT_0x84
0040d3 f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
0040d4 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
0040d5 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
0040d6 c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
0040d7 30e2      	CPI  R30,LOW(0x2)
0040d8 e0a0      	LDI  R26,HIGH(0x2)
0040d9 07fa      	CPC  R31,R26
0040da f449      	BRNE _0x4004B
                 _0x4004C:
0040db 940e c3b0 	CALL SUBOPT_0x84
0040dd f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
0040de 940e c3b8 	CALL SUBOPT_0x85
0040e0 df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
0040e1 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
0040e2 cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
0040e3 c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
0040e4 30e3      	CPI  R30,LOW(0x3)
0040e5 e0a0      	LDI  R26,HIGH(0x3)
0040e6 07fa      	CPC  R31,R26
0040e7 f441      	BRNE _0x40045
                 _0x40050:
0040e8 940e c3b0 	CALL SUBOPT_0x84
0040ea f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
0040eb 940e c3b8 	CALL SUBOPT_0x85
0040ed dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
0040ee 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
0040ef cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
0040f0 8118      	LDD  R17,Y+0
0040f1 940c 4427 	JMP  _0x20E0096
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
0040f3 e0e0      	LDI  R30,LOW(0)
0040f4 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
0040f6 e9e8      	LDI  R30,LOW(152)
0040f7 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
0040f9 e0e6      	LDI  R30,LOW(6)
0040fa 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
0040fc e0e0      	LDI  R30,LOW(0)
0040fd 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
0040ff e3e3      	LDI  R30,LOW(51)
004100 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
004102 e0e0      	LDI  R30,LOW(0)
004103 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
004105 e9e8      	LDI  R30,LOW(152)
004106 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
004108 e0e6      	LDI  R30,LOW(6)
004109 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
00410b e0e0      	LDI  R30,LOW(0)
00410c 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
00410e e0ec      	LDI  R30,LOW(12)
00410f 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
004111 e0e0      	LDI  R30,LOW(0)
004112 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
004114 e9e8      	LDI  R30,LOW(152)
004115 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
004117 e0e6      	LDI  R30,LOW(6)
004118 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
00411a e0e0      	LDI  R30,LOW(0)
00411b 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
00411d e0ec      	LDI  R30,LOW(12)
00411e 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
004120 e0e0      	LDI  R30,LOW(0)
004121 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
004123 e9e8      	LDI  R30,LOW(152)
004124 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
004126 e0e6      	LDI  R30,LOW(6)
004127 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
004129 e0e0      	LDI  R30,LOW(0)
00412a 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
00412c e0ec      	LDI  R30,LOW(12)
00412d 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
00412f 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
004130 940e c3bf 	CALL SUBOPT_0x86
                 ;	keeper -> Y+0
004132 f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
004133 efef      	LDI  R30,LOW(65535)
004134 efff      	LDI  R31,HIGH(65535)
004135 940c 4427 	JMP  _0x20E0096
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
004137 940e c3c6 	CALL SUBOPT_0x87
004139 940e c3c9 	CALL SUBOPT_0x88
00413b 940e e0c9 	CALL __CPD21
00413d f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
00413e e0e0      	LDI  R30,LOW(0)
00413f e0f0      	LDI  R31,HIGH(0)
004140 940c 4427 	JMP  _0x20E0096
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
004142 e0e1      	LDI  R30,LOW(1)
004143 e0f0      	LDI  R31,HIGH(1)
004144 940c 4427 	JMP  _0x20E0096
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
004146 940e e063 	CALL __PUTPARD2
004148 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
004149 940e c3d2 	CALL SUBOPT_0x89
00414b 940e e0b2 	CALL __CPD10
00414d f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
00414e e0e4     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
00414f e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
004150 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
004151 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
004152 940e c02f 	CALL SUBOPT_0x3
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
004154 85a8      	LDD  R26,Y+8
004155 85b9      	LDD  R27,Y+8+1
004156 940e c124 	CALL SUBOPT_0x25
004158 940e e039 	CALL __PUTDP1
                 ; 0003 0030         return -1;
00415a efef      	LDI  R30,LOW(65535)
00415b efff      	LDI  R31,HIGH(65535)
00415c c02c      	RJMP _0x20E0098
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
00415d 940e c3d2 	CALL SUBOPT_0x89
00415f 940e c3c9 	CALL SUBOPT_0x88
004161 940e c3d7 	CALL SUBOPT_0x8A
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
004163 940e c3c6 	CALL SUBOPT_0x87
004165 85a8      	LDD  R26,Y+8
004166 85b9      	LDD  R27,Y+8+1
004167 940e e039 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
004169 940e c3dc 	CALL SUBOPT_0x8B
00416b 940e c3e5 	CALL SUBOPT_0x8C
00416d 940e e0c4 	CALL __CPD12
00416f f0b8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
004170 e2e7     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
004171 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
004172 e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
004173 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
004174 940e e05e 	CALL __PUTPARD1
004176 940e c3dc 	CALL SUBOPT_0x8B
004178 940e c3e8 	CALL SUBOPT_0x8D
00417a 940e c3e8 	CALL SUBOPT_0x8D
00417c 940e e05e 	CALL __PUTPARD1
00417e 940e c2e6 	CALL SUBOPT_0x66
                 ; 0003 0039         *keeper = 0;
004180 85a8      	LDD  R26,Y+8
004181 85b9      	LDD  R27,Y+8+1
004182 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0003 003A         return -1;
004184 efef      	LDI  R30,LOW(65535)
004185 efff      	LDI  R31,HIGH(65535)
004186 c002      	RJMP _0x20E0098
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
004187 e0e0      	LDI  R30,LOW(0)
004188 e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0098:
004189 962a      	ADIW R28,10
00418a 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
00418b 940e c3f6 	CALL SUBOPT_0x8F
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
00418d e6ea     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
00418e e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
00418f e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
004190 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
004191 940e c02f 	CALL SUBOPT_0x3
                 ; 0003 004B     return;
004193 c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
004194 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
004195 e6e4      	LDI  R30,LOW(100)
004196 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
004197 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
004198 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
004199 940e c408 	CALL SUBOPT_0x90
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
00419b c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
00419c 940e c3f6 	CALL SUBOPT_0x8F
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
00419e ebe2      	LDI  R30,LOW(178)
00419f 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
0041a1 940e aa87 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
0041a3 91e9      	LD   R30,Y+
0041a4 bfef      	OUT  SREG,R30
0041a5 91e9      	LD   R30,Y+
0041a6 bfec      	OUT  EIND,R30
0041a7 91e9      	LD   R30,Y+
0041a8 bfeb      	OUT  RAMPZ,R30
0041a9 91f9      	LD   R31,Y+
0041aa 91e9      	LD   R30,Y+
0041ab 91b9      	LD   R27,Y+
0041ac 91a9      	LD   R26,Y+
0041ad 9199      	LD   R25,Y+
0041ae 9189      	LD   R24,Y+
0041af 9179      	LD   R23,Y+
0041b0 9169      	LD   R22,Y+
0041b1 90f9      	LD   R15,Y+
0041b2 9019      	LD   R1,Y+
0041b3 9009      	LD   R0,Y+
0041b4 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
0041b5 936a      	ST   -Y,R22
0041b6 937a      	ST   -Y,R23
0041b7 93aa      	ST   -Y,R26
0041b8 93ba      	ST   -Y,R27
0041b9 93ea      	ST   -Y,R30
0041ba 93fa      	ST   -Y,R31
0041bb b7ef      	IN   R30,SREG
0041bc 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
0041bd 940e c40f 	CALL SUBOPT_0x91
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
0041bf 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
0041c0 e7a7      	LDI  R26,LOW(_baseCounter)
0041c1 e1b3      	LDI  R27,HIGH(_baseCounter)
0041c2 940e c416 	CALL SUBOPT_0x92
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
0041c4 e3a0      	LDI  R26,LOW(_raw_rtc)
0041c5 e1b4      	LDI  R27,HIGH(_raw_rtc)
0041c6 940e c416 	CALL SUBOPT_0x92
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
0041c8 91e9      	LD   R30,Y+
0041c9 bfef      	OUT  SREG,R30
0041ca 91f9      	LD   R31,Y+
0041cb 91e9      	LD   R30,Y+
0041cc 91b9      	LD   R27,Y+
0041cd 91a9      	LD   R26,Y+
0041ce 9179      	LD   R23,Y+
0041cf 9169      	LD   R22,Y+
0041d0 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
0041d1 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
0041d2 940e c41f 	CALL SUBOPT_0x93
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
0041d4 9bf4      	SBIS 0x1E,4
0041d5 c002      	RJMP _0x6000D
0041d6 98f4      	CBI  0x1E,4
0041d7 c001      	RJMP _0x6000E
                 _0x6000D:
0041d8 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
0041d9 9bf3      	SBIS 0x1E,3
0041da c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
0041db 9bf4      	SBIS 0x1E,4
0041dc c002      	RJMP _0x60010
0041dd 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
0041de c001      	RJMP _0x60013
                 _0x60010:
0041df 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
0041e0 c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
0041e1 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
0041e2 91e9      	LD   R30,Y+
0041e3 9518      	RETI
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 0095 {
                 _init_timer:
                 ; 0003 0096 
                 ; 0003 0097     // Timer/Counter 0 initialization
                 ; 0003 0098     // Clock source: System Clock
                 ; 0003 0099     // Clock value: 7.813 kHz
                 ; 0003 009A     // Mode: Normal top=0xFF
                 ; 0003 009B     // OC0A output: Disconnected
                 ; 0003 009C     // OC0B output: Disconnected
                 ; 0003 009D     TCCR0A=0x00;
0041e4 e0e0      	LDI  R30,LOW(0)
0041e5 bde4      	OUT  0x24,R30
                 ; 0003 009E     TCCR0B=0x05;
0041e6 e0e5      	LDI  R30,LOW(5)
0041e7 bde5      	OUT  0x25,R30
                 ; 0003 009F     TCNT0=0x64;
0041e8 e6e4      	LDI  R30,LOW(100)
0041e9 bde6      	OUT  0x26,R30
                 ; 0003 00A0     OCR0A=0x00;
0041ea e0e0      	LDI  R30,LOW(0)
0041eb bde7      	OUT  0x27,R30
                 ; 0003 00A1     OCR0B=0x00;
0041ec bde8      	OUT  0x28,R30
                 ; 0003 00A2 
                 ; 0003 00A3     // Timer/Counter 1 initialization
                 ; 0003 00A4     // Clock source: System Clock
                 ; 0003 00A5     // Clock value: 7.813 kHz
                 ; 0003 00A6     // Mode: Normal top=0xFFFF
                 ; 0003 00A7     // OC1A output: Discon.
                 ; 0003 00A8     // OC1B output: Discon.
                 ; 0003 00A9     // OC1C output: Discon.
                 ; 0003 00AA     // Noise Canceler: Off
                 ; 0003 00AB     // Input Capture on Falling Edge
                 ; 0003 00AC     // Timer1 Overflow Interrupt: On
                 ; 0003 00AD     // Input Capture Interrupt: Off
                 ; 0003 00AE     // Compare A Match Interrupt: Off
                 ; 0003 00AF     // Compare B Match Interrupt: Off
                 ; 0003 00B0     // Compare C Match Interrupt: Off
                 ; 0003 00B1     TCCR1A=0x00;
0041ed 93e0 0080 	STS  128,R30
                 ; 0003 00B2     TCCR1B=0x05;
0041ef e0e5      	LDI  R30,LOW(5)
0041f0 93e0 0081 	STS  129,R30
                 ; 0003 00B3     //TCNT1H=0xFF;
                 ; 0003 00B4     //TCNT1L=0x64;
                 ; 0003 00B5     TCNT1H=0xFE;
0041f2 940e c408 	CALL SUBOPT_0x90
                 ; 0003 00B6     TCNT1L=0x79;
                 ; 0003 00B7     ICR1H=0x00;
0041f4 e0e0      	LDI  R30,LOW(0)
0041f5 93e0 0087 	STS  135,R30
                 ; 0003 00B8     ICR1L=0x00;
0041f7 93e0 0086 	STS  134,R30
                 ; 0003 00B9     OCR1AH=0x00;
0041f9 93e0 0089 	STS  137,R30
                 ; 0003 00BA     OCR1AL=0x00;
0041fb 93e0 0088 	STS  136,R30
                 ; 0003 00BB     OCR1BH=0x00;
0041fd 93e0 008b 	STS  139,R30
                 ; 0003 00BC     OCR1BL=0x00;
0041ff 93e0 008a 	STS  138,R30
                 ; 0003 00BD     OCR1CH=0x00;
004201 93e0 008d 	STS  141,R30
                 ; 0003 00BE     OCR1CL=0x00;
004203 93e0 008c 	STS  140,R30
                 ; 0003 00BF 
                 ; 0003 00C0     // Timer/Counter 2 initialization
                 ; 0003 00C1     // Clock source: System Clock
                 ; 0003 00C2     // Clock value: 7.813 kHz
                 ; 0003 00C3     // Mode: Normal top=0xFF
                 ; 0003 00C4     // OC2A output: Disconnected
                 ; 0003 00C5     // OC2B output: Disconnected
                 ; 0003 00C6     ASSR=0x00;
004205 93e0 00b6 	STS  182,R30
                 ; 0003 00C7     TCCR2A=0x00;
004207 93e0 00b0 	STS  176,R30
                 ; 0003 00C8     TCCR2B=0x07;
004209 e0e7      	LDI  R30,LOW(7)
00420a 93e0 00b1 	STS  177,R30
                 ; 0003 00C9     TCNT2=0xb2;
00420c ebe2      	LDI  R30,LOW(178)
00420d 93e0 00b2 	STS  178,R30
                 ; 0003 00CA     OCR2A=0x00;
00420f e0e0      	LDI  R30,LOW(0)
004210 93e0 00b3 	STS  179,R30
                 ; 0003 00CB     OCR2B=0x00;
004212 93e0 00b4 	STS  180,R30
                 ; 0003 00CC 
                 ; 0003 00CD     // Timer/Counter 3 initialization
                 ; 0003 00CE     // Clock source: System Clock
                 ; 0003 00CF     // Clock value: 31.250 kHz
                 ; 0003 00D0     // Mode: Normal top=0xFFFF
                 ; 0003 00D1     // OC3A output: Discon.
                 ; 0003 00D2     // OC3B output: Discon.
                 ; 0003 00D3     // OC3C output: Discon.
                 ; 0003 00D4     // Noise Canceler: Off
                 ; 0003 00D5     // Input Capture on Falling Edge
                 ; 0003 00D6     // Timer3 Overflow Interrupt: On
                 ; 0003 00D7     // Input Capture Interrupt: Off
                 ; 0003 00D8     // Compare A Match Interrupt: Off
                 ; 0003 00D9     // Compare B Match Interrupt: Off
                 ; 0003 00DA     // Compare C Match Interrupt: Off
                 ; 0003 00DB     TCCR3A=0x00;
004214 93e0 0090 	STS  144,R30
                 ; 0003 00DC     TCCR3B=0x04;
004216 e0e4      	LDI  R30,LOW(4)
004217 93e0 0091 	STS  145,R30
                 ; 0003 00DD     TCNT3H=0x85;
004219 940e c40f 	CALL SUBOPT_0x91
                 ; 0003 00DE     TCNT3L=0xED;
                 ; 0003 00DF     ICR3H=0x00;
00421b e0e0      	LDI  R30,LOW(0)
00421c 93e0 0097 	STS  151,R30
                 ; 0003 00E0     ICR3L=0x00;
00421e 93e0 0096 	STS  150,R30
                 ; 0003 00E1     OCR3AH=0x00;
004220 93e0 0099 	STS  153,R30
                 ; 0003 00E2     OCR3AL=0x00;
004222 93e0 0098 	STS  152,R30
                 ; 0003 00E3     OCR3BH=0x00;
004224 93e0 009b 	STS  155,R30
                 ; 0003 00E4     OCR3BL=0x00;
004226 93e0 009a 	STS  154,R30
                 ; 0003 00E5     OCR3CH=0x00;
004228 93e0 009d 	STS  157,R30
                 ; 0003 00E6     OCR3CL=0x00;
00422a 93e0 009c 	STS  156,R30
                 ; 0003 00E7 
                 ; 0003 00E8     // Timer/Counter 4 initialization
                 ; 0003 00E9     // Clock source: System Clock
                 ; 0003 00EA     // Clock value: 125.000 kHz
                 ; 0003 00EB     // Mode: Normal top=0xFFFF
                 ; 0003 00EC     // OC4A output: Discon.
                 ; 0003 00ED     // OC4B output: Discon.
                 ; 0003 00EE     // OC4C output: Discon.
                 ; 0003 00EF     // Noise Canceler: Off
                 ; 0003 00F0     // Input Capture on Falling Edge
                 ; 0003 00F1     // Timer4 Overflow Interrupt: On
                 ; 0003 00F2     // Input Capture Interrupt: Off
                 ; 0003 00F3     // Compare A Match Interrupt: Off
                 ; 0003 00F4     // Compare B Match Interrupt: Off
                 ; 0003 00F5     // Compare C Match Interrupt: Off
                 ; 0003 00F6     TCCR4A=0x00;
00422c 93e0 00a0 	STS  160,R30
                 ; 0003 00F7     TCCR4B=0x03;
00422e e0e3      	LDI  R30,LOW(3)
00422f 93e0 00a1 	STS  161,R30
                 ; 0003 00F8     TCNT4H=0x85;
004231 940e c41f 	CALL SUBOPT_0x93
                 ; 0003 00F9     TCNT4L=0xED;
                 ; 0003 00FA     ICR4H=0x00;
004233 e0e0      	LDI  R30,LOW(0)
004234 93e0 00a7 	STS  167,R30
                 ; 0003 00FB     ICR4L=0x00;
004236 93e0 00a6 	STS  166,R30
                 ; 0003 00FC     OCR4AH=0x00;
004238 93e0 00a9 	STS  169,R30
                 ; 0003 00FD     OCR4AL=0x00;
00423a 93e0 00a8 	STS  168,R30
                 ; 0003 00FE     OCR4BH=0x00;
00423c 93e0 00ab 	STS  171,R30
                 ; 0003 00FF     OCR4BL=0x00;
00423e 93e0 00aa 	STS  170,R30
                 ; 0003 0100     OCR4CH=0x00;
004240 93e0 00ad 	STS  173,R30
                 ; 0003 0101     OCR4CL=0x00;
004242 93e0 00ac 	STS  172,R30
                 ; 0003 0102 
                 ; 0003 0103     // Timer/Counter 5 initialization
                 ; 0003 0104     // Clock source: System Clock
                 ; 0003 0105     // Clock value: Timer5 Stopped
                 ; 0003 0106     // Mode: Normal top=0xFFFF
                 ; 0003 0107     // OC5A output: Discon.
                 ; 0003 0108     // OC5B output: Discon.
                 ; 0003 0109     // OC5C output: Discon.
                 ; 0003 010A     // Noise Canceler: Off
                 ; 0003 010B     // Input Capture on Falling Edge
                 ; 0003 010C     // Timer5 Overflow Interrupt: Off
                 ; 0003 010D     // Input Capture Interrupt: Off
                 ; 0003 010E     // Compare A Match Interrupt: Off
                 ; 0003 010F     // Compare B Match Interrupt: Off
                 ; 0003 0110     // Compare C Match Interrupt: Off
                 ; 0003 0111     TCCR5A=0x00;
004244 93e0 0120 	STS  288,R30
                 ; 0003 0112     TCCR5B=0x00;
004246 93e0 0121 	STS  289,R30
                 ; 0003 0113     TCNT5H=0x00;
004248 93e0 0125 	STS  293,R30
                 ; 0003 0114     TCNT5L=0x00;
00424a 93e0 0124 	STS  292,R30
                 ; 0003 0115     ICR5H=0x00;
00424c 93e0 0127 	STS  295,R30
                 ; 0003 0116     ICR5L=0x00;
00424e 93e0 0126 	STS  294,R30
                 ; 0003 0117     OCR5AH=0x00;
004250 93e0 0129 	STS  297,R30
                 ; 0003 0118     OCR5AL=0x00;
004252 93e0 0128 	STS  296,R30
                 ; 0003 0119     OCR5BH=0x00;
004254 93e0 012b 	STS  299,R30
                 ; 0003 011A     OCR5BL=0x00;
004256 93e0 012a 	STS  298,R30
                 ; 0003 011B     OCR5CH=0x00;
004258 93e0 012d 	STS  301,R30
                 ; 0003 011C     OCR5CL=0x00;
00425a 93e0 012c 	STS  300,R30
                 ; 0003 011D 
                 ; 0003 011E     // Watchdog Timer initialization
                 ; 0003 011F     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0120     // Watchdog Timer interrupt: On
                 ; 0003 0121     #pragma optsize-
                 ; 0003 0122     #asm("wdr")
00425c 95a8      	wdr
                 ; 0003 0123     WDTCSR=0x79;
00425d e7e9      	LDI  R30,LOW(121)
00425e 93e0 0060 	STS  96,R30
                 ; 0003 0124     WDTCSR=0x69;
004260 e6e9      	LDI  R30,LOW(105)
004261 93e0 0060 	STS  96,R30
                 ; 0003 0125 
                 ; 0003 0126     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 0127     #pragma optsize+
                 ; 0003 0128     #endif
                 ; 0003 0129 
                 ; 0003 012A 
                 ; 0003 012B     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 012C     TIMSK0=0x00;
004263 e0e0      	LDI  R30,LOW(0)
004264 93e0 006e 	STS  110,R30
                 ; 0003 012D 
                 ; 0003 012E     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 012F     TIMSK1=0x00;
004266 93e0 006f 	STS  111,R30
                 ; 0003 0130 
                 ; 0003 0131     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0132     TIMSK2=0x00;
004268 93e0 0070 	STS  112,R30
                 ; 0003 0133 
                 ; 0003 0134     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0135     TIMSK3=0x00;
00426a 93e0 0071 	STS  113,R30
                 ; 0003 0136 
                 ; 0003 0137     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0138     TIMSK4=0x00;
00426c 93e0 0072 	STS  114,R30
                 ; 0003 0139 
                 ; 0003 013A     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 013B     TIMSK5=0x00;
00426e 93e0 0073 	STS  115,R30
                 ; 0003 013C }
004270 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 013F {
                 _enable_interrupt:
                 ; 0003 0140 
                 ; 0003 0141     // -------------- enable timer ---------------  //
                 ; 0003 0142 
                 ; 0003 0143     switch(ch){
004271 940e c426 	CALL SUBOPT_0x94
                 ;	ch -> Y+0
                 ; 0003 0144         case 0: // Timer/Counter 0 Interrupt(s) initialization
004273 9730      	SBIW R30,0
004274 f0f9      	BREQ _0x6001B
                 ; 0003 0145                 //TIMSK0=0x01;
                 ; 0003 0146                 break;
                 ; 0003 0147         case 1: // Timer/Counter 1 Interrupt(s) initialization
004275 30e1      	CPI  R30,LOW(0x1)
004276 e0a0      	LDI  R26,HIGH(0x1)
004277 07fa      	CPC  R31,R26
004278 f421      	BRNE _0x6001D
                 ; 0003 0148                 TIMSK1=0x01;
004279 e0e1      	LDI  R30,LOW(1)
00427a 93e0 006f 	STS  111,R30
                 ; 0003 0149                 break;
00427c c017      	RJMP _0x6001B
                 ; 0003 014A         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
00427d 30e2      	CPI  R30,LOW(0x2)
00427e e0a0      	LDI  R26,HIGH(0x2)
00427f 07fa      	CPC  R31,R26
004280 f421      	BRNE _0x6001E
                 ; 0003 014B                 TIMSK2=0x01;
004281 e0e1      	LDI  R30,LOW(1)
004282 93e0 0070 	STS  112,R30
                 ; 0003 014C                 break;
004284 c00f      	RJMP _0x6001B
                 ; 0003 014D         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
004285 30e3      	CPI  R30,LOW(0x3)
004286 e0a0      	LDI  R26,HIGH(0x3)
004287 07fa      	CPC  R31,R26
004288 f421      	BRNE _0x6001F
                 ; 0003 014E                 TIMSK3=0x01;
004289 e0e1      	LDI  R30,LOW(1)
00428a 93e0 0071 	STS  113,R30
                 ; 0003 014F                 break;
00428c c007      	RJMP _0x6001B
                 ; 0003 0150         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
00428d 30e4      	CPI  R30,LOW(0x4)
00428e e0a0      	LDI  R26,HIGH(0x4)
00428f 07fa      	CPC  R31,R26
004290 f419      	BRNE _0x6001B
                 ; 0003 0151                 TIMSK4=0x01;
004291 e0e1      	LDI  R30,LOW(1)
004292 93e0 0072 	STS  114,R30
                 ; 0003 0152                 break;
                 ; 0003 0153     }
                 _0x6001B:
                 ; 0003 0154     // Global enable interrupts
                 ; 0003 0155     #asm("sei")
004294 9478      	sei
                 ; 0003 0156 }
004295 9622      	ADIW R28,2
004296 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0159 {
                 ; 0003 015A 
                 ; 0003 015B     // -------------- enable timer ---------------  //
                 ; 0003 015C 
                 ; 0003 015D     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 015E         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 015F                 //TIMSK0=0x00;
                 ; 0003 0160                 break;
                 ; 0003 0161         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0162                 TIMSK1=0x00;
                 ; 0003 0163                 break;
                 ; 0003 0164         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0165                 TIMSK2=0x00;
                 ; 0003 0166                 break;
                 ; 0003 0167         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0168                 TIMSK3=0x00;
                 ; 0003 0169                 break;
                 ; 0003 016A         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 016B                 TIMSK4=0x00;
                 ; 0003 016C                 break;
                 ; 0003 016D     }
                 ; 0003 016E     // Global enable interrupts
                 ; 0003 016F     #asm("sei")
                 ; 0003 0170 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
004297 e0e0      	LDI  R30,LOW(0)
004298 b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
004299 e0e4      	LDI  R30,LOW(4)
00429a b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
00429b efef      	LDI  R30,LOW(255)
00429c b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
00429d efe7      	LDI  R30,LOW(247)
00429e b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
00429f ece0      	LDI  R30,LOW(192)
0042a0 b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
0042a1 e0e0      	LDI  R30,LOW(0)
0042a2 b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
0042a3 e8e0      	LDI  R30,LOW(128)
0042a4 b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
0042a5 e0e0      	LDI  R30,LOW(0)
0042a6 b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
0042a7 efec      	LDI  R30,LOW(252)
0042a8 b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
0042a9 b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
0042aa e0e0      	LDI  R30,LOW(0)
0042ab bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
0042ac bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
0042ad e3e0      	LDI  R30,LOW(48)
0042ae bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
0042af bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
0042b0 efe8      	LDI  R30,LOW(248)
0042b1 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
0042b3 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
0042b5 e8e0      	LDI  R30,LOW(128)
0042b6 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
0042b8 e0e0      	LDI  R30,LOW(0)
0042b9 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0042bb 940e c15f 	CALL SUBOPT_0x2E
0042bd f021      	BREQ _0x80005
0042be 940e c15f 	CALL SUBOPT_0x2E
0042c0 30e3      	CPI  R30,LOW(0x3)
0042c1 f409      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054 
                 ; 0004 0055         //PORTK=0x90;
                 ; 0004 0056         //DDRK=0x0E;
                 ; 0004 0057 
                 ; 0004 0058         /*bongkot edit*/
                 ; 0004 0059         PORTK=0x80;
0042c2 c007      	RJMP _0x8003D
                 ; 0004 005A         DDRK=0x00;
                 ; 0004 005B     }
                 ; 0004 005C     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
0042c3 940e c42b 	CALL SUBOPT_0x95
0042c5 f021      	BREQ _0x80009
0042c6 940e c15f 	CALL SUBOPT_0x2E
0042c8 30e2      	CPI  R30,LOW(0x2)
0042c9 f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 005D         // Port K initialization
                 ; 0004 005E         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005F         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0060         PORTK=0x80;
                 _0x8003D:
0042ca e8e0      	LDI  R30,LOW(128)
0042cb 93e0 0108 	STS  264,R30
                 ; 0004 0061         DDRK=0x00;
0042cd e0e0      	LDI  R30,LOW(0)
0042ce 93e0 0107 	STS  263,R30
                 ; 0004 0062     }
                 ; 0004 0063 
                 ; 0004 0064     // Port L initialization
                 ; 0004 0065     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0066     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0067     PORTL=0x00;
                 _0x80008:
0042d0 e0e0      	LDI  R30,LOW(0)
0042d1 93e0 010b 	STS  267,R30
                 ; 0004 0068     DDRL=0x00;
0042d3 93e0 010a 	STS  266,R30
                 ; 0004 0069 
                 ; 0004 006A }
0042d5 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 006D {
                 _IO_dout:
                 ; 0004 006E     switch(ch){
0042d6 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
0042d7 81e9      	LDD  R30,Y+1
0042d8 81fa      	LDD  R31,Y+1+1
                 ; 0004 006F         case 0  :   DOUT1       =   !state;
0042d9 9730      	SBIW R30,0
0042da f451      	BRNE _0x8000E
0042db 81e8      	LD   R30,Y
0042dc 30e0      	CPI  R30,0
0042dd f011      	BREQ _0x8000F
0042de 9873      	CBI  0xE,3
0042df c001      	RJMP _0x80010
                 _0x8000F:
0042e0 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 0070                     d_out[0]    =   state;
0042e1 81e8      	LD   R30,Y
0042e2 93e0 1434 	STS  _d_out,R30
                 ; 0004 0071                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 0072                     break;
0042e4 c00d      	RJMP _0x8000D
                 ; 0004 0073         case 1  :   DOUT2       =   !state;
                 _0x8000E:
0042e5 30e1      	CPI  R30,LOW(0x1)
0042e6 e0a0      	LDI  R26,HIGH(0x1)
0042e7 07fa      	CPC  R31,R26
0042e8 f449      	BRNE _0x80014
0042e9 81e8      	LD   R30,Y
0042ea 30e0      	CPI  R30,0
0042eb f011      	BREQ _0x80012
0042ec 9874      	CBI  0xE,4
0042ed c001      	RJMP _0x80013
                 _0x80012:
0042ee 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 0074                     d_out[1]    =   state;
0042ef 81e8      	LD   R30,Y
                +
0042f0 93e0 1435+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0075                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0076                     break;
                 ; 0004 0077         default :   break;
                 _0x80014:
                 ; 0004 0078     }
                 _0x8000D:
                 ; 0004 0079 }
0042f2 9623      	ADIW R28,3
0042f3 9508      	RET
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 007C {
                 _IO_keyCheck:
                 ; 0004 007D     static char flag_hold_MODE   = 0;
                 ; 0004 007E     static char flag_hold_UP     = 0;
                 ; 0004 007F     static char flag_hold_DOWN   = 0;
                 ; 0004 0080     static char flag_hold_OK     = 0;
                 ; 0004 0081 
                 ; 0004 0082     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
0042f4 940e c438 	CALL SUBOPT_0x96
0042f6 f421      	BRNE _0x80016
0042f7 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
0042f9 30e0      	CPI  R30,0
0042fa f009      	BREQ _0x80017
                 _0x80016:
0042fb c00f      	RJMP _0x80015
                 _0x80017:
                 ; 0004 0083     {
                 ; 0004 0084         delay_ms(KEY_DELAY);
0042fc 940e c43f 	CALL SUBOPT_0x97
                 ; 0004 0085 
                 ; 0004 0086         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
0042fe 940e c438 	CALL SUBOPT_0x96
004300 f421      	BRNE _0x80019
004301 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004303 30e0      	CPI  R30,0
004304 f009      	BREQ _0x8001A
                 _0x80019:
004305 c004      	RJMP _0x80018
                 _0x8001A:
                 ; 0004 0087         {
                 ; 0004 0088             flag_hold_MODE = 1;
004306 e0e1      	LDI  R30,LOW(1)
004307 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0089             return 0;
004309 c092      	RJMP _0x20E0097
                 ; 0004 008A         }
                 ; 0004 008B     }
                 _0x80018:
                 ; 0004 008C     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
00430a c013      	RJMP _0x8001B
                 _0x80015:
00430b 940e c438 	CALL SUBOPT_0x96
00430d f021      	BREQ _0x8001D
00430e 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004310 30e0      	CPI  R30,0
004311 f409      	BRNE _0x8001E
                 _0x8001D:
004312 c00b      	RJMP _0x8001C
                 _0x8001E:
                 ; 0004 008D     {
                 ; 0004 008E         printDebug("<IO_keyCheck> key MODE\r\n");
                +
004313 e8ec     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
004314 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
004315 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 0 ) )
004316 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 0 ) )
                 	__POINTD1FN _0x80000,0
004317 940e c02f 	CALL SUBOPT_0x3
                 ; 0004 008F         flag_hold_MODE = 0;
004319 e0e0      	LDI  R30,LOW(0)
00431a 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0090         return KEY_MODE;
00431c e0e1      	LDI  R30,LOW(1)
00431d 9508      	RET
                 ; 0004 0091     }
                 ; 0004 0092 
                 ; 0004 0093     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 _0x8001C:
                 _0x8001B:
00431e 940e c443 	CALL SUBOPT_0x98
004320 f421      	BRNE _0x80020
004321 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
004323 30e0      	CPI  R30,0
004324 f009      	BREQ _0x80021
                 _0x80020:
004325 c00f      	RJMP _0x8001F
                 _0x80021:
                 ; 0004 0094     {
                 ; 0004 0095         delay_ms(KEY_DELAY);
004326 940e c43f 	CALL SUBOPT_0x97
                 ; 0004 0096 
                 ; 0004 0097         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
004328 940e c443 	CALL SUBOPT_0x98
00432a f421      	BRNE _0x80023
00432b 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
00432d 30e0      	CPI  R30,0
00432e f009      	BREQ _0x80024
                 _0x80023:
00432f c004      	RJMP _0x80022
                 _0x80024:
                 ; 0004 0098         {
                 ; 0004 0099             flag_hold_UP = 1;
004330 e0e1      	LDI  R30,LOW(1)
004331 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 009A             return 0;
004333 c068      	RJMP _0x20E0097
                 ; 0004 009B         }
                 ; 0004 009C     }
                 _0x80022:
                 ; 0004 009D     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
004334 c013      	RJMP _0x80025
                 _0x8001F:
004335 940e c443 	CALL SUBOPT_0x98
004337 f021      	BREQ _0x80027
004338 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
00433a 30e0      	CPI  R30,0
00433b f409      	BRNE _0x80028
                 _0x80027:
00433c c00b      	RJMP _0x80026
                 _0x80028:
                 ; 0004 009E     {
                 ; 0004 009F         printDebug("<IO_keyCheck> key UP\r\n");
                +
00433d eae5     +LDI R30 , LOW ( 2 * _0x80000 + ( 25 ) )
00433e e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 25 ) )
00433f e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 25 ) )
004340 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 25 ) )
                 	__POINTD1FN _0x80000,25
004341 940e c02f 	CALL SUBOPT_0x3
                 ; 0004 00A0         flag_hold_UP = 0;
004343 e0e0      	LDI  R30,LOW(0)
004344 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 00A1         return KEY_UP;
004346 e0e2      	LDI  R30,LOW(2)
004347 9508      	RET
                 ; 0004 00A2     }
                 ; 0004 00A3 
                 ; 0004 00A4     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 _0x80026:
                 _0x80025:
004348 940e c44c 	CALL SUBOPT_0x99
00434a f421      	BRNE _0x8002A
00434b 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
00434d 30e0      	CPI  R30,0
00434e f009      	BREQ _0x8002B
                 _0x8002A:
00434f c00f      	RJMP _0x80029
                 _0x8002B:
                 ; 0004 00A5     {
                 ; 0004 00A6         delay_ms(KEY_DELAY);
004350 940e c43f 	CALL SUBOPT_0x97
                 ; 0004 00A7 
                 ; 0004 00A8         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
004352 940e c44c 	CALL SUBOPT_0x99
004354 f421      	BRNE _0x8002D
004355 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004357 30e0      	CPI  R30,0
004358 f009      	BREQ _0x8002E
                 _0x8002D:
004359 c004      	RJMP _0x8002C
                 _0x8002E:
                 ; 0004 00A9         {
                 ; 0004 00AA             flag_hold_DOWN = 1;
00435a e0e1      	LDI  R30,LOW(1)
00435b 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00AB             return 0;
00435d c03e      	RJMP _0x20E0097
                 ; 0004 00AC         }
                 ; 0004 00AD     }
                 _0x8002C:
                 ; 0004 00AE     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
00435e c013      	RJMP _0x8002F
                 _0x80029:
00435f 940e c44c 	CALL SUBOPT_0x99
004361 f021      	BREQ _0x80031
004362 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004364 30e0      	CPI  R30,0
004365 f409      	BRNE _0x80032
                 _0x80031:
004366 c00b      	RJMP _0x80030
                 _0x80032:
                 ; 0004 00AF     {
                 ; 0004 00B0         printDebug("<IO_keyCheck> key DOWN\r\n");
                +
004367 ebec     +LDI R30 , LOW ( 2 * _0x80000 + ( 48 ) )
004368 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 48 ) )
004369 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 48 ) )
00436a e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 48 ) )
                 	__POINTD1FN _0x80000,48
00436b 940e c02f 	CALL SUBOPT_0x3
                 ; 0004 00B1         flag_hold_DOWN = 0;
00436d e0e0      	LDI  R30,LOW(0)
00436e 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00B2         return KEY_DOWN;
004370 e0e3      	LDI  R30,LOW(3)
004371 9508      	RET
                 ; 0004 00B3     }
                 ; 0004 00B4 
                 ; 0004 00B5     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 _0x80030:
                 _0x8002F:
004372 940e c455 	CALL SUBOPT_0x9A
004374 f421      	BRNE _0x80034
004375 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004377 30e0      	CPI  R30,0
004378 f009      	BREQ _0x80035
                 _0x80034:
004379 c00f      	RJMP _0x80033
                 _0x80035:
                 ; 0004 00B6     {
                 ; 0004 00B7         delay_ms(KEY_DELAY);
00437a 940e c43f 	CALL SUBOPT_0x97
                 ; 0004 00B8 
                 ; 0004 00B9         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
00437c 940e c455 	CALL SUBOPT_0x9A
00437e f421      	BRNE _0x80037
00437f 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
004381 30e0      	CPI  R30,0
004382 f009      	BREQ _0x80038
                 _0x80037:
004383 c004      	RJMP _0x80036
                 _0x80038:
                 ; 0004 00BA         {
                 ; 0004 00BB             flag_hold_OK = 1;
004384 e0e1      	LDI  R30,LOW(1)
004385 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00BC             return 0;
004387 c014      	RJMP _0x20E0097
                 ; 0004 00BD         }
                 ; 0004 00BE     }
                 _0x80036:
                 ; 0004 00BF     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
004388 c013      	RJMP _0x80039
                 _0x80033:
004389 940e c455 	CALL SUBOPT_0x9A
00438b f021      	BREQ _0x8003B
00438c 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
00438e 30e0      	CPI  R30,0
00438f f409      	BRNE _0x8003C
                 _0x8003B:
004390 c00b      	RJMP _0x8003A
                 _0x8003C:
                 ; 0004 00C0     {
                 ; 0004 00C1         printDebug("<IO_keyCheck> key OK\r\n");
                +
004391 ede5     +LDI R30 , LOW ( 2 * _0x80000 + ( 73 ) )
004392 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 73 ) )
004393 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 73 ) )
004394 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 73 ) )
                 	__POINTD1FN _0x80000,73
004395 940e c02f 	CALL SUBOPT_0x3
                 ; 0004 00C2         flag_hold_OK = 0;
004397 e0e0      	LDI  R30,LOW(0)
004398 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00C3         return KEY_OK;
00439a e0e4      	LDI  R30,LOW(4)
00439b 9508      	RET
                 ; 0004 00C4     }
                 ; 0004 00C5 
                 ; 0004 00C6     return 0;
                 _0x8003A:
                 _0x80039:
                 _0x20E0097:
00439c e0e0      	LDI  R30,LOW(0)
00439d 9508      	RET
                 ; 0004 00C7 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     char refADC;
                 ; 0005 0012     unsigned int adc_data = 0x0000;
                 ; 0005 0013      if(TEMP_SEL == TEMP_TYPE_K){
00439e 93aa      	ST   -Y,R26
00439f 940e e0d0 	CALL __SAVELOCR4
                 ;	adc_input -> Y+4
                 ;	refADC -> R17
                 ;	adc_data -> R18,R19
                +
0043a1 e020     +LDI R18 , LOW ( 0 )
0043a2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0043a3 940e c15f 	CALL SUBOPT_0x2E
0043a5 f411      	BRNE _0xA0003
                 ; 0005 0014           refADC = ADC_VREF3_3_TYPE;
0043a6 e410      	LDI  R17,LOW(64)
                 ; 0005 0015      }else if(TEMP_SEL == TEMP_TMEC){
0043a7 c005      	RJMP _0xA0004
                 _0xA0003:
0043a8 940e c15f 	CALL SUBOPT_0x2E
0043aa 30e1      	CPI  R30,LOW(0x1)
0043ab f409      	BRNE _0xA0005
                 ; 0005 0016           refADC = ADC_VREF_TYPE;
0043ac ec10      	LDI  R17,LOW(192)
                 ; 0005 0017      }
                 ; 0005 0018     //ADMUX  &= ADC_VREF_TYPE;
                 ; 0005 0019     ADMUX  &= refADC;
                 _0xA0005:
                 _0xA0004:
0043ad e7ac      	LDI  R26,LOW(124)
0043ae e0b0      	LDI  R27,HIGH(124)
0043af 91ec      	LD   R30,X
0043b0 23e1      	AND  R30,R17
0043b1 93ec      	ST   X,R30
                 ; 0005 001A     ADCSRB &= 0xf7;
0043b2 91e0 007b 	LDS  R30,123
0043b4 7fe7      	ANDI R30,0XF7
0043b5 93e0 007b 	STS  123,R30
                 ; 0005 001B 
                 ; 0005 001C    // ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
                 ; 0005 001D     ADMUX  |= (adc_input & 0x07) | (refADC & 0xff);
0043b7 2e1a      	MOV  R1,R26
0043b8 900c      	LD   R0,X
0043b9 81ec      	LDD  R30,Y+4
0043ba 70e7      	ANDI R30,LOW(0x7)
0043bb 2fae      	MOV  R26,R30
0043bc 2fe1      	MOV  R30,R17
0043bd 2bea      	OR   R30,R26
0043be 29e0      	OR   R30,R0
0043bf 2da1      	MOV  R26,R1
0043c0 93ec      	ST   X,R30
                 ; 0005 001E 
                 ; 0005 001F     if(adc_input > 7)
0043c1 81ac      	LDD  R26,Y+4
0043c2 30a8      	CPI  R26,LOW(0x8)
0043c3 f020      	BRLO _0xA0006
                 ; 0005 0020     {
                 ; 0005 0021         ADCSRB |= 0x08;
0043c4 91e0 007b 	LDS  R30,123
0043c6 60e8      	ORI  R30,8
0043c7 c003      	RJMP _0xA0023
                 ; 0005 0022     }
                 ; 0005 0023     else
                 _0xA0006:
                 ; 0005 0024     {
                 ; 0005 0025         ADCSRB &= 0xf7;
0043c8 91e0 007b 	LDS  R30,123
0043ca 7fe7      	ANDI R30,0XF7
                 _0xA0023:
0043cb 93e0 007b 	STS  123,R30
                 ; 0005 0026     }
                 ; 0005 0027 
                 ; 0005 0028     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0029     delay_us(20);
                +
0043cd e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
0043ce 958a     +DEC R24
0043cf f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0005 002A 
                 ; 0005 002B     // Start the AD conversion
                 ; 0005 002C     ADCSRA  |= 0x80; //ENABLE ADC
0043d0 91e0 007a 	LDS  R30,122
0043d2 68e0      	ORI  R30,0x80
0043d3 93e0 007a 	STS  122,R30
                 ; 0005 002D     ADCSRA  |= 0x40;
0043d5 91e0 007a 	LDS  R30,122
0043d7 64e0      	ORI  R30,0x40
0043d8 93e0 007a 	STS  122,R30
                 ; 0005 002E 
                 ; 0005 002F     // Wait for the AD conversion to complete
                 ; 0005 0030     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 0031     while ( (ADCSRA & 0x10)==0);
                 _0xA0008:
0043da 91e0 007a 	LDS  R30,122
0043dc 71e0      	ANDI R30,LOW(0x10)
0043dd f3e1      	BREQ _0xA0008
                 ; 0005 0032     adc_data = ADCL;
0043de 9120 0078 	LDS  R18,120
0043e0 2733      	CLR  R19
                 ; 0005 0033     adc_data |= (ADCH & 0x00ff) << 8;
0043e1 91e0 0079 	LDS  R30,121
0043e3 940e c45e 	CALL SUBOPT_0x9B
0043e5 2ffe      	MOV  R31,R30
0043e6 e0e0      	LDI  R30,0
                +
0043e7 2b2e     +OR R18 , R30
0043e8 2b3f     +OR R19 , R31
                 	__ORWRR 18,19,30,31
                 ; 0005 0034 
                 ; 0005 0035     ADCSRA  |=0x10;
0043e9 91e0 007a 	LDS  R30,122
0043eb 61e0      	ORI  R30,0x10
0043ec 93e0 007a 	STS  122,R30
                 ; 0005 0036 
                 ; 0005 0037     delay_us(50);
                +
0043ee e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
0043ef 958a     +DEC R24
0043f0 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
                 ; 0005 0038 
                 ; 0005 0039     return adc_data;
0043f1 01f9      	MOVW R30,R18
0043f2 940e e0d7 	CALL __LOADLOCR4
0043f4 9625      	ADIW R28,5
0043f5 9508      	RET
                 ; 0005 003A }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 003D {
                 ; 0005 003E     static int      i = 0;
                 ; 0005 003F     static char     batt_read_flag = 0;
                 ; 0005 0040 
                 ; 0005 0041     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 0042         /*
                 ; 0005 0043         printDebug("<%d>",i);
                 ; 0005 0044         SENSOR_SELECT(i);
                 ; 0005 0045         delay_ms(20);
                 ; 0005 0046         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0047         if(++i >= 5){   i = 0;  }
                 ; 0005 0048         */
                 ; 0005 0049     }
                 ; 0005 004A     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 004B //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 004C //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 004D //        }
                 ; 0005 004E     }
                 ; 0005 004F 
                 ; 0005 0050 //    if(++batt_read_flag > 25){
                 ; 0005 0051 //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 0052 //        batt_read_flag = 0;
                 ; 0005 0053 //    }
                 ; 0005 0054 
                 ; 0005 0055     return 0;
                 ; 0005 0056 }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 0059 {
                 _readBattery:
                 ; 0005 005A     float   vBATT;
                 ; 0005 005B 
                 ; 0005 005C     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
0043f6 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
0043f7 940e c461 	CALL SUBOPT_0x9C
                +
0043f9 e6e6     +LDI R30 , LOW ( 0x411E6666 )
0043fa e6f6     +LDI R31 , HIGH ( 0x411E6666 )
0043fb e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
0043fc e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
0043fd 940e ddff 	CALL __MULF12
0043ff 937f      	PUSH R23
004400 936f      	PUSH R22
004401 93ff      	PUSH R31
004402 93ef      	PUSH R30
004403 e0ae      	LDI  R26,LOW(14)
004404 df99      	RCALL _read_adc
004405 940e c46a 	CALL SUBOPT_0x9D
004407 940e c46f 	CALL SUBOPT_0x9E
004409 91af      	POP  R26
00440a 91bf      	POP  R27
00440b 918f      	POP  R24
00440c 919f      	POP  R25
00440d 940e c476 	CALL SUBOPT_0x9F
00440f 93e0 14e8 	STS  _adcBatt,R30
004411 93f0 14e9 	STS  _adcBatt+1,R31
004413 9360 14ea 	STS  _adcBatt+2,R22
004415 9370 14eb 	STS  _adcBatt+3,R23
                 ; 0005 005D 
                 ; 0005 005E     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
004417 940e c17d 	CALL SUBOPT_0x32
004419 940e c461 	CALL SUBOPT_0x9C
00441b 940e ddff 	CALL __MULF12
                +
00441d e6a6     +LDI R26 , LOW ( 0x3FE66666 )
00441e e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
00441f ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
004420 e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
004421 940e ddff 	CALL __MULF12
004423 940e c481 	CALL SUBOPT_0xA0
                 ; 0005 005F     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 0060 
                 ; 0005 0061     return vBATT;
004425 940e c3c6 	CALL SUBOPT_0x87
                 _0x20E0096:
004427 9624      	ADIW R28,4
004428 9508      	RET
                 ; 0005 0062 }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 0065 {
                 _adc_init_read:
                 ; 0005 0066     int i;
                 ; 0005 0067     printDebug("Initializing ADC.. ");
004429 931a      	ST   -Y,R17
00442a 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
00442b eeec     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
00442c e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
00442d e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
00442e e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
00442f 940e c02f 	CALL SUBOPT_0x3
                 ; 0005 0068 
                 ; 0005 0069     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
004431 940e c15f 	CALL SUBOPT_0x2E
004433 f021      	BREQ _0xA0013
004434 940e c15f 	CALL SUBOPT_0x2E
004436 30e3      	CPI  R30,LOW(0x3)
004437 f4e1      	BRNE _0xA0012
                 _0xA0013:
                 ; 0005 006A         for(i=0;i<5;i++){ \
                 ; 0005 006B             SENSOR_SELECT(i);
                +
004438 e000     +LDI R16 , LOW ( 0 )
004439 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0016:
                +
00443a 3005     +CPI R16 , LOW ( 5 )
00443b e0e0     +LDI R30 , HIGH ( 5 )
00443c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00443d f4ac      	BRGE _0xA0017
00443e 940e c484 	CALL SUBOPT_0xA1
004440 2fe0      	MOV  R30,R16
004441 940e c48e 	CALL SUBOPT_0xA2
                 ; 0005 006C             delay_ms(20);
                 ; 0005 006D             adcData[i] = read_adc(8);
004443 01f8      	MOVW R30,R16
004444 940e c178 	CALL SUBOPT_0x31
004446 0fea      	ADD  R30,R26
004447 1ffb      	ADC  R31,R27
004448 93ff      	PUSH R31
004449 93ef      	PUSH R30
00444a e0a8      	LDI  R26,LOW(8)
00444b df52      	RCALL _read_adc
00444c 91af      	POP  R26
00444d 91bf      	POP  R27
00444e 940e c496 	CALL SUBOPT_0xA3
                 ; 0005 006E         }
                +
004450 5f0f     +SUBI R16 , LOW ( - 1 )
004451 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004452 cfe7      	RJMP _0xA0016
                 _0xA0017:
                 ; 0005 006F     }
                 ; 0005 0070     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
004453 c025      	RJMP _0xA0018
                 _0xA0012:
004454 940e c42b 	CALL SUBOPT_0x95
004456 f021      	BREQ _0xA001A
004457 940e c15f 	CALL SUBOPT_0x2E
004459 30e2      	CPI  R30,LOW(0x2)
00445a f4f1      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0071         adcData[0] = read_adc(8);
00445b e0a8      	LDI  R26,LOW(8)
00445c df41      	RCALL _read_adc
00445d e3a6      	LDI  R26,LOW(_adcData)
00445e e1b4      	LDI  R27,HIGH(_adcData)
00445f 940e c496 	CALL SUBOPT_0xA3
                 ; 0005 0072         adcData[1] = read_adc(9);
004461 e0a9      	LDI  R26,LOW(9)
004462 df3b      	RCALL _read_adc
                +
004463 e3aa     +LDI R26 , LOW ( _adcData + ( 4 ) )
004464 e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
004465 940e c496 	CALL SUBOPT_0xA3
                 ; 0005 0073         adcData[2] = read_adc(10);
004467 e0aa      	LDI  R26,LOW(10)
004468 df35      	RCALL _read_adc
                +
004469 e3ae     +LDI R26 , LOW ( _adcData + ( 8 ) )
00446a e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
00446b 940e c496 	CALL SUBOPT_0xA3
                 ; 0005 0074         adcData[3] = read_adc(11);
00446d e0ab      	LDI  R26,LOW(11)
00446e df2f      	RCALL _read_adc
                +
00446f e4a2     +LDI R26 , LOW ( _adcData + ( 12 ) )
004470 e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
004471 940e c496 	CALL SUBOPT_0xA3
                 ; 0005 0075         adcData[4] = read_adc(12);
004473 e0ac      	LDI  R26,LOW(12)
004474 df29      	RCALL _read_adc
                +
004475 e4a6     +LDI R26 , LOW ( _adcData + ( 16 ) )
004476 e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
004477 940e c496 	CALL SUBOPT_0xA3
                 ; 0005 0076     }
                 ; 0005 0077 
                 ; 0005 0078     adcBatt = read_adc(14);
                 _0xA0019:
                 _0xA0018:
004479 e0ae      	LDI  R26,LOW(14)
00447a df23      	RCALL _read_adc
00447b eea8      	LDI  R26,LOW(_adcBatt)
00447c e1b4      	LDI  R27,HIGH(_adcBatt)
00447d 940e c496 	CALL SUBOPT_0xA3
                 ; 0005 0079 
                 ; 0005 007A     printDebug("OK\r\n");
                +
00447f e0e0     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
004480 e1f2     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
004481 e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
004482 e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
004483 940e c02f 	CALL SUBOPT_0x3
                 ; 0005 007B }
004485 9109      	LD   R16,Y+
004486 9119      	LD   R17,Y+
004487 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 007E {
                 _init_adc:
                 ; 0005 007F     char refADC;
                 ; 0005 0080     // ADC initialization
                 ; 0005 0081     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 0082     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 0083     // ADC Auto Trigger Source: Free Running
                 ; 0005 0084     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 0085     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 0086     DIDR0=0x00;
004488 931a      	ST   -Y,R17
                 ;	refADC -> R17
004489 e0e0      	LDI  R30,LOW(0)
00448a 93e0 007e 	STS  126,R30
                 ; 0005 0087 
                 ; 0005 0088 
                 ; 0005 0089     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00448c 940e c15f 	CALL SUBOPT_0x2E
00448e f021      	BREQ _0xA001D
00448f 940e c15f 	CALL SUBOPT_0x2E
004491 30e3      	CPI  R30,LOW(0x3)
004492 f441      	BRNE _0xA001C
                 _0xA001D:
                 ; 0005 008A         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 008B         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 008C         DIDR2=0x61;
004493 e6e1      	LDI  R30,LOW(97)
004494 93e0 007d 	STS  125,R30
                 ; 0005 008D 
                 ; 0005 008E         /*bongkot edit resigter*/
                 ; 0005 008F         DIDR2=0x7F;
004496 e7ef      	LDI  R30,LOW(127)
004497 93e0 007d 	STS  125,R30
                 ; 0005 0090         refADC = ADC_VREF3_3_TYPE;
004499 e410      	LDI  R17,LOW(64)
                 ; 0005 0091         //ADMUX   = 0x40;     //3.3v reference
                 ; 0005 0092     }
                 ; 0005 0093     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
00449a c00b      	RJMP _0xA001F
                 _0xA001C:
00449b 940e c42b 	CALL SUBOPT_0x95
00449d f021      	BREQ _0xA0021
00449e 940e c15f 	CALL SUBOPT_0x2E
0044a0 30e2      	CPI  R30,LOW(0x2)
0044a1 f421      	BRNE _0xA0020
                 _0xA0021:
                 ; 0005 0094         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0095         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0096         DIDR2=0x7F;
0044a2 e7ef      	LDI  R30,LOW(127)
0044a3 93e0 007d 	STS  125,R30
                 ; 0005 0097        // ADMUX   = ADC_VREF_TYPE;
                 ; 0005 0098         refADC = ADC_VREF_TYPE;
0044a5 ec10      	LDI  R17,LOW(192)
                 ; 0005 0099     }
                 ; 0005 009A 
                 ; 0005 009B 
                 ; 0005 009C     //ADMUX   = ADC_VREF_TYPE;
                 ; 0005 009D     ADMUX   = refADC;
                 _0xA0020:
                 _0xA001F:
0044a6 9310 007c 	STS  124,R17
                 ; 0005 009E     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 009F               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 00A0               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 00A1               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 00A2               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 00A3               (1<<2) |          //-----
                 ; 0005 00A4               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 00A5               (0<<0);           //-----
0044a8 e8e6      	LDI  R30,LOW(134)
0044a9 93e0 007a 	STS  122,R30
                 ; 0005 00A6 
                 ; 0005 00A7     ADCSRB  = 0;
0044ab e0e0      	LDI  R30,LOW(0)
0044ac 93e0 007b 	STS  123,R30
                 ; 0005 00A8 
                 ; 0005 00A9     //adc_init_read();
                 ; 0005 00AA }
0044ae 9119      	LD   R17,Y+
0044af 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
0044b0 94f8      	cli
                 ; 0006 000E     i2c_start();
0044b1 940e c49a 	CALL SUBOPT_0xA4
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
0044b3 e0a5      	LDI  R26,LOW(5)
0044b4 940e dce7 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
0044b6 eaa6      	LDI  R26,LOW(166)
0044b7 940e c49f 	CALL SUBOPT_0xA5
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
0044b9 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
0044ba 940e c4a3 	CALL SUBOPT_0xA6
                 ; 0006 0017 
                 ; 0006 0018     return 0;
0044bc 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
0044bd 9724      	SBIW R28,4
0044be 940e e0d0 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
0044c0 94f8      	cli
                 ; 0006 0021     i2c_start();
0044c1 940e c49a 	CALL SUBOPT_0xA4
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
0044c3 e0a0      	LDI  R26,LOW(0)
0044c4 940e dce7 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
0044c6 940e dcb3 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
0044c8 eda1      	LDI  R26,LOW(209)
0044c9 940e dce7 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
0044cb e0a1      	LDI  R26,LOW(1)
0044cc 940e dccc 	CALL _i2c_read
0044ce 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
0044cf e0a1      	LDI  R26,LOW(1)
0044d0 940e dccc 	CALL _i2c_read
0044d2 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
0044d3 e0a1      	LDI  R26,LOW(1)
0044d4 940e dccc 	CALL _i2c_read
0044d6 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
0044d7 e0a0      	LDI  R26,LOW(0)
0044d8 940e dccc 	CALL _i2c_read
0044da 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
0044db 940e dcc2 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
0044dd 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
0044de 2fe2      	MOV  R30,R18
0044df 27ff      	CLR  R31
0044e0 2766      	CLR  R22
0044e1 2777      	CLR  R23
0044e2 940e c4aa 	CALL SUBOPT_0xA7
                 ; 0006 002E     z <<= 8;
0044e4 940e c4af 	CALL SUBOPT_0xA8
0044e6 940e c4b4 	CALL SUBOPT_0xA9
                 ; 0006 002F     z += rtc_reg3;
0044e8 2fe3      	MOV  R30,R19
0044e9 940e c4b8 	CALL SUBOPT_0xAA
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
0044eb 2fe0      	MOV  R30,R16
0044ec 940e c4b8 	CALL SUBOPT_0xAA
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
0044ee 940e c4c1 	CALL SUBOPT_0xAB
0044f0 940e c4af 	CALL SUBOPT_0xA8
0044f2 940e c4c4 	CALL SUBOPT_0xAC
0044f4 940e c4c9 	CALL SUBOPT_0xAD
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
0044f6 940e e0d7 	CALL __LOADLOCR4
0044f8 9628      	ADIW R28,8
0044f9 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
0044fa 93ba      	ST   -Y,R27
0044fb 93aa      	ST   -Y,R26
0044fc 97a8      	SBIW R28,40
0044fd e08c      	LDI  R24,12
0044fe e1ac      	LDI  R26,LOW(28)
0044ff e0b0      	LDI  R27,HIGH(28)
004500 e0e6      	LDI  R30,LOW(_0xC0003*2)
004501 e1f2      	LDI  R31,HIGH(_0xC0003*2)
004502 e060      	LDI  R22,BYTE3(_0xC0003*2)
004503 940e e0dc 	CALL __INITLOCB
004505 931a      	ST   -Y,R17
004506 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
                +
004507 a5ac     +LDD R26 , Y + 44
004508 a5bd     +LDD R27 , Y + 44 + 1
004509 a58e     +LDD R24 , Y + 44 + 2
00450a a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
00450b 940e c4cb 	CALL SUBOPT_0xAE
00450d 940e c4d2 	CALL SUBOPT_0xAF
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
00450f 940e c4d7 	CALL SUBOPT_0xB0
                +
004511 a5ac     +LDD R26 , Y + 44
004512 a5bd     +LDD R27 , Y + 44 + 1
004513 a58e     +LDD R24 , Y + 44 + 2
004514 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
004515 940e dec5 	CALL __SUBD21
                +
004517 87aa     +STD Y + 10 , R26
004518 87bb     +STD Y + 10 + 1 , R27
004519 878c     +STD Y + 10 + 2 , R24
00451a 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
00451b 940e c297 	CALL SUBOPT_0x59
00451d 940e c4cb 	CALL SUBOPT_0xAE
00451f 940e c4de 	CALL SUBOPT_0xB1
                 ; 0006 0044     min = j - (60 * n);
004521 940e c4e3 	CALL SUBOPT_0xB2
004523 940e c4d7 	CALL SUBOPT_0xB0
004525 940e c297 	CALL SUBOPT_0x59
004527 940e dec5 	CALL __SUBD21
                +
004529 87ae     +STD Y + 14 , R26
00452a 87bf     +STD Y + 14 + 1 , R27
00452b 8b88     +STD Y + 14 + 2 , R24
00452c 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
00452d 940e c4e8 	CALL SUBOPT_0xB3
                +
00452f e1e8     +LDI R30 , LOW ( 0x18 )
004530 e0f0     +LDI R31 , HIGH ( 0x18 )
004531 e060     +LDI R22 , BYTE3 ( 0x18 )
004532 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
004533 940e dfb2 	CALL __DIVD21U
004535 940e c4d2 	CALL SUBOPT_0xAF
                 ; 0006 0046     hrs = n - (24 * j);
                +
004537 e1a8     +LDI R26 , LOW ( 0x18 )
004538 e0b0     +LDI R27 , HIGH ( 0x18 )
004539 e080     +LDI R24 , BYTE3 ( 0x18 )
00453a e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
00453b 940e df5c 	CALL __MULD12U
00453d 940e c4e8 	CALL SUBOPT_0xB3
00453f 940e dec5 	CALL __SUBD21
                +
004541 8baa     +STD Y + 18 , R26
004542 8bbb     +STD Y + 18 + 1 , R27
004543 8b8c     +STD Y + 18 + 2 , R24
004544 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
004545 940e c4ed 	CALL SUBOPT_0xB4
                +
004547 52e5     +SUBI R30 , LOW ( - 731 )
004548 4ffd     +SBCI R31 , HIGH ( - 731 )
004549 4f6f     +SBCI R22 , BYTE3 ( - 731 )
00454a 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
00454b 940e c4f2 	CALL SUBOPT_0xB5
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
00454d 940e c297 	CALL SUBOPT_0x59
                +
00454f e0e7     +LDI R30 , LOW ( 0x7 )
004550 e0f0     +LDI R31 , HIGH ( 0x7 )
004551 e060     +LDI R22 , BYTE3 ( 0x7 )
004552 e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
004553 940e dff9 	CALL __MODD21U
004555 9631      	ADIW R30,1
004556 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
004557 940e c4f7 	CALL SUBOPT_0xB6
004559 940e dfb2 	CALL __DIVD21U
00455b 940e c4fd 	CALL SUBOPT_0xB7
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
00455d 940e c4f7 	CALL SUBOPT_0xB6
00455f 940e dff9 	CALL __MODD21U
                +
004561 8fea     +STD Y + 26 , R30
004562 8ffb     +STD Y + 26 + 1 , R31
004563 8f6c     +STD Y + 26 + 2 , R22
004564 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
004565 940e c502 	CALL SUBOPT_0xB8
004567 940e c507 	CALL SUBOPT_0xB9
004569 f030      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
00456a 940e c50f 	CALL SUBOPT_0xBA
00456c 940e c514 	CALL SUBOPT_0xBB
00456e 940e c4fd 	CALL SUBOPT_0xB7
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
004570 940e c519 	CALL SUBOPT_0xBC
004572 940e c4ed 	CALL SUBOPT_0xB4
004574 940e dec0 	CALL __SUBD12
004576 01df      	MOVW R26,R30
004577 01cb      	MOVW R24,R22
                +
004578 e6ed     +LDI R30 , LOW ( 0x16D )
004579 e0f1     +LDI R31 , HIGH ( 0x16D )
00457a e060     +LDI R22 , BYTE3 ( 0x16D )
00457b e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
00457c 940e dfb2 	CALL __DIVD21U
                +
00457e a3ee     +STD Y + 38 , R30
00457f a3ff     +STD Y + 38 + 1 , R31
004580 a768     +STD Y + 38 + 2 , R22
004581 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
004582 940e c51e 	CALL SUBOPT_0xBD
004584 940e c523 	CALL SUBOPT_0xBE
004586 940e c297 	CALL SUBOPT_0x59
004588 940e c52a 	CALL SUBOPT_0xBF
00458a 940e c519 	CALL SUBOPT_0xBC
00458c 940e dec0 	CALL __SUBD12
00458e 940e c52f 	CALL SUBOPT_0xC0
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
004590 940e c502 	CALL SUBOPT_0xB8
                +
004592 36ae     +CPI R26 , LOW ( 0x16E )
004593 e0e1     +LDI R30 , HIGH ( 0x16E )
004594 07be     +CPC R27 , R30
004595 e0e0     +LDI R30 , BYTE3 ( 0x16E )
004596 078e     +CPC R24 , R30
004597 e0e0     +LDI R30 , BYTE4 ( 0x16E )
004598 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
004599 f428      	BRSH _0xC0006
00459a 940e c502 	CALL SUBOPT_0xB8
00459c 940e c507 	CALL SUBOPT_0xB9
00459e f408      	BRSH _0xC0007
                 _0xC0006:
00459f c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
0045a0 940e c534 	CALL SUBOPT_0xC1
0045a2 940e c514 	CALL SUBOPT_0xBB
0045a4 940e c52f 	CALL SUBOPT_0xC0
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
0045a6 940e c51e 	CALL SUBOPT_0xBD
                +
0045a8 55e0     +SUBI R30 , LOW ( - 1968 )
0045a9 4ff8     +SBCI R31 , HIGH ( - 1968 )
0045aa 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
0045ab 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
0045ac a3ee     +STD Y + 38 , R30
0045ad a3ff     +STD Y + 38 + 1 , R31
0045ae a768     +STD Y + 38 + 2 , R22
0045af a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
0045b0 e0ec     +LDI R30 , LOW ( 0xC )
0045b1 e0f0     +LDI R31 , HIGH ( 0xC )
0045b2 e060     +LDI R22 , BYTE3 ( 0xC )
0045b3 e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
0045b4 a3ea     +STD Y + 34 , R30
0045b5 a3fb     +STD Y + 34 + 1 , R31
0045b6 a36c     +STD Y + 34 + 2 , R22
0045b7 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
0045b8 a1aa     +LDD R26 , Y + 34
0045b9 a1bb     +LDD R27 , Y + 34 + 1
0045ba a18c     +LDD R24 , Y + 34 + 2
0045bb a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
0045bc 940e e0be 	CALL __CPD02
0045be f010      	BRLO PC+3
0045bf 940c 464c 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
0045c1 940e c539 	CALL SUBOPT_0xC2
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
0045c3 940e c53e 	CALL SUBOPT_0xC3
0045c5 f431      	BRNE _0xC000E
0045c6 e0e0      	LDI  R30,LOW(0)
                +
0045c7 8fea     +STD Y + 26 , R30
0045c8 8feb     +STD Y + 26 + 1 , R30
0045c9 8fec     +STD Y + 26 + 2 , R30
0045ca 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
0045cb c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
0045cc 940e c546 	CALL SUBOPT_0xC4
0045ce f429      	BRNE _0xC000F
                +
0045cf e1ef     +LDI R30 , LOW ( 0x1F )
0045d0 e0f0     +LDI R31 , HIGH ( 0x1F )
0045d1 e060     +LDI R22 , BYTE3 ( 0x1F )
0045d2 e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
0045d3 c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
0045d4 940e c54e 	CALL SUBOPT_0xC5
0045d6 f429      	BRNE _0xC0010
                +
0045d7 e3eb     +LDI R30 , LOW ( 0x3B )
0045d8 e0f0     +LDI R31 , HIGH ( 0x3B )
0045d9 e060     +LDI R22 , BYTE3 ( 0x3B )
0045da e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
0045db c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
0045dc 940e c556 	CALL SUBOPT_0xC6
0045de f429      	BRNE _0xC0011
                +
0045df e5ea     +LDI R30 , LOW ( 0x5A )
0045e0 e0f0     +LDI R31 , HIGH ( 0x5A )
0045e1 e060     +LDI R22 , BYTE3 ( 0x5A )
0045e2 e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
0045e3 c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
0045e4 940e c55e 	CALL SUBOPT_0xC7
0045e6 f429      	BRNE _0xC0012
                +
0045e7 e7e8     +LDI R30 , LOW ( 0x78 )
0045e8 e0f0     +LDI R31 , HIGH ( 0x78 )
0045e9 e060     +LDI R22 , BYTE3 ( 0x78 )
0045ea e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
0045eb c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
0045ec 940e c566 	CALL SUBOPT_0xC8
0045ee f429      	BRNE _0xC0013
                +
0045ef e9e7     +LDI R30 , LOW ( 0x97 )
0045f0 e0f0     +LDI R31 , HIGH ( 0x97 )
0045f1 e060     +LDI R22 , BYTE3 ( 0x97 )
0045f2 e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
0045f3 c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
0045f4 940e c56e 	CALL SUBOPT_0xC9
0045f6 f429      	BRNE _0xC0014
                +
0045f7 ebe5     +LDI R30 , LOW ( 0xB5 )
0045f8 e0f0     +LDI R31 , HIGH ( 0xB5 )
0045f9 e060     +LDI R22 , BYTE3 ( 0xB5 )
0045fa e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
0045fb c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
0045fc 940e c576 	CALL SUBOPT_0xCA
0045fe f429      	BRNE _0xC0015
                +
0045ff ede4     +LDI R30 , LOW ( 0xD4 )
004600 e0f0     +LDI R31 , HIGH ( 0xD4 )
004601 e060     +LDI R22 , BYTE3 ( 0xD4 )
004602 e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
004603 c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
004604 940e c57e 	CALL SUBOPT_0xCB
004606 f429      	BRNE _0xC0016
                +
004607 efe3     +LDI R30 , LOW ( 0xF3 )
004608 e0f0     +LDI R31 , HIGH ( 0xF3 )
004609 e060     +LDI R22 , BYTE3 ( 0xF3 )
00460a e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
00460b c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
00460c 940e c586 	CALL SUBOPT_0xCC
00460e f429      	BRNE _0xC0017
                +
00460f e1e1     +LDI R30 , LOW ( 0x111 )
004610 e0f1     +LDI R31 , HIGH ( 0x111 )
004611 e060     +LDI R22 , BYTE3 ( 0x111 )
004612 e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
004613 c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
004614 940e c58e 	CALL SUBOPT_0xCD
004616 f429      	BRNE _0xC0018
                +
004617 e3e0     +LDI R30 , LOW ( 0x130 )
004618 e0f1     +LDI R31 , HIGH ( 0x130 )
004619 e060     +LDI R22 , BYTE3 ( 0x130 )
00461a e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
00461b c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
00461c 940e c596 	CALL SUBOPT_0xCE
00461e f441      	BRNE _0xC000D
                +
00461f e4ee     +LDI R30 , LOW ( 0x14E )
004620 e0f1     +LDI R31 , HIGH ( 0x14E )
004621 e060     +LDI R22 , BYTE3 ( 0x14E )
004622 e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
004623 8fea     +STD Y + 26 , R30
004624 8ffb     +STD Y + 26 + 1 , R31
004625 8f6c     +STD Y + 26 + 2 , R22
004626 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
004627 a1aa     +LDD R26 , Y + 34
004628 a1bb     +LDD R27 , Y + 34 + 1
004629 a18c     +LDD R24 , Y + 34 + 2
00462a a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
00462b 940e c59e 	CALL SUBOPT_0xCF
00462d f020      	BRLO _0xC001B
00462e 940e c51e 	CALL SUBOPT_0xBD
004630 70e3      	ANDI R30,LOW(0x3)
004631 f009      	BREQ _0xC001C
                 _0xC001B:
004632 c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
004633 940e c5a6 	CALL SUBOPT_0xD0
004635 940e c514 	CALL SUBOPT_0xBB
                +
004637 8fea     +STD Y + 26 , R30
004638 8ffb     +STD Y + 26 + 1 , R31
004639 8f6c     +STD Y + 26 + 2 , R22
00463a 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
00463b 940e c5a6 	CALL SUBOPT_0xD0
00463d 940e c5ab 	CALL SUBOPT_0xD1
00463f 940e e0c9 	CALL __CPD21
004641 f450      	BRSH _0xC000A
                 ; 0006 0074     }
004642 940e c539 	CALL SUBOPT_0xC2
004644 9731      	SBIW R30,1
004645 4060      	SBCI R22,0
004646 4070      	SBCI R23,0
                +
004647 a3ea     +STD Y + 34 , R30
004648 a3fb     +STD Y + 34 + 1 , R31
004649 a36c     +STD Y + 34 + 2 , R22
00464a a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
00464b cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
00464c 940e c502 	CALL SUBOPT_0xB8
00464e 940e c534 	CALL SUBOPT_0xC1
004650 940e dec0 	CALL __SUBD12
004652 940e c5b0 	CALL SUBOPT_0xD2
004654 940e c4fd 	CALL SUBOPT_0xB7
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
004656 940e c51e 	CALL SUBOPT_0xBD
004658 a5aa      	LDD  R26,Y+42
004659 a5bb      	LDD  R27,Y+42+1
00465a 940e e039 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
00465c 940e c539 	CALL SUBOPT_0xC2
                +
00465e a5aa     +LDD R26 , Y + 42
00465f a5bb     +LDD R27 , Y + 42 + 1
004660 9614     +ADIW R26 , 4
004661 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
004663 940e c50f 	CALL SUBOPT_0xBA
                +
004665 a5aa     +LDD R26 , Y + 42
004666 a5bb     +LDD R27 , Y + 42 + 1
004667 9618     +ADIW R26 , 8
004668 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
00466a 940e c5b5 	CALL SUBOPT_0xD3
                +
00466c a5aa     +LDD R26 , Y + 42
00466d a5bb     +LDD R27 , Y + 42 + 1
00466e 961c     +ADIW R26 , 12
00466f 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
004671 940e c2be 	CALL SUBOPT_0x60
                +
004673 a5aa     +LDD R26 , Y + 42
004674 a5bb     +LDD R27 , Y + 42 + 1
004675 9650     +ADIW R26 , 16
004676 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
004678 940e c5ba 	CALL SUBOPT_0xD4
                +
00467a a5aa     +LDD R26 , Y + 42
00467b a5bb     +LDD R27 , Y + 42 + 1
00467c 9654     +ADIW R26 , 20
00467d 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
00467f 01f8      	MOVW R30,R16
                +
004680 a5aa     +LDD R26 , Y + 42
004681 a5bb     +LDD R27 , Y + 42 + 1
004682 9658     +ADIW R26 , 24
004683 93ed     +ST X + , R30
004684 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
004685 940e c5bf 	CALL SUBOPT_0xD5
004687 96e0      	ADIW R28,48
004688 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
004689 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
00468a 940e c3d2 	CALL SUBOPT_0x89
                +
00468c 5be2     +SUBI R30 , LOW ( 1970 )
00468d 40f7     +SBCI R31 , HIGH ( 1970 )
00468e 4060     +SBCI R22 , BYTE3 ( 1970 )
00468f 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
004690 940e c523 	CALL SUBOPT_0xBE
004692 940e c481 	CALL SUBOPT_0xA0
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
004694 940e c3d2 	CALL SUBOPT_0x89
                +
004696 5be1     +SUBI R30 , LOW ( 1969 )
004697 40f7     +SBCI R31 , HIGH ( 1969 )
004698 4060     +SBCI R22 , BYTE3 ( 1969 )
004699 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
00469a 940e df1c 	CALL __LSRD1
00469c 940e df1c 	CALL __LSRD1
00469e 940e c5c4 	CALL SUBOPT_0xD6
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
0046a0 940e c5c6 	CALL SUBOPT_0xD7
0046a2 940e c59e 	CALL SUBOPT_0xCF
0046a4 f018      	BRLO _0xC001F
0046a5 81ec      	LDD  R30,Y+4
0046a6 70e3      	ANDI R30,LOW(0x3)
0046a7 f009      	BREQ _0xC0020
                 _0xC001F:
0046a8 c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
0046a9 940e c3c6 	CALL SUBOPT_0x87
0046ab 940e c514 	CALL SUBOPT_0xBB
0046ad 940e c481 	CALL SUBOPT_0xA0
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
0046af 940e c24c 	CALL SUBOPT_0x4F
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
0046b1 940e c53e 	CALL SUBOPT_0xC3
0046b3 f419      	BRNE _0xC0024
0046b4 940e c3c6 	CALL SUBOPT_0x87
0046b6 c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
0046b7 940e c546 	CALL SUBOPT_0xC4
0046b9 f439      	BRNE _0xC0025
0046ba 940e c3c6 	CALL SUBOPT_0x87
                +
0046bc 5ee1     +SUBI R30 , LOW ( - 31 )
0046bd 4fff     +SBCI R31 , HIGH ( - 31 )
0046be 4f6f     +SBCI R22 , BYTE3 ( - 31 )
0046bf 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
0046c0 c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
0046c1 940e c54e 	CALL SUBOPT_0xC5
0046c3 f439      	BRNE _0xC0026
0046c4 940e c3c6 	CALL SUBOPT_0x87
                +
0046c6 5ce5     +SUBI R30 , LOW ( - 59 )
0046c7 4fff     +SBCI R31 , HIGH ( - 59 )
0046c8 4f6f     +SBCI R22 , BYTE3 ( - 59 )
0046c9 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
0046ca c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
0046cb 940e c556 	CALL SUBOPT_0xC6
0046cd f439      	BRNE _0xC0027
0046ce 940e c3c6 	CALL SUBOPT_0x87
                +
0046d0 5ae6     +SUBI R30 , LOW ( - 90 )
0046d1 4fff     +SBCI R31 , HIGH ( - 90 )
0046d2 4f6f     +SBCI R22 , BYTE3 ( - 90 )
0046d3 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
0046d4 c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
0046d5 940e c55e 	CALL SUBOPT_0xC7
0046d7 f439      	BRNE _0xC0028
0046d8 940e c3c6 	CALL SUBOPT_0x87
                +
0046da 58e8     +SUBI R30 , LOW ( - 120 )
0046db 4fff     +SBCI R31 , HIGH ( - 120 )
0046dc 4f6f     +SBCI R22 , BYTE3 ( - 120 )
0046dd 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
0046de c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
0046df 940e c566 	CALL SUBOPT_0xC8
0046e1 f439      	BRNE _0xC0029
0046e2 940e c3c6 	CALL SUBOPT_0x87
                +
0046e4 56e9     +SUBI R30 , LOW ( - 151 )
0046e5 4fff     +SBCI R31 , HIGH ( - 151 )
0046e6 4f6f     +SBCI R22 , BYTE3 ( - 151 )
0046e7 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
0046e8 c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
0046e9 940e c56e 	CALL SUBOPT_0xC9
0046eb f439      	BRNE _0xC002A
0046ec 940e c3c6 	CALL SUBOPT_0x87
                +
0046ee 54eb     +SUBI R30 , LOW ( - 181 )
0046ef 4fff     +SBCI R31 , HIGH ( - 181 )
0046f0 4f6f     +SBCI R22 , BYTE3 ( - 181 )
0046f1 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
0046f2 c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
0046f3 940e c576 	CALL SUBOPT_0xCA
0046f5 f439      	BRNE _0xC002B
0046f6 940e c3c6 	CALL SUBOPT_0x87
                +
0046f8 52ec     +SUBI R30 , LOW ( - 212 )
0046f9 4fff     +SBCI R31 , HIGH ( - 212 )
0046fa 4f6f     +SBCI R22 , BYTE3 ( - 212 )
0046fb 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
0046fc c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
0046fd 940e c57e 	CALL SUBOPT_0xCB
0046ff f439      	BRNE _0xC002C
004700 940e c3c6 	CALL SUBOPT_0x87
                +
004702 50ed     +SUBI R30 , LOW ( - 243 )
004703 4fff     +SBCI R31 , HIGH ( - 243 )
004704 4f6f     +SBCI R22 , BYTE3 ( - 243 )
004705 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
004706 c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
004707 940e c586 	CALL SUBOPT_0xCC
004709 f439      	BRNE _0xC002D
00470a 940e c3c6 	CALL SUBOPT_0x87
                +
00470c 5eef     +SUBI R30 , LOW ( - 273 )
00470d 4ffe     +SBCI R31 , HIGH ( - 273 )
00470e 4f6f     +SBCI R22 , BYTE3 ( - 273 )
00470f 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
004710 c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
004711 940e c58e 	CALL SUBOPT_0xCD
004713 f439      	BRNE _0xC002E
004714 940e c3c6 	CALL SUBOPT_0x87
                +
004716 5de0     +SUBI R30 , LOW ( - 304 )
004717 4ffe     +SBCI R31 , HIGH ( - 304 )
004718 4f6f     +SBCI R22 , BYTE3 ( - 304 )
004719 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
00471a c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
00471b 940e c596 	CALL SUBOPT_0xCE
00471d f441      	BRNE _0xC0023
00471e 940e c3c6 	CALL SUBOPT_0x87
                +
004720 5be2     +SUBI R30 , LOW ( - 334 )
004721 4ffe     +SBCI R31 , HIGH ( - 334 )
004722 4f6f     +SBCI R22 , BYTE3 ( - 334 )
004723 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
004724 940e e054 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
004726 940e c5cb 	CALL SUBOPT_0xD8
004728 940e c5d0 	CALL SUBOPT_0xD9
00472a 940e c5c4 	CALL SUBOPT_0xD6
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
00472c 940e c3c6 	CALL SUBOPT_0x87
                +
00472e e8a0     +LDI R26 , LOW ( 0x15180 )
00472f e5b1     +LDI R27 , HIGH ( 0x15180 )
004730 e081     +LDI R24 , BYTE3 ( 0x15180 )
004731 e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
004732 940e df5c 	CALL __MULD12U
004734 940e c481 	CALL SUBOPT_0xA0
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
004736 940e c5d5 	CALL SUBOPT_0xDA
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
004738 940e c5d5 	CALL SUBOPT_0xDA
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
00473a 940e c5dd 	CALL SUBOPT_0xDB
00473c 940e c4d7 	CALL SUBOPT_0xB0
00473e 940e c5c4 	CALL SUBOPT_0xD6
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
004740 940e c5e2 	CALL SUBOPT_0xDC
004742 940e c5c4 	CALL SUBOPT_0xD6
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
004744 940e c3c6 	CALL SUBOPT_0x87
004746 966e      	ADIW R28,30
004747 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
004748 940e e063 	CALL __PUTPARD2
00474a 9728      	SBIW R28,8
00474b 940e e0d0 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
00474d 940e c245 	CALL SUBOPT_0x4E
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
00474f 940e c5e7 	CALL SUBOPT_0xDD
004751 f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
004752 940e c5ec 	CALL SUBOPT_0xDE
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
004754 c00b      	RJMP _0xC0031
                 _0xC0030:
004755 940e c5f1 	CALL SUBOPT_0xDF
004757 f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
004758 940e c5f6 	CALL SUBOPT_0xE0
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
00475a c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
00475b e0e0      	LDI  R30,LOW(0)
                +
00475c 83ec     +STD Y + 4 , R30
00475d 83ed     +STD Y + 4 + 1 , R30
00475e 83ee     +STD Y + 4 + 2 , R30
00475f 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
004760 940e c4af 	CALL SUBOPT_0xA8
004762 940e e0ba 	CALL __CPD20
004764 f018      	BRLO _0xC0035
004765 940e c5fb 	CALL SUBOPT_0xE1
004767 f008      	BRLO _0xC0036
                 _0xC0035:
004768 c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
004769 efef      	LDI  R30,LOW(65535)
00476a efff      	LDI  R31,HIGH(65535)
00476b c016      	RJMP _0x20E0095
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
00476c 940e c604 	CALL SUBOPT_0xE2
00476e 940e c609 	CALL SUBOPT_0xE3
004770 940e c2e6 	CALL SUBOPT_0x66
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
004772 940e c60d 	CALL SUBOPT_0xE4
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
004774 94f8      	cli
                 ; 0006 00D5     i2c_start();
004775 940e c49a 	CALL SUBOPT_0xA4
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
004777 940e c61e 	CALL SUBOPT_0xE5
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
004779 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
00477a e3eb     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
00477b e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
00477c e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
00477d e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
00477e 940e c02f 	CALL SUBOPT_0x3
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
004780 940e c4a3 	CALL SUBOPT_0xA6
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E0095:
004782 940e e0d7 	CALL __LOADLOCR4
004784 9660      	ADIW R28,16
004785 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
004786 940e c62c 	CALL SUBOPT_0xE6
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004788 89a8      	LDD  R26,Y+16
004789 89b9      	LDD  R27,Y+16+1
00478a 971f      	SBIW R26,15
00478b f434      	BRGE _0xC0038
00478c 89a8      	LDD  R26,Y+16
00478d 89b9      	LDD  R27,Y+16+1
00478e 3fa4      	CPI  R26,LOW(0xFFF4)
00478f efef      	LDI  R30,HIGH(0xFFF4)
004790 07be      	CPC  R27,R30
004791 f45c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
004792 e5e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
004793 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
004794 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
004795 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
004796 940e c632 	CALL SUBOPT_0xE7
004798 940e c637 	CALL SUBOPT_0xE8
                 ; 0006 00F0         return -2;
00479a efee      	LDI  R30,LOW(65534)
00479b efff      	LDI  R31,HIGH(65534)
00479c c049      	RJMP _0x20E0094
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
00479d 01fe      	MOVW R30,R28
00479e 9672      	ADIW R30,18
00479f e1aa      	LDI  R26,26
0047a0 940e e068 	CALL __PUTPARL
0047a2 dee6      	RCALL _date_to_binary
0047a3 940e c63c 	CALL SUBOPT_0xE9
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
0047a5 89e8      	LDD  R30,Y+16
0047a6 89f9      	LDD  R31,Y+16+1
0047a7 940e c641 	CALL SUBOPT_0xEA
0047a9 940e c641 	CALL SUBOPT_0xEA
0047ab efaf      	LDI  R26,LOW(65535)
0047ac efbf      	LDI  R27,HIGH(65535)
0047ad 940e df82 	CALL __MULW12
0047af 940e c075 	CALL SUBOPT_0xB
0047b1 940e c4c4 	CALL SUBOPT_0xAC
0047b3 940e c646 	CALL SUBOPT_0xEB
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
0047b5 940e c648 	CALL SUBOPT_0xEC
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
0047b7 940e c245 	CALL SUBOPT_0x4E
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
0047b9 940e c5e7 	CALL SUBOPT_0xDD
0047bb f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
0047bc 940e c5ec 	CALL SUBOPT_0xDE
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
0047be c00b      	RJMP _0xC003B
                 _0xC003A:
0047bf 940e c5f1 	CALL SUBOPT_0xDF
0047c1 f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
0047c2 940e c5f6 	CALL SUBOPT_0xE0
                 ; 0006 0100     }
                 ; 0006 0101     else{
0047c4 c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
0047c5 e0e0      	LDI  R30,LOW(0)
                +
0047c6 83ec     +STD Y + 4 , R30
0047c7 83ed     +STD Y + 4 + 1 , R30
0047c8 83ee     +STD Y + 4 + 2 , R30
0047c9 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
0047ca 940e c4af 	CALL SUBOPT_0xA8
0047cc 940e e0ba 	CALL __CPD20
0047ce f018      	BRLO _0xC003F
0047cf 940e c5fb 	CALL SUBOPT_0xE1
0047d1 f008      	BRLO _0xC0040
                 _0xC003F:
0047d2 c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
0047d3 efef      	LDI  R30,LOW(65535)
0047d4 efff      	LDI  R31,HIGH(65535)
0047d5 c010      	RJMP _0x20E0094
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
0047d6 940e c604 	CALL SUBOPT_0xE2
0047d8 940e c609 	CALL SUBOPT_0xE3
0047da 940e c2e6 	CALL SUBOPT_0x66
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
0047dc 940e c60d 	CALL SUBOPT_0xE4
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
0047de 94f8      	cli
                 ; 0006 0113     i2c_start();
0047df 940e c49a 	CALL SUBOPT_0xA4
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
0047e1 940e c61e 	CALL SUBOPT_0xE5
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
0047e3 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
0047e4 940e c4a3 	CALL SUBOPT_0xA6
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E0094:
0047e6 940e e0d7 	CALL __LOADLOCR4
0047e8 96ac      	ADIW R28,44
0047e9 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
0047ea 940e c651 	CALL SUBOPT_0xED
0047ec 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
0047ed dccf      	RCALL _DS1672_read
0047ee 940e c656 	CALL SUBOPT_0xEE
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
0047f0 940e c1b7 	CALL SUBOPT_0x3A
0047f2 f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
0047f3 e001     +LDI R16 , LOW ( 1 )
0047f4 e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
0047f5 91e0 1430 	LDS  R30,_raw_rtc
0047f7 91f0 1431 	LDS  R31,_raw_rtc+1
0047f9 9160 1432 	LDS  R22,_raw_rtc+2
0047fb 9170 1433 	LDS  R23,_raw_rtc+3
0047fd 940e c4de 	CALL SUBOPT_0xB1
                 ; 0006 012C     }
                 ; 0006 012D     else{
0047ff c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
004800 e000     +LDI R16 , LOW ( 0 )
004801 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
004802 940e c4e3 	CALL SUBOPT_0xB2
004804 940e c648 	CALL SUBOPT_0xEC
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
004806 81ee      	LDD  R30,Y+6
004807 81ff      	LDD  R31,Y+6+1
004808 940e c641 	CALL SUBOPT_0xEA
00480a 940e c641 	CALL SUBOPT_0xEA
00480c 940e c4e8 	CALL SUBOPT_0xB3
00480e 940e c4c4 	CALL SUBOPT_0xAC
004810 940e c4de 	CALL SUBOPT_0xB1
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
004812 940e c658 	CALL SUBOPT_0xEF
004814 85ac      	LDD  R26,Y+12
004815 85bd      	LDD  R27,Y+12+1
004816 dce3      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
004817 01f8      	MOVW R30,R16
004818 8119      	LDD  R17,Y+1
004819 8108      	LDD  R16,Y+0
00481a 962a      	ADIW R28,10
00481b 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
00481c 8de8      	LDD  R30,Y+24
00481d 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
00481e 30e1      	CPI  R30,LOW(0x1)
00481f e0a0      	LDI  R26,HIGH(0x1)
004820 07fa      	CPC  R31,R26
004821 f429      	BRNE _0xC0046
                +
004822 e8e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
004823 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
004824 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
004825 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
004826 c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
004827 30e2      	CPI  R30,LOW(0x2)
004828 e0a0      	LDI  R26,HIGH(0x2)
004829 07fa      	CPC  R31,R26
00482a f429      	BRNE _0xC0047
                +
00482b e8ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
00482c e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
00482d e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
00482e e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
00482f c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
004830 30e3      	CPI  R30,LOW(0x3)
004831 e0a0      	LDI  R26,HIGH(0x3)
004832 07fa      	CPC  R31,R26
004833 f429      	BRNE _0xC0048
                +
004834 e9e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
004835 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
004836 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
004837 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
004838 c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
004839 30e4      	CPI  R30,LOW(0x4)
00483a e0a0      	LDI  R26,HIGH(0x4)
00483b 07fa      	CPC  R31,R26
00483c f429      	BRNE _0xC0049
                +
00483d e9ea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
00483e e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
00483f e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
004840 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
004841 c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
004842 30e5      	CPI  R30,LOW(0x5)
004843 e0a0      	LDI  R26,HIGH(0x5)
004844 07fa      	CPC  R31,R26
004845 f429      	BRNE _0xC004A
                +
004846 eae0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
004847 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
004848 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
004849 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
00484a c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
00484b 30e6      	CPI  R30,LOW(0x6)
00484c e0a0      	LDI  R26,HIGH(0x6)
00484d 07fa      	CPC  R31,R26
00484e f429      	BRNE _0xC004B
                +
00484f eae6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
004850 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
004851 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
004852 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
004853 c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
004854 30e7      	CPI  R30,LOW(0x7)
004855 e0a0      	LDI  R26,HIGH(0x7)
004856 07fa      	CPC  R31,R26
004857 f441      	BRNE _0xC0045
                +
004858 eaec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
004859 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
00485a e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
00485b e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
00485c 940e e05e 	CALL __PUTPARD1
00485e 940e c19a 	CALL SUBOPT_0x36
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
004860 ebe2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
004861 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
004862 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
004863 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
004864 940e c65c 	CALL SUBOPT_0xF0
004866 940e c191 	CALL SUBOPT_0x34
004868 940e c24c 	CALL SUBOPT_0x4F
00486a 940e c2a1 	CALL SUBOPT_0x5B
00486c 940e c661 	CALL SUBOPT_0xF1
                +
00486e a1e8     +LDD R30 , Y + 32
00486f a1f9     +LDD R31 , Y + 32 + 1
004870 a16a     +LDD R22 , Y + 32 + 2
004871 a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
004872 940e e05e 	CALL __PUTPARD1
004874 940e c665 	CALL SUBOPT_0xF2
004876 940e c66c 	CALL SUBOPT_0xF3
004878 e18c      	LDI  R24,28
004879 940e 9de6 	CALL _printDebug
00487b 96a0      	ADIW R28,32
                 ; 0006 014F     return;
00487c c025      	RJMP _0x20E0093
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
00487d 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
00487e e0e0      	LDI  R30,LOW(0)
00487f 93e0 1430 	STS  _raw_rtc,R30
004881 93e0 1431 	STS  _raw_rtc+1,R30
004883 93e0 1432 	STS  _raw_rtc+2,R30
004885 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
004887 94f8      	cli
                 ; 0006 0159     i2c_start();
004888 940e c49a 	CALL SUBOPT_0xA4
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
00488a e0a4      	LDI  R26,LOW(4)
00488b 940e dce7 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
00488d e0a0      	LDI  R26,LOW(0)
00488e 940e c49f 	CALL SUBOPT_0xA5
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
004890 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
004891 dc1e      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
004892 940e c06e 	CALL SUBOPT_0x9
004894 940e c673 	CALL SUBOPT_0xF4
004896 df53      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
004897 ede6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
004898 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
004899 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
00489a e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
00489b 940e c02f 	CALL SUBOPT_0x3
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
00489d 01fe      	MOVW R30,R28
00489e e1aa      	LDI  R26,26
00489f 940e e068 	CALL __PUTPARL
0048a1 df7a      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E0093:
0048a2 966a      	ADIW R28,26
0048a3 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0021 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0022     int i;
                 ; 0007 0023 
                 ; 0007 0024     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0025 
                 ; 0007 0026     if( config_prop_flag != 0x01){
0048a4 940e c3a0 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0048a6 e4a2      	LDI  R26,LOW(_config_prop_flag)
0048a7 e0b5      	LDI  R27,HIGH(_config_prop_flag)
0048a8 940e e085 	CALL __EEPROMRDB
0048aa 30e1      	CPI  R30,LOW(0x1)
0048ab f0a9      	BREQ _0xE000B
                 ; 0007 0027         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
0048ac e1ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
0048ad e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
0048ae e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
0048af e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
0048b0 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0028         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
0048b2 81ea      	LDD  R30,Y+2
0048b3 81fb      	LDD  R31,Y+2+1
0048b4 940e c676 	CALL SUBOPT_0xF5
0048b6 940e c67b 	CALL SUBOPT_0xF6
0048b8 940e a580 	CALL _memset
                 ; 0007 0029         readConfig->timeZone   = 7;
0048ba 81aa      	LDD  R26,Y+2
0048bb 81bb      	LDD  R27,Y+2+1
0048bc 56a0      	SUBI R26,LOW(-160)
0048bd 4fbf      	SBCI R27,HIGH(-160)
0048be e0e7      	LDI  R30,LOW(7)
0048bf 93ec      	ST   X,R30
                 ; 0007 002A     }
                 ; 0007 002B     else{
0048c0 c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002C 
                 ; 0007 002D         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
0048c1 e000     +LDI R16 , LOW ( 0 )
0048c2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
0048c3 3104     +CPI R16 , LOW ( 20 )
0048c4 e0e0     +LDI R30 , HIGH ( 20 )
0048c5 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0048c6 f47c      	BRGE _0xE000F
                 ; 0007 002E         {
                 ; 0007 002F             readConfig->deviceType[i]   = config_prop.deviceType[i];
0048c7 01f8      	MOVW R30,R16
0048c8 81aa      	LDD  R26,Y+2
0048c9 81bb      	LDD  R27,Y+2+1
0048ca 0fea      	ADD  R30,R26
0048cb 1ffb      	ADC  R31,R27
0048cc 010f      	MOVW R0,R30
0048cd e0a0      	LDI  R26,LOW(_config_prop)
0048ce e0b0      	LDI  R27,HIGH(_config_prop)
0048cf 940e c67e 	CALL SUBOPT_0xF7
0048d1 01d0      	MOVW R26,R0
0048d2 93ec      	ST   X,R30
                 ; 0007 0030         }
                +
0048d3 5f0f     +SUBI R16 , LOW ( - 1 )
0048d4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048d5 cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0031 
                 ; 0007 0032         /*
                 ; 0007 0033         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0034         {
                 ; 0007 0035             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0036             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 0037         }
                 ; 0007 0038         */
                 ; 0007 0039         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
0048d6 81ea      	LDD  R30,Y+2
0048d7 81fb      	LDD  R31,Y+2+1
0048d8 9674      	ADIW R30,20
0048d9 93fa      	ST   -Y,R31
0048da 93ea      	ST   -Y,R30
                +
0048db eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0048dc e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0048dd e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0048de e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
0048df 940e e05e 	CALL __PUTPARD1
0048e1 eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
0048e2 e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
0048e3 e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
0048e4 940e a5d3 	CALL _strlenf
0048e6 01df      	MOVW R26,R30
0048e7 940e a54d 	CALL _memcpyf
                 ; 0007 003A 
                 ; 0007 003B         for(i=0;i<NAME_LENGTH;i++)
                +
0048e9 e000     +LDI R16 , LOW ( 0 )
0048ea e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
0048eb 3208     +CPI R16 , LOW ( 40 )
0048ec e0e0     +LDI R30 , HIGH ( 40 )
0048ed 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
0048ee f46c      	BRGE _0xE0012
                 ; 0007 003C         {
                 ; 0007 003D             readConfig->deviceName[i]   = config_prop.deviceName[i];
0048ef 81ea      	LDD  R30,Y+2
0048f0 81fb      	LDD  R31,Y+2+1
0048f1 96b8      	ADIW R30,40
0048f2 0fe0      	ADD  R30,R16
0048f3 1ff1      	ADC  R31,R17
0048f4 010f      	MOVW R0,R30
                +
0048f5 e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
0048f6 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
0048f7 940e c683 	CALL SUBOPT_0xF8
                 ; 0007 003E         }
                +
0048f9 5f0f     +SUBI R16 , LOW ( - 1 )
0048fa 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048fb cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 003F 
                 ; 0007 0040         for(i=0;i<ID_LENGTH;i++)
                +
0048fc e000     +LDI R16 , LOW ( 0 )
0048fd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
0048fe 3104     +CPI R16 , LOW ( 20 )
0048ff e0e0     +LDI R30 , HIGH ( 20 )
004900 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004901 f454      	BRGE _0xE0015
                 ; 0007 0041         {
                 ; 0007 0042             readConfig->deviceID[i]   = config_prop.deviceID[i];
004902 940e c68b 	CALL SUBOPT_0xF9
004904 010f      	MOVW R0,R30
                +
004905 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004906 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004907 940e c683 	CALL SUBOPT_0xF8
                 ; 0007 0043         }
                +
004909 5f0f     +SUBI R16 , LOW ( - 1 )
00490a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00490b cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0044 
                 ; 0007 0045         for(i=0;i<NAME_LENGTH;i++)
                +
00490c e000     +LDI R16 , LOW ( 0 )
00490d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
00490e 3208     +CPI R16 , LOW ( 40 )
00490f e0e0     +LDI R30 , HIGH ( 40 )
004910 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004911 f454      	BRGE _0xE0018
                 ; 0007 0046         {
                 ; 0007 0047             readConfig->hostName[i]   = config_prop.hostName[i];
004912 940e c692 	CALL SUBOPT_0xFA
004914 010f      	MOVW R0,R30
                +
004915 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004916 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004917 940e c683 	CALL SUBOPT_0xF8
                 ; 0007 0048         }
                +
004919 5f0f     +SUBI R16 , LOW ( - 1 )
00491a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00491b cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 0049 
                 ; 0007 004A         for(i=0;i<ID_LENGTH;i++)
                +
00491c e000     +LDI R16 , LOW ( 0 )
00491d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
00491e 3104     +CPI R16 , LOW ( 20 )
00491f e0e0     +LDI R30 , HIGH ( 20 )
004920 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004921 f454      	BRGE _0xE001B
                 ; 0007 004B         {
                 ; 0007 004C             readConfig->hostID[i]   = config_prop.hostID[i];
004922 940e c699 	CALL SUBOPT_0xFB
004924 010f      	MOVW R0,R30
                +
004925 e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004926 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004927 940e c683 	CALL SUBOPT_0xF8
                 ; 0007 004D         }
                +
004929 5f0f     +SUBI R16 , LOW ( - 1 )
00492a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00492b cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 004E 
                 ; 0007 004F         readConfig->timeZone   = config_prop.timeZone;
                +
00492c eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
00492d e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
00492e 940e e085 	CALL __EEPROMRDB
                +
004930 81aa     +LDD R26 , Y + 2
004931 81bb     +LDD R27 , Y + 2 + 1
004932 56a0     +SUBI R26 , LOW ( - 160 )
004933 4fbf     +SBCI R27 , HIGH ( - 160 )
004934 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0050     }
                 _0xE000C:
                 ; 0007 0051     return 0;
004935 940e c5bf 	CALL SUBOPT_0xD5
004937 9624      	ADIW R28,4
004938 9508      	RET
                 ; 0007 0052 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0055 {
                 _getOperatingConfig:
                 ; 0007 0056     int i;
                 ; 0007 0057 
                 ; 0007 0058     if( config_oper_flag != 0x01){
004939 940e c3a0 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
00493b e4a3      	LDI  R26,LOW(_config_oper_flag)
00493c e0b5      	LDI  R27,HIGH(_config_oper_flag)
00493d 940e e085 	CALL __EEPROMRDB
00493f 30e1      	CPI  R30,LOW(0x1)
004940 f0d1      	BREQ _0xE001C
                 ; 0007 0059         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
004941 e5e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
004942 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
004943 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
004944 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
004945 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 005A 
                 ; 0007 005B         readConfig->mode                    =   MODE_DATALOGGER;
004947 81aa      	LDD  R26,Y+2
004948 81bb      	LDD  R27,Y+2+1
004949 e2e0      	LDI  R30,LOW(32)
00494a 940e c6a0 	CALL SUBOPT_0xFC
                 ; 0007 005C         readConfig->deviceEnable            =   0x00;
00494c e0e0      	LDI  R30,LOW(0)
00494d 940e c6a5 	CALL SUBOPT_0xFD
                 ; 0007 005D         readConfig->alarmEnable             =   0x00;
                 ; 0007 005E 
                 ; 0007 005F         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
00494f 3005     +CPI R16 , LOW ( 5 )
004950 e0e0     +LDI R30 , HIGH ( 5 )
004951 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004952 f43c      	BRGE _0xE001F
                 ; 0007 0060         {
                 ; 0007 0061             readConfig->sensorEnable[i]     =   0x00;
004953 940e c6ae 	CALL SUBOPT_0xFE
004955 e0a0      	LDI  R26,LOW(0)
004956 83a0      	STD  Z+0,R26
                 ; 0007 0062         }
                +
004957 5f0f     +SUBI R16 , LOW ( - 1 )
004958 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004959 cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0063 
                 ; 0007 0064         /* // -- for test -- //
                 ; 0007 0065         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0066         readConfig->deviceEnable            =   0x01;
                 ; 0007 0067         readConfig->alarmEnable             =   0x01;
                 ; 0007 0068 
                 ; 0007 0069         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006A         {
                 ; 0007 006B             if(i==0){
                 ; 0007 006C                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 006D             }
                 ; 0007 006E             else{
                 ; 0007 006F                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0070             }
                 ; 0007 0071         }
                 ; 0007 0072         */
                 ; 0007 0073     }
                 ; 0007 0074     else{
00495a c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0075         readConfig->mode                    =   config_oper.mode;
00495b eaa1      	LDI  R26,LOW(_config_oper)
00495c e0b0      	LDI  R27,HIGH(_config_oper)
00495d 940e c6b4 	CALL SUBOPT_0xFF
                 ; 0007 0076         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
00495f eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004960 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004961 940e c6ba 	CALL SUBOPT_0x100
                 ; 0007 0077         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
004963 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004964 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004965 940e c6c1 	CALL SUBOPT_0x101
                 ; 0007 0078 
                 ; 0007 0079         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004967 e000     +LDI R16 , LOW ( 0 )
004968 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
004969 3005     +CPI R16 , LOW ( 5 )
00496a e0e0     +LDI R30 , HIGH ( 5 )
00496b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00496c f454      	BRGE _0xE0023
                 ; 0007 007A         {
                 ; 0007 007B             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
00496d 940e c6ae 	CALL SUBOPT_0xFE
00496f 010f      	MOVW R0,R30
                +
004970 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004971 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004972 940e c683 	CALL SUBOPT_0xF8
                 ; 0007 007C         }
                +
004974 5f0f     +SUBI R16 , LOW ( - 1 )
004975 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004976 cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 007D     }
                 _0xE0020:
                 ; 0007 007E 
                 ; 0007 007F 
                 ; 0007 0080     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
004977 e8e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
004978 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
004979 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
00497a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
00497b 940e c6c8 	CALL SUBOPT_0x102
                 ; 0007 0081     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
00497d ebe6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
00497e e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
00497f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
004980 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
004981 940e c6ce 	CALL SUBOPT_0x103
004983 81e1      	LDD  R30,Z+1
004984 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0082     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
004986 eee7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
004987 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
004988 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
004989 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
00498a 940e c6ce 	CALL SUBOPT_0x103
00498c 81e2      	LDD  R30,Z+2
00498d 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0083     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
00498f e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
004990 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
004991 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
004992 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
004993 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0084 
                 ; 0007 0085     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004995 e000     +LDI R16 , LOW ( 0 )
004996 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
004997 3005     +CPI R16 , LOW ( 5 )
004998 e0e0     +LDI R30 , HIGH ( 5 )
004999 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00499a f43c      	BRGE _0xE0026
                 ; 0007 0086     {
                 ; 0007 0087         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
00499b 940e c6d3 	CALL SUBOPT_0x104
00499d 940e c6d8 	CALL SUBOPT_0x105
                 ; 0007 0088     }
                +
00499f 5f0f     +SUBI R16 , LOW ( - 1 )
0049a0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0049a1 cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 0089     printDebug("\r\n");
0049a2 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 008A 
                 ; 0007 008B     return 0;
0049a4 940e c5bf 	CALL SUBOPT_0xD5
0049a6 c4e6      	RJMP _0x20E008E
                 ; 0007 008C }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 008F {
                 _getSensorConfig:
                 ; 0007 0090     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
0049a7 940e c6e2 	CALL SUBOPT_0x107
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
0049a9 f022      	BRMI _0xE0028
0049aa 81aa      	LDD  R26,Y+2
0049ab 81bb      	LDD  R27,Y+2+1
0049ac 9715      	SBIW R26,5
0049ad f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0091         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
0049ae e4ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
0049af e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
0049b0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
0049b1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
0049b2 940e c6ce 	CALL SUBOPT_0x103
0049b4 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 0092         return -1;
0049b6 c4d4      	RJMP _0x20E008F
                 ; 0007 0093     }
                 ; 0007 0094 
                 ; 0007 0095     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
0049b7 81aa      	LDD  R26,Y+2
0049b8 81bb      	LDD  R27,Y+2+1
0049b9 5bac      	SUBI R26,LOW(-_config_sens_flag)
0049ba 4fba      	SBCI R27,HIGH(-_config_sens_flag)
0049bb 940e e085 	CALL __EEPROMRDB
0049bd 30e1      	CPI  R30,LOW(0x1)
0049be f411      	BRNE PC+3
0049bf 940c 4a08 	JMP _0xE002A
                 ; 0007 0096         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
0049c1 e7ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
0049c2 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
0049c3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
0049c4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
0049c5 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0097         readConfig->samplingRate        =   300;
0049c7 81a8      	LD   R26,Y
0049c8 81b9      	LDD  R27,Y+1
0049c9 e2ec      	LDI  R30,LOW(300)
0049ca e0f1      	LDI  R31,HIGH(300)
0049cb 940e c6e7 	CALL SUBOPT_0x108
                 ; 0007 0098         readConfig->reOccurrence        =   0x8000;
0049cd 9612      	ADIW R26,2
0049ce e0e0      	LDI  R30,LOW(32768)
0049cf e8f0      	LDI  R31,HIGH(32768)
0049d0 940e c6e7 	CALL SUBOPT_0x108
                 ; 0007 0099         readConfig->timeStartHour       =   0;
0049d2 9614      	ADIW R26,4
0049d3 940e c6ec 	CALL SUBOPT_0x109
                 ; 0007 009A         readConfig->timeStartMin        =   0;
0049d5 9615      	ADIW R26,5
0049d6 940e c6ec 	CALL SUBOPT_0x109
                 ; 0007 009B         readConfig->timeStopHour        =   0;
0049d8 9616      	ADIW R26,6
0049d9 940e c6ec 	CALL SUBOPT_0x109
                 ; 0007 009C         readConfig->timeStopMin         =   0;
0049db 9617      	ADIW R26,7
0049dc 940e c6ec 	CALL SUBOPT_0x109
                 ; 0007 009D 
                 ; 0007 009E         readConfig->alarmEnable         =   0x00;
0049de 9618      	ADIW R26,8
0049df 940e c6ec 	CALL SUBOPT_0x109
                 ; 0007 009F         readConfig->lowerLimit          =   10.0;
0049e1 9619      	ADIW R26,9
0049e2 940e c6f1 	CALL SUBOPT_0x10A
0049e4 940e e039 	CALL __PUTDP1
                 ; 0007 00A0         readConfig->lowerDelay          =   20;
0049e6 81a8      	LD   R26,Y
0049e7 81b9      	LDD  R27,Y+1
0049e8 961d      	ADIW R26,13
0049e9 e1e4      	LDI  R30,LOW(20)
0049ea e0f0      	LDI  R31,HIGH(20)
0049eb 940e c6e7 	CALL SUBOPT_0x108
                 ; 0007 00A1         readConfig->lowerExtreme        =   0.0;
0049ed 961f      	ADIW R26,15
0049ee 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0007 00A2         readConfig->upperLimit          =   180.0;
0049f0 81a8      	LD   R26,Y
0049f1 81b9      	LDD  R27,Y+1
0049f2 9653      	ADIW R26,19
                +
0049f3 e0e0     +LDI R30 , LOW ( 0x43340000 )
0049f4 e0f0     +LDI R31 , HIGH ( 0x43340000 )
0049f5 e364     +LDI R22 , BYTE3 ( 0x43340000 )
0049f6 e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
0049f7 940e e039 	CALL __PUTDP1
                 ; 0007 00A3         readConfig->upperDelay          =   20;
0049f9 81a8      	LD   R26,Y
0049fa 81b9      	LDD  R27,Y+1
0049fb 9657      	ADIW R26,23
0049fc e1e4      	LDI  R30,LOW(20)
0049fd e0f0      	LDI  R31,HIGH(20)
0049fe 940e c6e7 	CALL SUBOPT_0x108
                 ; 0007 00A4         readConfig->upperExtreme        =   200.0;
004a00 9659      	ADIW R26,25
                +
004a01 e0e0     +LDI R30 , LOW ( 0x43480000 )
004a02 e0f0     +LDI R31 , HIGH ( 0x43480000 )
004a03 e468     +LDI R22 , BYTE3 ( 0x43480000 )
004a04 e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
004a05 940e e039 	CALL __PUTDP1
                 ; 0007 00A5         /*
                 ; 0007 00A6         readConfig->alarmEnable         =   0x00;
                 ; 0007 00A7         readConfig->lowerLimit          =   0.0;
                 ; 0007 00A8         readConfig->lowerDelay          =   10;
                 ; 0007 00A9         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AA         readConfig->upperLimit          =   0.0;
                 ; 0007 00AB         readConfig->upperDelay          =   10;
                 ; 0007 00AC         readConfig->upperExtreme        =   0.0;
                 ; 0007 00AD         */
                 ; 0007 00AE     }
                 ; 0007 00AF     else{
004a07 c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B0         readConfig->samplingRate        =   config_sens[ch].samplingRate;
004a08 940e c6f6 	CALL SUBOPT_0x10B
004a0a 55e7      	SUBI R30,LOW(-_config_sens)
004a0b 4fff      	SBCI R31,HIGH(-_config_sens)
004a0c 01df      	MOVW R26,R30
004a0d 940e e081 	CALL __EEPROMRDW
004a0f 81a8      	LD   R26,Y
004a10 81b9      	LDD  R27,Y+1
004a11 93ed      	ST   X+,R30
004a12 93fc      	ST   X,R31
                 ; 0007 00B1         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
004a13 940e c6f6 	CALL SUBOPT_0x10B
                +
004a15 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004a16 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004a17 01df      	MOVW R26,R30
004a18 940e e081 	CALL __EEPROMRDW
                +
004a1a 81a8     +LDD R26 , Y + 0
004a1b 81b9     +LDD R27 , Y + 0 + 1
004a1c 9612     +ADIW R26 , 2
004a1d 93ed     +ST X + , R30
004a1e 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B2         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
004a1f 940e c6f6 	CALL SUBOPT_0x10B
                +
004a21 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004a22 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004a23 01df      	MOVW R26,R30
004a24 940e e085 	CALL __EEPROMRDB
                +
004a26 81a8     +LDD R26 , Y + 0
004a27 81b9     +LDD R27 , Y + 0 + 1
004a28 9614     +ADIW R26 , 4
004a29 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B3         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
004a2a 940e c6f6 	CALL SUBOPT_0x10B
                +
004a2c 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004a2d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004a2e 01df      	MOVW R26,R30
004a2f 940e e085 	CALL __EEPROMRDB
                +
004a31 81a8     +LDD R26 , Y + 0
004a32 81b9     +LDD R27 , Y + 0 + 1
004a33 9615     +ADIW R26 , 5
004a34 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B4         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
004a35 940e c6f6 	CALL SUBOPT_0x10B
                +
004a37 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004a38 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004a39 01df      	MOVW R26,R30
004a3a 940e e085 	CALL __EEPROMRDB
                +
004a3c 81a8     +LDD R26 , Y + 0
004a3d 81b9     +LDD R27 , Y + 0 + 1
004a3e 9616     +ADIW R26 , 6
004a3f 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B5         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
004a40 940e c6f6 	CALL SUBOPT_0x10B
                +
004a42 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004a43 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004a44 01df      	MOVW R26,R30
004a45 940e e085 	CALL __EEPROMRDB
                +
004a47 81a8     +LDD R26 , Y + 0
004a48 81b9     +LDD R27 , Y + 0 + 1
004a49 9617     +ADIW R26 , 7
004a4a 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B6 
                 ; 0007 00B7         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
004a4b 940e c6f6 	CALL SUBOPT_0x10B
                +
004a4d 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004a4e 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004a4f 01df      	MOVW R26,R30
004a50 940e e085 	CALL __EEPROMRDB
                +
004a52 81a8     +LDD R26 , Y + 0
004a53 81b9     +LDD R27 , Y + 0 + 1
004a54 9618     +ADIW R26 , 8
004a55 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00B8         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
004a56 940e c6f6 	CALL SUBOPT_0x10B
004a58 940e c6fc 	CALL SUBOPT_0x10C
                +
004a5a 81a8     +LDD R26 , Y + 0
004a5b 81b9     +LDD R27 , Y + 0 + 1
004a5c 9619     +ADIW R26 , 9
004a5d 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00B9         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004a5f 940e c6f6 	CALL SUBOPT_0x10B
004a61 940e c702 	CALL SUBOPT_0x10D
                +
004a63 81a8     +LDD R26 , Y + 0
004a64 81b9     +LDD R27 , Y + 0 + 1
004a65 961d     +ADIW R26 , 13
004a66 93ed     +ST X + , R30
004a67 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BA         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
004a68 940e c6f6 	CALL SUBOPT_0x10B
004a6a 940e c708 	CALL SUBOPT_0x10E
                +
004a6c 81a8     +LDD R26 , Y + 0
004a6d 81b9     +LDD R27 , Y + 0 + 1
004a6e 961f     +ADIW R26 , 15
004a6f 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BB         readConfig->upperLimit          =   config_sens[ch].upperLimit;
004a71 940e c6f6 	CALL SUBOPT_0x10B
004a73 940e c70e 	CALL SUBOPT_0x10F
                +
004a75 81a8     +LDD R26 , Y + 0
004a76 81b9     +LDD R27 , Y + 0 + 1
004a77 9653     +ADIW R26 , 19
004a78 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BC         readConfig->upperDelay          =   config_sens[ch].upperDelay;
004a7a 940e c6f6 	CALL SUBOPT_0x10B
004a7c 940e c714 	CALL SUBOPT_0x110
                +
004a7e 81a8     +LDD R26 , Y + 0
004a7f 81b9     +LDD R27 , Y + 0 + 1
004a80 9657     +ADIW R26 , 23
004a81 93ed     +ST X + , R30
004a82 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00BD         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
004a83 940e c6f6 	CALL SUBOPT_0x10B
004a85 940e c71a 	CALL SUBOPT_0x111
                +
004a87 81a8     +LDD R26 , Y + 0
004a88 81b9     +LDD R27 , Y + 0 + 1
004a89 9659     +ADIW R26 , 25
004a8a 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00BE     }
                 _0xE002B:
                 ; 0007 00BF     return 0;
004a8c e0e0      	LDI  R30,LOW(0)
004a8d e0f0      	LDI  R31,HIGH(0)
004a8e c3fe      	RJMP _0x20E008E
                 ; 0007 00C0 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C3 {
                 _getAuxDinConfig:
                 ; 0007 00C4     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
004a8f 940e c6e2 	CALL SUBOPT_0x107
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004a91 f022      	BRMI _0xE002D
004a92 81aa      	LDD  R26,Y+2
004a93 81bb      	LDD  R27,Y+2+1
004a94 9750      	SBIW R26,16
004a95 f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C5         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
004a96 ebe1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
004a97 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
004a98 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
004a99 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
004a9a 940e c6ce 	CALL SUBOPT_0x103
004a9c 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 00C6         return -1;
004a9e c3ec      	RJMP _0x20E008F
                 ; 0007 00C7     }
                 ; 0007 00C8 
                 ; 0007 00C9     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
004a9f 81aa      	LDD  R26,Y+2
004aa0 81bb      	LDD  R27,Y+2+1
004aa1 5ba7      	SUBI R26,LOW(-_config_din_flag)
004aa2 4fba      	SBCI R27,HIGH(-_config_din_flag)
004aa3 940e e085 	CALL __EEPROMRDB
004aa5 30e1      	CPI  R30,LOW(0x1)
004aa6 f071      	BREQ _0xE002F
                 ; 0007 00CA         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
004aa7 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
004aa8 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
004aa9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
004aaa e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
004aab 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 00CB 
                 ; 0007 00CC         readConfig->channelEnable       =   0x00;
004aad 81a8      	LD   R26,Y
004aae 81b9      	LDD  R27,Y+1
004aaf 940e c6ec 	CALL SUBOPT_0x109
                 ; 0007 00CD         readConfig->alarmDelay          =   0;
004ab1 9611      	ADIW R26,1
004ab2 940e c720 	CALL SUBOPT_0x112
                 ; 0007 00CE 
                 ; 0007 00CF         /* // -- for test -- //
                 ; 0007 00D0         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D1         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D2 
                 ; 0007 00D3         readConfig->alarmDelay          =   0;
                 ; 0007 00D4         */
                 ; 0007 00D5     }
                 ; 0007 00D6     else{
004ab4 c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00D7         readConfig->channelEnable       =   config_din[ch].channelEnable;
004ab5 940e c725 	CALL SUBOPT_0x113
004ab7 5ce6      	SUBI R30,LOW(-_config_din)
004ab8 4ffe      	SBCI R31,HIGH(-_config_din)
004ab9 940e c72b 	CALL SUBOPT_0x114
                 ; 0007 00D8         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
004abb 940e c725 	CALL SUBOPT_0x113
                +
004abd 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004abe 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004abf 01df      	MOVW R26,R30
004ac0 940e c732 	CALL SUBOPT_0x115
                 ; 0007 00D9     }
                 _0xE0030:
                 ; 0007 00DA     return 0;
004ac2 e0e0      	LDI  R30,LOW(0)
004ac3 e0f0      	LDI  R31,HIGH(0)
004ac4 c3c8      	RJMP _0x20E008E
                 ; 0007 00DB }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00DE {
                 _getAuxDoutConfig:
                 ; 0007 00DF     int i;
                 ; 0007 00E0 
                 ; 0007 00E1     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
004ac5 940e c3a0 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004ac7 81ad      	LDD  R26,Y+5
004ac8 23aa      	TST  R26
004ac9 f022      	BRMI _0xE0032
004aca 81ac      	LDD  R26,Y+4
004acb 81bd      	LDD  R27,Y+4+1
004acc 9715      	SBIW R26,5
004acd f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E2         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
004ace e1ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
004acf e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
004ad0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
004ad1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
004ad2 940e c73a 	CALL SUBOPT_0x116
                 ; 0007 00E3         return -1;
004ad4 efef      	LDI  R30,LOW(65535)
004ad5 efff      	LDI  R31,HIGH(65535)
004ad6 c144      	RJMP _0x20E0091
                 ; 0007 00E4     }
                 ; 0007 00E5 
                 ; 0007 00E6     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
004ad7 81ac      	LDD  R26,Y+4
004ad8 81bd      	LDD  R27,Y+4+1
004ad9 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004ada 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004adb 940e e085 	CALL __EEPROMRDB
004add 30e1      	CPI  R30,LOW(0x1)
004ade f0d1      	BREQ _0xE0034
                 ; 0007 00E7         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
004adf e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
004ae0 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
004ae1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
004ae2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
004ae3 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 00E8         readConfig->channelEnable       =   0x00;
004ae5 81aa      	LDD  R26,Y+2
004ae6 81bb      	LDD  R27,Y+2+1
004ae7 e0e0      	LDI  R30,LOW(0)
004ae8 940e c6a0 	CALL SUBOPT_0xFC
                 ; 0007 00E9         readConfig->stateOnEvent        =   0x01;
004aea e0e1      	LDI  R30,LOW(1)
004aeb 940e c6a5 	CALL SUBOPT_0xFD
                 ; 0007 00EA         readConfig->eventSourceNumber   =   0;
                 ; 0007 00EB 
                 ; 0007 00EC         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
004aed 3203     +CPI R16 , LOW ( 35 )
004aee e0e0     +LDI R30 , HIGH ( 35 )
004aef 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004af0 f43c      	BRGE _0xE0037
                 ; 0007 00ED             readConfig->eventSource[i]  =   0x00;
004af1 940e c6ae 	CALL SUBOPT_0xFE
004af3 e0a0      	LDI  R26,LOW(0)
004af4 83a0      	STD  Z+0,R26
                 ; 0007 00EE         }
                +
004af5 5f0f     +SUBI R16 , LOW ( - 1 )
004af6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004af7 cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00EF     }
                 ; 0007 00F0     else{
004af8 c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F1         readConfig->channelEnable       =   config_dout[ch].channelEnable;
004af9 940e c73f 	CALL SUBOPT_0x117
004afb 59e6      	SUBI R30,LOW(-_config_dout)
004afc 4ffe      	SBCI R31,HIGH(-_config_dout)
004afd 01df      	MOVW R26,R30
004afe 940e c6b4 	CALL SUBOPT_0xFF
                 ; 0007 00F2         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
004b00 940e c73f 	CALL SUBOPT_0x117
                +
004b02 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004b03 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004b04 01df      	MOVW R26,R30
004b05 940e c6ba 	CALL SUBOPT_0x100
                 ; 0007 00F3         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
004b07 940e c73f 	CALL SUBOPT_0x117
                +
004b09 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004b0a 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004b0b 01df      	MOVW R26,R30
004b0c 940e c6c1 	CALL SUBOPT_0x101
                 ; 0007 00F4 
                 ; 0007 00F5         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
004b0e e9e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
004b0f e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
004b10 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
004b11 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
004b12 940e c73a 	CALL SUBOPT_0x116
                 ; 0007 00F6         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
004b14 ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
004b15 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
004b16 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
004b17 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
004b18 940e c745 	CALL SUBOPT_0x118
004b1a 940e c74d 	CALL SUBOPT_0x119
                 ; 0007 00F7         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
004b1c edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
004b1d e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
004b1e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
004b1f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
004b20 940e c745 	CALL SUBOPT_0x118
004b22 940e c753 	CALL SUBOPT_0x11A
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
004b24 e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
004b25 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
004b26 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
004b27 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
004b28 940e c745 	CALL SUBOPT_0x118
004b2a 940e c759 	CALL SUBOPT_0x11B
004b2c 940e c143 	CALL SUBOPT_0x29
                 ; 0007 00F9         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004b2e e000     +LDI R16 , LOW ( 0 )
004b2f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
004b30 940e c73f 	CALL SUBOPT_0x117
004b32 940e c759 	CALL SUBOPT_0x11B
004b34 940e c75f 	CALL SUBOPT_0x11C
004b36 f4a4      	BRGE _0xE003B
                 ; 0007 00FA             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
004b37 940e c6ae 	CALL SUBOPT_0xFE
                +
004b39 2f7e     +MOV R23 , R30
004b3a 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004b3b 940e c73f 	CALL SUBOPT_0x117
004b3d 940e c764 	CALL SUBOPT_0x11D
004b3f 940e e085 	CALL __EEPROMRDB
                +
004b41 2fa7     +MOV R26 , R23
004b42 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004b43 93ec      	ST   X,R30
                 ; 0007 00FB             printDebug("[0x%02X]",readConfig->eventSource[i]);
004b44 940e c6d3 	CALL SUBOPT_0x104
004b46 940e c6d8 	CALL SUBOPT_0x105
                 ; 0007 00FC         }
                +
004b48 5f0f     +SUBI R16 , LOW ( - 1 )
004b49 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b4a cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 00FD         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004b4b 940e c73f 	CALL SUBOPT_0x117
004b4d 940e c759 	CALL SUBOPT_0x11B
004b4f 2f0e      	MOV  R16,R30
004b50 2711      	CLR  R17
                 _0xE003D:
                +
004b51 3203     +CPI R16 , LOW ( 35 )
004b52 e0e0     +LDI R30 , HIGH ( 35 )
004b53 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004b54 f43c      	BRGE _0xE003E
                 ; 0007 00FE             readConfig->eventSource[i]  =   0x00;
004b55 940e c6ae 	CALL SUBOPT_0xFE
004b57 e0a0      	LDI  R26,LOW(0)
004b58 83a0      	STD  Z+0,R26
                 ; 0007 00FF             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0100         }
                +
004b59 5f0f     +SUBI R16 , LOW ( - 1 )
004b5a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b5b cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0101         printDebug("\r\n");
004b5c 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 0102 
                 ; 0007 0103     }
                 _0xE0038:
                 ; 0007 0104     return 0;
004b5e c0ba      	RJMP _0x20E0092
                 ; 0007 0105 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 0108 {
                 _getAuxAinConfig:
                 ; 0007 0109     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004b5f 940e c6e2 	CALL SUBOPT_0x107
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004b61 f022      	BRMI _0xE0040
004b62 81aa      	LDD  R26,Y+2
004b63 81bb      	LDD  R27,Y+2+1
004b64 9750      	SBIW R26,16
004b65 f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010A         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004b66 e3e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004b67 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004b68 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
004b69 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
004b6a 940e c6ce 	CALL SUBOPT_0x103
004b6c 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 010B         return -1;
004b6e c31c      	RJMP _0x20E008F
                 ; 0007 010C     }
                 ; 0007 010D 
                 ; 0007 010E     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004b6f 81aa      	LDD  R26,Y+2
004b70 81bb      	LDD  R27,Y+2+1
004b71 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004b72 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004b73 940e e085 	CALL __EEPROMRDB
004b75 30e1      	CPI  R30,LOW(0x1)
004b76 f071      	BREQ _0xE0042
                 ; 0007 010F         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
004b77 e7e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
004b78 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
004b79 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
004b7a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
004b7b 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0110         readConfig->channelEnable       =   0x00;
004b7d 81a8      	LD   R26,Y
004b7e 81b9      	LDD  R27,Y+1
004b7f 940e c6ec 	CALL SUBOPT_0x109
                 ; 0007 0111         readConfig->alarmLevel          =   0;
004b81 9611      	ADIW R26,1
004b82 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0007 0112     }
                 ; 0007 0113     else{
004b84 c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0114         readConfig->channelEnable       =   config_ain[ch].channelEnable;
004b85 940e c76a 	CALL SUBOPT_0x11E
004b87 5de8      	SUBI R30,LOW(-_config_ain)
004b88 4ffd      	SBCI R31,HIGH(-_config_ain)
004b89 940e c72b 	CALL SUBOPT_0x114
                 ; 0007 0115         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
004b8b 940e c76a 	CALL SUBOPT_0x11E
                +
004b8d 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004b8e 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004b8f 01df      	MOVW R26,R30
004b90 940e e07d 	CALL __EEPROMRDD
                +
004b92 81a8     +LDD R26 , Y + 0
004b93 81b9     +LDD R27 , Y + 0 + 1
004b94 9611     +ADIW R26 , 1
004b95 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0116     }
                 _0xE0043:
                 ; 0007 0117     return 0;
004b97 e0e0      	LDI  R30,LOW(0)
004b98 e0f0      	LDI  R31,HIGH(0)
004b99 c2f3      	RJMP _0x20E008E
                 ; 0007 0118 }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011B {
                 _getAuxAoutConfig:
                 ; 0007 011C     int i;
                 ; 0007 011D 
                 ; 0007 011E     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
004b9a 940e c3a0 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004b9c 81ad      	LDD  R26,Y+5
004b9d 23aa      	TST  R26
004b9e f022      	BRMI _0xE0045
004b9f 81ac      	LDD  R26,Y+4
004ba0 81bd      	LDD  R27,Y+4+1
004ba1 9750      	SBIW R26,16
004ba2 f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 011F         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
004ba3 eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
004ba4 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
004ba5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
004ba6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
004ba7 940e c73a 	CALL SUBOPT_0x116
                 ; 0007 0120         return -1;
004ba9 efef      	LDI  R30,LOW(65535)
004baa efff      	LDI  R31,HIGH(65535)
004bab c06f      	RJMP _0x20E0091
                 ; 0007 0121     }
                 ; 0007 0122 
                 ; 0007 0123     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
004bac 81ac      	LDD  R26,Y+4
004bad 81bd      	LDD  R27,Y+4+1
004bae 59a2      	SUBI R26,LOW(-_config_aout_flag)
004baf 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004bb0 940e e085 	CALL __EEPROMRDB
004bb2 30e1      	CPI  R30,LOW(0x1)
004bb3 f101      	BREQ _0xE0047
                 ; 0007 0124         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
004bb4 edef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
004bb5 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
004bb6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
004bb7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
004bb8 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0125         readConfig->channelEnable       =   0x00;
004bba 81aa      	LDD  R26,Y+2
004bbb 81bb      	LDD  R27,Y+2+1
004bbc e0e0      	LDI  R30,LOW(0)
004bbd 940e c6a0 	CALL SUBOPT_0xFC
                 ; 0007 0126         readConfig->levelOnEvent        =   0.0;
004bbf 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0007 0127         readConfig->eventSourceNumber   =   0;
004bc1 81aa      	LDD  R26,Y+2
004bc2 81bb      	LDD  R27,Y+2+1
004bc3 9615      	ADIW R26,5
004bc4 e0e0      	LDI  R30,LOW(0)
004bc5 93ec      	ST   X,R30
                 ; 0007 0128 
                 ; 0007 0129         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004bc6 e000     +LDI R16 , LOW ( 0 )
004bc7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
004bc8 3203     +CPI R16 , LOW ( 35 )
004bc9 e0e0     +LDI R30 , HIGH ( 35 )
004bca 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004bcb f43c      	BRGE _0xE004A
                 ; 0007 012A             readConfig->eventSource[i]  =   0x00;
004bcc 940e c770 	CALL SUBOPT_0x11F
004bce e0a0      	LDI  R26,LOW(0)
004bcf 83a0      	STD  Z+0,R26
                 ; 0007 012B         }
                +
004bd0 5f0f     +SUBI R16 , LOW ( - 1 )
004bd1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bd2 cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012C     }
                 ; 0007 012D     else{
004bd3 c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 012E         readConfig->channelEnable       =   config_aout[ch].channelEnable;
004bd4 940e c776 	CALL SUBOPT_0x120
004bd6 58e8      	SUBI R30,LOW(-_config_aout)
004bd7 4ffd      	SBCI R31,HIGH(-_config_aout)
004bd8 01df      	MOVW R26,R30
004bd9 940e c6b4 	CALL SUBOPT_0xFF
                 ; 0007 012F         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
004bdb 940e c776 	CALL SUBOPT_0x120
                +
004bdd 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004bde 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004bdf 01df      	MOVW R26,R30
004be0 940e e07d 	CALL __EEPROMRDD
                +
004be2 81aa     +LDD R26 , Y + 2
004be3 81bb     +LDD R27 , Y + 2 + 1
004be4 9611     +ADIW R26 , 1
004be5 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0130         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
004be7 940e c776 	CALL SUBOPT_0x120
004be9 940e c77c 	CALL SUBOPT_0x121
                +
004beb 81aa     +LDD R26 , Y + 2
004bec 81bb     +LDD R27 , Y + 2 + 1
004bed 9615     +ADIW R26 , 5
004bee 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0131 
                 ; 0007 0132         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004bef e000     +LDI R16 , LOW ( 0 )
004bf0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
004bf1 940e c776 	CALL SUBOPT_0x120
004bf3 940e c77c 	CALL SUBOPT_0x121
004bf5 940e c75f 	CALL SUBOPT_0x11C
004bf7 f484      	BRGE _0xE004E
                 ; 0007 0133             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
004bf8 940e c770 	CALL SUBOPT_0x11F
                +
004bfa 2f7e     +MOV R23 , R30
004bfb 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004bfc 940e c776 	CALL SUBOPT_0x120
004bfe 940e c782 	CALL SUBOPT_0x122
004c00 940e e085 	CALL __EEPROMRDB
                +
004c02 2fa7     +MOV R26 , R23
004c03 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004c04 93ec      	ST   X,R30
                 ; 0007 0134         }
                +
004c05 5f0f     +SUBI R16 , LOW ( - 1 )
004c06 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c07 cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0135         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004c08 940e c776 	CALL SUBOPT_0x120
004c0a 940e c77c 	CALL SUBOPT_0x121
004c0c 2f0e      	MOV  R16,R30
004c0d 2711      	CLR  R17
                 _0xE0050:
                +
004c0e 3203     +CPI R16 , LOW ( 35 )
004c0f e0e0     +LDI R30 , HIGH ( 35 )
004c10 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c11 f43c      	BRGE _0xE0051
                 ; 0007 0136             readConfig->eventSource[i]  =   0x00;
004c12 940e c770 	CALL SUBOPT_0x11F
004c14 e0a0      	LDI  R26,LOW(0)
004c15 83a0      	STD  Z+0,R26
                 ; 0007 0137         }
                +
004c16 5f0f     +SUBI R16 , LOW ( - 1 )
004c17 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c18 cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 0138     }
                 _0xE004B:
                 ; 0007 0139     return 0;
                 _0x20E0092:
004c19 e0e0      	LDI  R30,LOW(0)
004c1a e0f0      	LDI  R31,HIGH(0)
                 _0x20E0091:
004c1b 8119      	LDD  R17,Y+1
004c1c 8108      	LDD  R16,Y+0
004c1d 9626      	ADIW R28,6
004c1e 9508      	RET
                 ; 0007 013A }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 013D {
                 _getBuzzerConfig:
                 ; 0007 013E     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 013F     int i;
                 ; 0007 0140 
                 ; 0007 0141     if( config_buzz_flag != 0x01){
004c1f 93ba      	ST   -Y,R27
004c20 93aa      	ST   -Y,R26
004c21 9724      	SBIW R28,4
004c22 ece7      	LDI  R30,LOW(199)
004c23 83e8      	ST   Y,R30
004c24 ecef      	LDI  R30,LOW(207)
004c25 83e9      	STD  Y+1,R30
004c26 ede7      	LDI  R30,LOW(215)
004c27 83ea      	STD  Y+2,R30
004c28 edef      	LDI  R30,LOW(223)
004c29 83eb      	STD  Y+3,R30
004c2a 931a      	ST   -Y,R17
004c2b 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
004c2c e7ae      	LDI  R26,LOW(_config_buzz_flag)
004c2d e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004c2e 940e e085 	CALL __EEPROMRDB
004c30 30e1      	CPI  R30,LOW(0x1)
004c31 f141      	BREQ _0xE0052
                 ; 0007 0142         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
004c32 e1e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
004c33 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
004c34 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
004c35 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
004c36 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0143         readConfig->enable              =   0x01;
004c38 81ae      	LDD  R26,Y+6
004c39 81bf      	LDD  R27,Y+6+1
004c3a e0e1      	LDI  R30,LOW(1)
004c3b 93ec      	ST   X,R30
                 ; 0007 0144         readConfig->eventSourceNumber   =   sizeof(errSrc);
004c3c 9611      	ADIW R26,1
004c3d e0e4      	LDI  R30,LOW(4)
004c3e 93ec      	ST   X,R30
                 ; 0007 0145 
                 ; 0007 0146         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 0147         for(i=0;i<sizeof(errSrc);i++){
                +
004c3f e000     +LDI R16 , LOW ( 0 )
004c40 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
004c41 3004     +CPI R16 , LOW ( 4 )
004c42 e0e0     +LDI R30 , HIGH ( 4 )
004c43 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004c44 f4a4      	BRGE _0xE0055
                 ; 0007 0148             if(i<sizeof(errSrc)){
                +
004c45 3004     +CPI R16 , LOW ( 4 )
004c46 e0e0     +LDI R30 , HIGH ( 4 )
004c47 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004c48 f44c      	BRGE _0xE0056
                 ; 0007 0149                 readConfig->eventSource[i]  =   errSrc[i];
004c49 940e c788 	CALL SUBOPT_0x123
004c4b 010f      	MOVW R0,R30
004c4c 940e c78e 	CALL SUBOPT_0x124
004c4e 91ec      	LD   R30,X
004c4f 01d0      	MOVW R26,R0
004c50 93ec      	ST   X,R30
                 ; 0007 014A                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014B             }
                 ; 0007 014C             else{
004c51 c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 014D                 readConfig->eventSource[i]  =   0x00;
004c52 940e c788 	CALL SUBOPT_0x123
004c54 e0a0      	LDI  R26,LOW(0)
004c55 83a0      	STD  Z+0,R26
                 ; 0007 014E             }
                 _0xE0057:
                 ; 0007 014F         }
                +
004c56 5f0f     +SUBI R16 , LOW ( - 1 )
004c57 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c58 cfe8      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0150         //printDebug("\r\n");
                 ; 0007 0151     }
                 ; 0007 0152     else{
004c59 c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0153         readConfig->enable              =   config_buzz.enable;
004c5a e0a8      	LDI  R26,LOW(_config_buzz)
004c5b e0b5      	LDI  R27,HIGH(_config_buzz)
004c5c 940e e085 	CALL __EEPROMRDB
004c5e 81ae      	LDD  R26,Y+6
004c5f 81bf      	LDD  R27,Y+6+1
004c60 93ec      	ST   X,R30
                 ; 0007 0154         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
004c61 940e c793 	CALL SUBOPT_0x125
                +
004c63 81ae     +LDD R26 , Y + 6
004c64 81bf     +LDD R27 , Y + 6 + 1
004c65 9611     +ADIW R26 , 1
004c66 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0155 
                 ; 0007 0156         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004c67 e000     +LDI R16 , LOW ( 0 )
004c68 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004c69 940e c793 	CALL SUBOPT_0x125
004c6b 940e c75f 	CALL SUBOPT_0x11C
004c6d f454      	BRGE _0xE005B
                 ; 0007 0157             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
004c6e 940e c788 	CALL SUBOPT_0x123
004c70 010f      	MOVW R0,R30
                +
004c71 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
004c72 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
004c73 940e c683 	CALL SUBOPT_0xF8
                 ; 0007 0158         }
                +
004c75 5f0f     +SUBI R16 , LOW ( - 1 )
004c76 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c77 cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 0159         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004c78 940e c793 	CALL SUBOPT_0x125
004c7a 2f0e      	MOV  R16,R30
004c7b 2711      	CLR  R17
                 _0xE005D:
                +
004c7c 3203     +CPI R16 , LOW ( 35 )
004c7d e0e0     +LDI R30 , HIGH ( 35 )
004c7e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004c7f f43c      	BRGE _0xE005E
                 ; 0007 015A             readConfig->eventSource[i]  =   0x00;
004c80 940e c788 	CALL SUBOPT_0x123
004c82 e0a0      	LDI  R26,LOW(0)
004c83 83a0      	STD  Z+0,R26
                 ; 0007 015B         }
                +
004c84 5f0f     +SUBI R16 , LOW ( - 1 )
004c85 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004c86 cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015C     }
                 _0xE0058:
                 ; 0007 015D 
                 ; 0007 015E     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
004c87 e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
004c88 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
004c89 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
004c8a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
004c8b 940e c798 	CALL SUBOPT_0x126
004c8d 91ec      	LD   R30,X
004c8e 940e c143 	CALL SUBOPT_0x29
                 ; 0007 015F     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
004c90 e7e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
004c91 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
004c92 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
004c93 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
004c94 940e c79d 	CALL SUBOPT_0x127
004c96 81e1      	LDD  R30,Z+1
004c97 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0160     printDebug("<getBuzzerConfig> eventSource       >>");
                +
004c99 eae2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
004c9a e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
004c9b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
004c9c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
004c9d 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0161     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004c9f e000     +LDI R16 , LOW ( 0 )
004ca0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
004ca1 3203     +CPI R16 , LOW ( 35 )
004ca2 e0e0     +LDI R30 , HIGH ( 35 )
004ca3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004ca4 f45c      	BRGE _0xE0061
                 ; 0007 0162         printDebug("[0x%02X]",readConfig->eventSource[i]);
004ca5 940e c7a2 	CALL SUBOPT_0x128
004ca7 940e c79d 	CALL SUBOPT_0x127
004ca9 940e c7a7 	CALL SUBOPT_0x129
004cab 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0163     }
                +
004cad 5f0f     +SUBI R16 , LOW ( - 1 )
004cae 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004caf cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0164     printDebug("\r\n");
004cb0 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 0165 
                 ; 0007 0166     return 0;
004cb2 940e c5bf 	CALL SUBOPT_0xD5
004cb4 9628      	ADIW R28,8
004cb5 9508      	RET
                 ; 0007 0167 }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016A {
                 _getEnvAlarmConfig:
                 ; 0007 016B     if( config_alm_flag != 0x01 ){
004cb6 93ba      	ST   -Y,R27
004cb7 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004cb8 e7af      	LDI  R26,LOW(_config_alm_flag)
004cb9 e0b5      	LDI  R27,HIGH(_config_alm_flag)
004cba 940e e085 	CALL __EEPROMRDB
004cbc 30e1      	CPI  R30,LOW(0x1)
004cbd f121      	BREQ _0xE0062
                 ; 0007 016C         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
004cbe ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
004cbf e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
004cc0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
004cc1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
004cc2 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 016D         readConfig->gsmRSSILevel         =   0;
004cc4 81a8      	LD   R26,Y
004cc5 81b9      	LDD  R27,Y+1
004cc6 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0007 016E         readConfig->gsmCreditBalance     =   0;
004cc8 81a8      	LD   R26,Y
004cc9 81b9      	LDD  R27,Y+1
004cca 9614      	ADIW R26,4
004ccb e0e0      	LDI  R30,LOW(0)
004ccc e0f0      	LDI  R31,HIGH(0)
004ccd 940e c6e7 	CALL SUBOPT_0x108
                 ; 0007 016F         readConfig->batteryLevel         =   0;
004ccf 9616      	ADIW R26,6
004cd0 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0007 0170         readConfig->commSignalLevel      =   0;
004cd2 81a8      	LD   R26,Y
004cd3 81b9      	LDD  R27,Y+1
004cd4 961a      	ADIW R26,10
004cd5 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0007 0171         readConfig->commLostDelay        =   0;
004cd7 81a8      	LD   R26,Y
004cd8 81b9      	LDD  R27,Y+1
004cd9 961e      	ADIW R26,14
004cda e0e0      	LDI  R30,LOW(0)
004cdb e0f0      	LDI  R31,HIGH(0)
004cdc 940e c6e7 	CALL SUBOPT_0x108
                 ; 0007 0172         readConfig->memoryMin            =   0;
004cde 9650      	ADIW R26,16
004cdf 940e c720 	CALL SUBOPT_0x112
                 ; 0007 0173     }
                 ; 0007 0174     else{
004ce1 c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0175         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
004ce2 e2ad      	LDI  R26,LOW(_config_alm)
004ce3 e0b5      	LDI  R27,HIGH(_config_alm)
004ce4 940e e07d 	CALL __EEPROMRDD
004ce6 81a8      	LD   R26,Y
004ce7 81b9      	LDD  R27,Y+1
004ce8 940e e039 	CALL __PUTDP1
                 ; 0007 0176         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004cea e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004ceb e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004cec 940e e081 	CALL __EEPROMRDW
                +
004cee 81a8     +LDD R26 , Y + 0
004cef 81b9     +LDD R27 , Y + 0 + 1
004cf0 9614     +ADIW R26 , 4
004cf1 93ed     +ST X + , R30
004cf2 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 0177         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
004cf3 e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004cf4 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004cf5 940e e07d 	CALL __EEPROMRDD
                +
004cf7 81a8     +LDD R26 , Y + 0
004cf8 81b9     +LDD R27 , Y + 0 + 1
004cf9 9616     +ADIW R26 , 6
004cfa 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 0178         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004cfc e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004cfd e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004cfe 940e e07d 	CALL __EEPROMRDD
                +
004d00 81a8     +LDD R26 , Y + 0
004d01 81b9     +LDD R27 , Y + 0 + 1
004d02 961a     +ADIW R26 , 10
004d03 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 0179         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004d05 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004d06 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004d07 940e e081 	CALL __EEPROMRDW
                +
004d09 81a8     +LDD R26 , Y + 0
004d0a 81b9     +LDD R27 , Y + 0 + 1
004d0b 961e     +ADIW R26 , 14
004d0c 93ed     +ST X + , R30
004d0d 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017A         readConfig->memoryMin            =   config_alm.memoryMin;
                +
004d0e e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004d0f e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004d10 940e e081 	CALL __EEPROMRDW
                +
004d12 81a8     +LDD R26 , Y + 0
004d13 81b9     +LDD R27 , Y + 0 + 1
004d14 9650     +ADIW R26 , 16
004d15 93ed     +ST X + , R30
004d16 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017B     }
                 _0xE0063:
                 ; 0007 017C 
                 ; 0007 017D     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004d17 efed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004d18 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004d19 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004d1a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004d1b 940e c7ac 	CALL SUBOPT_0x12A
004d1d 940e c7b1 	CALL SUBOPT_0x12B
                 ; 0007 017E     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
004d1f e2ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
004d20 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
004d21 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
004d22 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
004d23 940e c7ac 	CALL SUBOPT_0x12A
004d25 9614      	ADIW R26,4
004d26 940e c7b6 	CALL SUBOPT_0x12C
                 ; 0007 017F     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004d28 e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004d29 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004d2a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004d2b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004d2c 940e c7b9 	CALL SUBOPT_0x12D
004d2e 940e c7be 	CALL SUBOPT_0x12E
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
004d30 e8ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
004d31 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
004d32 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
004d33 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004d34 940e c7b9 	CALL SUBOPT_0x12D
004d36 940e c7c5 	CALL SUBOPT_0x12F
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004d38 ebed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004d39 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004d3a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004d3b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004d3c 940e c7ac 	CALL SUBOPT_0x12A
004d3e 961e      	ADIW R26,14
004d3f 940e c7b6 	CALL SUBOPT_0x12C
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
004d41 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
004d42 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
004d43 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004d44 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004d45 940e c7ac 	CALL SUBOPT_0x12A
004d47 9650      	ADIW R26,16
004d48 c033      	RJMP _0x20E0090
                 ; 0007 0183 
                 ; 0007 0184     return 0;
                 ; 0007 0185 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 0188 {
                 _getStatusReportConfig:
                 ; 0007 0189     if( config_stat_flag != 0x01 ){
004d49 93ba      	ST   -Y,R27
004d4a 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004d4b e8a0      	LDI  R26,LOW(_config_stat_flag)
004d4c e0b5      	LDI  R27,HIGH(_config_stat_flag)
004d4d 940e e085 	CALL __EEPROMRDB
004d4f 30e1      	CPI  R30,LOW(0x1)
004d50 f081      	BREQ _0xE0064
                 ; 0007 018A         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
004d51 e1ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
004d52 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
004d53 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004d54 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004d55 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 018B         readConfig->accm                =   0x30;
004d57 81a8      	LD   R26,Y
004d58 81b9      	LDD  R27,Y+1
004d59 e3e0      	LDI  R30,LOW(48)
004d5a 93ec      	ST   X,R30
                 ; 0007 018C         readConfig->intv                =   60;
004d5b 9611      	ADIW R26,1
004d5c e3ec      	LDI  R30,LOW(60)
004d5d e0f0      	LDI  R31,HIGH(60)
004d5e 93ed      	ST   X+,R30
004d5f 93fc      	ST   X,R31
                 ; 0007 018D     }
                 ; 0007 018E     else{
004d60 c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 018F         readConfig->accm                =   config_stat.accm;
004d61 e3af      	LDI  R26,LOW(_config_stat)
004d62 e0b5      	LDI  R27,HIGH(_config_stat)
004d63 940e e085 	CALL __EEPROMRDB
004d65 81a8      	LD   R26,Y
004d66 81b9      	LDD  R27,Y+1
004d67 93ec      	ST   X,R30
                 ; 0007 0190         readConfig->intv                =   config_stat.intv;
                +
004d68 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004d69 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004d6a 940e c732 	CALL SUBOPT_0x115
                 ; 0007 0191     }
                 _0xE0065:
                 ; 0007 0192 
                 ; 0007 0193     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004d6c e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004d6d e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
004d6e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
004d6f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
004d70 940e c7ac 	CALL SUBOPT_0x12A
004d72 91ec      	LD   R30,X
004d73 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0194     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
004d75 e8e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
004d76 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
004d77 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
004d78 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
004d79 940e c7ac 	CALL SUBOPT_0x12A
004d7b 9611      	ADIW R26,1
                 _0x20E0090:
004d7c 940e e02a 	CALL __GETW1P
004d7e 940e c191 	CALL SUBOPT_0x34
004d80 940e c0a5 	CALL SUBOPT_0x12
                 ; 0007 0195 
                 ; 0007 0196     return 0;
004d82 e0e0      	LDI  R30,LOW(0)
004d83 e0f0      	LDI  R31,HIGH(0)
004d84 9622      	ADIW R28,2
004d85 9508      	RET
                 ; 0007 0197 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 019F {
                 _setPropertiesConfig:
                 ; 0007 01A0     int i;
                 ; 0007 01A1 
                 ; 0007 01A2     for(i=0;i<DEVTYPE_LENGTH;i++)
004d86 940e c3a0 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
004d88 e000     +LDI R16 , LOW ( 0 )
004d89 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
004d8a 3104     +CPI R16 , LOW ( 20 )
004d8b e0e0     +LDI R30 , HIGH ( 20 )
004d8c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004d8d f474      	BRGE _0xE0068
                 ; 0007 01A3     {
                 ; 0007 01A4         config_prop.deviceType[i]       = newConfig->deviceType[i];
004d8e 01f8      	MOVW R30,R16
004d8f 50e0      	SUBI R30,LOW(-_config_prop)
004d90 40f0      	SBCI R31,HIGH(-_config_prop)
004d91 010f      	MOVW R0,R30
004d92 01f8      	MOVW R30,R16
004d93 81aa      	LDD  R26,Y+2
004d94 81bb      	LDD  R27,Y+2+1
004d95 940e c7cc 	CALL SUBOPT_0x130
004d97 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01A5     }
                +
004d99 5f0f     +SUBI R16 , LOW ( - 1 )
004d9a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d9b cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A6 
                 ; 0007 01A7     /*
                 ; 0007 01A8     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01A9     {
                 ; 0007 01AA         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AB     }
                 ; 0007 01AC     */
                 ; 0007 01AD 
                 ; 0007 01AE     for(i=0;i<NAME_LENGTH;i++)
                +
004d9c e000     +LDI R16 , LOW ( 0 )
004d9d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
004d9e 3208     +CPI R16 , LOW ( 40 )
004d9f e0e0     +LDI R30 , HIGH ( 40 )
004da0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004da1 f484      	BRGE _0xE006B
                 ; 0007 01AF     {
                 ; 0007 01B0         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
004da2 e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004da3 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004da4 0fe0      	ADD  R30,R16
004da5 1ff1      	ADC  R31,R17
004da6 01df      	MOVW R26,R30
004da7 81ea      	LDD  R30,Y+2
004da8 81fb      	LDD  R31,Y+2+1
004da9 96b8      	ADIW R30,40
004daa 0fe0      	ADD  R30,R16
004dab 1ff1      	ADC  R31,R17
004dac 81e0      	LD   R30,Z
004dad 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01B1     }
                +
004daf 5f0f     +SUBI R16 , LOW ( - 1 )
004db0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004db1 cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B2 
                 ; 0007 01B3     for(i=0;i<ID_LENGTH;i++)
                +
004db2 e000     +LDI R16 , LOW ( 0 )
004db3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
004db4 3104     +CPI R16 , LOW ( 20 )
004db5 e0e0     +LDI R30 , HIGH ( 20 )
004db6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004db7 f46c      	BRGE _0xE006E
                 ; 0007 01B4     {
                 ; 0007 01B5         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
004db8 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004db9 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004dba 0fe0      	ADD  R30,R16
004dbb 1ff1      	ADC  R31,R17
004dbc 01df      	MOVW R26,R30
004dbd 940e c68b 	CALL SUBOPT_0xF9
004dbf 81e0      	LD   R30,Z
004dc0 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01B6     }
                +
004dc2 5f0f     +SUBI R16 , LOW ( - 1 )
004dc3 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004dc4 cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01B7 
                 ; 0007 01B8     for(i=0;i<NAME_LENGTH;i++)
                +
004dc5 e000     +LDI R16 , LOW ( 0 )
004dc6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
004dc7 3208     +CPI R16 , LOW ( 40 )
004dc8 e0e0     +LDI R30 , HIGH ( 40 )
004dc9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004dca f46c      	BRGE _0xE0071
                 ; 0007 01B9     {
                 ; 0007 01BA         config_prop.hostName[i]         = newConfig->hostName[i];
                +
004dcb e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004dcc e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004dcd 0fe0      	ADD  R30,R16
004dce 1ff1      	ADC  R31,R17
004dcf 01df      	MOVW R26,R30
004dd0 940e c692 	CALL SUBOPT_0xFA
004dd2 81e0      	LD   R30,Z
004dd3 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01BB     }
                +
004dd5 5f0f     +SUBI R16 , LOW ( - 1 )
004dd6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004dd7 cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BC 
                 ; 0007 01BD     for(i=0;i<ID_LENGTH;i++)
                +
004dd8 e000     +LDI R16 , LOW ( 0 )
004dd9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004dda 3104     +CPI R16 , LOW ( 20 )
004ddb e0e0     +LDI R30 , HIGH ( 20 )
004ddc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004ddd f46c      	BRGE _0xE0074
                 ; 0007 01BE     {
                 ; 0007 01BF         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004dde e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004ddf e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004de0 0fe0      	ADD  R30,R16
004de1 1ff1      	ADC  R31,R17
004de2 01df      	MOVW R26,R30
004de3 940e c699 	CALL SUBOPT_0xFB
004de5 81e0      	LD   R30,Z
004de6 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01C0     }
                +
004de8 5f0f     +SUBI R16 , LOW ( - 1 )
004de9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004dea cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C1 
                 ; 0007 01C2     config_prop.timeZone                = newConfig->timeZone;
                +
004deb eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004dec e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004ded 010f      	MOVW R0,R30
004dee 81aa      	LDD  R26,Y+2
004def 81bb      	LDD  R27,Y+2+1
004df0 56a0      	SUBI R26,LOW(-160)
004df1 4fbf      	SBCI R27,HIGH(-160)
004df2 940e c7d1 	CALL SUBOPT_0x131
                 ; 0007 01C3 
                 ; 0007 01C4     config_prop_flag                    = 0x01;
004df4 e4a2      	LDI  R26,LOW(_config_prop_flag)
004df5 e0b5      	LDI  R27,HIGH(_config_prop_flag)
004df6 940e c7d6 	CALL SUBOPT_0x132
                 ; 0007 01C5 
                 ; 0007 01C6     is_properties_config_update          = 1;
004df8 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01C7 
                 ; 0007 01C8     return 0;
004dfa 940e c5bf 	CALL SUBOPT_0xD5
004dfc c090      	RJMP _0x20E008E
                 ; 0007 01C9 }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CC {
                 _setOperatingConfig:
                 ; 0007 01CD     int i;
                 ; 0007 01CE 
                 ; 0007 01CF     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004dfd 940e c3a0 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004dff 81aa      	LDD  R26,Y+2
004e00 81bb      	LDD  R27,Y+2+1
004e01 91ac      	LD   R26,X
004e02 31a0      	CPI  R26,LOW(0x10)
004e03 f029      	BREQ _0xE0076
004e04 81aa      	LDD  R26,Y+2
004e05 81bb      	LDD  R27,Y+2+1
004e06 91ac      	LD   R26,X
004e07 32a0      	CPI  R26,LOW(0x20)
004e08 f409      	BRNE _0xE0077
                 _0xE0076:
004e09 c00b      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D0         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004e0a eaef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004e0b e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004e0c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004e0d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004e0e 940e c6c8 	CALL SUBOPT_0x102
                 ; 0007 01D1         return -1;
004e10 efef      	LDI  R30,LOW(65535)
004e11 efff      	LDI  R31,HIGH(65535)
004e12 8119      	LDD  R17,Y+1
004e13 8108      	LDD  R16,Y+0
004e14 c078      	RJMP _0x20E008E
                 ; 0007 01D2     }
                 ; 0007 01D3 
                 ; 0007 01D4     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004e15 81aa      	LDD  R26,Y+2
004e16 81bb      	LDD  R27,Y+2+1
004e17 91ec      	LD   R30,X
004e18 eaa1      	LDI  R26,LOW(_config_oper)
004e19 e0b0      	LDI  R27,HIGH(_config_oper)
004e1a 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01D5     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004e1c eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004e1d e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004e1e 81ea      	LDD  R30,Y+2
004e1f 81fb      	LDD  R31,Y+2+1
004e20 81e1      	LDD  R30,Z+1
004e21 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01D6     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004e23 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004e24 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004e25 81ea      	LDD  R30,Y+2
004e26 81fb      	LDD  R31,Y+2+1
004e27 81e2      	LDD  R30,Z+2
004e28 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01D7 
                 ; 0007 01D8     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004e2a eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004e2b e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004e2c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004e2d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004e2e 940e e05e 	CALL __PUTPARD1
004e30 eaa1      	LDI  R26,LOW(_config_oper)
004e31 e0b0      	LDI  R27,HIGH(_config_oper)
004e32 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 01D9     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004e34 e0ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004e35 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004e36 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004e37 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004e38 940e e05e 	CALL __PUTPARD1
                +
004e3a eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004e3b e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004e3c 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 01DA     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004e3e 940e c7dd 	CALL SUBOPT_0x134
                +
004e40 eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004e41 e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004e42 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 01DB     printDebug("\r\n sensorEnable    >> ");
                +
004e44 e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004e45 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004e46 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004e47 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004e48 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 01DC 
                 ; 0007 01DD     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004e4a e000     +LDI R16 , LOW ( 0 )
004e4b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004e4c 3005     +CPI R16 , LOW ( 5 )
004e4d e0e0     +LDI R30 , HIGH ( 5 )
004e4e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004e4f f4c4      	BRGE _0xE007A
                 ; 0007 01DE     {
                 ; 0007 01DF         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004e50 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004e51 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004e52 0fe0      	ADD  R30,R16
004e53 1ff1      	ADC  R31,R17
004e54 01df      	MOVW R26,R30
004e55 940e c6ae 	CALL SUBOPT_0xFE
004e57 81e0      	LD   R30,Z
004e58 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 01E0         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004e5a 940e c7a2 	CALL SUBOPT_0x128
004e5c 940e e05e 	CALL __PUTPARD1
                +
004e5e eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004e5f e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004e60 0fe0      	ADD  R30,R16
004e61 1ff1      	ADC  R31,R17
004e62 01df      	MOVW R26,R30
004e63 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 01E1     }
                +
004e65 5f0f     +SUBI R16 , LOW ( - 1 )
004e66 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004e67 cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E2     printDebug("\r\n");
004e68 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 01E3 
                 ; 0007 01E4     config_oper_flag                    =   0x01;
004e6a e4a3      	LDI  R26,LOW(_config_oper_flag)
004e6b e0b5      	LDI  R27,HIGH(_config_oper_flag)
004e6c 940e c7d6 	CALL SUBOPT_0x132
                 ; 0007 01E5 
                 ; 0007 01E6     is_operating_config_update          =   1;
004e6e 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01E7 
                 ; 0007 01E8     return 0;
004e70 940e c5bf 	CALL SUBOPT_0xD5
004e72 c01a      	RJMP _0x20E008E
                 ; 0007 01E9 }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EC {
                 _setSensorConfig:
                 ; 0007 01ED     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004e73 940e c6e2 	CALL SUBOPT_0x107
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004e75 f022      	BRMI _0xE007C
004e76 81aa      	LDD  R26,Y+2
004e77 81bb      	LDD  R27,Y+2+1
004e78 9715      	SBIW R26,5
004e79 f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01EE         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004e7a e5eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004e7b e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004e7c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004e7d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004e7e c008      	RJMP _0x20E008D
                 ; 0007 01EF         return -1;
                 ; 0007 01F0     }
                 ; 0007 01F1     if(newConfig->samplingRate == 0){
                 _0xE007B:
004e7f 940e c7e4 	CALL SUBOPT_0x135
004e81 9730      	SBIW R30,0
004e82 f461      	BRNE _0xE007E
                 ; 0007 01F2         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004e83 e8e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004e84 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004e85 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004e86 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E008D:
004e87 940e e05e 	CALL __PUTPARD1
004e89 940e c19a 	CALL SUBOPT_0x36
                 ; 0007 01F3         return -1;
                 _0x20E008F:
004e8b efef      	LDI  R30,LOW(65535)
004e8c efff      	LDI  R31,HIGH(65535)
                 _0x20E008E:
004e8d 9624      	ADIW R28,4
004e8e 9508      	RET
                 ; 0007 01F4     }
                 ; 0007 01F5 
                 ; 0007 01F6     if(newConfig->samplingRate < 60){
                 _0xE007E:
004e8f 940e c7e4 	CALL SUBOPT_0x135
004e91 97fc      	SBIW R30,60
004e92 f430      	BRSH _0xE007F
                 ; 0007 01F7         newConfig->samplingRate         =   60;
004e93 81a8      	LD   R26,Y
004e94 81b9      	LDD  R27,Y+1
004e95 e3ec      	LDI  R30,LOW(60)
004e96 e0f0      	LDI  R31,HIGH(60)
004e97 93ed      	ST   X+,R30
004e98 93fc      	ST   X,R31
                 ; 0007 01F8     }
                 ; 0007 01F9 
                 ; 0007 01FA     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004e99 940e c6f6 	CALL SUBOPT_0x10B
004e9b 55e7      	SUBI R30,LOW(-_config_sens)
004e9c 4fff      	SBCI R31,HIGH(-_config_sens)
004e9d 010f      	MOVW R0,R30
004e9e 940e c7e4 	CALL SUBOPT_0x135
004ea0 940e c7e9 	CALL SUBOPT_0x136
                 ; 0007 01FB     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004ea2 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004ea3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004ea4 010f      	MOVW R0,R30
004ea5 81a8      	LD   R26,Y
004ea6 81b9      	LDD  R27,Y+1
004ea7 9612      	ADIW R26,2
004ea8 940e c7ed 	CALL SUBOPT_0x137
                 ; 0007 01FC     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004eaa 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004eab 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004eac 01df      	MOVW R26,R30
004ead 81e8      	LD   R30,Y
004eae 81f9      	LDD  R31,Y+1
004eaf 81e4      	LDD  R30,Z+4
004eb0 940e c7f0 	CALL SUBOPT_0x138
                 ; 0007 01FD     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004eb2 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004eb3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004eb4 01df      	MOVW R26,R30
004eb5 81e8      	LD   R30,Y
004eb6 81f9      	LDD  R31,Y+1
004eb7 81e5      	LDD  R30,Z+5
004eb8 940e c7f0 	CALL SUBOPT_0x138
                 ; 0007 01FE     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004eba 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004ebb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004ebc 01df      	MOVW R26,R30
004ebd 81e8      	LD   R30,Y
004ebe 81f9      	LDD  R31,Y+1
004ebf 81e6      	LDD  R30,Z+6
004ec0 940e c7f0 	CALL SUBOPT_0x138
                 ; 0007 01FF     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004ec2 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004ec3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004ec4 01df      	MOVW R26,R30
004ec5 81e8      	LD   R30,Y
004ec6 81f9      	LDD  R31,Y+1
004ec7 81e7      	LDD  R30,Z+7
004ec8 940e c7f0 	CALL SUBOPT_0x138
                 ; 0007 0200 
                 ; 0007 0201     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004eca 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004ecb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004ecc 01df      	MOVW R26,R30
004ecd 81e8      	LD   R30,Y
004ece 81f9      	LDD  R31,Y+1
004ecf 85e0      	LDD  R30,Z+8
004ed0 940e c7f0 	CALL SUBOPT_0x138
                 ; 0007 0202     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004ed2 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004ed3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004ed4 010f      	MOVW R0,R30
004ed5 81a8      	LD   R26,Y
004ed6 81b9      	LDD  R27,Y+1
004ed7 9619      	ADIW R26,9
004ed8 940e c7f3 	CALL SUBOPT_0x139
                 ; 0007 0203     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004eda 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004edb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004edc 010f      	MOVW R0,R30
004edd 81a8      	LD   R26,Y
004ede 81b9      	LDD  R27,Y+1
004edf 961d      	ADIW R26,13
004ee0 940e c7ed 	CALL SUBOPT_0x137
                 ; 0007 0204     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004ee2 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004ee3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004ee4 010f      	MOVW R0,R30
004ee5 81a8      	LD   R26,Y
004ee6 81b9      	LDD  R27,Y+1
004ee7 961f      	ADIW R26,15
004ee8 940e c7f3 	CALL SUBOPT_0x139
                 ; 0007 0205     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004eea 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004eeb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004eec 010f      	MOVW R0,R30
004eed 81a8      	LD   R26,Y
004eee 81b9      	LDD  R27,Y+1
004eef 9653      	ADIW R26,19
004ef0 940e c7f3 	CALL SUBOPT_0x139
                 ; 0007 0206     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004ef2 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004ef3 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004ef4 010f      	MOVW R0,R30
004ef5 81a8      	LD   R26,Y
004ef6 81b9      	LDD  R27,Y+1
004ef7 9657      	ADIW R26,23
004ef8 940e c7ed 	CALL SUBOPT_0x137
                 ; 0007 0207     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004efa 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004efb 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004efc 010f      	MOVW R0,R30
004efd 81a8      	LD   R26,Y
004efe 81b9      	LDD  R27,Y+1
004eff 9659      	ADIW R26,25
004f00 940e c7f9 	CALL SUBOPT_0x13A
                 ; 0007 0208 
                 ; 0007 0209     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004f02 ece4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004f03 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004f04 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004f05 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004f06 940e c7ff 	CALL SUBOPT_0x13B
004f08 55e7      	SUBI R30,LOW(-_config_sens)
004f09 4fff      	SBCI R31,HIGH(-_config_sens)
004f0a 940e c807 	CALL SUBOPT_0x13C
004f0c 940e c0a5 	CALL SUBOPT_0x12
                 ; 0007 020A     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004f0e eee1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004f0f e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004f10 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004f11 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004f12 940e c7ff 	CALL SUBOPT_0x13B
                +
004f14 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004f15 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004f16 940e c807 	CALL SUBOPT_0x13C
004f18 940e c0a5 	CALL SUBOPT_0x12
                 ; 0007 020B     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004f1a efee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004f1b e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004f1c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004f1d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004f1e 940e c7ff 	CALL SUBOPT_0x13B
                +
004f20 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004f21 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004f22 01df      	MOVW R26,R30
004f23 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 020C     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004f25 e1eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004f26 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004f27 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004f28 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004f29 940e c7ff 	CALL SUBOPT_0x13B
                +
004f2b 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004f2c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004f2d 01df      	MOVW R26,R30
004f2e 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 020D     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004f30 e3e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004f31 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004f32 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004f33 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004f34 940e c7ff 	CALL SUBOPT_0x13B
                +
004f36 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004f37 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004f38 01df      	MOVW R26,R30
004f39 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 020E     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
004f3b e5e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
004f3c e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
004f3d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
004f3e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
004f3f 940e c7ff 	CALL SUBOPT_0x13B
                +
004f41 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004f42 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004f43 01df      	MOVW R26,R30
004f44 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 020F 
                 ; 0007 0210     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
004f46 940e c7dd 	CALL SUBOPT_0x134
004f48 81ae      	LDD  R26,Y+6
004f49 81bf      	LDD  R27,Y+6+1
004f4a e1ed      	LDI  R30,LOW(29)
004f4b 940e df7c 	CALL __MULB1W2U
                +
004f4d 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004f4e 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004f4f 01df      	MOVW R26,R30
004f50 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 0211     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
004f52 e7e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
004f53 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
004f54 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
004f55 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
004f56 940e c7ff 	CALL SUBOPT_0x13B
004f58 940e c6fc 	CALL SUBOPT_0x10C
004f5a 940e c798 	CALL SUBOPT_0x126
004f5c e1ed      	LDI  R30,LOW(29)
004f5d 940e df7c 	CALL __MULB1W2U
004f5f 940e c6fc 	CALL SUBOPT_0x10C
004f61 940e c108 	CALL SUBOPT_0x21
                 ; 0007 0212     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
004f63 e9e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
004f64 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
004f65 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
004f66 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
004f67 940e c7ff 	CALL SUBOPT_0x13B
004f69 940e c702 	CALL SUBOPT_0x10D
004f6b 940e c191 	CALL SUBOPT_0x34
004f6d 85aa      	LDD  R26,Y+10
004f6e 85bb      	LDD  R27,Y+10+1
004f6f e1ed      	LDI  R30,LOW(29)
004f70 940e df7c 	CALL __MULB1W2U
004f72 940e c702 	CALL SUBOPT_0x10D
004f74 940e c80b 	CALL SUBOPT_0x13D
                 ; 0007 0213     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
004f76 ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
004f77 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
004f78 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
004f79 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
004f7a 940e c7ff 	CALL SUBOPT_0x13B
004f7c 940e c708 	CALL SUBOPT_0x10E
004f7e 940e c798 	CALL SUBOPT_0x126
004f80 e1ed      	LDI  R30,LOW(29)
004f81 940e df7c 	CALL __MULB1W2U
004f83 940e c708 	CALL SUBOPT_0x10E
004f85 940e c108 	CALL SUBOPT_0x21
                 ; 0007 0214     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
004f87 ede4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
004f88 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
004f89 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
004f8a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
004f8b 940e c7ff 	CALL SUBOPT_0x13B
004f8d 940e c70e 	CALL SUBOPT_0x10F
004f8f 940e c798 	CALL SUBOPT_0x126
004f91 e1ed      	LDI  R30,LOW(29)
004f92 940e df7c 	CALL __MULB1W2U
004f94 940e c70e 	CALL SUBOPT_0x10F
004f96 940e c108 	CALL SUBOPT_0x21
                 ; 0007 0215     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
004f98 efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
004f99 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
004f9a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
004f9b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
004f9c 940e c7ff 	CALL SUBOPT_0x13B
004f9e 940e c714 	CALL SUBOPT_0x110
004fa0 940e c191 	CALL SUBOPT_0x34
004fa2 85aa      	LDD  R26,Y+10
004fa3 85bb      	LDD  R27,Y+10+1
004fa4 e1ed      	LDI  R30,LOW(29)
004fa5 940e df7c 	CALL __MULB1W2U
004fa7 940e c714 	CALL SUBOPT_0x110
004fa9 940e c80b 	CALL SUBOPT_0x13D
                 ; 0007 0216     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
004fab e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
004fac e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
004fad e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
004fae e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
004faf 940e c7ff 	CALL SUBOPT_0x13B
004fb1 940e c71a 	CALL SUBOPT_0x111
004fb3 940e c798 	CALL SUBOPT_0x126
004fb5 e1ed      	LDI  R30,LOW(29)
004fb6 940e df7c 	CALL __MULB1W2U
004fb8 940e c71a 	CALL SUBOPT_0x111
004fba 940e c108 	CALL SUBOPT_0x21
                 ; 0007 0217     printDebug("\r\n");
004fbc 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 0218 
                 ; 0007 0219     config_sens_flag[ch]                = 0x01;
004fbe 81aa      	LDD  R26,Y+2
004fbf 81bb      	LDD  R27,Y+2+1
004fc0 5bac      	SUBI R26,LOW(-_config_sens_flag)
004fc1 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004fc2 e0e1      	LDI  R30,LOW(1)
004fc3 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 021A     is_sensor_config_update[ch]          = 1;
004fc5 81ea      	LDD  R30,Y+2
004fc6 81fb      	LDD  R31,Y+2+1
004fc7 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
004fc8 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
004fc9 e0a1      	LDI  R26,LOW(1)
004fca 83a0      	STD  Z+0,R26
                 ; 0007 021B 
                 ; 0007 021C     return 0;
004fcb e0e0      	LDI  R30,LOW(0)
004fcc e0f0      	LDI  R31,HIGH(0)
004fcd c374      	RJMP _0x20E0088
                 ; 0007 021D }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0220 {
                 _setAuxDinConfig:
                 ; 0007 0221     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
004fce 940e c6e2 	CALL SUBOPT_0x107
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004fd0 f022      	BRMI _0xE0081
004fd1 81aa      	LDD  R26,Y+2
004fd2 81bb      	LDD  R27,Y+2+1
004fd3 9751      	SBIW R26,17
004fd4 f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0222         return -1;
004fd5 efef      	LDI  R30,LOW(65535)
004fd6 efff      	LDI  R31,HIGH(65535)
004fd7 c36a      	RJMP _0x20E0088
                 ; 0007 0223     }
                 ; 0007 0224 
                 ; 0007 0225     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
004fd8 940e c725 	CALL SUBOPT_0x113
004fda 5ce6      	SUBI R30,LOW(-_config_din)
004fdb 4ffe      	SBCI R31,HIGH(-_config_din)
004fdc 010f      	MOVW R0,R30
004fdd 81a8      	LD   R26,Y
004fde 81b9      	LDD  R27,Y+1
004fdf 940e c7d1 	CALL SUBOPT_0x131
                 ; 0007 0226     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
004fe1 940e c725 	CALL SUBOPT_0x113
                +
004fe3 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004fe4 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004fe5 940e c80e 	CALL SUBOPT_0x13E
004fe7 940e c813 	CALL SUBOPT_0x13F
                 ; 0007 0227 
                 ; 0007 0228     printDebug("\r\n channel         >> [%d]",      ch);
004fe9 940e c819 	CALL SUBOPT_0x140
004feb 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 0229     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
004fed 940e c81e 	CALL SUBOPT_0x141
004fef e0e3      	LDI  R30,LOW(3)
004ff0 940e df7c 	CALL __MULB1W2U
004ff2 5ce6      	SUBI R30,LOW(-_config_din)
004ff3 4ffe      	SBCI R31,HIGH(-_config_din)
004ff4 01df      	MOVW R26,R30
004ff5 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 022A     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
004ff7 e6ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
004ff8 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
004ff9 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
004ffa e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
004ffb 940e c827 	CALL SUBOPT_0x142
004ffd e0e3      	LDI  R30,LOW(3)
004ffe 940e df7c 	CALL __MULB1W2U
                +
005000 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
005001 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
005002 940e c807 	CALL SUBOPT_0x13C
005004 940e c0a5 	CALL SUBOPT_0x12
                 ; 0007 022B 
                 ; 0007 022C     config_din_flag[ch]                 =   0x01;
005006 81aa      	LDD  R26,Y+2
005007 81bb      	LDD  R27,Y+2+1
005008 5ba7      	SUBI R26,LOW(-_config_din_flag)
005009 4fba      	SBCI R27,HIGH(-_config_din_flag)
00500a e0e1      	LDI  R30,LOW(1)
00500b 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 022D     is_din_config_update[ch]            =   1;
00500d 81ea      	LDD  R30,Y+2
00500e 81fb      	LDD  R31,Y+2+1
00500f 50e3      	SUBI R30,LOW(-_is_din_config_update)
005010 4eff      	SBCI R31,HIGH(-_is_din_config_update)
005011 e0a1      	LDI  R26,LOW(1)
005012 83a0      	STD  Z+0,R26
                 ; 0007 022E     return 0;
005013 e0e0      	LDI  R30,LOW(0)
005014 e0f0      	LDI  R31,HIGH(0)
005015 c32c      	RJMP _0x20E0088
                 ; 0007 022F }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0232 {
                 _setAuxDoutConfig:
                 ; 0007 0233     int i;
                 ; 0007 0234 
                 ; 0007 0235     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
005016 940e c3a0 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
005018 81ad      	LDD  R26,Y+5
005019 23aa      	TST  R26
00501a f022      	BRMI _0xE0084
00501b 81ac      	LDD  R26,Y+4
00501c 81bd      	LDD  R27,Y+4+1
00501d 9716      	SBIW R26,6
00501e f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0236         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
00501f e8e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
005020 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
005021 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
005022 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
005023 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0237         return -1;
005025 efef      	LDI  R30,LOW(65535)
005026 efff      	LDI  R31,HIGH(65535)
005027 c143      	RJMP _0x20E008B
                 ; 0007 0238     }
                 ; 0007 0239 
                 ; 0007 023A     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
005028 81ea      	LDD  R30,Y+2
005029 81fb      	LDD  R31,Y+2+1
00502a 81a2      	LDD  R26,Z+2
00502b 32a4      	CPI  R26,LOW(0x24)
00502c f060      	BRLO _0xE0086
                 ; 0007 023B         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
00502d eaee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
00502e e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
00502f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
005030 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
005031 940e c6ce 	CALL SUBOPT_0x103
005033 81e2      	LDD  R30,Z+2
005034 940e c143 	CALL SUBOPT_0x29
                 ; 0007 023C         return -1;
005036 efef      	LDI  R30,LOW(65535)
005037 efff      	LDI  R31,HIGH(65535)
005038 c132      	RJMP _0x20E008B
                 ; 0007 023D     }
                 ; 0007 023E 
                 ; 0007 023F     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
005039 940e c73f 	CALL SUBOPT_0x117
00503b 59e6      	SUBI R30,LOW(-_config_dout)
00503c 4ffe      	SBCI R31,HIGH(-_config_dout)
00503d 01df      	MOVW R26,R30
00503e e0e1      	LDI  R30,LOW(1)
00503f 940e c82c 	CALL SUBOPT_0x143
                 ; 0007 0240     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
005041 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
005042 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
005043 01df      	MOVW R26,R30
005044 e0e0      	LDI  R30,LOW(0)
005045 940e c82c 	CALL SUBOPT_0x143
                 ; 0007 0241     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
005047 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
005048 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
005049 01df      	MOVW R26,R30
00504a 81ea      	LDD  R30,Y+2
00504b 81fb      	LDD  R31,Y+2+1
00504c 81e2      	LDD  R30,Z+2
00504d 940e c82f 	CALL SUBOPT_0x144
                 ; 0007 0242 
                 ; 0007 0243     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0244     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
00504f e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
005050 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
005051 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
005052 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
005053 940e c745 	CALL SUBOPT_0x118
005055 940e c74d 	CALL SUBOPT_0x119
                 ; 0007 0245     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
005057 e2e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
005058 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
005059 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
00505a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
00505b 940e c745 	CALL SUBOPT_0x118
00505d 940e c753 	CALL SUBOPT_0x11A
                 ; 0007 0246     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
00505f 940e c836 	CALL SUBOPT_0x145
005061 940e c745 	CALL SUBOPT_0x118
005063 940e c759 	CALL SUBOPT_0x11B
005065 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0247     printDebug("\r\n eventSource       >> ");
005067 940e c83b 	CALL SUBOPT_0x146
                 ; 0007 0248 
                 ; 0007 0249     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
005069 e000     +LDI R16 , LOW ( 0 )
00506a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
00506b 940e c73f 	CALL SUBOPT_0x117
00506d 940e c759 	CALL SUBOPT_0x11B
00506f 940e c75f 	CALL SUBOPT_0x11C
005071 f4d4      	BRGE _0xE0089
                 ; 0007 024A 
                 ; 0007 024B         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
005072 940e c73f 	CALL SUBOPT_0x117
005074 940e c764 	CALL SUBOPT_0x11D
005076 940e c6ae 	CALL SUBOPT_0xFE
005078 81e0      	LD   R30,Z
005079 940e c82c 	CALL SUBOPT_0x143
                 ; 0007 024C 
                 ; 0007 024D         if( config_dout[ch].eventSource[i] != 0x00 ){
00507b 940e c764 	CALL SUBOPT_0x11D
00507d 940e e085 	CALL __EEPROMRDB
00507f 30e0      	CPI  R30,0
005080 f041      	BREQ _0xE008A
                 ; 0007 024E             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
005081 940e c7a2 	CALL SUBOPT_0x128
005083 940e c745 	CALL SUBOPT_0x118
005085 940e c764 	CALL SUBOPT_0x11D
005087 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 024F         }
                 ; 0007 0250     }
                 _0xE008A:
                +
005089 5f0f     +SUBI R16 , LOW ( - 1 )
00508a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00508b cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0251     printDebug("\r\n");
00508c 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 0252 
                 ; 0007 0253     config_dout_flag[ch]                =   0x01;
00508e 81ac      	LDD  R26,Y+4
00508f 81bd      	LDD  R27,Y+4+1
005090 5aa7      	SUBI R26,LOW(-_config_dout_flag)
005091 4fba      	SBCI R27,HIGH(-_config_dout_flag)
005092 e0e1      	LDI  R30,LOW(1)
005093 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 0254     is_dout_config_update[ch]           =   1;
005095 81ec      	LDD  R30,Y+4
005096 81fd      	LDD  R31,Y+4+1
005097 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
005098 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
005099 e0a1      	LDI  R26,LOW(1)
00509a 83a0      	STD  Z+0,R26
                 ; 0007 0255 
                 ; 0007 0256     return 0;
00509b c0cd      	RJMP _0x20E008C
                 ; 0007 0257 }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025A {
                 _setAuxAinConfig:
                 ; 0007 025B     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
00509c 940e c6e2 	CALL SUBOPT_0x107
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
00509e f022      	BRMI _0xE008C
00509f 81aa      	LDD  R26,Y+2
0050a0 81bb      	LDD  R27,Y+2+1
0050a1 9751      	SBIW R26,17
0050a2 f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025C         return -1;
0050a3 efef      	LDI  R30,LOW(65535)
0050a4 efff      	LDI  R31,HIGH(65535)
0050a5 c29c      	RJMP _0x20E0088
                 ; 0007 025D     }
                 ; 0007 025E 
                 ; 0007 025F     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
0050a6 940e c76a 	CALL SUBOPT_0x11E
0050a8 5de8      	SUBI R30,LOW(-_config_ain)
0050a9 4ffd      	SBCI R31,HIGH(-_config_ain)
0050aa 010f      	MOVW R0,R30
0050ab 81a8      	LD   R26,Y
0050ac 81b9      	LDD  R27,Y+1
0050ad 940e c7d1 	CALL SUBOPT_0x131
                 ; 0007 0260     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
0050af 940e c76a 	CALL SUBOPT_0x11E
                +
0050b1 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
0050b2 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
0050b3 940e c80e 	CALL SUBOPT_0x13E
0050b5 940e c7f9 	CALL SUBOPT_0x13A
                 ; 0007 0261 
                 ; 0007 0262     printDebug("\r\n channel         >> [%d]",      ch);
0050b7 940e c819 	CALL SUBOPT_0x140
0050b9 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 0263     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
0050bb 940e c81e 	CALL SUBOPT_0x141
0050bd e0e5      	LDI  R30,LOW(5)
0050be 940e df7c 	CALL __MULB1W2U
0050c0 5de8      	SUBI R30,LOW(-_config_ain)
0050c1 4ffd      	SBCI R31,HIGH(-_config_ain)
0050c2 01df      	MOVW R26,R30
0050c3 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 0264     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
0050c5 e7e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
0050c6 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
0050c7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
0050c8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
0050c9 940e c827 	CALL SUBOPT_0x142
0050cb e0e5      	LDI  R30,LOW(5)
0050cc 940e df7c 	CALL __MULB1W2U
                +
0050ce 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
0050cf 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
0050d0 940e c841 	CALL SUBOPT_0x147
                 ; 0007 0265 
                 ; 0007 0266     config_ain_flag[ch]                 = 0x01;
0050d2 81aa      	LDD  R26,Y+2
0050d3 81bb      	LDD  R27,Y+2+1
0050d4 5aa2      	SUBI R26,LOW(-_config_ain_flag)
0050d5 4fba      	SBCI R27,HIGH(-_config_ain_flag)
0050d6 e0e1      	LDI  R30,LOW(1)
0050d7 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 0267 
                 ; 0007 0268     return 0;
0050d9 e0e0      	LDI  R30,LOW(0)
0050da e0f0      	LDI  R31,HIGH(0)
0050db c266      	RJMP _0x20E0088
                 ; 0007 0269 }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026C {
                 _setAuxAoutConfig:
                 ; 0007 026D     int i;
                 ; 0007 026E 
                 ; 0007 026F     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
0050dc 940e c3a0 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
0050de 81ad      	LDD  R26,Y+5
0050df 23aa      	TST  R26
0050e0 f022      	BRMI _0xE008F
0050e1 81ac      	LDD  R26,Y+4
0050e2 81bd      	LDD  R27,Y+4+1
0050e3 9751      	SBIW R26,17
0050e4 f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0270         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
0050e5 e9e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
0050e6 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
0050e7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
0050e8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
0050e9 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 0271         return -1;
0050eb efef      	LDI  R30,LOW(65535)
0050ec efff      	LDI  R31,HIGH(65535)
0050ed c07d      	RJMP _0x20E008B
                 ; 0007 0272     }
                 ; 0007 0273 
                 ; 0007 0274     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
0050ee 81ea      	LDD  R30,Y+2
0050ef 81fb      	LDD  R31,Y+2+1
0050f0 81a5      	LDD  R26,Z+5
0050f1 32a4      	CPI  R26,LOW(0x24)
0050f2 f060      	BRLO _0xE0091
                 ; 0007 0275         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
0050f3 ebe9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
0050f4 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
0050f5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
0050f6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
0050f7 940e c6ce 	CALL SUBOPT_0x103
0050f9 81e5      	LDD  R30,Z+5
0050fa 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0276         return -1;
0050fc efef      	LDI  R30,LOW(65535)
0050fd efff      	LDI  R31,HIGH(65535)
0050fe c06c      	RJMP _0x20E008B
                 ; 0007 0277     }
                 ; 0007 0278 
                 ; 0007 0279     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
0050ff 940e c776 	CALL SUBOPT_0x120
005101 58e8      	SUBI R30,LOW(-_config_aout)
005102 4ffd      	SBCI R31,HIGH(-_config_aout)
005103 010f      	MOVW R0,R30
005104 81aa      	LDD  R26,Y+2
005105 81bb      	LDD  R27,Y+2+1
005106 940e c7d1 	CALL SUBOPT_0x131
                 ; 0007 027A     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
005108 940e c776 	CALL SUBOPT_0x120
                +
00510a 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
00510b 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
00510c 010f      	MOVW R0,R30
00510d 81aa      	LDD  R26,Y+2
00510e 81bb      	LDD  R27,Y+2+1
00510f 9611      	ADIW R26,1
005110 940e c7f9 	CALL SUBOPT_0x13A
                 ; 0007 027B     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
005112 940e c776 	CALL SUBOPT_0x120
                +
005114 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
005115 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
005116 01df      	MOVW R26,R30
005117 81ea      	LDD  R30,Y+2
005118 81fb      	LDD  R31,Y+2+1
005119 81e5      	LDD  R30,Z+5
00511a 940e c82f 	CALL SUBOPT_0x144
                 ; 0007 027C 
                 ; 0007 027D     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 027E     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
00511c e0e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
00511d e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
00511e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
00511f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
005120 940e c848 	CALL SUBOPT_0x148
005122 58e8      	SUBI R30,LOW(-_config_aout)
005123 4ffd      	SBCI R31,HIGH(-_config_aout)
005124 01df      	MOVW R26,R30
005125 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 027F     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
005127 efe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
005128 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
005129 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
00512a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
00512b 940e c848 	CALL SUBOPT_0x148
                +
00512d 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
00512e 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
00512f 940e c841 	CALL SUBOPT_0x147
                 ; 0007 0280     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
005131 940e c836 	CALL SUBOPT_0x145
005133 940e c848 	CALL SUBOPT_0x148
005135 940e c77c 	CALL SUBOPT_0x121
005137 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0281     printDebug("\r\n eventSource       >> ");
005139 940e c83b 	CALL SUBOPT_0x146
                 ; 0007 0282 
                 ; 0007 0283     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
00513b e000     +LDI R16 , LOW ( 0 )
00513c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
00513d 940e c776 	CALL SUBOPT_0x120
00513f 940e c77c 	CALL SUBOPT_0x121
005141 940e c75f 	CALL SUBOPT_0x11C
005143 f4e4      	BRGE _0xE0094
                 ; 0007 0284 
                 ; 0007 0285         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
005144 940e c776 	CALL SUBOPT_0x120
005146 940e c782 	CALL SUBOPT_0x122
005148 940e c770 	CALL SUBOPT_0x11F
00514a 81e0      	LD   R30,Z
00514b 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 0286 
                 ; 0007 0287         if( config_aout[ch].eventSource[i] != 0x00 ){
00514d 940e c776 	CALL SUBOPT_0x120
00514f 940e c782 	CALL SUBOPT_0x122
005151 940e e085 	CALL __EEPROMRDB
005153 30e0      	CPI  R30,0
005154 f041      	BREQ _0xE0095
                 ; 0007 0288             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
005155 940e c7a2 	CALL SUBOPT_0x128
005157 940e c848 	CALL SUBOPT_0x148
005159 940e c782 	CALL SUBOPT_0x122
00515b 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 0289         }
                 ; 0007 028A     }
                 _0xE0095:
                +
00515d 5f0f     +SUBI R16 , LOW ( - 1 )
00515e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00515f cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028B     printDebug("\r\n");
005160 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 028C 
                 ; 0007 028D     config_aout_flag[ch]                =   0x01;
005162 81ac      	LDD  R26,Y+4
005163 81bd      	LDD  R27,Y+4+1
005164 59a2      	SUBI R26,LOW(-_config_aout_flag)
005165 4fba      	SBCI R27,HIGH(-_config_aout_flag)
005166 e0e1      	LDI  R30,LOW(1)
005167 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 028E 
                 ; 0007 028F     return 0;
                 _0x20E008C:
005169 e0e0      	LDI  R30,LOW(0)
00516a e0f0      	LDI  R31,HIGH(0)
                 _0x20E008B:
00516b 8119      	LDD  R17,Y+1
00516c 8108      	LDD  R16,Y+0
00516d 9626      	ADIW R28,6
00516e 9508      	RET
                 ; 0007 0290 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0293 {
                 _setBuzzerConfig:
                 ; 0007 0294     int i;
                 ; 0007 0295 
                 ; 0007 0296     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
00516f 940e c3a0 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
005171 81ea      	LDD  R30,Y+2
005172 81fb      	LDD  R31,Y+2+1
005173 81a1      	LDD  R26,Z+1
005174 32a4      	CPI  R26,LOW(0x24)
005175 f070      	BRLO _0xE0096
                 ; 0007 0297         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
005176 e1e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
005177 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
005178 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
005179 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
00517a 940e c6ce 	CALL SUBOPT_0x103
00517c 81e1      	LDD  R30,Z+1
00517d 940e c143 	CALL SUBOPT_0x29
                 ; 0007 0298         return -1;
00517f efef      	LDI  R30,LOW(65535)
005180 efff      	LDI  R31,HIGH(65535)
005181 8119      	LDD  R17,Y+1
005182 8108      	LDD  R16,Y+0
005183 c1be      	RJMP _0x20E0088
                 ; 0007 0299     }
                 ; 0007 029A 
                 ; 0007 029B     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
005184 81aa      	LDD  R26,Y+2
005185 81bb      	LDD  R27,Y+2+1
005186 91ec      	LD   R30,X
005187 e0a8      	LDI  R26,LOW(_config_buzz)
005188 e0b5      	LDI  R27,HIGH(_config_buzz)
005189 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 029C     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
00518b e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00518c e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00518d 81ea      	LDD  R30,Y+2
00518e 81fb      	LDD  R31,Y+2+1
00518f 81e1      	LDD  R30,Z+1
005190 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 029D 
                 ; 0007 029E     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
005192 e4eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
005193 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
005194 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
005195 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
005196 940e e05e 	CALL __PUTPARD1
005198 e0a8      	LDI  R26,LOW(_config_buzz)
005199 e0b5      	LDI  R27,HIGH(_config_buzz)
00519a 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 029F     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
00519c 940e c836 	CALL SUBOPT_0x145
00519e 940e e05e 	CALL __PUTPARD1
0051a0 940e c793 	CALL SUBOPT_0x125
0051a2 940e c143 	CALL SUBOPT_0x29
                 ; 0007 02A0     printDebug("\r\n eventSource       >>");
                +
0051a4 e6ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
0051a5 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
0051a6 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
0051a7 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
0051a8 940e c02f 	CALL SUBOPT_0x3
                 ; 0007 02A1 
                 ; 0007 02A2     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
0051aa e000     +LDI R16 , LOW ( 0 )
0051ab e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
0051ac 940e c793 	CALL SUBOPT_0x125
0051ae 940e c75f 	CALL SUBOPT_0x11C
0051b0 f4cc      	BRGE _0xE0099
                 ; 0007 02A3 
                 ; 0007 02A4         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
0051b1 940e c850 	CALL SUBOPT_0x149
0051b3 81ea      	LDD  R30,Y+2
0051b4 81fb      	LDD  R31,Y+2+1
0051b5 940e c7a7 	CALL SUBOPT_0x129
0051b7 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 02A5 
                 ; 0007 02A6         if( config_buzz.eventSource[i] != 0x00 ){
0051b9 940e c850 	CALL SUBOPT_0x149
0051bb 940e e085 	CALL __EEPROMRDB
0051bd 30e0      	CPI  R30,0
0051be f041      	BREQ _0xE009A
                 ; 0007 02A7             printDebug("[0x%02X]",config_buzz.eventSource[i]);
0051bf 940e c7a2 	CALL SUBOPT_0x128
0051c1 940e e05e 	CALL __PUTPARD1
0051c3 940e c850 	CALL SUBOPT_0x149
0051c5 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 02A8         }
                 ; 0007 02A9 
                 ; 0007 02AA     }
                 _0xE009A:
                +
0051c7 5f0f     +SUBI R16 , LOW ( - 1 )
0051c8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051c9 cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AB     printDebug("\r\n");
0051ca 940e c6dd 	CALL SUBOPT_0x106
                 ; 0007 02AC 
                 ; 0007 02AD     config_buzz_flag                    =   0x01;
0051cc e7ae      	LDI  R26,LOW(_config_buzz_flag)
0051cd e0b5      	LDI  R27,HIGH(_config_buzz_flag)
0051ce 940e c7d6 	CALL SUBOPT_0x132
                 ; 0007 02AE 
                 ; 0007 02AF     is_buzzer_config_update             =   1;
0051d0 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B0 
                 ; 0007 02B1     return 0;
0051d2 940e c5bf 	CALL SUBOPT_0xD5
0051d4 c16d      	RJMP _0x20E0088
                 ; 0007 02B2 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B5 {
                 _setEnvAlarmConfig:
                 ; 0007 02B6     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
0051d5 93ba      	ST   -Y,R27
0051d6 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
0051d7 81a8      	LD   R26,Y
0051d8 81b9      	LDD  R27,Y+1
0051d9 940e e02e 	CALL __GETD1P
0051db e2ad      	LDI  R26,LOW(_config_alm)
0051dc e0b5      	LDI  R27,HIGH(_config_alm)
0051dd 940e e091 	CALL __EEPROMWRD
                 ; 0007 02B7     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
0051df e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
0051e0 e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
0051e1 010f      	MOVW R0,R30
0051e2 81a8      	LD   R26,Y
0051e3 81b9      	LDD  R27,Y+1
0051e4 9614      	ADIW R26,4
0051e5 940e c813 	CALL SUBOPT_0x13F
                 ; 0007 02B8     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
0051e7 e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
0051e8 e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
0051e9 010f      	MOVW R0,R30
0051ea 81a8      	LD   R26,Y
0051eb 81b9      	LDD  R27,Y+1
0051ec 9616      	ADIW R26,6
0051ed 940e c7f9 	CALL SUBOPT_0x13A
                 ; 0007 02B9     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
0051ef e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
0051f0 e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
0051f1 010f      	MOVW R0,R30
0051f2 81a8      	LD   R26,Y
0051f3 81b9      	LDD  R27,Y+1
0051f4 961a      	ADIW R26,10
0051f5 940e c7f9 	CALL SUBOPT_0x13A
                 ; 0007 02BA     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
0051f7 e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
0051f8 e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
0051f9 010f      	MOVW R0,R30
0051fa 81a8      	LD   R26,Y
0051fb 81b9      	LDD  R27,Y+1
0051fc 961e      	ADIW R26,14
0051fd 940e c813 	CALL SUBOPT_0x13F
                 ; 0007 02BB     config_alm.memoryMin                =   newConfig->memoryMin;
                +
0051ff e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
005200 e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
005201 010f      	MOVW R0,R30
005202 81a8      	LD   R26,Y
005203 81b9      	LDD  R27,Y+1
005204 9650      	ADIW R26,16
005205 940e c813 	CALL SUBOPT_0x13F
                 ; 0007 02BC 
                 ; 0007 02BD     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
005207 e8e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
005208 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
005209 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
00520a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
00520b 940e e05e 	CALL __PUTPARD1
00520d e2ad      	LDI  R26,LOW(_config_alm)
00520e e0b5      	LDI  R27,HIGH(_config_alm)
00520f 940e c856 	CALL SUBOPT_0x14A
                 ; 0007 02BE     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
005211 e9ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
005212 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
005213 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
005214 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
005215 940e e05e 	CALL __PUTPARD1
                +
005217 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
005218 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
005219 940e e081 	CALL __EEPROMRDW
00521b 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 02BF     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
00521d ebee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
00521e e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
00521f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
005220 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
005221 940e e05e 	CALL __PUTPARD1
                +
005223 e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
005224 e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
005225 940e c856 	CALL SUBOPT_0x14A
                 ; 0007 02C0     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
005227 edee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
005228 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
005229 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
00522a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
00522b 940e e05e 	CALL __PUTPARD1
                +
00522d e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
00522e e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
00522f 940e c856 	CALL SUBOPT_0x14A
                 ; 0007 02C1     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
005231 efeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
005232 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
005233 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
005234 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
005235 940e e05e 	CALL __PUTPARD1
                +
005237 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
005238 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
005239 940e e081 	CALL __EEPROMRDW
00523b 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 02C2     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
00523d e1e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
00523e e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
00523f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
005240 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
005241 940e e05e 	CALL __PUTPARD1
                +
005243 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
005244 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
005245 940e e081 	CALL __EEPROMRDW
005247 940e c191 	CALL SUBOPT_0x34
005249 940e c0a5 	CALL SUBOPT_0x12
                 ; 0007 02C3 
                 ; 0007 02C4     config_alm_flag                 = 0x01;
00524b e7af      	LDI  R26,LOW(_config_alm_flag)
00524c e0b5      	LDI  R27,HIGH(_config_alm_flag)
00524d 940e c7d6 	CALL SUBOPT_0x132
                 ; 0007 02C5     is_env_config_update            = 1;
00524f 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C6     return 0;
005251 c02d      	RJMP _0x20E008A
                 ; 0007 02C7 }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CA {
                 _setStatusReportConfig:
                 ; 0007 02CB     config_stat.accm                    =   newConfig->accm;
005252 93ba      	ST   -Y,R27
005253 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
005254 81a8      	LD   R26,Y
005255 81b9      	LDD  R27,Y+1
005256 91ec      	LD   R30,X
005257 e3af      	LDI  R26,LOW(_config_stat)
005258 e0b5      	LDI  R27,HIGH(_config_stat)
005259 940e e0a1 	CALL __EEPROMWRB
                 ; 0007 02CC     config_stat.intv                    =   newConfig->intv;
                +
00525b e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
00525c e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
00525d 940e c80e 	CALL SUBOPT_0x13E
00525f 940e c813 	CALL SUBOPT_0x13F
                 ; 0007 02CD 
                 ; 0007 02CE     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
005261 e3e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
005262 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
005263 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
005264 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
005265 940e e05e 	CALL __PUTPARD1
005267 e3af      	LDI  R26,LOW(_config_stat)
005268 e0b5      	LDI  R27,HIGH(_config_stat)
005269 940e c7da 	CALL SUBOPT_0x133
                 ; 0007 02CF     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
00526b e4ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
00526c e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
00526d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
00526e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
00526f 940e e05e 	CALL __PUTPARD1
                +
005271 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
005272 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
005273 940e e081 	CALL __EEPROMRDW
005275 940e c191 	CALL SUBOPT_0x34
005277 940e c0a5 	CALL SUBOPT_0x12
                 ; 0007 02D0 
                 ; 0007 02D1     config_stat_flag                    = 0x01;
005279 e8a0      	LDI  R26,LOW(_config_stat_flag)
00527a e0b5      	LDI  R27,HIGH(_config_stat_flag)
00527b 940e c7d6 	CALL SUBOPT_0x132
                 ; 0007 02D2     is_status_config_update             = 1;
00527d 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D3     return 0;
                 _0x20E008A:
00527f e0e0      	LDI  R30,LOW(0)
005280 e0f0      	LDI  R31,HIGH(0)
005281 9622      	ADIW R28,2
005282 9508      	RET
                 ; 0007 02D4 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DC {
                 ; 0007 02DD     int i;
                 ; 0007 02DE 
                 ; 0007 02DF     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E0     config_oper_flag            = 0x00;
                 ; 0007 02E1 
                 ; 0007 02E2     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E3         config_sens_flag[i]     = 0x00;
                 ; 0007 02E4     }
                 ; 0007 02E5 
                 ; 0007 02E6     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02E7         config_din_flag[i]      = 0x00;
                 ; 0007 02E8     }
                 ; 0007 02E9 
                 ; 0007 02EA     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02EB         config_dout_flag[i]     = 0x00;
                 ; 0007 02EC     }
                 ; 0007 02ED 
                 ; 0007 02EE     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02EF         config_ain_flag[i]      = 0x00;
                 ; 0007 02F0     }
                 ; 0007 02F1 
                 ; 0007 02F2     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F3         config_aout_flag[i]     = 0x00;
                 ; 0007 02F4     }
                 ; 0007 02F5 
                 ; 0007 02F6     config_buzz_flag            = 0x00;
                 ; 0007 02F7     config_alm_flag             = 0x00;
                 ; 0007 02F8     config_stat_flag            = 0x00;
                 ; 0007 02F9 
                 ; 0007 02FA     return 0;
                 ; 0007 02FB }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 02FE {
                 _isDeviceConfig:
                 ; 0007 02FF     int i   = 0;
                 ; 0007 0300 
                 ; 0007 0301     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
005283 940e c85c 	CALL SUBOPT_0x14B
                 ;	i -> R16,R17
005285 e4a2      	LDI  R26,LOW(_config_prop_flag)
005286 e0b5      	LDI  R27,HIGH(_config_prop_flag)
005287 940e e085 	CALL __EEPROMRDB
005289 30e0      	CPI  R30,0
00528a f4c1      	BRNE _0xE00AB
00528b e4a3      	LDI  R26,LOW(_config_oper_flag)
00528c e0b5      	LDI  R27,HIGH(_config_oper_flag)
00528d 940e e085 	CALL __EEPROMRDB
00528f 30e0      	CPI  R30,0
005290 f491      	BRNE _0xE00AB
005291 e7ae      	LDI  R26,LOW(_config_buzz_flag)
005292 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
005293 940e e085 	CALL __EEPROMRDB
005295 30e0      	CPI  R30,0
005296 f461      	BRNE _0xE00AB
005297 e7af      	LDI  R26,LOW(_config_alm_flag)
005298 e0b5      	LDI  R27,HIGH(_config_alm_flag)
005299 940e e085 	CALL __EEPROMRDB
00529b 30e0      	CPI  R30,0
00529c f431      	BRNE _0xE00AB
00529d e8a0      	LDI  R26,LOW(_config_stat_flag)
00529e e0b5      	LDI  R27,HIGH(_config_stat_flag)
00529f 940e e085 	CALL __EEPROMRDB
0052a1 30e0      	CPI  R30,0
0052a2 f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0302         return 1;
0052a3 e0e1      	LDI  R30,LOW(1)
0052a4 e0f0      	LDI  R31,HIGH(1)
0052a5 c038      	RJMP _0x20E0089
                 ; 0007 0303     }
                 ; 0007 0304 
                 ; 0007 0305     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
0052a6 e000     +LDI R16 , LOW ( 0 )
0052a7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
0052a8 3005     +CPI R16 , LOW ( 5 )
0052a9 e0e0     +LDI R30 , HIGH ( 5 )
0052aa 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0052ab f464      	BRGE _0xE00AF
                 ; 0007 0306         if(config_sens_flag[i]){
0052ac e4a4      	LDI  R26,LOW(_config_sens_flag)
0052ad e0b5      	LDI  R27,HIGH(_config_sens_flag)
0052ae 940e c67e 	CALL SUBOPT_0xF7
0052b0 30e0      	CPI  R30,0
0052b1 f019      	BREQ _0xE00B0
                 ; 0007 0307             return 1;
0052b2 e0e1      	LDI  R30,LOW(1)
0052b3 e0f0      	LDI  R31,HIGH(1)
0052b4 c029      	RJMP _0x20E0089
                 ; 0007 0308         }
                 ; 0007 0309     }
                 _0xE00B0:
                +
0052b5 5f0f     +SUBI R16 , LOW ( - 1 )
0052b6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0052b7 cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030A 
                 ; 0007 030B     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030C     for(i=0;i<2;i++){
                +
0052b8 e000     +LDI R16 , LOW ( 0 )
0052b9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
0052ba 3002     +CPI R16 , LOW ( 2 )
0052bb e0e0     +LDI R30 , HIGH ( 2 )
0052bc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0052bd f464      	BRGE _0xE00B3
                 ; 0007 030D         if(config_din_flag[i]){
0052be e4a9      	LDI  R26,LOW(_config_din_flag)
0052bf e0b5      	LDI  R27,HIGH(_config_din_flag)
0052c0 940e c67e 	CALL SUBOPT_0xF7
0052c2 30e0      	CPI  R30,0
0052c3 f019      	BREQ _0xE00B4
                 ; 0007 030E             return 1;
0052c4 e0e1      	LDI  R30,LOW(1)
0052c5 e0f0      	LDI  R31,HIGH(1)
0052c6 c017      	RJMP _0x20E0089
                 ; 0007 030F         }
                 ; 0007 0310     }
                 _0xE00B4:
                +
0052c7 5f0f     +SUBI R16 , LOW ( - 1 )
0052c8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0052c9 cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0311 
                 ; 0007 0312     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0313     for(i=0;i<2;i++){
                +
0052ca e000     +LDI R16 , LOW ( 0 )
0052cb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
0052cc 3002     +CPI R16 , LOW ( 2 )
0052cd e0e0     +LDI R30 , HIGH ( 2 )
0052ce 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0052cf f464      	BRGE _0xE00B7
                 ; 0007 0314         if(config_dout_flag[i]){
0052d0 e5a9      	LDI  R26,LOW(_config_dout_flag)
0052d1 e0b5      	LDI  R27,HIGH(_config_dout_flag)
0052d2 940e c67e 	CALL SUBOPT_0xF7
0052d4 30e0      	CPI  R30,0
0052d5 f019      	BREQ _0xE00B8
                 ; 0007 0315             return 1;
0052d6 e0e1      	LDI  R30,LOW(1)
0052d7 e0f0      	LDI  R31,HIGH(1)
0052d8 c005      	RJMP _0x20E0089
                 ; 0007 0316         }
                 ; 0007 0317     }
                 _0xE00B8:
                +
0052d9 5f0f     +SUBI R16 , LOW ( - 1 )
0052da 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0052db cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 0318     return 0;
0052dc e0e0      	LDI  R30,LOW(0)
0052dd e0f0      	LDI  R31,HIGH(0)
                 _0x20E0089:
0052de 9109      	LD   R16,Y+
0052df 9119      	LD   R17,Y+
0052e0 9508      	RET
                 ; 0007 0319 }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031C {
                 _getAllConfig:
                 ; 0007 031D     int i,err;
                 ; 0007 031E 
                 ; 0007 031F     // -- load configuration -- //
                 ; 0007 0320     getPropertiesConfig(&properties_config);
0052e1 940e e0d0 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
0052e3 940e c07f 	CALL SUBOPT_0xD
                 ; 0007 0321     is_properties_config_update = 0;
                 ; 0007 0322 
                 ; 0007 0323     getOperatingConfig(&operating_config);
0052e5 940e c087 	CALL SUBOPT_0xE
                 ; 0007 0324     is_operating_config_update = 0;
                 ; 0007 0325 
                 ; 0007 0326     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0052e7 e000     +LDI R16 , LOW ( 0 )
0052e8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
0052e9 3005     +CPI R16 , LOW ( 5 )
0052ea e0e0     +LDI R30 , HIGH ( 5 )
0052eb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0052ec f504      	BRGE _0xE00BB
                 ; 0007 0327         err = getSensorConfig(i,&sensor_config[i]);
0052ed 931a      	ST   -Y,R17
0052ee 930a      	ST   -Y,R16
                +
0052ef e1ad     +LDI R26 , 29
0052f0 9fa0     +MUL R26 , R16
0052f1 01f0     +MOVW R30 , R0
0052f2 9fa1     +MUL R26 , R17
0052f3 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
0052f4 54e2      	SUBI R30,LOW(-_sensor_config)
0052f5 4efe      	SBCI R31,HIGH(-_sensor_config)
0052f6 01df      	MOVW R26,R30
0052f7 940e 49a7 	CALL _getSensorConfig
0052f9 019f      	MOVW R18,R30
                 ; 0007 0328         if(err < 0){
0052fa 2333      	TST  R19
0052fb f452      	BRPL _0xE00BC
                 ; 0007 0329             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
0052fc e6e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
0052fd e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
0052fe e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
0052ff e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
005300 940e e05e 	CALL __PUTPARD1
005302 01f8      	MOVW R30,R16
005303 940e c637 	CALL SUBOPT_0xE8
                 ; 0007 032A             continue;
005305 c004      	RJMP _0xE00B9
                 ; 0007 032B         }
                 ; 0007 032C         is_sensor_config_update[i] = 0;
                 _0xE00BC:
005306 efa8      	LDI  R26,LOW(_is_sensor_config_update)
005307 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
005308 940e c861 	CALL SUBOPT_0x14C
                 ; 0007 032D     }
                 _0xE00B9:
                +
00530a 5f0f     +SUBI R16 , LOW ( - 1 )
00530b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00530c cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 032E 
                 ; 0007 032F     getBuzzerConfig(&buzz_config);
00530d 940e c0af 	CALL SUBOPT_0x14
                 ; 0007 0330     is_buzzer_config_update = 0;
                 ; 0007 0331 
                 ; 0007 0332     for(i=0;i<USE_DIN;i++){
                +
00530f e000     +LDI R16 , LOW ( 0 )
005310 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
005311 3002     +CPI R16 , LOW ( 2 )
005312 e0e0     +LDI R30 , HIGH ( 2 )
005313 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005314 f49c      	BRGE _0xE00BF
                 ; 0007 0333         getAuxDinConfig(i,&din_config[i]);
005315 931a      	ST   -Y,R17
005316 930a      	ST   -Y,R16
                +
005317 e0a3     +LDI R26 , 3
005318 9fa0     +MUL R26 , R16
005319 01f0     +MOVW R30 , R0
00531a 9fa1     +MUL R26 , R17
00531b 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
00531c 5be1      	SUBI R30,LOW(-_din_config)
00531d 4efd      	SBCI R31,HIGH(-_din_config)
00531e 01df      	MOVW R26,R30
00531f 940e 4a8f 	CALL _getAuxDinConfig
                 ; 0007 0334         is_din_config_update[i] = 0;
005321 efad      	LDI  R26,LOW(_is_din_config_update)
005322 e1b0      	LDI  R27,HIGH(_is_din_config_update)
005323 940e c861 	CALL SUBOPT_0x14C
                 ; 0007 0335     }
                +
005325 5f0f     +SUBI R16 , LOW ( - 1 )
005326 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005327 cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0336 
                 ; 0007 0337     for(i=0;i<USE_DOUT;i++){
                +
005328 e000     +LDI R16 , LOW ( 0 )
005329 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
00532a 3002     +CPI R16 , LOW ( 2 )
00532b e0e0     +LDI R30 , HIGH ( 2 )
00532c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00532d f474      	BRGE _0xE00C2
                 ; 0007 0338         getAuxDoutConfig(i,&dout_config[i]);
00532e 931a      	ST   -Y,R17
00532f 930a      	ST   -Y,R16
                +
005330 e2a6     +LDI R26 , 38
005331 9fa0     +MUL R26 , R16
005332 01f0     +MOVW R30 , R0
005333 9fa1     +MUL R26 , R17
005334 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
005335 940e c0bf 	CALL SUBOPT_0x16
                 ; 0007 0339         is_dout_config_update[i] = 0;
005337 940e c861 	CALL SUBOPT_0x14C
                 ; 0007 033A     }
                +
005339 5f0f     +SUBI R16 , LOW ( - 1 )
00533a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00533b cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033B 
                 ; 0007 033C     getStatusReportConfig(&status_config);
00533c 940e c0c7 	CALL SUBOPT_0x17
                 ; 0007 033D     is_status_config_update = 0;
                 ; 0007 033E 
                 ; 0007 033F     getEnvAlarmConfig(&env_config);
00533e 940e c0cf 	CALL SUBOPT_0x18
                 ; 0007 0340     is_env_config_update = 0;
                 ; 0007 0341 
                 ; 0007 0342     return 0;
005340 940e c866 	CALL SUBOPT_0x14D
                 _0x20E0088:
005342 9624      	ADIW R28,4
005343 9508      	RET
                 ; 0007 0343 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 0018 {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 0019     int     i=0,k=0;
                 ; 0009 001A     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001B 
                 ; 0009 001C     frameData[i++]      = PROTOERROR;
005344 93aa      	ST   -Y,R26
005345 940e c86b 	CALL SUBOPT_0x14E
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005347 eeeb      	LDI  R30,LOW(235)
005348 93ec      	ST   X,R30
                 ; 0009 001D 
                 ; 0009 001E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005349 e020     +LDI R18 , LOW ( 0 )
00534a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
00534b 3028     +CPI R18 , LOW ( 8 )
00534c e0e0     +LDI R30 , HIGH ( 8 )
00534d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00534e f43c      	BRGE _0x120005
                 ; 0009 001F         frameData[i++]  = DEVICE_SERIAL[k];
00534f 940e c87a 	CALL SUBOPT_0x14F
005351 940e c882 	CALL SUBOPT_0x150
                 ; 0009 0020     }
                +
005353 5f2f     +SUBI R18 , LOW ( - 1 )
005354 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005355 cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0021 
                 ; 0009 0022     frameData[i++]      = errCode;
005356 940e c87a 	CALL SUBOPT_0x14F
005358 85ae      	LDD  R26,Y+14
005359 83a0      	STD  Z+0,R26
                 ; 0009 0023 
                 ; 0009 0024     printDebug("<ETH_sendNack> sending..\r\n");
                +
00535a e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
00535b e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
00535c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
00535d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
00535e 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0025     //print_payload(frameData,i);
                 ; 0009 0026     ETH_send(frameData,i,frameID,0);
005360 940e c88c 	CALL SUBOPT_0x151
005362 89eb      	LDD  R30,Y+19
005363 93ea      	ST   -Y,R30
005364 940e c673 	CALL SUBOPT_0xF4
005366 940e c893 	CALL SUBOPT_0x152
                 ; 0009 0027 
                 ; 0009 0028     return 0;
005368 c1a1      	RJMP _0x20E0085
                 ; 0009 0029 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002C {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002D     int     i=0,k=0;
                 ; 0009 002E     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 002F 
                 ; 0009 0030     frameData[i++]      = STATREQA;
005369 93aa      	ST   -Y,R26
00536a 972f      	SBIW R28,15
00536b 940e c896 	CALL SUBOPT_0x153
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00536d e1eb      	LDI  R30,LOW(27)
00536e 93ec      	ST   X,R30
                 ; 0009 0031 
                 ; 0009 0032     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00536f e020     +LDI R18 , LOW ( 0 )
005370 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
005371 3028     +CPI R18 , LOW ( 8 )
005372 e0e0     +LDI R30 , HIGH ( 8 )
005373 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005374 f43c      	BRGE _0x120008
                 ; 0009 0033         frameData[i++]  = DEVICE_SERIAL[k];
005375 940e c87a 	CALL SUBOPT_0x14F
005377 940e c882 	CALL SUBOPT_0x150
                 ; 0009 0034     }
                +
005379 5f2f     +SUBI R18 , LOW ( - 1 )
00537a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00537b cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0035 
                 ; 0009 0036     frameData[i++]      = accm;
00537c 940e c87a 	CALL SUBOPT_0x14F
00537e 89ac      	LDD  R26,Y+20
00537f 83a0      	STD  Z+0,R26
                 ; 0009 0037     frameData[i++]      = status;
005380 940e c87a 	CALL SUBOPT_0x14F
005382 89ab      	LDD  R26,Y+19
005383 83a0      	STD  Z+0,R26
                 ; 0009 0038 
                 ; 0009 0039     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
005384 eae1     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
005385 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
005386 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
005387 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
005388 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 003A     //print_payload(frameData,i);
                 ; 0009 003B 
                 ; 0009 003C     ETH_send(frameData,i,frameID,0);
00538a 940e c88c 	CALL SUBOPT_0x151
00538c 8de9      	LDD  R30,Y+25
00538d 93ea      	ST   -Y,R30
00538e 940e c673 	CALL SUBOPT_0xF4
005390 940e c893 	CALL SUBOPT_0x152
                 ; 0009 003D 
                 ; 0009 003E     return 0;
005392 9666      	ADIW R28,22
005393 9508      	RET
                 ; 0009 003F 
                 ; 0009 0040 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0043 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0044     int     i=0,k=0;
                 ; 0009 0045     int     frameLen    = 0;
                 ; 0009 0046     char    *frameData;
                 ; 0009 0047 
                 ; 0009 0048     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
005394 93ba      	ST   -Y,R27
005395 93aa      	ST   -Y,R26
005396 9722      	SBIW R28,2
005397 940e c19f 	CALL SUBOPT_0x37
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
005399 940e c8a4 	CALL SUBOPT_0x154
                 ; 0009 0049     if(frameLen > 250){
00539b f04c      	BRLT _0x120009
                 ; 0009 004A         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
00539c ece8     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
00539d e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
00539e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
00539f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
0053a0 940e c225 	CALL SUBOPT_0x49
                 ; 0009 004B         return -1;
0053a2 efef      	LDI  R30,LOW(65535)
0053a3 efff      	LDI  R31,HIGH(65535)
0053a4 c03a      	RJMP _0x20E0087
                 ; 0009 004C     }
                 ; 0009 004D 
                 ; 0009 004E     frameData           = (char *) malloc (frameLen);
                 _0x120009:
0053a5 940e c8ac 	CALL SUBOPT_0x155
                 ; 0009 004F     if(frameData == NULL){
0053a7 f449      	BRNE _0x12000A
                 ; 0009 0050         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
0053a8 e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
0053a9 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
0053aa e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
0053ab e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
0053ac 940e c225 	CALL SUBOPT_0x49
                 ; 0009 0051         return -1;
0053ae efef      	LDI  R30,LOW(65535)
0053af efff      	LDI  R31,HIGH(65535)
0053b0 c02e      	RJMP _0x20E0087
                 ; 0009 0052     }
                 ; 0009 0053 
                 ; 0009 0054     frameData[i++]      = STATREPC;
                 _0x12000A:
0053b1 940e c8b3 	CALL SUBOPT_0x156
0053b3 0fae      	ADD  R26,R30
0053b4 1fbf      	ADC  R27,R31
0053b5 e2ea      	LDI  R30,LOW(42)
0053b6 93ec      	ST   X,R30
                 ; 0009 0055 
                 ; 0009 0056     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053b7 e020     +LDI R18 , LOW ( 0 )
0053b8 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
0053b9 3028     +CPI R18 , LOW ( 8 )
0053ba e0e0     +LDI R30 , HIGH ( 8 )
0053bb 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053bc f43c      	BRGE _0x12000D
                 ; 0009 0057         frameData[i++]  = DEVICE_SERIAL[k];
0053bd 940e c8b3 	CALL SUBOPT_0x156
0053bf 940e c8b9 	CALL SUBOPT_0x157
                 ; 0009 0058     }
                +
0053c1 5f2f     +SUBI R18 , LOW ( - 1 )
0053c2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053c3 cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 0059 
                 ; 0009 005A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
0053c4 940e c8bc 	CALL SUBOPT_0x158
0053c6 01fe      	MOVW R30,R28
0053c7 963f      	ADIW R30,15
0053c8 940e c23f 	CALL SUBOPT_0x4D
                 ; 0009 005B     i += sizeof(timestamp);
                +
0053ca 5f0c     +SUBI R16 , LOW ( - 4 )
0053cb 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005C 
                 ; 0009 005D     frameData[i++]      = accm;
0053cc 940e c8b3 	CALL SUBOPT_0x156
0053ce 0fea      	ADD  R30,R26
0053cf 1ffb      	ADC  R31,R27
0053d0 85ac      	LDD  R26,Y+12
0053d1 83a0      	STD  Z+0,R26
                 ; 0009 005E 
                 ; 0009 005F     memcpy(&frameData[i],paraResp,paraLen);
0053d2 940e c8bc 	CALL SUBOPT_0x158
0053d4 940e c8c1 	CALL SUBOPT_0x159
                 ; 0009 0060     i += paraLen;
                 ; 0009 0061 
                 ; 0009 0062     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
0053d6 940e c8ce 	CALL SUBOPT_0x15A
0053d8 931a      	ST   -Y,R17
0053d9 930a      	ST   -Y,R16
0053da e0e0      	LDI  R30,LOW(0)
0053db 940e c8d3 	CALL SUBOPT_0x15B
                 ; 0009 0063     free( frameData );
0053dd 940e c8d8 	CALL SUBOPT_0x15C
                 ; 0009 0064 }
                 _0x20E0087:
0053df 940e e0d5 	CALL __LOADLOCR6
0053e1 9661      	ADIW R28,17
0053e2 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0067 {
                 _ETH_sendEventReportCmd:
                 ; 0009 0068     int     i=0,k=0,res=0;
                 ; 0009 0069     char    frameID;
                 ; 0009 006A     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006B 
                 ; 0009 006C     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
0053e3 93aa      	ST   -Y,R26
0053e4 9761      	SBIW R28,17
0053e5 940e c19f 	CALL SUBOPT_0x37
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
0053e7 8dad      	LDD  R26,Y+29
0053e8 30a0      	CPI  R26,LOW(0x0)
0053e9 f021      	BREQ _0x12000F
0053ea 30a1      	CPI  R26,LOW(0x1)
0053eb f011      	BREQ _0x12000F
0053ec 30a2      	CPI  R26,LOW(0x2)
0053ed f409      	BRNE _0x120010
                 _0x12000F:
0053ee c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006D     {
                 ; 0009 006E         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
0053ef e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
0053f0 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
0053f1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
0053f2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
0053f3 940e e05e 	CALL __PUTPARD1
0053f5 a1e9      	LDD  R30,Y+33
0053f6 940e c143 	CALL SUBOPT_0x29
                 ; 0009 006F         return -1;
0053f8 efef      	LDI  R30,LOW(65535)
0053f9 efff      	LDI  R31,HIGH(65535)
0053fa c078      	RJMP _0x20E0086
                 ; 0009 0070     }
                 ; 0009 0071 
                 ; 0009 0072     frameData[i++]      =   EVENREPC;
                 _0x12000E:
0053fb 940e c8dc 	CALL SUBOPT_0x15D
0053fd 0fae      	ADD  R26,R30
0053fe 1fbf      	ADC  R27,R31
0053ff e3ea      	LDI  R30,LOW(58)
005400 93ec      	ST   X,R30
                 ; 0009 0073 
                 ; 0009 0074     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005401 e020     +LDI R18 , LOW ( 0 )
005402 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
005403 3028     +CPI R18 , LOW ( 8 )
005404 e0e0     +LDI R30 , HIGH ( 8 )
005405 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005406 f43c      	BRGE _0x120013
                 ; 0009 0075         frameData[i++]  = DEVICE_SERIAL[k];
005407 940e c8dc 	CALL SUBOPT_0x15D
005409 940e c8b9 	CALL SUBOPT_0x157
                 ; 0009 0076     }
                +
00540b 5f2f     +SUBI R18 , LOW ( - 1 )
00540c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00540d cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0077 
                 ; 0009 0078     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
00540e 01f8      	MOVW R30,R16
00540f 01de      	MOVW R26,R28
005410 9616      	ADIW R26,6
005411 940e c0f4 	CALL SUBOPT_0x1D
005413 01fe      	MOVW R30,R28
005414 967b      	ADIW R30,27
005415 940e c23f 	CALL SUBOPT_0x4D
                 ; 0009 0079     i += sizeof(timestamp);
                +
005417 5f0c     +SUBI R16 , LOW ( - 4 )
005418 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007A 
                 ; 0009 007B     frameData[i++]      =   eventType;
005419 940e c8dc 	CALL SUBOPT_0x15D
00541b 0fea      	ADD  R30,R26
00541c 1ffb      	ADC  R31,R27
00541d 8dad      	LDD  R26,Y+29
00541e 83a0      	STD  Z+0,R26
                 ; 0009 007C     frameData[i++]      =   eventID;
00541f 940e c8dc 	CALL SUBOPT_0x15D
005421 0fea      	ADD  R30,R26
005422 1ffb      	ADC  R31,R27
005423 8da8      	LDD  R26,Y+24
005424 83a0      	STD  Z+0,R26
                 ; 0009 007D     frameData[i++]      =   statusCode;
005425 940e c8dc 	CALL SUBOPT_0x15D
005427 0fea      	ADD  R30,R26
005428 1ffb      	ADC  R31,R27
005429 89af      	LDD  R26,Y+23
00542a 83a0      	STD  Z+0,R26
                 ; 0009 007E 
                 ; 0009 007F     frameID             = ETH_generateId();
00542b 940e 6a25 	CALL _ETH_generateId
00542d 8bee      	STD  Y+22,R30
                 ; 0009 0080 
                 ; 0009 0081     if(eventType == TYP_RLT)
00542e 8ded      	LDD  R30,Y+29
00542f 30e0      	CPI  R30,0
005430 f511      	BRNE _0x120014
                 ; 0009 0082     {
                 ; 0009 0083         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
005431 89ee      	LDD  R30,Y+22
005432 93ea      	ST   -Y,R30
005433 940e c5a6 	CALL SUBOPT_0xD0
005435 940e e05e 	CALL __PUTPARD1
005437 8ded      	LDD  R30,Y+29
005438 93ea      	ST   -Y,R30
005439 8dad      	LDD  R26,Y+29
00543a 940e 8695 	CALL _addEventLogQueue
00543c 01af      	MOVW R20,R30
                 ; 0009 0084         if(res < 0)
00543d 2355      	TST  R21
00543e f49a      	BRPL _0x120015
                 ; 0009 0085         {
                 ; 0009 0086             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0087                         frameID,timestamp,eventID,statusCode);
                +
00543f e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
005440 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
005441 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
005442 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
005443 940e e05e 	CALL __PUTPARD1
005445 8dea      	LDD  R30,Y+26
005446 940e c2e0 	CALL SUBOPT_0x65
005448 940e c8e2 	CALL SUBOPT_0x15E
00544a a1ec      	LDD  R30,Y+36
00544b 940e c2e0 	CALL SUBOPT_0x65
00544d a1ef      	LDD  R30,Y+39
00544e 940e c2e0 	CALL SUBOPT_0x65
005450 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0009 0088         }
                 ; 0009 0089     }
                 _0x120015:
                 ; 0009 008A     else if(eventType == TYP_LOG)
005452 c006      	RJMP _0x120016
                 _0x120014:
005453 8dad      	LDD  R26,Y+29
005454 30a1      	CPI  R26,LOW(0x1)
005455 f419      	BRNE _0x120017
                 ; 0009 008B     {
                 ; 0009 008C         logEventWait.frameID = frameID;
005456 89ee      	LDD  R30,Y+22
005457 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008D     }
                 ; 0009 008E 
                 ; 0009 008F     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
005459 ebe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
00545a e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
00545b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
00545c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
00545d 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0090     print_payload(frameData,i);
00545f 940e c27a 	CALL SUBOPT_0x56
005461 01d8      	MOVW R26,R16
005462 940e 9e6a 	CALL _print_payload
                 ; 0009 0091 
                 ; 0009 0092     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
005464 940e c27a 	CALL SUBOPT_0x56
005466 931a      	ST   -Y,R17
005467 930a      	ST   -Y,R16
005468 8dea      	LDD  R30,Y+26
005469 940e c8d3 	CALL SUBOPT_0x15B
00546b 01af      	MOVW R20,R30
                 ; 0009 0093     if(res < 0){
00546c 2355      	TST  R21
00546d f41a      	BRPL _0x120018
                 ; 0009 0094         return -1;
00546e efef      	LDI  R30,LOW(65535)
00546f efff      	LDI  R31,HIGH(65535)
005470 c002      	RJMP _0x20E0086
                 ; 0009 0095     }
                 ; 0009 0096     else{
                 _0x120018:
                 ; 0009 0097         return 0;
005471 e0e0      	LDI  R30,LOW(0)
005472 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0098     }
                 ; 0009 0099 }
                 _0x20E0086:
005473 940e e0d5 	CALL __LOADLOCR6
005475 966e      	ADIW R28,30
005476 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009C {
                 _ETH_sendConfigManageNack:
                 ; 0009 009D     int     i=0,k=0;
                 ; 0009 009E     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 009F 
                 ; 0009 00A0     frameData[i++]      = CONFMANA;
005477 93aa      	ST   -Y,R26
005478 972c      	SBIW R28,12
005479 940e c896 	CALL SUBOPT_0x153
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00547b e4eb      	LDI  R30,LOW(75)
00547c 93ec      	ST   X,R30
                 ; 0009 00A1 
                 ; 0009 00A2     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00547d e020     +LDI R18 , LOW ( 0 )
00547e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
00547f 3028     +CPI R18 , LOW ( 8 )
005480 e0e0     +LDI R30 , HIGH ( 8 )
005481 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005482 f43c      	BRGE _0x12001C
                 ; 0009 00A3         frameData[i++]  = DEVICE_SERIAL[k];
005483 940e c87a 	CALL SUBOPT_0x14F
005485 940e c882 	CALL SUBOPT_0x150
                 ; 0009 00A4     }
                +
005487 5f2f     +SUBI R18 , LOW ( - 1 )
005488 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005489 cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A5 
                 ; 0009 00A6     frameData[i++]      = accd;
00548a 940e c87a 	CALL SUBOPT_0x14F
00548c 89aa      	LDD  R26,Y+18
00548d 83a0      	STD  Z+0,R26
                 ; 0009 00A7     frameData[i++]      = cnfg;
00548e 940e c87a 	CALL SUBOPT_0x14F
005490 89a9      	LDD  R26,Y+17
005491 83a0      	STD  Z+0,R26
                 ; 0009 00A8     frameData[i++]      = status;
005492 940e c87a 	CALL SUBOPT_0x14F
005494 89a8      	LDD  R26,Y+16
005495 83a0      	STD  Z+0,R26
                 ; 0009 00A9 
                 ; 0009 00AA     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
005496 edea     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
005497 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
005498 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
005499 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
00549a 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 00AB     //print_payload(frameData,i);
                 ; 0009 00AC 
                 ; 0009 00AD     ETH_send(frameData,i,frameID,0);
00549c 940e c88c 	CALL SUBOPT_0x151
00549e 89ef      	LDD  R30,Y+23
00549f 93ea      	ST   -Y,R30
0054a0 940e c673 	CALL SUBOPT_0xF4
0054a2 940e c893 	CALL SUBOPT_0x152
                 ; 0009 00AE 
                 ; 0009 00AF     return 0;
0054a4 9664      	ADIW R28,20
0054a5 9508      	RET
                 ; 0009 00B0 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B3 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B4     int     i=0,k=0;
                 ; 0009 00B5     int     frameLen    = 0;
                 ; 0009 00B6     char    *frameData;
                 ; 0009 00B7 
                 ; 0009 00B8 
                 ; 0009 00B9     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
0054a6 93ba      	ST   -Y,R27
0054a7 93aa      	ST   -Y,R26
0054a8 9722      	SBIW R28,2
0054a9 940e c19f 	CALL SUBOPT_0x37
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
0054ab 940e c8a4 	CALL SUBOPT_0x154
                 ; 0009 00BA     if(frameLen > 250){
0054ad f04c      	BRLT _0x12001D
                 ; 0009 00BB         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
0054ae e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
0054af e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
0054b0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
0054b1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
0054b2 940e c225 	CALL SUBOPT_0x49
                 ; 0009 00BC         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0054b4 940e c8ee 	CALL SUBOPT_0x160
                 ; 0009 00BD         return -1;
0054b6 c051      	RJMP _0x20E0084
                 ; 0009 00BE     }
                 ; 0009 00BF 
                 ; 0009 00C0     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
0054b7 940e c8ac 	CALL SUBOPT_0x155
                 ; 0009 00C1     if(frameData == NULL){
0054b9 f449      	BRNE _0x12001E
                 ; 0009 00C2         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
0054ba e3ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
0054bb e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
0054bc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
0054bd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
0054be 940e c225 	CALL SUBOPT_0x49
                 ; 0009 00C3         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0054c0 940e c8ee 	CALL SUBOPT_0x160
                 ; 0009 00C4         return -1;
0054c2 c045      	RJMP _0x20E0084
                 ; 0009 00C5     }
                 ; 0009 00C6 
                 ; 0009 00C7     frameData[i++]      = CONFMANA;
                 _0x12001E:
0054c3 940e c8b3 	CALL SUBOPT_0x156
0054c5 0fae      	ADD  R26,R30
0054c6 1fbf      	ADC  R27,R31
0054c7 e4eb      	LDI  R30,LOW(75)
0054c8 93ec      	ST   X,R30
                 ; 0009 00C8 
                 ; 0009 00C9     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054c9 e020     +LDI R18 , LOW ( 0 )
0054ca e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
0054cb 3028     +CPI R18 , LOW ( 8 )
0054cc e0e0     +LDI R30 , HIGH ( 8 )
0054cd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054ce f43c      	BRGE _0x120021
                 ; 0009 00CA         frameData[i++]  = DEVICE_SERIAL[k];
0054cf 940e c8b3 	CALL SUBOPT_0x156
0054d1 940e c8b9 	CALL SUBOPT_0x157
                 ; 0009 00CB     }
                +
0054d3 5f2f     +SUBI R18 , LOW ( - 1 )
0054d4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0054d5 cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CC 
                 ; 0009 00CD     frameData[i++]      = accd;
0054d6 940e c8b3 	CALL SUBOPT_0x156
0054d8 0fea      	ADD  R30,R26
0054d9 1ffb      	ADC  R31,R27
0054da 85ae      	LDD  R26,Y+14
0054db 83a0      	STD  Z+0,R26
                 ; 0009 00CE     frameData[i++]      = cnfg;
0054dc 940e c8b3 	CALL SUBOPT_0x156
0054de 0fea      	ADD  R30,R26
0054df 1ffb      	ADC  R31,R27
0054e0 85ad      	LDD  R26,Y+13
0054e1 83a0      	STD  Z+0,R26
                 ; 0009 00CF     frameData[i++]      = status;
0054e2 940e c8b3 	CALL SUBOPT_0x156
0054e4 0fea      	ADD  R30,R26
0054e5 1ffb      	ADC  R31,R27
0054e6 85ac      	LDD  R26,Y+12
0054e7 83a0      	STD  Z+0,R26
                 ; 0009 00D0     if(cnfgLen > 0){
0054e8 85a8      	LDD  R26,Y+8
0054e9 85b9      	LDD  R27,Y+8+1
0054ea 940e e0b6 	CALL __CPW02
0054ec f424      	BRGE _0x120022
                 ; 0009 00D1         memcpy(&frameData[i],cnfgData,cnfgLen);
0054ed 940e c8bc 	CALL SUBOPT_0x158
0054ef 940e c8c1 	CALL SUBOPT_0x159
                 ; 0009 00D2         i += cnfgLen;
                 ; 0009 00D3     }
                 ; 0009 00D4 
                 ; 0009 00D5     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
0054f1 e6ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
0054f2 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
0054f3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
0054f4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
0054f5 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 00D6     print_payload(frameData,i);
0054f7 940e c8ce 	CALL SUBOPT_0x15A
0054f9 01d8      	MOVW R26,R16
0054fa 940e c8fa 	CALL SUBOPT_0x161
                 ; 0009 00D7 
                 ; 0009 00D8     ETH_send(frameData,i,frameID,0);
0054fc 931a      	ST   -Y,R17
0054fd 930a      	ST   -Y,R16
0054fe 89eb      	LDD  R30,Y+19
0054ff 93ea      	ST   -Y,R30
005500 940e c673 	CALL SUBOPT_0xF4
005502 940e 5d45 	CALL _ETH_send
                 ; 0009 00D9 
                 ; 0009 00DA     free( frameData );
005504 940e c8d8 	CALL SUBOPT_0x15C
                 ; 0009 00DB 
                 ; 0009 00DC     return 0;
005506 e0e0      	LDI  R30,LOW(0)
005507 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0084:
005508 940e e0d5 	CALL __LOADLOCR6
                 _0x20E0085:
00550a 9660      	ADIW R28,16
00550b 9508      	RET
                 ; 0009 00DD }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E0 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E1     int     i=0,k=0,res=0;
                 ; 0009 00E2     char    frameID;
                 ; 0009 00E3     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E4     char    did = 0x00;
                 ; 0009 00E5 
                 ; 0009 00E6     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
00550c 940e e063 	CALL __PUTPARD2
00550e 9764      	SBIW R28,20
00550f e0e0      	LDI  R30,LOW(0)
005510 83e8      	ST   Y,R30
005511 940e c19f 	CALL SUBOPT_0x37
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
005513 a1ac      	LDD  R26,Y+36
005514 30a0      	CPI  R26,LOW(0x0)
005515 f021      	BREQ _0x120024
005516 30a1      	CPI  R26,LOW(0x1)
005517 f011      	BREQ _0x120024
005518 30a2      	CPI  R26,LOW(0x2)
005519 f409      	BRNE _0x120025
                 _0x120024:
00551a c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E7     {
                 ; 0009 00E8         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
00551b e9e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
00551c e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
00551d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
00551e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
00551f 940e e05e 	CALL __PUTPARD1
005521 a5e8      	LDD  R30,Y+40
005522 940e c143 	CALL SUBOPT_0x29
                 ; 0009 00E9         return -1;
005524 efef      	LDI  R30,LOW(65535)
005525 efff      	LDI  R31,HIGH(65535)
005526 c07f      	RJMP _0x20E0083
                 ; 0009 00EA     }
                 ; 0009 00EB 
                 ; 0009 00EC     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
005527 8dae      	LDD  R26,Y+30
005528 5faf      	SUBI R26,-LOW(1)
005529 2fea      	MOV  R30,R26
00552a 95e2      	SWAP R30
00552b 7fe0      	ANDI R30,0xF0
00552c 83ee      	STD  Y+6,R30
                 ; 0009 00ED     did    |= dataType;
00552d a1ec      	LDD  R30,Y+36
00552e 81ae      	LDD  R26,Y+6
00552f 2bea      	OR   R30,R26
005530 83ee      	STD  Y+6,R30
                 ; 0009 00EE 
                 ; 0009 00EF     frameData[i++]      =   DATAREPC;
005531 940e c8fd 	CALL SUBOPT_0x162
005533 0fae      	ADD  R26,R30
005534 1fbf      	ADC  R27,R31
005535 e5ea      	LDI  R30,LOW(90)
005536 93ec      	ST   X,R30
                 ; 0009 00F0 
                 ; 0009 00F1     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005537 e020     +LDI R18 , LOW ( 0 )
005538 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
005539 3028     +CPI R18 , LOW ( 8 )
00553a e0e0     +LDI R30 , HIGH ( 8 )
00553b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00553c f43c      	BRGE _0x120028
                 ; 0009 00F2         frameData[i++]  = DEVICE_SERIAL[k];
00553d 940e c8fd 	CALL SUBOPT_0x162
00553f 940e c8b9 	CALL SUBOPT_0x157
                 ; 0009 00F3     }
                +
005541 5f2f     +SUBI R18 , LOW ( - 1 )
005542 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005543 cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F4 
                 ; 0009 00F5     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005544 01f8      	MOVW R30,R16
005545 01de      	MOVW R26,R28
005546 9617      	ADIW R26,7
005547 940e c0f4 	CALL SUBOPT_0x1D
005549 01fe      	MOVW R30,R28
00554a 96b2      	ADIW R30,34
00554b 940e c23f 	CALL SUBOPT_0x4D
                 ; 0009 00F6     i += sizeof(timestamp);
                +
00554d 5f0c     +SUBI R16 , LOW ( - 4 )
00554e 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F7 
                 ; 0009 00F8     frameData[i++]      =   did;
00554f 940e c8fd 	CALL SUBOPT_0x162
005551 0fea      	ADD  R30,R26
005552 1ffb      	ADC  R31,R27
005553 81ae      	LDD  R26,Y+6
005554 83a0      	STD  Z+0,R26
                 ; 0009 00F9 
                 ; 0009 00FA     memcpy(&frameData[i],&value,sizeof(value));
005555 01f8      	MOVW R30,R16
005556 01de      	MOVW R26,R28
005557 9617      	ADIW R26,7
005558 940e c0f4 	CALL SUBOPT_0x1D
00555a 01fe      	MOVW R30,R28
00555b 967c      	ADIW R30,28
00555c 940e c23f 	CALL SUBOPT_0x4D
                 ; 0009 00FB     i += sizeof(value);
                +
00555e 5f0c     +SUBI R16 , LOW ( - 4 )
00555f 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FC 
                 ; 0009 00FD     frameID             = ETH_generateId();
005560 940e 6a25 	CALL _ETH_generateId
005562 8fe9      	STD  Y+25,R30
                 ; 0009 00FE 
                 ; 0009 00FF     if(dataType == TYP_RLT)
005563 a1ec      	LDD  R30,Y+36
005564 30e0      	CPI  R30,0
005565 f529      	BRNE _0x120029
                 ; 0009 0100     {
                 ; 0009 0101         res = addDataLogQueue(frameID,timestamp,sensorID,value);
005566 8de9      	LDD  R30,Y+25
005567 93ea      	ST   -Y,R30
005568 940e c8e2 	CALL SUBOPT_0x15E
00556a a1eb      	LDD  R30,Y+35
00556b a1fc      	LDD  R31,Y+35+1
00556c 93fa      	ST   -Y,R31
00556d 93ea      	ST   -Y,R30
                +
00556e a1a9     +LDD R26 , Y + 33
00556f a1ba     +LDD R27 , Y + 33 + 1
005570 a18b     +LDD R24 , Y + 33 + 2
005571 a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
005572 940e 85c7 	CALL _addDataLogQueue
005574 01af      	MOVW R20,R30
                 ; 0009 0102         if(res < 0)
005575 2355      	TST  R21
005576 f49a      	BRPL _0x12002A
                 ; 0009 0103         {
                 ; 0009 0104             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
005577 ece5     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
005578 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
005579 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
00557a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
00557b 940e e05e 	CALL __PUTPARD1
00557d 8ded      	LDD  R30,Y+29
00557e 940e c2e0 	CALL SUBOPT_0x65
005580 940e c665 	CALL SUBOPT_0xF2
005582 a5ea      	LDD  R30,Y+42
005583 a5fb      	LDD  R31,Y+42+1
005584 940e c191 	CALL SUBOPT_0x34
005586 940e c903 	CALL SUBOPT_0x163
005588 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0009 0105         }
                 ; 0009 0106     }
                 _0x12002A:
                 ; 0009 0107     else if(dataType == TYP_LOG)
00558a c006      	RJMP _0x12002B
                 _0x120029:
00558b a1ac      	LDD  R26,Y+36
00558c 30a1      	CPI  R26,LOW(0x1)
00558d f419      	BRNE _0x12002C
                 ; 0009 0108     {
                 ; 0009 0109         logDataWait.frameID = frameID;
00558e 8de9      	LDD  R30,Y+25
00558f 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010A     }
                 ; 0009 010B 
                 ; 0009 010C     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
005591 e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
005592 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
005593 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
005594 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
005595 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 010D     //print_payload(frameData,i);
                 ; 0009 010E 
                 ; 0009 010F     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
005597 940e c2d4 	CALL SUBOPT_0x63
005599 931a      	ST   -Y,R17
00559a 930a      	ST   -Y,R16
00559b 8ded      	LDD  R30,Y+29
00559c 940e c8d3 	CALL SUBOPT_0x15B
00559e 01af      	MOVW R20,R30
                 ; 0009 0110     if(res < 0){
00559f 2355      	TST  R21
0055a0 f41a      	BRPL _0x12002D
                 ; 0009 0111         return -1;
0055a1 efef      	LDI  R30,LOW(65535)
0055a2 efff      	LDI  R31,HIGH(65535)
0055a3 c002      	RJMP _0x20E0083
                 ; 0009 0112     }
                 ; 0009 0113     else{
                 _0x12002D:
                 ; 0009 0114         return 0;
0055a4 e0e0      	LDI  R30,LOW(0)
0055a5 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0115     }
                 ; 0009 0116 }
                 _0x20E0083:
0055a6 940e e0d5 	CALL __LOADLOCR6
0055a8 96a5      	ADIW R28,37
0055a9 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 0119 {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011A     int     i=0,k=0;
                 ; 0009 011B     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011C 
                 ; 0009 011D     frameData[i++]      = LOGMANIA;
0055aa 940e c90a 	CALL SUBOPT_0x164
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0055ac e6eb      	LDI  R30,LOW(107)
0055ad 93ec      	ST   X,R30
                 ; 0009 011E 
                 ; 0009 011F     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0055ae e020     +LDI R18 , LOW ( 0 )
0055af e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
0055b0 3028     +CPI R18 , LOW ( 8 )
0055b1 e0e0     +LDI R30 , HIGH ( 8 )
0055b2 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0055b3 f43c      	BRGE _0x120031
                 ; 0009 0120         frameData[i++]  = DEVICE_SERIAL[k];
0055b4 940e c87a 	CALL SUBOPT_0x14F
0055b6 940e c882 	CALL SUBOPT_0x150
                 ; 0009 0121     }
                +
0055b8 5f2f     +SUBI R18 , LOW ( - 1 )
0055b9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0055ba cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0122 
                 ; 0009 0123     frameData[i++]      = accd;
0055bb 940e c87a 	CALL SUBOPT_0x14F
0055bd 940e c90d 	CALL SUBOPT_0x165
                 ; 0009 0124     frameData[i++]      = status;
0055bf 85af      	LDD  R26,Y+15
0055c0 83a0      	STD  Z+0,R26
                 ; 0009 0125 
                 ; 0009 0126     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
0055c1 e2ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
0055c2 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
0055c3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
0055c4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
0055c5 c037      	RJMP _0x20E0082
                 ; 0009 0127     //print_payload(frameData,i);
                 ; 0009 0128     ETH_send(frameData,i,frameID,0);
                 ; 0009 0129 
                 ; 0009 012A     return 0;
                 ; 0009 012B }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 012E {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 012F     int     i=0,k=0;
                 ; 0009 0130     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0131 
                 ; 0009 0132     frameData[i++]      = NETMAINA;
0055c6 940e c90a 	CALL SUBOPT_0x164
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0055c8 e7eb      	LDI  R30,LOW(123)
0055c9 93ec      	ST   X,R30
                 ; 0009 0133 
                 ; 0009 0134     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0055ca e020     +LDI R18 , LOW ( 0 )
0055cb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
0055cc 3028     +CPI R18 , LOW ( 8 )
0055cd e0e0     +LDI R30 , HIGH ( 8 )
0055ce 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0055cf f43c      	BRGE _0x120034
                 ; 0009 0135         frameData[i++]  = DEVICE_SERIAL[k];
0055d0 940e c87a 	CALL SUBOPT_0x14F
0055d2 940e c882 	CALL SUBOPT_0x150
                 ; 0009 0136     }
                +
0055d4 5f2f     +SUBI R18 , LOW ( - 1 )
0055d5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0055d6 cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0137 
                 ; 0009 0138     frameData[i++]      = cmd;
0055d7 940e c87a 	CALL SUBOPT_0x14F
0055d9 940e c90d 	CALL SUBOPT_0x165
                 ; 0009 0139     frameData[i++]      = status;
0055db 85af      	LDD  R26,Y+15
0055dc 83a0      	STD  Z+0,R26
                 ; 0009 013A 
                 ; 0009 013B     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
0055dd e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
0055de e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
0055df e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
0055e0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
0055e1 c01b      	RJMP _0x20E0082
                 ; 0009 013C     ETH_send(frameData,i,frameID,0);
                 ; 0009 013D 
                 ; 0009 013E     return 0;
                 ; 0009 013F }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0142 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0143     int     i=0,k=0;
                 ; 0009 0144     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0145 
                 ; 0009 0146     frameData[i++]      = RMDCTRLA;
0055e2 940e c90a 	CALL SUBOPT_0x164
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0055e4 e8eb      	LDI  R30,LOW(139)
0055e5 93ec      	ST   X,R30
                 ; 0009 0147 
                 ; 0009 0148     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0055e6 e020     +LDI R18 , LOW ( 0 )
0055e7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
0055e8 3028     +CPI R18 , LOW ( 8 )
0055e9 e0e0     +LDI R30 , HIGH ( 8 )
0055ea 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0055eb f43c      	BRGE _0x120037
                 ; 0009 0149         frameData[i++]  = DEVICE_SERIAL[k];
0055ec 940e c87a 	CALL SUBOPT_0x14F
0055ee 940e c882 	CALL SUBOPT_0x150
                 ; 0009 014A     }
                +
0055f0 5f2f     +SUBI R18 , LOW ( - 1 )
0055f1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0055f2 cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014B 
                 ; 0009 014C     frameData[i++]      = cmd;
0055f3 940e c87a 	CALL SUBOPT_0x14F
0055f5 940e c90d 	CALL SUBOPT_0x165
                 ; 0009 014D     frameData[i++]      = status;
0055f7 85af      	LDD  R26,Y+15
0055f8 83a0      	STD  Z+0,R26
                 ; 0009 014E 
                 ; 0009 014F     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
0055f9 e8e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
0055fa e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
0055fb e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
0055fc e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E0082:
0055fd 940e e05e 	CALL __PUTPARD1
0055ff 940e c19a 	CALL SUBOPT_0x36
                 ; 0009 0150     ETH_send(frameData,i,frameID,0);
005601 940e c88c 	CALL SUBOPT_0x151
005603 89ed      	LDD  R30,Y+21
005604 93ea      	ST   -Y,R30
005605 940e c673 	CALL SUBOPT_0xF4
005607 940e c893 	CALL SUBOPT_0x152
                 ; 0009 0151 
                 ; 0009 0152     return 0;
005609 9662      	ADIW R28,18
00560a 9508      	RET
                 ; 0009 0153 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0156 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0157     int     i=0,k=0;
                 ; 0009 0158     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0159 
                 ; 0009 015A     frameData[i++]  = CLRLISTC;
00560b 940e c86b 	CALL SUBOPT_0x14E
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00560d e9ea      	LDI  R30,LOW(154)
00560e 93ec      	ST   X,R30
                 ; 0009 015B 
                 ; 0009 015C     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00560f e020     +LDI R18 , LOW ( 0 )
005610 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
005611 3028     +CPI R18 , LOW ( 8 )
005612 e0e0     +LDI R30 , HIGH ( 8 )
005613 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005614 f43c      	BRGE _0x12003A
                 ; 0009 015D         frameData[i++]  = DEVICE_SERIAL[k];
005615 940e c87a 	CALL SUBOPT_0x14F
005617 940e c882 	CALL SUBOPT_0x150
                 ; 0009 015E     }
                +
005619 5f2f     +SUBI R18 , LOW ( - 1 )
00561a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00561b cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 015F 
                 ; 0009 0160     frameData[i++]  = CLR_DUPLIST;
00561c 01f8      	MOVW R30,R16
                +
00561d 5f0f     +SUBI R16 , LOW ( - 1 )
00561e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00561f 940e c910 	CALL SUBOPT_0x166
005621 e0e1      	LDI  R30,LOW(1)
005622 93ec      	ST   X,R30
                 ; 0009 0161 
                 ; 0009 0162     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
005623 eaec     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
005624 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
005625 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
005626 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
005627 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0163     ETH_send(frameData,i,0xFF,0);
005629 940e c88c 	CALL SUBOPT_0x151
00562b efef      	LDI  R30,LOW(255)
00562c 93ea      	ST   -Y,R30
00562d 940e c673 	CALL SUBOPT_0xF4
00562f 940e c893 	CALL SUBOPT_0x152
                 ; 0009 0164 
                 ; 0009 0165     return 0;
005631 962e      	ADIW R28,14
005632 9508      	RET
                 ; 0009 0166 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 0169 {
                 _ETH_checkPushLog:
                 ; 0009 016A     FIL                 file;
                 ; 0009 016B     int                 res;
                 ; 0009 016C     unsigned long int   timestamp;
                 ; 0009 016D     unsigned int        channel;
                 ; 0009 016E     float               value;
                 ; 0009 016F     unsigned char       eventID;
                 ; 0009 0170     unsigned char       eventStatus;
                 ; 0009 0171 
                 ; 0009 0172     // -- check if id is in dataLogQueue -- //
                 ; 0009 0173     res = readDataLogQueue(id,&timestamp,&channel,&value);
005633 93aa      	ST   -Y,R26
005634 97a8      	SBIW R28,40
005635 50d2      	SUBI R29,2
005636 940e e0ce 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
005638 940e c915 	CALL SUBOPT_0x167
00563a b7ed      	IN   R30,SPL
00563b b7fe      	IN   R31,SPH
00563c 9731      	SBIW R30,1
00563d 93fa      	ST   -Y,R31
00563e 93ea      	ST   -Y,R30
00563f 933f      	PUSH R19
005640 932f      	PUSH R18
005641 01de      	MOVW R26,R28
005642 961b      	ADIW R26,11
005643 940e 8613 	CALL _readDataLogQueue
005645 912f      	POP  R18
005646 913f      	POP  R19
005647 018f      	MOVW R16,R30
                 ; 0009 0174     if(res != -1)
005648 efef      	LDI  R30,LOW(65535)
005649 efff      	LDI  R31,HIGH(65535)
00564a 17e0      	CP   R30,R16
00564b 07f1      	CPC  R31,R17
00564c f411      	BRNE PC+3
00564d 940c 5699 	JMP _0x12003B
                 ; 0009 0175     {
                 ; 0009 0176         // -- found in dataLogQueue -- //
                 ; 0009 0177         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
00564f 940e c30f 	CALL SUBOPT_0x6D
005651 f039      	BREQ _0x12003D
005652 940e c26a 	CALL SUBOPT_0x53
005654 f021      	BREQ _0x12003D
                +
005655 3025     +CPI R18 , LOW ( 5 )
005656 e0e0     +LDI R30 , HIGH ( 5 )
005657 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
005658 f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 0178         {
                 ; 0009 0179             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
005659 ede7     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
00565a e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
00565b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
00565c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
00565d c031      	RJMP _0x120115
                 ; 0009 017A         }
                 ; 0009 017B         else
                 _0x12003C:
                 ; 0009 017C         {
                 ; 0009 017D             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
00565e e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
00565f e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
005660 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
005661 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
005662 940e c251 	CALL SUBOPT_0x50
005664 01f9      	MOVW R30,R18
005665 940e c191 	CALL SUBOPT_0x34
005667 940e c25a 	CALL SUBOPT_0x51
                 ; 0009 017E             res = LOG_openFile(&file,LOGFILE_DATA);
005669 940e c91b 	CALL SUBOPT_0x168
00566b 940e c2ae 	CALL SUBOPT_0x5E
00566d 018f      	MOVW R16,R30
                 ; 0009 017F             if(res < 0)
00566e 2311      	TST  R17
00566f f44a      	BRPL _0x120040
                 ; 0009 0180             {
                 ; 0009 0181                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
005670 e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
005671 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
005672 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
005673 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
005674 940e c2b9 	CALL SUBOPT_0x5F
005676 940e c0a5 	CALL SUBOPT_0x12
                 ; 0009 0182             }
                 ; 0009 0183             else
005678 c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0184             {
                 ; 0009 0185                 res = LOG_insertData(&file,timestamp,channel,value);
005679 940e c91b 	CALL SUBOPT_0x168
00567b 940e c920 	CALL SUBOPT_0x169
00567d 933a      	ST   -Y,R19
00567e 932a      	ST   -Y,R18
00567f 940e c2c3 	CALL SUBOPT_0x61
005681 018f      	MOVW R16,R30
                 ; 0009 0186                 if(res < 0)
005682 2311      	TST  R17
005683 f412      	BRPL _0x120042
                 ; 0009 0187                 {
                 ; 0009 0188                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
005684 940e c924 	CALL SUBOPT_0x16A
                 ; 0009 0189                 }
                 ; 0009 018A 
                 ; 0009 018B                 res = LOG_closeFile(&file);
                 _0x120042:
005686 940e c92a 	CALL SUBOPT_0x16B
                 ; 0009 018C                 if(res < 0)
005688 f412      	BRPL _0x120043
                 ; 0009 018D                 {
                 ; 0009 018E                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
005689 940e c937 	CALL SUBOPT_0x16C
                 ; 0009 018F                 }
                 ; 0009 0190 
                 ; 0009 0191                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
00568b eeea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
00568c e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
00568d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
00568e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
00568f 940e e05e 	CALL __PUTPARD1
005691 940e c19a 	CALL SUBOPT_0x36
                 ; 0009 0192             }
                 _0x120041:
                 ; 0009 0193         }
                 ; 0009 0194 
                 ; 0009 0195         //isDataLogEmpty = 0;
                 ; 0009 0196         removeDataLogQueue(id);
                +
005693 01de     +MOVW R26 , R28
005694 5da2     +SUBI R26 , LOW ( - 558 )
005695 4fbd     +SBCI R27 , HIGH ( - 558 )
005696 91ac     +LD R26 , X
                 	__GETB2SX 558
005697 940e 8654 	CALL _removeDataLogQueue
                 ; 0009 0197     }
                 ; 0009 0198 
                 ; 0009 0199     // -- check if id is in eventLogQueue -- //
                 ; 0009 019A     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
005699 940e c915 	CALL SUBOPT_0x167
00569b b7ed      	IN   R30,SPL
00569c b7fe      	IN   R31,SPH
00569d 93fa      	ST   -Y,R31
00569e 93ea      	ST   -Y,R30
00569f 935f      	PUSH R21
0056a0 b7ad      	IN   R26,SPL
0056a1 b7be      	IN   R27,SPH
0056a2 934f      	PUSH R20
0056a3 940e 86d6 	CALL _readEventLogQueue
0056a5 914f      	POP  R20
0056a6 915f      	POP  R21
0056a7 018f      	MOVW R16,R30
                 ; 0009 019B     if(res != -1)
0056a8 efef      	LDI  R30,LOW(65535)
0056a9 efff      	LDI  R31,HIGH(65535)
0056aa 17e0      	CP   R30,R16
0056ab 07f1      	CPC  R31,R17
0056ac f411      	BRNE PC+3
0056ad 940c 56f2 	JMP _0x120044
                 ; 0009 019C     {
                 ; 0009 019D         // -- found in eventLogQueue -- //
                 ; 0009 019E         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
0056af 940e c30f 	CALL SUBOPT_0x6D
0056b1 f019      	BREQ _0x120046
0056b2 940e c26a 	CALL SUBOPT_0x53
0056b4 f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 019F         {
                 ; 0009 01A0             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
0056b5 e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
0056b6 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
0056b7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
0056b8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
0056b9 c02e      	RJMP _0x120116
                 ; 0009 01A1         }
                 ; 0009 01A2         else{
                 _0x120045:
                 ; 0009 01A3 
                 ; 0009 01A4             res = LOG_openFile(&file,LOGFILE_EVENT);
0056ba 940e c91b 	CALL SUBOPT_0x168
0056bc 940e c2f5 	CALL SUBOPT_0x69
0056be 018f      	MOVW R16,R30
                 ; 0009 01A5             if(res < 0)
0056bf 2311      	TST  R17
0056c0 f44a      	BRPL _0x120049
                 ; 0009 01A6             {
                 ; 0009 01A7                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
0056c1 e5e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
0056c2 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
0056c3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
0056c4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
0056c5 940e c300 	CALL SUBOPT_0x6A
0056c7 940e c0a5 	CALL SUBOPT_0x12
                 ; 0009 01A8             }
                 ; 0009 01A9             else
0056c9 c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AA             {
                 ; 0009 01AB                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
0056ca e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
0056cb e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
0056cc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
0056cd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
0056ce 940e c251 	CALL SUBOPT_0x50
0056d0 940e c286 	CALL SUBOPT_0x58
                 ; 0009 01AC                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
0056d2 940e c91b 	CALL SUBOPT_0x168
0056d4 940e c920 	CALL SUBOPT_0x169
0056d6 935a      	ST   -Y,R21
0056d7 2fa4      	MOV  R26,R20
0056d8 940e 8321 	CALL _LOG_insertEvent
0056da 018f      	MOVW R16,R30
                 ; 0009 01AD                 if(res < 0)
0056db 2311      	TST  R17
0056dc f412      	BRPL _0x12004B
                 ; 0009 01AE                 {
                 ; 0009 01AF                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0056dd 940e c924 	CALL SUBOPT_0x16A
                 ; 0009 01B0                 }
                 ; 0009 01B1 
                 ; 0009 01B2                 res = LOG_closeFile(&file);
                 _0x12004B:
0056df 940e c92a 	CALL SUBOPT_0x16B
                 ; 0009 01B3                 if(res < 0)
0056e1 f412      	BRPL _0x12004C
                 ; 0009 01B4                 {
                 ; 0009 01B5                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0056e2 940e c937 	CALL SUBOPT_0x16C
                 ; 0009 01B6                 }
                 ; 0009 01B7 
                 ; 0009 01B8                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
0056e4 e9e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
0056e5 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
0056e6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
0056e7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
0056e8 940e e05e 	CALL __PUTPARD1
0056ea 940e c19a 	CALL SUBOPT_0x36
                 ; 0009 01B9             }
                 _0x12004A:
                 ; 0009 01BA 
                 ; 0009 01BB         }
                 ; 0009 01BC 
                 ; 0009 01BD         //isEventLogEmpty    = 0;
                 ; 0009 01BE         removeEventLogQueue(id);
                +
0056ec 01de     +MOVW R26 , R28
0056ed 5da2     +SUBI R26 , LOW ( - 558 )
0056ee 4fbd     +SBCI R27 , HIGH ( - 558 )
0056ef 91ac     +LD R26 , X
                 	__GETB2SX 558
0056f0 940e 871b 	CALL _removeEventLogQueue
                 ; 0009 01BF     }
                 ; 0009 01C0 
                 ; 0009 01C1     return;
                 _0x120044:
0056f2 940e e0d5 	CALL __LOADLOCR6
0056f4 96af      	ADIW R28,47
0056f5 5fde      	SUBI R29,-2
0056f6 9508      	RET
                 ; 0009 01C2 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C5 {
                 _ETH_retransmit:
                 ; 0009 01C6     int i;
                 ; 0009 01C7 
                 ; 0009 01C8     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
0056f7 940e c85c 	CALL SUBOPT_0x14B
                 ;	i -> R16,R17
                 _0x12004E:
                +
0056f9 300f     +CPI R16 , LOW ( 15 )
0056fa e0e0     +LDI R30 , HIGH ( 15 )
0056fb 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
0056fc f014      	BRLT PC+3
0056fd 940c 57ab 	JMP _0x12004F
                 ; 0009 01C9     {
                 ; 0009 01CA         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CB             (eth_waitQueue[i].packetID != 0))
0056ff 940e c93d 	CALL SUBOPT_0x16D
                +
005701 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
005702 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
005703 01df      	MOVW R26,R30
005704 940e e02e 	CALL __GETD1P
005706 940e c0ee 	CALL SUBOPT_0x1C
005708 f039      	BREQ _0x120051
005709 940e c93d 	CALL SUBOPT_0x16D
                +
00570b 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00570c 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00570d 81a0      	LD   R26,Z
00570e 30a0      	CPI  R26,LOW(0x0)
00570f f409      	BRNE _0x120052
                 _0x120051:
005710 c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CC         {
                 ; 0009 01CD             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
005711 940e c93d 	CALL SUBOPT_0x16D
005713 58e5      	SUBI R30,LOW(-_eth_waitQueue)
005714 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
005715 81a0      	LD   R26,Z
005716 30a3      	CPI  R26,LOW(0x3)
005717 f410      	BRSH PC+3
005718 940c 577f 	JMP _0x120053
                 ; 0009 01CE             {
                 ; 0009 01CF                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
00571a ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
00571b e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
00571c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
00571d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
00571e 940e e05e 	CALL __PUTPARD1
005720 940e c93d 	CALL SUBOPT_0x16D
                +
005722 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005723 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005724 81e0      	LD   R30,Z
005725 940e c143 	CALL SUBOPT_0x29
                 ; 0009 01D0 
                 ; 0009 01D1                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
005727 940e c93d 	CALL SUBOPT_0x16D
                +
005729 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00572a 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00572b 81a0      	LD   R26,Z
00572c 91e0 1426 	LDS  R30,_logDataWait
00572e 17ea      	CP   R30,R26
00572f f451      	BRNE _0x120054
                 ; 0009 01D2                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
005730 eee7     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
005731 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
005732 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
005733 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
005734 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 01D3                     logDataWait.frameID = 0x00;
005736 e0e0      	LDI  R30,LOW(0)
005737 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D4                 }
                 ; 0009 01D5                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
005739 c019      	RJMP _0x120055
                 _0x120054:
00573a 940e c93d 	CALL SUBOPT_0x16D
                +
00573c 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00573d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00573e 81a0      	LD   R26,Z
00573f 91e0 142b 	LDS  R30,_logEventWait
005741 17ea      	CP   R30,R26
005742 f451      	BRNE _0x120056
                 ; 0009 01D6                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
005743 e1e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
005744 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
005745 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
005746 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
005747 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 01D7                     logEventWait.frameID = 0x00;
005749 e0e0      	LDI  R30,LOW(0)
00574a 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01D8                 }
                 ; 0009 01D9                 else{
00574c c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DA                     // ---- Push in log here ---- //
                 ; 0009 01DB                     ETH_checkPushLog(eth_waitQueue[i].packetID);
00574d 940e c93d 	CALL SUBOPT_0x16D
                +
00574f 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005750 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005751 81a0      	LD   R26,Z
005752 dee0      	RCALL _ETH_checkPushLog
                 ; 0009 01DC                     // -------------------------- //
                 ; 0009 01DD                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01DE 
                 ; 0009 01DF                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
005753 940e c93d 	CALL SUBOPT_0x16D
                +
005755 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005756 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005757 81a0      	LD   R26,Z
005758 940e 69ae 	CALL _ETH_removeWaitQueue
                 ; 0009 01E0 
                 ; 0009 01E1                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
00575a e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
00575b e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
00575c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
00575d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
00575e 940e c943 	CALL SUBOPT_0x16E
005760 940e c943 	CALL SUBOPT_0x16E
005762 940e c108 	CALL SUBOPT_0x21
                 ; 0009 01E2                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
005764 940e c94e 	CALL SUBOPT_0x16F
005766 940e c1b7 	CALL SUBOPT_0x3A
005768 f029      	BREQ _0x120059
005769 940e c94e 	CALL SUBOPT_0x16F
00576b 940e e0be 	CALL __CPD02
00576d f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E3                     TIMER_setTimer(&commLostTimer,30);
00576e e2e1      	LDI  R30,LOW(_commLostTimer)
00576f e1f4      	LDI  R31,HIGH(_commLostTimer)
005770 940e c957 	CALL SUBOPT_0x170
005772 940e 4146 	CALL _TIMER_setTimer
                 ; 0009 01E4                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
005774 e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
005775 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
005776 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
005777 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
005778 940e c95e 	CALL SUBOPT_0x171
00577a 940e c95e 	CALL SUBOPT_0x171
00577c 940e c108 	CALL SUBOPT_0x21
                 ; 0009 01E5                 }
                 ; 0009 01E6             }
                 _0x120058:
                 ; 0009 01E7             else
00577e c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01E8             {
                 ; 0009 01E9                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
00577f 940e c93d 	CALL SUBOPT_0x16D
005781 940e c96c 	CALL SUBOPT_0x172
005783 940e c971 	CALL SUBOPT_0x173
                 ; 0009 01EA                 eth_waitQueue[i].retryCount++;      // increase retry counter
005785 940e c93d 	CALL SUBOPT_0x16D
005787 58e5      	SUBI R30,LOW(-_eth_waitQueue)
005788 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
005789 01df      	MOVW R26,R30
00578a 91ec      	LD   R30,X
00578b 5fef      	SUBI R30,-LOW(1)
00578c 93ec      	ST   X,R30
                 ; 0009 01EB 
                 ; 0009 01EC                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
00578d e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
00578e e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
00578f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
005790 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
005791 940e e05e 	CALL __PUTPARD1
005793 940e c93d 	CALL SUBOPT_0x16D
                +
005795 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005796 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005797 81e0      	LD   R30,Z
005798 940e c143 	CALL SUBOPT_0x29
                 ; 0009 01ED 
                 ; 0009 01EE                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01EF                                 eth_waitQueue[i].packetLen);
00579a 940e c93d 	CALL SUBOPT_0x16D
00579c 940e c97a 	CALL SUBOPT_0x174
00579e 93fa      	ST   -Y,R31
00579f 93ea      	ST   -Y,R30
0057a0 940e c93d 	CALL SUBOPT_0x16D
                +
0057a2 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
0057a3 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0057a4 81a0      	LD   R26,Z
0057a5 e0b0      	LDI  R27,0
0057a6 940e 4044 	CALL _write_uart0
                 ; 0009 01F0             }
                 _0x12005B:
                 ; 0009 01F1         }
                 ; 0009 01F2     }
                 _0x120050:
                +
0057a8 5f0f     +SUBI R16 , LOW ( - 1 )
0057a9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0057aa cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F3     return;
0057ab 9109      	LD   R16,Y+
0057ac 9119      	LD   R17,Y+
0057ad 9508      	RET
                 ; 0009 01F4 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F7 {
                 _ETH_processPacket:
                 ; 0009 01F8     FIL             file;
                 ; 0009 01F9     unsigned char   frameType;
                 ; 0009 01FA     int             res=0;
                 ; 0009 01FB     unsigned char   frameID;
                 ; 0009 01FC     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FD 
                 ; 0009 01FE     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 01FF     char            *cnfgWr;
                 ; 0009 0200 
                 ; 0009 0201     int             i;
                 ; 0009 0202 
                 ; 0009 0203 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0204 //    print_payload(ptr2frame,len);
                 ; 0009 0205 //    printDebug("\r\n******************\r\n");
                 ; 0009 0206     frameID         = ptr2frame[0];
0057ae 93ba      	ST   -Y,R27
0057af 93aa      	ST   -Y,R26
0057b0 97a6      	SBIW R28,38
0057b1 50d2      	SUBI R29,2
0057b2 940e e0ce 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
0057b4 e020     +LDI R18 , LOW ( 0 )
0057b5 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0057b6 940e c980 	CALL SUBOPT_0x175
0057b8 910c      	LD   R16,X
                 ; 0009 0207     frameType       = ptr2frame[1];
0057b9 940e c980 	CALL SUBOPT_0x175
0057bb 9611      	ADIW R26,1
0057bc 911c      	LD   R17,X
                 ; 0009 0208 
                 ; 0009 0209     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
0057bd 940e c124 	CALL SUBOPT_0x25
0057bf 93e0 1421 	STS  _commLostTimer,R30
0057c1 93f0 1422 	STS  _commLostTimer+1,R31
0057c3 9360 1423 	STS  _commLostTimer+2,R22
0057c5 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020A     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020B 
                 ; 0009 020C     switch(frameType){
0057c7 940e c4c1 	CALL SUBOPT_0xAB
                 ; 0009 020D         case STATREQC  :     // -- Status Request COMMAND
0057c9 31ea      	CPI  R30,LOW(0x1A)
0057ca e0a0      	LDI  R26,HIGH(0x1A)
0057cb 07fa      	CPC  R31,R26
0057cc f011      	BREQ PC+3
0057cd 940c 584c 	JMP _0x12005F
                 ; 0009 020E             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
0057cf 940e c987 	CALL SUBOPT_0x176
0057d1 971d      	SBIW R26,13
0057d2 f44c      	BRGE _0x120060
                 ; 0009 020F                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
0057d3 eceb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
0057d4 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
0057d5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
0057d6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
0057d7 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 0210                 ETH_sendNack(frameID,INVALID_LENGTH);
0057d9 940e c997 	CALL SUBOPT_0x178
                 ; 0009 0211                 return;
0057db c0d3      	RJMP _0x20E0081
                 ; 0009 0212             }
                 ; 0009 0213 
                 ; 0009 0214             payload = (int) malloc (len);
                 _0x120060:
0057dc 940e c987 	CALL SUBOPT_0x176
0057de 940e c99b 	CALL SUBOPT_0x179
                 ; 0009 0215             if(payload == NULL){
0057e0 f449      	BRNE _0x120061
                 ; 0009 0216                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
0057e1 e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
0057e2 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
0057e3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
0057e4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
0057e5 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0217                 ETH_sendNack(frameID,NOT_READY);
0057e7 940e c9a1 	CALL SUBOPT_0x17A
                 ; 0009 0218                 return;
0057e9 c0c5      	RJMP _0x20E0081
                 ; 0009 0219             }
                 ; 0009 021A 
                 ; 0009 021B             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
0057ea 940e c9a5 	CALL SUBOPT_0x17B
0057ec 940e c9ac 	CALL SUBOPT_0x17C
0057ee 940e 609e 	CALL _statusRequestParser
0057f0 019f      	MOVW R18,R30
                 ; 0009 021C             if(res < 0){
0057f1 2333      	TST  R19
0057f2 f44a      	BRPL _0x120062
                 ; 0009 021D                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
0057f3 e3e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
0057f4 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
0057f5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
0057f6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
0057f7 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 021E                 free( (void *) payload );
0057f9 940e c9b5 	CALL SUBOPT_0x17D
                 ; 0009 021F                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0220                 return;
0057fb c0b3      	RJMP _0x20E0081
                 ; 0009 0221             }
                 ; 0009 0222 
                 ; 0009 0223             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
0057fc e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
0057fd e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
0057fe e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
0057ff e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
005800 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 0224             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
005802 e8ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
005803 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
005804 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
005805 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
005806 940e c9c1 	CALL SUBOPT_0x17F
                 ; 0009 0225             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
005808 eae9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
005809 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
00580a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
00580b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
00580c 940e c9c7 	CALL SUBOPT_0x180
00580e 940e c9c7 	CALL SUBOPT_0x180
005810 940e c108 	CALL SUBOPT_0x21
                 ; 0009 0226             printDebug("statusList      |");
                +
005812 ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
005813 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
005814 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
005815 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
005816 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0227 
                 ; 0009 0228             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
005818 e0e0      	LDI  R30,LOW(0)
005819 83ee      	STD  Y+6,R30
00581a 83ef      	STD  Y+6+1,R30
                 _0x120064:
00581b 01da      	MOVW R26,R20
00581c 961b      	ADIW R26,11
00581d 940e c9cd 	CALL SUBOPT_0x181
00581f f4b8      	BRSH _0x120065
                 ; 0009 0229             {
                 ; 0009 022A                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
005820 edeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
005821 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
005822 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
005823 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
005824 940e e05e 	CALL __PUTPARD1
005826 01fa      	MOVW R30,R20
005827 85a5      	LDD  R26,Z+13
005828 85b6      	LDD  R27,Z+14
005829 85ea      	LDD  R30,Y+10
00582a 85fb      	LDD  R31,Y+10+1
00582b 9631      	ADIW R30,1
00582c 87ea      	STD  Y+10,R30
00582d 87fb      	STD  Y+10+1,R31
00582e 9731      	SBIW R30,1
00582f 940e c9d4 	CALL SUBOPT_0x182
                 ; 0009 022B             }
005831 81ee      	LDD  R30,Y+6
005832 81ff      	LDD  R31,Y+6+1
005833 9631      	ADIW R30,1
005834 83ee      	STD  Y+6,R30
005835 83ff      	STD  Y+6+1,R31
005836 cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022C             printDebug("\r\n-- ..Done.. --\r\n");
                +
005837 eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
005838 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
005839 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
00583a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
00583b 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 022D 
                 ; 0009 022E             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
00583d 940e c9d9 	CALL SUBOPT_0x183
00583f e0a0      	LDI  R26,LOW(0)
005840 db28      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 022F 
                 ; 0009 0230             if( ((struct stat_req_st *)payload)->accm < 0x30){
005841 01fa      	MOVW R30,R20
005842 85a0      	LDD  R26,Z+8
005843 33a0      	CPI  R26,LOW(0x30)
005844 f418      	BRSH _0x120066
                 ; 0009 0231                 free_statusRequest((struct stat_req_st *)payload);
005845 01da      	MOVW R26,R20
005846 940e 62de 	CALL _free_statusRequest
                 ; 0009 0232             }
                 ; 0009 0233 
                 ; 0009 0234             free( (void *) payload );
                 _0x120066:
005848 01da      	MOVW R26,R20
005849 940e a519 	CALL _free
                 ; 0009 0235             break;
00584b c460      	RJMP _0x12005E
                 ; 0009 0236         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
00584c 32eb      	CPI  R30,LOW(0x2B)
00584d e0a0      	LDI  R26,HIGH(0x2B)
00584e 07fa      	CPC  R31,R26
00584f f011      	BREQ PC+3
005850 940c 5897 	JMP _0x120067
                 ; 0009 0237             if( len < (2 + sizeof(struct stat_rep_st)) ){
005852 940e c987 	CALL SUBOPT_0x176
005854 971e      	SBIW R26,14
005855 f42c      	BRGE _0x120068
                 ; 0009 0238                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
005856 efe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
005857 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
005858 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
005859 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
00585a c04a      	RJMP _0x20E0080
                 ; 0009 0239                 return;
                 ; 0009 023A             }
                 ; 0009 023B 
                 ; 0009 023C             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
00585b e2ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
00585c e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
00585d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
00585e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
00585f 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 023D             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 023E                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
005861 e5e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
005862 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
005863 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
005864 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
005865 940e e05e 	CALL __PUTPARD1
                +
005867 01fe     +MOVW R30 , R28
005868 5cee     +SUBI R30 , LOW ( - 562 )
005869 4ffd     +SBCI R31 , HIGH ( - 562 )
00586a 9001     +LD R0 , Z +
00586b 81f0     +LD R31 , Z
00586c 2de0     +MOV R30 , R0
                 	__GETW1SX 562
00586d 85e2      	LDD  R30,Z+10
00586e 940e c2e0 	CALL SUBOPT_0x65
                +
005870 01fe     +MOVW R30 , R28
005871 5cea     +SUBI R30 , LOW ( - 566 )
005872 4ffd     +SBCI R31 , HIGH ( - 566 )
005873 9001     +LD R0 , Z +
005874 81f0     +LD R31 , Z
005875 2de0     +MOV R30 , R0
                 	__GETW1SX 566
005876 85e3      	LDD  R30,Z+11
005877 940e c2e0 	CALL SUBOPT_0x65
                +
005879 01fe     +MOVW R30 , R28
00587a 5ce6     +SUBI R30 , LOW ( - 570 )
00587b 4ffd     +SBCI R31 , HIGH ( - 570 )
00587c 9001     +LD R0 , Z +
00587d 81f0     +LD R31 , Z
00587e 2de0     +MOV R30 , R0
                 	__GETW1SX 570
00587f 85e4      	LDD  R30,Z+12
005880 940e c2e0 	CALL SUBOPT_0x65
                +
005882 01fe     +MOVW R30 , R28
005883 5ce2     +SUBI R30 , LOW ( - 574 )
005884 4ffd     +SBCI R31 , HIGH ( - 574 )
005885 9001     +LD R0 , Z +
005886 81f0     +LD R31 , Z
005887 2de0     +MOV R30 , R0
                 	__GETW1SX 574
005888 85e5      	LDD  R30,Z+13
005889 940e c2e0 	CALL SUBOPT_0x65
00588b 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0009 023F             res = setTimeSyncSchema( &ptr2frame[10] );
00588d 940e c980 	CALL SUBOPT_0x175
00588f 961a      	ADIW R26,10
005890 940e 68cb 	CALL _setTimeSyncSchema
005892 019f      	MOVW R18,R30
                 ; 0009 0240             if(res < 0){
                 ; 0009 0241                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0242             }
                 ; 0009 0243             ETH_removeWaitQueue(frameID);
005893 2fa0      	MOV  R26,R16
005894 940e 69ae 	CALL _ETH_removeWaitQueue
                 ; 0009 0244             break;
005896 c415      	RJMP _0x12005E
                 ; 0009 0245         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
005897 33eb      	CPI  R30,LOW(0x3B)
005898 e0a0      	LDI  R26,HIGH(0x3B)
005899 07fa      	CPC  R31,R26
00589a f011      	BREQ PC+3
00589b 940c 5903 	JMP _0x12006A
                 ; 0009 0246             if( len < (2 + sizeof(struct event_rep_st)) ){
00589d 940e c987 	CALL SUBOPT_0x176
00589f 971a      	SBIW R26,10
0058a0 f49c      	BRGE _0x12006B
                 ; 0009 0247                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
0058a1 e8e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
0058a2 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
0058a3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
0058a4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E0080:
0058a5 940e e05e 	CALL __PUTPARD1
                +
0058a7 01fe     +MOVW R30 , R28
0058a8 5de0     +SUBI R30 , LOW ( - 560 )
0058a9 4ffd     +SBCI R31 , HIGH ( - 560 )
0058aa 9001     +LD R0 , Z +
0058ab 81f0     +LD R31 , Z
0058ac 2de0     +MOV R30 , R0
                 	__GETW1SX 560
0058ad 940e c637 	CALL SUBOPT_0xE8
                 ; 0009 0248                 return;
                 _0x20E0081:
0058af 940e e0d5 	CALL __LOADLOCR6
0058b1 96e0      	ADIW R28,48
0058b2 5fde      	SUBI R29,-2
0058b3 9508      	RET
                 ; 0009 0249             }
                 ; 0009 024A 
                 ; 0009 024B             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
0058b4 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
0058b5 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
0058b6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
0058b7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
0058b8 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 024C             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
0058ba 91a0 142b 	LDS  R26,_logEventWait
0058bc 30a0      	CPI  R26,LOW(0x0)
0058bd f021      	BREQ _0x12006D
0058be 91e0 142b 	LDS  R30,_logEventWait
0058c0 17e0      	CP   R30,R16
0058c1 f009      	BREQ _0x12006E
                 _0x12006D:
0058c2 c039      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024D             {
                 ; 0009 024E                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
0058c3 eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
0058c4 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
0058c5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
0058c6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
0058c7 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 024F 
                 ; 0009 0250                 res = LOG_openFile(&file,LOGFILE_EVENT);
0058c9 940e c29c 	CALL SUBOPT_0x5A
0058cb 940e c2f5 	CALL SUBOPT_0x69
0058cd 019f      	MOVW R18,R30
                 ; 0009 0251                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
0058ce 2333      	TST  R19
0058cf f42a      	BRPL _0x12006F
                +
0058d0 e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
0058d1 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
0058d2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
0058d3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
0058d4 c01d      	RJMP _0x120117
                 ; 0009 0252                 else
                 _0x12006F:
                 ; 0009 0253                 {
                 ; 0009 0254                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
0058d5 940e c29c 	CALL SUBOPT_0x5A
0058d7 940e c349 	CALL SUBOPT_0x72
0058d9 940e c9de 	CALL SUBOPT_0x184
                 ; 0009 0255                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
0058db f41a      	BRPL _0x120071
0058dc 940e c9e6 	CALL SUBOPT_0x185
                 ; 0009 0256                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
0058de c00c      	RJMP _0x120072
                 _0x120071:
                +
0058df e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
0058e0 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
0058e1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
0058e2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
0058e3 940e c300 	CALL SUBOPT_0x6A
0058e5 940e c349 	CALL SUBOPT_0x72
0058e7 940e c5b0 	CALL SUBOPT_0xD2
0058e9 940e c108 	CALL SUBOPT_0x21
                 _0x120072:
                 ; 0009 0257 
                 ; 0009 0258                     res = LOG_closeFile(&file);
0058eb 940e c9ec 	CALL SUBOPT_0x186
                 ; 0009 0259                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
0058ed f462      	BRPL _0x120073
                +
0058ee e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
0058ef e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
0058f0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
0058f1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
0058f2 940e e05e 	CALL __PUTPARD1
0058f4 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0058f5 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0058f6 940e c191 	CALL SUBOPT_0x34
0058f8 940e c0a5 	CALL SUBOPT_0x12
                 ; 0009 025A                 }
                 _0x120073:
                 ; 0009 025B 
                 ; 0009 025C                 logEventWait.frameID    = 0;
0058fa 940e c339 	CALL SUBOPT_0x71
                 ; 0009 025D                 logEventWait.logID      = 0;
                 ; 0009 025E             }
                 ; 0009 025F             removeEventLogQueue(frameID);
                 _0x12006C:
0058fc 2fa0      	MOV  R26,R16
0058fd 940e 871b 	CALL _removeEventLogQueue
                 ; 0009 0260             ETH_removeWaitQueue(frameID);
0058ff 2fa0      	MOV  R26,R16
005900 940e 69ae 	CALL _ETH_removeWaitQueue
                 ; 0009 0261             break;
005902 c3a9      	RJMP _0x12005E
                 ; 0009 0262         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
005903 34ea      	CPI  R30,LOW(0x4A)
005904 e0a0      	LDI  R26,HIGH(0x4A)
005905 07fa      	CPC  R31,R26
005906 f011      	BREQ PC+3
005907 940c 5a3a 	JMP _0x120074
                 ; 0009 0263             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
005909 eaed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
00590a e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
00590b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
00590c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
00590d 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0264             print_payload(ptr2frame, len);
00590f 940e c9a5 	CALL SUBOPT_0x17B
005911 93fa      	ST   -Y,R31
005912 93ea      	ST   -Y,R30
005913 940e c980 	CALL SUBOPT_0x175
005915 940e 9e6a 	CALL _print_payload
                 ; 0009 0265 
                 ; 0009 0266             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
005917 940e c987 	CALL SUBOPT_0x176
005919 971c      	SBIW R26,12
00591a f44c      	BRGE _0x120075
                 ; 0009 0267                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
00591b ede1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
00591c e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
00591d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
00591e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
00591f 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 0268                 ETH_sendNack(frameID,INVALID_LENGTH);
005921 940e c997 	CALL SUBOPT_0x178
                 ; 0009 0269                 return;
005923 c388      	RJMP _0x20E007F
                 ; 0009 026A             }
                 ; 0009 026B 
                 ; 0009 026C             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
005924 e0ae      	LDI  R26,LOW(14)
005925 940e c9f9 	CALL SUBOPT_0x187
                 ; 0009 026D             if(payload == NULL){
005927 f459      	BRNE _0x120076
                 ; 0009 026E                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
005928 940e c9fb 	CALL SUBOPT_0x188
                +
00592a e0ee     +LDI R30 , LOW ( 0xE )
00592b e0f0     +LDI R31 , HIGH ( 0xE )
00592c e060     +LDI R22 , BYTE3 ( 0xE )
00592d e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
00592e 940e ca02 	CALL SUBOPT_0x189
                 ; 0009 026F                 ETH_sendNack(frameID,NOT_READY);
005930 940e c9a1 	CALL SUBOPT_0x17A
                 ; 0009 0270                 return;
005932 c379      	RJMP _0x20E007F
                 ; 0009 0271             }
                 ; 0009 0272 
                 ; 0009 0273             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
005933 940e ca06 	CALL SUBOPT_0x18A
005935 940e 60fa 	CALL _configManageParser
005937 019f      	MOVW R18,R30
                 ; 0009 0274             if(res < 0){
005938 2333      	TST  R19
005939 f44a      	BRPL _0x120077
                 ; 0009 0275                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
00593a e4e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
00593b e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
00593c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
00593d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
00593e 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0276                 free( (void *) payload );
005940 940e c9b5 	CALL SUBOPT_0x17D
                 ; 0009 0277                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0278                 return;
005942 c369      	RJMP _0x20E007F
                 ; 0009 0279             }
                 ; 0009 027A 
                 ; 0009 027B             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
005943 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
005944 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
005945 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
005946 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
005947 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 027C             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
005949 940e ca08 	CALL SUBOPT_0x18B
                 ; 0009 027D             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
00594b ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
00594c e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
00594d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
00594e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
00594f 940e ca0d 	CALL SUBOPT_0x18C
                 ; 0009 027E 
                 ; 0009 027F             switch( ((struct conf_man_st *)payload)->accd ){
005951 940e ca13 	CALL SUBOPT_0x18D
                 ; 0009 0280                 case CONF_RD_CMD    :   // -- Configration Read -- //
005953 f011      	BREQ PC+3
005954 940c 59c3 	JMP _0x12007B
                 ; 0009 0281                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
005956 01fa      	MOVW R30,R20
005957 85a1      	LDD  R26,Z+9
005958 940e 62f3 	CALL _getConfigLen
00595a 019f      	MOVW R18,R30
                 ; 0009 0282                                         if(res < 0){
00595b 2333      	TST  R19
00595c f43a      	BRPL _0x12007C
                 ; 0009 0283                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
00595d ede4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
00595e e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
00595f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
005960 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
005961 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0284                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005963 c0cc      	RJMP _0x120118
                 ; 0009 0285                                             break;
                 ; 0009 0286                                         }
                 ; 0009 0287 
                 ; 0009 0288                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
005964 01d9      	MOVW R26,R18
005965 940e a4fe 	CALL _malloc
005967 87ea      	STD  Y+10,R30
005968 87fb      	STD  Y+10+1,R31
                 ; 0009 0289                                         if(cnfgRd == NULL){
005969 9730      	SBIW R30,0
00596a f449      	BRNE _0x12007D
                 ; 0009 028A                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
00596b e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
00596c e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
00596d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
00596e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
00596f 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 028B                                             ETH_sendNack(frameID,NOT_READY);
005971 930a      	ST   -Y,R16
005972 e5a0      	LDI  R26,LOW(80)
005973 c0be      	RJMP _0x120119
                 ; 0009 028C                                             break;
                 ; 0009 028D                                         }
                 ; 0009 028E 
                 ; 0009 028F                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
005974 01fa      	MOVW R30,R20
005975 85a1      	LDD  R26,Z+9
005976 93aa      	ST   -Y,R26
005977 85ab      	LDD  R26,Y+11
005978 85bc      	LDD  R27,Y+11+1
005979 940e 6345 	CALL _configRead
00597b 019f      	MOVW R18,R30
                 ; 0009 0290                                         if(res <= 0){
00597c 2400      	CLR  R0
00597d 1602      	CP   R0,R18
00597e 0603      	CPC  R0,R19
00597f f164      	BRLT _0x12007E
                 ; 0009 0291                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
005980 e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
005981 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
005982 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
005983 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
005984 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0292                                             if(res == -1){
005986 efef      	LDI  R30,LOW(65535)
005987 efff      	LDI  R31,HIGH(65535)
005988 17e2      	CP   R30,R18
005989 07f3      	CPC  R31,R19
00598a f419      	BRNE _0x12007F
                 ; 0009 0293                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
00598b 930a      	ST   -Y,R16
00598c e3a0      	LDI  R26,LOW(48)
00598d c018      	RJMP _0x12011A
                 ; 0009 0294                                             }
                 ; 0009 0295                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
00598e efee      	LDI  R30,LOW(65534)
00598f efff      	LDI  R31,HIGH(65534)
005990 17e2      	CP   R30,R18
005991 07f3      	CPC  R31,R19
005992 f021      	BREQ _0x120082
005993 2400      	CLR  R0
005994 1602      	CP   R0,R18
005995 0603      	CPC  R0,R19
005996 f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0296                                                 ETH_sendNack(frameID,NOT_READY);
005997 930a      	ST   -Y,R16
005998 e5a0      	LDI  R26,LOW(80)
005999 c00c      	RJMP _0x12011A
                 ; 0009 0297                                             }
                 ; 0009 0298                                             else if(res == -3){
                 _0x120081:
00599a efed      	LDI  R30,LOW(65533)
00599b efff      	LDI  R31,HIGH(65533)
00599c 17e2      	CP   R30,R18
00599d 07f3      	CPC  R31,R19
00599e f429      	BRNE _0x120085
                 ; 0009 0299                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029A                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029B                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029C                                                                             ERROR);
00599f 940e c9d9 	CALL SUBOPT_0x183
0059a1 940e ca17 	CALL SUBOPT_0x18E
                 ; 0009 029D                                             }
                 ; 0009 029E                                             else{
0059a3 c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 029F                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
0059a4 930a      	ST   -Y,R16
0059a5 efaf      	LDI  R26,LOW(255)
                 _0x12011A:
0059a6 d99d      	RCALL _ETH_sendNack
                 ; 0009 02A0                                             }
                 _0x120086:
                 ; 0009 02A1 
                 ; 0009 02A2                                             free((void *) cnfgRd);
0059a7 85aa      	LDD  R26,Y+10
0059a8 85bb      	LDD  R27,Y+10+1
0059a9 940e a519 	CALL _free
                 ; 0009 02A3                                             break;
0059ab c087      	RJMP _0x12007A
                 ; 0009 02A4                                         }
                 ; 0009 02A5 
                 ; 0009 02A6                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A7                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02A8                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02A9                                                                         SUCCESS,
                 ; 0009 02AA                                                                         (char *)cnfgRd,
                 ; 0009 02AB                                                                         res  );
0059ac 940e c9d9 	CALL SUBOPT_0x183
0059ae 940e ca1d 	CALL SUBOPT_0x18F
0059b0 85ee      	LDD  R30,Y+14
0059b1 85ff      	LDD  R31,Y+14+1
0059b2 93fa      	ST   -Y,R31
0059b3 93ea      	ST   -Y,R30
0059b4 01d9      	MOVW R26,R18
0059b5 940e ca23 	CALL SUBOPT_0x190
                 ; 0009 02AC                                         if(res < 0){
0059b7 f432      	BRPL _0x120087
                 ; 0009 02AD                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
0059b8 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
0059b9 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
0059ba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
0059bb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
0059bc 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 02AE                                         }
                 ; 0009 02AF 
                 ; 0009 02B0                                         free( (void *) cnfgRd );
                 _0x120087:
0059be 85aa      	LDD  R26,Y+10
0059bf 85bb      	LDD  R27,Y+10+1
0059c0 940e a519 	CALL _free
                 ; 0009 02B1                                         break;
0059c2 c070      	RJMP _0x12007A
                 ; 0009 02B2                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
0059c3 32e0      	CPI  R30,LOW(0x20)
0059c4 e0a0      	LDI  R26,HIGH(0x20)
0059c5 07fa      	CPC  R31,R26
0059c6 f011      	BREQ PC+3
0059c7 940c 5a0e 	JMP _0x120088
                 ; 0009 02B3                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
0059c9 01fa      	MOVW R30,R20
0059ca 85a2      	LDD  R26,Z+10
0059cb 85b3      	LDD  R27,Z+11
0059cc 940e a4fe 	CALL _malloc
0059ce 940e ca28 	CALL SUBOPT_0x191
                 ; 0009 02B4                                         if(cnfgWr == NULL){
0059d0 9730      	SBIW R30,0
0059d1 f449      	BRNE _0x120089
                 ; 0009 02B5                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
0059d2 e9e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
0059d3 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
0059d4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
0059d5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
0059d6 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 02B6                                             ETH_sendNack(frameID,NOT_READY);
0059d8 930a      	ST   -Y,R16
0059d9 e5a0      	LDI  R26,LOW(80)
0059da c057      	RJMP _0x120119
                 ; 0009 02B7                                             break;
                 ; 0009 02B8                                         }
                 ; 0009 02B9 
                 ; 0009 02BA                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
0059db 940e ca2b 	CALL SUBOPT_0x192
0059dd 01fa      	MOVW R30,R20
0059de 85a4      	LDD  R26,Z+12
0059df 85b5      	LDD  R27,Z+13
0059e0 93ba      	ST   -Y,R27
0059e1 93aa      	ST   -Y,R26
0059e2 85a2      	LDD  R26,Z+10
0059e3 85b3      	LDD  R27,Z+11
0059e4 940e a53b 	CALL _memcpy
                 ; 0009 02BB 
                 ; 0009 02BC                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BD                                                             cnfgWr,
                 ; 0009 02BE                                                             (int) (((struct conf_man_st *)payload)->confLen) );
0059e6 01fa      	MOVW R30,R20
0059e7 85a1      	LDD  R26,Z+9
0059e8 93aa      	ST   -Y,R26
0059e9 940e ca30 	CALL SUBOPT_0x193
0059eb 01fa      	MOVW R30,R20
0059ec 85a2      	LDD  R26,Z+10
0059ed 85b3      	LDD  R27,Z+11
0059ee 940e 6775 	CALL _configWrite
0059f0 019f      	MOVW R18,R30
                 ; 0009 02BF 
                 ; 0009 02C0                                         free(cnfgWr);
0059f1 85a8      	LDD  R26,Y+8
0059f2 85b9      	LDD  R27,Y+8+1
0059f3 940e a519 	CALL _free
                 ; 0009 02C1                                         if(res < 0){
0059f5 2333      	TST  R19
0059f6 f45a      	BRPL _0x12008A
                 ; 0009 02C2                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
0059f7 ece4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
0059f8 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
0059f9 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
0059fa e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
0059fb 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 02C3                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C6                                                                         ERROR);
0059fd 940e c9d9 	CALL SUBOPT_0x183
0059ff 940e ca17 	CALL SUBOPT_0x18E
                 ; 0009 02C7                                             break;
005a01 c031      	RJMP _0x12007A
                 ; 0009 02C8                                         }
                 ; 0009 02C9 
                 ; 0009 02CA 
                 ; 0009 02CB                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CC                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CD                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02CE                                                                         SUCCESS,
                 ; 0009 02CF                                                                         NULL,
                 ; 0009 02D0                                                                         0  );
005a02 940e c9d9 	CALL SUBOPT_0x183
005a04 940e ca1d 	CALL SUBOPT_0x18F
005a06 940e ca35 	CALL SUBOPT_0x194
005a08 940e ca23 	CALL SUBOPT_0x190
                 ; 0009 02D1                                         if(res < 0){
005a0a f412      	BRPL _0x12008B
                 ; 0009 02D2                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005a0b 940e ca3a 	CALL SUBOPT_0x195
                 ; 0009 02D3                                         }
                 ; 0009 02D4 
                 ; 0009 02D5                                         break;
                 _0x12008B:
005a0d c025      	RJMP _0x12007A
                 ; 0009 02D6                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
005a0e 33e0      	CPI  R30,LOW(0x30)
005a0f e0a0      	LDI  R26,HIGH(0x30)
005a10 07fa      	CPC  R31,R26
005a11 f4e1      	BRNE _0x12008F
                 ; 0009 02D7                                         res = configConfirm();
005a12 940e 6942 	CALL _configConfirm
005a14 019f      	MOVW R18,R30
                 ; 0009 02D8                                         if(res < 0){
005a15 2333      	TST  R19
005a16 f45a      	BRPL _0x12008D
                 ; 0009 02D9                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
005a17 e3e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
005a18 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
005a19 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
005a1a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
005a1b 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 02DA                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DB                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DC                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DD                                                                         ERROR);
005a1d 940e c9d9 	CALL SUBOPT_0x183
005a1f 940e ca17 	CALL SUBOPT_0x18E
                 ; 0009 02DE                                             break;
005a21 c011      	RJMP _0x12007A
                 ; 0009 02DF                                         }
                 ; 0009 02E0 
                 ; 0009 02E1                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E2                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E3                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E4                                                                         SUCCESS,
                 ; 0009 02E5                                                                         NULL,
                 ; 0009 02E6                                                                         0  );
005a22 940e c9d9 	CALL SUBOPT_0x183
005a24 940e ca1d 	CALL SUBOPT_0x18F
005a26 940e ca35 	CALL SUBOPT_0x194
005a28 940e ca23 	CALL SUBOPT_0x190
                 ; 0009 02E7                                         if(res < 0){
005a2a f412      	BRPL _0x12008E
                 ; 0009 02E8                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005a2b 940e ca3a 	CALL SUBOPT_0x195
                 ; 0009 02E9                                         }
                 ; 0009 02EA 
                 ; 0009 02EB                                         break;
                 _0x12008E:
005a2d c005      	RJMP _0x12007A
                 ; 0009 02EC                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02ED                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02EE                                                         ((struct conf_man_st *)payload)->accd );
005a2e 940e ca40 	CALL SUBOPT_0x196
                 ; 0009 02EF                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
005a30 930a      	ST   -Y,R16
005a31 e3a0      	LDI  R26,LOW(48)
                 _0x120119:
005a32 d911      	RCALL _ETH_sendNack
                 ; 0009 02F0                                         break;
                 ; 0009 02F1             }
                 _0x12007A:
                 ; 0009 02F2 
                 ; 0009 02F3             free_configManage((struct conf_man_st *)payload);
005a33 01da      	MOVW R26,R20
005a34 940e 62e5 	CALL _free_configManage
                 ; 0009 02F4             free( (void *) payload );
005a36 01da      	MOVW R26,R20
005a37 940e a519 	CALL _free
                 ; 0009 02F5 
                 ; 0009 02F6             break;
005a39 c272      	RJMP _0x12005E
                 ; 0009 02F7         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
005a3a 35eb      	CPI  R30,LOW(0x5B)
005a3b e0a0      	LDI  R26,HIGH(0x5B)
005a3c 07fa      	CPC  R31,R26
005a3d f011      	BREQ PC+3
005a3e 940c 5a9a 	JMP _0x120090
                 ; 0009 02F8             if( len < (2 + sizeof(struct data_rep_st)) ){
005a40 940e c987 	CALL SUBOPT_0x176
005a42 971a      	SBIW R26,10
005a43 f43c      	BRGE _0x120091
                 ; 0009 02F9                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
005a44 eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
005a45 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
005a46 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
005a47 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
005a48 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 02FA                 return;
005a4a c261      	RJMP _0x20E007F
                 ; 0009 02FB             }
                 ; 0009 02FC 
                 ; 0009 02FD             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
005a4b ede6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
005a4c e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
005a4d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
005a4e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
005a4f 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 02FE             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
005a51 91a0 1426 	LDS  R26,_logDataWait
005a53 30a0      	CPI  R26,LOW(0x0)
005a54 f021      	BREQ _0x120093
005a55 91e0 1426 	LDS  R30,_logDataWait
005a57 17e0      	CP   R30,R16
005a58 f009      	BREQ _0x120094
                 _0x120093:
005a59 c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 02FF             {
                 ; 0009 0300                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
005a5a efec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
005a5b e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
005a5c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
005a5d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
005a5e 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0301 
                 ; 0009 0302                 res = LOG_openFile(&file,LOGFILE_DATA);
005a60 940e c29c 	CALL SUBOPT_0x5A
005a62 940e c2ae 	CALL SUBOPT_0x5E
005a64 019f      	MOVW R18,R30
                 ; 0009 0303                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
005a65 2333      	TST  R19
005a66 f42a      	BRPL _0x120095
                +
005a67 e0ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005a68 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005a69 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005a6a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005a6b c01d      	RJMP _0x12011B
                 ; 0009 0304                 else
                 _0x120095:
                 ; 0009 0305                 {
                 ; 0009 0306                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
005a6c 940e c29c 	CALL SUBOPT_0x5A
005a6e 940e c323 	CALL SUBOPT_0x6F
005a70 940e c9de 	CALL SUBOPT_0x184
                 ; 0009 0307                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005a72 f41a      	BRPL _0x120097
005a73 940e c9e6 	CALL SUBOPT_0x185
                 ; 0009 0308                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
005a75 c00c      	RJMP _0x120098
                 _0x120097:
                +
005a76 e5ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
005a77 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
005a78 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005a79 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005a7a 940e c2b9 	CALL SUBOPT_0x5F
005a7c 940e c323 	CALL SUBOPT_0x6F
005a7e 940e c5b0 	CALL SUBOPT_0xD2
005a80 940e c108 	CALL SUBOPT_0x21
                 _0x120098:
                 ; 0009 0309 
                 ; 0009 030A                     res = LOG_closeFile(&file);
005a82 940e c9ec 	CALL SUBOPT_0x186
                 ; 0009 030B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
005a84 f462      	BRPL _0x120099
                +
005a85 e8e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
005a86 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
005a87 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
005a88 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
005a89 940e e05e 	CALL __PUTPARD1
005a8b eae8      	LDI  R30,LOW(_LOGFILE_DATA)
005a8c e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
005a8d 940e c191 	CALL SUBOPT_0x34
005a8f 940e c0a5 	CALL SUBOPT_0x12
                 ; 0009 030C                 }
                 _0x120099:
                 ; 0009 030D 
                 ; 0009 030E                 logDataWait.frameID    = 0;
005a91 940e c313 	CALL SUBOPT_0x6E
                 ; 0009 030F                 logDataWait.logID      = 0;
                 ; 0009 0310             }
                 ; 0009 0311             removeDataLogQueue(frameID);
                 _0x120092:
005a93 2fa0      	MOV  R26,R16
005a94 940e 8654 	CALL _removeDataLogQueue
                 ; 0009 0312             ETH_removeWaitQueue(frameID);
005a96 2fa0      	MOV  R26,R16
005a97 940e 69ae 	CALL _ETH_removeWaitQueue
                 ; 0009 0313             break;
005a99 c212      	RJMP _0x12005E
                 ; 0009 0314         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
005a9a 36ea      	CPI  R30,LOW(0x6A)
005a9b e0a0      	LDI  R26,HIGH(0x6A)
005a9c 07fa      	CPC  R31,R26
005a9d f011      	BREQ PC+3
005a9e 940c 5b06 	JMP _0x12009A
                 ; 0009 0315             if( len < (2 + sizeof(struct log_manic_st)) ){
005aa0 940e c987 	CALL SUBOPT_0x176
005aa2 9753      	SBIW R26,19
005aa3 f44c      	BRGE _0x12009B
                 ; 0009 0316                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
005aa4 e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
005aa5 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
005aa6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
005aa7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
005aa8 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 0317                 ETH_sendNack(frameID,INVALID_LENGTH);
005aaa 940e c997 	CALL SUBOPT_0x178
                 ; 0009 0318                 return;
005aac c1ff      	RJMP _0x20E007F
                 ; 0009 0319             }
                 ; 0009 031A 
                 ; 0009 031B             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
005aad e1a1      	LDI  R26,LOW(17)
005aae 940e c9f9 	CALL SUBOPT_0x187
                 ; 0009 031C             if(payload == NULL){
005ab0 f459      	BRNE _0x12009C
                 ; 0009 031D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
005ab1 940e c9fb 	CALL SUBOPT_0x188
                +
005ab3 e1e1     +LDI R30 , LOW ( 0x11 )
005ab4 e0f0     +LDI R31 , HIGH ( 0x11 )
005ab5 e060     +LDI R22 , BYTE3 ( 0x11 )
005ab6 e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
005ab7 940e ca02 	CALL SUBOPT_0x189
                 ; 0009 031E                 ETH_sendNack(frameID,NOT_READY);
005ab9 940e c9a1 	CALL SUBOPT_0x17A
                 ; 0009 031F                 return;
005abb c1f0      	RJMP _0x20E007F
                 ; 0009 0320             }
                 ; 0009 0321 
                 ; 0009 0322             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
005abc 940e ca06 	CALL SUBOPT_0x18A
005abe 940e 6180 	CALL _logManipulationCmdParser
005ac0 019f      	MOVW R18,R30
                 ; 0009 0323             if(res < 0){
005ac1 2333      	TST  R19
005ac2 f42a      	BRPL _0x12009D
                 ; 0009 0324                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005ac3 940e ca45 	CALL SUBOPT_0x197
                 ; 0009 0325                 free( (void *) payload );
005ac5 940e c9b5 	CALL SUBOPT_0x17D
                 ; 0009 0326                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0327                 return;
005ac7 c1e4      	RJMP _0x20E007F
                 ; 0009 0328             }
                 ; 0009 0329 
                 ; 0009 032A             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
005ac8 e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
005ac9 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
005aca e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
005acb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
005acc 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 032B             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
005ace 940e ca08 	CALL SUBOPT_0x18B
                 ; 0009 032C             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
005ad0 ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
005ad1 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
005ad2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
005ad3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
005ad4 940e ca4b 	CALL SUBOPT_0x198
                 ; 0009 032D             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
005ad6 eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
005ad7 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
005ad8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
005ad9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
005ada 940e e05e 	CALL __PUTPARD1
005adc 01fa      	MOVW R30,R20
                +
005add 85a5     +LDD R26 , Z + 13
005ade 85b6     +LDD R27 , Z + 13 + 1
005adf 8587     +LDD R24 , Z + 13 + 2
005ae0 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005ae1 940e ca56 	CALL SUBOPT_0x199
                 ; 0009 032E 
                 ; 0009 032F             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0330                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0331                                             ((struct log_manic_st *)payload)->tStop);
005ae3 01fa      	MOVW R30,R20
005ae4 85a0      	LDD  R26,Z+8
005ae5 93aa      	ST   -Y,R26
005ae6 940e ca5a 	CALL SUBOPT_0x19A
005ae8 940e e063 	CALL __PUTPARD2
005aea 01fa      	MOVW R30,R20
                +
005aeb 85a5     +LDD R26 , Z + 13
005aec 85b6     +LDD R27 , Z + 13 + 1
005aed 8587     +LDD R24 , Z + 13 + 2
005aee 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005aef 940e 68b2 	CALL _setLogManipulateSchema
005af1 019f      	MOVW R18,R30
                 ; 0009 0332             if(res < 0){
005af2 2333      	TST  R19
005af3 f452      	BRPL _0x12009E
                 ; 0009 0333                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
005af4 efea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
005af5 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
005af6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
005af7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
005af8 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0334                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
005afa 940e c9d9 	CALL SUBOPT_0x183
005afc e0a1      	LDI  R26,LOW(1)
005afd daac      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0335             }
                 ; 0009 0336 
                 ; 0009 0337             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
005afe 940e c9d9 	CALL SUBOPT_0x183
005b00 e0a0      	LDI  R26,LOW(0)
005b01 daa8      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0338 
                 ; 0009 0339             free( (void *) payload );
005b02 01da      	MOVW R26,R20
005b03 940e a519 	CALL _free
                 ; 0009 033A 
                 ; 0009 033B             break;
005b05 c1a6      	RJMP _0x12005E
                 ; 0009 033C         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
005b06 36eb      	CPI  R30,LOW(0x6B)
005b07 e0a0      	LDI  R26,HIGH(0x6B)
005b08 07fa      	CPC  R31,R26
005b09 f5b1      	BRNE _0x12009F
                 ; 0009 033D             if( len < (2 + sizeof(struct log_mania_st)) ){
005b0a 940e c987 	CALL SUBOPT_0x176
005b0c 971c      	SBIW R26,12
005b0d f43c      	BRGE _0x1200A0
                 ; 0009 033E                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
005b0e e3e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
005b0f e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
005b10 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
005b11 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
005b12 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 033F                 return;
005b14 c197      	RJMP _0x20E007F
                 ; 0009 0340             }
                 ; 0009 0341 
                 ; 0009 0342             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
005b15 e0aa      	LDI  R26,LOW(10)
005b16 940e c9f9 	CALL SUBOPT_0x187
                 ; 0009 0343             if(payload == NULL){
005b18 f429      	BRNE _0x1200A1
                 ; 0009 0344                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
005b19 940e c9fb 	CALL SUBOPT_0x188
005b1b 940e ca5f 	CALL SUBOPT_0x19B
                 ; 0009 0345                 return;
005b1d c18e      	RJMP _0x20E007F
                 ; 0009 0346             }
                 ; 0009 0347 
                 ; 0009 0348             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
005b1e 940e ca64 	CALL SUBOPT_0x19C
005b20 940e 6208 	CALL _logManipulationAckParser
005b22 019f      	MOVW R18,R30
                 ; 0009 0349             if(res < 0){
005b23 2333      	TST  R19
005b24 f432      	BRPL _0x1200A2
                 ; 0009 034A                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005b25 940e ca45 	CALL SUBOPT_0x197
                 ; 0009 034B                 free( (void *) payload );
005b27 01da      	MOVW R26,R20
005b28 940e a519 	CALL _free
                 ; 0009 034C                 return;
005b2a c181      	RJMP _0x20E007F
                 ; 0009 034D             }
                 ; 0009 034E 
                 ; 0009 034F             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
005b2b e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
005b2c e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
005b2d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
005b2e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
005b2f 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 0350             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
005b31 940e ca08 	CALL SUBOPT_0x18B
                 ; 0009 0351             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
005b33 e9ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
005b34 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
005b35 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
005b36 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
005b37 940e ca0d 	CALL SUBOPT_0x18C
                 ; 0009 0352 
                 ; 0009 0353             free( (void *) payload );
005b39 01da      	MOVW R26,R20
005b3a 940e a519 	CALL _free
                 ; 0009 0354             ETH_removeWaitQueue(frameID);
005b3c 2fa0      	MOV  R26,R16
005b3d 940e 69ae 	CALL _ETH_removeWaitQueue
                 ; 0009 0355             break;
005b3f c16c      	RJMP _0x12005E
                 ; 0009 0356         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
005b40 37ea      	CPI  R30,LOW(0x7A)
005b41 e0a0      	LDI  R26,HIGH(0x7A)
005b42 07fa      	CPC  R31,R26
005b43 f011      	BREQ PC+3
005b44 940c 5bce 	JMP _0x1200A3
                 ; 0009 0357             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
005b46 940e c987 	CALL SUBOPT_0x176
005b48 971c      	SBIW R26,12
005b49 f44c      	BRGE _0x1200A4
                 ; 0009 0358                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
005b4a ebe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005b4b e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005b4c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
005b4d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
005b4e 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 0359                 ETH_sendNack(frameID,INVALID_LENGTH);
005b50 940e c997 	CALL SUBOPT_0x178
                 ; 0009 035A                 return;
005b52 c159      	RJMP _0x20E007F
                 ; 0009 035B             }
                 ; 0009 035C 
                 ; 0009 035D             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005b53 e0ad      	LDI  R26,LOW(13)
005b54 940e c9f9 	CALL SUBOPT_0x187
                 ; 0009 035E             if(payload == NULL){
005b56 f439      	BRNE _0x1200A5
                 ; 0009 035F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
005b57 940e c9fb 	CALL SUBOPT_0x188
005b59 940e ca6a 	CALL SUBOPT_0x19D
                 ; 0009 0360                 ETH_sendNack(frameID,NOT_READY);
005b5b 940e c9a1 	CALL SUBOPT_0x17A
                 ; 0009 0361                 return;
005b5d c14e      	RJMP _0x20E007F
                 ; 0009 0362             }
                 ; 0009 0363 
                 ; 0009 0364             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
005b5e 940e ca06 	CALL SUBOPT_0x18A
005b60 940e 6219 	CALL _networkMaintenanceParser
005b62 019f      	MOVW R18,R30
                 ; 0009 0365             if(res < 0){
005b63 2333      	TST  R19
005b64 f44a      	BRPL _0x1200A6
                 ; 0009 0366                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
005b65 efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
005b66 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
005b67 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
005b68 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
005b69 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0367                 free( (void *) payload );
005b6b 940e c9b5 	CALL SUBOPT_0x17D
                 ; 0009 0368                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0369                 return;
005b6d c13e      	RJMP _0x20E007F
                 ; 0009 036A             }
                 ; 0009 036B 
                 ; 0009 036C             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
005b6e e2ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
005b6f e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
005b70 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
005b71 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
005b72 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 036D             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005b74 940e ca6f 	CALL SUBOPT_0x19E
                 ; 0009 036E             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
005b76 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
005b77 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
005b78 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
005b79 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
005b7a 940e c9c7 	CALL SUBOPT_0x180
005b7c 940e ca02 	CALL SUBOPT_0x189
                 ; 0009 036F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005b7e 01fa      	MOVW R30,R20
005b7f 940e ca74 	CALL SUBOPT_0x19F
005b81 f4a8      	BRSH _0x1200A7
                 ; 0009 0370                 printDebug("data ---        \r\n");
                +
005b82 e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
005b83 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005b84 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
005b85 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
005b86 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0371                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
005b88 01fa      	MOVW R30,R20
005b89 85a3      	LDD  R26,Z+11
005b8a 85b4      	LDD  R27,Z+12
005b8b 93ba      	ST   -Y,R27
005b8c 93aa      	ST   -Y,R26
005b8d 85a1      	LDD  R26,Z+9
005b8e 85b2      	LDD  R27,Z+10
005b8f 940e 9e6a 	CALL _print_payload
                 ; 0009 0372                 printDebug("--------\r\n");
                +
005b91 eae0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
005b92 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
005b93 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
005b94 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
005b95 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0373             }
                 ; 0009 0374 
                 ; 0009 0375             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
005b97 940e ca13 	CALL SUBOPT_0x18D
                 ; 0009 0376                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
005b99 f529      	BRNE _0x1200AE
005b9a 01fa      	MOVW R30,R20
005b9b 85a3      	LDD  R26,Z+11
005b9c 85b4      	LDD  R27,Z+12
005b9d 940e 68cb 	CALL _setTimeSyncSchema
005b9f 019f      	MOVW R18,R30
                 ; 0009 0377                                         if(res < 0){
005ba0 2333      	TST  R19
005ba1 f47a      	BRPL _0x1200AC
                 ; 0009 0378                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
005ba2 eaeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
005ba3 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
005ba4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
005ba5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
005ba6 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0379                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005ba8 940e ca79 	CALL SUBOPT_0x1A0
                 ; 0009 037A                                             free_networkMaintenance((struct netw_man_st *)payload);
005baa 01da      	MOVW R26,R20
005bab 940e 62ec 	CALL _free_networkMaintenance
                 ; 0009 037B                                             free( (void *) payload );
005bad 01da      	MOVW R26,R20
005bae 940e a519 	CALL _free
                 ; 0009 037C                                             return;
005bb0 c0fb      	RJMP _0x20E007F
                 ; 0009 037D                                         }
                 ; 0009 037E 
                 ; 0009 037F                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
005bb1 940e c9d9 	CALL SUBOPT_0x183
005bb3 e0a0      	LDI  R26,LOW(0)
005bb4 da11      	RCALL _ETH_sendNetworkMaintenanceAck
005bb5 019f      	MOVW R18,R30
                 ; 0009 0380 
                 ; 0009 0381                                         if(res < 0){
005bb6 2333      	TST  R19
005bb7 f432      	BRPL _0x1200AD
                 ; 0009 0382                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
005bb8 edec     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
005bb9 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
005bba e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
005bbb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
005bbc 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0383                                         }
                 ; 0009 0384 
                 ; 0009 0385                                         break;
                 _0x1200AD:
005bbe c004      	RJMP _0x1200AA
                 ; 0009 0386                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0387                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 0388                                                         ((struct netw_man_st *)payload)->cmd );
005bbf 940e ca40 	CALL SUBOPT_0x196
                 ; 0009 0389                                         ETH_sendNack(frameID,INVALID_PARAMETER);
005bc1 940e ca79 	CALL SUBOPT_0x1A0
                 ; 0009 038A                                         break;
                 ; 0009 038B             }
                 _0x1200AA:
                 ; 0009 038C 
                 ; 0009 038D             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005bc3 01fa      	MOVW R30,R20
005bc4 940e ca74 	CALL SUBOPT_0x19F
005bc6 f418      	BRSH _0x1200AF
                 ; 0009 038E                 free_networkMaintenance((struct netw_man_st *)payload);
005bc7 01da      	MOVW R26,R20
005bc8 940e 62ec 	CALL _free_networkMaintenance
                 ; 0009 038F             }
                 ; 0009 0390 
                 ; 0009 0391             free( (void *) payload );
                 _0x1200AF:
005bca 01da      	MOVW R26,R20
005bcb 940e a519 	CALL _free
                 ; 0009 0392 
                 ; 0009 0393             break;
005bcd c0de      	RJMP _0x12005E
                 ; 0009 0394         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
005bce 38ea      	CPI  R30,LOW(0x8A)
005bcf e0a0      	LDI  R26,HIGH(0x8A)
005bd0 07fa      	CPC  R31,R26
005bd1 f011      	BREQ PC+3
005bd2 940c 5c37 	JMP _0x1200B0
                 ; 0009 0395             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
005bd4 940e c987 	CALL SUBOPT_0x176
005bd6 971f      	SBIW R26,15
005bd7 f44c      	BRGE _0x1200B1
                 ; 0009 0396                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
005bd8 e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
005bd9 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
005bda e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
005bdb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
005bdc 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 0397                 ETH_sendNack(frameID,INVALID_LENGTH);
005bde 940e c997 	CALL SUBOPT_0x178
                 ; 0009 0398                 return;
005be0 c0cb      	RJMP _0x20E007F
                 ; 0009 0399             }
                 ; 0009 039A 
                 ; 0009 039B             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
005be1 e0ad      	LDI  R26,LOW(13)
005be2 940e c9f9 	CALL SUBOPT_0x187
                 ; 0009 039C             if(payload == NULL){
005be4 f439      	BRNE _0x1200B2
                 ; 0009 039D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
005be5 940e c9fb 	CALL SUBOPT_0x188
005be7 940e ca6a 	CALL SUBOPT_0x19D
                 ; 0009 039E                 ETH_sendNack(frameID,NOT_READY);
005be9 940e c9a1 	CALL SUBOPT_0x17A
                 ; 0009 039F                 return;
005beb c0c0      	RJMP _0x20E007F
                 ; 0009 03A0             }
                 ; 0009 03A1 
                 ; 0009 03A2             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
005bec 940e ca64 	CALL SUBOPT_0x19C
005bee 940e 6272 	CALL _remoteDeviceControlParser
005bf0 019f      	MOVW R18,R30
                 ; 0009 03A3             if(res < 0){
005bf1 2333      	TST  R19
005bf2 f44a      	BRPL _0x1200B3
                 ; 0009 03A4                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
005bf3 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
005bf4 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
005bf5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
005bf6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
005bf7 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 03A5                 free( (void *) payload );
005bf9 940e c9b5 	CALL SUBOPT_0x17D
                 ; 0009 03A6                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A7                 return;
005bfb c0b0      	RJMP _0x20E007F
                 ; 0009 03A8             }
                 ; 0009 03A9 
                 ; 0009 03AA             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
005bfc eaea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
005bfd e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
005bfe e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
005bff e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
005c00 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 03AB             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
005c02 940e ca6f 	CALL SUBOPT_0x19E
                 ; 0009 03AC             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
005c04 ede9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
005c05 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
005c06 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
005c07 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
005c08 940e ca4b 	CALL SUBOPT_0x198
                 ; 0009 03AD 
                 ; 0009 03AE             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
005c0a 940e ca13 	CALL SUBOPT_0x18D
                 ; 0009 03AF                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
005c0c f511      	BRNE _0x1200BA
005c0d 01fa      	MOVW R30,R20
005c0e 940e ca5a 	CALL SUBOPT_0x19A
005c10 940e 68fd 	CALL _setMuteAlarm
005c12 019f      	MOVW R18,R30
                 ; 0009 03B0                                             if(res < 0){
005c13 2333      	TST  R19
005c14 f462      	BRPL _0x1200B8
                 ; 0009 03B1                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
005c15 efe1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
005c16 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
005c17 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
005c18 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
005c19 940e ca4b 	CALL SUBOPT_0x198
                 ; 0009 03B2                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005c1b 940e ca79 	CALL SUBOPT_0x1A0
                 ; 0009 03B3                                                 free( (void *) payload );
005c1d 01da      	MOVW R26,R20
005c1e 940e a519 	CALL _free
                 ; 0009 03B4                                                 return;
005c20 c08b      	RJMP _0x20E007F
                 ; 0009 03B5                                             }
                 ; 0009 03B6 
                 ; 0009 03B7                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
005c21 940e c9d9 	CALL SUBOPT_0x183
005c23 e0a0      	LDI  R26,LOW(0)
005c24 d9bd      	RCALL _ETH_remoteDeviceControlAck
005c25 019f      	MOVW R18,R30
                 ; 0009 03B8 
                 ; 0009 03B9                                             if(res < 0){
005c26 2333      	TST  R19
005c27 f432      	BRPL _0x1200B9
                 ; 0009 03BA                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
005c28 e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
005c29 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
005c2a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
005c2b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
005c2c 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 03BB                                             }
                 ; 0009 03BC                                             break;
                 _0x1200B9:
005c2e c004      	RJMP _0x1200B6
                 ; 0009 03BD                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03BE                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03BF                                                             ((struct netw_man_st *)payload)->cmd );
005c2f 940e ca40 	CALL SUBOPT_0x196
                 ; 0009 03C0                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005c31 940e ca79 	CALL SUBOPT_0x1A0
                 ; 0009 03C1                                             break;
                 ; 0009 03C2             }
                 _0x1200B6:
                 ; 0009 03C3 
                 ; 0009 03C4             free( (void *) payload );
005c33 01da      	MOVW R26,R20
005c34 940e a519 	CALL _free
                 ; 0009 03C5             break;
005c36 c075      	RJMP _0x12005E
                 ; 0009 03C6         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
005c37 39eb      	CPI  R30,LOW(0x9B)
005c38 e0a0      	LDI  R26,HIGH(0x9B)
005c39 07fa      	CPC  R31,R26
005c3a f011      	BREQ PC+3
005c3b 940c 5c98 	JMP _0x1200BB
                 ; 0009 03C7             if( len < (2 + sizeof(struct clr_lst_st)) ){
005c3d 940e c987 	CALL SUBOPT_0x176
005c3f 971c      	SBIW R26,12
005c40 f43c      	BRGE _0x1200BC
                 ; 0009 03C8                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
005c41 e7eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
005c42 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
005c43 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
005c44 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
005c45 940e c98e 	CALL SUBOPT_0x177
                 ; 0009 03C9                 return;
005c47 c064      	RJMP _0x20E007F
                 ; 0009 03CA             }
                 ; 0009 03CB 
                 ; 0009 03CC             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005c48 e0aa      	LDI  R26,LOW(10)
005c49 940e c9f9 	CALL SUBOPT_0x187
                 ; 0009 03CD             if(payload == NULL){
005c4b f429      	BRNE _0x1200BD
                 ; 0009 03CE                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005c4c 940e c9fb 	CALL SUBOPT_0x188
005c4e 940e ca5f 	CALL SUBOPT_0x19B
                 ; 0009 03CF                 return;
005c50 c05b      	RJMP _0x20E007F
                 ; 0009 03D0             }
                 ; 0009 03D1 
                 ; 0009 03D2             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
005c51 940e ca64 	CALL SUBOPT_0x19C
005c53 d667      	RCALL _clearListParser
005c54 019f      	MOVW R18,R30
                 ; 0009 03D3             if(res < 0){
005c55 2333      	TST  R19
005c56 f452      	BRPL _0x1200BE
                 ; 0009 03D4                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005c57 ebe4     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005c58 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005c59 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005c5a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005c5b 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 03D5                 free( (void *) payload );
005c5d 01da      	MOVW R26,R20
005c5e 940e a519 	CALL _free
                 ; 0009 03D6                 return;
005c60 c04b      	RJMP _0x20E007F
                 ; 0009 03D7             }
                 ; 0009 03D8 
                 ; 0009 03D9             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
005c61 eee3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
005c62 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
005c63 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
005c64 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
005c65 940e c9bc 	CALL SUBOPT_0x17E
                 ; 0009 03DA             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005c67 940e ca6f 	CALL SUBOPT_0x19E
                 ; 0009 03DB             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005c69 e0e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005c6a e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005c6b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005c6c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005c6d 940e ca0d 	CALL SUBOPT_0x18C
                 ; 0009 03DC 
                 ; 0009 03DD             switch(((struct clr_lst_st *)payload)->cmd){
005c6f 01fa      	MOVW R30,R20
005c70 940e ca7d 	CALL SUBOPT_0x1A1
                 ; 0009 03DE                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
005c72 30e1      	CPI  R30,LOW(0x1)
005c73 e0a0      	LDI  R26,HIGH(0x1)
005c74 07fa      	CPC  R31,R26
005c75 f4c1      	BRNE _0x1200C5
005c76 01fa      	MOVW R30,R20
005c77 85e1      	LDD  R30,Z+9
005c78 30e0      	CPI  R30,0
005c79 f469      	BRNE _0x1200C3
                 ; 0009 03DF                                     {
                 ; 0009 03E0                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005c7a e2e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005c7b e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005c7c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005c7d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005c7e 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 03E1                                         duplicateListClear = 1;
005c80 e0e1      	LDI  R30,LOW(1)
005c81 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E2                                         free( (void *) payload );
005c83 01da      	MOVW R26,R20
005c84 940e a519 	CALL _free
                 ; 0009 03E3                                         return;
005c86 c025      	RJMP _0x20E007F
                 ; 0009 03E4                                     }
                 ; 0009 03E5                                     else
                 _0x1200C3:
                 ; 0009 03E6                                     {
                 ; 0009 03E7                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03E8                                                     ((struct clr_lst_st *)payload)->status);
                +
005c87 e6e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
005c88 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005c89 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005c8a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005c8b 940e ca0d 	CALL SUBOPT_0x18C
                 ; 0009 03E9                                     }
                 ; 0009 03EA                                     break;
005c8d c006      	RJMP _0x1200C1
                 ; 0009 03EB                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EC                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03ED                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005c8e eae6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005c8f e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005c90 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005c91 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005c92 940e c9c1 	CALL SUBOPT_0x17F
                 ; 0009 03EE                                     break;
                 ; 0009 03EF             }
                 _0x1200C1:
                 ; 0009 03F0 
                 ; 0009 03F1             free( (void *) payload );
005c94 01da      	MOVW R26,R20
005c95 940e a519 	CALL _free
                 ; 0009 03F2             break;
005c97 c014      	RJMP _0x12005E
                 ; 0009 03F3         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
005c98 3fea      	CPI  R30,LOW(0xFA)
005c99 e0a0      	LDI  R26,HIGH(0xFA)
005c9a 07fa      	CPC  R31,R26
005c9b f439      	BRNE _0x1200C7
                 ; 0009 03F4             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
005c9c eee6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
005c9d e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
005c9e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
005c9f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
005ca0 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 03F5             break;
005ca2 c009      	RJMP _0x12005E
                 ; 0009 03F6         default:
                 _0x1200C7:
                 ; 0009 03F7             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
005ca3 e2e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
005ca4 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
005ca5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
005ca6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
005ca7 940e e05e 	CALL __PUTPARD1
005ca9 2fe1      	MOV  R30,R17
005caa 940e c143 	CALL SUBOPT_0x29
                 ; 0009 03F8             break;
                 ; 0009 03F9     }
                 _0x12005E:
                 ; 0009 03FA 
                 ; 0009 03FB     return;
                 _0x20E007F:
005cac 940e e0d5 	CALL __LOADLOCR6
005cae 96e0      	ADIW R28,48
005caf 5fde      	SUBI R29,-2
005cb0 9508      	RET
                 ; 0009 03FC }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0404 {
                 _ETH_receive:
                 ; 0009 0405     unsigned char   *ptr;
                 ; 0009 0406     int             size=0;
                 ; 0009 0407 
                 ; 0009 0408     // -- for packet validation -- //
                 ; 0009 0409     int     offset=0;
                 ; 0009 040A     int     len = 0x0000;
                 ; 0009 040B     int     total=0;
                 ; 0009 040C 
                 ; 0009 040D     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 040E     do{
005cb1 940e ca80 	CALL SUBOPT_0x1A2
005cb3 940e e0ce 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
005cb5 940e c01b 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 040F         ptr = (char *) malloc (RX_BUFFER_SIZE0);
005cb7 efa4      	LDI  R26,LOW(500)
005cb8 e0b1      	LDI  R27,HIGH(500)
005cb9 940e a4fe 	CALL _malloc
005cbb 018f      	MOVW R16,R30
                 ; 0009 0410         if(ptr == NULL){
005cbc 2e00      	MOV  R0,R16
005cbd 2a01      	OR   R0,R17
005cbe f431      	BRNE _0x1200CB
                 ; 0009 0411             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
005cbf e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
005cc0 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
005cc1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
005cc2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
005cc3 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0412         }
                 ; 0009 0413     }while(ptr == NULL);
                 _0x1200CB:
005cc5 2e00      	MOV  R0,R16
005cc6 2a01      	OR   R0,R17
005cc7 f379      	BREQ _0x1200C9
                 ; 0009 0414     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
005cc8 931a      	ST   -Y,R17
005cc9 930a      	ST   -Y,R16
005cca efe3      	LDI  R30,LOW(499)
005ccb e0f1      	LDI  R31,HIGH(499)
005ccc 93fa      	ST   -Y,R31
005ccd 93ea      	ST   -Y,R30
005cce e0aa      	LDI  R26,LOW(10)
005ccf e0b0      	LDI  R27,0
005cd0 940e 3ff3 	CALL _read_uart0
005cd2 019f      	MOVW R18,R30
                 ; 0009 0415 
                 ; 0009 0416     if(size <= 0){
005cd3 2400      	CLR  R0
005cd4 1602      	CP   R0,R18
005cd5 0603      	CPC  R0,R19
005cd6 f00c      	BRLT _0x1200CC
                 ; 0009 0417         free( ptr );
005cd7 c066      	RJMP _0x20E007E
                 ; 0009 0418         return;
                 ; 0009 0419     }
                 ; 0009 041A 
                 ; 0009 041B //    printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 ; 0009 041C //    print_payload(ptr,size);
                 ; 0009 041D 
                 ; 0009 041E     do{
                 _0x1200CC:
                 _0x1200CE:
                 ; 0009 041F         //printDebug("<ETH_receive> ptr");
                 ; 0009 0420         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
005cd8 01fa      	MOVW R30,R20
005cd9 940e ca87 	CALL SUBOPT_0x1A3
                +
005cdb e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
005cdc e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
005cdd 940e a5b1 	CALL _strcspn
                +
005cdf 0f4e     +ADD R20 , R30
005ce0 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0421         if(offset == size){
                +
005ce1 1724     +CP R18 , R20
005ce2 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
005ce3 f409      	BRNE _0x1200D1
                 ; 0009 0422 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0423             break;
005ce4 c059      	RJMP _0x1200CF
                 ; 0009 0424         }
                 ; 0009 0425         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
005ce5 01fa      	MOVW R30,R20
005ce6 9631      	ADIW R30,1
005ce7 0fe0      	ADD  R30,R16
005ce8 1ff1      	ADC  R31,R17
005ce9 81e0      	LD   R30,Z
005cea e0f0      	LDI  R31,0
005ceb 2ffe      	MOV  R31,R30
005cec e0e0      	LDI  R30,0
005ced 87e8      	STD  Y+8,R30
005cee 87f9      	STD  Y+8+1,R31
                 ; 0009 0426         len |= ptr[offset+2];                                                   // check packet length (LSB)
005cef 01fa      	MOVW R30,R20
005cf0 940e c7a7 	CALL SUBOPT_0x129
005cf2 85a8      	LDD  R26,Y+8
005cf3 85b9      	LDD  R27,Y+8+1
005cf4 e0f0      	LDI  R31,0
005cf5 2bea      	OR   R30,R26
005cf6 2bfb      	OR   R31,R27
005cf7 940e ca28 	CALL SUBOPT_0x191
                 ; 0009 0427 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 0428 
                 ; 0009 0429         total += len;                                                           // update total analyse
005cf9 940e ca8c 	CALL SUBOPT_0x1A4
005cfb 83ee      	STD  Y+6,R30
005cfc 83ff      	STD  Y+6+1,R31
                 ; 0009 042A         if (total > size){                                                      //check length validation
005cfd 81ae      	LDD  R26,Y+6
005cfe 81bf      	LDD  R27,Y+6+1
005cff 172a      	CP   R18,R26
005d00 073b      	CPC  R19,R27
005d01 f45c      	BRGE _0x1200D2
                 ; 0009 042B             offset++;
                +
005d02 5f4f     +SUBI R20 , LOW ( - 1 )
005d03 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042C             total = offset;                                                     // roll back total analyse
                +
005d04 834e     +STD Y + 6 , R20
005d05 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042D             printDebug("\r\ninvalid length!!\r\n");
                +
005d06 e7ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4852 ) )
005d07 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4852 ) )
005d08 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4852 ) )
005d09 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4852 ) )
                 	__POINTD1FN _0x120000,4852
005d0a 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 042E             continue;
005d0c c02b      	RJMP _0x1200CD
                 ; 0009 042F         }
                 ; 0009 0430 
                 ; 0009 0431 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0432 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0433         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
005d0d 01fa      	MOVW R30,R20
005d0e 9633      	ADIW R30,3
005d0f 940e ca87 	CALL SUBOPT_0x1A3
005d11 85aa      	LDD  R26,Y+10
005d12 85bb      	LDD  R27,Y+10+1
005d13 d0c9      	RCALL _ETH_checksum
005d14 010f      	MOVW R0,R30
005d15 01fa      	MOVW R30,R20
005d16 9633      	ADIW R30,3
005d17 85a8      	LDD  R26,Y+8
005d18 85b9      	LDD  R27,Y+8+1
005d19 0fea      	ADD  R30,R26
005d1a 1ffb      	ADC  R31,R27
005d1b 0fe0      	ADD  R30,R16
005d1c 1ff1      	ADC  R31,R17
005d1d 81e0      	LD   R30,Z
005d1e 940e ca91 	CALL SUBOPT_0x1A5
005d20 f059      	BREQ _0x1200D3
                 ; 0009 0434             printDebug("<ETH_receive> checksum error\r\n");
                +
005d21 e8ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 4873 ) )
005d22 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4873 ) )
005d23 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4873 ) )
005d24 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4873 ) )
                 	__POINTD1FN _0x120000,4873
005d25 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0435             offset++;
                +
005d27 5f4f     +SUBI R20 , LOW ( - 1 )
005d28 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0436             total = offset;                                                     // roll back total analyse
                +
005d29 834e     +STD Y + 6 , R20
005d2a 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0437         }
                 ; 0009 0438         else{                                                                   // got a valid packet
005d2b c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 0439 //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043A //            print_payload(&ptr[offset+3],len);
                 ; 0009 043B //            printDebug("\r\n******************\r\n");
                 ; 0009 043C 
                 ; 0009 043D             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
005d2c 01fa      	MOVW R30,R20
005d2d 9633      	ADIW R30,3
005d2e 940e ca87 	CALL SUBOPT_0x1A3
005d30 85aa      	LDD  R26,Y+10
005d31 85bb      	LDD  R27,Y+10+1
005d32 da7b      	RCALL _ETH_processPacket
                 ; 0009 043E             offset += 3+len;
005d33 85e8      	LDD  R30,Y+8
005d34 85f9      	LDD  R31,Y+8+1
005d35 9633      	ADIW R30,3
                +
005d36 0f4e     +ADD R20 , R30
005d37 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 043F         }
                 _0x1200D4:
                 ; 0009 0440 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
005d38 81ae      	LDD  R26,Y+6
005d39 81bf      	LDD  R27,Y+6+1
005d3a 17a2      	CP   R26,R18
005d3b 07b3      	CPC  R27,R19
005d3c f40c      	BRGE _0x1200CF
005d3d cf9a      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0441 
                 ; 0009 0442 
                 ; 0009 0443 
                 ; 0009 0444     free( ptr );
                 _0x20E007E:
005d3e 01d8      	MOVW R26,R16
005d3f 940e a519 	CALL _free
                 ; 0009 0445 }
005d41 940e e0d5 	CALL __LOADLOCR6
005d43 962a      	ADIW R28,10
005d44 9508      	RET
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 0448 {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 0449     int     res;
                 ; 0009 044A     char    *sendPacket;
                 ; 0009 044B     int     packetLen   = 0;
                 ; 0009 044C 
                 ; 0009 044D     frameLen++;     // -- + frameID (1 Byte) -- //
005d45 940e ca96 	CALL SUBOPT_0x1A6
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005d47 e040     +LDI R20 , LOW ( 0 )
005d48 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
005d49 85e9      	LDD  R30,Y+9
005d4a 85fa      	LDD  R31,Y+9+1
005d4b 9631      	ADIW R30,1
005d4c 87e9      	STD  Y+9,R30
005d4d 87fa      	STD  Y+9+1,R31
                 ; 0009 044E 
                 ; 0009 044F     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
005d4e 9634      	ADIW R30,4
005d4f 01af      	MOVW R20,R30
                 ; 0009 0450 
                 ; 0009 0451     if(packetLen > MAX_MTU){
                +
005d50 3f45     +CPI R20 , LOW ( 501 )
005d51 e0e1     +LDI R30 , HIGH ( 501 )
005d52 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005d53 f04c      	BRLT _0x1200D5
                 ; 0009 0452         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005d54 eaee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4904 ) )
005d55 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4904 ) )
005d56 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4904 ) )
005d57 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4904 ) )
                 	__POINTD1FN _0x120000,4904
005d58 940e c225 	CALL SUBOPT_0x49
                 ; 0009 0453         return -1;
005d5a efef      	LDI  R30,LOW(65535)
005d5b efff      	LDI  R31,HIGH(65535)
005d5c c07c      	RJMP _0x20E007D
                 ; 0009 0454     }
                 ; 0009 0455 
                 ; 0009 0456     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
005d5d 01da      	MOVW R26,R20
005d5e 940e a4fe 	CALL _malloc
005d60 019f      	MOVW R18,R30
                 ; 0009 0457     if(sendPacket == NULL){
005d61 2e02      	MOV  R0,R18
005d62 2a03      	OR   R0,R19
005d63 f449      	BRNE _0x1200D6
                 ; 0009 0458         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005d64 eee2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4956 ) )
005d65 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4956 ) )
005d66 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4956 ) )
005d67 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4956 ) )
                 	__POINTD1FN _0x120000,4956
005d68 940e c225 	CALL SUBOPT_0x49
                 ; 0009 0459         return -1;
005d6a efef      	LDI  R30,LOW(65535)
005d6b efff      	LDI  R31,HIGH(65535)
005d6c c06c      	RJMP _0x20E007D
                 ; 0009 045A     }
                 ; 0009 045B 
                 ; 0009 045C     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
005d6d 933a      	ST   -Y,R19
005d6e 932a      	ST   -Y,R18
005d6f e0e0      	LDI  R30,LOW(0)
005d70 93ea      	ST   -Y,R30
005d71 01da      	MOVW R26,R20
005d72 940e a580 	CALL _memset
                 ; 0009 045D 
                 ; 0009 045E     sendPacket[0] = 0x7E;
005d74 01d9      	MOVW R26,R18
005d75 e7ee      	LDI  R30,LOW(126)
005d76 93ec      	ST   X,R30
                 ; 0009 045F     sendPacket[1] = (frameLen >> 8) & 0xFF;
005d77 85e9      	LDD  R30,Y+9
005d78 85fa      	LDD  R31,Y+9+1
005d79 940e df26 	CALL __ASRW8
                +
005d7b 01d9     +MOVW R26 , R18
005d7c 9611     +ADIW R26 , 1
005d7d 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0460     sendPacket[2] = frameLen & 0xFF;
005d7e 85e9      	LDD  R30,Y+9
                +
005d7f 01d9     +MOVW R26 , R18
005d80 9612     +ADIW R26 , 2
005d81 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0461 
                 ; 0009 0462     if(frameID == 0x00){
005d82 85e8      	LDD  R30,Y+8
005d83 30e0      	CPI  R30,0
005d84 f419      	BRNE _0x1200D7
                 ; 0009 0463         frameID         = ETH_generateId();
005d85 940e 6a25 	CALL _ETH_generateId
005d87 87e8      	STD  Y+8,R30
                 ; 0009 0464         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0465     }
                 ; 0009 0466 
                 ; 0009 0467     sendPacket[3] = frameID;
                 _0x1200D7:
005d88 85e8      	LDD  R30,Y+8
                +
005d89 01d9     +MOVW R26 , R18
005d8a 9613     +ADIW R26 , 3
005d8b 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 0468 
                 ; 0009 0469     memcpy(&sendPacket[4],frameData,frameLen);
005d8c 01f9      	MOVW R30,R18
005d8d 9634      	ADIW R30,4
005d8e 93fa      	ST   -Y,R31
005d8f 93ea      	ST   -Y,R30
005d90 85ed      	LDD  R30,Y+13
005d91 85fe      	LDD  R31,Y+13+1
005d92 93fa      	ST   -Y,R31
005d93 93ea      	ST   -Y,R30
005d94 85ad      	LDD  R26,Y+13
005d95 85be      	LDD  R27,Y+13+1
005d96 940e a53b 	CALL _memcpy
                 ; 0009 046A     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
005d98 01fa      	MOVW R30,R20
005d99 9731      	SBIW R30,1
005d9a 0fe2      	ADD  R30,R18
005d9b 1ff3      	ADC  R31,R19
005d9c 93ff      	PUSH R31
005d9d 93ef      	PUSH R30
005d9e 01f9      	MOVW R30,R18
005d9f 9633      	ADIW R30,3
005da0 93fa      	ST   -Y,R31
005da1 93ea      	ST   -Y,R30
005da2 85ab      	LDD  R26,Y+11
005da3 85bc      	LDD  R27,Y+11+1
005da4 d038      	RCALL _ETH_checksum
005da5 91af      	POP  R26
005da6 91bf      	POP  R27
005da7 93ec      	ST   X,R30
                 ; 0009 046B 
                 ; 0009 046C     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046D 
                 ; 0009 046E     if((timeout > 0) && (frameID != 0xFF)){
005da8 81ae      	LDD  R26,Y+6
005da9 81bf      	LDD  R27,Y+6+1
005daa 940e e0b6 	CALL __CPW02
005dac f41c      	BRGE _0x1200D9
005dad 85a8      	LDD  R26,Y+8
005dae 3faf      	CPI  R26,LOW(0xFF)
005daf f409      	BRNE _0x1200DA
                 _0x1200D9:
005db0 c01a      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 046F         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
005db1 85e8      	LDD  R30,Y+8
005db2 93ea      	ST   -Y,R30
005db3 933a      	ST   -Y,R19
005db4 932a      	ST   -Y,R18
005db5 935a      	ST   -Y,R21
005db6 934a      	ST   -Y,R20
005db7 85ab      	LDD  R26,Y+11
005db8 85bc      	LDD  R27,Y+11+1
005db9 940e 6945 	CALL _ETH_addWaitQueue
005dbb 018f      	MOVW R16,R30
                 ; 0009 0470         if(res < 0){
005dbc 2311      	TST  R17
005dbd f46a      	BRPL _0x1200DB
                 ; 0009 0471             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
005dbe e1e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5007 ) )
005dbf e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5007 ) )
005dc0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5007 ) )
005dc1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5007 ) )
                 	__POINTD1FN _0x120000,5007
005dc2 940e e05e 	CALL __PUTPARD1
005dc4 85ec      	LDD  R30,Y+12
005dc5 940e c143 	CALL SUBOPT_0x29
                 ; 0009 0472             free(sendPacket);
005dc7 01d9      	MOVW R26,R18
005dc8 940e c22d 	CALL SUBOPT_0x4A
                 ; 0009 0473             return -1;
005dca c00e      	RJMP _0x20E007D
                 ; 0009 0474         }
                 ; 0009 0475     }
                 _0x1200DB:
                 ; 0009 0476 
                 ; 0009 0477 
                 ; 0009 0478 //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 0479 //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047A //    }
                 ; 0009 047B 
                 ; 0009 047C //    printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 ; 0009 047D //    print_payload(sendPacket,packetLen);
                 ; 0009 047E     write_uart0(sendPacket,packetLen);
                 _0x1200D8:
005dcb 933a      	ST   -Y,R19
005dcc 932a      	ST   -Y,R18
005dcd 01da      	MOVW R26,R20
005dce 940e 4044 	CALL _write_uart0
                 ; 0009 047F     free(sendPacket);
005dd0 01d9      	MOVW R26,R18
005dd1 940e a519 	CALL _free
                 ; 0009 0480 
                 ; 0009 0481     //printDebug("-- Completed --\r\n");
                 ; 0009 0482     delay_ms(7);
005dd3 940e c072 	CALL SUBOPT_0xA
005dd5 940e dcff 	CALL _delay_ms
                 ; 0009 0483 
                 ; 0009 0484     return 0;
005dd7 e0e0      	LDI  R30,LOW(0)
005dd8 e0f0      	LDI  R31,HIGH(0)
                 _0x20E007D:
005dd9 940e e0d5 	CALL __LOADLOCR6
005ddb 962d      	ADIW R28,13
005ddc 9508      	RET
                 ; 0009 0485 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 0488 {
                 _ETH_checksum:
                 ; 0009 0489     int i;
                 ; 0009 048A     char sum = 0;
                 ; 0009 048B 
                 ; 0009 048C     //printDebug("<checksum> \r\n");
                 ; 0009 048D     for (i=0;i<len;i++){
005ddd 940e c394 	CALL SUBOPT_0x7F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005ddf e030      	LDI  R19,0
                +
005de0 e000     +LDI R16 , LOW ( 0 )
005de1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005de2 81ec      	LDD  R30,Y+4
005de3 81fd      	LDD  R31,Y+4+1
005de4 170e      	CP   R16,R30
005de5 071f      	CPC  R17,R31
005de6 f43c      	BRGE _0x1200DE
                 ; 0009 048E         sum += buf[i];
005de7 01f8      	MOVW R30,R16
005de8 940e ca9b 	CALL SUBOPT_0x1A7
005dea 0f3e      	ADD  R19,R30
                 ; 0009 048F         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0490     }
                +
005deb 5f0f     +SUBI R16 , LOW ( - 1 )
005dec 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ded cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0491     return (0xff - (sum & 0xff));
005dee 2fe3      	MOV  R30,R19
005def 940e c45e 	CALL SUBOPT_0x9B
005df1 efaf      	LDI  R26,LOW(255)
005df2 e0b0      	LDI  R27,HIGH(255)
005df3 940e e076 	CALL __SWAPW12
005df5 1bea      	SUB  R30,R26
005df6 0bfb      	SBC  R31,R27
005df7 940e e0d7 	CALL __LOADLOCR4
005df9 9628      	ADIW R28,8
005dfa 9508      	RET
                 ; 0009 0492 
                 ; 0009 0493 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049C {
                 _ETH_switchMode:
                 ; 0009 049D     if(mode == MODE_CONF){
005dfb 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005dfc 81e8      	LD   R30,Y
005dfd 30e0      	CPI  R30,0
005dfe f451      	BRNE _0x1200DF
                 ; 0009 049E         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005dff e4e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5058 ) )
005e00 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5058 ) )
005e01 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5058 ) )
005e02 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5058 ) )
                 	__POINTD1FN _0x120000,5058
005e03 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 049F         ETH_CONF;
005e05 91e0 0102 	LDS  R30,258
005e07 68e0      	ORI  R30,0x80
005e08 c009      	RJMP _0x12011C
                 ; 0009 04A0     }
                 ; 0009 04A1     else{
                 _0x1200DF:
                 ; 0009 04A2         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005e09 e7e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 5099 ) )
005e0a e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5099 ) )
005e0b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5099 ) )
005e0c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5099 ) )
                 	__POINTD1FN _0x120000,5099
005e0d 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 04A3         ETH_NORM;
005e0f 91e0 0102 	LDS  R30,258
005e11 77ef      	ANDI R30,0x7F
                 _0x12011C:
005e12 93e0 0102 	STS  258,R30
                 ; 0009 04A4     }
                 ; 0009 04A5 
                 ; 0009 04A6     delay_ms(5);
005e14 940e c43f 	CALL SUBOPT_0x97
                 ; 0009 04A7 
                 ; 0009 04A8     ETH_current_mode = mode;
005e16 81e8      	LD   R30,Y
005e17 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04A9 
                 ; 0009 04AA     delay_ms(5);
005e19 940e c43f 	CALL SUBOPT_0x97
                 ; 0009 04AB     ETH_OFF;
005e1b 98a4      	CBI  0x14,4
                 ; 0009 04AC     delay_ms(1500);
005e1c edac      	LDI  R26,LOW(1500)
005e1d e0b5      	LDI  R27,HIGH(1500)
005e1e 940e dcff 	CALL _delay_ms
                 ; 0009 04AD     ETH_ON;
005e20 9aa4      	SBI  0x14,4
                 ; 0009 04AE     #asm("wdr")
005e21 95a8      	wdr
                 ; 0009 04AF     delay_ms(2000);
005e22 eda0      	LDI  R26,LOW(2000)
005e23 e0b7      	LDI  R27,HIGH(2000)
005e24 940e dcff 	CALL _delay_ms
                 ; 0009 04B0 
                 ; 0009 04B1     return ETH_MODE;
005e26 91e0 0102 	LDS  R30,258
005e28 78e0      	ANDI R30,LOW(0x80)
005e29 9621      	ADIW R28,1
005e2a 9508      	RET
                 ; 0009 04B2 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B5 {
                 _ETH_getConfig:
                 ; 0009 04B6     TIMER   timeout;
                 ; 0009 04B7     char    getInfoCmd[] = ">R\r";
                 ; 0009 04B8     int     i=0;
                 ; 0009 04B9 
                 ; 0009 04BA     ETH_switchMode((unsigned char) MODE_CONF);
005e2b 93ba      	ST   -Y,R27
005e2c 93aa      	ST   -Y,R26
005e2d 9728      	SBIW R28,8
005e2e e3ee      	LDI  R30,LOW(62)
005e2f 83e8      	ST   Y,R30
005e30 e5e2      	LDI  R30,LOW(82)
005e31 83e9      	STD  Y+1,R30
005e32 e0ed      	LDI  R30,LOW(13)
005e33 83ea      	STD  Y+2,R30
005e34 e0e0      	LDI  R30,LOW(0)
005e35 83eb      	STD  Y+3,R30
005e36 940e c85c 	CALL SUBOPT_0x14B
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
005e38 e0a0      	LDI  R26,LOW(0)
005e39 dfc1      	RCALL _ETH_switchMode
                 ; 0009 04BB     /*
                 ; 0009 04BC     if(mode != MODE_CONF){
                 ; 0009 04BD         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04BE         return -1;
                 ; 0009 04BF     }
                 ; 0009 04C0     */
                 ; 0009 04C1 
                 ; 0009 04C2     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005e3a e000     +LDI R16 , LOW ( 0 )
005e3b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E2:
                +
005e3c 3405     +CPI R16 , LOW ( 325 )
005e3d e0e1     +LDI R30 , HIGH ( 325 )
005e3e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005e3f f42c      	BRGE _0x1200E3
                 ; 0009 04C3         configRd[i] = 0x00;
005e40 940e caa1 	CALL SUBOPT_0x1A8
                 ; 0009 04C4     }
                +
005e42 5f0f     +SUBI R16 , LOW ( - 1 )
005e43 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e44 cff7      	RJMP _0x1200E2
                 _0x1200E3:
                 ; 0009 04C5     configLen       = 0;
005e45 940e c38e 	CALL SUBOPT_0x7E
                 ; 0009 04C6     config_start    = 0;
005e47 940e caa4 	CALL SUBOPT_0x1A9
                 ; 0009 04C7     config_ready    = 0;
                 ; 0009 04C8     config_end      = 0;
                 ; 0009 04C9     config_response = 0;
                 ; 0009 04CA 
                 ; 0009 04CB     printDebug("<ETH_getConfig> Write to uart 0 :");
                +
005e49 e9ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5140 ) )
005e4a e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5140 ) )
005e4b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5140 ) )
005e4c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5140 ) )
                 	__POINTD1FN _0x120000,5140
005e4d 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 04CC     for(i=0;i<strlen(getInfoCmd);i++){
                +
005e4f e000     +LDI R16 , LOW ( 0 )
005e50 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E5:
005e51 940e caae 	CALL SUBOPT_0x1AA
005e53 f440      	BRSH _0x1200E6
                 ; 0009 04CD         putchar3(getInfoCmd[i]);
005e54 940e c78e 	CALL SUBOPT_0x124
005e56 91ac      	LD   R26,X
005e57 940e 40b6 	CALL _putchar3
                 ; 0009 04CE     }
                +
005e59 5f0f     +SUBI R16 , LOW ( - 1 )
005e5a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e5b cff5      	RJMP _0x1200E5
                 _0x1200E6:
                 ; 0009 04CF     printDebug("\r\n");
005e5c 940e cab5 	CALL SUBOPT_0x1AB
                 ; 0009 04D0 
                 ; 0009 04D1     for(i=0;i<strlen(getInfoCmd);i++){
                +
005e5e e000     +LDI R16 , LOW ( 0 )
005e5f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E8:
005e60 940e caae 	CALL SUBOPT_0x1AA
005e62 f440      	BRSH _0x1200E9
                 ; 0009 04D2         putchar0(getInfoCmd[i]);
005e63 940e c78e 	CALL SUBOPT_0x124
005e65 91ac      	LD   R26,X
005e66 940e 3fea 	CALL _putchar0
                 ; 0009 04D3     }
                +
005e68 5f0f     +SUBI R16 , LOW ( - 1 )
005e69 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e6a cff5      	RJMP _0x1200E8
                 _0x1200E9:
                 ; 0009 04D4 
                 ; 0009 04D5     TIMER_setTimer(&timeout, 7);
005e6b 940e c27a 	CALL SUBOPT_0x56
005e6d 940e cabb 	CALL SUBOPT_0x1AC
                 ; 0009 04D6 
                 ; 0009 04D7     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200EA:
005e6f 91e0 10f1 	LDS  R30,_config_ready
005e71 30e0      	CPI  R30,0
005e72 f431      	BRNE _0x1200ED
005e73 940e c297 	CALL SUBOPT_0x59
005e75 940e 4130 	CALL _TIMER_checkTimerExceed
005e77 9730      	SBIW R30,0
005e78 f009      	BREQ _0x1200EE
                 _0x1200ED:
005e79 c004      	RJMP _0x1200EC
                 _0x1200EE:
                 ; 0009 04D8        delay_ms(50);
005e7a 940e c36b 	CALL SUBOPT_0x7A
                 ; 0009 04D9        #asm("wdr")
005e7c 95a8      	wdr
                 ; 0009 04DA     }
005e7d cff1      	RJMP _0x1200EA
                 _0x1200EC:
                 ; 0009 04DB 
                 ; 0009 04DC     memcpy(ptr,&configRd[0],configLen);
005e7e 940e cac1 	CALL SUBOPT_0x1AD
005e80 940e cac6 	CALL SUBOPT_0x1AE
                 ; 0009 04DD 
                 ; 0009 04DE     *buflen    = configLen;
005e82 91e0 10ee 	LDS  R30,_configLen
005e84 91f0 10ef 	LDS  R31,_configLen+1
005e86 85aa      	LDD  R26,Y+10
005e87 85bb      	LDD  R27,Y+10+1
005e88 93ed      	ST   X+,R30
005e89 93fc      	ST   X,R31
                 ; 0009 04DF 
                 ; 0009 04E0     ETH_switchMode(MODE_NORM);
005e8a e8a0      	LDI  R26,LOW(128)
005e8b df6f      	RCALL _ETH_switchMode
                 ; 0009 04E1 
                 ; 0009 04E2     /*
                 ; 0009 04E3     if(mode != MODE_NORM){
                 ; 0009 04E4         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E5         return -1;
                 ; 0009 04E6     }
                 ; 0009 04E7     */
                 ; 0009 04E8 
                 ; 0009 04E9     if(config_response == 'S'){
005e8c 91a0 10f3 	LDS  R26,_config_response
005e8e 35a3      	CPI  R26,LOW(0x53)
005e8f f419      	BRNE _0x1200EF
                 ; 0009 04EA         return 0;
005e90 e0e0      	LDI  R30,LOW(0)
005e91 e0f0      	LDI  R31,HIGH(0)
005e92 c002      	RJMP _0x20E007C
                 ; 0009 04EB     }
                 ; 0009 04EC     else{
                 _0x1200EF:
                 ; 0009 04ED         return -1;
005e93 efef      	LDI  R30,LOW(65535)
005e94 efff      	LDI  R31,HIGH(65535)
                 ; 0009 04EE     }
                 ; 0009 04EF }
                 _0x20E007C:
005e95 8119      	LDD  R17,Y+1
005e96 8108      	LDD  R16,Y+0
005e97 962e      	ADIW R28,14
005e98 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F2 {
                 _ETH_setConfig:
                 ; 0009 04F3     TIMER   timeout;
                 ; 0009 04F4     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F5     char    setInfoCmd[] = ">W";
                 ; 0009 04F6     int     i=0;
                 ; 0009 04F7     char    setStr[30];
                 ; 0009 04F8     int     readLen=0;
                 ; 0009 04F9     char    *ptr;
                 ; 0009 04FA 
                 ; 0009 04FB     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
005e99 93ba      	ST   -Y,R27
005e9a 93aa      	ST   -Y,R26
005e9b 97a9      	SBIW R28,41
005e9c e3ee      	LDI  R30,LOW(62)
005e9d 8fee      	STD  Y+30,R30
005e9e e5e7      	LDI  R30,LOW(87)
005e9f 8fef      	STD  Y+31,R30
005ea0 e0e0      	LDI  R30,LOW(0)
005ea1 a3e8      	STD  Y+32,R30
005ea2 e3ee      	LDI  R30,LOW(62)
005ea3 a3e9      	STD  Y+33,R30
005ea4 e5e2      	LDI  R30,LOW(82)
005ea5 a3ea      	STD  Y+34,R30
005ea6 e0ed      	LDI  R30,LOW(13)
005ea7 a3eb      	STD  Y+35,R30
005ea8 e0e0      	LDI  R30,LOW(0)
005ea9 a3ec      	STD  Y+36,R30
005eaa 940e c218 	CALL SUBOPT_0x46
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                +
005eac e020     +LDI R18 , LOW ( 0 )
005ead e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005eae e4a5      	LDI  R26,LOW(325)
005eaf e0b1      	LDI  R27,HIGH(325)
005eb0 940e c99b 	CALL SUBOPT_0x179
                 ; 0009 04FC     if(ptr == NULL){
005eb2 f449      	BRNE _0x1200F1
                 ; 0009 04FD         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                +
005eb3 ebec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5174 ) )
005eb4 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5174 ) )
005eb5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5174 ) )
005eb6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5174 ) )
                 	__POINTD1FN _0x120000,5174
005eb7 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 04FE         return -1;
005eb9 efef      	LDI  R30,LOW(65535)
005eba efff      	LDI  R31,HIGH(65535)
005ebb c1c7      	RJMP _0x20E007B
                 ; 0009 04FF     }
                 ; 0009 0500 
                 ; 0009 0501     ETH_switchMode((unsigned char) MODE_CONF);
                 _0x1200F1:
005ebc e0a0      	LDI  R26,LOW(0)
005ebd df3d      	RCALL _ETH_switchMode
                 ; 0009 0502 
                 ; 0009 0503     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0504     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005ebe e000     +LDI R16 , LOW ( 0 )
005ebf e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F3:
                +
005ec0 3405     +CPI R16 , LOW ( 325 )
005ec1 e0e1     +LDI R30 , HIGH ( 325 )
005ec2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005ec3 f42c      	BRGE _0x1200F4
                 ; 0009 0505         configRd[i] = 0x00;
005ec4 940e caa1 	CALL SUBOPT_0x1A8
                 ; 0009 0506     }
                +
005ec6 5f0f     +SUBI R16 , LOW ( - 1 )
005ec7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ec8 cff7      	RJMP _0x1200F3
                 _0x1200F4:
                 ; 0009 0507     configLen       = 0;
005ec9 940e c38e 	CALL SUBOPT_0x7E
                 ; 0009 0508     config_start    = 0;
005ecb 940e caa4 	CALL SUBOPT_0x1A9
                 ; 0009 0509     config_ready    = 0;
                 ; 0009 050A     config_end      = 0;
                 ; 0009 050B     config_response = 0;
                 ; 0009 050C 
                 ; 0009 050D     printDebug("<ETH_setConfig> Write to uart 0 :");
                +
005ecd eeee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5224 ) )
005ece e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5224 ) )
005ecf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5224 ) )
005ed0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5224 ) )
                 	__POINTD1FN _0x120000,5224
005ed1 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 050E     for(i=0;i<strlen(getInfoCmd);i++){
                +
005ed3 e000     +LDI R16 , LOW ( 0 )
005ed4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F6:
005ed5 940e cacd 	CALL SUBOPT_0x1AF
005ed7 f450      	BRSH _0x1200F7
                 ; 0009 050F         putchar3(getInfoCmd[i]);
005ed8 01de      	MOVW R26,R28
005ed9 9697      	ADIW R26,39
005eda 0fa0      	ADD  R26,R16
005edb 1fb1      	ADC  R27,R17
005edc 91ac      	LD   R26,X
005edd 940e 40b6 	CALL _putchar3
                 ; 0009 0510     }
                +
005edf 5f0f     +SUBI R16 , LOW ( - 1 )
005ee0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ee1 cff3      	RJMP _0x1200F6
                 _0x1200F7:
                 ; 0009 0511     printDebug("\r\n");
005ee2 940e cab5 	CALL SUBOPT_0x1AB
                 ; 0009 0512 
                 ; 0009 0513     for(i=0;i<strlen(getInfoCmd);i++){
                +
005ee4 e000     +LDI R16 , LOW ( 0 )
005ee5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F9:
005ee6 940e cacd 	CALL SUBOPT_0x1AF
005ee8 f450      	BRSH _0x1200FA
                 ; 0009 0514         putchar0(getInfoCmd[i]);
005ee9 01de      	MOVW R26,R28
005eea 9697      	ADIW R26,39
005eeb 0fa0      	ADD  R26,R16
005eec 1fb1      	ADC  R27,R17
005eed 91ac      	LD   R26,X
005eee 940e 3fea 	CALL _putchar0
                 ; 0009 0515     }
                +
005ef0 5f0f     +SUBI R16 , LOW ( - 1 )
005ef1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005ef2 cff3      	RJMP _0x1200F9
                 _0x1200FA:
                 ; 0009 0516 
                 ; 0009 0517     TIMER_setTimer(&timeout, 7);
005ef3 01fe      	MOVW R30,R28
005ef4 96bb      	ADIW R30,43
005ef5 93fa      	ST   -Y,R31
005ef6 93ea      	ST   -Y,R30
005ef7 940e cabb 	CALL SUBOPT_0x1AC
                 ; 0009 0518 
                 ; 0009 0519     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200FB:
005ef9 91e0 10f1 	LDS  R30,_config_ready
005efb 30e0      	CPI  R30,0
005efc f419      	BRNE _0x1200FE
005efd 940e cad4 	CALL SUBOPT_0x1B0
005eff f009      	BREQ _0x1200FF
                 _0x1200FE:
005f00 c004      	RJMP _0x1200FD
                 _0x1200FF:
                 ; 0009 051A        delay_ms(50);
005f01 940e c36b 	CALL SUBOPT_0x7A
                 ; 0009 051B        #asm("wdr")
005f03 95a8      	wdr
                 ; 0009 051C     }
005f04 cff4      	RJMP _0x1200FB
                 _0x1200FD:
                 ; 0009 051D 
                 ; 0009 051E     memcpy(ptr,&configRd[0],configLen);
005f05 935a      	ST   -Y,R21
005f06 934a      	ST   -Y,R20
005f07 940e cac6 	CALL SUBOPT_0x1AE
                 ; 0009 051F     readLen = configLen;
                +
005f09 9120 10ee+LDS R18 , 0 + ( _configLen )
005f0b 9130 10ef+LDS R19 , 0 + ( _configLen ) + 1
                 	__GETWRMN 18,19,0,_configLen
                 ; 0009 0520 
                 ; 0009 0521     if(config_response != 'S'){
005f0d 91a0 10f3 	LDS  R26,_config_response
005f0f 35a3      	CPI  R26,LOW(0x53)
005f10 f051      	BREQ _0x120100
                 ; 0009 0522         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                +
005f11 e1e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 5258 ) )
005f12 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5258 ) )
005f13 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5258 ) )
005f14 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5258 ) )
                 	__POINTD1FN _0x120000,5258
005f15 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0523         free( ptr );
005f17 01da      	MOVW R26,R20
005f18 940e c22d 	CALL SUBOPT_0x4A
                 ; 0009 0524         return -1;
005f1a c168      	RJMP _0x20E007B
                 ; 0009 0525     }
                 ; 0009 0526 
                 ; 0009 0527     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 0528     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 _0x120100:
                 ; 0009 0529                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052A                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052B                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052C                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 052D                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 052E                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 052F                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0530                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0531                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0532                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0533                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0534                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
005f1b 940e c27a 	CALL SUBOPT_0x56
                +
005f1d e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5311 ) )
005f1e e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5311 ) )
005f1f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5311 ) )
005f20 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5311 ) )
                 	__POINTD1FN _0x120000,5311
005f21 940e e05e 	CALL __PUTPARD1
005f23 adab      	LDD  R26,Y+59
005f24 adbc      	LDD  R27,Y+59+1
005f25 940e cadc 	CALL SUBOPT_0x1B1
005f27 adeb      	LDD  R30,Y+59
005f28 adfc      	LDD  R31,Y+59+1
005f29 940e cae1 	CALL SUBOPT_0x1B2
005f2b adeb      	LDD  R30,Y+59
005f2c adfc      	LDD  R31,Y+59+1
005f2d 940e cae9 	CALL SUBOPT_0x1B3
005f2f 940e caf2 	CALL SUBOPT_0x1B4
005f31 940e caf9 	CALL SUBOPT_0x1B5
005f33 940e caf2 	CALL SUBOPT_0x1B4
005f35 940e cafe 	CALL SUBOPT_0x1B6
005f37 940e caf2 	CALL SUBOPT_0x1B4
005f39 940e cb06 	CALL SUBOPT_0x1B7
005f3b 940e cb0f 	CALL SUBOPT_0x1B8
005f3d 940e cb16 	CALL SUBOPT_0x1B9
005f3f 940e cb0f 	CALL SUBOPT_0x1B8
005f41 940e cb1b 	CALL SUBOPT_0x1BA
005f43 940e cb0f 	CALL SUBOPT_0x1B8
005f45 940e ca7d 	CALL SUBOPT_0x1A1
005f47 940e cb23 	CALL SUBOPT_0x1BB
005f49 940e cb2a 	CALL SUBOPT_0x1BC
005f4b 940e cb31 	CALL SUBOPT_0x1BD
005f4d 940e cb2a 	CALL SUBOPT_0x1BC
005f4f 940e cb36 	CALL SUBOPT_0x1BE
005f51 940e cb2a 	CALL SUBOPT_0x1BC
005f53 940e cb3e 	CALL SUBOPT_0x1BF
                +
005f55 01de     +MOVW R26 , R28
005f56 5ba7     +SUBI R26 , LOW ( - 73 )
005f57 4fbf     +SBCI R27 , HIGH ( - 73 )
005f58 900d     +LD R0 , X +
005f59 91bc     +LD R27 , X
005f5a 2da0     +MOV R26 , R0
                 	__GETW2SX 73
005f5b 940e cadc 	CALL SUBOPT_0x1B1
005f5d 940e cb41 	CALL SUBOPT_0x1C0
005f5f 940e cae1 	CALL SUBOPT_0x1B2
005f61 940e cb41 	CALL SUBOPT_0x1C0
005f63 940e cae9 	CALL SUBOPT_0x1B3
005f65 940e cb48 	CALL SUBOPT_0x1C1
005f67 940e caf9 	CALL SUBOPT_0x1B5
005f69 940e cb48 	CALL SUBOPT_0x1C1
005f6b 940e cafe 	CALL SUBOPT_0x1B6
005f6d 940e cb48 	CALL SUBOPT_0x1C1
005f6f 940e cb06 	CALL SUBOPT_0x1B7
005f71 940e cb4f 	CALL SUBOPT_0x1C2
005f73 940e cb16 	CALL SUBOPT_0x1B9
005f75 940e cb4f 	CALL SUBOPT_0x1C2
005f77 940e cb1b 	CALL SUBOPT_0x1BA
005f79 940e cb4f 	CALL SUBOPT_0x1C2
005f7b 940e ca7d 	CALL SUBOPT_0x1A1
005f7d 940e cb23 	CALL SUBOPT_0x1BB
005f7f 940e cb56 	CALL SUBOPT_0x1C3
005f81 940e cb31 	CALL SUBOPT_0x1BD
005f83 940e cb56 	CALL SUBOPT_0x1C3
005f85 940e cb36 	CALL SUBOPT_0x1BE
005f87 940e cb56 	CALL SUBOPT_0x1C3
005f89 940e cb3e 	CALL SUBOPT_0x1BF
                +
005f8b 01de     +MOVW R26 , R28
005f8c 5aa9     +SUBI R26 , LOW ( - 87 )
005f8d 4fbf     +SBCI R27 , HIGH ( - 87 )
005f8e 900d     +LD R0 , X +
005f8f 91bc     +LD R27 , X
005f90 2da0     +MOV R26 , R0
                 	__GETW2SX 87
005f91 940e cadc 	CALL SUBOPT_0x1B1
005f93 940e cb5d 	CALL SUBOPT_0x1C4
005f95 940e cae1 	CALL SUBOPT_0x1B2
005f97 940e cb5d 	CALL SUBOPT_0x1C4
005f99 940e cae9 	CALL SUBOPT_0x1B3
005f9b 940e cb64 	CALL SUBOPT_0x1C5
005f9d 940e caf9 	CALL SUBOPT_0x1B5
005f9f 940e cb64 	CALL SUBOPT_0x1C5
005fa1 940e cafe 	CALL SUBOPT_0x1B6
005fa3 940e cb64 	CALL SUBOPT_0x1C5
005fa5 940e cb06 	CALL SUBOPT_0x1B7
005fa7 940e cb6b 	CALL SUBOPT_0x1C6
005fa9 940e cb16 	CALL SUBOPT_0x1B9
005fab 940e cb6b 	CALL SUBOPT_0x1C6
005fad 940e cb1b 	CALL SUBOPT_0x1BA
005faf 940e cb6b 	CALL SUBOPT_0x1C6
005fb1 940e ca7d 	CALL SUBOPT_0x1A1
005fb3 940e cb23 	CALL SUBOPT_0x1BB
005fb5 940e cb72 	CALL SUBOPT_0x1C7
005fb7 940e cb31 	CALL SUBOPT_0x1BD
005fb9 940e cb72 	CALL SUBOPT_0x1C7
005fbb 940e cb36 	CALL SUBOPT_0x1BE
005fbd 940e cb72 	CALL SUBOPT_0x1C7
005fbf 940e cb3e 	CALL SUBOPT_0x1BF
005fc1 e380      	LDI  R24,48
005fc2 940e bf41 	CALL _sprintf
005fc4 96e6      	ADIW R28,54
                 ; 0009 0535 
                 ; 0009 0536     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
005fc5 940e cb79 	CALL SUBOPT_0x1C8
005fc7 940e c0a5 	CALL SUBOPT_0x12
                 ; 0009 0537 
                 ; 0009 0538     memcpy((ptr+14),&setStr[0],24);
005fc9 01fa      	MOVW R30,R20
005fca 963e      	ADIW R30,14
005fcb 940e cb83 	CALL SUBOPT_0x1C9
005fcd e1a8      	LDI  R26,LOW(24)
005fce 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 0009 0539 
                 ; 0009 053A     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053B                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053C                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 053D                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 053E                 (server[9]*100) + (server[10]*10) + server[11]);
005fd0 940e c27a 	CALL SUBOPT_0x56
                +
005fd2 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5343 ) )
005fd3 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5343 ) )
005fd4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5343 ) )
005fd5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5343 ) )
                 	__POINTD1FN _0x120000,5343
005fd6 940e e05e 	CALL __PUTPARD1
005fd8 a9ad      	LDD  R26,Y+53
005fd9 a9be      	LDD  R27,Y+53+1
005fda 940e cadc 	CALL SUBOPT_0x1B1
005fdc a9ed      	LDD  R30,Y+53
005fdd a9fe      	LDD  R31,Y+53+1
005fde 940e cae1 	CALL SUBOPT_0x1B2
005fe0 a9ed      	LDD  R30,Y+53
005fe1 a9fe      	LDD  R31,Y+53+1
005fe2 940e cae9 	CALL SUBOPT_0x1B3
005fe4 ade9      	LDD  R30,Y+57
005fe5 adfa      	LDD  R31,Y+57+1
005fe6 940e caf9 	CALL SUBOPT_0x1B5
005fe8 ade9      	LDD  R30,Y+57
005fe9 adfa      	LDD  R31,Y+57+1
005fea 940e cafe 	CALL SUBOPT_0x1B6
005fec ade9      	LDD  R30,Y+57
005fed adfa      	LDD  R31,Y+57+1
005fee 940e cb06 	CALL SUBOPT_0x1B7
005ff0 aded      	LDD  R30,Y+61
005ff1 adfe      	LDD  R31,Y+61+1
005ff2 940e cb16 	CALL SUBOPT_0x1B9
005ff4 aded      	LDD  R30,Y+61
005ff5 adfe      	LDD  R31,Y+61+1
005ff6 940e cb1b 	CALL SUBOPT_0x1BA
005ff8 aded      	LDD  R30,Y+61
005ff9 adfe      	LDD  R31,Y+61+1
005ffa 940e ca7d 	CALL SUBOPT_0x1A1
005ffc 940e cb23 	CALL SUBOPT_0x1BB
005ffe 940e cb8d 	CALL SUBOPT_0x1CB
006000 940e cb31 	CALL SUBOPT_0x1BD
006002 940e cb8d 	CALL SUBOPT_0x1CB
006004 940e cb36 	CALL SUBOPT_0x1BE
006006 940e cb8d 	CALL SUBOPT_0x1CB
006008 940e cb3e 	CALL SUBOPT_0x1BF
00600a e180      	LDI  R24,16
00600b 940e bf41 	CALL _sprintf
00600d 9666      	ADIW R28,22
                 ; 0009 053F 
                 ; 0009 0540     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
00600e 940e cb79 	CALL SUBOPT_0x1C8
006010 940e c0a5 	CALL SUBOPT_0x12
                 ; 0009 0541 
                 ; 0009 0542     memcpy((ptr+42),&setStr[0],8);
006012 01fa      	MOVW R30,R20
006013 96ba      	ADIW R30,42
006014 940e cb83 	CALL SUBOPT_0x1C9
006016 e0a8      	LDI  R26,LOW(8)
006017 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 0009 0543 
                 ; 0009 0544 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0545 //    for(i=0;i<configLen;i++){
                 ; 0009 0546 //        putchar3(ptr[i]);
                 ; 0009 0547 //    }
                 ; 0009 0548 //    printDebug("\r\n\---\r\n");
                 ; 0009 0549 
                 ; 0009 054A     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054B     for(i=0;i<CONF_READ_BUFFER;i++){
                +
006019 e000     +LDI R16 , LOW ( 0 )
00601a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120102:
                +
00601b 3405     +CPI R16 , LOW ( 325 )
00601c e0e1     +LDI R30 , HIGH ( 325 )
00601d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
00601e f42c      	BRGE _0x120103
                 ; 0009 054C         configRd[i] = 0x00;
00601f 940e caa1 	CALL SUBOPT_0x1A8
                 ; 0009 054D     }
                +
006021 5f0f     +SUBI R16 , LOW ( - 1 )
006022 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006023 cff7      	RJMP _0x120102
                 _0x120103:
                 ; 0009 054E     configLen       = 0;
006024 940e c38e 	CALL SUBOPT_0x7E
                 ; 0009 054F     config_start    = 0;
006026 940e caa4 	CALL SUBOPT_0x1A9
                 ; 0009 0550     config_ready    = 0;
                 ; 0009 0551     config_end      = 0;
                 ; 0009 0552     config_response = 0;
                 ; 0009 0553 
                 ; 0009 0554     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                +
006028 e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 5394 ) )
006029 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5394 ) )
00602a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5394 ) )
00602b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5394 ) )
                 	__POINTD1FN _0x120000,5394
00602c 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0555     for(i=0;i<strlen(setInfoCmd);i++){
                +
00602e e000     +LDI R16 , LOW ( 0 )
00602f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120105:
006030 01de      	MOVW R26,R28
006031 9694      	ADIW R26,36
006032 940e a5c7 	CALL _strlen
006034 170e      	CP   R16,R30
006035 071f      	CPC  R17,R31
006036 f488      	BRSH _0x120106
                 ; 0009 0556         putchar0(setInfoCmd[i]);
006037 01de      	MOVW R26,R28
006038 9694      	ADIW R26,36
006039 0fa0      	ADD  R26,R16
00603a 1fb1      	ADC  R27,R17
00603b 91ac      	LD   R26,X
00603c 940e 3fea 	CALL _putchar0
                 ; 0009 0557         putchar3(setInfoCmd[i]);
00603e 01de      	MOVW R26,R28
00603f 9694      	ADIW R26,36
006040 0fa0      	ADD  R26,R16
006041 1fb1      	ADC  R27,R17
006042 91ac      	LD   R26,X
006043 940e 40b6 	CALL _putchar3
                 ; 0009 0558     }
                +
006045 5f0f     +SUBI R16 , LOW ( - 1 )
006046 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006047 cfe8      	RJMP _0x120105
                 _0x120106:
                 ; 0009 0559     for(i=12;i<readLen;i++){
                +
006048 e00c     +LDI R16 , LOW ( 12 )
006049 e010     +LDI R17 , HIGH ( 12 )
                 	__GETWRN 16,17,12
                 _0x120108:
                +
00604a 1702     +CP R16 , R18
00604b 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
00604c f47c      	BRGE _0x120109
                 ; 0009 055A         putchar0(ptr[i]);
00604d 01f8      	MOVW R30,R16
00604e 0fe4      	ADD  R30,R20
00604f 1ff5      	ADC  R31,R21
006050 81a0      	LD   R26,Z
006051 940e 3fea 	CALL _putchar0
                 ; 0009 055B         putchar3(ptr[i]);
006053 01f8      	MOVW R30,R16
006054 0fe4      	ADD  R30,R20
006055 1ff5      	ADC  R31,R21
006056 81a0      	LD   R26,Z
006057 940e 40b6 	CALL _putchar3
                 ; 0009 055C     }
                +
006059 5f0f     +SUBI R16 , LOW ( - 1 )
00605a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00605b cfee      	RJMP _0x120108
                 _0x120109:
                 ; 0009 055D     putchar0('\r');
00605c e0ad      	LDI  R26,LOW(13)
00605d 940e 3fea 	CALL _putchar0
                 ; 0009 055E     printDebug("\r\n\---\r\n");
                +
00605f ebea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5428 ) )
006060 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5428 ) )
006061 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5428 ) )
006062 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5428 ) )
                 	__POINTD1FN _0x120000,5428
006063 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 055F 
                 ; 0009 0560     TIMER_setTimer(&timeout, 10);
006065 01fe      	MOVW R30,R28
006066 96bb      	ADIW R30,43
006067 940e c132 	CALL SUBOPT_0x27
                 ; 0009 0561 
                 ; 0009 0562     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x12010A:
006069 91e0 10f1 	LDS  R30,_config_ready
00606b 30e0      	CPI  R30,0
00606c f419      	BRNE _0x12010D
00606d 940e cad4 	CALL SUBOPT_0x1B0
00606f f009      	BREQ _0x12010E
                 _0x12010D:
006070 c004      	RJMP _0x12010C
                 _0x12010E:
                 ; 0009 0563        delay_ms(50);
006071 940e c36b 	CALL SUBOPT_0x7A
                 ; 0009 0564        #asm("wdr")
006073 95a8      	wdr
                 ; 0009 0565     }
006074 cff4      	RJMP _0x12010A
                 _0x12010C:
                 ; 0009 0566 
                 ; 0009 0567     ETH_switchMode(MODE_NORM);
006075 e8a0      	LDI  R26,LOW(128)
006076 dd84      	RCALL _ETH_switchMode
                 ; 0009 0568 
                 ; 0009 0569     free( ptr );
006077 01da      	MOVW R26,R20
006078 940e a519 	CALL _free
                 ; 0009 056A 
                 ; 0009 056B     if(config_response == 'S'){
00607a 91a0 10f3 	LDS  R26,_config_response
00607c 35a3      	CPI  R26,LOW(0x53)
00607d f419      	BRNE _0x12010F
                 ; 0009 056C         return 0;
00607e e0e0      	LDI  R30,LOW(0)
00607f e0f0      	LDI  R31,HIGH(0)
006080 c002      	RJMP _0x20E007B
                 ; 0009 056D     }
                 ; 0009 056E     else{
                 _0x12010F:
                 ; 0009 056F         return -1;
006081 efef      	LDI  R30,LOW(65535)
006082 efff      	LDI  R31,HIGH(65535)
                 ; 0009 0570     }
                 ; 0009 0571 }
                 _0x20E007B:
006083 940e e0d5 	CALL __LOADLOCR6
006085 96e7      	ADIW R28,55
006086 9508      	RET
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0574 {
                 _ETH_reset:
                 ; 0009 0575     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
006087 ece2     +LDI R30 , LOW ( 2 * _0x120000 + ( 5436 ) )
006088 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5436 ) )
006089 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5436 ) )
00608a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5436 ) )
                 	__POINTD1FN _0x120000,5436
00608b 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 0576     ETH_RESET   = 0;
00608d 9872      	CBI  0xE,2
                 ; 0009 0577     delay_ms(3000);
00608e eba8      	LDI  R26,LOW(3000)
00608f e0bb      	LDI  R27,HIGH(3000)
006090 940e dcff 	CALL _delay_ms
                 ; 0009 0578     ETH_RESET   = 1;
006092 9a72      	SBI  0xE,2
                 ; 0009 0579     delay_ms(1);
006093 940e c359 	CALL SUBOPT_0x75
006095 940e dcff 	CALL _delay_ms
                 ; 0009 057A     printDebug("...Done\r\n");
                +
006097 efe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5488 ) )
006098 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5488 ) )
006099 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5488 ) )
00609a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5488 ) )
                 	__POINTD1FN _0x120000,5488
00609b 940e c02f 	CALL SUBOPT_0x3
                 ; 0009 057B }
00609d 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
00609e 940e c394 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0060a0 940e cb94 	CALL SUBOPT_0x1CC
                 _0x140004:
                +
0060a2 3008     +CPI R16 , LOW ( 8 )
0060a3 e0e0     +LDI R30 , HIGH ( 8 )
0060a4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0060a5 f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
0060a6 940e cb99 	CALL SUBOPT_0x1CD
0060a8 81ac      	LDD  R26,Y+4
0060a9 81bd      	LDD  R27,Y+4+1
0060aa 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
0060ab 5f0f     +SUBI R16 , LOW ( - 1 )
0060ac 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060ad cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
0060ae 940e cb99 	CALL SUBOPT_0x1CD
0060b0 940e cba2 	CALL SUBOPT_0x1CE
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
0060b2 940e c45e 	CALL SUBOPT_0x9B
0060b4 2ffe      	MOV  R31,R30
0060b5 e0e0      	LDI  R30,0
0060b6 010f      	MOVW R0,R30
0060b7 940e cb99 	CALL SUBOPT_0x1CD
0060b9 940e c45e 	CALL SUBOPT_0x9B
0060bb 29e0      	OR   R30,R0
0060bc 29f1      	OR   R31,R1
0060bd 940e cba7 	CALL SUBOPT_0x1CF
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
0060bf 85a0      	LDD  R26,Z+8
0060c0 33a0      	CPI  R26,LOW(0x30)
0060c1 f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
0060c2 c1a9      	RJMP _0x20E007A
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
0060c3 81ee      	LDD  R30,Y+6
0060c4 81ff      	LDD  R31,Y+6+1
0060c5 1be2      	SUB  R30,R18
0060c6 0bf3      	SBC  R31,R19
                +
0060c7 81ac     +LDD R26 , Y + 4
0060c8 81bd     +LDD R27 , Y + 4 + 1
0060c9 961b     +ADIW R26 , 11
0060ca 93ed     +ST X + , R30
0060cb 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
0060cc 81ec      	LDD  R30,Y+4
0060cd 81fd      	LDD  R31,Y+4+1
0060ce 85a3      	LDD  R26,Z+11
0060cf 85b4      	LDD  R27,Z+12
0060d0 940e cbaf 	CALL SUBOPT_0x1D0
                +
0060d2 81ac     +LDD R26 , Y + 4
0060d3 81bd     +LDD R27 , Y + 4 + 1
0060d4 961d     +ADIW R26 , 13
0060d5 93ed     +ST X + , R30
0060d6 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
0060d7 81ac      	LDD  R26,Y+4
0060d8 81bd      	LDD  R27,Y+4+1
0060d9 961d      	ADIW R26,13
0060da 940e e02a 	CALL __GETW1P
0060dc 9730      	SBIW R30,0
0060dd f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
0060de e0e0     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
0060df e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
0060e0 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
0060e1 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
0060e2 940e c02f 	CALL SUBOPT_0x3
                 ; 000A 001D         return -1;
0060e4 efef      	LDI  R30,LOW(65535)
0060e5 efff      	LDI  R31,HIGH(65535)
0060e6 c187      	RJMP _0x20E0079
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
0060e7 e000     +LDI R16 , LOW ( 0 )
0060e8 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
0060e9 81ac      	LDD  R26,Y+4
0060ea 81bd      	LDD  R27,Y+4+1
0060eb 961b      	ADIW R26,11
0060ec 940e cbb6 	CALL SUBOPT_0x1D1
0060ee f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
0060ef 81ec      	LDD  R30,Y+4
0060f0 81fd      	LDD  R31,Y+4+1
0060f1 85a5      	LDD  R26,Z+13
0060f2 85b6      	LDD  R27,Z+14
0060f3 940e cbbb 	CALL SUBOPT_0x1D2
0060f5 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
0060f6 5f0f     +SUBI R16 , LOW ( - 1 )
0060f7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060f8 cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
0060f9 c172      	RJMP _0x20E007A
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
0060fa 940e c394 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
0060fc e020     +LDI R18 , LOW ( 0 )
0060fd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
0060fe e2e6     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
0060ff e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
006100 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
006101 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
006102 940e c02f 	CALL SUBOPT_0x3
                 ; 000A 003B     print_payload(pkt,len);
006104 940e ca2b 	CALL SUBOPT_0x192
006106 85a8      	LDD  R26,Y+8
006107 85b9      	LDD  R27,Y+8+1
006108 940e 9e6a 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
00610a e000     +LDI R16 , LOW ( 0 )
00610b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
00610c 3008     +CPI R16 , LOW ( 8 )
00610d e0e0     +LDI R30 , HIGH ( 8 )
00610e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00610f f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
006110 940e cb99 	CALL SUBOPT_0x1CD
006112 81ac      	LDD  R26,Y+4
006113 81bd      	LDD  R27,Y+4+1
006114 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
006115 5f0f     +SUBI R16 , LOW ( - 1 )
006116 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006117 cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
006118 940e cb99 	CALL SUBOPT_0x1CD
00611a 940e cba2 	CALL SUBOPT_0x1CE
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
00611c 81ac     +LDD R26 , Y + 4
00611d 81bd     +LDD R27 , Y + 4 + 1
00611e 9619     +ADIW R26 , 9
00611f 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
006120 81ec      	LDD  R30,Y+4
006121 81fd      	LDD  R31,Y+4+1
006122 85a0      	LDD  R26,Z+8
006123 31a0      	CPI  R26,LOW(0x10)
006124 f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
006125 e3ed     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
006126 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
006127 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
006128 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
006129 940e c02f 	CALL SUBOPT_0x3
                 ; 000A 0047         st->confLen     =   0;
00612b 81ac      	LDD  R26,Y+4
00612c 81bd      	LDD  R27,Y+4+1
00612d 961a      	ADIW R26,10
00612e 940e c720 	CALL SUBOPT_0x112
                 ; 000A 0048         st->confSpec    =   NULL;
006130 81ac      	LDD  R26,Y+4
006131 81bd      	LDD  R27,Y+4+1
006132 961c      	ADIW R26,12
006133 940e c720 	CALL SUBOPT_0x112
                 ; 000A 0049         return 0;
006135 c136      	RJMP _0x20E007A
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
006136 e5ec     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
006137 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
006138 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
006139 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
00613a 940e c02f 	CALL SUBOPT_0x3
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
00613c 81ee      	LDD  R30,Y+6
00613d 81ff      	LDD  R31,Y+6+1
00613e 1be2      	SUB  R30,R18
00613f 0bf3      	SBC  R31,R19
                +
006140 81ac     +LDD R26 , Y + 4
006141 81bd     +LDD R27 , Y + 4 + 1
006142 961a     +ADIW R26 , 10
006143 93ed     +ST X + , R30
006144 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
006145 e7eb     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
006146 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
006147 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
006148 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
006149 940e e05e 	CALL __PUTPARD1
00614b 85a8      	LDD  R26,Y+8
00614c 85b9      	LDD  R27,Y+8+1
00614d 961a      	ADIW R26,10
00614e 940e c0f9 	CALL SUBOPT_0x1E
006150 940e ca02 	CALL SUBOPT_0x189
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
006152 81ec      	LDD  R30,Y+4
006153 81fd      	LDD  R31,Y+4+1
006154 85a2      	LDD  R26,Z+10
006155 85b3      	LDD  R27,Z+11
006156 940e cbaf 	CALL SUBOPT_0x1D0
                +
006158 81ac     +LDD R26 , Y + 4
006159 81bd     +LDD R27 , Y + 4 + 1
00615a 961c     +ADIW R26 , 12
00615b 93ed     +ST X + , R30
00615c 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
00615d 81ac      	LDD  R26,Y+4
00615e 81bd      	LDD  R27,Y+4+1
00615f 961c      	ADIW R26,12
006160 940e e02a 	CALL __GETW1P
006162 9730      	SBIW R30,0
006163 f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
006164 e9ef     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
006165 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
006166 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
006167 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
006168 940e c02f 	CALL SUBOPT_0x3
                 ; 000A 0056         return -1;
00616a efef      	LDI  R30,LOW(65535)
00616b efff      	LDI  R31,HIGH(65535)
00616c c101      	RJMP _0x20E0079
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
00616d e000     +LDI R16 , LOW ( 0 )
00616e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
00616f 81ac      	LDD  R26,Y+4
006170 81bd      	LDD  R27,Y+4+1
006171 961a      	ADIW R26,10
006172 940e cbb6 	CALL SUBOPT_0x1D1
006174 f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
006175 81ec      	LDD  R30,Y+4
006176 81fd      	LDD  R31,Y+4+1
006177 85a4      	LDD  R26,Z+12
006178 85b5      	LDD  R27,Z+13
006179 940e cbbb 	CALL SUBOPT_0x1D2
00617b 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
00617c 5f0f     +SUBI R16 , LOW ( - 1 )
00617d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00617e cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
00617f c0ec      	RJMP _0x20E007A
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
006180 940e c394 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006182 940e cb94 	CALL SUBOPT_0x1CC
                 _0x140014:
                +
006184 3008     +CPI R16 , LOW ( 8 )
006185 e0e0     +LDI R30 , HIGH ( 8 )
006186 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006187 f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
006188 940e cb99 	CALL SUBOPT_0x1CD
00618a 81ac      	LDD  R26,Y+4
00618b 81bd      	LDD  R27,Y+4+1
00618c 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
00618d 5f0f     +SUBI R16 , LOW ( - 1 )
00618e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00618f cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
006190 940e cb99 	CALL SUBOPT_0x1CD
006192 940e cbc5 	CALL SUBOPT_0x1D3
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
006194 81ae      	LDD  R26,Y+6
006195 81bf      	LDD  R27,Y+6+1
006196 9717      	SBIW R26,7
006197 f414      	BRGE PC+3
006198 940c 6207 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
00619a 940e cb99 	CALL SUBOPT_0x1CD
00619c 940e cbca 	CALL SUBOPT_0x1D4
00619e 940e cbd2 	CALL SUBOPT_0x1D5
0061a0 937f      	PUSH R23
0061a1 936f      	PUSH R22
0061a2 93ff      	PUSH R31
0061a3 93ef      	PUSH R30
0061a4 940e cb99 	CALL SUBOPT_0x1CD
0061a6 940e cbca 	CALL SUBOPT_0x1D4
0061a8 940e df30 	CALL __LSLD16
0061aa 91af      	POP  R26
0061ab 91bf      	POP  R27
0061ac 918f      	POP  R24
0061ad 919f      	POP  R25
0061ae 940e decf 	CALL __ORD12
0061b0 937f      	PUSH R23
0061b1 936f      	PUSH R22
0061b2 93ff      	PUSH R31
0061b3 93ef      	PUSH R30
0061b4 940e cb99 	CALL SUBOPT_0x1CD
0061b6 940e cbca 	CALL SUBOPT_0x1D4
0061b8 940e cbd8 	CALL SUBOPT_0x1D6
0061ba 91af      	POP  R26
0061bb 91bf      	POP  R27
0061bc 918f      	POP  R24
0061bd 919f      	POP  R25
0061be 940e decf 	CALL __ORD12
0061c0 937f      	PUSH R23
0061c1 936f      	PUSH R22
0061c2 93ff      	PUSH R31
0061c3 93ef      	PUSH R30
0061c4 940e cb99 	CALL SUBOPT_0x1CD
0061c6 940e cbca 	CALL SUBOPT_0x1D4
0061c8 91af      	POP  R26
0061c9 91bf      	POP  R27
0061ca 918f      	POP  R24
0061cb 919f      	POP  R25
0061cc 940e cbde 	CALL SUBOPT_0x1D7
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
0061ce 940e cb99 	CALL SUBOPT_0x1CD
0061d0 940e cbca 	CALL SUBOPT_0x1D4
0061d2 940e cbd2 	CALL SUBOPT_0x1D5
0061d4 937f      	PUSH R23
0061d5 936f      	PUSH R22
0061d6 93ff      	PUSH R31
0061d7 93ef      	PUSH R30
0061d8 940e cb99 	CALL SUBOPT_0x1CD
0061da 940e cbca 	CALL SUBOPT_0x1D4
0061dc 940e df30 	CALL __LSLD16
0061de 91af      	POP  R26
0061df 91bf      	POP  R27
0061e0 918f      	POP  R24
0061e1 919f      	POP  R25
0061e2 940e decf 	CALL __ORD12
0061e4 937f      	PUSH R23
0061e5 936f      	PUSH R22
0061e6 93ff      	PUSH R31
0061e7 93ef      	PUSH R30
0061e8 940e cb99 	CALL SUBOPT_0x1CD
0061ea 940e cbca 	CALL SUBOPT_0x1D4
0061ec 940e cbd8 	CALL SUBOPT_0x1D6
0061ee 91af      	POP  R26
0061ef 91bf      	POP  R27
0061f0 918f      	POP  R24
0061f1 919f      	POP  R25
0061f2 940e decf 	CALL __ORD12
0061f4 937f      	PUSH R23
0061f5 936f      	PUSH R22
0061f6 93ff      	PUSH R31
0061f7 93ef      	PUSH R30
0061f8 940e cb99 	CALL SUBOPT_0x1CD
0061fa 940e cbca 	CALL SUBOPT_0x1D4
0061fc 91af      	POP  R26
0061fd 91bf      	POP  R27
0061fe 918f      	POP  R24
0061ff 919f      	POP  R25
006200 940e decf 	CALL __ORD12
                +
006202 81ac     +LDD R26 , Y + 4
006203 81bd     +LDD R27 , Y + 4 + 1
006204 961d     +ADIW R26 , 13
006205 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
006207 c064      	RJMP _0x20E007A
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
006208 940e c394 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00620a 940e cb94 	CALL SUBOPT_0x1CC
                 _0x140018:
                +
00620c 3008     +CPI R16 , LOW ( 8 )
00620d e0e0     +LDI R30 , HIGH ( 8 )
00620e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00620f f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
006210 940e cbe6 	CALL SUBOPT_0x1D8
006212 81ac      	LDD  R26,Y+4
006213 81bd      	LDD  R27,Y+4+1
006214 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
006215 5f0f     +SUBI R16 , LOW ( - 1 )
006216 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006217 cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
006218 c0b2      	RJMP _0x20E0078
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
006219 940e c394 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
00621b 940e cb94 	CALL SUBOPT_0x1CC
                 _0x14001B:
                +
00621d 3008     +CPI R16 , LOW ( 8 )
00621e e0e0     +LDI R30 , HIGH ( 8 )
00621f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006220 f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
006221 940e cb99 	CALL SUBOPT_0x1CD
006223 81ac      	LDD  R26,Y+4
006224 81bd      	LDD  R27,Y+4+1
006225 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
006226 5f0f     +SUBI R16 , LOW ( - 1 )
006227 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006228 cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
006229 940e cb99 	CALL SUBOPT_0x1CD
00622b 940e cbc5 	CALL SUBOPT_0x1D3
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
00622d 81ee      	LDD  R30,Y+6
00622e 81ff      	LDD  R31,Y+6+1
00622f 9732      	SBIW R30,2
006230 940e cba7 	CALL SUBOPT_0x1CF
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
006232 940e ca74 	CALL SUBOPT_0x19F
006234 f5b8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
006235 81ec      	LDD  R30,Y+4
006236 81fd      	LDD  R31,Y+4+1
006237 85a1      	LDD  R26,Z+9
006238 85b2      	LDD  R27,Z+10
006239 940e cbaf 	CALL SUBOPT_0x1D0
                +
00623b 81ac     +LDD R26 , Y + 4
00623c 81bd     +LDD R27 , Y + 4 + 1
00623d 961b     +ADIW R26 , 11
00623e 93ed     +ST X + , R30
00623f 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
006240 81ac      	LDD  R26,Y+4
006241 81bd      	LDD  R27,Y+4+1
006242 961b      	ADIW R26,11
006243 940e e02a 	CALL __GETW1P
006245 9730      	SBIW R30,0
006246 f499      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
006247 ece4     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
006248 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
006249 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
00624a e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
00624b 940e cbea 	CALL SUBOPT_0x1D9
00624d 85a1      	LDD  R26,Z+9
00624e 85b2      	LDD  R27,Z+10
00624f e0e1      	LDI  R30,LOW(1)
006250 e0f0      	LDI  R31,HIGH(1)
006251 940e df54 	CALL __MULW12U
006253 940e c191 	CALL SUBOPT_0x34
006255 940e c0a5 	CALL SUBOPT_0x12
                 ; 000A 00A3             return -1;
006257 efef      	LDI  R30,LOW(65535)
006258 efff      	LDI  R31,HIGH(65535)
006259 c014      	RJMP _0x20E0079
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
00625a e000     +LDI R16 , LOW ( 0 )
00625b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
00625c 81ac      	LDD  R26,Y+4
00625d 81bd      	LDD  R27,Y+4+1
00625e 9619      	ADIW R26,9
00625f 940e cbb6 	CALL SUBOPT_0x1D1
006261 f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
006262 81ec      	LDD  R30,Y+4
006263 81fd      	LDD  R31,Y+4+1
006264 85a3      	LDD  R26,Z+11
006265 85b4      	LDD  R27,Z+12
006266 940e cbbb 	CALL SUBOPT_0x1D2
006268 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
006269 5f0f     +SUBI R16 , LOW ( - 1 )
00626a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00626b cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E007A:
00626c e0e0      	LDI  R30,LOW(0)
00626d e0f0      	LDI  R31,HIGH(0)
                 _0x20E0079:
00626e 940e e0d7 	CALL __LOADLOCR4
006270 962a      	ADIW R28,10
006271 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
006272 940e c394 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006274 940e cb94 	CALL SUBOPT_0x1CC
                 _0x140023:
                +
006276 3008     +CPI R16 , LOW ( 8 )
006277 e0e0     +LDI R30 , HIGH ( 8 )
006278 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006279 f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
00627a 940e cbe6 	CALL SUBOPT_0x1D8
00627c 81ac      	LDD  R26,Y+4
00627d 81bd      	LDD  R27,Y+4+1
00627e 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
00627f 5f0f     +SUBI R16 , LOW ( - 1 )
006280 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006281 cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
006282 940e cbe6 	CALL SUBOPT_0x1D8
006284 940e cbc5 	CALL SUBOPT_0x1D3
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
006286 940e cbe6 	CALL SUBOPT_0x1D8
006288 940e cbca 	CALL SUBOPT_0x1D4
00628a 940e cbd2 	CALL SUBOPT_0x1D5
00628c 937f      	PUSH R23
00628d 936f      	PUSH R22
00628e 93ff      	PUSH R31
00628f 93ef      	PUSH R30
006290 940e cbe6 	CALL SUBOPT_0x1D8
006292 940e cbca 	CALL SUBOPT_0x1D4
006294 940e df30 	CALL __LSLD16
006296 91af      	POP  R26
006297 91bf      	POP  R27
006298 918f      	POP  R24
006299 919f      	POP  R25
00629a 940e decf 	CALL __ORD12
00629c 937f      	PUSH R23
00629d 936f      	PUSH R22
00629e 93ff      	PUSH R31
00629f 93ef      	PUSH R30
0062a0 940e cbe6 	CALL SUBOPT_0x1D8
0062a2 940e cbca 	CALL SUBOPT_0x1D4
0062a4 940e cbd8 	CALL SUBOPT_0x1D6
0062a6 91af      	POP  R26
0062a7 91bf      	POP  R27
0062a8 918f      	POP  R24
0062a9 919f      	POP  R25
0062aa 940e decf 	CALL __ORD12
0062ac 937f      	PUSH R23
0062ad 936f      	PUSH R22
0062ae 93ff      	PUSH R31
0062af 93ef      	PUSH R30
0062b0 940e cbe6 	CALL SUBOPT_0x1D8
0062b2 940e cbca 	CALL SUBOPT_0x1D4
0062b4 91af      	POP  R26
0062b5 91bf      	POP  R27
0062b6 918f      	POP  R24
0062b7 919f      	POP  R25
0062b8 940e cbde 	CALL SUBOPT_0x1D7
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
0062ba c01d      	RJMP _0x20E0077
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
0062bb 940e c394 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0062bd 940e cb94 	CALL SUBOPT_0x1CC
                 _0x140026:
                +
0062bf 3008     +CPI R16 , LOW ( 8 )
0062c0 e0e0     +LDI R30 , HIGH ( 8 )
0062c1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0062c2 f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
0062c3 940e cbe6 	CALL SUBOPT_0x1D8
0062c5 81ac      	LDD  R26,Y+4
0062c6 81bd      	LDD  R27,Y+4+1
0062c7 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
0062c8 5f0f     +SUBI R16 , LOW ( - 1 )
0062c9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0062ca cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0078:
0062cb 01f9      	MOVW R30,R18
                +
0062cc 5f2f     +SUBI R18 , LOW ( - 1 )
0062cd 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0062ce 940e ca9b 	CALL SUBOPT_0x1A7
0062d0 940e cbc5 	CALL SUBOPT_0x1D3
                 ; 000A 00CB     st->status      =   pkt[k++];
0062d2 940e cbe6 	CALL SUBOPT_0x1D8
                +
0062d4 81ac     +LDD R26 , Y + 4
0062d5 81bd     +LDD R27 , Y + 4 + 1
0062d6 9619     +ADIW R26 , 9
0062d7 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E0077:
0062d8 e0e0      	LDI  R30,LOW(0)
0062d9 e0f0      	LDI  R31,HIGH(0)
0062da 940e e0d7 	CALL __LOADLOCR4
0062dc 9628      	ADIW R28,8
0062dd 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
0062de 940e c426 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
0062e0 85a5      	LDD  R26,Z+13
0062e1 85b6      	LDD  R27,Z+14
0062e2 940e a519 	CALL _free
                 ; 000A 00D3 }
0062e4 c05e      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
0062e5 940e c426 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
0062e7 85a4      	LDD  R26,Z+12
0062e8 85b5      	LDD  R27,Z+13
0062e9 940e a519 	CALL _free
                 ; 000A 00D8 }
0062eb c057      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
0062ec 940e c426 	CALL SUBOPT_0x94
                 ;	*st -> Y+0
0062ee 85a3      	LDD  R26,Z+11
0062ef 85b4      	LDD  R27,Z+12
0062f0 940e a519 	CALL _free
                 ; 000A 00DD }
0062f2 c050      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
0062f3 93aa      	ST   -Y,R26
0062f4 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
0062f5 81e9      	LDD  R30,Y+1
0062f6 7fe0      	ANDI R30,LOW(0xF0)
0062f7 2f1e      	MOV  R17,R30
0062f8 2fe1      	MOV  R30,R17
0062f9 940e c21d 	CALL SUBOPT_0x47
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
0062fb f419      	BRNE _0x160006
0062fc eae1      	LDI  R30,LOW(161)
0062fd e0f0      	LDI  R31,HIGH(161)
0062fe c043      	RJMP _0x20E0075
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
0062ff 32e0      	CPI  R30,LOW(0x20)
006300 e0a0      	LDI  R26,HIGH(0x20)
006301 07fa      	CPC  R31,R26
006302 f419      	BRNE _0x160007
006303 e0e8      	LDI  R30,LOW(8)
006304 e0f0      	LDI  R31,HIGH(8)
006305 c03c      	RJMP _0x20E0075
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
006306 33e0      	CPI  R30,LOW(0x30)
006307 e0a0      	LDI  R26,HIGH(0x30)
006308 07fa      	CPC  R31,R26
006309 f419      	BRNE _0x160008
00630a e1ed      	LDI  R30,LOW(29)
00630b e0f0      	LDI  R31,HIGH(29)
00630c c035      	RJMP _0x20E0075
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
00630d 34e0      	CPI  R30,LOW(0x40)
00630e e0a0      	LDI  R26,HIGH(0x40)
00630f 07fa      	CPC  R31,R26
006310 f419      	BRNE _0x160009
006311 e0e3      	LDI  R30,LOW(3)
006312 e0f0      	LDI  R31,HIGH(3)
006313 c02e      	RJMP _0x20E0075
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
006314 35e0      	CPI  R30,LOW(0x50)
006315 e0a0      	LDI  R26,HIGH(0x50)
006316 07fa      	CPC  R31,R26
006317 f419      	BRNE _0x16000A
006318 e2e6      	LDI  R30,LOW(38)
006319 e0f0      	LDI  R31,HIGH(38)
00631a c027      	RJMP _0x20E0075
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
00631b 36e0      	CPI  R30,LOW(0x60)
00631c e0a0      	LDI  R26,HIGH(0x60)
00631d 07fa      	CPC  R31,R26
00631e f419      	BRNE _0x16000B
00631f e0e5      	LDI  R30,LOW(5)
006320 e0f0      	LDI  R31,HIGH(5)
006321 c020      	RJMP _0x20E0075
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
006322 37e0      	CPI  R30,LOW(0x70)
006323 e0a0      	LDI  R26,HIGH(0x70)
006324 07fa      	CPC  R31,R26
006325 f419      	BRNE _0x16000C
006326 e2e9      	LDI  R30,LOW(41)
006327 e0f0      	LDI  R31,HIGH(41)
006328 c019      	RJMP _0x20E0075
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
006329 38e0      	CPI  R30,LOW(0x80)
00632a e0a0      	LDI  R26,HIGH(0x80)
00632b 07fa      	CPC  R31,R26
00632c f419      	BRNE _0x16000D
00632d e2e5      	LDI  R30,LOW(37)
00632e e0f0      	LDI  R31,HIGH(37)
00632f c012      	RJMP _0x20E0075
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
006330 39e0      	CPI  R30,LOW(0x90)
006331 e0a0      	LDI  R26,HIGH(0x90)
006332 07fa      	CPC  R31,R26
006333 f419      	BRNE _0x16000F
006334 e1e2      	LDI  R30,LOW(18)
006335 e0f0      	LDI  R31,HIGH(18)
006336 c00b      	RJMP _0x20E0075
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
006337 efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
006338 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
006339 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
00633a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
00633b 940e e05e 	CALL __PUTPARD1
00633d 2fe1      	MOV  R30,R17
00633e 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0018                                     return -1;
006340 efef      	LDI  R30,LOW(65535)
006341 efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E0075:
006342 8118      	LDD  R17,Y+0
                 _0x20E0076:
006343 9622      	ADIW R28,2
006344 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
006345 940e cbef 	CALL SUBOPT_0x1DA
006347 940e c218 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
006349 e020     +LDI R18 , LOW ( 0 )
00634a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00634b e050      	LDI  R21,0
00634c 85ec      	LDD  R30,Y+12
00634d 7fe0      	ANDI R30,LOW(0xF0)
00634e 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
00634f 2fe5      	MOV  R30,R21
006350 940e c21d 	CALL SUBOPT_0x47
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
006352 f011      	BREQ PC+3
006353 940c 63c3 	JMP _0x160013
006355 940e c67b 	CALL SUBOPT_0xF6
006357 940e cbf2 	CALL SUBOPT_0x1DB
                 ; 000B 0029                                     if(cnfgStrc == NULL){
006359 f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
00635a e2e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
00635b e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
00635c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
00635d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
00635e 940e e05e 	CALL __PUTPARD1
                +
006360 eae1     +LDI R30 , LOW ( 0xA1 )
006361 e0f0     +LDI R31 , HIGH ( 0xA1 )
006362 e060     +LDI R22 , BYTE3 ( 0xA1 )
006363 e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
006364 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 002B                                         return -2;
006366 efee      	LDI  R30,LOW(65534)
006367 efff      	LDI  R31,HIGH(65534)
006368 c408      	RJMP _0x20E0074
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
006369 81ae      	LDD  R26,Y+6
00636a 81bf      	LDD  R27,Y+6+1
00636b 940e 48a4 	CALL _getPropertiesConfig
00636d 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
00636e 2333      	TST  R19
00636f f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
006370 e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
006371 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
006372 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
006373 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
006374 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0031                                         free ( cnfgStrc );
006376 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 0032                                         return -3;
006378 efed      	LDI  R30,LOW(65533)
006379 efff      	LDI  R31,HIGH(65533)
00637a c3f6      	RJMP _0x20E0074
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
00637b e8ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
00637c e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
00637d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
00637e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
00637f 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
006381 940e cbf8 	CALL SUBOPT_0x1DC
006383 940e c191 	CALL SUBOPT_0x34
006385 940e c0a5 	CALL SUBOPT_0x12
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
006387 940e cbf8 	CALL SUBOPT_0x1DC
006389 9674      	ADIW R30,20
00638a 940e c191 	CALL SUBOPT_0x34
00638c 940e c0a5 	CALL SUBOPT_0x12
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
00638e 940e cbf8 	CALL SUBOPT_0x1DC
006390 96b8      	ADIW R30,40
006391 940e c191 	CALL SUBOPT_0x34
006393 940e c0a5 	CALL SUBOPT_0x12
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
006395 940e cbf8 	CALL SUBOPT_0x1DC
006397 5be0      	SUBI R30,LOW(-80)
006398 4fff      	SBCI R31,HIGH(-80)
006399 940e c191 	CALL SUBOPT_0x34
00639b 940e c0a5 	CALL SUBOPT_0x12
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
00639d 940e cbf8 	CALL SUBOPT_0x1DC
00639f 59ec      	SUBI R30,LOW(-100)
0063a0 4fff      	SBCI R31,HIGH(-100)
0063a1 940e c191 	CALL SUBOPT_0x34
0063a3 940e c0a5 	CALL SUBOPT_0x12
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
0063a5 940e cbf8 	CALL SUBOPT_0x1DC
0063a7 57e4      	SUBI R30,LOW(-140)
0063a8 4fff      	SBCI R31,HIGH(-140)
0063a9 940e c191 	CALL SUBOPT_0x34
0063ab 940e c0a5 	CALL SUBOPT_0x12
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
0063ad ebe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
0063ae e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
0063af e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
0063b0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
0063b1 940e c798 	CALL SUBOPT_0x126
0063b3 56a0      	SUBI R26,LOW(-160)
0063b4 4fbf      	SBCI R27,HIGH(-160)
0063b5 91ec      	LD   R30,X
0063b6 940e df35 	CALL __CBD1
0063b8 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
0063ba 940e cbfd 	CALL SUBOPT_0x1DD
0063bc 940e c67b 	CALL SUBOPT_0xF6
0063be 940e cc02 	CALL SUBOPT_0x1DE
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
0063c0 eae1      	LDI  R30,LOW(161)
0063c1 e0f0      	LDI  R31,HIGH(161)
0063c2 c3ae      	RJMP _0x20E0074
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
0063c3 32e0      	CPI  R30,LOW(0x20)
0063c4 e0a0      	LDI  R26,HIGH(0x20)
0063c5 07fa      	CPC  R31,R26
0063c6 f011      	BREQ PC+3
0063c7 940c 6430 	JMP _0x160016
0063c9 940e cc05 	CALL SUBOPT_0x1DF
0063cb 940e cbf2 	CALL SUBOPT_0x1DB
                 ; 000B 004A                                     if(cnfgStrc == NULL){
0063cd f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
0063ce ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
0063cf e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
0063d0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
0063d1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
0063d2 940e e05e 	CALL __PUTPARD1
                +
0063d4 e0e8     +LDI R30 , LOW ( 0x8 )
0063d5 e0f0     +LDI R31 , HIGH ( 0x8 )
0063d6 e060     +LDI R22 , BYTE3 ( 0x8 )
0063d7 e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
0063d8 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 004C                                         return -2;
0063da efee      	LDI  R30,LOW(65534)
0063db efff      	LDI  R31,HIGH(65534)
0063dc c394      	RJMP _0x20E0074
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
0063dd 81ae      	LDD  R26,Y+6
0063de 81bf      	LDD  R27,Y+6+1
0063df 940e 4939 	CALL _getOperatingConfig
0063e1 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
0063e2 2333      	TST  R19
0063e3 f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
0063e4 eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
0063e5 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
0063e6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
0063e7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
0063e8 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0052                                         free ( cnfgStrc );
0063ea 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 0053                                         return -3;
0063ec efed      	LDI  R30,LOW(65533)
0063ed efff      	LDI  R31,HIGH(65533)
0063ee c382      	RJMP _0x20E0074
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
0063ef e1ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
0063f0 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
0063f1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
0063f2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
0063f3 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
0063f5 e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
0063f6 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
0063f7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
0063f8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
0063f9 940e c798 	CALL SUBOPT_0x126
0063fb 91ec      	LD   R30,X
0063fc 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
0063fe e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
0063ff e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
006400 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
006401 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
006402 940e c79d 	CALL SUBOPT_0x127
006404 81e1      	LDD  R30,Z+1
006405 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
006407 940e cc08 	CALL SUBOPT_0x1E0
006409 81e2      	LDD  R30,Z+2
00640a 940e c143 	CALL SUBOPT_0x29
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
00640c e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
00640d e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
00640e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
00640f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
006410 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
006412 e000     +LDI R16 , LOW ( 0 )
006413 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
006414 3005     +CPI R16 , LOW ( 5 )
006415 e0e0     +LDI R30 , HIGH ( 5 )
006416 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
006417 f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
006418 940e cc0d 	CALL SUBOPT_0x1E1
00641a 940e c6d8 	CALL SUBOPT_0x105
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
00641c e0e4      	LDI  R30,LOW(4)
00641d e0f0      	LDI  R31,HIGH(4)
00641e 17e0      	CP   R30,R16
00641f 07f1      	CPC  R31,R17
006420 f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
006421 940e cc12 	CALL SUBOPT_0x1E2
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
006423 5f0f     +SUBI R16 , LOW ( - 1 )
006424 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006425 cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
006426 940e cbfd 	CALL SUBOPT_0x1DD
006428 e0a8      	LDI  R26,LOW(8)
006429 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
00642b 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
00642d e0e8      	LDI  R30,LOW(8)
00642e e0f0      	LDI  R31,HIGH(8)
00642f c341      	RJMP _0x20E0074
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
006430 33e0      	CPI  R30,LOW(0x30)
006431 e0a0      	LDI  R26,HIGH(0x30)
006432 07fa      	CPC  R31,R26
006433 f011      	BREQ PC+3
006434 940c 64f1 	JMP _0x16001D
006436 940e cc18 	CALL SUBOPT_0x1E3
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
006438 e1ad      	LDI  R26,LOW(29)
006439 940e cc1f 	CALL SUBOPT_0x1E4
                 ; 000B 0070                                     if(cnfgStrc == NULL){
00643b f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
00643c eae3     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
00643d e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
00643e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
00643f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
006440 940e e05e 	CALL __PUTPARD1
                +
006442 e1ed     +LDI R30 , LOW ( 0x1D )
006443 e0f0     +LDI R31 , HIGH ( 0x1D )
006444 e060     +LDI R22 , BYTE3 ( 0x1D )
006445 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
006446 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 0072                                         return -2;
006448 efee      	LDI  R30,LOW(65534)
006449 efff      	LDI  R31,HIGH(65534)
00644a c326      	RJMP _0x20E0074
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
00644b 940e ca2b 	CALL SUBOPT_0x192
00644d 85a8      	LDD  R26,Y+8
00644e 85b9      	LDD  R27,Y+8+1
00644f 940e 49a7 	CALL _getSensorConfig
006451 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
006452 2333      	TST  R19
006453 f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
006454 ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
006455 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
006456 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
006457 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
006458 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0078                                         free ( cnfgStrc );
00645a 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 0079                                         return -3;
00645c efed      	LDI  R30,LOW(65533)
00645d efff      	LDI  R31,HIGH(65533)
00645e c312      	RJMP _0x20E0074
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
00645f e0e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
006460 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
006461 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
006462 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
006463 940e cc21 	CALL SUBOPT_0x1E5
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
006465 e2e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
006466 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
006467 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
006468 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
006469 940e c798 	CALL SUBOPT_0x126
00646b 940e c0f9 	CALL SUBOPT_0x1E
00646d 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
00646f e3e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
006470 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
006471 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
006472 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
006473 940e c798 	CALL SUBOPT_0x126
006475 9612      	ADIW R26,2
006476 940e c0f9 	CALL SUBOPT_0x1E
006478 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
00647a e5e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
00647b e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
00647c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
00647d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
00647e 940e c79d 	CALL SUBOPT_0x127
006480 81e4      	LDD  R30,Z+4
006481 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
006483 e6ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
006484 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
006485 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
006486 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
006487 940e c79d 	CALL SUBOPT_0x127
006489 81e5      	LDD  R30,Z+5
00648a 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
00648c e8e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
00648d e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
00648e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
00648f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
006490 940e c79d 	CALL SUBOPT_0x127
006492 81e6      	LDD  R30,Z+6
006493 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
006495 e9e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
006496 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
006497 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
006498 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
006499 940e c79d 	CALL SUBOPT_0x127
00649b 81e7      	LDD  R30,Z+7
00649c 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
00649e 940e cc08 	CALL SUBOPT_0x1E0
0064a0 85e0      	LDD  R30,Z+8
0064a1 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
0064a3 eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
0064a4 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
0064a5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
0064a6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
0064a7 940e c79d 	CALL SUBOPT_0x127
0064a9 940e ca5a 	CALL SUBOPT_0x19A
0064ab 940e ca56 	CALL SUBOPT_0x199
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
0064ad ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
0064ae e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
0064af e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
0064b0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
0064b1 940e c798 	CALL SUBOPT_0x126
0064b3 961d      	ADIW R26,13
0064b4 940e c0f9 	CALL SUBOPT_0x1E
0064b6 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
0064b8 eded     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
0064b9 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
0064ba e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
0064bb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
0064bc 940e c79d 	CALL SUBOPT_0x127
                +
0064be 85a7     +LDD R26 , Z + 15
0064bf 89b0     +LDD R27 , Z + 15 + 1
0064c0 8981     +LDD R24 , Z + 15 + 2
0064c1 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
0064c2 940e ca56 	CALL SUBOPT_0x199
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
0064c4 efe4     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
0064c5 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
0064c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
0064c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
0064c8 940e c79d 	CALL SUBOPT_0x127
                +
0064ca 89a3     +LDD R26 , Z + 19
0064cb 89b4     +LDD R27 , Z + 19 + 1
0064cc 8985     +LDD R24 , Z + 19 + 2
0064cd 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
0064ce 940e ca56 	CALL SUBOPT_0x199
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
0064d0 e0eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
0064d1 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
0064d2 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
0064d3 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
0064d4 940e c798 	CALL SUBOPT_0x126
0064d6 9657      	ADIW R26,23
0064d7 940e c0f9 	CALL SUBOPT_0x1E
0064d9 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
0064db e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
0064dc e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
0064dd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
0064de e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
0064df 940e c79d 	CALL SUBOPT_0x127
                +
0064e1 8da1     +LDD R26 , Z + 25
0064e2 8db2     +LDD R27 , Z + 25 + 1
0064e3 8d83     +LDD R24 , Z + 25 + 2
0064e4 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
0064e5 940e ca56 	CALL SUBOPT_0x199
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
0064e7 940e cbfd 	CALL SUBOPT_0x1DD
0064e9 e1ad      	LDI  R26,LOW(29)
0064ea 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
0064ec 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
0064ee e1ed      	LDI  R30,LOW(29)
0064ef e0f0      	LDI  R31,HIGH(29)
0064f0 c280      	RJMP _0x20E0074
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
0064f1 34e0      	CPI  R30,LOW(0x40)
0064f2 e0a0      	LDI  R26,HIGH(0x40)
0064f3 07fa      	CPC  R31,R26
0064f4 f011      	BREQ PC+3
0064f5 940c 653a 	JMP _0x160020
0064f7 940e cc18 	CALL SUBOPT_0x1E3
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
0064f9 940e c35c 	CALL SUBOPT_0x76
0064fb 940e cbf2 	CALL SUBOPT_0x1DB
                 ; 000B 0099                                     if(cnfgStrc == NULL){
0064fd f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
0064fe e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
0064ff e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
006500 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
006501 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
006502 940e cc26 	CALL SUBOPT_0x1E6
                 ; 000B 009B                                         return -2;
006504 efee      	LDI  R30,LOW(65534)
006505 efff      	LDI  R31,HIGH(65534)
006506 c26a      	RJMP _0x20E0074
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
006507 940e ca2b 	CALL SUBOPT_0x192
006509 85a8      	LDD  R26,Y+8
00650a 85b9      	LDD  R27,Y+8+1
00650b 940e 4a8f 	CALL _getAuxDinConfig
00650d 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
00650e 2333      	TST  R19
00650f f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
006510 e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
006511 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
006512 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
006513 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
006514 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 00A1                                         free ( cnfgStrc );
006516 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 00A2                                         return -3;
006518 efed      	LDI  R30,LOW(65533)
006519 efff      	LDI  R31,HIGH(65533)
00651a c256      	RJMP _0x20E0074
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
00651b e9e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
00651c e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
00651d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
00651e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
00651f 940e cc21 	CALL SUBOPT_0x1E5
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
006521 940e cc2d 	CALL SUBOPT_0x1E7
006523 91ec      	LD   R30,X
006524 940e c143 	CALL SUBOPT_0x29
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
006526 ede1     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
006527 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
006528 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
006529 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
00652a 940e c798 	CALL SUBOPT_0x126
00652c 9611      	ADIW R26,1
00652d 940e c0f9 	CALL SUBOPT_0x1E
00652f 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
006531 940e cbfd 	CALL SUBOPT_0x1DD
006533 940e c35c 	CALL SUBOPT_0x76
006535 940e cc02 	CALL SUBOPT_0x1DE
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
006537 e0e3      	LDI  R30,LOW(3)
006538 e0f0      	LDI  R31,HIGH(3)
006539 c237      	RJMP _0x20E0074
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
00653a 35e0      	CPI  R30,LOW(0x50)
00653b e0a0      	LDI  R26,HIGH(0x50)
00653c 07fa      	CPC  R31,R26
00653d f011      	BREQ PC+3
00653e 940c 65a0 	JMP _0x160023
006540 940e cc18 	CALL SUBOPT_0x1E3
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
006542 e2a6      	LDI  R26,LOW(38)
006543 940e cc1f 	CALL SUBOPT_0x1E4
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
006545 f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
006546 eee9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
006547 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
006548 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
006549 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
00654a 940e e05e 	CALL __PUTPARD1
                +
00654c e2e6     +LDI R30 , LOW ( 0x26 )
00654d e0f0     +LDI R31 , HIGH ( 0x26 )
00654e e060     +LDI R22 , BYTE3 ( 0x26 )
00654f e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
006550 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 00B9                                         return -2;
006552 efee      	LDI  R30,LOW(65534)
006553 efff      	LDI  R31,HIGH(65534)
006554 c21c      	RJMP _0x20E0074
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
006555 940e ca2b 	CALL SUBOPT_0x192
006557 85a8      	LDD  R26,Y+8
006558 85b9      	LDD  R27,Y+8+1
006559 940e 4ac5 	CALL _getAuxDoutConfig
00655b 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
00655c 2333      	TST  R19
00655d f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
00655e e1ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
00655f e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
006560 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
006561 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
006562 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 00BF                                         free ( cnfgStrc );
006564 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 00C0                                         return -3;
006566 efed      	LDI  R30,LOW(65533)
006567 efff      	LDI  R31,HIGH(65533)
006568 c208      	RJMP _0x20E0074
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
006569 e4e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
00656a e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
00656b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
00656c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
00656d 940e cc21 	CALL SUBOPT_0x1E5
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
00656f 940e cc32 	CALL SUBOPT_0x1E8
006571 91ec      	LD   R30,X
006572 940e c143 	CALL SUBOPT_0x29
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
006574 e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
006575 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
006576 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
006577 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
006578 940e c79d 	CALL SUBOPT_0x127
00657a 81e1      	LDD  R30,Z+1
00657b 940e c143 	CALL SUBOPT_0x29
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
00657d 940e cc37 	CALL SUBOPT_0x1E9
00657f 81e2      	LDD  R30,Z+2
006580 940e c143 	CALL SUBOPT_0x29
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
006582 940e cc3c 	CALL SUBOPT_0x1EA
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006584 e000     +LDI R16 , LOW ( 0 )
006585 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
006586 3203     +CPI R16 , LOW ( 35 )
006587 e0e0     +LDI R30 , HIGH ( 35 )
006588 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006589 f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
00658a 940e cc0d 	CALL SUBOPT_0x1E1
00658c 940e c6d8 	CALL SUBOPT_0x105
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
00658e 940e cc42 	CALL SUBOPT_0x1EB
006590 f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
006591 940e cc12 	CALL SUBOPT_0x1E2
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
006593 5f0f     +SUBI R16 , LOW ( - 1 )
006594 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006595 cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
006596 940e cbfd 	CALL SUBOPT_0x1DD
006598 e2a6      	LDI  R26,LOW(38)
006599 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
00659b 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
00659d e2e6      	LDI  R30,LOW(38)
00659e e0f0      	LDI  R31,HIGH(38)
00659f c1d1      	RJMP _0x20E0074
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
0065a0 36e0      	CPI  R30,LOW(0x60)
0065a1 e0a0      	LDI  R26,HIGH(0x60)
0065a2 07fa      	CPC  R31,R26
0065a3 f011      	BREQ PC+3
0065a4 940c 65ec 	JMP _0x16002A
0065a6 940e cc18 	CALL SUBOPT_0x1E3
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
0065a8 e0a5      	LDI  R26,LOW(5)
0065a9 940e cc1f 	CALL SUBOPT_0x1E4
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
0065ab f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
0065ac ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
0065ad e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
0065ae e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
0065af e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
0065b0 940e e05e 	CALL __PUTPARD1
                +
0065b2 e0e5     +LDI R30 , LOW ( 0x5 )
0065b3 e0f0     +LDI R31 , HIGH ( 0x5 )
0065b4 e060     +LDI R22 , BYTE3 ( 0x5 )
0065b5 e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
0065b6 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 00E0                                         return -2;
0065b8 efee      	LDI  R30,LOW(65534)
0065b9 efff      	LDI  R31,HIGH(65534)
0065ba c1b6      	RJMP _0x20E0074
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
0065bb 940e ca2b 	CALL SUBOPT_0x192
0065bd 85a8      	LDD  R26,Y+8
0065be 85b9      	LDD  R27,Y+8+1
0065bf 940e 4b5f 	CALL _getAuxAinConfig
0065c1 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
0065c2 2333      	TST  R19
0065c3 f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
0065c4 efec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
0065c5 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
0065c6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
0065c7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
0065c8 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 00E6                                         free ( cnfgStrc );
0065ca 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 00E7                                         return -3;
0065cc efed      	LDI  R30,LOW(65533)
0065cd efff      	LDI  R31,HIGH(65533)
0065ce c1a2      	RJMP _0x20E0074
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
0065cf e2e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
0065d0 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
0065d1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
0065d2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
0065d3 940e cc21 	CALL SUBOPT_0x1E5
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
0065d5 940e cc2d 	CALL SUBOPT_0x1E7
0065d7 91ec      	LD   R30,X
0065d8 940e c143 	CALL SUBOPT_0x29
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
0065da e4e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
0065db e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
0065dc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
0065dd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
0065de 940e c79d 	CALL SUBOPT_0x127
0065e0 940e cc47 	CALL SUBOPT_0x1EC
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
0065e2 940e cbfd 	CALL SUBOPT_0x1DD
0065e4 e0a5      	LDI  R26,LOW(5)
0065e5 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
0065e7 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
0065e9 e0e5      	LDI  R30,LOW(5)
0065ea e0f0      	LDI  R31,HIGH(5)
0065eb c185      	RJMP _0x20E0074
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
0065ec 37e0      	CPI  R30,LOW(0x70)
0065ed e0a0      	LDI  R26,HIGH(0x70)
0065ee 07fa      	CPC  R31,R26
0065ef f011      	BREQ PC+3
0065f0 940c 6655 	JMP _0x16002D
0065f2 940e cc18 	CALL SUBOPT_0x1E3
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
0065f4 e2a9      	LDI  R26,LOW(41)
0065f5 940e cc1f 	CALL SUBOPT_0x1E4
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
0065f7 f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
0065f8 e5ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
0065f9 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
0065fa e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
0065fb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
0065fc 940e e05e 	CALL __PUTPARD1
                +
0065fe e2e9     +LDI R30 , LOW ( 0x29 )
0065ff e0f0     +LDI R31 , HIGH ( 0x29 )
006600 e060     +LDI R22 , BYTE3 ( 0x29 )
006601 e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
006602 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 00FE                                         return -2;
006604 efee      	LDI  R30,LOW(65534)
006605 efff      	LDI  R31,HIGH(65534)
006606 c16a      	RJMP _0x20E0074
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
006607 940e ca2b 	CALL SUBOPT_0x192
006609 85a8      	LDD  R26,Y+8
00660a 85b9      	LDD  R27,Y+8+1
00660b 940e 4b9a 	CALL _getAuxAoutConfig
00660d 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
00660e 2333      	TST  R19
00660f f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
006610 e9e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
006611 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
006612 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
006613 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
006614 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0104                                         free ( cnfgStrc );
006616 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 0105                                         return -3;
006618 efed      	LDI  R30,LOW(65533)
006619 efff      	LDI  R31,HIGH(65533)
00661a c156      	RJMP _0x20E0074
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
00661b ebe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
00661c e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
00661d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
00661e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
00661f 940e cc21 	CALL SUBOPT_0x1E5
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
006621 940e cc32 	CALL SUBOPT_0x1E8
006623 91ec      	LD   R30,X
006624 940e c143 	CALL SUBOPT_0x29
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
006626 ede9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
006627 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
006628 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
006629 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
00662a 940e c79d 	CALL SUBOPT_0x127
00662c 940e cc47 	CALL SUBOPT_0x1EC
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
00662e 940e cc37 	CALL SUBOPT_0x1E9
006630 81e5      	LDD  R30,Z+5
006631 940e c143 	CALL SUBOPT_0x29
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
006633 940e cc3c 	CALL SUBOPT_0x1EA
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006635 e000     +LDI R16 , LOW ( 0 )
006636 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
006637 3203     +CPI R16 , LOW ( 35 )
006638 e0e0     +LDI R30 , HIGH ( 35 )
006639 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
00663a f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
00663b 940e cc0d 	CALL SUBOPT_0x1E1
00663d 9636      	ADIW R30,6
00663e 0fe0      	ADD  R30,R16
00663f 1ff1      	ADC  R31,R17
006640 81e0      	LD   R30,Z
006641 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
006643 940e cc42 	CALL SUBOPT_0x1EB
006645 f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
006646 940e cc12 	CALL SUBOPT_0x1E2
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
006648 5f0f     +SUBI R16 , LOW ( - 1 )
006649 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00664a cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
00664b 940e cbfd 	CALL SUBOPT_0x1DD
00664d e2a9      	LDI  R26,LOW(41)
00664e 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
006650 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
006652 e2e9      	LDI  R30,LOW(41)
006653 e0f0      	LDI  R31,HIGH(41)
006654 c11c      	RJMP _0x20E0074
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
006655 38e0      	CPI  R30,LOW(0x80)
006656 e0a0      	LDI  R26,HIGH(0x80)
006657 07fa      	CPC  R31,R26
006658 f011      	BREQ PC+3
006659 940c 66b4 	JMP _0x160034
00665b e2a5      	LDI  R26,LOW(37)
00665c 940e cc1f 	CALL SUBOPT_0x1E4
                 ; 000B 0121                                     if(cnfgStrc == NULL){
00665e f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
00665f efe2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
006660 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
006661 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
006662 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
006663 940e e05e 	CALL __PUTPARD1
                +
006665 e2e5     +LDI R30 , LOW ( 0x25 )
006666 e0f0     +LDI R31 , HIGH ( 0x25 )
006667 e060     +LDI R22 , BYTE3 ( 0x25 )
006668 e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
006669 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 0123                                         return -2;
00666b efee      	LDI  R30,LOW(65534)
00666c efff      	LDI  R31,HIGH(65534)
00666d c103      	RJMP _0x20E0074
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
00666e 81ae      	LDD  R26,Y+6
00666f 81bf      	LDD  R27,Y+6+1
006670 940e 4c1f 	CALL _getBuzzerConfig
006672 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
006673 2333      	TST  R19
006674 f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
006675 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
006676 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
006677 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
006678 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
006679 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0129                                         free ( cnfgStrc );
00667b 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 012A                                         return -3;
00667d efed      	LDI  R30,LOW(65533)
00667e efff      	LDI  R31,HIGH(65533)
00667f c0f1      	RJMP _0x20E0074
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
006680 e4ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
006681 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
006682 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
006683 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
006684 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
006686 e6ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
006687 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
006688 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
006689 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
00668a 940e c798 	CALL SUBOPT_0x126
00668c 91ec      	LD   R30,X
00668d 940e c143 	CALL SUBOPT_0x29
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
00668f 940e cc37 	CALL SUBOPT_0x1E9
006691 81e1      	LDD  R30,Z+1
006692 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
006694 940e cc3c 	CALL SUBOPT_0x1EA
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006696 e000     +LDI R16 , LOW ( 0 )
006697 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
006698 3203     +CPI R16 , LOW ( 35 )
006699 e0e0     +LDI R30 , HIGH ( 35 )
00669a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
00669b f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
00669c 940e cc0d 	CALL SUBOPT_0x1E1
00669e 940e c7a7 	CALL SUBOPT_0x129
0066a0 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
0066a2 940e cc42 	CALL SUBOPT_0x1EB
0066a4 f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
0066a5 940e cc12 	CALL SUBOPT_0x1E2
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
0066a7 5f0f     +SUBI R16 , LOW ( - 1 )
0066a8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0066a9 cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
0066aa 940e cbfd 	CALL SUBOPT_0x1DD
0066ac e2a5      	LDI  R26,LOW(37)
0066ad 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
0066af 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
0066b1 e2e5      	LDI  R30,LOW(37)
0066b2 e0f0      	LDI  R31,HIGH(37)
0066b3 c0bd      	RJMP _0x20E0074
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
0066b4 39e0      	CPI  R30,LOW(0x90)
0066b5 e0a0      	LDI  R26,HIGH(0x90)
0066b6 07fa      	CPC  R31,R26
0066b7 f011      	BREQ PC+3
0066b8 940c 6724 	JMP _0x16003B
0066ba e1a2      	LDI  R26,LOW(18)
0066bb 940e cc1f 	CALL SUBOPT_0x1E4
                 ; 000B 0145                                     if(cnfgStrc == NULL){
0066bd f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
0066be e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
0066bf e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
0066c0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
0066c1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
0066c2 940e e05e 	CALL __PUTPARD1
                +
0066c4 e1e2     +LDI R30 , LOW ( 0x12 )
0066c5 e0f0     +LDI R31 , HIGH ( 0x12 )
0066c6 e060     +LDI R22 , BYTE3 ( 0x12 )
0066c7 e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
0066c8 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 0147                                         return -2;
0066ca efee      	LDI  R30,LOW(65534)
0066cb efff      	LDI  R31,HIGH(65534)
0066cc c0a4      	RJMP _0x20E0074
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
0066cd 81ae      	LDD  R26,Y+6
0066ce 81bf      	LDD  R27,Y+6+1
0066cf 940e 4cb6 	CALL _getEnvAlarmConfig
0066d1 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
0066d2 2333      	TST  R19
0066d3 f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
0066d4 ece0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
0066d5 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
0066d6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
0066d7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
0066d8 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 014D                                         free ( cnfgStrc );
0066da 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 014E                                         return -3;
0066dc efed      	LDI  R30,LOW(65533)
0066dd efff      	LDI  R31,HIGH(65533)
0066de c092      	RJMP _0x20E0074
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
0066df eeea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
0066e0 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
0066e1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
0066e2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
0066e3 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
0066e5 e0e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
0066e6 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
0066e7 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
0066e8 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
0066e9 940e c798 	CALL SUBOPT_0x126
0066eb 940e c7b1 	CALL SUBOPT_0x12B
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
0066ed e2e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
0066ee e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
0066ef e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
0066f0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
0066f1 940e c798 	CALL SUBOPT_0x126
0066f3 9614      	ADIW R26,4
0066f4 940e c7b6 	CALL SUBOPT_0x12C
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
0066f6 e3eb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
0066f7 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
0066f8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
0066f9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
0066fa 940e c79d 	CALL SUBOPT_0x127
0066fc 940e c7be 	CALL SUBOPT_0x12E
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
0066fe e5e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
0066ff e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
006700 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
006701 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
006702 940e c79d 	CALL SUBOPT_0x127
006704 940e c7c5 	CALL SUBOPT_0x12F
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
006706 e6ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
006707 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
006708 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
006709 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
00670a 940e c798 	CALL SUBOPT_0x126
00670c 961e      	ADIW R26,14
00670d 940e c7b6 	CALL SUBOPT_0x12C
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
00670f e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
006710 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
006711 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
006712 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
006713 940e c798 	CALL SUBOPT_0x126
006715 9650      	ADIW R26,16
006716 940e c0f9 	CALL SUBOPT_0x1E
006718 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
00671a 940e cbfd 	CALL SUBOPT_0x1DD
00671c e1a2      	LDI  R26,LOW(18)
00671d 940e cb8a 	CALL SUBOPT_0x1CA
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
00671f 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
006721 e1e2      	LDI  R30,LOW(18)
006722 e0f0      	LDI  R31,HIGH(18)
006723 c04d      	RJMP _0x20E0074
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
006724 3ae0      	CPI  R30,LOW(0xA0)
006725 e0a0      	LDI  R26,HIGH(0xA0)
006726 07fa      	CPC  R31,R26
006727 f011      	BREQ PC+3
006728 940c 676a 	JMP _0x160041
00672a 940e c35c 	CALL SUBOPT_0x76
00672c 940e cbf2 	CALL SUBOPT_0x1DB
                 ; 000B 0164                                     if(cnfgStrc == NULL){
00672e f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
00672f e9ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
006730 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
006731 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
006732 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
006733 940e cc26 	CALL SUBOPT_0x1E6
                 ; 000B 0166                                         return -2;
006735 efee      	LDI  R30,LOW(65534)
006736 efff      	LDI  R31,HIGH(65534)
006737 c039      	RJMP _0x20E0074
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
006738 81ae      	LDD  R26,Y+6
006739 81bf      	LDD  R27,Y+6+1
00673a 940e 4d49 	CALL _getStatusReportConfig
00673c 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
00673d 2333      	TST  R19
00673e f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
00673f ede8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
006740 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
006741 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
006742 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
006743 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 016C                                         free ( cnfgStrc );
006745 940e c8d8 	CALL SUBOPT_0x15C
                 ; 000B 016D                                         return -3;
006747 efed      	LDI  R30,LOW(65533)
006748 efff      	LDI  R31,HIGH(65533)
006749 c027      	RJMP _0x20E0074
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
00674a e0e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
00674b e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
00674c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
00674d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
00674e 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
006750 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
006751 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
006752 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
006753 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
006754 940e c798 	CALL SUBOPT_0x126
006756 91ec      	LD   R30,X
006757 940e c143 	CALL SUBOPT_0x29
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
006759 e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
00675a e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
00675b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
00675c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
00675d 940e c798 	CALL SUBOPT_0x126
00675f 9611      	ADIW R26,1
006760 940e c0f9 	CALL SUBOPT_0x1E
006762 940e ca02 	CALL SUBOPT_0x189
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
006764 940e cbfd 	CALL SUBOPT_0x1DD
006766 940e c35c 	CALL SUBOPT_0x76
006768 940e cc02 	CALL SUBOPT_0x1DE
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
00676a 940e cc4c 	CALL SUBOPT_0x1ED
00676c 2fe5      	MOV  R30,R21
00676d 940e c143 	CALL SUBOPT_0x29
                 ; 000B 017D                                     return -1;
00676f efef      	LDI  R30,LOW(65535)
006770 efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E0074:
006771 940e e0d5 	CALL __LOADLOCR6
006773 962d      	ADIW R28,13
006774 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
006775 93ba      	ST   -Y,R27
006776 93aa      	ST   -Y,R26
006777 940e c218 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
006779 e030      	LDI  R19,0
                +
00677a e040     +LDI R20 , LOW ( 0 )
00677b e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00677c 85ea      	LDD  R30,Y+10
00677d 7fe0      	ANDI R30,LOW(0xF0)
00677e 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
00677f e8e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
006780 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
006781 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
006782 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
006783 940e c79d 	CALL SUBOPT_0x127
006785 940e c637 	CALL SUBOPT_0xE8
                 ; 000B 018D     print_payload(conf,len);
006787 940e ca2b 	CALL SUBOPT_0x192
006789 85a8      	LDD  R26,Y+8
00678a 85b9      	LDD  R27,Y+8+1
00678b 940e 9e6a 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
00678d 2fe3      	MOV  R30,R19
00678e 940e c21d 	CALL SUBOPT_0x47
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
006790 f4b9      	BRNE _0x160045
                +
006791 eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
006792 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
006793 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
006794 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
006795 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
006797 85a8      	LDD  R26,Y+8
006798 85b9      	LDD  R27,Y+8+1
006799 940e 4d86 	CALL _setPropertiesConfig
00679b 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
00679c 2311      	TST  R17
00679d f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
00679e ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
00679f e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
0067a0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
0067a1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
0067a2 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0195                                         return -3;
0067a4 efed      	LDI  R30,LOW(65533)
0067a5 efff      	LDI  R31,HIGH(65533)
0067a6 c107      	RJMP _0x20E0073
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
0067a7 c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
0067a8 32e0      	CPI  R30,LOW(0x20)
0067a9 e0a0      	LDI  R26,HIGH(0x20)
0067aa 07fa      	CPC  R31,R26
0067ab f4b9      	BRNE _0x160047
                +
0067ac efe3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
0067ad e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
0067ae e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
0067af e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
0067b0 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
0067b2 85a8      	LDD  R26,Y+8
0067b3 85b9      	LDD  R27,Y+8+1
0067b4 940e 4dfd 	CALL _setOperatingConfig
0067b6 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
0067b7 2311      	TST  R17
0067b8 f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
0067b9 e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
0067ba e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
0067bb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
0067bc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
0067bd 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 019D                                         return -3;
0067bf efed      	LDI  R30,LOW(65533)
0067c0 efff      	LDI  R31,HIGH(65533)
0067c1 c0ec      	RJMP _0x20E0073
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
0067c2 c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
0067c3 33e0      	CPI  R30,LOW(0x30)
0067c4 e0a0      	LDI  R26,HIGH(0x30)
0067c5 07fa      	CPC  R31,R26
0067c6 f4c9      	BRNE _0x160049
0067c7 940e cc53 	CALL SUBOPT_0x1EE
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
0067c9 e3ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
0067ca e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
0067cb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
0067cc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
0067cd 940e c225 	CALL SUBOPT_0x49
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
0067cf 940e cc59 	CALL SUBOPT_0x1EF
0067d1 940e 4e73 	CALL _setSensorConfig
0067d3 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
0067d4 2311      	TST  R17
0067d5 f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
0067d6 e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
0067d7 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
0067d8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
0067d9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
0067da 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01A6                                         return -3;
0067dc efed      	LDI  R30,LOW(65533)
0067dd efff      	LDI  R31,HIGH(65533)
0067de c0cf      	RJMP _0x20E0073
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
0067df c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
0067e0 34e0      	CPI  R30,LOW(0x40)
0067e1 e0a0      	LDI  R26,HIGH(0x40)
0067e2 07fa      	CPC  R31,R26
0067e3 f4c9      	BRNE _0x16004B
0067e4 940e cc53 	CALL SUBOPT_0x1EE
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
0067e6 e8e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
0067e7 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
0067e8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
0067e9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
0067ea 940e c225 	CALL SUBOPT_0x49
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
0067ec 940e cc59 	CALL SUBOPT_0x1EF
0067ee 940e 4fce 	CALL _setAuxDinConfig
0067f0 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
0067f1 2311      	TST  R17
0067f2 f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
0067f3 eae6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
0067f4 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
0067f5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
0067f6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
0067f7 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01AF                                         return -3;
0067f9 efed      	LDI  R30,LOW(65533)
0067fa efff      	LDI  R31,HIGH(65533)
0067fb c0b2      	RJMP _0x20E0073
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
0067fc c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
0067fd 35e0      	CPI  R30,LOW(0x50)
0067fe e0a0      	LDI  R26,HIGH(0x50)
0067ff 07fa      	CPC  R31,R26
006800 f4c9      	BRNE _0x16004D
006801 940e cc53 	CALL SUBOPT_0x1EE
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
006803 ecef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
006804 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
006805 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
006806 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
006807 940e c225 	CALL SUBOPT_0x49
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
006809 940e cc59 	CALL SUBOPT_0x1EF
00680b 940e 5016 	CALL _setAuxDoutConfig
00680d 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
00680e 2311      	TST  R17
00680f f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
006810 eeef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
006811 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
006812 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
006813 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
006814 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01B8                                         return -3;
006816 efed      	LDI  R30,LOW(65533)
006817 efff      	LDI  R31,HIGH(65533)
006818 c095      	RJMP _0x20E0073
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
006819 c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
00681a 36e0      	CPI  R30,LOW(0x60)
00681b e0a0      	LDI  R26,HIGH(0x60)
00681c 07fa      	CPC  R31,R26
00681d f4c9      	BRNE _0x16004F
00681e 940e cc53 	CALL SUBOPT_0x1EE
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
006820 e1e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
006821 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
006822 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
006823 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
006824 940e c225 	CALL SUBOPT_0x49
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
006826 940e cc59 	CALL SUBOPT_0x1EF
006828 940e 509c 	CALL _setAuxAinConfig
00682a 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
00682b 2311      	TST  R17
00682c f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
00682d e3e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
00682e e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
00682f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
006830 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
006831 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01C1                                         return -3;
006833 efed      	LDI  R30,LOW(65533)
006834 efff      	LDI  R31,HIGH(65533)
006835 c078      	RJMP _0x20E0073
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
006836 c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
006837 37e0      	CPI  R30,LOW(0x70)
006838 e0a0      	LDI  R26,HIGH(0x70)
006839 07fa      	CPC  R31,R26
00683a f4c9      	BRNE _0x160051
00683b 940e cc53 	CALL SUBOPT_0x1EE
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
00683d e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
00683e e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
00683f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
006840 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
006841 940e c225 	CALL SUBOPT_0x49
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
006843 940e cc59 	CALL SUBOPT_0x1EF
006845 940e 50dc 	CALL _setAuxAoutConfig
006847 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
006848 2311      	TST  R17
006849 f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
00684a e8e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
00684b e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
00684c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
00684d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
00684e 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01CA                                         return -3;
006850 efed      	LDI  R30,LOW(65533)
006851 efff      	LDI  R31,HIGH(65533)
006852 c05b      	RJMP _0x20E0073
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
006853 c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
006854 38e0      	CPI  R30,LOW(0x80)
006855 e0a0      	LDI  R26,HIGH(0x80)
006856 07fa      	CPC  R31,R26
006857 f4b9      	BRNE _0x160053
                +
006858 eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
006859 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
00685a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
00685b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
00685c 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
00685e 85a8      	LDD  R26,Y+8
00685f 85b9      	LDD  R27,Y+8+1
006860 940e 516f 	CALL _setBuzzerConfig
006862 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
006863 2311      	TST  R17
006864 f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
006865 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
006866 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
006867 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
006868 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
006869 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01D2                                         return -3;
00686b efed      	LDI  R30,LOW(65533)
00686c efff      	LDI  R31,HIGH(65533)
00686d c040      	RJMP _0x20E0073
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
00686e c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
00686f 39e0      	CPI  R30,LOW(0x90)
006870 e0a0      	LDI  R26,HIGH(0x90)
006871 07fa      	CPC  R31,R26
006872 f4b9      	BRNE _0x160055
                +
006873 efe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
006874 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
006875 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
006876 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
006877 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
006879 85a8      	LDD  R26,Y+8
00687a 85b9      	LDD  R27,Y+8+1
00687b 940e 51d5 	CALL _setEnvAlarmConfig
00687d 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
00687e 2311      	TST  R17
00687f f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
006880 e0ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
006881 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
006882 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
006883 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
006884 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01DA                                         return -3;
006886 efed      	LDI  R30,LOW(65533)
006887 efff      	LDI  R31,HIGH(65533)
006888 c025      	RJMP _0x20E0073
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
006889 c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
00688a 3ae0      	CPI  R30,LOW(0xA0)
00688b e0a0      	LDI  R26,HIGH(0xA0)
00688c 07fa      	CPC  R31,R26
00688d f4b1      	BRNE _0x160059
                +
00688e e3ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
00688f e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
006890 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
006891 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
006892 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
006894 85a8      	LDD  R26,Y+8
006895 85b9      	LDD  R27,Y+8+1
006896 940e 5252 	CALL _setStatusReportConfig
006898 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
006899 2311      	TST  R17
00689a f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
00689b e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
00689c e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
00689d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
00689e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
00689f 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01E2                                         return -3;
0068a1 efed      	LDI  R30,LOW(65533)
0068a2 efff      	LDI  R31,HIGH(65533)
0068a3 c00a      	RJMP _0x20E0073
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
0068a4 940e cc4c 	CALL SUBOPT_0x1ED
0068a6 2fe3      	MOV  R30,R19
0068a7 940e c143 	CALL SUBOPT_0x29
                 ; 000B 01E6                                     return -1;
0068a9 efef      	LDI  R30,LOW(65535)
0068aa efff      	LDI  R31,HIGH(65535)
0068ab c002      	RJMP _0x20E0073
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
0068ac e0e0      	LDI  R30,LOW(0)
0068ad e0f0      	LDI  R31,HIGH(0)
                 _0x20E0073:
0068ae 940e e0d5 	CALL __LOADLOCR6
0068b0 962b      	ADIW R28,11
0068b1 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
0068b2 940e e063 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
0068b4 940e c3d2 	CALL SUBOPT_0x89
0068b6 940e c3e5 	CALL SUBOPT_0x8C
0068b8 940e e0c9 	CALL __CPD21
0068ba f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
0068bb e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
0068bc e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
0068bd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
0068be e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
0068bf 940e cc5e 	CALL SUBOPT_0x1F0
0068c1 940e cc5e 	CALL SUBOPT_0x1F0
0068c3 940e c108 	CALL SUBOPT_0x21
                 ; 000B 01EF         return -1;
0068c5 efef      	LDI  R30,LOW(65535)
0068c6 efff      	LDI  R31,HIGH(65535)
0068c7 c0e4      	RJMP _0x20E0070
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
0068c8 e0e0      	LDI  R30,LOW(0)
0068c9 e0f0      	LDI  R31,HIGH(0)
0068ca c0e1      	RJMP _0x20E0070
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
0068cb 940e cbef 	CALL SUBOPT_0x1DA
0068cd 931a      	ST   -Y,R17
0068ce 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
0068cf 940e cc62 	CALL SUBOPT_0x1F1
0068d1 85e8      	LDD  R30,Y+8
0068d2 85f9      	LDD  R31,Y+8+1
0068d3 940e c23f 	CALL SUBOPT_0x4D
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
0068d5 940e cc67 	CALL SUBOPT_0x1F2
0068d7 f449      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
0068d8 eced     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
0068d9 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
0068da e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
0068db e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
0068dc 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 01FE         return -1;
0068de efef      	LDI  R30,LOW(65535)
0068df efff      	LDI  R31,HIGH(65535)
0068e0 c018      	RJMP _0x20E0072
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
0068e1 efe9     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
0068e2 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
0068e3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
0068e4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
0068e5 940e cc6b 	CALL SUBOPT_0x1F3
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
0068e7 940e c4e8 	CALL SUBOPT_0xB3
0068e9 940e 4748 	CALL _RTC_setBinary
0068eb 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
0068ec 2311      	TST  R17
0068ed f44a      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
0068ee e2ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
0068ef e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
0068f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
0068f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
0068f2 940e cc6b 	CALL SUBOPT_0x1F3
                 ; 000B 0206         return -1;
0068f4 efef      	LDI  R30,LOW(65535)
0068f5 efff      	LDI  R31,HIGH(65535)
0068f6 c002      	RJMP _0x20E0072
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
0068f7 e0e0      	LDI  R30,LOW(0)
0068f8 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0072:
0068f9 8119      	LDD  R17,Y+1
0068fa 8108      	LDD  R16,Y+0
0068fb 9628      	ADIW R28,8
0068fc 9508      	RET
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
0068fd 940e cc6f 	CALL SUBOPT_0x1F4
                 ;	period -> Y+2
                 ;	res -> R16,R17
0068ff 940e cc67 	CALL SUBOPT_0x1F2
006901 f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
006902 e5ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
006903 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
006904 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
006905 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
006906 940e c02f 	CALL SUBOPT_0x3
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
006908 c023      	RJMP _0x16005E
                 _0x16005D:
006909 940e c4e8 	CALL SUBOPT_0xB3
                +
00690b 32ac     +CPI R26 , LOW ( 0x12C )
00690c e0e1     +LDI R30 , HIGH ( 0x12C )
00690d 07be     +CPC R27 , R30
00690e e0e0     +LDI R30 , BYTE3 ( 0x12C )
00690f 078e     +CPC R24 , R30
006910 e0e0     +LDI R30 , BYTE4 ( 0x12C )
006911 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
006912 f050      	BRLO _0x160060
006913 940e c4e8 	CALL SUBOPT_0xB3
                +
006915 38a1     +CPI R26 , LOW ( 0x15181 )
006916 e5e1     +LDI R30 , HIGH ( 0x15181 )
006917 07be     +CPC R27 , R30
006918 e0e1     +LDI R30 , BYTE3 ( 0x15181 )
006919 078e     +CPC R24 , R30
00691a e0e0     +LDI R30 , BYTE4 ( 0x15181 )
00691b 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
00691c f048      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
00691d e8e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
00691e e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
00691f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
006920 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
006921 940e cc6b 	CALL SUBOPT_0x1F3
                 ; 000B 0215         return -1;
006923 efef      	LDI  R30,LOW(65535)
006924 efff      	LDI  R31,HIGH(65535)
006925 c018      	RJMP _0x20E0071
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
006926 eaea     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
006927 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
006928 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
006929 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
00692a 940e cc6b 	CALL SUBOPT_0x1F3
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
00692c 940e c4e8 	CALL SUBOPT_0xB3
00692e 940e 7cf2 	CALL _ALARM_mute
006930 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
006931 2311      	TST  R17
006932 f44a      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
006933 ede5     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
006934 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
006935 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
006936 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
006937 940e cc6b 	CALL SUBOPT_0x1F3
                 ; 000B 021E         return -1;
006939 efef      	LDI  R30,LOW(65535)
00693a efff      	LDI  R31,HIGH(65535)
00693b c002      	RJMP _0x20E0071
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
00693c e0e0      	LDI  R30,LOW(0)
00693d e0f0      	LDI  R31,HIGH(0)
                 _0x20E0071:
00693e 8119      	LDD  R17,Y+1
00693f 8108      	LDD  R16,Y+0
006940 9626      	ADIW R28,6
006941 9508      	RET
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
006942 e0e0      	LDI  R30,LOW(0)
006943 e0f0      	LDI  R31,HIGH(0)
006944 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
006945 940e c3a0 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
006947 d0cd      	RCALL _ETH_findFreeSlotWaitQueue
006948 2f0e      	MOV  R16,R30
006949 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
00694a 2311      	TST  R17
00694b f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
00694c e0e2     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
00694d e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
00694e e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
00694f e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
006950 940e c02f 	CALL SUBOPT_0x3
                 ; 000C 0017         return -1;
006952 efef      	LDI  R30,LOW(65535)
006953 efff      	LDI  R31,HIGH(65535)
006954 c055      	RJMP _0x20E006F
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
006955 940e c93d 	CALL SUBOPT_0x16D
                +
006957 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
006958 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
006959 93ff      	PUSH R31
00695a 93ef      	PUSH R30
00695b 81ac      	LDD  R26,Y+4
00695c 81bd      	LDD  R27,Y+4+1
00695d 940e a4fe 	CALL _malloc
00695f 91af      	POP  R26
006960 91bf      	POP  R27
006961 93ed      	ST   X+,R30
006962 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
006963 940e c93d 	CALL SUBOPT_0x16D
006965 940e c97a 	CALL SUBOPT_0x174
006967 9730      	SBIW R30,0
006968 f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
006969 e3e7     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
00696a e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
00696b e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
00696c e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
00696d 940e c73a 	CALL SUBOPT_0x116
                 ; 000C 001F         return -1;
00696f efef      	LDI  R30,LOW(65535)
006970 efff      	LDI  R31,HIGH(65535)
006971 c038      	RJMP _0x20E006F
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
006972 940e c93d 	CALL SUBOPT_0x16D
006974 940e c97a 	CALL SUBOPT_0x174
006976 93fa      	ST   -Y,R31
006977 93ea      	ST   -Y,R30
006978 940e ca2b 	CALL SUBOPT_0x192
00697a 85a8      	LDD  R26,Y+8
00697b 85b9      	LDD  R27,Y+8+1
00697c 940e a53b 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
00697e 940e c93d 	CALL SUBOPT_0x16D
                +
006980 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006981 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006982 81ac      	LDD  R26,Y+4
006983 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
006984 940e c93d 	CALL SUBOPT_0x16D
                +
006986 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
006987 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
006988 85a8      	LDD  R26,Y+8
006989 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
00698a 940e c93d 	CALL SUBOPT_0x16D
00698c 940e cc74 	CALL SUBOPT_0x1F5
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
00698e 940e c93d 	CALL SUBOPT_0x16D
                +
006990 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
006991 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
006992 81aa      	LDD  R26,Y+2
006993 81bb      	LDD  R27,Y+2+1
006994 83a0      	STD  Z+0,R26
006995 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
006996 940e c93d 	CALL SUBOPT_0x16D
006998 940e c96c 	CALL SUBOPT_0x172
00699a 940e c971 	CALL SUBOPT_0x173
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
00699c 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
00699d e5ee     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
00699e e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
00699f e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
0069a0 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
0069a1 940e cc79 	CALL SUBOPT_0x1F6
0069a3 01f8      	MOVW R30,R16
0069a4 940e df3b 	CALL __CWD1
0069a6 940e c108 	CALL SUBOPT_0x21
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
0069a8 2de7      	MOV  R30,R7
0069a9 e0f0      	LDI  R31,0
                 _0x20E006F:
0069aa 8119      	LDD  R17,Y+1
0069ab 8108      	LDD  R16,Y+0
                 _0x20E0070:
0069ac 9629      	ADIW R28,9
0069ad 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0069ae 93aa      	ST   -Y,R26
0069af 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0069b0 e010      	LDI  R17,LOW(0)
                 _0x180006:
0069b1 301f      	CPI  R17,15
0069b2 f4f8      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
0069b3 940e cc7e 	CALL SUBOPT_0x1F7
0069b5 81e0      	LD   R30,Z
0069b6 81a9      	LDD  R26,Y+1
0069b7 17ea      	CP   R30,R26
0069b8 f4b9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
0069b9 e0ab      	LDI  R26,LOW(11)
0069ba 9f1a      	MUL  R17,R26
0069bb 01f0      	MOVW R30,R0
0069bc 940e c97a 	CALL SUBOPT_0x174
0069be 940e cc84 	CALL SUBOPT_0x1F8
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
0069c0 940e cc98 	CALL SUBOPT_0x1F9
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
0069c2 940e cc9e 	CALL SUBOPT_0x1FA
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
0069c4 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
0069c5 eae9     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
0069c6 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
0069c7 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
0069c8 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
0069c9 940e ccb1 	CALL SUBOPT_0x1FB
0069cb 940e ccb6 	CALL SUBOPT_0x1FC
                 ; 000C 0044             return ETH_waitQCount;
0069cd 2de7      	MOV  R30,R7
0069ce e0f0      	LDI  R31,0
0069cf c042      	RJMP _0x20E006D
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
0069d0 5f1f      	SUBI R17,-1
0069d1 cfdf      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
0069d2 efe6     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
0069d3 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
0069d4 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
0069d5 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
0069d6 940e e05e 	CALL __PUTPARD1
0069d8 81ed      	LDD  R30,Y+5
0069d9 940e c143 	CALL SUBOPT_0x29
                 ; 000C 0048     return -1;
0069db efef      	LDI  R30,LOW(65535)
0069dc efff      	LDI  R31,HIGH(65535)
0069dd c034      	RJMP _0x20E006D
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0069de 931a      	ST   -Y,R17
                 ;	i -> R17
0069df e010      	LDI  R17,LOW(0)
                 _0x18000A:
0069e0 301f      	CPI  R17,15
0069e1 f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
0069e2 e0ab      	LDI  R26,LOW(11)
0069e3 9f1a      	MUL  R17,R26
0069e4 01f0      	MOVW R30,R0
0069e5 940e c97a 	CALL SUBOPT_0x174
0069e7 940e cc84 	CALL SUBOPT_0x1F8
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
0069e9 940e cc98 	CALL SUBOPT_0x1F9
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
0069eb 940e cc9e 	CALL SUBOPT_0x1FA
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
0069ed 5f1f      	SUBI R17,-1
0069ee cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
0069ef c050      	RJMP _0x20E006B
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0069f0 93aa      	ST   -Y,R26
0069f1 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0069f2 e010      	LDI  R17,LOW(0)
                 _0x18000D:
0069f3 301f      	CPI  R17,15
0069f4 f450      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
0069f5 940e cc7e 	CALL SUBOPT_0x1F7
0069f7 81e0      	LD   R30,Z
0069f8 81a9      	LDD  R26,Y+1
0069f9 17ea      	CP   R30,R26
0069fa f411      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
0069fb e0e1      	LDI  R30,LOW(1)
0069fc c015      	RJMP _0x20E006D
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
0069fd 5f1f      	SUBI R17,-1
0069fe cff4      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
0069ff c011      	RJMP _0x20E006E
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
006a00 93aa      	ST   -Y,R26
006a01 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006a02 e010      	LDI  R17,LOW(0)
                 _0x180011:
006a03 3614      	CPI  R17,100
006a04 f460      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
006a05 940e c4c1 	CALL SUBOPT_0xAB
006a07 51e4      	SUBI R30,LOW(-_sess_list)
006a08 4efb      	SBCI R31,HIGH(-_sess_list)
006a09 81e0      	LD   R30,Z
006a0a 81a9      	LDD  R26,Y+1
006a0b 17ea      	CP   R30,R26
006a0c f411      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
006a0d e0e1      	LDI  R30,LOW(1)
006a0e c003      	RJMP _0x20E006D
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
006a0f 5f1f      	SUBI R17,-1
006a10 cff2      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
                 _0x20E006E:
006a11 e0e0      	LDI  R30,LOW(0)
                 _0x20E006D:
006a12 8118      	LDD  R17,Y+0
006a13 9622      	ADIW R28,2
006a14 9508      	RET
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006a15 931a      	ST   -Y,R17
                 ;	i -> R17
006a16 e010      	LDI  R17,LOW(0)
                 _0x180015:
006a17 301f      	CPI  R17,15
006a18 f450      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
006a19 e0ab      	LDI  R26,LOW(11)
006a1a 9f1a      	MUL  R17,R26
006a1b 01f0      	MOVW R30,R0
                +
006a1c 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
006a1d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
006a1e 81e0      	LD   R30,Z
006a1f 30e0      	CPI  R30,0
006a20 f0f1      	BREQ _0x20E006C
                 ; 000C 0079             return i;
                 ; 000C 007A         }
                 ; 000C 007B     }
006a21 5f1f      	SUBI R17,-1
006a22 cff4      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
006a23 efef      	LDI  R30,LOW(255)
006a24 c01b      	RJMP _0x20E006B
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
006a25 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
006a26 940e a449 	CALL _rand
006a28 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
006a29 2fa1      	MOV  R26,R17
006a2a dfc5      	RCALL _ETH_isIdExist
006a2b 30e0      	CPI  R30,0
006a2c f441      	BRNE _0x18001B
006a2d 3010      	CPI  R17,0
006a2e f031      	BREQ _0x18001B
006a2f 3f1f      	CPI  R17,255
006a30 f021      	BREQ _0x18001B
006a31 2fa1      	MOV  R26,R17
006a32 dfcd      	RCALL _ETH_isIdUsed
006a33 30e0      	CPI  R30,0
006a34 f009      	BREQ _0x18001A
                 _0x18001B:
006a35 cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
006a36 01f4      	MOVW R30,R8
006a37 51e4      	SUBI R30,LOW(-_sess_list)
006a38 4efb      	SBCI R31,HIGH(-_sess_list)
006a39 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
006a3a 01d4      	MOVW R26,R8
006a3b 9611      	ADIW R26,1
006a3c 940e ccbc 	CALL SUBOPT_0x1FD
006a3e 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
                 _0x20E006C:
006a3f 2fe1      	MOV  R30,R17
                 _0x20E006B:
006a40 9119      	LD   R17,Y+
006a41 9508      	RET
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;#include "ad595.h"
                 ;
                 ;struct sens_val_st      sensor[5];
                 ;
                 ;/******************
                 ;Y = mX + c
                 ;temp = (epFactor_B * adc) + epFactor_C
                 ;******************/
                 ;
                 ;eeprom float            epFactor_A[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_B[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_C[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet1[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef1[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef1[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet2[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef2[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef2[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet3[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef3[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef3[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epCalType[5]            = {CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT};
                 ;
                 ;flash float             epTMECTempSlope         = -0.1114;
                 ;flash float             epTMECTempOffset        = 63.73;
                 ;
                 ;flash float             epPT100TempSlope         = 1.0938;
                 ;flash float             epPT100TempOffset        = -208.42;
                 ;
                 ;//flash float             epPT100Temp_A           = 0.00005;
                 ;//flash float             epPT100Temp_B           = 0.1308;
                 ;//flash float             epPT100Temp_C           = -221.71;
                 ;
                 ;flash float             epPT100Temp_A           = 0.000633;
                 ;flash float             epPT100Temp_B           = 0.162124;
                 ;flash float             epPT100Temp_C           = -180.886306;
                 ;
                 ;// Parameter for sensor pt100
                 ;flash float             tempTable[15]           = {-80.0, -70.0, -60.0, -50.0, -40.0, -30.0, -20.0, -10.0, 0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0};
                 ;//flash float             voltTable[13]           = {0.7276, 0.7734, 0.8176, 0.8604, 0.9019, 0.9420, 0.9810, 1.0188, 1.0556, 1.0912, 1.1259, 1.1596, 1.1924};
                 ;flash float             adcTable[15]            = {290.7750, 309.0467, 326.7189, 343.8240, 360.3923, 376.4502, 392.0239,
                 ;                                                    407.1367, 421.8099, 436.0630, 449.9139, 463.3793, 476.4748, 489.2156, 501.6149};
                 ;
                 ;
                 ;/*============================================================*/
                 ;void iSensorGetADCValue(){
                 ; 000D 003B void iSensorGetADCValue(){
                 
                 	.CSEG
                 _iSensorGetADCValue:
                 ; 000D 003C     long viADCbuffer = 0;
                 ; 000D 003D     unsigned int viADCSmoothValue = 0;
                 ; 000D 003E     int i = 0,j = 0;
                 ; 000D 003F     viADCbuffer = 0;
006a42 940e ca80 	CALL SUBOPT_0x1A2
006a44 940e c19f 	CALL SUBOPT_0x37
                 ;	viADCbuffer -> Y+6
                 ;	viADCSmoothValue -> R16,R17
                 ;	i -> R18,R19
                 ;	j -> R20,R21
006a46 940e ccc1 	CALL SUBOPT_0x1FE
                 ; 000D 0040     printDebug("[iSensorGetValue]data[");
                +
006a48 e7ec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 0 ) )
006a49 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 0 ) )
006a4a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 0 ) )
006a4b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 0 ) )
                 	__POINTD1FN _0x1A0000,0
006a4c 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 0041     for(i=0;i<5;i++){
                +
006a4e e020     +LDI R18 , LOW ( 0 )
006a4f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1A0004:
                +
006a50 3025     +CPI R18 , LOW ( 5 )
006a51 e0e0     +LDI R30 , HIGH ( 5 )
006a52 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
006a53 f5c4      	BRGE _0x1A0005
                 ; 000D 0042         #asm("wdr")
006a54 95a8      	wdr
                 ; 000D 0043         viADCbuffer = 0;
006a55 940e ccc1 	CALL SUBOPT_0x1FE
                 ; 000D 0044         for(j=0;j<30;j++){
                +
006a57 e040     +LDI R20 , LOW ( 0 )
006a58 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x1A0007:
                +
006a59 314e     +CPI R20 , LOW ( 30 )
006a5a e0e0     +LDI R30 , HIGH ( 30 )
006a5b 075e     +CPC R21 , R30
                 	__CPWRN 20,21,30
006a5c f46c      	BRGE _0x1A0008
                 ; 000D 0045             viADCbuffer += read_adc(8+i);
006a5d 2fa2      	MOV  R26,R18
006a5e 5fa8      	SUBI R26,-LOW(8)
006a5f 940e 439e 	CALL _read_adc
006a61 940e ccc7 	CALL SUBOPT_0x1FF
006a63 940e deb6 	CALL __ADDD12
006a65 940e c4f2 	CALL SUBOPT_0xB5
                 ; 000D 0046         }
                +
006a67 5f4f     +SUBI R20 , LOW ( - 1 )
006a68 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
006a69 cfef      	RJMP _0x1A0007
                 _0x1A0008:
                 ; 000D 0047         viADCSmoothValue = (unsigned int)(viADCbuffer/30);
006a6a 940e c297 	CALL SUBOPT_0x59
                +
006a6c e1ee     +LDI R30 , LOW ( 0x1E )
006a6d e0f0     +LDI R31 , HIGH ( 0x1E )
006a6e e060     +LDI R22 , BYTE3 ( 0x1E )
006a6f e070     +LDI R23 , BYTE4 ( 0x1E )
                 	__GETD1N 0x1E
006a70 940e dfd7 	CALL __DIVD21
006a72 018f      	MOVW R16,R30
                 ; 000D 0048         if(i==4){
006a73 e0e4      	LDI  R30,LOW(4)
006a74 e0f0      	LDI  R31,HIGH(4)
006a75 17e2      	CP   R30,R18
006a76 07f3      	CPC  R31,R19
006a77 f429      	BRNE _0x1A0009
                 ; 000D 0049            printDebug("ch%d: %04d ",i+1,viADCSmoothValue);
                +
006a78 e9e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 23 ) )
006a79 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 23 ) )
006a7a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 23 ) )
006a7b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 23 ) )
                 	__POINTD1FN _0x1A0000,23
006a7c c004      	RJMP _0x1A00C3
                 ; 000D 004A         }else{
                 _0x1A0009:
                 ; 000D 004B            printDebug("ch%d: %04d, ",i+1,viADCSmoothValue);
                +
006a7d e9ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 35 ) )
006a7e e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 35 ) )
006a7f e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 35 ) )
006a80 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 35 ) )
                 	__POINTD1FN _0x1A0000,35
                 _0x1A00C3:
006a81 940e e05e 	CALL __PUTPARD1
006a83 01f9      	MOVW R30,R18
006a84 940e cccc 	CALL SUBOPT_0x200
006a86 01f8      	MOVW R30,R16
006a87 940e c80b 	CALL SUBOPT_0x13D
                 ; 000D 004C         }
                 ; 000D 004D 
                 ; 000D 004E     }
                +
006a89 5f2f     +SUBI R18 , LOW ( - 1 )
006a8a 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006a8b cfc4      	RJMP _0x1A0004
                 _0x1A0005:
                 ; 000D 004F     printDebug("]\r\n");
                +
006a8c eaec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 48 ) )
006a8d e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 48 ) )
006a8e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 48 ) )
006a8f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 48 ) )
                 	__POINTD1FN _0x1A0000,48
006a90 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 0050     return;
006a92 940e e0d5 	CALL __LOADLOCR6
006a94 962a      	ADIW R28,10
006a95 9508      	RET
                 ; 000D 0051 }
                 ;
                 ;void updateSensorADC(int ch)
                 ; 000D 0054 {
                 _updateSensorADC:
                 ; 000D 0055     int adc_raw                                     = 0;
                 ; 000D 0056 
                 ; 000D 0057     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006a96 940e c3a0 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	adc_raw -> R16,R17
                +
006a98 e000     +LDI R16 , LOW ( 0 )
006a99 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006a9a 940e c15f 	CALL SUBOPT_0x2E
006a9c f021      	BREQ _0x1A000C
006a9d 940e c15f 	CALL SUBOPT_0x2E
006a9f 30e3      	CPI  R30,LOW(0x3)
006aa0 f411      	BRNE _0x1A000B
                 _0x1A000C:
                 ; 000D 0058         adc_raw     = read_adc(8);
006aa1 e0a8      	LDI  R26,LOW(8)
006aa2 c009      	RJMP _0x1A00C4
                 ; 000D 0059     }
                 ; 000D 005A     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A000B:
006aa3 940e c42b 	CALL SUBOPT_0x95
006aa5 f021      	BREQ _0x1A0010
006aa6 940e c15f 	CALL SUBOPT_0x2E
006aa8 30e2      	CPI  R30,LOW(0x2)
006aa9 f429      	BRNE _0x1A000F
                 _0x1A0010:
                 ; 000D 005B         adc_raw     = read_adc(8+ch);
006aaa 81aa      	LDD  R26,Y+2
006aab 5fa8      	SUBI R26,-LOW(8)
                 _0x1A00C4:
006aac 940e 439e 	CALL _read_adc
006aae 018f      	MOVW R16,R30
                 ; 000D 005C     }
                 ; 000D 005D 
                 ; 000D 005E     if( fabs(adcData[ch] - adc_raw) < 10){
                 _0x1A000F:
006aaf 940e ccd2 	CALL SUBOPT_0x201
006ab1 940e c0e9 	CALL SUBOPT_0x1B
006ab3 940e ccd6 	CALL SUBOPT_0x202
006ab5 940e c6f1 	CALL SUBOPT_0x10A
006ab7 940e de92 	CALL __CMPF12
006ab9 f508      	BRSH _0x1A0012
                 ; 000D 005F         adcData[ch] = (float)((adcData[ch] * 9.9) + (float)(adc_raw * 0.1))/10;           // Temp Sensor Low-Pass Filter
006aba 940e ccd2 	CALL SUBOPT_0x201
006abc 0fea      	ADD  R30,R26
006abd 1ffb      	ADC  R31,R27
006abe 93ff      	PUSH R31
006abf 93ef      	PUSH R30
006ac0 940e ccd2 	CALL SUBOPT_0x201
006ac2 940e c0e9 	CALL SUBOPT_0x1B
                +
006ac4 e6a6     +LDI R26 , LOW ( 0x411E6666 )
006ac5 e6b6     +LDI R27 , HIGH ( 0x411E6666 )
006ac6 e18e     +LDI R24 , BYTE3 ( 0x411E6666 )
006ac7 e491     +LDI R25 , BYTE4 ( 0x411E6666 )
                 	__GETD2N 0x411E6666
006ac8 940e ddff 	CALL __MULF12
006aca 937f      	PUSH R23
006acb 936f      	PUSH R22
006acc 93ff      	PUSH R31
006acd 93ef      	PUSH R30
006ace 940e cce8 	CALL SUBOPT_0x203
006ad0 940e c46f 	CALL SUBOPT_0x9E
006ad2 91af      	POP  R26
006ad3 91bf      	POP  R27
006ad4 918f      	POP  R24
006ad5 919f      	POP  R25
006ad6 940e c476 	CALL SUBOPT_0x9F
006ad8 91af      	POP  R26
006ad9 91bf      	POP  R27
006ada c0b0      	RJMP _0x1A00C5
                 ; 000D 0060         //printDebug("<updateSensorADC>        < 10\r\n");
                 ; 000D 0061     }
                 ; 000D 0062     else if( fabs(adcData[ch] - adc_raw) < 30){
                 _0x1A0012:
006adb 940e ccd2 	CALL SUBOPT_0x201
006add 940e c0e9 	CALL SUBOPT_0x1B
006adf 940e ccd6 	CALL SUBOPT_0x202
                +
006ae1 e0e0     +LDI R30 , LOW ( 0x41F00000 )
006ae2 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
006ae3 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
006ae4 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
006ae5 940e de92 	CALL __CMPF12
006ae7 f518      	BRSH _0x1A0014
                 ; 000D 0063         adcData[ch] = (float)((adcData[ch] * 9.5) + (float)(adc_raw * 0.5))/10;           // Temp Sensor Low-Pass Filter
006ae8 940e ccd2 	CALL SUBOPT_0x201
006aea 0fea      	ADD  R30,R26
006aeb 1ffb      	ADC  R31,R27
006aec 93ff      	PUSH R31
006aed 93ef      	PUSH R30
006aee 940e ccd2 	CALL SUBOPT_0x201
006af0 940e c0e9 	CALL SUBOPT_0x1B
                +
006af2 e0a0     +LDI R26 , LOW ( 0x41180000 )
006af3 e0b0     +LDI R27 , HIGH ( 0x41180000 )
006af4 e188     +LDI R24 , BYTE3 ( 0x41180000 )
006af5 e491     +LDI R25 , BYTE4 ( 0x41180000 )
                 	__GETD2N 0x41180000
006af6 940e ddff 	CALL __MULF12
006af8 937f      	PUSH R23
006af9 936f      	PUSH R22
006afa 93ff      	PUSH R31
006afb 93ef      	PUSH R30
006afc 940e cce8 	CALL SUBOPT_0x203
006afe 940e ccee 	CALL SUBOPT_0x204
006b00 940e ddff 	CALL __MULF12
006b02 91af      	POP  R26
006b03 91bf      	POP  R27
006b04 918f      	POP  R24
006b05 919f      	POP  R25
006b06 940e c476 	CALL SUBOPT_0x9F
006b08 91af      	POP  R26
006b09 91bf      	POP  R27
006b0a c080      	RJMP _0x1A00C5
                 ; 000D 0064         //printDebug("<updateSensorADC>                < 30\r\n");
                 ; 000D 0065     }
                 ; 000D 0066     else if( fabs(adcData[ch] - adc_raw) < 50){
                 _0x1A0014:
006b0b 940e ccd2 	CALL SUBOPT_0x201
006b0d 940e c0e9 	CALL SUBOPT_0x1B
006b0f 940e ccd6 	CALL SUBOPT_0x202
                +
006b11 e0e0     +LDI R30 , LOW ( 0x42480000 )
006b12 e0f0     +LDI R31 , HIGH ( 0x42480000 )
006b13 e468     +LDI R22 , BYTE3 ( 0x42480000 )
006b14 e472     +LDI R23 , BYTE4 ( 0x42480000 )
                 	__GETD1N 0x42480000
006b15 940e de92 	CALL __CMPF12
006b17 f528      	BRSH _0x1A0016
                 ; 000D 0067         adcData[ch] = (float)((adcData[ch] * 8.5) + (float)(adc_raw * 1.5))/10;           // Temp Sensor Low-Pass Filter
006b18 940e ccd2 	CALL SUBOPT_0x201
006b1a 0fea      	ADD  R30,R26
006b1b 1ffb      	ADC  R31,R27
006b1c 93ff      	PUSH R31
006b1d 93ef      	PUSH R30
006b1e 940e ccd2 	CALL SUBOPT_0x201
006b20 940e c0e9 	CALL SUBOPT_0x1B
                +
006b22 e0a0     +LDI R26 , LOW ( 0x41080000 )
006b23 e0b0     +LDI R27 , HIGH ( 0x41080000 )
006b24 e088     +LDI R24 , BYTE3 ( 0x41080000 )
006b25 e491     +LDI R25 , BYTE4 ( 0x41080000 )
                 	__GETD2N 0x41080000
006b26 940e ddff 	CALL __MULF12
006b28 937f      	PUSH R23
006b29 936f      	PUSH R22
006b2a 93ff      	PUSH R31
006b2b 93ef      	PUSH R30
006b2c 940e cce8 	CALL SUBOPT_0x203
                +
006b2e e0a0     +LDI R26 , LOW ( 0x3FC00000 )
006b2f e0b0     +LDI R27 , HIGH ( 0x3FC00000 )
006b30 ec80     +LDI R24 , BYTE3 ( 0x3FC00000 )
006b31 e39f     +LDI R25 , BYTE4 ( 0x3FC00000 )
                 	__GETD2N 0x3FC00000
006b32 940e ddff 	CALL __MULF12
006b34 91af      	POP  R26
006b35 91bf      	POP  R27
006b36 918f      	POP  R24
006b37 919f      	POP  R25
006b38 940e c476 	CALL SUBOPT_0x9F
006b3a 91af      	POP  R26
006b3b 91bf      	POP  R27
006b3c c04e      	RJMP _0x1A00C5
                 ; 000D 0068         //printDebug("<updateSensorADC>                            < 50\r\n");
                 ; 000D 0069     }
                 ; 000D 006A     else if( fabs(adcData[ch] - adc_raw) < 100){
                 _0x1A0016:
006b3d 940e ccd2 	CALL SUBOPT_0x201
006b3f 940e c0e9 	CALL SUBOPT_0x1B
006b41 940e ccd6 	CALL SUBOPT_0x202
                +
006b43 e0e0     +LDI R30 , LOW ( 0x42C80000 )
006b44 e0f0     +LDI R31 , HIGH ( 0x42C80000 )
006b45 ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
006b46 e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
006b47 940e de92 	CALL __CMPF12
006b49 f528      	BRSH _0x1A0018
                 ; 000D 006B         adcData[ch] = (float)((adcData[ch] * 7.0) + (float)(adc_raw * 3.0))/10;           // Temp Sensor Low-Pass Filter
006b4a 940e ccd2 	CALL SUBOPT_0x201
006b4c 0fea      	ADD  R30,R26
006b4d 1ffb      	ADC  R31,R27
006b4e 93ff      	PUSH R31
006b4f 93ef      	PUSH R30
006b50 940e ccd2 	CALL SUBOPT_0x201
006b52 940e c0e9 	CALL SUBOPT_0x1B
                +
006b54 e0a0     +LDI R26 , LOW ( 0x40E00000 )
006b55 e0b0     +LDI R27 , HIGH ( 0x40E00000 )
006b56 ee80     +LDI R24 , BYTE3 ( 0x40E00000 )
006b57 e490     +LDI R25 , BYTE4 ( 0x40E00000 )
                 	__GETD2N 0x40E00000
006b58 940e ddff 	CALL __MULF12
006b5a 937f      	PUSH R23
006b5b 936f      	PUSH R22
006b5c 93ff      	PUSH R31
006b5d 93ef      	PUSH R30
006b5e 940e cce8 	CALL SUBOPT_0x203
                +
006b60 e0a0     +LDI R26 , LOW ( 0x40400000 )
006b61 e0b0     +LDI R27 , HIGH ( 0x40400000 )
006b62 e480     +LDI R24 , BYTE3 ( 0x40400000 )
006b63 e490     +LDI R25 , BYTE4 ( 0x40400000 )
                 	__GETD2N 0x40400000
006b64 940e ddff 	CALL __MULF12
006b66 91af      	POP  R26
006b67 91bf      	POP  R27
006b68 918f      	POP  R24
006b69 919f      	POP  R25
006b6a 940e c476 	CALL SUBOPT_0x9F
006b6c 91af      	POP  R26
006b6d 91bf      	POP  R27
006b6e c01c      	RJMP _0x1A00C5
                 ; 000D 006C         //printDebug("<updateSensorADC>                                    < 100\r\n");
                 ; 000D 006D     }
                 ; 000D 006E     else{
                 _0x1A0018:
                 ; 000D 006F         adcData[ch] = (float)((adcData[ch] * 5.0) + (float)(adc_raw * 5.0))/10;           // Temp Sensor Low-Pass Filter
006b6f 940e ccd2 	CALL SUBOPT_0x201
006b71 0fea      	ADD  R30,R26
006b72 1ffb      	ADC  R31,R27
006b73 93ff      	PUSH R31
006b74 93ef      	PUSH R30
006b75 940e ccd2 	CALL SUBOPT_0x201
006b77 940e c0e9 	CALL SUBOPT_0x1B
006b79 940e ccf3 	CALL SUBOPT_0x205
006b7b 937f      	PUSH R23
006b7c 936f      	PUSH R22
006b7d 93ff      	PUSH R31
006b7e 93ef      	PUSH R30
006b7f 940e cce8 	CALL SUBOPT_0x203
006b81 940e ccf3 	CALL SUBOPT_0x205
006b83 91af      	POP  R26
006b84 91bf      	POP  R27
006b85 918f      	POP  R24
006b86 919f      	POP  R25
006b87 940e c476 	CALL SUBOPT_0x9F
006b89 91af      	POP  R26
006b8a 91bf      	POP  R27
                 _0x1A00C5:
006b8b 940e e039 	CALL __PUTDP1
                 ; 000D 0070         //printDebug("<updateSensorADC>                                            >= 100\r\n");
                 ; 000D 0071     }
                 ; 000D 0072 
                 ; 000D 0073     return;
006b8d 8119      	LDD  R17,Y+1
006b8e 8108      	LDD  R16,Y+0
006b8f 9624      	ADIW R28,4
006b90 9508      	RET
                 ; 000D 0074 }
                 ;/*============================================================*/
                 ;int sensorRead(int ch, struct sens_val_st *sensor)
                 ; 000D 0077 {
                 _sensorRead:
                 ; 000D 0078     static TIMER t[MAX_SENS_CHANNEL]                = {0,0,0,0,0};
                 ; 000D 0079     static char lastCheck[MAX_SENS_CHANNEL]         = {0xFF,0xFF,0xFF,0xFF,0xFF};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000D 007A     static char steadyState[MAX_SENS_CHANNEL]       = {0,0,0,0,0};
                 ; 000D 007B     char channelConnect                             = 0;
                 ; 000D 007C     float x_1 = 0.0;
                 ; 000D 007D     float x_2 = 0.0;
                 ; 000D 007E     float y_1 = 0.0;
                 ; 000D 007F     float y_2 = 0.0;
                 ; 000D 0080 
                 ; 000D 0081     long viADCbuffer = 0;
                 ; 000D 0082     int i = 0;
                 ; 000D 0083     float offset = 0.0;
                 ; 000D 0084     float sensorRef1 = 0.0,sensorRef2 = 0.0,sensorRef3 = 0.0;
                 ; 000D 0085     float stdMeter1 = 0.0,stdMeter2 = 0.0,stdMeter3 = 0.0;        //standrad  meter
                 ; 000D 0086     float lowRange = 0.0;
                 ; 000D 0087     float stdMeterRange = 0.0;
                 ; 000D 0088     float factorAA = 0.0,factorBB = 0.0,factorCC = 0.0;
                 ; 000D 0089     float viSensorTempValue = 0.0;
                 ; 000D 008A 
                 ; 000D 008B     if( (ch<0) || (ch>=MAX_SENS_CHANNEL) ){
006b91 93ba      	ST   -Y,R27
006b92 93aa      	ST   -Y,R26
006b93 97ef      	SBIW R28,63
006b94 9729      	SBIW R28,9
006b95 e488      	LDI  R24,72
006b96 e0a0      	LDI  R26,LOW(0)
006b97 e0b0      	LDI  R27,HIGH(0)
006b98 e3e4      	LDI  R30,LOW(_0x1A001B*2)
006b99 e4f4      	LDI  R31,HIGH(_0x1A001B*2)
006b9a e060      	LDI  R22,BYTE3(_0x1A001B*2)
006b9b 940e e0dc 	CALL __INITLOCB
006b9d 940e e0d0 	CALL __SAVELOCR4
                 ;	ch -> Y+78
                 ;	*sensor -> Y+76
                 ;	channelConnect -> R17
                 ;	x_1 -> Y+72
                 ;	x_2 -> Y+68
                 ;	y_1 -> Y+64
                 ;	y_2 -> Y+60
                 ;	viADCbuffer -> Y+56
                 ;	i -> R18,R19
                 ;	offset -> Y+52
                 ;	sensorRef1 -> Y+48
                 ;	sensorRef2 -> Y+44
                 ;	sensorRef3 -> Y+40
                 ;	stdMeter1 -> Y+36
                 ;	stdMeter2 -> Y+32
                 ;	stdMeter3 -> Y+28
                 ;	lowRange -> Y+24
                 ;	stdMeterRange -> Y+20
                 ;	factorAA -> Y+16
                 ;	factorBB -> Y+12
                 ;	factorCC -> Y+8
                 ;	viSensorTempValue -> Y+4
006b9f e010      	LDI  R17,0
                +
006ba0 e020     +LDI R18 , LOW ( 0 )
006ba1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
006ba2 01de     +MOVW R26 , R28
006ba3 5ba1     +SUBI R26 , LOW ( - 79 )
006ba4 4fbf     +SBCI R27 , HIGH ( - 79 )
006ba5 91ac     +LD R26 , X
                 	__GETB2SX 79
006ba6 23aa      	TST  R26
006ba7 f022      	BRMI _0x1A001D
006ba8 940e ccfa 	CALL SUBOPT_0x206
006baa 9715      	SBIW R26,5
006bab f04c      	BRLT _0x1A001C
                 _0x1A001D:
                 ; 000D 008C         printDebug("<sensorRead> ERR: ch value out of range\r\n");
                +
006bac ebe0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 52 ) )
006bad e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 52 ) )
006bae e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 52 ) )
006baf e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 52 ) )
                 	__POINTD1FN _0x1A0000,52
006bb0 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 008D         return -3;
006bb2 efed      	LDI  R30,LOW(65533)
006bb3 efff      	LDI  R31,HIGH(65533)
006bb4 c310      	RJMP _0x20E006A
                 ; 000D 008E     }
                 ; 000D 008F 
                 ; 000D 0090     // ----- Check Sensor Status (Connected-Disconnected) ----- //
                 ; 000D 0091     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A001C:
006bb5 940e c15f 	CALL SUBOPT_0x2E
006bb7 f021      	BREQ _0x1A0020
006bb8 940e c15f 	CALL SUBOPT_0x2E
006bba 30e3      	CPI  R30,LOW(0x3)
006bbb f589      	BRNE _0x1A001F
                 _0x1A0020:
                 ; 000D 0092     /*bongkot comment*/
                 ; 000D 0093         SENSOR_SELECT(ch);
006bbc 940e c484 	CALL SUBOPT_0xA1
                +
006bbe 01fe     +MOVW R30 , R28
006bbf 5be2     +SUBI R30 , LOW ( - 78 )
006bc0 4fff     +SBCI R31 , HIGH ( - 78 )
006bc1 81e0     +LD R30 , Z
                 	__GETB1SX 78
006bc2 940e c48e 	CALL SUBOPT_0xA2
                 ; 000D 0094         delay_ms(20);                                               // -- for multiplex stable -- //
                 ; 000D 0095         channelConnect = SENSOR_CONNECT;
006bc4 940e c16a 	CALL SUBOPT_0x2F
006bc6 2f1e      	MOV  R17,R30
                 ; 000D 0096 
                 ; 000D 0097         //updateSensorADC(ch);
                 ; 000D 0098 //        if(adcData[ch] < TMC_DISCON_LIMIT){
                 ; 000D 0099 //            channelConnect  = SENS_ERR_DISCONNECT;
                 ; 000D 009A //        }
                 ; 000D 009B //        else{
                 ; 000D 009C //            channelConnect  = SENS_NORMAL;
                 ; 000D 009D //        }
                 ; 000D 009E          viADCbuffer = 0;
006bc7 940e cd01 	CALL SUBOPT_0x207
                 ; 000D 009F          for(i=0;i<30;i++){
                 _0x1A0023:
                +
006bc9 312e     +CPI R18 , LOW ( 30 )
006bca e0e0     +LDI R30 , HIGH ( 30 )
006bcb 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006bcc f42c      	BRGE _0x1A0024
                 ; 000D 00A0             viADCbuffer += read_adc(8+ch);
006bcd 940e cd09 	CALL SUBOPT_0x208
                 ; 000D 00A1          }
                +
006bcf 5f2f     +SUBI R18 , LOW ( - 1 )
006bd0 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006bd1 cff7      	RJMP _0x1A0023
                 _0x1A0024:
                 ; 000D 00A2          viSensorTempValue = iAD595ADCToVolt(viADCbuffer,30);
006bd2 940e cd1d 	CALL SUBOPT_0x209
006bd4 940e a1f3 	CALL _iAD595ADCToVolt
006bd6 940e cd26 	CALL SUBOPT_0x20A
                 ; 000D 00A3          if(viSensorTempValue < TMCP_SHORT_LIMIT){
006bd8 940e cd2a 	CALL SUBOPT_0x20B
006bda f410      	BRSH _0x1A0025
                 ; 000D 00A4              //channelConnect  = SENS_ERR_SHORT;
                 ; 000D 00A5              channelConnect  = SENS_ERR_DISCONNECT;
006bdb e814      	LDI  R17,LOW(132)
                 ; 000D 00A6          }else if(viSensorTempValue > TMCP_OPEN_LIMIT){
006bdc c00f      	RJMP _0x1A0026
                 _0x1A0025:
006bdd 940e c4af 	CALL SUBOPT_0xA8
                +
006bdf efe6     +LDI R30 , LOW ( 0x3FBC28F6 )
006be0 e2f8     +LDI R31 , HIGH ( 0x3FBC28F6 )
006be1 eb6c     +LDI R22 , BYTE3 ( 0x3FBC28F6 )
006be2 e37f     +LDI R23 , BYTE4 ( 0x3FBC28F6 )
                 	__GETD1N 0x3FBC28F6
006be3 940e de92 	CALL __CMPF12
006be5 f009      	BREQ PC+2
006be6 f410      	BRCC PC+3
006be7 940c 6beb 	JMP  _0x1A0027
                 ; 000D 00A7              channelConnect  = SENS_ERR_DISCONNECT;
006be9 e814      	LDI  R17,LOW(132)
                 ; 000D 00A8          }else{
006bea c001      	RJMP _0x1A0028
                 _0x1A0027:
                 ; 000D 00A9              channelConnect  = SENS_NORMAL;
006beb e010      	LDI  R17,LOW(0)
                 ; 000D 00AA          }
                 _0x1A0028:
                 _0x1A0026:
                 ; 000D 00AB 
                 ; 000D 00AC 
                 ; 000D 00AD 
                 ; 000D 00AE         /*bongkot test*/
                 ; 000D 00AF         //channelConnect  = SENS_NORMAL;
                 ; 000D 00B0         //printDebug("SENSOR:NORMAL\r\n");
                 ; 000D 00B1 
                 ; 000D 00B2 
                 ; 000D 00B3     }
                 ; 000D 00B4     else if(TEMP_SEL == TEMP_TMEC){
006bec c04d      	RJMP _0x1A0029
                 _0x1A001F:
006bed 940e c15f 	CALL SUBOPT_0x2E
006bef 30e1      	CPI  R30,LOW(0x1)
006bf0 f519      	BRNE _0x1A002A
                 ; 000D 00B5 
                 ; 000D 00B6         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006bf1 940e cd31 	CALL SUBOPT_0x20C
                 ; 000D 00B7 
                 ; 000D 00B8         if(adcData[ch] < TMEC_SHORT_LIMIT){
006bf3 940e c0e9 	CALL SUBOPT_0x1B
006bf5 01df      	MOVW R26,R30
006bf6 01cb      	MOVW R24,R22
                +
006bf7 e0e0     +LDI R30 , LOW ( 0x40000000 )
006bf8 e0f0     +LDI R31 , HIGH ( 0x40000000 )
006bf9 e060     +LDI R22 , BYTE3 ( 0x40000000 )
006bfa e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
006bfb 940e de92 	CALL __CMPF12
006bfd f410      	BRSH _0x1A002B
                 ; 000D 00B9             channelConnect  = SENS_ERR_SHORT;
006bfe e910      	LDI  R17,LOW(144)
                 ; 000D 00BA         }
                 ; 000D 00BB         else if(adcData[ch] > TMEC_OPEN_LIMIT){
006bff c013      	RJMP _0x1A002C
                 _0x1A002B:
006c00 940e cd3c 	CALL SUBOPT_0x20D
006c02 940e c0e9 	CALL SUBOPT_0x1B
006c04 01df      	MOVW R26,R30
006c05 01cb      	MOVW R24,R22
                +
006c06 e0e0     +LDI R30 , LOW ( 0x447F4000 )
006c07 e4f0     +LDI R31 , HIGH ( 0x447F4000 )
006c08 e76f     +LDI R22 , BYTE3 ( 0x447F4000 )
006c09 e474     +LDI R23 , BYTE4 ( 0x447F4000 )
                 	__GETD1N 0x447F4000
006c0a 940e de92 	CALL __CMPF12
006c0c f009      	BREQ PC+2
006c0d f410      	BRCC PC+3
006c0e 940c 6c12 	JMP  _0x1A002D
                 ; 000D 00BC             channelConnect  = SENS_ERR_DISCONNECT;
006c10 e814      	LDI  R17,LOW(132)
                 ; 000D 00BD         }
                 ; 000D 00BE         else{
006c11 c001      	RJMP _0x1A002E
                 _0x1A002D:
                 ; 000D 00BF             channelConnect  = SENS_NORMAL;
006c12 e010      	LDI  R17,LOW(0)
                 ; 000D 00C0         }
                 _0x1A002E:
                 _0x1A002C:
                 ; 000D 00C1     }
                 ; 000D 00C2     else if(TEMP_SEL == TEMP_PT100){
006c13 c026      	RJMP _0x1A002F
                 _0x1A002A:
006c14 940e c15f 	CALL SUBOPT_0x2E
006c16 30e2      	CPI  R30,LOW(0x2)
006c17 f511      	BRNE _0x1A0030
                 ; 000D 00C3 
                 ; 000D 00C4         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006c18 940e cd31 	CALL SUBOPT_0x20C
                 ; 000D 00C5 
                 ; 000D 00C6         if(adcData[ch] < PT100_SHORT_LIMIT){
006c1a 940e c0e9 	CALL SUBOPT_0x1B
006c1c 01df      	MOVW R26,R30
006c1d 01cb      	MOVW R24,R22
                +
006c1e e0e0     +LDI R30 , LOW ( 0x41000000 )
006c1f e0f0     +LDI R31 , HIGH ( 0x41000000 )
006c20 e060     +LDI R22 , BYTE3 ( 0x41000000 )
006c21 e471     +LDI R23 , BYTE4 ( 0x41000000 )
                 	__GETD1N 0x41000000
006c22 940e de92 	CALL __CMPF12
006c24 f410      	BRSH _0x1A0031
                 ; 000D 00C7             channelConnect  = SENS_ERR_SHORT;
006c25 e910      	LDI  R17,LOW(144)
                 ; 000D 00C8         }
                 ; 000D 00C9         else if(adcData[ch] > PT100_OPEN_LIMIT){
006c26 c013      	RJMP _0x1A0032
                 _0x1A0031:
006c27 940e cd3c 	CALL SUBOPT_0x20D
006c29 940e c0e9 	CALL SUBOPT_0x1B
006c2b 01df      	MOVW R26,R30
006c2c 01cb      	MOVW R24,R22
                +
006c2d e0e0     +LDI R30 , LOW ( 0x44728000 )
006c2e e8f0     +LDI R31 , HIGH ( 0x44728000 )
006c2f e762     +LDI R22 , BYTE3 ( 0x44728000 )
006c30 e474     +LDI R23 , BYTE4 ( 0x44728000 )
                 	__GETD1N 0x44728000
006c31 940e de92 	CALL __CMPF12
006c33 f009      	BREQ PC+2
006c34 f410      	BRCC PC+3
006c35 940c 6c39 	JMP  _0x1A0033
                 ; 000D 00CA             channelConnect  = SENS_ERR_DISCONNECT;
006c37 e814      	LDI  R17,LOW(132)
                 ; 000D 00CB         }
                 ; 000D 00CC         else{
006c38 c001      	RJMP _0x1A0034
                 _0x1A0033:
                 ; 000D 00CD             channelConnect  = SENS_NORMAL;
006c39 e010      	LDI  R17,LOW(0)
                 ; 000D 00CE         }
                 _0x1A0034:
                 _0x1A0032:
                 ; 000D 00CF     }
                 ; 000D 00D0 
                 ; 000D 00D1     /*bongkot test*/
                 ; 000D 00D2     //sensor->status  = SENS_NORMAL;
                 ; 000D 00D3     //lastCheck[ch] = channelConnect;
                 ; 000D 00D4 
                 ; 000D 00D5     // ----- Confirm Sensor Status Stable ----- //
                 ; 000D 00D6     if(channelConnect != lastCheck[ch])
                 _0x1A0030:
                 _0x1A002F:
                 _0x1A0029:
006c3a 940e cd44 	CALL SUBOPT_0x20E
006c3c 59ec      	SUBI R30,LOW(-_lastCheck_S00D0002000)
006c3d 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0002000)
006c3e 81e0      	LD   R30,Z
006c3f 17e1      	CP   R30,R17
006c40 f079      	BREQ _0x1A0035
                 ; 000D 00D7     {
                 ; 000D 00D8         TIMER_setTimer(&t[ch],5);
006c41 940e cd4b 	CALL SUBOPT_0x20F
006c43 940e c0f4 	CALL SUBOPT_0x1D
006c45 940e cd51 	CALL SUBOPT_0x210
                 ; 000D 00D9         lastCheck[ch]       = channelConnect;
006c47 940e cd44 	CALL SUBOPT_0x20E
006c49 59ec      	SUBI R30,LOW(-_lastCheck_S00D0002000)
006c4a 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0002000)
006c4b 8310      	ST   Z,R17
                 ; 000D 00DA         steadyState[ch]     = 0;
006c4c 940e cd57 	CALL SUBOPT_0x211
006c4e e0a0      	LDI  R26,LOW(0)
006c4f c00f      	RJMP _0x1A00C6
                 ; 000D 00DB     }
                 ; 000D 00DC     else if(!steadyState[ch])
                 _0x1A0035:
006c50 940e cd57 	CALL SUBOPT_0x211
006c52 81e0      	LD   R30,Z
006c53 30e0      	CPI  R30,0
006c54 f459      	BRNE _0x1A0037
                 ; 000D 00DD     {
                 ; 000D 00DE         if(TIMER_checkTimerExceed(t[ch])){
006c55 940e cd4b 	CALL SUBOPT_0x20F
006c57 940e c0e9 	CALL SUBOPT_0x1B
006c59 940e c0ee 	CALL SUBOPT_0x1C
006c5b f021      	BREQ _0x1A0038
                 ; 000D 00DF             steadyState[ch] = 1;
006c5c 940e cd57 	CALL SUBOPT_0x211
006c5e e0a1      	LDI  R26,LOW(1)
                 _0x1A00C6:
006c5f 83a0      	STD  Z+0,R26
                 ; 000D 00E0         }
                 ; 000D 00E1     }
                 _0x1A0038:
                 ; 000D 00E2 
                 ; 000D 00E3     /*bongkot test*/
                 ; 000D 00E4     //printDebug("SENSOR:channelConnect Status Stable\r\n");
                 ; 000D 00E5     //steadyState[ch] = 1;
                 ; 000D 00E6 
                 ; 000D 00E7     if(!steadyState[ch])
                 _0x1A0037:
006c60 940e cd57 	CALL SUBOPT_0x211
006c62 81e0      	LD   R30,Z
006c63 30e0      	CPI  R30,0
006c64 f441      	BRNE _0x1A0039
                 ; 000D 00E8     {
                 ; 000D 00E9         //printDebug("<sensorRead> sensor %d state unstable\r\n",ch+1);
                 ; 000D 00EA         sensor->status  = SENS_ERR_UNKNOWN;
006c65 940e cd5b 	CALL SUBOPT_0x212
006c67 9614      	ADIW R26,4
006c68 efef      	LDI  R30,LOW(255)
006c69 93ec      	ST   X,R30
                 ; 000D 00EB         return -9;
006c6a efe7      	LDI  R30,LOW(65527)
006c6b efff      	LDI  R31,HIGH(65527)
006c6c c258      	RJMP _0x20E006A
                 ; 000D 00EC     }
                 ; 000D 00ED 
                 ; 000D 00EE     /*bongkot test*/
                 ; 000D 00EF     //printDebug("SENSOR:steadyState ok\r\n");
                 ; 000D 00F0 
                 ; 000D 00F1 
                 ; 000D 00F2     // ----- Return if Sensor Data is not available ----- //
                 ; 000D 00F3     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED))
                 _0x1A0039:
006c6d 940e c15f 	CALL SUBOPT_0x2E
006c6f f021      	BREQ _0x1A003B
006c70 940e c15f 	CALL SUBOPT_0x2E
006c72 30e3      	CPI  R30,LOW(0x3)
006c73 f431      	BRNE _0x1A003A
                 _0x1A003B:
                 ; 000D 00F4     {   /*bongkot comment*/
                 ; 000D 00F5 //        if(!channelConnect){
                 ; 000D 00F6 //            sensor->status  = SENS_ERR_DISCONNECT;
                 ; 000D 00F7 //            return -2;
                 ; 000D 00F8 //        }
                 ; 000D 00F9         if(channelConnect != SENS_NORMAL){
006c74 3010      	CPI  R17,0
006c75 f019      	BREQ _0x1A003D
                 ; 000D 00FA             sensor->status  = channelConnect;
006c76 940e cd62 	CALL SUBOPT_0x213
                 ; 000D 00FB             return -2;
006c78 c24c      	RJMP _0x20E006A
                 ; 000D 00FC         }
                 ; 000D 00FD        // updateSensorADC(ch);                            // -- update adcData[ch] -- //
                 ; 000D 00FE     }
                 _0x1A003D:
                 ; 000D 00FF     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
006c79 c00f      	RJMP _0x1A003E
                 _0x1A003A:
006c7a 940e c42b 	CALL SUBOPT_0x95
006c7c f021      	BREQ _0x1A0040
006c7d 940e c15f 	CALL SUBOPT_0x2E
006c7f 30e2      	CPI  R30,LOW(0x2)
006c80 f441      	BRNE _0x1A003F
                 _0x1A0040:
                 ; 000D 0100         if(channelConnect != SENS_NORMAL){
006c81 3010      	CPI  R17,0
006c82 f019      	BREQ _0x1A0042
                 ; 000D 0101             sensor->status  = channelConnect;
006c83 940e cd62 	CALL SUBOPT_0x213
                 ; 000D 0102             return -2;
006c85 c23f      	RJMP _0x20E006A
                 ; 000D 0103         }
                 ; 000D 0104 
                 ; 000D 0105         updateSensorADC(ch);                            // -- update adcData[ch] -- again ^_^ --- //
                 _0x1A0042:
006c86 940e ccfa 	CALL SUBOPT_0x206
006c88 de0d      	RCALL _updateSensorADC
                 ; 000D 0106     }
                 ; 000D 0107 
                 ; 000D 0108     switch(epCalType[ch]){
                 _0x1A003F:
                 _0x1A003E:
006c89 940e ccfa 	CALL SUBOPT_0x206
006c8b 5aa8      	SUBI R26,LOW(-_epCalType)
006c8c 4fb9      	SBCI R27,HIGH(-_epCalType)
006c8d 940e e085 	CALL __EEPROMRDB
006c8f 940e cd6c 	CALL SUBOPT_0x214
                 ; 000D 0109         case CAL_SELFCOMPARE    :   // --- Same as CAL_EXTOFFSET --- //
006c91 f031      	BREQ _0x1A0047
                 ; 000D 010A         case CAL_EXTOFFSET      :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006c92 30e2      	CPI  R30,LOW(0x2)
006c93 e0a0      	LDI  R26,HIGH(0x2)
006c94 07fa      	CPC  R31,R26
006c95 f011      	BREQ PC+3
006c96 940c 6d2c 	JMP _0x1A0048
                 _0x1A0047:
006c98 940e c15f 	CALL SUBOPT_0x2E
006c9a f029      	BREQ _0x1A004A
006c9b 940e c15f 	CALL SUBOPT_0x2E
006c9d 30e3      	CPI  R30,LOW(0x3)
006c9e f009      	BREQ _0x1A004A
006c9f c040      	RJMP _0x1A0049
                 _0x1A004A:
                 ; 000D 010B                                         /*bongkot comment*/
                 ; 000D 010C                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]) + epFactor_C[ch];
                 ; 000D 010D                                          //sensor->value   +=    epFactor_C[ch];
                 ; 000D 010E                                          viADCbuffer = 0;
006ca0 940e cd01 	CALL SUBOPT_0x207
                 ; 000D 010F                                          for(i=0;i<30;i++){
                 _0x1A004D:
                +
006ca2 312e     +CPI R18 , LOW ( 30 )
006ca3 e0e0     +LDI R30 , HIGH ( 30 )
006ca4 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006ca5 f42c      	BRGE _0x1A004E
                 ; 000D 0110                                             viADCbuffer += read_adc(8+ch);
006ca6 940e cd09 	CALL SUBOPT_0x208
                 ; 000D 0111                                          }
                +
006ca8 5f2f     +SUBI R18 , LOW ( - 1 )
006ca9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006caa cff7      	RJMP _0x1A004D
                 _0x1A004E:
                 ; 000D 0112 
                 ; 000D 0113                                          viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006cab 940e cd1d 	CALL SUBOPT_0x209
006cad 940e cd71 	CALL SUBOPT_0x215
                 ; 000D 0114                                          offset =  epTempRef1[ch] - epADCRef1[ch];
006caf 940e cd75 	CALL SUBOPT_0x216
006cb1 937f      	PUSH R23
006cb2 936f      	PUSH R22
006cb3 93ff      	PUSH R31
006cb4 93ef      	PUSH R30
006cb5 940e cd7f 	CALL SUBOPT_0x217
006cb7 91af      	POP  R26
006cb8 91bf      	POP  R27
006cb9 918f      	POP  R24
006cba 919f      	POP  R25
006cbb 940e cd89 	CALL SUBOPT_0x218
                +
006cbd abec     +STD Y + 52 , R30
006cbe abfd     +STD Y + 52 + 1 , R31
006cbf ab6e     +STD Y + 52 + 2 , R22
006cc0 ab7f     +STD Y + 52 + 3 , R23
                 	__PUTD1S 52
                 ; 000D 0115                                          printDebug("TempRaw(%f), TempRef(%f), Offset(%f)\r\n",viSensorTempValue,epTempRef1[ch],offset);
                +
006cc1 edea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006cc2 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006cc3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006cc4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006cc5 940e cc5e 	CALL SUBOPT_0x1F0
006cc7 940e cd8e 	CALL SUBOPT_0x219
006cc9 940e cd97 	CALL SUBOPT_0x21A
006ccb 940e e05e 	CALL __PUTPARD1
                +
006ccd 01fe     +MOVW R30 , R28
006cce 5ce0     +SUBI R30 , LOW ( - 64 )
006ccf 4fff     +SBCI R31 , HIGH ( - 64 )
006cd0 9001     +LD R0 , Z +
006cd1 9011     +LD R1 , Z +
006cd2 9161     +LD R22 , Z +
006cd3 8170     +LD R23 , Z
006cd4 01f0     +MOVW R30 , R0
                 	__GETD1SX 64
006cd5 940e e05e 	CALL __PUTPARD1
006cd7 940e c2e6 	CALL SUBOPT_0x66
                 ; 000D 0116                                          sensor->value = viSensorTempValue + offset;
                +
006cd9 a9ec     +LDD R30 , Y + 52
006cda a9fd     +LDD R31 , Y + 52 + 1
006cdb a96e     +LDD R22 , Y + 52 + 2
006cdc a97f     +LDD R23 , Y + 52 + 3
                 	__GETD1S 52
006cdd 940e c4af 	CALL SUBOPT_0xA8
006cdf c047      	RJMP _0x1A00C7
                 ; 000D 0117                                     }
                 ; 000D 0118                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0049:
006ce0 940e c15f 	CALL SUBOPT_0x2E
006ce2 30e1      	CPI  R30,LOW(0x1)
006ce3 f489      	BRNE _0x1A0050
                 ; 000D 0119 
                 ; 000D 011A                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epFactor_C[ch];
006ce4 940e cd3c 	CALL SUBOPT_0x20D
006ce6 940e c0e9 	CALL SUBOPT_0x1B
006ce8 940e cda0 	CALL SUBOPT_0x21B
006cea 937f      	PUSH R23
006ceb 936f      	PUSH R22
006cec 93ff      	PUSH R31
006ced 93ef      	PUSH R30
006cee 940e cda7 	CALL SUBOPT_0x21C
006cf0 91af      	POP  R26
006cf1 91bf      	POP  R27
006cf2 918f      	POP  R24
006cf3 919f      	POP  R25
006cf4 c032      	RJMP _0x1A00C7
                 ; 000D 011B                                     }
                 ; 000D 011C                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0050:
006cf5 940e c15f 	CALL SUBOPT_0x2E
006cf7 30e2      	CPI  R30,LOW(0x2)
006cf8 f591      	BRNE _0x1A0052
                 ; 000D 011D                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 011E                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 011F                                                              epFactor_C[ch];
006cf9 940e cd3c 	CALL SUBOPT_0x20D
006cfb 940e c0e9 	CALL SUBOPT_0x1B
006cfd 940e cdb1 	CALL SUBOPT_0x21D
006cff 937f      	PUSH R23
006d00 936f      	PUSH R22
006d01 93ff      	PUSH R31
006d02 93ef      	PUSH R30
006d03 940e cd3c 	CALL SUBOPT_0x20D
006d05 940e c0e9 	CALL SUBOPT_0x1B
006d07 91af      	POP  R26
006d08 91bf      	POP  R27
006d09 918f      	POP  R24
006d0a 919f      	POP  R25
006d0b 940e ddff 	CALL __MULF12
006d0d 937f      	PUSH R23
006d0e 936f      	PUSH R22
006d0f 93ff      	PUSH R31
006d10 93ef      	PUSH R30
006d11 940e cd3c 	CALL SUBOPT_0x20D
006d13 940e c0e9 	CALL SUBOPT_0x1B
006d15 940e cdb8 	CALL SUBOPT_0x21E
006d17 91af      	POP  R26
006d18 91bf      	POP  R27
006d19 918f      	POP  R24
006d1a 919f      	POP  R25
006d1b 940e ddaf 	CALL __ADDF12
006d1d 937f      	PUSH R23
006d1e 936f      	PUSH R22
006d1f 93ff      	PUSH R31
006d20 93ef      	PUSH R30
006d21 940e cda7 	CALL SUBOPT_0x21C
006d23 91af      	POP  R26
006d24 91bf      	POP  R27
006d25 918f      	POP  R24
006d26 919f      	POP  R25
                 _0x1A00C7:
006d27 940e ddaf 	CALL __ADDF12
006d29 940e cdbf 	CALL SUBOPT_0x21F
                 ; 000D 0120 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epFactor_C[ch];
                 ; 000D 0121                                     }
                 ; 000D 0122                                     break;
                 _0x1A0052:
006d2b c192      	RJMP _0x1A0045
                 ; 000D 0123         case CAL_EXTLINEAR      :  {
                 _0x1A0048:
006d2c 30e3      	CPI  R30,LOW(0x3)
006d2d e0a0      	LDI  R26,HIGH(0x3)
006d2e 07fa      	CPC  R31,R26
006d2f f011      	BREQ PC+3
006d30 940c 6dab 	JMP _0x1A0053
                 ; 000D 0124                                         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006d32 940e c15f 	CALL SUBOPT_0x2E
006d34 f029      	BREQ _0x1A0055
006d35 940e c15f 	CALL SUBOPT_0x2E
006d37 30e3      	CPI  R30,LOW(0x3)
006d38 f009      	BREQ _0x1A0055
006d39 c052      	RJMP _0x1A0054
                 _0x1A0055:
                 ; 000D 0125                                                //sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
                 ; 000D 0126 
                 ; 000D 0127                                                viADCbuffer = 0;
006d3a 940e cd01 	CALL SUBOPT_0x207
                 ; 000D 0128                                                  for(i=0;i<30;i++){
                 _0x1A0058:
                +
006d3c 312e     +CPI R18 , LOW ( 30 )
006d3d e0e0     +LDI R30 , HIGH ( 30 )
006d3e 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006d3f f42c      	BRGE _0x1A0059
                 ; 000D 0129                                                     viADCbuffer += read_adc(8+ch);
006d40 940e cd09 	CALL SUBOPT_0x208
                 ; 000D 012A                                                  }
                +
006d42 5f2f     +SUBI R18 , LOW ( - 1 )
006d43 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006d44 cff7      	RJMP _0x1A0058
                 _0x1A0059:
                 ; 000D 012B 
                 ; 000D 012C                                                 sensorRef1 = iAD595ADCToTemp(epADCRef1[ch],1);
006d45 940e cd7f 	CALL SUBOPT_0x217
006d47 940e cdc3 	CALL SUBOPT_0x220
006d49 940e a077 	CALL _iAD595ADCToTemp
006d4b 940e cdc9 	CALL SUBOPT_0x221
                 ; 000D 012D                                                 sensorRef2 = iAD595ADCToTemp(epADCRef2[ch],1);
006d4d 940e cdc3 	CALL SUBOPT_0x220
006d4f 940e a077 	CALL _iAD595ADCToTemp
                +
006d51 a7ec     +STD Y + 44 , R30
006d52 a7fd     +STD Y + 44 + 1 , R31
006d53 a76e     +STD Y + 44 + 2 , R22
006d54 a77f     +STD Y + 44 + 3 , R23
                 	__PUTD1S 44
                 ; 000D 012E                                                 stdMeter1  = epTempRef1[ch];
006d55 940e cd75 	CALL SUBOPT_0x216
006d57 940e cdd7 	CALL SUBOPT_0x222
                 ; 000D 012F                                                 stdMeter2  = epTempRef2[ch];
                 ; 000D 0130                                                 lowRange   =  sensorRef2 - sensorRef1;
                +
006d59 a9a8     +LDD R26 , Y + 48
006d5a a9b9     +LDD R27 , Y + 48 + 1
006d5b a98a     +LDD R24 , Y + 48 + 2
006d5c a99b     +LDD R25 , Y + 48 + 3
                 	__GETD2S 48
                +
006d5d a5ec     +LDD R30 , Y + 44
006d5e a5fd     +LDD R31 , Y + 44 + 1
006d5f a56e     +LDD R22 , Y + 44 + 2
006d60 a57f     +LDD R23 , Y + 44 + 3
                 	__GETD1S 44
006d61 940e dda8 	CALL __SUBF12
006d63 940e cde9 	CALL SUBOPT_0x223
                 ; 000D 0131                                                 stdMeterRange = stdMeter2 - stdMeter1;
                +
006d65 a1ac     +LDD R26 , Y + 36
006d66 a1bd     +LDD R27 , Y + 36 + 1
006d67 a18e     +LDD R24 , Y + 36 + 2
006d68 a19f     +LDD R25 , Y + 36 + 3
                 	__GETD2S 36
                +
006d69 a1e8     +LDD R30 , Y + 32
006d6a a1f9     +LDD R31 , Y + 32 + 1
006d6b a16a     +LDD R22 , Y + 32 + 2
006d6c a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
006d6d 940e dda8 	CALL __SUBF12
006d6f 940e cdee 	CALL SUBOPT_0x224
                 ; 000D 0132                                                 viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006d71 940e cd1d 	CALL SUBOPT_0x209
006d73 940e cd71 	CALL SUBOPT_0x215
                 ; 000D 0133                                                sensor->value = (((viSensorTempValue-sensorRef1)*stdMeterRange)/lowRange)+stdMeter1;
                +
006d75 a9a8     +LDD R26 , Y + 48
006d76 a9b9     +LDD R27 , Y + 48 + 1
006d77 a98a     +LDD R24 , Y + 48 + 2
006d78 a99b     +LDD R25 , Y + 48 + 3
                 	__GETD2S 48
006d79 940e c3d2 	CALL SUBOPT_0x89
006d7b 940e dda8 	CALL __SUBF12
006d7d 940e cdf3 	CALL SUBOPT_0x225
006d7f 940e ddff 	CALL __MULF12
006d81 01df      	MOVW R26,R30
006d82 01cb      	MOVW R24,R22
006d83 940e c5e2 	CALL SUBOPT_0xDC
006d85 940e de4d 	CALL __DIVF21
                +
006d87 a1ac     +LDD R26 , Y + 36
006d88 a1bd     +LDD R27 , Y + 36 + 1
006d89 a18e     +LDD R24 , Y + 36 + 2
006d8a a19f     +LDD R25 , Y + 36 + 3
                 	__GETD2S 36
006d8b c01a      	RJMP _0x1A00C8
                 ; 000D 0134 
                 ; 000D 0135 
                 ; 000D 0136 
                 ; 000D 0137                                         }else{
                 _0x1A0054:
                 ; 000D 0138                                                sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
006d8c 940e cdf8 	CALL SUBOPT_0x226
006d8e 937f      	PUSH R23
006d8f 936f      	PUSH R22
006d90 93ff      	PUSH R31
006d91 93ef      	PUSH R30
006d92 940e cd3c 	CALL SUBOPT_0x20D
006d94 940e c0e9 	CALL SUBOPT_0x1B
006d96 91af      	POP  R26
006d97 91bf      	POP  R27
006d98 918f      	POP  R24
006d99 919f      	POP  R25
006d9a 940e ddff 	CALL __MULF12
006d9c 937f      	PUSH R23
006d9d 936f      	PUSH R22
006d9e 93ff      	PUSH R31
006d9f 93ef      	PUSH R30
006da0 940e cda7 	CALL SUBOPT_0x21C
006da2 91af      	POP  R26
006da3 91bf      	POP  R27
006da4 918f      	POP  R24
006da5 919f      	POP  R25
                 _0x1A00C8:
006da6 940e ddaf 	CALL __ADDF12
006da8 940e cdbf 	CALL SUBOPT_0x21F
                 ; 000D 0139                                         }
                 ; 000D 013A 
                 ; 000D 013B                                         break;
006daa c113      	RJMP _0x1A0045
                 ; 000D 013C                                     }
                 ; 000D 013D         case CAL_EXTPOLYNOMIAL  :   {   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0053:
006dab 30e4      	CPI  R30,LOW(0x4)
006dac e0a0      	LDI  R26,HIGH(0x4)
006dad 07fa      	CPC  R31,R26
006dae f011      	BREQ PC+3
006daf 940c 6e62 	JMP _0x1A0063
006db1 940e c15f 	CALL SUBOPT_0x2E
006db3 f029      	BREQ _0x1A005D
006db4 940e c15f 	CALL SUBOPT_0x2E
006db6 30e3      	CPI  R30,LOW(0x3)
006db7 f009      	BREQ _0x1A005D
006db8 c05e      	RJMP _0x1A005C
                 _0x1A005D:
                 ; 000D 013E                                             viADCbuffer = 0;
006db9 940e cd01 	CALL SUBOPT_0x207
                 ; 000D 013F                                             for(i=0;i<30;i++){
                 _0x1A0060:
                +
006dbb 312e     +CPI R18 , LOW ( 30 )
006dbc e0e0     +LDI R30 , HIGH ( 30 )
006dbd 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006dbe f42c      	BRGE _0x1A0061
                 ; 000D 0140                                                 viADCbuffer += read_adc(8+ch);
006dbf 940e cd09 	CALL SUBOPT_0x208
                 ; 000D 0141                                             }
                +
006dc1 5f2f     +SUBI R18 , LOW ( - 1 )
006dc2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006dc3 cff7      	RJMP _0x1A0060
                 _0x1A0061:
                 ; 000D 0142                                             sensorRef1 = epADCRef1[ch];
006dc4 940e cd7f 	CALL SUBOPT_0x217
006dc6 940e cdc9 	CALL SUBOPT_0x221
                 ; 000D 0143                                             sensorRef2 = epADCRef2[ch];
                +
006dc8 a7ec     +STD Y + 44 , R30
006dc9 a7fd     +STD Y + 44 + 1 , R31
006dca a76e     +STD Y + 44 + 2 , R22
006dcb a77f     +STD Y + 44 + 3 , R23
                 	__PUTD1S 44
                 ; 000D 0144                                             sensorRef3 = epADCRef3[ch];
006dcc 940e cd44 	CALL SUBOPT_0x20E
006dce 940e ce02 	CALL SUBOPT_0x227
                +
006dd0 a7e8     +STD Y + 40 , R30
006dd1 a7f9     +STD Y + 40 + 1 , R31
006dd2 a76a     +STD Y + 40 + 2 , R22
006dd3 a77b     +STD Y + 40 + 3 , R23
                 	__PUTD1S 40
                 ; 000D 0145                                             stdMeter1 = epTempRef1[ch];
006dd4 940e cd75 	CALL SUBOPT_0x216
006dd6 940e cdd7 	CALL SUBOPT_0x222
                 ; 000D 0146                                             stdMeter2 = epTempRef2[ch];
                 ; 000D 0147                                             stdMeter3 = epTempRef3[ch];
006dd8 940e cd44 	CALL SUBOPT_0x20E
006dda 940e ce0b 	CALL SUBOPT_0x228
                +
006ddc 8fec     +STD Y + 28 , R30
006ddd 8ffd     +STD Y + 28 + 1 , R31
006dde 8f6e     +STD Y + 28 + 2 , R22
006ddf 8f7f     +STD Y + 28 + 3 , R23
                 	__PUTD1S 28
                 ; 000D 0148                                             viSensorTempValue = iAD595ADCToTemp(viADCbuffer,30);
006de0 940e cd1d 	CALL SUBOPT_0x209
006de2 940e cd71 	CALL SUBOPT_0x215
                 ; 000D 0149                                             gaussian(sensorRef1,  sensorRef2,  sensorRef3, stdMeter1, stdMeter2, stdMeter3, &factorAA, &factorBB, &factorCC);
006de4 940e c66c 	CALL SUBOPT_0xF3
006de6 940e c66c 	CALL SUBOPT_0xF3
006de8 940e c66c 	CALL SUBOPT_0xF3
006dea 940e c66c 	CALL SUBOPT_0xF3
006dec 940e c66c 	CALL SUBOPT_0xF3
006dee 940e c66c 	CALL SUBOPT_0xF3
006df0 01fe      	MOVW R30,R28
006df1 96b8      	ADIW R30,40
006df2 93fa      	ST   -Y,R31
006df3 93ea      	ST   -Y,R30
006df4 01fe      	MOVW R30,R28
006df5 96b6      	ADIW R30,38
006df6 93fa      	ST   -Y,R31
006df7 93ea      	ST   -Y,R30
006df8 01de      	MOVW R26,R28
006df9 9694      	ADIW R26,36
006dfa 940e 9fd3 	CALL _gaussian
                 ; 000D 014A                                             sensor->value = (factorAA*viSensorTempValue*viSensorTempValue) + (factorBB*viSensorTempValue) + factorCC;      //polynomail formula
006dfc 940e c3d2 	CALL SUBOPT_0x89
006dfe 940e ce14 	CALL SUBOPT_0x229
006e00 940e ddff 	CALL __MULF12
006e02 940e c4af 	CALL SUBOPT_0xA8
006e04 940e ddff 	CALL __MULF12
006e06 937f      	PUSH R23
006e07 936f      	PUSH R22
006e08 93ff      	PUSH R31
006e09 93ef      	PUSH R30
006e0a 940e ce19 	CALL SUBOPT_0x22A
006e0c 940e ddff 	CALL __MULF12
006e0e 91af      	POP  R26
006e0f 91bf      	POP  R27
006e10 918f      	POP  R24
006e11 919f      	POP  R25
006e12 940e ddaf 	CALL __ADDF12
006e14 940e c5c6 	CALL SUBOPT_0xD7
006e16 c046      	RJMP _0x1A00C9
                 ; 000D 014B 
                 ; 000D 014C                                         }else{
                 _0x1A005C:
                 ; 000D 014D                                               sensor->value   =   (epFactor_A[ch]   * adcData[ch] * adcData[ch]) +
                 ; 000D 014E                                                         (epFactor_B[ch]   * adcData[ch]) +
                 ; 000D 014F                                                          epFactor_C[ch];
006e17 940e cd44 	CALL SUBOPT_0x20E
006e19 940e ce1d 	CALL SUBOPT_0x22B
006e1b 940e e07d 	CALL __EEPROMRDD
006e1d 937f      	PUSH R23
006e1e 936f      	PUSH R22
006e1f 93ff      	PUSH R31
006e20 93ef      	PUSH R30
006e21 940e cd3c 	CALL SUBOPT_0x20D
006e23 940e c0e9 	CALL SUBOPT_0x1B
006e25 91af      	POP  R26
006e26 91bf      	POP  R27
006e27 918f      	POP  R24
006e28 919f      	POP  R25
006e29 940e ddff 	CALL __MULF12
006e2b 937f      	PUSH R23
006e2c 936f      	PUSH R22
006e2d 93ff      	PUSH R31
006e2e 93ef      	PUSH R30
006e2f 940e cd3c 	CALL SUBOPT_0x20D
006e31 940e c0e9 	CALL SUBOPT_0x1B
006e33 91af      	POP  R26
006e34 91bf      	POP  R27
006e35 918f      	POP  R24
006e36 919f      	POP  R25
006e37 940e ddff 	CALL __MULF12
006e39 937f      	PUSH R23
006e3a 936f      	PUSH R22
006e3b 93ff      	PUSH R31
006e3c 93ef      	PUSH R30
006e3d 940e cdf8 	CALL SUBOPT_0x226
006e3f 937f      	PUSH R23
006e40 936f      	PUSH R22
006e41 93ff      	PUSH R31
006e42 93ef      	PUSH R30
006e43 940e cd3c 	CALL SUBOPT_0x20D
006e45 940e c0e9 	CALL SUBOPT_0x1B
006e47 91af      	POP  R26
006e48 91bf      	POP  R27
006e49 918f      	POP  R24
006e4a 919f      	POP  R25
006e4b 940e ddff 	CALL __MULF12
006e4d 91af      	POP  R26
006e4e 91bf      	POP  R27
006e4f 918f      	POP  R24
006e50 919f      	POP  R25
006e51 940e ddaf 	CALL __ADDF12
006e53 937f      	PUSH R23
006e54 936f      	PUSH R22
006e55 93ff      	PUSH R31
006e56 93ef      	PUSH R30
006e57 940e cda7 	CALL SUBOPT_0x21C
006e59 91af      	POP  R26
006e5a 91bf      	POP  R27
006e5b 918f      	POP  R24
006e5c 919f      	POP  R25
                 _0x1A00C9:
006e5d 940e ddaf 	CALL __ADDF12
006e5f 940e cdbf 	CALL SUBOPT_0x21F
                 ; 000D 0150                                         }
                 ; 000D 0151 
                 ; 000D 0152                                         break;
006e61 c05c      	RJMP _0x1A0045
                 ; 000D 0153                                     }
                 ; 000D 0154         default                 :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0063:
006e62 940e c15f 	CALL SUBOPT_0x2E
006e64 f021      	BREQ _0x1A0065
006e65 940e c15f 	CALL SUBOPT_0x2E
006e67 30e3      	CPI  R30,LOW(0x3)
006e68 f481      	BRNE _0x1A0064
                 _0x1A0065:
                 ; 000D 0155                                         //sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]);
                 ; 000D 0156                                         viADCbuffer = 0;
006e69 940e cd01 	CALL SUBOPT_0x207
                 ; 000D 0157                                         for(i=0;i<30;i++){
                 _0x1A0068:
                +
006e6b 312e     +CPI R18 , LOW ( 30 )
006e6c e0e0     +LDI R30 , HIGH ( 30 )
006e6d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,30
006e6e f42c      	BRGE _0x1A0069
                 ; 000D 0158                                             viADCbuffer += read_adc(8+ch);
006e6f 940e cd09 	CALL SUBOPT_0x208
                 ; 000D 0159                                          }
                +
006e71 5f2f     +SUBI R18 , LOW ( - 1 )
006e72 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
006e73 cff7      	RJMP _0x1A0068
                 _0x1A0069:
                 ; 000D 015A                                          //offset =  epTempRef1[ch] - iAD595ADCToTemp(viADCbuffer,30);
                 ; 000D 015B                                          sensor->value = iAD595ADCToTemp(viADCbuffer,30);// + offset;
006e74 940e cd1d 	CALL SUBOPT_0x209
006e76 940e a077 	CALL _iAD595ADCToTemp
006e78 c03d      	RJMP _0x1A00CA
                 ; 000D 015C                                          //printDebug("ADC[%d] Temp C : %f\r\n",ch,iAD595ADCToTemp(viADCbuffer,30));
                 ; 000D 015D                                     }
                 ; 000D 015E                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0064:
006e79 940e c15f 	CALL SUBOPT_0x2E
006e7b 30e1      	CPI  R30,LOW(0x1)
006e7c f459      	BRNE _0x1A006B
                 ; 000D 015F                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epTMECTempOffset;
006e7d 940e cd3c 	CALL SUBOPT_0x20D
006e7f 940e c0e9 	CALL SUBOPT_0x1B
006e81 940e cda0 	CALL SUBOPT_0x21B
                +
006e83 e8a5     +LDI R26 , LOW ( 0x427EEB85 )
006e84 eebb     +LDI R27 , HIGH ( 0x427EEB85 )
006e85 e78e     +LDI R24 , BYTE3 ( 0x427EEB85 )
006e86 e492     +LDI R25 , BYTE4 ( 0x427EEB85 )
                 	__GETD2N 0x427EEB85
006e87 c02c      	RJMP _0x1A00CB
                 ; 000D 0160                                     }
                 ; 000D 0161                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A006B:
006e88 940e c15f 	CALL SUBOPT_0x2E
006e8a 30e2      	CPI  R30,LOW(0x2)
006e8b f591      	BRNE _0x1A006D
                 ; 000D 0162                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 0163                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 0164                                                              epPT100Temp_C;
006e8c 940e cd3c 	CALL SUBOPT_0x20D
006e8e 940e c0e9 	CALL SUBOPT_0x1B
006e90 940e cdb1 	CALL SUBOPT_0x21D
006e92 937f      	PUSH R23
006e93 936f      	PUSH R22
006e94 93ff      	PUSH R31
006e95 93ef      	PUSH R30
006e96 940e cd3c 	CALL SUBOPT_0x20D
006e98 940e c0e9 	CALL SUBOPT_0x1B
006e9a 91af      	POP  R26
006e9b 91bf      	POP  R27
006e9c 918f      	POP  R24
006e9d 919f      	POP  R25
006e9e 940e ddff 	CALL __MULF12
006ea0 937f      	PUSH R23
006ea1 936f      	PUSH R22
006ea2 93ff      	PUSH R31
006ea3 93ef      	PUSH R30
006ea4 940e cd3c 	CALL SUBOPT_0x20D
006ea6 940e c0e9 	CALL SUBOPT_0x1B
006ea8 940e cdb8 	CALL SUBOPT_0x21E
006eaa 91af      	POP  R26
006eab 91bf      	POP  R27
006eac 918f      	POP  R24
006ead 919f      	POP  R25
006eae 940e ddaf 	CALL __ADDF12
                +
006eb0 eea5     +LDI R26 , LOW ( 0xC334E2E5 )
006eb1 eeb2     +LDI R27 , HIGH ( 0xC334E2E5 )
006eb2 e384     +LDI R24 , BYTE3 ( 0xC334E2E5 )
006eb3 ec93     +LDI R25 , BYTE4 ( 0xC334E2E5 )
                 	__GETD2N 0xC334E2E5
                 _0x1A00CB:
006eb4 940e ddaf 	CALL __ADDF12
                 _0x1A00CA:
                +
006eb6 01de     +MOVW R26 , R28
006eb7 5ba4     +SUBI R26 , LOW ( - 76 )
006eb8 4fbf     +SBCI R27 , HIGH ( - 76 )
006eb9 900d     +LD R0 , X +
006eba 91bc     +LD R27 , X
006ebb 2da0     +MOV R26 , R0
                 	__GETW2SX 76
006ebc 940e e039 	CALL __PUTDP1
                 ; 000D 0165 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epPT100TempOffset;
                 ; 000D 0166 //                                        getInterval(adcData[ch], &x_1, &x_2, &y_1, &y_2);
                 ; 000D 0167 //                                        sensor->value = (((adcData[ch] - x_1) * (y_2 - y_1)) / (x_2 - x_1)) + y_1;
                 ; 000D 0168 
                 ; 000D 0169                                         // test
                 ; 000D 016A                                         //printDebug("ADC: %f, Value: %f \r\n", adcData[ch], sensor->value);
                 ; 000D 016B                                         //
                 ; 000D 016C                                     }
                 ; 000D 016D                                     break;
                 _0x1A006D:
                 ; 000D 016E     }
                 _0x1A0045:
                 ; 000D 016F     //printDebug("end read sensor.\r\n");
                 ; 000D 0170     sensor->status  = SENS_NORMAL;
006ebe 940e cd5b 	CALL SUBOPT_0x212
006ec0 9614      	ADIW R26,4
006ec1 e0e0      	LDI  R30,LOW(0)
006ec2 93ec      	ST   X,R30
                 ; 000D 0171 
                 ; 000D 0172     return 0;
006ec3 e0e0      	LDI  R30,LOW(0)
006ec4 e0f0      	LDI  R31,HIGH(0)
                 _0x20E006A:
006ec5 940e e0d7 	CALL __LOADLOCR4
006ec7 96ef      	ADIW R28,63
006ec8 9661      	ADIW R28,17
006ec9 9508      	RET
                 ; 000D 0173 }
                 ;/*============================================================*/
                 ;void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 0175 void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 0176 
                 ; 000D 0177     int i = 0;
                 ; 000D 0178 
                 ; 000D 0179     for(i = 0; i < 15; i++) {
                 ;	adcRaw -> Y+10
                 ;	*x1 -> Y+8
                 ;	*x2 -> Y+6
                 ;	*y1 -> Y+4
                 ;	*y2 -> Y+2
                 ;	i -> R16,R17
                 ; 000D 017A         if(adcRaw <= adcTable[i]) {
                 ; 000D 017B             *x1 = adcTable[i-1];
                 ; 000D 017C             *y1 = tempTable[i-1];
                 ; 000D 017D             *x2 = adcTable[i];
                 ; 000D 017E             *y2 = tempTable[i];
                 ; 000D 017F             break;
                 ; 000D 0180         }
                 ; 000D 0181     }
                 ; 000D 0182 
                 ; 000D 0183     return;
                 ; 000D 0184 }
                 ;/*============================================================*/
                 ;int sensorCalibrate1(int p1, int p2)
                 ; 000D 0187 {
                 _sensorCalibrate1:
                 ; 000D 0188     float p2_raw;
                 ; 000D 0189 
                 ; 000D 018A     if(operating_config.sensorEnable[p1] != 0x01){
006eca 93ba      	ST   -Y,R27
006ecb 93aa      	ST   -Y,R26
006ecc 9724      	SBIW R28,4
                 ;	p1 -> Y+6
                 ;	p2 -> Y+4
                 ;	p2_raw -> Y+0
                +
006ecd ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006ece e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006ecf 940e ce24 	CALL SUBOPT_0x22C
006ed1 91ac      	LD   R26,X
006ed2 30a1      	CPI  R26,LOW(0x1)
006ed3 f061      	BREQ _0x1A0072
                 ; 000D 018B         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p1+1);
                +
006ed4 e0e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 133 ) )
006ed5 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 133 ) )
006ed6 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 133 ) )
006ed7 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 133 ) )
                 	__POINTD1FN _0x1A0000,133
006ed8 940e c79d 	CALL SUBOPT_0x127
006eda 9631      	ADIW R30,1
006edb 940e c637 	CALL SUBOPT_0xE8
                 ; 000D 018C         return -1;
006edd efef      	LDI  R30,LOW(65535)
006ede efff      	LDI  R31,HIGH(65535)
006edf c0b6      	RJMP _0x20E0069
                 ; 000D 018D     }
                 ; 000D 018E     if(operating_config.sensorEnable[p2] != 0x01){
                 _0x1A0072:
                +
006ee0 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006ee1 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006ee2 81ac      	LDD  R26,Y+4
006ee3 81bd      	LDD  R27,Y+4+1
006ee4 940e ce29 	CALL SUBOPT_0x22D
006ee6 f061      	BREQ _0x1A0073
                 ; 000D 018F         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p2+1);
                +
006ee7 e0e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 133 ) )
006ee8 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 133 ) )
006ee9 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 133 ) )
006eea e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 133 ) )
                 	__POINTD1FN _0x1A0000,133
006eeb 940e cbea 	CALL SUBOPT_0x1D9
006eed 9631      	ADIW R30,1
006eee 940e c637 	CALL SUBOPT_0xE8
                 ; 000D 0190         return -1;
006ef0 efef      	LDI  R30,LOW(65535)
006ef1 efff      	LDI  R31,HIGH(65535)
006ef2 c0a3      	RJMP _0x20E0069
                 ; 000D 0191     }
                 ; 000D 0192 
                 ; 000D 0193     if(sensor[p1].status != SENS_NORMAL){
                 _0x1A0073:
006ef3 81ae      	LDD  R26,Y+6
006ef4 81bf      	LDD  R27,Y+6+1
006ef5 940e ce2e 	CALL SUBOPT_0x22E
006ef7 30e0      	CPI  R30,0
006ef8 f089      	BREQ _0x1A0074
                 ; 000D 0194         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p1+1,sensor[p1].status);
                +
006ef9 e3e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 185 ) )
006efa e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 185 ) )
006efb e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 185 ) )
006efc e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 185 ) )
                 	__POINTD1FN _0x1A0000,185
006efd 940e c79d 	CALL SUBOPT_0x127
006eff 940e cccc 	CALL SUBOPT_0x200
006f01 85ae      	LDD  R26,Y+14
006f02 85bf      	LDD  R27,Y+14+1
006f03 940e ce2e 	CALL SUBOPT_0x22E
006f05 940e ce35 	CALL SUBOPT_0x22F
                 ; 000D 0195         return -1;
006f07 efef      	LDI  R30,LOW(65535)
006f08 efff      	LDI  R31,HIGH(65535)
006f09 c08c      	RJMP _0x20E0069
                 ; 000D 0196     }
                 ; 000D 0197     if(sensor[p2].status != SENS_NORMAL){
                 _0x1A0074:
006f0a 81ac      	LDD  R26,Y+4
006f0b 81bd      	LDD  R27,Y+4+1
006f0c 940e ce2e 	CALL SUBOPT_0x22E
006f0e 30e0      	CPI  R30,0
006f0f f089      	BREQ _0x1A0075
                 ; 000D 0198         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p2+1,sensor[p2].status);
                +
006f10 e3e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 185 ) )
006f11 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 185 ) )
006f12 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 185 ) )
006f13 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 185 ) )
                 	__POINTD1FN _0x1A0000,185
006f14 940e cbea 	CALL SUBOPT_0x1D9
006f16 940e cccc 	CALL SUBOPT_0x200
006f18 85ac      	LDD  R26,Y+12
006f19 85bd      	LDD  R27,Y+12+1
006f1a 940e ce2e 	CALL SUBOPT_0x22E
006f1c 940e ce35 	CALL SUBOPT_0x22F
                 ; 000D 0199         return -1;
006f1e efef      	LDI  R30,LOW(65535)
006f1f efff      	LDI  R31,HIGH(65535)
006f20 c075      	RJMP _0x20E0069
                 ; 000D 019A     }
                 ; 000D 019B 
                 ; 000D 019C     epCalType[p2]   = CAL_SELFCOMPARE;
                 _0x1A0075:
006f21 81ac      	LDD  R26,Y+4
006f22 81bd      	LDD  R27,Y+4+1
006f23 5aa8      	SUBI R26,LOW(-_epCalType)
006f24 4fb9      	SBCI R27,HIGH(-_epCalType)
006f25 e0e1      	LDI  R30,LOW(1)
006f26 940e e0a1 	CALL __EEPROMWRB
                 ; 000D 019D 
                 ; 000D 019E     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006f28 940e c15f 	CALL SUBOPT_0x2E
006f2a f021      	BREQ _0x1A0077
006f2b 940e c15f 	CALL SUBOPT_0x2E
006f2d 30e3      	CPI  R30,LOW(0x3)
006f2e f499      	BRNE _0x1A0076
                 _0x1A0077:
                 ; 000D 019F         p2_raw          = (ADC_CONV_FAC*100 * adcData[p2]);
006f2f 940e c17d 	CALL SUBOPT_0x32
006f31 940e c18a 	CALL SUBOPT_0x33
006f33 937f      	PUSH R23
006f34 936f      	PUSH R22
006f35 93ff      	PUSH R31
006f36 93ef      	PUSH R30
006f37 940e ce3a 	CALL SUBOPT_0x230
006f39 940e c0e9 	CALL SUBOPT_0x1B
006f3b 91af      	POP  R26
006f3c 91bf      	POP  R27
006f3d 918f      	POP  R24
006f3e 919f      	POP  R25
006f3f 940e ddff 	CALL __MULF12
006f41 c033      	RJMP _0x1A00CC
                 ; 000D 01A0     }
                 ; 000D 01A1     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0076:
006f42 940e c15f 	CALL SUBOPT_0x2E
006f44 30e1      	CPI  R30,LOW(0x1)
006f45 f439      	BRNE _0x1A007A
                 ; 000D 01A2         p2_raw          = epTMECTempSlope   * adcData[p2];
006f46 940e ce3a 	CALL SUBOPT_0x230
006f48 940e c0e9 	CALL SUBOPT_0x1B
006f4a 940e cda0 	CALL SUBOPT_0x21B
006f4c c028      	RJMP _0x1A00CC
                 ; 000D 01A3     }
                 ; 000D 01A4     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A007A:
006f4d 940e c15f 	CALL SUBOPT_0x2E
006f4f 30e2      	CPI  R30,LOW(0x2)
006f50 f531      	BRNE _0x1A007C
                 ; 000D 01A5         p2_raw          = (epPT100Temp_A    * adcData[p2] * adcData[p2]) +
                 ; 000D 01A6                           (epPT100Temp_B    * adcData[p2]);
006f51 940e ce3a 	CALL SUBOPT_0x230
006f53 940e c0e9 	CALL SUBOPT_0x1B
006f55 940e cdb1 	CALL SUBOPT_0x21D
006f57 937f      	PUSH R23
006f58 936f      	PUSH R22
006f59 93ff      	PUSH R31
006f5a 93ef      	PUSH R30
006f5b 940e ce3a 	CALL SUBOPT_0x230
006f5d 940e c0e9 	CALL SUBOPT_0x1B
006f5f 91af      	POP  R26
006f60 91bf      	POP  R27
006f61 918f      	POP  R24
006f62 919f      	POP  R25
006f63 940e ddff 	CALL __MULF12
006f65 937f      	PUSH R23
006f66 936f      	PUSH R22
006f67 93ff      	PUSH R31
006f68 93ef      	PUSH R30
006f69 940e ce3a 	CALL SUBOPT_0x230
006f6b 940e c0e9 	CALL SUBOPT_0x1B
006f6d 940e cdb8 	CALL SUBOPT_0x21E
006f6f 91af      	POP  R26
006f70 91bf      	POP  R27
006f71 918f      	POP  R24
006f72 919f      	POP  R25
006f73 940e ddaf 	CALL __ADDF12
                 _0x1A00CC:
006f75 940e e054 	CALL __PUTD1S0
                 ; 000D 01A7     }
                 ; 000D 01A8 
                 ; 000D 01A9     epFactor_A[p2]  = 0;
                 _0x1A007C:
006f77 81ec      	LDD  R30,Y+4
006f78 81fd      	LDD  R31,Y+4+1
006f79 940e ce1d 	CALL SUBOPT_0x22B
006f7b 940e ce3e 	CALL SUBOPT_0x231
                 ; 000D 01AA     epFactor_B[p2]  = 0;
006f7d 940e ce47 	CALL SUBOPT_0x232
006f7f 940e ce3e 	CALL SUBOPT_0x231
                 ; 000D 01AB     epFactor_C[p2]  = sensor[p1].value - p2_raw;
006f81 940e ce4e 	CALL SUBOPT_0x233
006f83 93ff      	PUSH R31
006f84 93ef      	PUSH R30
006f85 81ae      	LDD  R26,Y+6
006f86 81bf      	LDD  R27,Y+6+1
006f87 e0e5      	LDI  R30,LOW(5)
006f88 940e df7c 	CALL __MULB1W2U
006f8a 940e c102 	CALL SUBOPT_0x20
006f8c 940e c3e5 	CALL SUBOPT_0x8C
006f8e 940e dda8 	CALL __SUBF12
006f90 91af      	POP  R26
006f91 91bf      	POP  R27
006f92 940e e091 	CALL __EEPROMWRD
                 ; 000D 01AC 
                 ; 000D 01AD     return 0;
006f94 e0e0      	LDI  R30,LOW(0)
006f95 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0069:
006f96 9628      	ADIW R28,8
006f97 9508      	RET
                 ; 000D 01AE }
                 ;/*============================================================*/
                 ;int sensorCalibrate2(int prbId)
                 ; 000D 01B1 {
                 _sensorCalibrate2:
                 ; 000D 01B2     float p2_raw;
                 ; 000D 01B3     float tmpA,tmpB,tmpC;
                 ; 000D 01B4     //int i = 0;
                 ; 000D 01B5     //long viADCbuffer = 0;
                 ; 000D 01B6 
                 ; 000D 01B7     if(epIsPointSet1[prbId] == 0){
006f98 93ba      	ST   -Y,R27
006f99 93aa      	ST   -Y,R26
006f9a 9760      	SBIW R28,16
                 ;	prbId -> Y+16
                 ;	p2_raw -> Y+12
                 ;	tmpA -> Y+8
                 ;	tmpB -> Y+4
                 ;	tmpC -> Y+0
006f9b 89a8      	LDD  R26,Y+16
006f9c 89b9      	LDD  R27,Y+16+1
006f9d 52af      	SUBI R26,LOW(-_epIsPointSet1)
006f9e 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
006f9f 940e e085 	CALL __EEPROMRDB
006fa1 30e0      	CPI  R30,0
006fa2 f461      	BRNE _0x1A007D
                 ; 000D 01B8         printDebug("<sensorCalibrate2> ABORT: sensor ch %d No set point found\r\n",prbId+1);
                +
006fa3 e6ec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 240 ) )
006fa4 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 240 ) )
006fa5 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 240 ) )
006fa6 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 240 ) )
                 	__POINTD1FN _0x1A0000,240
006fa7 940e c632 	CALL SUBOPT_0xE7
006fa9 9631      	ADIW R30,1
006faa 940e c637 	CALL SUBOPT_0xE8
                 ; 000D 01B9         return -1;
006fac efef      	LDI  R30,LOW(65535)
006fad efff      	LDI  R31,HIGH(65535)
006fae c166      	RJMP _0x20E0068
                 ; 000D 01BA     }
                 ; 000D 01BB 
                 ; 000D 01BC     if(epIsPointSet2[prbId] == 0){
                 _0x1A007D:
006faf 89a8      	LDD  R26,Y+16
006fb0 89b9      	LDD  R27,Y+16+1
006fb1 50a2      	SUBI R26,LOW(-_epIsPointSet2)
006fb2 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
006fb3 940e e085 	CALL __EEPROMRDB
006fb5 30e0      	CPI  R30,0
006fb6 f011      	BREQ PC+3
006fb7 940c 702e 	JMP _0x1A007E
                 ; 000D 01BD         printDebug("<sensorCalibrate2> -- CAL_EXTOFFSET --\r\n");
                +
006fb9 eae8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 300 ) )
006fba e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 300 ) )
006fbb e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 300 ) )
006fbc e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 300 ) )
                 	__POINTD1FN _0x1A0000,300
006fbd 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 01BE         epFactor_A[prbId]   = 0;
006fbf 89e8      	LDD  R30,Y+16
006fc0 89f9      	LDD  R31,Y+16+1
006fc1 940e ce1d 	CALL SUBOPT_0x22B
006fc3 940e ce55 	CALL SUBOPT_0x234
                 ; 000D 01BF         epFactor_B[prbId]   = 0;
006fc5 89e8      	LDD  R30,Y+16
006fc6 89f9      	LDD  R31,Y+16+1
006fc7 940e ce47 	CALL SUBOPT_0x232
006fc9 940e ce55 	CALL SUBOPT_0x234
                 ; 000D 01C0 
                 ; 000D 01C1         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006fcb 940e c15f 	CALL SUBOPT_0x2E
006fcd f021      	BREQ _0x1A0080
006fce 940e c15f 	CALL SUBOPT_0x2E
006fd0 30e3      	CPI  R30,LOW(0x3)
006fd1 f489      	BRNE _0x1A007F
                 _0x1A0080:
                 ; 000D 01C2             p2_raw          = (ADC_CONV_FAC*100 * epADCRef1[prbId]);
006fd2 940e c17d 	CALL SUBOPT_0x32
006fd4 940e c18a 	CALL SUBOPT_0x33
006fd6 937f      	PUSH R23
006fd7 936f      	PUSH R22
006fd8 93ff      	PUSH R31
006fd9 93ef      	PUSH R30
006fda 940e ce5c 	CALL SUBOPT_0x235
006fdc 91af      	POP  R26
006fdd 91bf      	POP  R27
006fde 918f      	POP  R24
006fdf 919f      	POP  R25
006fe0 940e ddff 	CALL __MULF12
006fe2 c02b      	RJMP _0x1A00CD
                 ; 000D 01C3 
                 ; 000D 01C4 
                 ; 000D 01C5         }
                 ; 000D 01C6         else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A007F:
006fe3 940e c15f 	CALL SUBOPT_0x2E
006fe5 30e1      	CPI  R30,LOW(0x1)
006fe6 f429      	BRNE _0x1A0083
                 ; 000D 01C7             p2_raw          = epTMECTempSlope   * epADCRef1[prbId];
006fe7 940e ce5c 	CALL SUBOPT_0x235
006fe9 940e cda0 	CALL SUBOPT_0x21B
006feb c022      	RJMP _0x1A00CD
                 ; 000D 01C8         }
                 ; 000D 01C9         else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0083:
006fec 940e c15f 	CALL SUBOPT_0x2E
006fee 30e2      	CPI  R30,LOW(0x2)
006fef f511      	BRNE _0x1A0085
                 ; 000D 01CA             p2_raw          = (epPT100Temp_A    * epADCRef1[prbId] * epADCRef1[prbId]) +
                 ; 000D 01CB                               (epPT100Temp_B    * epADCRef1[prbId]);
006ff0 940e ce5c 	CALL SUBOPT_0x235
006ff2 940e cdb1 	CALL SUBOPT_0x21D
006ff4 937f      	PUSH R23
006ff5 936f      	PUSH R22
006ff6 93ff      	PUSH R31
006ff7 93ef      	PUSH R30
006ff8 940e ce5c 	CALL SUBOPT_0x235
006ffa 91af      	POP  R26
006ffb 91bf      	POP  R27
006ffc 918f      	POP  R24
006ffd 919f      	POP  R25
006ffe 940e ddff 	CALL __MULF12
007000 937f      	PUSH R23
007001 936f      	PUSH R22
007002 93ff      	PUSH R31
007003 93ef      	PUSH R30
007004 940e ce5c 	CALL SUBOPT_0x235
007006 940e cdb8 	CALL SUBOPT_0x21E
007008 91af      	POP  R26
007009 91bf      	POP  R27
00700a 918f      	POP  R24
00700b 919f      	POP  R25
00700c 940e ddaf 	CALL __ADDF12
                 _0x1A00CD:
                +
00700e 87ec     +STD Y + 12 , R30
00700f 87fd     +STD Y + 12 + 1 , R31
007010 876e     +STD Y + 12 + 2 , R22
007011 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 000D 01CC         }
                 ; 000D 01CD 
                 ; 000D 01CE         epFactor_C[prbId]   = epTempRef1[prbId] - p2_raw;
                 _0x1A0085:
007012 89e8      	LDD  R30,Y+16
007013 89f9      	LDD  R31,Y+16+1
007014 940e ce4e 	CALL SUBOPT_0x233
007016 93ff      	PUSH R31
007017 93ef      	PUSH R30
007018 89e8      	LDD  R30,Y+16
007019 89f9      	LDD  R31,Y+16+1
00701a 940e cd97 	CALL SUBOPT_0x21A
00701c 940e c075 	CALL SUBOPT_0xB
00701e 940e dda8 	CALL __SUBF12
007020 91af      	POP  R26
007021 91bf      	POP  R27
007022 940e e091 	CALL __EEPROMWRD
                 ; 000D 01CF         epCalType[prbId]    = CAL_EXTOFFSET;
007024 940e ce67 	CALL SUBOPT_0x236
007026 e0e2      	LDI  R30,LOW(2)
007027 940e e0a1 	CALL __EEPROMWRB
                 ; 000D 01D0         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
007029 940e ce6c 	CALL SUBOPT_0x237
00702b 940e ce72 	CALL SUBOPT_0x238
                 ; 000D 01D1         return 0;
00702d c0e5      	RJMP _0x20E0067
                 ; 000D 01D2     }
                 ; 000D 01D3 
                 ; 000D 01D4     if(epIsPointSet3[prbId] == 0){
                 _0x1A007E:
00702e 89a8      	LDD  R26,Y+16
00702f 89b9      	LDD  R27,Y+16+1
007030 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007031 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007032 940e e085 	CALL __EEPROMRDB
007034 30e0      	CPI  R30,0
007035 f011      	BREQ PC+3
007036 940c 70ac 	JMP _0x1A0086
                 ; 000D 01D5         printDebug("<sensorCalibrate2> -- CAL_EXTLINEAR --\r\n");
                +
007038 efe0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 372 ) )
007039 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 372 ) )
00703a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 372 ) )
00703b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 372 ) )
                 	__POINTD1FN _0x1A0000,372
00703c 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 01D6         epFactor_A[prbId]   = 0;
00703e 89e8      	LDD  R30,Y+16
00703f 89f9      	LDD  R31,Y+16+1
007040 940e ce1d 	CALL SUBOPT_0x22B
007042 940e ce55 	CALL SUBOPT_0x234
                 ; 000D 01D7 
                 ; 000D 01D8         epFactor_B[prbId]   = (epTempRef2[prbId] - epTempRef1[prbId])/(epADCRef2[prbId] - epADCRef1[prbId]);
007044 940e ce79 	CALL SUBOPT_0x239
007046 0fea      	ADD  R30,R26
007047 1ffb      	ADC  R31,R27
007048 93ff      	PUSH R31
007049 93ef      	PUSH R30
00704a 940e ce80 	CALL SUBOPT_0x23A
00704c 937f      	PUSH R23
00704d 936f      	PUSH R22
00704e 93ff      	PUSH R31
00704f 93ef      	PUSH R30
007050 89e8      	LDD  R30,Y+16
007051 89f9      	LDD  R31,Y+16+1
007052 940e cd97 	CALL SUBOPT_0x21A
007054 91af      	POP  R26
007055 91bf      	POP  R27
007056 918f      	POP  R24
007057 919f      	POP  R25
007058 940e cd89 	CALL SUBOPT_0x218
00705a 937f      	PUSH R23
00705b 936f      	PUSH R22
00705c 93ff      	PUSH R31
00705d 93ef      	PUSH R30
00705e 940e ce8b 	CALL SUBOPT_0x23B
007060 937f      	PUSH R23
007061 936f      	PUSH R22
007062 93ff      	PUSH R31
007063 93ef      	PUSH R30
007064 940e ce5c 	CALL SUBOPT_0x235
007066 91af      	POP  R26
007067 91bf      	POP  R27
007068 918f      	POP  R24
007069 919f      	POP  R25
00706a 940e cd89 	CALL SUBOPT_0x218
00706c 91af      	POP  R26
00706d 91bf      	POP  R27
00706e 918f      	POP  R24
00706f 919f      	POP  R25
007070 940e de4d 	CALL __DIVF21
007072 91af      	POP  R26
007073 91bf      	POP  R27
007074 940e e091 	CALL __EEPROMWRD
                 ; 000D 01D9         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
007076 940e ce96 	CALL SUBOPT_0x23C
007078 940e ce47 	CALL SUBOPT_0x232
00707a 940e c856 	CALL SUBOPT_0x14A
                 ; 000D 01DA 
                 ; 000D 01DB         epFactor_C[prbId]   = epTempRef2[prbId] - (epFactor_B[prbId] * epADCRef2[prbId]);
00707c 89e8      	LDD  R30,Y+16
00707d 89f9      	LDD  R31,Y+16+1
00707e 940e ce4e 	CALL SUBOPT_0x233
007080 93ff      	PUSH R31
007081 93ef      	PUSH R30
007082 940e ce80 	CALL SUBOPT_0x23A
007084 937f      	PUSH R23
007085 936f      	PUSH R22
007086 93ff      	PUSH R31
007087 93ef      	PUSH R30
007088 89e8      	LDD  R30,Y+16
007089 89f9      	LDD  R31,Y+16+1
00708a 940e ce47 	CALL SUBOPT_0x232
00708c 940e e07d 	CALL __EEPROMRDD
00708e 937f      	PUSH R23
00708f 936f      	PUSH R22
007090 93ff      	PUSH R31
007091 93ef      	PUSH R30
007092 940e ce8b 	CALL SUBOPT_0x23B
007094 91af      	POP  R26
007095 91bf      	POP  R27
007096 918f      	POP  R24
007097 919f      	POP  R25
007098 940e ddff 	CALL __MULF12
00709a 91af      	POP  R26
00709b 91bf      	POP  R27
00709c 918f      	POP  R24
00709d 919f      	POP  R25
00709e 940e cd89 	CALL SUBOPT_0x218
0070a0 91af      	POP  R26
0070a1 91bf      	POP  R27
0070a2 940e e091 	CALL __EEPROMWRD
                 ; 000D 01DC         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
0070a4 940e ce6c 	CALL SUBOPT_0x237
0070a6 940e ce72 	CALL SUBOPT_0x238
                 ; 000D 01DD 
                 ; 000D 01DE         epCalType[prbId]    = CAL_EXTLINEAR;
0070a8 940e ce67 	CALL SUBOPT_0x236
0070aa e0e3      	LDI  R30,LOW(3)
0070ab c065      	RJMP _0x1A00CE
                 ; 000D 01DF     }
                 ; 000D 01E0     else{
                 _0x1A0086:
                 ; 000D 01E1         printDebug("<sensorCalibrate2> -- CAL_EXTPOLYNOMIAL --\r\n");
                +
0070ac e3e8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 444 ) )
0070ad e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 444 ) )
0070ae e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 444 ) )
0070af e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 444 ) )
                 	__POINTD1FN _0x1A0000,444
0070b0 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 01E2 
                 ; 000D 01E3         gaussian(epADCRef1[prbId],  epADCRef2[prbId],  epADCRef3[prbId],
                 ; 000D 01E4                  epTempRef1[prbId], epTempRef2[prbId], epTempRef3[prbId],
                 ; 000D 01E5                  &tmpA, &tmpB, &tmpC);
0070b2 940e ce5c 	CALL SUBOPT_0x235
0070b4 940e c632 	CALL SUBOPT_0xE7
0070b6 940e ce9c 	CALL SUBOPT_0x23D
0070b8 940e cea1 	CALL SUBOPT_0x23E
0070ba 8de8      	LDD  R30,Y+24
0070bb 8df9      	LDD  R31,Y+24+1
0070bc 940e ce02 	CALL SUBOPT_0x227
0070be 940e c65c 	CALL SUBOPT_0xF0
0070c0 940e cd97 	CALL SUBOPT_0x21A
0070c2 940e e05e 	CALL __PUTPARD1
0070c4 a1e8      	LDD  R30,Y+32
0070c5 a1f9      	LDD  R31,Y+32+1
0070c6 940e cea8 	CALL SUBOPT_0x23F
0070c8 940e cea1 	CALL SUBOPT_0x23E
0070ca a1ec      	LDD  R30,Y+36
0070cb a1fd      	LDD  R31,Y+36+1
0070cc 940e ce0b 	CALL SUBOPT_0x228
0070ce 940e e05e 	CALL __PUTPARD1
0070d0 01fe      	MOVW R30,R28
0070d1 96b0      	ADIW R30,32
0070d2 93fa      	ST   -Y,R31
0070d3 93ea      	ST   -Y,R30
0070d4 01fe      	MOVW R30,R28
0070d5 967e      	ADIW R30,30
0070d6 93fa      	ST   -Y,R31
0070d7 93ea      	ST   -Y,R30
0070d8 01de      	MOVW R26,R28
0070d9 965c      	ADIW R26,28
0070da 940e 9fd3 	CALL _gaussian
                 ; 000D 01E6 
                 ; 000D 01E7         epFactor_A[prbId]   = tmpA;
0070dc 89e8      	LDD  R30,Y+16
0070dd 89f9      	LDD  R31,Y+16+1
0070de e9a5      	LDI  R26,LOW(_epFactor_A)
0070df e0b5      	LDI  R27,HIGH(_epFactor_A)
0070e0 940e df05 	CALL __LSLW2
0070e2 0fae      	ADD  R26,R30
0070e3 1fbf      	ADC  R27,R31
0070e4 940e c24c 	CALL SUBOPT_0x4F
0070e6 940e e091 	CALL __EEPROMWRD
                 ; 000D 01E8         epFactor_B[prbId]   = tmpB;
0070e8 940e ce79 	CALL SUBOPT_0x239
0070ea 0fae      	ADD  R26,R30
0070eb 1fbf      	ADC  R27,R31
0070ec 940e c3d2 	CALL SUBOPT_0x89
0070ee 940e e091 	CALL __EEPROMWRD
                 ; 000D 01E9         epFactor_C[prbId]   = tmpC;
0070f0 89e8      	LDD  R30,Y+16
0070f1 89f9      	LDD  R31,Y+16+1
0070f2 ebad      	LDI  R26,LOW(_epFactor_C)
0070f3 e0b5      	LDI  R27,HIGH(_epFactor_C)
0070f4 940e cead 	CALL SUBOPT_0x240
0070f6 940e c3c6 	CALL SUBOPT_0x87
0070f8 940e e091 	CALL __EEPROMWRD
                 ; 000D 01EA 
                 ; 000D 01EB         printDebug("<sensorCalibrate2> --A--> %f\r\n", epFactor_A[prbId]);
                +
0070fa e6e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 489 ) )
0070fb e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 489 ) )
0070fc e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 489 ) )
0070fd e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 489 ) )
                 	__POINTD1FN _0x1A0000,489
0070fe 940e c632 	CALL SUBOPT_0xE7
007100 940e ce1d 	CALL SUBOPT_0x22B
007102 940e c856 	CALL SUBOPT_0x14A
                 ; 000D 01EC         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
007104 940e ce96 	CALL SUBOPT_0x23C
007106 940e ce47 	CALL SUBOPT_0x232
007108 940e c856 	CALL SUBOPT_0x14A
                 ; 000D 01ED         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
00710a 940e ce6c 	CALL SUBOPT_0x237
00710c 940e ce72 	CALL SUBOPT_0x238
                 ; 000D 01EE 
                 ; 000D 01EF 
                 ; 000D 01F0 
                 ; 000D 01F1         epCalType[prbId]    = CAL_EXTPOLYNOMIAL;
00710e 940e ce67 	CALL SUBOPT_0x236
007110 e0e4      	LDI  R30,LOW(4)
                 _0x1A00CE:
007111 940e e0a1 	CALL __EEPROMWRB
                 ; 000D 01F2     }
                 ; 000D 01F3 
                 ; 000D 01F4     return 0;
                 _0x20E0067:
007113 e0e0      	LDI  R30,LOW(0)
007114 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
007115 9662      	ADIW R28,18
007116 9508      	RET
                 ; 000D 01F5 }
                 ;/*============================================================*/
                 ;int sensorGetCurrentSetPoint(int ch,int pnt, unsigned char *buf)
                 ; 000D 01F8 {
                 _sensorGetCurrentSetPoint:
                 ; 000D 01F9     unsigned char   valStr[10];
                 ; 000D 01FA     float           valTmp;
                 ; 000D 01FB     //signed int      val;
                 ; 000D 01FC     int             i;
                 ; 000D 01FD 
                 ; 000D 01FE     if(pnt == CALPOINT(1)){
007117 93ba      	ST   -Y,R27
007118 93aa      	ST   -Y,R26
007119 972e      	SBIW R28,14
00711a 931a      	ST   -Y,R17
00711b 930a      	ST   -Y,R16
                 ;	ch -> Y+20
                 ;	pnt -> Y+18
                 ;	*buf -> Y+16
                 ;	valStr -> Y+6
                 ;	valTmp -> Y+2
                 ;	i -> R16,R17
00711c 89aa      	LDD  R26,Y+18
00711d 89bb      	LDD  R27,Y+18+1
00711e 36a5      	CPI  R26,LOW(0x65)
00711f e0e0      	LDI  R30,HIGH(0x65)
007120 07be      	CPC  R27,R30
007121 f551      	BRNE _0x1A0088
                 ; 000D 01FF         if(epIsPointSet1[ch] == 1){
007122 89ac      	LDD  R26,Y+20
007123 89bd      	LDD  R27,Y+20+1
007124 52af      	SUBI R26,LOW(-_epIsPointSet1)
007125 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
007126 940e e085 	CALL __EEPROMRDB
007128 30e1      	CPI  R30,LOW(0x1)
007129 f4b9      	BRNE _0x1A0089
                 ; 000D 0200             valTmp  = epTempRef1[ch];
00712a 89ec      	LDD  R30,Y+20
00712b 89fd      	LDD  R31,Y+20+1
00712c 940e cd97 	CALL SUBOPT_0x21A
00712e 940e c4de 	CALL SUBOPT_0xB1
                 ; 000D 0201             printDebug("<sensorGetCurrentSetPoint> tempRef1 = [%f][%f]\r\n",epTempRef1[ch],valTmp);
                +
007130 e8e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 520 ) )
007131 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 520 ) )
007132 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 520 ) )
007133 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 520 ) )
                 	__POINTD1FN _0x1A0000,520
007134 940e ceb2 	CALL SUBOPT_0x241
007136 940e cd97 	CALL SUBOPT_0x21A
007138 940e c27f 	CALL SUBOPT_0x57
00713a 940e c108 	CALL SUBOPT_0x21
                 ; 000D 0202             ftoa(valTmp,2,valStr);
00713c 940e c658 	CALL SUBOPT_0xEF
00713e 940e ceb7 	CALL SUBOPT_0x242
                 ; 000D 0203             //val = (epTempRef1[ch] * 100);
                 ; 000D 0204         }
                 ; 000D 0205         else{
007140 c00a      	RJMP _0x1A008A
                 _0x1A0089:
                 ; 000D 0206             printDebug("<sensorGetCurrentSetPoint> tempRef1 not set [0.00]\r\n");
                +
007141 ebe5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 569 ) )
007142 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 569 ) )
007143 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 569 ) )
007144 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 569 ) )
                 	__POINTD1FN _0x1A0000,569
007145 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 0207             sprintf(valStr,"0.00");                 //val = 0;
007147 940e c27a 	CALL SUBOPT_0x56
007149 940e cebd 	CALL SUBOPT_0x243
                 ; 000D 0208         }
                 _0x1A008A:
                 ; 000D 0209     }
                 ; 000D 020A     else if(pnt == CALPOINT(2)){
00714b c071      	RJMP _0x1A008B
                 _0x1A0088:
00714c 89aa      	LDD  R26,Y+18
00714d 89bb      	LDD  R27,Y+18+1
00714e 36a6      	CPI  R26,LOW(0x66)
00714f e0e0      	LDI  R30,HIGH(0x66)
007150 07be      	CPC  R27,R30
007151 f591      	BRNE _0x1A008C
                 ; 000D 020B         if(epIsPointSet2[ch] == 1){
007152 89ac      	LDD  R26,Y+20
007153 89bd      	LDD  R27,Y+20+1
007154 50a2      	SUBI R26,LOW(-_epIsPointSet2)
007155 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
007156 940e e085 	CALL __EEPROMRDB
007158 30e1      	CPI  R30,LOW(0x1)
007159 f4f9      	BRNE _0x1A008D
                 ; 000D 020C             valTmp  = epTempRef2[ch];
00715a 89ec      	LDD  R30,Y+20
00715b 89fd      	LDD  R31,Y+20+1
00715c 940e cea8 	CALL SUBOPT_0x23F
00715e 0fae      	ADD  R26,R30
00715f 1fbf      	ADC  R27,R31
007160 940e e07d 	CALL __EEPROMRDD
007162 940e c4de 	CALL SUBOPT_0xB1
                 ; 000D 020D             printDebug("<sensorGetCurrentSetPoint> tempRef2 = [%f][%f]\r\n",epTempRef2[ch],valTmp);
                +
007164 eeef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 627 ) )
007165 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 627 ) )
007166 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 627 ) )
007167 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 627 ) )
                 	__POINTD1FN _0x1A0000,627
007168 940e ceb2 	CALL SUBOPT_0x241
00716a 940e cea8 	CALL SUBOPT_0x23F
00716c 0fae      	ADD  R26,R30
00716d 1fbf      	ADC  R27,R31
00716e 940e e07d 	CALL __EEPROMRDD
007170 940e c27f 	CALL SUBOPT_0x57
007172 940e c108 	CALL SUBOPT_0x21
                 ; 000D 020E             ftoa(valTmp,2,valStr);
007174 940e c658 	CALL SUBOPT_0xEF
007176 940e ceb7 	CALL SUBOPT_0x242
                 ; 000D 020F             //val = (epTempRef1[ch] * 100);
                 ; 000D 0210         }
                 ; 000D 0211         else{
007178 c00a      	RJMP _0x1A008E
                 _0x1A008D:
                 ; 000D 0212             printDebug("<sensorGetCurrentSetPoint> tempRef2 not set [0.00]\r\n");
                +
007179 e2e0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 676 ) )
00717a e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 676 ) )
00717b e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 676 ) )
00717c e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 676 ) )
                 	__POINTD1FN _0x1A0000,676
00717d 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 0213             sprintf(valStr,"0.00");                 //val = 0;
00717f 940e c27a 	CALL SUBOPT_0x56
007181 940e cebd 	CALL SUBOPT_0x243
                 ; 000D 0214         }
                 _0x1A008E:
                 ; 000D 0215         /*
                 ; 000D 0216         if(epIsPointSet2[ch] == 1){ val = (epTempRef2[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef2[ch]);}
                 ; 000D 0217         else{                       val = 0;        }
                 ; 000D 0218         */
                 ; 000D 0219     }
                 ; 000D 021A     else if(pnt == CALPOINT(3)){
007183 c039      	RJMP _0x1A008F
                 _0x1A008C:
007184 89aa      	LDD  R26,Y+18
007185 89bb      	LDD  R27,Y+18+1
007186 36a7      	CPI  R26,LOW(0x67)
007187 e0e0      	LDI  R30,HIGH(0x67)
007188 07be      	CPC  R27,R30
007189 f551      	BRNE _0x1A0090
                 ; 000D 021B         if(epIsPointSet3[ch] == 1){
00718a 89ac      	LDD  R26,Y+20
00718b 89bd      	LDD  R27,Y+20+1
00718c 5da5      	SUBI R26,LOW(-_epIsPointSet3)
00718d 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
00718e 940e e085 	CALL __EEPROMRDB
007190 30e1      	CPI  R30,LOW(0x1)
007191 f4b9      	BRNE _0x1A0091
                 ; 000D 021C             valTmp  = epTempRef3[ch];
007192 89ec      	LDD  R30,Y+20
007193 89fd      	LDD  R31,Y+20+1
007194 940e ce0b 	CALL SUBOPT_0x228
007196 940e c4de 	CALL SUBOPT_0xB1
                 ; 000D 021D             printDebug("<sensorGetCurrentSetPoint> tempRef3 = [%f][%f]\r\n",epTempRef3[ch],valTmp);
                +
007198 e5e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 729 ) )
007199 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 729 ) )
00719a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 729 ) )
00719b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 729 ) )
                 	__POINTD1FN _0x1A0000,729
00719c 940e ceb2 	CALL SUBOPT_0x241
00719e 940e ce0b 	CALL SUBOPT_0x228
0071a0 940e c27f 	CALL SUBOPT_0x57
0071a2 940e c108 	CALL SUBOPT_0x21
                 ; 000D 021E             ftoa(valTmp,2,valStr);
0071a4 940e c658 	CALL SUBOPT_0xEF
0071a6 940e ceb7 	CALL SUBOPT_0x242
                 ; 000D 021F             //val = (epTempRef1[ch] * 100);
                 ; 000D 0220         }
                 ; 000D 0221         else{
0071a8 c00a      	RJMP _0x1A0092
                 _0x1A0091:
                 ; 000D 0222             printDebug("<sensorGetCurrentSetPoint> tempRef3 not set [0.00]\r\n");
                +
0071a9 e8e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 778 ) )
0071aa e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 778 ) )
0071ab e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 778 ) )
0071ac e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 778 ) )
                 	__POINTD1FN _0x1A0000,778
0071ad 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 0223             sprintf(valStr,"0.00");                 //val = 0;
0071af 940e c27a 	CALL SUBOPT_0x56
0071b1 940e cebd 	CALL SUBOPT_0x243
                 ; 000D 0224         }
                 _0x1A0092:
                 ; 000D 0225         /*
                 ; 000D 0226         if(epIsPointSet3[ch] == 1){ val = (epTempRef3[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef3[ch]);}
                 ; 000D 0227         else{                       val = 0;        }
                 ; 000D 0228         */
                 ; 000D 0229     }
                 ; 000D 022A     else{
0071b3 c009      	RJMP _0x1A0093
                 _0x1A0090:
                 ; 000D 022B         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
0071b4 940e cec8 	CALL SUBOPT_0x244
0071b6 89ee      	LDD  R30,Y+22
0071b7 89ff      	LDD  R31,Y+22+1
0071b8 940e c637 	CALL SUBOPT_0xE8
                 ; 000D 022C         return -1;
0071ba efef      	LDI  R30,LOW(65535)
0071bb efff      	LDI  R31,HIGH(65535)
0071bc c0d8      	RJMP _0x20E0066
                 ; 000D 022D     }
                 _0x1A0093:
                 _0x1A008F:
                 _0x1A008B:
                 ; 000D 022E     //printDebug("<sensorGetCurrentSetPoint> read val = [%d]\r\n",val);
                 ; 000D 022F     printDebug("<sensorGetCurrentSetPoint> read val(%d) = [%s]\r\n",strlen(valStr),valStr);
                +
0071bd efe3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 887 ) )
0071be e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 887 ) )
0071bf e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 887 ) )
0071c0 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 887 ) )
                 	__POINTD1FN _0x1A0000,887
0071c1 940e e05e 	CALL __PUTPARD1
0071c3 01de      	MOVW R26,R28
0071c4 961a      	ADIW R26,10
0071c5 940e a5c7 	CALL _strlen
0071c7 940e c191 	CALL SUBOPT_0x34
0071c9 01fe      	MOVW R30,R28
0071ca 963e      	ADIW R30,14
0071cb 940e c80b 	CALL SUBOPT_0x13D
                 ; 000D 0230 
                 ; 000D 0231     if(valStr[0] == '-'){
0071cd 81ae      	LDD  R26,Y+6
0071ce 32ad      	CPI  R26,LOW(0x2D)
0071cf f011      	BREQ PC+3
0071d0 940c 7223 	JMP _0x1A0094
                 ; 000D 0232         buf[0] = 1;
0071d2 89a8      	LDD  R26,Y+16
0071d3 89b9      	LDD  R27,Y+16+1
0071d4 e0e1      	LDI  R30,LOW(1)
0071d5 93ec      	ST   X,R30
                 ; 000D 0233         if(strlen(valStr) == 7){
0071d6 940e cecf 	CALL SUBOPT_0x245
0071d8 30e7      	CPI  R30,LOW(0x7)
0071d9 e0a0      	LDI  R26,HIGH(0x7)
0071da 07fa      	CPC  R31,R26
0071db f499      	BRNE _0x1A0095
                 ; 000D 0234             buf[1]  = valStr[1] - 0x30;     buf[2]  = valStr[2] - 0x30;     buf[3]  = valStr[3] - 0x30;
0071dc 81ef      	LDD  R30,Y+7
0071dd 53e0      	SUBI R30,LOW(48)
                +
0071de 89a8     +LDD R26 , Y + 16
0071df 89b9     +LDD R27 , Y + 16 + 1
0071e0 9611     +ADIW R26 , 1
0071e1 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
0071e2 85e8      	LDD  R30,Y+8
0071e3 940e ced3 	CALL SUBOPT_0x246
0071e5 85e9      	LDD  R30,Y+9
0071e6 940e ced9 	CALL SUBOPT_0x247
                 ; 000D 0235             buf[4]  = valStr[5] - 0x30;     buf[5]  = valStr[6] - 0x30;
0071e8 85eb      	LDD  R30,Y+11
0071e9 940e cedf 	CALL SUBOPT_0x248
0071eb 85ec      	LDD  R30,Y+12
0071ec 940e cee5 	CALL SUBOPT_0x249
                 ; 000D 0236         }
                 ; 000D 0237         else if(strlen(valStr) == 6){
0071ee c033      	RJMP _0x1A0096
                 _0x1A0095:
0071ef 940e cecf 	CALL SUBOPT_0x245
0071f1 30e6      	CPI  R30,LOW(0x6)
0071f2 e0a0      	LDI  R26,HIGH(0x6)
0071f3 07fa      	CPC  R31,R26
0071f4 f479      	BRNE _0x1A0097
                 ; 000D 0238             buf[1]  = 0;                    buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
0071f5 940e ceeb 	CALL SUBOPT_0x24A
0071f7 81ef      	LDD  R30,Y+7
0071f8 940e ced3 	CALL SUBOPT_0x246
0071fa 85e8      	LDD  R30,Y+8
0071fb 940e ced9 	CALL SUBOPT_0x247
                 ; 000D 0239             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
0071fd 85ea      	LDD  R30,Y+10
0071fe 940e cedf 	CALL SUBOPT_0x248
007200 85eb      	LDD  R30,Y+11
007201 940e cee5 	CALL SUBOPT_0x249
                 ; 000D 023A         }
                 ; 000D 023B         else if(strlen(valStr) == 5){
007203 c01e      	RJMP _0x1A0098
                 _0x1A0097:
007204 940e cecf 	CALL SUBOPT_0x245
007206 30e5      	CPI  R30,LOW(0x5)
007207 e0a0      	LDI  R26,HIGH(0x5)
007208 07fa      	CPC  R31,R26
007209 f489      	BRNE _0x1A0099
                 ; 000D 023C             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[1] - 0x30;
00720a 940e ceeb 	CALL SUBOPT_0x24A
00720c 89a8      	LDD  R26,Y+16
00720d 89b9      	LDD  R27,Y+16+1
00720e 9612      	ADIW R26,2
00720f e0e0      	LDI  R30,LOW(0)
007210 93ec      	ST   X,R30
007211 81ef      	LDD  R30,Y+7
007212 940e ced9 	CALL SUBOPT_0x247
                 ; 000D 023D             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
007214 85e9      	LDD  R30,Y+9
007215 940e cedf 	CALL SUBOPT_0x248
007217 85ea      	LDD  R30,Y+10
007218 940e cee5 	CALL SUBOPT_0x249
                 ; 000D 023E         }
                 ; 000D 023F         else{
00721a c007      	RJMP _0x1A009A
                 _0x1A0099:
                 ; 000D 0240             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
00721b 940e cef1 	CALL SUBOPT_0x24B
00721d 940e c0a5 	CALL SUBOPT_0x12
                 ; 000D 0241             return -1;
00721f efef      	LDI  R30,LOW(65535)
007220 efff      	LDI  R31,HIGH(65535)
007221 c073      	RJMP _0x20E0066
                 ; 000D 0242         }
                 _0x1A009A:
                 _0x1A0098:
                 _0x1A0096:
                 ; 000D 0243     }
                 ; 000D 0244     else{
007222 c050      	RJMP _0x1A009B
                 _0x1A0094:
                 ; 000D 0245         buf[0] = 0;
007223 89a8      	LDD  R26,Y+16
007224 89b9      	LDD  R27,Y+16+1
007225 e0e0      	LDI  R30,LOW(0)
007226 93ec      	ST   X,R30
                 ; 000D 0246         if(strlen(valStr) == 6){
007227 940e cecf 	CALL SUBOPT_0x245
007229 30e6      	CPI  R30,LOW(0x6)
00722a e0a0      	LDI  R26,HIGH(0x6)
00722b 07fa      	CPC  R31,R26
00722c f499      	BRNE _0x1A009C
                 ; 000D 0247             buf[1]  = valStr[0] - 0x30;     buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
00722d 81ee      	LDD  R30,Y+6
00722e 53e0      	SUBI R30,LOW(48)
                +
00722f 89a8     +LDD R26 , Y + 16
007230 89b9     +LDD R27 , Y + 16 + 1
007231 9611     +ADIW R26 , 1
007232 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
007233 81ef      	LDD  R30,Y+7
007234 940e ced3 	CALL SUBOPT_0x246
007236 85e8      	LDD  R30,Y+8
007237 940e ced9 	CALL SUBOPT_0x247
                 ; 000D 0248             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
007239 85ea      	LDD  R30,Y+10
00723a 940e cedf 	CALL SUBOPT_0x248
00723c 85eb      	LDD  R30,Y+11
00723d 940e cee5 	CALL SUBOPT_0x249
                 ; 000D 0249         }
                 ; 000D 024A         else if(strlen(valStr) == 5){
00723f c033      	RJMP _0x1A009D
                 _0x1A009C:
007240 940e cecf 	CALL SUBOPT_0x245
007242 30e5      	CPI  R30,LOW(0x5)
007243 e0a0      	LDI  R26,HIGH(0x5)
007244 07fa      	CPC  R31,R26
007245 f479      	BRNE _0x1A009E
                 ; 000D 024B             buf[1]  = 0;                    buf[2]  = valStr[0] - 0x30;     buf[3]  = valStr[1] - 0x30;
007246 940e ceeb 	CALL SUBOPT_0x24A
007248 81ee      	LDD  R30,Y+6
007249 940e ced3 	CALL SUBOPT_0x246
00724b 81ef      	LDD  R30,Y+7
00724c 940e ced9 	CALL SUBOPT_0x247
                 ; 000D 024C             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
00724e 85e9      	LDD  R30,Y+9
00724f 940e cedf 	CALL SUBOPT_0x248
007251 85ea      	LDD  R30,Y+10
007252 940e cee5 	CALL SUBOPT_0x249
                 ; 000D 024D         }
                 ; 000D 024E         else if(strlen(valStr) == 4){
007254 c01e      	RJMP _0x1A009F
                 _0x1A009E:
007255 940e cecf 	CALL SUBOPT_0x245
007257 30e4      	CPI  R30,LOW(0x4)
007258 e0a0      	LDI  R26,HIGH(0x4)
007259 07fa      	CPC  R31,R26
00725a f489      	BRNE _0x1A00A0
                 ; 000D 024F             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[0] - 0x30;
00725b 940e ceeb 	CALL SUBOPT_0x24A
00725d 89a8      	LDD  R26,Y+16
00725e 89b9      	LDD  R27,Y+16+1
00725f 9612      	ADIW R26,2
007260 e0e0      	LDI  R30,LOW(0)
007261 93ec      	ST   X,R30
007262 81ee      	LDD  R30,Y+6
007263 940e ced9 	CALL SUBOPT_0x247
                 ; 000D 0250             buf[4]  = valStr[2] - 0x30;     buf[5]  = valStr[3] - 0x30;
007265 85e8      	LDD  R30,Y+8
007266 940e cedf 	CALL SUBOPT_0x248
007268 85e9      	LDD  R30,Y+9
007269 940e cee5 	CALL SUBOPT_0x249
                 ; 000D 0251         }
                 ; 000D 0252         else{
00726b c007      	RJMP _0x1A00A1
                 _0x1A00A0:
                 ; 000D 0253             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
00726c 940e cef1 	CALL SUBOPT_0x24B
00726e 940e c0a5 	CALL SUBOPT_0x12
                 ; 000D 0254             return -1;
007270 efef      	LDI  R30,LOW(65535)
007271 efff      	LDI  R31,HIGH(65535)
007272 c022      	RJMP _0x20E0066
                 ; 000D 0255         }
                 _0x1A00A1:
                 _0x1A009F:
                 _0x1A009D:
                 ; 000D 0256     }
                 _0x1A009B:
                 ; 000D 0257 
                 ; 000D 0258     printDebug("<sensorGetCurrentSetPoint> buf read");
                +
007273 e5ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 994 ) )
007274 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 994 ) )
007275 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 994 ) )
007276 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 994 ) )
                 	__POINTD1FN _0x1A0000,994
007277 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 0259     for(i=0;i<6;i++){
                +
007279 e000     +LDI R16 , LOW ( 0 )
00727a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A00A3:
                +
00727b 3006     +CPI R16 , LOW ( 6 )
00727c e0e0     +LDI R30 , HIGH ( 6 )
00727d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
00727e f474      	BRGE _0x1A00A4
                 ; 000D 025A         printDebug("[%d]",buf[i]);
                +
00727f e8e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1030 ) )
007280 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1030 ) )
007281 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1030 ) )
007282 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1030 ) )
                 	__POINTD1FN _0x1A0000,1030
007283 940e e05e 	CALL __PUTPARD1
007285 01f8      	MOVW R30,R16
007286 89ac      	LDD  R26,Y+20
007287 89bd      	LDD  R27,Y+20+1
007288 940e c9d4 	CALL SUBOPT_0x182
                 ; 000D 025B     }
                +
00728a 5f0f     +SUBI R16 , LOW ( - 1 )
00728b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00728c cfee      	RJMP _0x1A00A3
                 _0x1A00A4:
                 ; 000D 025C     printDebug("\r\n");
                +
00728d eaed     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 49 ) )
00728e e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 49 ) )
00728f e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 49 ) )
007290 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 49 ) )
                 	__POINTD1FN _0x1A0000,49
007291 940e c02f 	CALL SUBOPT_0x3
                 ; 000D 025D 
                 ; 000D 025E     return 0;
007293 e0e0      	LDI  R30,LOW(0)
007294 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0066:
007295 8119      	LDD  R17,Y+1
007296 8108      	LDD  R16,Y+0
007297 9666      	ADIW R28,22
007298 9508      	RET
                 ; 000D 025F }
                 ;/*============================================================*/
                 ;int sensorSetCurrentSetPoint(int ch,int pnt,unsigned char *buf)
                 ; 000D 0262 {
                 _sensorSetCurrentSetPoint:
                 ; 000D 0263     float   val=0;
                 ; 000D 0264     long viADCbuffer = 0;
                 ; 000D 0265     int i = 0;
                 ; 000D 0266 
                 ; 000D 0267     if(operating_config.sensorEnable[ch] != 0x01){
007299 93ba      	ST   -Y,R27
00729a 93aa      	ST   -Y,R26
00729b 9728      	SBIW R28,8
00729c 940e cefb 	CALL SUBOPT_0x24C
00729e e0e0      	LDI  R30,LOW(0)
00729f 83eb      	STD  Y+3,R30
0072a0 83ec      	STD  Y+4,R30
0072a1 83ed      	STD  Y+5,R30
0072a2 83ee      	STD  Y+6,R30
0072a3 83ef      	STD  Y+7,R30
0072a4 940e c85c 	CALL SUBOPT_0x14B
                 ;	ch -> Y+14
                 ;	pnt -> Y+12
                 ;	*buf -> Y+10
                 ;	val -> Y+6
                 ;	viADCbuffer -> Y+2
                 ;	i -> R16,R17
                +
0072a6 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
0072a7 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
0072a8 85ae      	LDD  R26,Y+14
0072a9 85bf      	LDD  R27,Y+14+1
0072aa 940e ce29 	CALL SUBOPT_0x22D
0072ac f061      	BREQ _0x1A00A5
                 ; 000D 0268         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d is disable\r\n",ch+1);
                +
0072ad e8e7     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1035 ) )
0072ae e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1035 ) )
0072af e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1035 ) )
0072b0 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1035 ) )
                 	__POINTD1FN _0x1A0000,1035
0072b1 940e cf00 	CALL SUBOPT_0x24D
0072b3 9631      	ADIW R30,1
0072b4 940e c637 	CALL SUBOPT_0xE8
                 ; 000D 0269         return -1;
0072b6 efef      	LDI  R30,LOW(65535)
0072b7 efff      	LDI  R31,HIGH(65535)
0072b8 c159      	RJMP _0x20E0065
                 ; 000D 026A     }
                 ; 000D 026B 
                 ; 000D 026C     if(sensor[ch].status != SENS_NORMAL){
                 _0x1A00A5:
0072b9 85ae      	LDD  R26,Y+14
0072ba 85bf      	LDD  R27,Y+14+1
0072bb 940e ce2e 	CALL SUBOPT_0x22E
0072bd 30e0      	CPI  R30,0
0072be f089      	BREQ _0x1A00A6
                 ; 000D 026D         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d error(0x%02X)\r\n",ch+1,sensor[ch].status);
                +
0072bf ece3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1095 ) )
0072c0 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1095 ) )
0072c1 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1095 ) )
0072c2 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1095 ) )
                 	__POINTD1FN _0x1A0000,1095
0072c3 940e cf00 	CALL SUBOPT_0x24D
0072c5 940e cccc 	CALL SUBOPT_0x200
0072c7 89ae      	LDD  R26,Y+22
0072c8 89bf      	LDD  R27,Y+22+1
0072c9 940e ce2e 	CALL SUBOPT_0x22E
0072cb 940e ce35 	CALL SUBOPT_0x22F
                 ; 000D 026E         return -1;
0072cd efef      	LDI  R30,LOW(65535)
0072ce efff      	LDI  R31,HIGH(65535)
0072cf c142      	RJMP _0x20E0065
                 ; 000D 026F     }
                 ; 000D 0270 
                 ; 000D 0271     printDebug("<sensorSetCurrentSetPoint> buf: [%d]/[%d][%d][%d][%d][%d]\r\n",
                 _0x1A00A6:
                 ; 000D 0272                                         buf[0],buf[1],buf[2],buf[3],buf[4],buf[5]);
                +
0072d0 e0e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1158 ) )
0072d1 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1158 ) )
0072d2 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1158 ) )
0072d3 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1158 ) )
                 	__POINTD1FN _0x1A0000,1158
0072d4 940e e05e 	CALL __PUTPARD1
0072d6 85ae      	LDD  R26,Y+14
0072d7 85bf      	LDD  R27,Y+14+1
0072d8 91ec      	LD   R30,X
0072d9 940e c2e0 	CALL SUBOPT_0x65
0072db 89ea      	LDD  R30,Y+18
0072dc 89fb      	LDD  R31,Y+18+1
0072dd 81e1      	LDD  R30,Z+1
0072de 940e c2e0 	CALL SUBOPT_0x65
0072e0 89ee      	LDD  R30,Y+22
0072e1 89ff      	LDD  R31,Y+22+1
0072e2 81e2      	LDD  R30,Z+2
0072e3 940e c2e0 	CALL SUBOPT_0x65
0072e5 8dea      	LDD  R30,Y+26
0072e6 8dfb      	LDD  R31,Y+26+1
0072e7 81e3      	LDD  R30,Z+3
0072e8 940e c2e0 	CALL SUBOPT_0x65
0072ea 8dee      	LDD  R30,Y+30
0072eb 8dff      	LDD  R31,Y+30+1
0072ec 81e4      	LDD  R30,Z+4
0072ed 940e c2e0 	CALL SUBOPT_0x65
0072ef a1ea      	LDD  R30,Y+34
0072f0 a1fb      	LDD  R31,Y+34+1
0072f1 81e5      	LDD  R30,Z+5
0072f2 940e c2e0 	CALL SUBOPT_0x65
0072f4 e188      	LDI  R24,24
0072f5 940e 9de6 	CALL _printDebug
0072f7 966c      	ADIW R28,28
                 ; 000D 0273 
                 ; 000D 0274     val =  (float) (0.0);
0072f8 940e ccc1 	CALL SUBOPT_0x1FE
                 ; 000D 0275     val += (float) (buf[1] * 100);
0072fa 85ea      	LDD  R30,Y+10
0072fb 85fb      	LDD  R31,Y+10+1
0072fc 81e1      	LDD  R30,Z+1
0072fd e6a4      	LDI  R26,LOW(100)
0072fe 940e cf05 	CALL SUBOPT_0x24E
                 ; 000D 0276     val += (float) (buf[2] * 10);
007300 81e2      	LDD  R30,Z+2
007301 e0aa      	LDI  R26,LOW(10)
007302 940e cf05 	CALL SUBOPT_0x24E
                 ; 000D 0277     val += (float) (buf[3]);
007304 81e3      	LDD  R30,Z+3
007305 27ff      	CLR  R31
007306 2766      	CLR  R22
007307 2777      	CLR  R23
007308 940e dd75 	CALL __CDF1
00730a 940e cf14 	CALL SUBOPT_0x24F
                 ; 000D 0278     val += (float) (buf[4] * 0.1);
00730c 81e4      	LDD  R30,Z+4
00730d 940e cf1d 	CALL SUBOPT_0x250
00730f 940e c46f 	CALL SUBOPT_0x9E
007311 940e cf14 	CALL SUBOPT_0x24F
                 ; 000D 0279     val += (float) (buf[5] * 0.01);
007313 81e5      	LDD  R30,Z+5
007314 940e cf1d 	CALL SUBOPT_0x250
                +
007316 e0aa     +LDI R26 , LOW ( 0x3C23D70A )
007317 edb7     +LDI R27 , HIGH ( 0x3C23D70A )
007318 e283     +LDI R24 , BYTE3 ( 0x3C23D70A )
007319 e39c     +LDI R25 , BYTE4 ( 0x3C23D70A )
                 	__GETD2N 0x3C23D70A
00731a 940e ddff 	CALL __MULF12
00731c 940e c297 	CALL SUBOPT_0x59
00731e 940e ddaf 	CALL __ADDF12
007320 940e c4f2 	CALL SUBOPT_0xB5
                 ; 000D 027A     if(buf[0] == 1){    val *= (float) (-1.0);  }
007322 85aa      	LDD  R26,Y+10
007323 85bb      	LDD  R27,Y+10+1
007324 91ac      	LD   R26,X
007325 30a1      	CPI  R26,LOW(0x1)
007326 f451      	BRNE _0x1A00A7
007327 940e c297 	CALL SUBOPT_0x59
                +
007329 e0e0     +LDI R30 , LOW ( 0xBF800000 )
00732a e0f0     +LDI R31 , HIGH ( 0xBF800000 )
00732b e860     +LDI R22 , BYTE3 ( 0xBF800000 )
00732c eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
00732d 940e ddff 	CALL __MULF12
00732f 940e c4f2 	CALL SUBOPT_0xB5
                 ; 000D 027B 
                 ; 000D 027C     printDebug("<sensorSetCurrentSetPoint> sensor %1d, point %1d, set to [%f]",ch+1,pnt,val);
                 _0x1A00A7:
                +
007331 e3ee     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1218 ) )
007332 e4f9     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1218 ) )
007333 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1218 ) )
007334 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1218 ) )
                 	__POINTD1FN _0x1A0000,1218
007335 940e cf00 	CALL SUBOPT_0x24D
007337 9631      	ADIW R30,1
007338 940e df3b 	CALL __CWD1
00733a 940e c632 	CALL SUBOPT_0xE7
00733c 940e cf23 	CALL SUBOPT_0x251
00733e 940e c25a 	CALL SUBOPT_0x51
                 ; 000D 027D 
                 ; 000D 027E     if(pnt == CALPOINT(1)){
007340 85ac      	LDD  R26,Y+12
007341 85bd      	LDD  R27,Y+12+1
007342 36a5      	CPI  R26,LOW(0x65)
007343 e0e0      	LDI  R30,HIGH(0x65)
007344 07be      	CPC  R27,R30
007345 f5e1      	BRNE _0x1A00A8
                 ; 000D 027F         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
007346 940e c15f 	CALL SUBOPT_0x2E
007348 f021      	BREQ _0x1A00AA
007349 940e c15f 	CALL SUBOPT_0x2E
00734b 30e3      	CPI  R30,LOW(0x3)
00734c f4b1      	BRNE _0x1A00A9
                 _0x1A00AA:
                 ; 000D 0280            viADCbuffer = 0;
00734d 940e cf28 	CALL SUBOPT_0x252
                 ; 000D 0281              for(i=0;i<30;i++){
                 _0x1A00AD:
                +
00734f 310e     +CPI R16 , LOW ( 30 )
007350 e0e0     +LDI R30 , HIGH ( 30 )
007351 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
007352 f42c      	BRGE _0x1A00AE
                 ; 000D 0282                 viADCbuffer += read_adc(8+ch);
007353 940e cf30 	CALL SUBOPT_0x253
                 ; 000D 0283              }
                +
007355 5f0f     +SUBI R16 , LOW ( - 1 )
007356 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007357 cff7      	RJMP _0x1A00AD
                 _0x1A00AE:
                 ; 000D 0284 
                 ; 000D 0285              epADCRef1[ch] = iAD595ADCToTemp(viADCbuffer,30);
007358 940e cf3c 	CALL SUBOPT_0x254
00735a 93ff      	PUSH R31
00735b 93ef      	PUSH R30
00735c 940e c658 	CALL SUBOPT_0xEF
00735e 940e cf45 	CALL SUBOPT_0x255
007360 91af      	POP  R26
007361 91bf      	POP  R27
007362 c007      	RJMP _0x1A00CF
                 ; 000D 0286         }else{
                 _0x1A00A9:
                 ; 000D 0287            epADCRef1[ch]       = adcData[ch];
007363 940e cf3c 	CALL SUBOPT_0x254
007365 940e cf49 	CALL SUBOPT_0x256
007367 940e c0e9 	CALL SUBOPT_0x1B
007369 01d0      	MOVW R26,R0
                 _0x1A00CF:
00736a 940e e091 	CALL __EEPROMWRD
                 ; 000D 0288         }
                 ; 000D 0289 
                 ; 000D 028A 
                 ; 000D 028B 
                 ; 000D 028C         epTempRef1[ch]      = val;
00736c 85ee      	LDD  R30,Y+14
00736d 85ff      	LDD  R31,Y+14+1
00736e eeaa      	LDI  R26,LOW(_epTempRef1)
00736f e0b5      	LDI  R27,HIGH(_epTempRef1)
007370 940e cf4e 	CALL SUBOPT_0x257
                 ; 000D 028D         //epADCRef1[ch]       = adcData[ch];
                 ; 000D 028E         epIsPointSet1[ch]   = 1;
007372 52af      	SUBI R26,LOW(-_epIsPointSet1)
007373 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
007374 e0e1      	LDI  R30,LOW(1)
007375 940e cf59 	CALL SUBOPT_0x258
                 ; 000D 028F         epIsPointSet2[ch]   = 0;                        // -- reset cal_point 2 -- //
007377 50a2      	SUBI R26,LOW(-_epIsPointSet2)
007378 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
007379 e0e0      	LDI  R30,LOW(0)
00737a 940e cf59 	CALL SUBOPT_0x258
                 ; 000D 0290         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
00737c 5da5      	SUBI R26,LOW(-_epIsPointSet3)
00737d 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
00737e e0e0      	LDI  R30,LOW(0)
00737f 940e e0a1 	CALL __EEPROMWRB
                 ; 000D 0291     }
                 ; 000D 0292     else if(pnt == CALPOINT(2)){
007381 c08e      	RJMP _0x1A00B0
                 _0x1A00A8:
007382 85ac      	LDD  R26,Y+12
007383 85bd      	LDD  R27,Y+12+1
007384 36a6      	CPI  R26,LOW(0x66)
007385 e0e0      	LDI  R30,HIGH(0x66)
007386 07be      	CPC  R27,R30
007387 f011      	BREQ PC+3
007388 940c 73cf 	JMP _0x1A00B1
                 ; 000D 0293 
                 ; 000D 0294         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
00738a 940e c15f 	CALL SUBOPT_0x2E
00738c f021      	BREQ _0x1A00B3
00738d 940e c15f 	CALL SUBOPT_0x2E
00738f 30e3      	CPI  R30,LOW(0x3)
007390 f4d1      	BRNE _0x1A00B2
                 _0x1A00B3:
                 ; 000D 0295            viADCbuffer = 0;
007391 940e cf28 	CALL SUBOPT_0x252
                 ; 000D 0296              for(i=0;i<30;i++){
                 _0x1A00B6:
                +
007393 310e     +CPI R16 , LOW ( 30 )
007394 e0e0     +LDI R30 , HIGH ( 30 )
007395 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
007396 f42c      	BRGE _0x1A00B7
                 ; 000D 0297                 viADCbuffer += read_adc(8+ch);
007397 940e cf30 	CALL SUBOPT_0x253
                 ; 000D 0298              }
                +
007399 5f0f     +SUBI R16 , LOW ( - 1 )
00739a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00739b cff7      	RJMP _0x1A00B6
                 _0x1A00B7:
                 ; 000D 0299 
                 ; 000D 029A              epADCRef2[ch] = iAD595ADCToTemp(viADCbuffer,30);
00739c 85ee      	LDD  R30,Y+14
00739d 85ff      	LDD  R31,Y+14+1
00739e 940e ce9c 	CALL SUBOPT_0x23D
0073a0 0fea      	ADD  R30,R26
0073a1 1ffb      	ADC  R31,R27
0073a2 93ff      	PUSH R31
0073a3 93ef      	PUSH R30
0073a4 940e c658 	CALL SUBOPT_0xEF
0073a6 940e cf45 	CALL SUBOPT_0x255
0073a8 91af      	POP  R26
0073a9 91bf      	POP  R27
0073aa c00b      	RJMP _0x1A00D0
                 ; 000D 029B         }else{
                 _0x1A00B2:
                 ; 000D 029C            epADCRef2[ch]       = adcData[ch];
0073ab 85ee      	LDD  R30,Y+14
0073ac 85ff      	LDD  R31,Y+14+1
0073ad 940e ce9c 	CALL SUBOPT_0x23D
0073af 0fea      	ADD  R30,R26
0073b0 1ffb      	ADC  R31,R27
0073b1 940e cf49 	CALL SUBOPT_0x256
0073b3 940e c0e9 	CALL SUBOPT_0x1B
0073b5 01d0      	MOVW R26,R0
                 _0x1A00D0:
0073b6 940e e091 	CALL __EEPROMWRD
                 ; 000D 029D         }
                 ; 000D 029E 
                 ; 000D 029F         epTempRef2[ch]      = val;
0073b8 85ee      	LDD  R30,Y+14
0073b9 85ff      	LDD  R31,Y+14+1
0073ba 940e cea8 	CALL SUBOPT_0x23F
0073bc 0fae      	ADD  R26,R30
0073bd 1fbf      	ADC  R27,R31
0073be 940e c4ed 	CALL SUBOPT_0xB4
0073c0 940e e091 	CALL __EEPROMWRD
                 ; 000D 02A0         //epADCRef2[ch]       = adcData[ch];
                 ; 000D 02A1         epIsPointSet2[ch]   = 1;
0073c2 85ae      	LDD  R26,Y+14
0073c3 85bf      	LDD  R27,Y+14+1
0073c4 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0073c5 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0073c6 e0e1      	LDI  R30,LOW(1)
0073c7 940e cf59 	CALL SUBOPT_0x258
                 ; 000D 02A2         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
0073c9 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0073ca 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0073cb e0e0      	LDI  R30,LOW(0)
0073cc 940e e0a1 	CALL __EEPROMWRB
                 ; 000D 02A3     }
                 ; 000D 02A4     else if(pnt == CALPOINT(3)){
0073ce c041      	RJMP _0x1A00B9
                 _0x1A00B1:
0073cf 85ac      	LDD  R26,Y+12
0073d0 85bd      	LDD  R27,Y+12+1
0073d1 36a7      	CPI  R26,LOW(0x67)
0073d2 e0e0      	LDI  R30,HIGH(0x67)
0073d3 07be      	CPC  R27,R30
0073d4 f591      	BRNE _0x1A00BA
                 ; 000D 02A5         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0073d5 940e c15f 	CALL SUBOPT_0x2E
0073d7 f021      	BREQ _0x1A00BC
0073d8 940e c15f 	CALL SUBOPT_0x2E
0073da 30e3      	CPI  R30,LOW(0x3)
0073db f4b1      	BRNE _0x1A00BB
                 _0x1A00BC:
                 ; 000D 02A6            viADCbuffer = 0;
0073dc 940e cf28 	CALL SUBOPT_0x252
                 ; 000D 02A7              for(i=0;i<30;i++){
                 _0x1A00BF:
                +
0073de 310e     +CPI R16 , LOW ( 30 )
0073df e0e0     +LDI R30 , HIGH ( 30 )
0073e0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,30
0073e1 f42c      	BRGE _0x1A00C0
                 ; 000D 02A8                 viADCbuffer += read_adc(8+ch);
0073e2 940e cf30 	CALL SUBOPT_0x253
                 ; 000D 02A9              }
                +
0073e4 5f0f     +SUBI R16 , LOW ( - 1 )
0073e5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0073e6 cff7      	RJMP _0x1A00BF
                 _0x1A00C0:
                 ; 000D 02AA 
                 ; 000D 02AB              epADCRef3[ch] = iAD595ADCToTemp(viADCbuffer,30);
0073e7 940e cf5e 	CALL SUBOPT_0x259
0073e9 93ff      	PUSH R31
0073ea 93ef      	PUSH R30
0073eb 940e c658 	CALL SUBOPT_0xEF
0073ed 940e cf45 	CALL SUBOPT_0x255
0073ef 91af      	POP  R26
0073f0 91bf      	POP  R27
0073f1 c007      	RJMP _0x1A00D1
                 ; 000D 02AC         }else{
                 _0x1A00BB:
                 ; 000D 02AD            epADCRef3[ch]       = adcData[ch];
0073f2 940e cf5e 	CALL SUBOPT_0x259
0073f4 940e cf49 	CALL SUBOPT_0x256
0073f6 940e c0e9 	CALL SUBOPT_0x1B
0073f8 01d0      	MOVW R26,R0
                 _0x1A00D1:
0073f9 940e e091 	CALL __EEPROMWRD
                 ; 000D 02AE         }
                 ; 000D 02AF 
                 ; 000D 02B0         epTempRef3[ch]      = val;
0073fb 85ee      	LDD  R30,Y+14
0073fc 85ff      	LDD  R31,Y+14+1
0073fd e4a4      	LDI  R26,LOW(_epTempRef3)
0073fe e0b6      	LDI  R27,HIGH(_epTempRef3)
0073ff 940e cf4e 	CALL SUBOPT_0x257
                 ; 000D 02B1         //epADCRef3[ch]       = adcData[ch];
                 ; 000D 02B2         epIsPointSet3[ch]   = 1;
007401 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007402 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007403 e0e1      	LDI  R30,LOW(1)
007404 940e e0a1 	CALL __EEPROMWRB
                 ; 000D 02B3     }
                 ; 000D 02B4     else{
007406 c009      	RJMP _0x1A00C2
                 _0x1A00BA:
                 ; 000D 02B5         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
007407 940e cec8 	CALL SUBOPT_0x244
007409 89e8      	LDD  R30,Y+16
00740a 89f9      	LDD  R31,Y+16+1
00740b 940e c637 	CALL SUBOPT_0xE8
                 ; 000D 02B6         return -1;
00740d efef      	LDI  R30,LOW(65535)
00740e efff      	LDI  R31,HIGH(65535)
00740f c002      	RJMP _0x20E0065
                 ; 000D 02B7     }
                 _0x1A00C2:
                 _0x1A00B9:
                 _0x1A00B0:
                 ; 000D 02B8 
                 ; 000D 02B9     return 0;
007410 e0e0      	LDI  R30,LOW(0)
007411 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0065:
007412 8119      	LDD  R17,Y+1
007413 8108      	LDD  R16,Y+0
007414 9660      	ADIW R28,16
007415 9508      	RET
                 ; 000D 02BA }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
007416 940e e063 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
007418 91a0 15d2 	LDS  R26,_dataQ_len
00741a 91b0 15d3 	LDS  R27,_dataQ_len+1
00741c 971a      	SBIW R26,10
00741d f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
00741e efef      	LDI  R30,LOW(65535)
00741f efff      	LDI  R31,HIGH(65535)
007420 940c 77fb 	JMP  _0x20E005B
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
007422 940e cf67 	CALL SUBOPT_0x25A
007424 59e2      	SUBI R30,LOW(-_dataQ)
007425 4efa      	SBCI R31,HIGH(-_dataQ)
007426 940e cf6d 	CALL SUBOPT_0x25B
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
007428 940e cf67 	CALL SUBOPT_0x25A
                +
00742a 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
00742b 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
00742c 81ac      	LDD  R26,Y+4
00742d 81bd      	LDD  R27,Y+4+1
00742e 83a0      	STD  Z+0,R26
00742f 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
007430 940e cf67 	CALL SUBOPT_0x25A
                +
007432 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007433 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007434 940e c3e5 	CALL SUBOPT_0x8C
007436 940e cf72 	CALL SUBOPT_0x25C
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
007438 01d5      	MOVW R26,R10
007439 9611      	ADIW R26,1
00743a 940e cf75 	CALL SUBOPT_0x25D
00743c 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
00743d eda2      	LDI  R26,LOW(_dataQ_len)
00743e e1b5      	LDI  R27,HIGH(_dataQ_len)
00743f 940e c383 	CALL SUBOPT_0x7C
                 ; 000E 0019 
                 ; 000E 001A     return 0;
007441 e0e0      	LDI  R30,LOW(0)
007442 e0f0      	LDI  R31,HIGH(0)
007443 940c 77fb 	JMP  _0x20E005B
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
007445 93ba      	ST   -Y,R27
007446 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
007447 91e0 15d2 	LDS  R30,_dataQ_len
007449 91f0 15d3 	LDS  R31,_dataQ_len+1
00744b 9730      	SBIW R30,0
00744c f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
00744d efef      	LDI  R30,LOW(65535)
00744e efff      	LDI  R31,HIGH(65535)
00744f 940c 77de 	JMP  _0x20E005C
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
007451 940e cf7a 	CALL SUBOPT_0x25E
007453 59e2      	SUBI R30,LOW(-_dataQ)
007454 4efa      	SBCI R31,HIGH(-_dataQ)
007455 940e cf80 	CALL SUBOPT_0x25F
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
007457 940e cf7a 	CALL SUBOPT_0x25E
                +
007459 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
00745a 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
00745b 01df      	MOVW R26,R30
00745c 940e e02a 	CALL __GETW1P
00745e 81aa      	LDD  R26,Y+2
00745f 81bb      	LDD  R27,Y+2+1
007460 93ed      	ST   X+,R30
007461 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
007462 940e cf7a 	CALL SUBOPT_0x25E
                +
007464 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007465 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007466 01df      	MOVW R26,R30
007467 940e e02e 	CALL __GETD1P
007469 81a8      	LD   R26,Y
00746a 81b9      	LDD  R27,Y+1
00746b 940e e039 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
00746d 01d6      	MOVW R26,R12
00746e 9611      	ADIW R26,1
00746f 940e cf75 	CALL SUBOPT_0x25D
007471 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
007472 eda2      	LDI  R26,LOW(_dataQ_len)
007473 e1b5      	LDI  R27,HIGH(_dataQ_len)
007474 940c 77d7 	JMP  _0x20E005E
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
007476 931a      	ST   -Y,R17
                 ;	current_status -> R17
007477 e010      	LDI  R17,0
007478 91e0 0103 	LDS  R30,259
00747a 78e0      	ANDI R30,LOW(0x80)
00747b e0f0      	LDI  R31,0
00747c 940e df0c 	CALL __ASRW3
00747e 940e df0a 	CALL __ASRW4
007480 9730      	SBIW R30,0
007481 f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
007482 e0e0      	LDI  R30,LOW(0)
007483 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
007485 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
007487 e6e6     +LDI R30 , LOW ( 0x40866666 )
007488 e6f6     +LDI R31 , HIGH ( 0x40866666 )
007489 e866     +LDI R22 , BYTE3 ( 0x40866666 )
00748a e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
00748b 940e cf88 	CALL SUBOPT_0x260
                 ; 000F 0035         return 0;
00748d c041      	RJMP _0x20E0064
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
00748e e0e1      	LDI  R30,LOW(1)
00748f 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
007491 940e 43f6 	CALL _readBattery
007493 940e cf88 	CALL SUBOPT_0x260
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
007495 940e cf91 	CALL SUBOPT_0x261
007497 940e e0b2 	CALL __CPD10
007499 f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
00749a e0e0      	LDI  R30,LOW(0)
00749b 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
00749d c02e      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
00749e 940e cf91 	CALL SUBOPT_0x261
0074a0 940e c156 	CALL SUBOPT_0x2D
0074a2 940e de92 	CALL __CMPF12
0074a4 f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
0074a5 e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
0074a6 c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
0074a7 e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
0074a8 91a0 15d9 	LDS  R26,_lastCheck_S00F0001000
0074aa 171a      	CP   R17,R26
0074ab f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
0074ac e0e0      	LDI  R30,LOW(0)
0074ad 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
0074af 9310 15d9 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
0074b1 91e0 15d8 	LDS  R30,_t_flag_S00F0001000
0074b3 30e0      	CPI  R30,0
0074b4 f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
0074b5 ede4      	LDI  R30,LOW(_t_S00F0001000)
0074b6 e1f5      	LDI  R31,HIGH(_t_S00F0001000)
0074b7 940e c132 	CALL SUBOPT_0x27
                 ; 000F 0053                 t_flag              = 1;
0074b9 e0e1      	LDI  R30,LOW(1)
0074ba c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
0074bb 91a0 15d4 	LDS  R26,_t_S00F0001000
0074bd 91b0 15d5 	LDS  R27,_t_S00F0001000+1
0074bf 9180 15d6 	LDS  R24,_t_S00F0001000+2
0074c1 9190 15d7 	LDS  R25,_t_S00F0001000+3
0074c3 940e 4130 	CALL _TIMER_checkTimerExceed
0074c5 9730      	SBIW R30,0
0074c6 f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
0074c7 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
0074c9 e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
0074ca 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
0074cc e0e1      	LDI  R30,LOW(1)
0074cd e0f0      	LDI  R31,HIGH(1)
0074ce c002      	RJMP _0x20E0063
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0064:
0074cf e0e0      	LDI  R30,LOW(0)
0074d0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0063:
0074d1 9119      	LD   R17,Y+
0074d2 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
0074d3 931a      	ST   -Y,R17
0074d4 930a      	ST   -Y,R16
                 ;	res -> R16,R17
0074d5 91e0 0100 	LDS  R30,256
0074d7 940e cf9a 	CALL SUBOPT_0x262
0074d9 9730      	SBIW R30,0
0074da f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
0074db e0e1      	LDI  R30,LOW(1)
0074dc 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
0074de efef      	LDI  R30,LOW(255)
0074df 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
0074e1 e0e0      	LDI  R30,LOW(0)
0074e2 93e0 1421 	STS  _commLostTimer,R30
0074e4 93e0 1422 	STS  _commLostTimer+1,R30
0074e6 93e0 1423 	STS  _commLostTimer+2,R30
0074e8 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
0074ea e0e1      	LDI  R30,LOW(1)
0074eb e0f0      	LDI  R31,HIGH(1)
0074ec c047      	RJMP _0x20E0062
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
0074ed e0e0      	LDI  R30,LOW(0)
0074ee 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
0074f0 940e c94e 	CALL SUBOPT_0x16F
0074f2 940e c1b7 	CALL SUBOPT_0x3A
0074f4 f029      	BREQ _0x1E0013
0074f5 940e c94e 	CALL SUBOPT_0x16F
0074f7 940e e0be 	CALL __CPD02
0074f9 f409      	BRNE _0x1E0014
                 _0x1E0013:
0074fa c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
0074fb e8e8     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
0074fc e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
0074fd e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
0074fe e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
0074ff 940e c95e 	CALL SUBOPT_0x171
007501 940e c95e 	CALL SUBOPT_0x171
007503 940e c108 	CALL SUBOPT_0x21
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
007505 940e c94e 	CALL SUBOPT_0x16F
007507 940e 4130 	CALL _TIMER_checkTimerExceed
007509 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
00750a 2311      	TST  R17
00750b f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
00750c efef      	LDI  R30,LOW(255)
00750d 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
00750f e0e0      	LDI  R30,LOW(0)
007510 e0f0      	LDI  R31,HIGH(0)
007511 c022      	RJMP _0x20E0062
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
007512 2e00      	MOV  R0,R16
007513 2a01      	OR   R0,R17
007514 f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
007515 91a0 1480 	LDS  R26,_serverCommStatus
007517 30a2      	CPI  R26,LOW(0x2)
007518 f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
007519 ebec     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
00751a e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
00751b e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
00751c e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
00751d 940e c02f 	CALL SUBOPT_0x3
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
00751f e0e2      	LDI  R30,LOW(2)
007520 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
007522 e0e1      	LDI  R30,LOW(1)
007523 e0f0      	LDI  R31,HIGH(1)
007524 c00f      	RJMP _0x20E0062
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
007525 91e0 1480 	LDS  R30,_serverCommStatus
007527 30e0      	CPI  R30,0
007528 f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
007529 eee0     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
00752a e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
00752b e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
00752c e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
00752d 940e c02f 	CALL SUBOPT_0x3
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
00752f e0e0      	LDI  R30,LOW(0)
007530 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
007532 e0e0      	LDI  R30,LOW(0)
007533 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0062:
007534 9109      	LD   R16,Y+
007535 9119      	LD   R17,Y+
007536 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
007537 940e cf9f 	CALL SUBOPT_0x263
007539 f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
00753a e0e2      	LDI  R30,LOW(2)
00753b c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
00753c 940e c13a 	CALL SUBOPT_0x28
                +
00753e e0e0     +LDI R30 , LOW ( 0x400 )
00753f e0f4     +LDI R31 , HIGH ( 0x400 )
007540 e060     +LDI R22 , BYTE3 ( 0x400 )
007541 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
007542 940e dfb2 	CALL __DIVD21U
007544 01df      	MOVW R26,R30
                +
007545 91e0 1375+LDS R30 , _env_config + ( 16 )
007547 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
007549 17ae      	CP   R26,R30
00754a 07bf      	CPC  R27,R31
00754b f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
00754c e0e1      	LDI  R30,LOW(1)
00754d c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
00754e e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
00754f 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
007551 30e0      	CPI  R30,0
007552 f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
007553 e0e1      	LDI  R30,LOW(1)
007554 e0f0      	LDI  R31,HIGH(1)
007555 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
007556 c1aa      	RJMP _0x20E005F
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
007557 93ba      	ST   -Y,R27
007558 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
007559 81a9      	LDD  R26,Y+1
00755a 23aa      	TST  R26
00755b f022      	BRMI _0x1E0022
00755c 81a8      	LD   R26,Y
00755d 81b9      	LDD  R27,Y+1
00755e 9715      	SBIW R26,5
00755f f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
007560 e0e2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
007561 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
007562 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
007563 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
007564 940e c7b9 	CALL SUBOPT_0x12D
007566 940e c637 	CALL SUBOPT_0xE8
                 ; 000F 00B1         return 0;
007568 e0e0      	LDI  R30,LOW(0)
007569 e0f0      	LDI  R31,HIGH(0)
00756a c01d      	RJMP _0x20E0061
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
00756b 940e cfaa 	CALL SUBOPT_0x264
                +
00756d 2f7e     +MOV R23 , R30
00756e 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
00756f 81a8      	LD   R26,Y
007570 81b9      	LDD  R27,Y+1
007571 940e ce2e 	CALL SUBOPT_0x22E
                +
007573 2fa7     +MOV R26 , R23
007574 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
007575 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007576 940e cfaa 	CALL SUBOPT_0x264
007578 81a0      	LD   R26,Z
007579 3faf      	CPI  R26,LOW(0xFF)
00757a f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
00757b e0e0      	LDI  R30,LOW(0)
00757c e0f0      	LDI  R31,HIGH(0)
00757d c00a      	RJMP _0x20E0061
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
00757e 940e cfaa 	CALL SUBOPT_0x264
007580 81e0      	LD   R30,Z
007581 30e0      	CPI  R30,0
007582 f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
007583 e0e1      	LDI  R30,LOW(1)
007584 e0f0      	LDI  R31,HIGH(1)
007585 c002      	RJMP _0x20E0061
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
007586 e0e0      	LDI  R30,LOW(0)
007587 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0061:
007588 9622      	ADIW R28,2
007589 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
00758a 940e c3a0 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
00758c e000     +LDI R16 , LOW ( 0 )
00758d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00758e 81ab      	LDD  R26,Y+3
00758f 23aa      	TST  R26
007590 f022      	BRMI _0x1E0029
007591 81aa      	LDD  R26,Y+2
007592 81bb      	LDD  R27,Y+2+1
007593 9715      	SBIW R26,5
007594 f05c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
007595 e3e7     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
007596 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
007597 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
007598 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
007599 940e c6ce 	CALL SUBOPT_0x103
00759b 940e c637 	CALL SUBOPT_0xE8
                 ; 000F 00CC         return 0;
00759d e0e0      	LDI  R30,LOW(0)
00759e e0f0      	LDI  R31,HIGH(0)
00759f c0cf      	RJMP _0x20E0060
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
0075a0 940e c76a 	CALL SUBOPT_0x11E
                +
0075a2 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
0075a3 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
0075a4 81e0      	LD   R30,Z
0075a5 30e0      	CPI  R30,0
0075a6 f019      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
0075a7 e0e0      	LDI  R30,LOW(0)
0075a8 e0f0      	LDI  R31,HIGH(0)
0075a9 c0c5      	RJMP _0x20E0060
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
0075aa 940e c76a 	CALL SUBOPT_0x11E
0075ac 940e c102 	CALL SUBOPT_0x20
0075ae 937f      	PUSH R23
0075af 936f      	PUSH R22
0075b0 93ff      	PUSH R31
0075b1 93ef      	PUSH R30
0075b2 940e c6f6 	CALL SUBOPT_0x10B
                +
0075b4 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
0075b5 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
0075b6 01df      	MOVW R26,R30
0075b7 940e e02e 	CALL __GETD1P
0075b9 91af      	POP  R26
0075ba 91bf      	POP  R27
0075bb 918f      	POP  R24
0075bc 919f      	POP  R25
0075bd 940e de92 	CALL __CMPF12
0075bf f508      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
0075c0 940e cfaf 	CALL SUBOPT_0x265
0075c2 81e0      	LD   R30,Z
0075c3 30e0      	CPI  R30,0
0075c4 f479      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
0075c5 940e cfb4 	CALL SUBOPT_0x266
0075c7 940e c0f4 	CALL SUBOPT_0x1D
0075c9 81ac      	LDD  R26,Y+4
0075ca 81bd      	LDD  R27,Y+4+1
0075cb 940e cfbb 	CALL SUBOPT_0x267
0075cd 940e c0fe 	CALL SUBOPT_0x1F
                 ; 000F 00D9             flag_lower[ch] = 1;
0075cf 940e cfaf 	CALL SUBOPT_0x265
0075d1 e0a1      	LDI  R26,LOW(1)
0075d2 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
0075d3 c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
0075d4 940e cfb4 	CALL SUBOPT_0x266
0075d6 940e c0e9 	CALL SUBOPT_0x1B
0075d8 940e c0ee 	CALL SUBOPT_0x1C
0075da f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
0075db 940e cfc3 	CALL SUBOPT_0x268
0075dd 60e1      	ORI  R30,1
0075de 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
0075df 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
0075e0 c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
0075e1 940e cfaf 	CALL SUBOPT_0x265
0075e3 e0a0      	LDI  R26,LOW(0)
0075e4 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
0075e5 940e cfc3 	CALL SUBOPT_0x268
0075e7 7fee      	ANDI R30,0xFE
0075e8 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
0075e9 940e c76a 	CALL SUBOPT_0x11E
0075eb 940e c102 	CALL SUBOPT_0x20
0075ed 937f      	PUSH R23
0075ee 936f      	PUSH R22
0075ef 93ff      	PUSH R31
0075f0 93ef      	PUSH R30
0075f1 940e c6f6 	CALL SUBOPT_0x10B
                +
0075f3 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
0075f4 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
0075f5 01df      	MOVW R26,R30
0075f6 940e e02e 	CALL __GETD1P
0075f8 91af      	POP  R26
0075f9 91bf      	POP  R27
0075fa 918f      	POP  R24
0075fb 919f      	POP  R25
0075fc 940e de92 	CALL __CMPF12
0075fe f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
0075ff 940e cfc3 	CALL SUBOPT_0x268
007601 60e2      	ORI  R30,2
007602 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
007603 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
007604 c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
007605 940e cfc3 	CALL SUBOPT_0x268
007607 7fed      	ANDI R30,0xFD
007608 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
007609 940e c76a 	CALL SUBOPT_0x11E
00760b 940e c102 	CALL SUBOPT_0x20
00760d 937f      	PUSH R23
00760e 936f      	PUSH R22
00760f 93ff      	PUSH R31
007610 93ef      	PUSH R30
007611 940e c6f6 	CALL SUBOPT_0x10B
                +
007613 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
007614 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
007615 01df      	MOVW R26,R30
007616 940e e02e 	CALL __GETD1P
007618 91af      	POP  R26
007619 91bf      	POP  R27
00761a 918f      	POP  R24
00761b 919f      	POP  R25
00761c 940e de92 	CALL __CMPF12
00761e f009      	BREQ PC+2
00761f f410      	BRCC PC+3
007620 940c 7643 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
007622 940e cfc9 	CALL SUBOPT_0x269
007624 81e0      	LD   R30,Z
007625 30e0      	CPI  R30,0
007626 f479      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
007627 940e cfb4 	CALL SUBOPT_0x266
007629 940e c0f4 	CALL SUBOPT_0x1D
00762b 81ac      	LDD  R26,Y+4
00762c 81bd      	LDD  R27,Y+4+1
00762d 940e cfce 	CALL SUBOPT_0x26A
00762f 940e c0fe 	CALL SUBOPT_0x1F
                 ; 000F 0101             flag_upper[ch] = 1;
007631 940e cfc9 	CALL SUBOPT_0x269
007633 e0a1      	LDI  R26,LOW(1)
007634 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
007635 c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
007636 940e cfb4 	CALL SUBOPT_0x266
007638 940e c0e9 	CALL SUBOPT_0x1B
00763a 940e c0ee 	CALL SUBOPT_0x1C
00763c f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
00763d 940e cfc3 	CALL SUBOPT_0x268
00763f 60e4      	ORI  R30,4
007640 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
007641 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
007642 c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
007643 940e cfc9 	CALL SUBOPT_0x269
007645 e0a0      	LDI  R26,LOW(0)
007646 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
007647 940e cfc3 	CALL SUBOPT_0x268
007649 7feb      	ANDI R30,0xFB
00764a 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
00764b 940e c76a 	CALL SUBOPT_0x11E
00764d 940e c102 	CALL SUBOPT_0x20
00764f 937f      	PUSH R23
007650 936f      	PUSH R22
007651 93ff      	PUSH R31
007652 93ef      	PUSH R30
007653 940e c6f6 	CALL SUBOPT_0x10B
                +
007655 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
007656 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
007657 01df      	MOVW R26,R30
007658 940e e02e 	CALL __GETD1P
00765a 91af      	POP  R26
00765b 91bf      	POP  R27
00765c 918f      	POP  R24
00765d 919f      	POP  R25
00765e 940e de92 	CALL __CMPF12
007660 f009      	BREQ PC+2
007661 f410      	BRCC PC+3
007662 940c 766a 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
007664 940e cfc3 	CALL SUBOPT_0x268
007666 60e8      	ORI  R30,8
007667 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
007668 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
007669 c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
00766a 940e cfc3 	CALL SUBOPT_0x268
00766c 7fe7      	ANDI R30,0XF7
00766d 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
00766e 01f8      	MOVW R30,R16
                 _0x20E0060:
00766f 8119      	LDD  R17,Y+1
007670 8108      	LDD  R16,Y+0
007671 9624      	ADIW R28,4
007672 9508      	RET
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
007673 940e e0ce 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
007675 ef1f      	LDI  R17,255
007676 940e c01b 	CALL SUBOPT_0x0
                +
007678 e020     +LDI R18 , LOW ( 0 )
007679 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
00767a 3022     +CPI R18 , LOW ( 2 )
00767b e0e0     +LDI R30 , HIGH ( 2 )
00767c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00767d f014      	BRLT PC+3
00767e 940c 76eb 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
007680 940e c0b7 	CALL SUBOPT_0x15
007682 81a0      	LD   R26,Z
007683 30a1      	CPI  R26,LOW(0x1)
007684 f011      	BREQ PC+3
007685 940c 76e8 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
007687 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
007688 9730      	SBIW R30,0
007689 f441      	BRNE _0x1E0042
00768a 91e0 0103 	LDS  R30,259
00768c 940e cf9a 	CALL SUBOPT_0x262
00768e 940e df4f 	CALL __LNEGW1
007690 2f1e      	MOV  R17,R30
007691 c01b      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
007692 30e1      	CPI  R30,LOW(0x1)
007693 e0a0      	LDI  R26,HIGH(0x1)
007694 07fa      	CPC  R31,R26
007695 f451      	BRNE _0x1E0044
007696 91e0 0103 	LDS  R30,259
007698 70e8      	ANDI R30,LOW(0x8)
007699 e0f0      	LDI  R31,0
00769a 940e df0c 	CALL __ASRW3
00769c 940e df4f 	CALL __LNEGW1
00769e 2f1e      	MOV  R17,R30
00769f c00d      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
0076a0 e7e4     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
0076a1 e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
0076a2 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
0076a3 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
0076a4 940e c09d 	CALL SUBOPT_0x11
0076a6 940e c0a5 	CALL SUBOPT_0x12
0076a8 e0e0      	LDI  R30,LOW(0)
0076a9 e0f0      	LDI  R31,HIGH(0)
0076aa 940e e0d5 	CALL __LOADLOCR6
0076ac c131      	RJMP _0x20E005C
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
0076ad e0a0      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
0076ae e1b6      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
0076af 0fa2      	ADD  R26,R18
0076b0 1fb3      	ADC  R27,R19
0076b1 91ec      	LD   R30,X
0076b2 17e1      	CP   R30,R17
0076b3 f081      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
0076b4 01f9      	MOVW R30,R18
0076b5 efa8      	LDI  R26,LOW(_t_S00F0006000)
0076b6 e1b5      	LDI  R27,HIGH(_t_S00F0006000)
0076b7 940e cfd6 	CALL SUBOPT_0x26B
                +
0076b9 e0a1     +LDI R26 , LOW ( 0x1 )
0076ba e0b0     +LDI R27 , HIGH ( 0x1 )
0076bb e080     +LDI R24 , BYTE3 ( 0x1 )
0076bc e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
0076bd 940e 4146 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
0076bf 01f9      	MOVW R30,R18
0076c0 50e0      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
0076c1 4efa      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
0076c2 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
0076c3 c020      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
0076c4 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0076c5 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0076c6 940e c08f 	CALL SUBOPT_0xF
0076c8 f4f9      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
0076c9 01f9      	MOVW R30,R18
0076ca efa8      	LDI  R26,LOW(_t_S00F0006000)
0076cb e1b5      	LDI  R27,HIGH(_t_S00F0006000)
0076cc 940e cfda 	CALL SUBOPT_0x26C
0076ce 940e c0ee 	CALL SUBOPT_0x1C
0076d0 f099      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
0076d1 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0076d2 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0076d3 0fa2      	ADD  R26,R18
0076d4 1fb3      	ADC  R27,R19
0076d5 e0e1      	LDI  R30,LOW(1)
0076d6 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
0076d7 3010      	CPI  R17,0
0076d8 f021      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
0076d9 940e c149 	CALL SUBOPT_0x2A
0076db e0e1      	LDI  R30,LOW(1)
0076dc c003      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
0076dd 940e c149 	CALL SUBOPT_0x2A
0076df e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
0076e0 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
0076e1 5f4f     +SUBI R20 , LOW ( - 1 )
0076e2 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
0076e3 c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
0076e4 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0076e5 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0076e6 940e c0aa 	CALL SUBOPT_0x13
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
0076e8 5f2f     +SUBI R18 , LOW ( - 1 )
0076e9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0076ea cf8f      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
0076eb 01fa      	MOVW R30,R20
0076ec 940e e0d5 	CALL __LOADLOCR6
0076ee c0ef      	RJMP _0x20E005C
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
0076ef 91e0 1434 	LDS  R30,_d_out
0076f1 30e0      	CPI  R30,0
0076f2 f011      	BREQ _0x1E004C
0076f3 e0e1      	LDI  R30,LOW(1)
0076f4 c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
0076f5 e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
0076f6 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
0076f8 91e0 1435+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
0076fa 30e0      	CPI  R30,0
0076fb f011      	BREQ _0x1E004E
0076fc e0e1      	LDI  R30,LOW(1)
0076fd c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
0076fe e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
0076ff 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E005F:
007701 e0e0      	LDI  R30,LOW(0)
007702 e0f0      	LDI  R31,HIGH(0)
007703 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
007704 940e c3a0 	CALL SUBOPT_0x81
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
007706 e000     +LDI R16 , LOW ( 0 )
007707 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
007708 81aa      	LDD  R26,Y+2
007709 81bb      	LDD  R27,Y+2+1
00770a 940e c720 	CALL SUBOPT_0x112
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
00770c 940e 5283 	CALL _isDeviceConfig
00770e 9730      	SBIW R30,0
00770f f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
007710 81aa      	LDD  R26,Y+2
007711 81bb      	LDD  R27,Y+2+1
007712 91ed      	LD   R30,X+
007713 91fd      	LD   R31,X+
007714 68f0      	ORI  R31,HIGH(0x8000)
007715 c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
007716 81aa      	LDD  R26,Y+2
007717 81bb      	LDD  R27,Y+2+1
007718 91ed      	LD   R30,X+
007719 91fd      	LD   R31,X+
00771a 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
00771b 93fe      	ST   -X,R31
00771c 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
00771d 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
00771f 30e0      	CPI  R30,0
007720 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
007721 81aa      	LDD  R26,Y+2
007722 81bb      	LDD  R27,Y+2+1
007723 91ed      	LD   R30,X+
007724 91fd      	LD   R31,X+
007725 64f0      	ORI  R31,HIGH(0x4000)
007726 c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
007727 81aa      	LDD  R26,Y+2
007728 81bb      	LDD  R27,Y+2+1
007729 91ed      	LD   R30,X+
00772a 91fd      	LD   R31,X+
00772b 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
00772c 93fe      	ST   -X,R31
00772d 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
00772e 91a0 11b6 	LDS  R26,_operating_config
007730 31a0      	CPI  R26,LOW(0x10)
007731 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
007732 81aa      	LDD  R26,Y+2
007733 81bb      	LDD  R27,Y+2+1
007734 91ed      	LD   R30,X+
007735 91fd      	LD   R31,X+
007736 60f8      	ORI  R31,HIGH(0x800)
007737 c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
007738 81aa      	LDD  R26,Y+2
007739 81bb      	LDD  R27,Y+2+1
00773a 91ed      	LD   R30,X+
00773b 91fd      	LD   R31,X+
00773c 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
00773d 93fe      	ST   -X,R31
00773e 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
00773f 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
007741 30e0      	CPI  R30,0
007742 f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
007743 81aa      	LDD  R26,Y+2
007744 81bb      	LDD  R27,Y+2+1
007745 91ed      	LD   R30,X+
007746 91fd      	LD   R31,X+
007747 60f2      	ORI  R31,HIGH(0x200)
007748 c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
007749 81aa      	LDD  R26,Y+2
00774a 81bb      	LDD  R27,Y+2+1
00774b 91ed      	LD   R30,X+
00774c 91fd      	LD   R31,X+
00774d 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
00774e 93fe      	ST   -X,R31
00774f 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
007750 e000     +LDI R16 , LOW ( 0 )
007751 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
007752 3005     +CPI R16 , LOW ( 5 )
007753 e0e0     +LDI R30 , HIGH ( 5 )
007754 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007755 f4a4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
007756 940e cfde 	CALL SUBOPT_0x26D
007758 f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
007759 940e cfe5 	CALL SUBOPT_0x26E
00775b 2be6      	OR   R30,R22
00775c 2bf7      	OR   R31,R23
00775d c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
00775e 940e cfe5 	CALL SUBOPT_0x26E
007760 95e0      	COM  R30
007761 95f0      	COM  R31
007762 23e6      	AND  R30,R22
007763 23f7      	AND  R31,R23
                 _0x1E0067:
007764 01dc      	MOVW R26,R24
007765 93ed      	ST   X+,R30
007766 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
007767 5f0f     +SUBI R16 , LOW ( - 1 )
007768 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007769 cfe8      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
00776a eae1     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
00776b e4fa     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
00776c e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
00776d e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
00776e 940e c827 	CALL SUBOPT_0x142
007770 940e c0f9 	CALL SUBOPT_0x1E
007772 940e ca02 	CALL SUBOPT_0x189
                 ; 000F 0191 
                 ; 000F 0192     return 0;
007774 940e c5bf 	CALL SUBOPT_0xD5
007776 940c 7cf0 	JMP  _0x20E0057
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
007778 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
007779 91a0 1680 	LDS  R26,_eventQ_len
00777b 91b0 1681 	LDS  R27,_eventQ_len+1
00777d 9754      	SBIW R26,20
00777e f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
00777f efef      	LDI  R30,LOW(65535)
007780 efff      	LDI  R31,HIGH(65535)
007781 c05c      	RJMP _0x20E005C
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
007782 940e cff3 	CALL SUBOPT_0x26F
007784 5fec      	SUBI R30,LOW(-_eventQ)
007785 4ef9      	SBCI R31,HIGH(-_eventQ)
007786 940e c4e8 	CALL SUBOPT_0xB3
007788 940e cf72 	CALL SUBOPT_0x25C
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
00778a 940e cff3 	CALL SUBOPT_0x26F
                +
00778c 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
00778d 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
00778e 81a9      	LDD  R26,Y+1
00778f 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
007790 940e cff3 	CALL SUBOPT_0x26F
                +
007792 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
007793 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
007794 81a8      	LD   R26,Y
007795 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
007796 91a0 167c 	LDS  R26,_last_wr_eventQ
007798 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00779a 9611      	ADIW R26,1
00779b e1e4      	LDI  R30,LOW(20)
00779c e0f0      	LDI  R31,HIGH(20)
00779d 940e dfeb 	CALL __MODW21
00779f 93e0 167c 	STS  _last_wr_eventQ,R30
0077a1 93f0 167d 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
0077a3 e8a0      	LDI  R26,LOW(_eventQ_len)
0077a4 e1b6      	LDI  R27,HIGH(_eventQ_len)
0077a5 91ed      	LD   R30,X+
0077a6 91fd      	LD   R31,X+
0077a7 9631      	ADIW R30,1
0077a8 c031      	RJMP _0x20E005D
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
0077a9 93ba      	ST   -Y,R27
0077aa 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
0077ab 91e0 1680 	LDS  R30,_eventQ_len
0077ad 91f0 1681 	LDS  R31,_eventQ_len+1
0077af 9730      	SBIW R30,0
0077b0 f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
0077b1 efef      	LDI  R30,LOW(65535)
0077b2 efff      	LDI  R31,HIGH(65535)
0077b3 c02a      	RJMP _0x20E005C
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
0077b4 940e cffb 	CALL SUBOPT_0x270
0077b6 5fec      	SUBI R30,LOW(-_eventQ)
0077b7 4ef9      	SBCI R31,HIGH(-_eventQ)
0077b8 940e cf80 	CALL SUBOPT_0x25F
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
0077ba 940e cffb 	CALL SUBOPT_0x270
                +
0077bc 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
0077bd 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0077be 81e0      	LD   R30,Z
0077bf 81aa      	LDD  R26,Y+2
0077c0 81bb      	LDD  R27,Y+2+1
0077c1 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
0077c2 940e cffb 	CALL SUBOPT_0x270
                +
0077c4 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0077c5 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0077c6 940e d003 	CALL SUBOPT_0x271
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
0077c8 91a0 167e 	LDS  R26,_last_rd_eventQ
0077ca 91b0 167f 	LDS  R27,_last_rd_eventQ+1
0077cc 9611      	ADIW R26,1
0077cd e1e4      	LDI  R30,LOW(20)
0077ce e0f0      	LDI  R31,HIGH(20)
0077cf 940e dfeb 	CALL __MODW21
0077d1 93e0 167e 	STS  _last_rd_eventQ,R30
0077d3 93f0 167f 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
0077d5 e8a0      	LDI  R26,LOW(_eventQ_len)
0077d6 e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E005E:
0077d7 91ed      	LD   R30,X+
0077d8 91fd      	LD   R31,X+
0077d9 9731      	SBIW R30,1
                 _0x20E005D:
0077da 93fe      	ST   -X,R31
0077db 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
0077dc e0e0      	LDI  R30,LOW(0)
0077dd e0f0      	LDI  R31,HIGH(0)
                 _0x20E005C:
0077de 9626      	ADIW R28,6
0077df 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
0077e0 93ba      	ST   -Y,R27
0077e1 93aa      	ST   -Y,R26
0077e2 940e c19f 	CALL SUBOPT_0x37
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
0077e4 e000     +LDI R16 , LOW ( 0 )
0077e5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
0077e6 81ee      	LDD  R30,Y+6
0077e7 81ff      	LDD  R31,Y+6+1
0077e8 170e      	CP   R16,R30
0077e9 071f      	CPC  R17,R31
0077ea f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
0077eb 01f8      	MOVW R30,R16
0077ec 85a8      	LDD  R26,Y+8
0077ed 85b9      	LDD  R27,Y+8+1
0077ee 0fae      	ADD  R26,R30
0077ef 1fbf      	ADC  R27,R31
0077f0 91ac      	LD   R26,X
0077f1 d00b      	RCALL _checkAlarmFromSrc
0077f2 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
0077f3 2b24     +OR R18 , R20
0077f4 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
0077f5 5f0f     +SUBI R16 , LOW ( - 1 )
0077f6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0077f7 cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
0077f8 01f9      	MOVW R30,R18
0077f9 940e e0d5 	CALL __LOADLOCR6
                 _0x20E005B:
0077fb 962a      	ADIW R28,10
0077fc 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
0077fd 93aa      	ST   -Y,R26
0077fe 940e d008 	CALL SUBOPT_0x272
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
007800 e020     +LDI R18 , LOW ( 0 )
007801 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
007802 81ec      	LDD  R30,Y+4
007803 e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
007804 3ce0      	CPI  R30,LOW(0xC0)
007805 e0a0      	LDI  R26,HIGH(0xC0)
007806 07fa      	CPC  R31,R26
007807 f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
007808 91a0 146f 	LDS  R26,_sensorStatus
00780a 30a0      	CPI  R26,LOW(0x0)
00780b f011      	BREQ _0x22000D
00780c 3faf      	CPI  R26,LOW(0xFF)
00780d f421      	BRNE _0x22000F
                 _0x22000D:
00780e 91a0 1474 	LDS  R26,_dataStatus
007810 30a0      	CPI  R26,LOW(0x0)
007811 f011      	BREQ _0x22000C
                 _0x22000F:
                +
007812 e021     +LDI R18 , LOW ( 1 )
007813 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
007814 c2b5      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
007815 3ce1      	CPI  R30,LOW(0xC1)
007816 e0a0      	LDI  R26,HIGH(0xC1)
007817 07fa      	CPC  R31,R26
007818 f439      	BRNE _0x220011
007819 91e0 1474 	LDS  R30,_dataStatus
00781b 70e1      	ANDI R30,LOW(0x1)
00781c f011      	BREQ _0x220012
                +
00781d e021     +LDI R18 , LOW ( 1 )
00781e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
00781f c2aa      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
007820 3ce2      	CPI  R30,LOW(0xC2)
007821 e0a0      	LDI  R26,HIGH(0xC2)
007822 07fa      	CPC  R31,R26
007823 f439      	BRNE _0x220013
007824 91e0 1474 	LDS  R30,_dataStatus
007826 71e1      	ANDI R30,LOW(0x11)
007827 f011      	BREQ _0x220014
                +
007828 e021     +LDI R18 , LOW ( 1 )
007829 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
00782a c29f      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
00782b 3ce3      	CPI  R30,LOW(0xC3)
00782c e0a0      	LDI  R26,HIGH(0xC3)
00782d 07fa      	CPC  R31,R26
00782e f439      	BRNE _0x220015
00782f 91e0 1474 	LDS  R30,_dataStatus
007831 70e2      	ANDI R30,LOW(0x2)
007832 f011      	BREQ _0x220016
                +
007833 e021     +LDI R18 , LOW ( 1 )
007834 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
007835 c294      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
007836 3ce4      	CPI  R30,LOW(0xC4)
007837 e0a0      	LDI  R26,HIGH(0xC4)
007838 07fa      	CPC  R31,R26
007839 f439      	BRNE _0x220017
00783a 91e0 1474 	LDS  R30,_dataStatus
00783c 70e4      	ANDI R30,LOW(0x4)
00783d f011      	BREQ _0x220018
                +
00783e e021     +LDI R18 , LOW ( 1 )
00783f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
007840 c289      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
007841 3ce5      	CPI  R30,LOW(0xC5)
007842 e0a0      	LDI  R26,HIGH(0xC5)
007843 07fa      	CPC  R31,R26
007844 f439      	BRNE _0x220019
007845 91e0 1474 	LDS  R30,_dataStatus
007847 71e4      	ANDI R30,LOW(0x14)
007848 f011      	BREQ _0x22001A
                +
007849 e021     +LDI R18 , LOW ( 1 )
00784a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
00784b c27e      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
00784c 3ce6      	CPI  R30,LOW(0xC6)
00784d e0a0      	LDI  R26,HIGH(0xC6)
00784e 07fa      	CPC  R31,R26
00784f f439      	BRNE _0x22001B
007850 91e0 1474 	LDS  R30,_dataStatus
007852 70e8      	ANDI R30,LOW(0x8)
007853 f011      	BREQ _0x22001C
                +
007854 e021     +LDI R18 , LOW ( 1 )
007855 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
007856 c273      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
007857 3ce7      	CPI  R30,LOW(0xC7)
007858 e0a0      	LDI  R26,HIGH(0xC7)
007859 07fa      	CPC  R31,R26
00785a f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
00785b 91a0 146f 	LDS  R26,_sensorStatus
00785d 30a0      	CPI  R26,LOW(0x0)
00785e f011      	BREQ _0x22001F
00785f 3faf      	CPI  R26,LOW(0xFF)
007860 f409      	BRNE _0x220020
                 _0x22001F:
007861 c002      	RJMP _0x22001E
                 _0x220020:
                +
007862 e021     +LDI R18 , LOW ( 1 )
007863 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
007864 c265      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
007865 3ce8      	CPI  R30,LOW(0xC8)
007866 e0a0      	LDI  R26,HIGH(0xC8)
007867 07fa      	CPC  R31,R26
007868 f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
007869 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
00786b 30a0      	CPI  R26,LOW(0x0)
00786c f021      	BREQ _0x220023
                +
00786d 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
00786f 3faf      	CPI  R26,LOW(0xFF)
007870 f421      	BRNE _0x220025
                 _0x220023:
                +
007871 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
007873 30a0      	CPI  R26,LOW(0x0)
007874 f011      	BREQ _0x220022
                 _0x220025:
                +
007875 e021     +LDI R18 , LOW ( 1 )
007876 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
007877 c252      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
007878 3ce9      	CPI  R30,LOW(0xC9)
007879 e0a0      	LDI  R26,HIGH(0xC9)
00787a 07fa      	CPC  R31,R26
00787b f439      	BRNE _0x220027
                +
00787c 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
00787e 70e1      	ANDI R30,LOW(0x1)
00787f f011      	BREQ _0x220028
                +
007880 e021     +LDI R18 , LOW ( 1 )
007881 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
007882 c247      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
007883 3cea      	CPI  R30,LOW(0xCA)
007884 e0a0      	LDI  R26,HIGH(0xCA)
007885 07fa      	CPC  R31,R26
007886 f439      	BRNE _0x220029
                +
007887 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007889 71e1      	ANDI R30,LOW(0x11)
00788a f011      	BREQ _0x22002A
                +
00788b e021     +LDI R18 , LOW ( 1 )
00788c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
00788d c23c      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
00788e 3ceb      	CPI  R30,LOW(0xCB)
00788f e0a0      	LDI  R26,HIGH(0xCB)
007890 07fa      	CPC  R31,R26
007891 f439      	BRNE _0x22002B
                +
007892 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007894 70e2      	ANDI R30,LOW(0x2)
007895 f011      	BREQ _0x22002C
                +
007896 e021     +LDI R18 , LOW ( 1 )
007897 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
007898 c231      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
007899 3cec      	CPI  R30,LOW(0xCC)
00789a e0a0      	LDI  R26,HIGH(0xCC)
00789b 07fa      	CPC  R31,R26
00789c f439      	BRNE _0x22002D
                +
00789d 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
00789f 70e4      	ANDI R30,LOW(0x4)
0078a0 f011      	BREQ _0x22002E
                +
0078a1 e021     +LDI R18 , LOW ( 1 )
0078a2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
0078a3 c226      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
0078a4 3ced      	CPI  R30,LOW(0xCD)
0078a5 e0a0      	LDI  R26,HIGH(0xCD)
0078a6 07fa      	CPC  R31,R26
0078a7 f439      	BRNE _0x22002F
                +
0078a8 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078aa 71e4      	ANDI R30,LOW(0x14)
0078ab f011      	BREQ _0x220030
                +
0078ac e021     +LDI R18 , LOW ( 1 )
0078ad e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
0078ae c21b      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
0078af 3cee      	CPI  R30,LOW(0xCE)
0078b0 e0a0      	LDI  R26,HIGH(0xCE)
0078b1 07fa      	CPC  R31,R26
0078b2 f439      	BRNE _0x220031
                +
0078b3 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0078b5 70e8      	ANDI R30,LOW(0x8)
0078b6 f011      	BREQ _0x220032
                +
0078b7 e021     +LDI R18 , LOW ( 1 )
0078b8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
0078b9 c210      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
0078ba 3cef      	CPI  R30,LOW(0xCF)
0078bb e0a0      	LDI  R26,HIGH(0xCF)
0078bc 07fa      	CPC  R31,R26
0078bd f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0078be 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0078c0 30a0      	CPI  R26,LOW(0x0)
0078c1 f021      	BREQ _0x220035
                +
0078c2 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0078c4 3faf      	CPI  R26,LOW(0xFF)
0078c5 f409      	BRNE _0x220036
                 _0x220035:
0078c6 c002      	RJMP _0x220034
                 _0x220036:
                +
0078c7 e021     +LDI R18 , LOW ( 1 )
0078c8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
0078c9 c200      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
0078ca 3de0      	CPI  R30,LOW(0xD0)
0078cb e0a0      	LDI  R26,HIGH(0xD0)
0078cc 07fa      	CPC  R31,R26
0078cd f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
0078ce 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0078d0 30a0      	CPI  R26,LOW(0x0)
0078d1 f021      	BREQ _0x220039
                +
0078d2 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0078d4 3faf      	CPI  R26,LOW(0xFF)
0078d5 f421      	BRNE _0x22003B
                 _0x220039:
                +
0078d6 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
0078d8 30a0      	CPI  R26,LOW(0x0)
0078d9 f011      	BREQ _0x220038
                 _0x22003B:
                +
0078da e021     +LDI R18 , LOW ( 1 )
0078db e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
0078dc c1ed      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
0078dd 3de1      	CPI  R30,LOW(0xD1)
0078de e0a0      	LDI  R26,HIGH(0xD1)
0078df 07fa      	CPC  R31,R26
0078e0 f439      	BRNE _0x22003D
                +
0078e1 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0078e3 70e1      	ANDI R30,LOW(0x1)
0078e4 f011      	BREQ _0x22003E
                +
0078e5 e021     +LDI R18 , LOW ( 1 )
0078e6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
0078e7 c1e2      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
0078e8 3de2      	CPI  R30,LOW(0xD2)
0078e9 e0a0      	LDI  R26,HIGH(0xD2)
0078ea 07fa      	CPC  R31,R26
0078eb f439      	BRNE _0x22003F
                +
0078ec 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0078ee 71e1      	ANDI R30,LOW(0x11)
0078ef f011      	BREQ _0x220040
                +
0078f0 e021     +LDI R18 , LOW ( 1 )
0078f1 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
0078f2 c1d7      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
0078f3 3de3      	CPI  R30,LOW(0xD3)
0078f4 e0a0      	LDI  R26,HIGH(0xD3)
0078f5 07fa      	CPC  R31,R26
0078f6 f439      	BRNE _0x220041
                +
0078f7 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0078f9 70e2      	ANDI R30,LOW(0x2)
0078fa f011      	BREQ _0x220042
                +
0078fb e021     +LDI R18 , LOW ( 1 )
0078fc e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
0078fd c1cc      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
0078fe 3de4      	CPI  R30,LOW(0xD4)
0078ff e0a0      	LDI  R26,HIGH(0xD4)
007900 07fa      	CPC  R31,R26
007901 f439      	BRNE _0x220043
                +
007902 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007904 70e4      	ANDI R30,LOW(0x4)
007905 f011      	BREQ _0x220044
                +
007906 e021     +LDI R18 , LOW ( 1 )
007907 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
007908 c1c1      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
007909 3de5      	CPI  R30,LOW(0xD5)
00790a e0a0      	LDI  R26,HIGH(0xD5)
00790b 07fa      	CPC  R31,R26
00790c f439      	BRNE _0x220045
                +
00790d 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00790f 71e4      	ANDI R30,LOW(0x14)
007910 f011      	BREQ _0x220046
                +
007911 e021     +LDI R18 , LOW ( 1 )
007912 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
007913 c1b6      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
007914 3de6      	CPI  R30,LOW(0xD6)
007915 e0a0      	LDI  R26,HIGH(0xD6)
007916 07fa      	CPC  R31,R26
007917 f439      	BRNE _0x220047
                +
007918 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00791a 70e8      	ANDI R30,LOW(0x8)
00791b f011      	BREQ _0x220048
                +
00791c e021     +LDI R18 , LOW ( 1 )
00791d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
00791e c1ab      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
00791f 3de7      	CPI  R30,LOW(0xD7)
007920 e0a0      	LDI  R26,HIGH(0xD7)
007921 07fa      	CPC  R31,R26
007922 f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007923 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007925 30a0      	CPI  R26,LOW(0x0)
007926 f021      	BREQ _0x22004B
                +
007927 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007929 3faf      	CPI  R26,LOW(0xFF)
00792a f409      	BRNE _0x22004C
                 _0x22004B:
00792b c002      	RJMP _0x22004A
                 _0x22004C:
                +
00792c e021     +LDI R18 , LOW ( 1 )
00792d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
00792e c19b      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
00792f 3de8      	CPI  R30,LOW(0xD8)
007930 e0a0      	LDI  R26,HIGH(0xD8)
007931 07fa      	CPC  R31,R26
007932 f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
007933 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007935 30a0      	CPI  R26,LOW(0x0)
007936 f021      	BREQ _0x22004F
                +
007937 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007939 3faf      	CPI  R26,LOW(0xFF)
00793a f421      	BRNE _0x220051
                 _0x22004F:
                +
00793b 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
00793d 30a0      	CPI  R26,LOW(0x0)
00793e f011      	BREQ _0x22004E
                 _0x220051:
                +
00793f e021     +LDI R18 , LOW ( 1 )
007940 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
007941 c188      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
007942 3de9      	CPI  R30,LOW(0xD9)
007943 e0a0      	LDI  R26,HIGH(0xD9)
007944 07fa      	CPC  R31,R26
007945 f439      	BRNE _0x220053
                +
007946 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007948 70e1      	ANDI R30,LOW(0x1)
007949 f011      	BREQ _0x220054
                +
00794a e021     +LDI R18 , LOW ( 1 )
00794b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
00794c c17d      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
00794d 3dea      	CPI  R30,LOW(0xDA)
00794e e0a0      	LDI  R26,HIGH(0xDA)
00794f 07fa      	CPC  R31,R26
007950 f439      	BRNE _0x220055
                +
007951 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007953 71e1      	ANDI R30,LOW(0x11)
007954 f011      	BREQ _0x220056
                +
007955 e021     +LDI R18 , LOW ( 1 )
007956 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
007957 c172      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
007958 3deb      	CPI  R30,LOW(0xDB)
007959 e0a0      	LDI  R26,HIGH(0xDB)
00795a 07fa      	CPC  R31,R26
00795b f439      	BRNE _0x220057
                +
00795c 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00795e 70e2      	ANDI R30,LOW(0x2)
00795f f011      	BREQ _0x220058
                +
007960 e021     +LDI R18 , LOW ( 1 )
007961 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
007962 c167      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
007963 3dec      	CPI  R30,LOW(0xDC)
007964 e0a0      	LDI  R26,HIGH(0xDC)
007965 07fa      	CPC  R31,R26
007966 f439      	BRNE _0x220059
                +
007967 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007969 70e4      	ANDI R30,LOW(0x4)
00796a f011      	BREQ _0x22005A
                +
00796b e021     +LDI R18 , LOW ( 1 )
00796c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
00796d c15c      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
00796e 3ded      	CPI  R30,LOW(0xDD)
00796f e0a0      	LDI  R26,HIGH(0xDD)
007970 07fa      	CPC  R31,R26
007971 f439      	BRNE _0x22005B
                +
007972 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007974 71e4      	ANDI R30,LOW(0x14)
007975 f011      	BREQ _0x22005C
                +
007976 e021     +LDI R18 , LOW ( 1 )
007977 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
007978 c151      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
007979 3dee      	CPI  R30,LOW(0xDE)
00797a e0a0      	LDI  R26,HIGH(0xDE)
00797b 07fa      	CPC  R31,R26
00797c f439      	BRNE _0x22005D
                +
00797d 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00797f 70e8      	ANDI R30,LOW(0x8)
007980 f011      	BREQ _0x22005E
                +
007981 e021     +LDI R18 , LOW ( 1 )
007982 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
007983 c146      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
007984 3def      	CPI  R30,LOW(0xDF)
007985 e0a0      	LDI  R26,HIGH(0xDF)
007986 07fa      	CPC  R31,R26
007987 f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007988 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
00798a 30a0      	CPI  R26,LOW(0x0)
00798b f021      	BREQ _0x220061
                +
00798c 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
00798e 3faf      	CPI  R26,LOW(0xFF)
00798f f409      	BRNE _0x220062
                 _0x220061:
007990 c002      	RJMP _0x220060
                 _0x220062:
                +
007991 e021     +LDI R18 , LOW ( 1 )
007992 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
007993 c136      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
007994 3ee0      	CPI  R30,LOW(0xE0)
007995 e0a0      	LDI  R26,HIGH(0xE0)
007996 07fa      	CPC  R31,R26
007997 f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
007998 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
00799a 30a0      	CPI  R26,LOW(0x0)
00799b f021      	BREQ _0x220065
                +
00799c 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
00799e 3faf      	CPI  R26,LOW(0xFF)
00799f f421      	BRNE _0x220067
                 _0x220065:
                +
0079a0 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
0079a2 30a0      	CPI  R26,LOW(0x0)
0079a3 f011      	BREQ _0x220064
                 _0x220067:
                +
0079a4 e021     +LDI R18 , LOW ( 1 )
0079a5 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
0079a6 c123      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
0079a7 3ee1      	CPI  R30,LOW(0xE1)
0079a8 e0a0      	LDI  R26,HIGH(0xE1)
0079a9 07fa      	CPC  R31,R26
0079aa f439      	BRNE _0x220069
                +
0079ab 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079ad 70e1      	ANDI R30,LOW(0x1)
0079ae f011      	BREQ _0x22006A
                +
0079af e021     +LDI R18 , LOW ( 1 )
0079b0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
0079b1 c118      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
0079b2 3ee2      	CPI  R30,LOW(0xE2)
0079b3 e0a0      	LDI  R26,HIGH(0xE2)
0079b4 07fa      	CPC  R31,R26
0079b5 f439      	BRNE _0x22006B
                +
0079b6 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079b8 71e1      	ANDI R30,LOW(0x11)
0079b9 f011      	BREQ _0x22006C
                +
0079ba e021     +LDI R18 , LOW ( 1 )
0079bb e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
0079bc c10d      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
0079bd 3ee3      	CPI  R30,LOW(0xE3)
0079be e0a0      	LDI  R26,HIGH(0xE3)
0079bf 07fa      	CPC  R31,R26
0079c0 f439      	BRNE _0x22006D
                +
0079c1 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079c3 70e2      	ANDI R30,LOW(0x2)
0079c4 f011      	BREQ _0x22006E
                +
0079c5 e021     +LDI R18 , LOW ( 1 )
0079c6 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
0079c7 c102      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
0079c8 3ee4      	CPI  R30,LOW(0xE4)
0079c9 e0a0      	LDI  R26,HIGH(0xE4)
0079ca 07fa      	CPC  R31,R26
0079cb f439      	BRNE _0x22006F
                +
0079cc 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079ce 70e4      	ANDI R30,LOW(0x4)
0079cf f011      	BREQ _0x220070
                +
0079d0 e021     +LDI R18 , LOW ( 1 )
0079d1 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
0079d2 c0f7      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
0079d3 3ee5      	CPI  R30,LOW(0xE5)
0079d4 e0a0      	LDI  R26,HIGH(0xE5)
0079d5 07fa      	CPC  R31,R26
0079d6 f439      	BRNE _0x220071
                +
0079d7 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079d9 71e4      	ANDI R30,LOW(0x14)
0079da f011      	BREQ _0x220072
                +
0079db e021     +LDI R18 , LOW ( 1 )
0079dc e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
0079dd c0ec      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
0079de 3ee6      	CPI  R30,LOW(0xE6)
0079df e0a0      	LDI  R26,HIGH(0xE6)
0079e0 07fa      	CPC  R31,R26
0079e1 f439      	BRNE _0x220073
                +
0079e2 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0079e4 70e8      	ANDI R30,LOW(0x8)
0079e5 f011      	BREQ _0x220074
                +
0079e6 e021     +LDI R18 , LOW ( 1 )
0079e7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
0079e8 c0e1      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
0079e9 3ee7      	CPI  R30,LOW(0xE7)
0079ea e0a0      	LDI  R26,HIGH(0xE7)
0079eb 07fa      	CPC  R31,R26
0079ec f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0079ed 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0079ef 30a0      	CPI  R26,LOW(0x0)
0079f0 f021      	BREQ _0x220077
                +
0079f1 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0079f3 3faf      	CPI  R26,LOW(0xFF)
0079f4 f409      	BRNE _0x220078
                 _0x220077:
0079f5 c002      	RJMP _0x220076
                 _0x220078:
                +
0079f6 e021     +LDI R18 , LOW ( 1 )
0079f7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
0079f8 c0d1      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
0079f9 37e1      	CPI  R30,LOW(0x71)
0079fa e0a0      	LDI  R26,HIGH(0x71)
0079fb 07fa      	CPC  R31,R26
0079fc f409      	BRNE _0x220079
0079fd c0cc      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
0079fe 37e2      	CPI  R30,LOW(0x72)
0079ff e0a0      	LDI  R26,HIGH(0x72)
007a00 07fa      	CPC  R31,R26
007a01 f481      	BRNE _0x22007A
                +
007a02 e000     +LDI R16 , LOW ( 0 )
007a03 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007a04 3002     +CPI R16 , LOW ( 2 )
007a05 e0e0     +LDI R30 , HIGH ( 2 )
007a06 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007a07 f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
007a08 e7ac      	LDI  R26,LOW(_dinStatus)
007a09 e1b4      	LDI  R27,HIGH(_dinStatus)
007a0a 0fa0      	ADD  R26,R16
007a0b 1fb1      	ADC  R27,R17
007a0c 91ac      	LD   R26,X
007a0d 30a1      	CPI  R26,LOW(0x1)
007a0e f411      	BRNE _0x22007E
                +
007a0f e021     +LDI R18 , LOW ( 1 )
007a10 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
007a11 c0b8      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
007a12 37e3      	CPI  R30,LOW(0x73)
007a13 e0a0      	LDI  R26,HIGH(0x73)
007a14 07fa      	CPC  R31,R26
007a15 f471      	BRNE _0x22007F
                +
007a16 e000     +LDI R16 , LOW ( 0 )
007a17 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007a18 3002     +CPI R16 , LOW ( 2 )
007a19 e0e0     +LDI R30 , HIGH ( 2 )
007a1a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007a1b f43c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
007a1c e7ac      	LDI  R26,LOW(_dinStatus)
007a1d e1b4      	LDI  R27,HIGH(_dinStatus)
007a1e 940e d00d 	CALL SUBOPT_0x273
007a20 f411      	BRNE _0x220083
                +
007a21 e021     +LDI R18 , LOW ( 1 )
007a22 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
007a23 c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
007a24 34e0      	CPI  R30,LOW(0x40)
007a25 e0a0      	LDI  R26,HIGH(0x40)
007a26 07fa      	CPC  R31,R26
007a27 f409      	BRNE _0x220084
007a28 c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
007a29 35e0      	CPI  R30,LOW(0x50)
007a2a e0a0      	LDI  R26,HIGH(0x50)
007a2b 07fa      	CPC  R31,R26
007a2c f439      	BRNE _0x220085
007a2d 91a0 147c 	LDS  R26,_dinStatus
007a2f 30a1      	CPI  R26,LOW(0x1)
007a30 f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
007a31 e021     +LDI R18 , LOW ( 1 )
007a32 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
007a33 c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
007a34 36e0      	CPI  R30,LOW(0x60)
007a35 e0a0      	LDI  R26,HIGH(0x60)
007a36 07fa      	CPC  R31,R26
007a37 f439      	BRNE _0x220087
007a38 91e0 147c 	LDS  R30,_dinStatus
007a3a 30e0      	CPI  R30,0
007a3b f411      	BRNE _0x220088
                +
007a3c e021     +LDI R18 , LOW ( 1 )
007a3d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
007a3e c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
007a3f 34e1      	CPI  R30,LOW(0x41)
007a40 e0a0      	LDI  R26,HIGH(0x41)
007a41 07fa      	CPC  R31,R26
007a42 f409      	BRNE _0x220089
007a43 c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
007a44 35e1      	CPI  R30,LOW(0x51)
007a45 e0a0      	LDI  R26,HIGH(0x51)
007a46 07fa      	CPC  R31,R26
007a47 f439      	BRNE _0x22008A
                +
007a48 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
007a4a 30a1      	CPI  R26,LOW(0x1)
007a4b f411      	BRNE _0x22008B
                +
007a4c e021     +LDI R18 , LOW ( 1 )
007a4d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
007a4e c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
007a4f 36e1      	CPI  R30,LOW(0x61)
007a50 e0a0      	LDI  R26,HIGH(0x61)
007a51 07fa      	CPC  R31,R26
007a52 f439      	BRNE _0x22008C
                +
007a53 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
007a55 30e0      	CPI  R30,0
007a56 f411      	BRNE _0x22008D
                +
007a57 e021     +LDI R18 , LOW ( 1 )
007a58 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
007a59 c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
007a5a 38e0      	CPI  R30,LOW(0x80)
007a5b e0a0      	LDI  R26,HIGH(0x80)
007a5c 07fa      	CPC  R31,R26
007a5d f409      	BRNE _0x22008E
007a5e c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
007a5f 38e1      	CPI  R30,LOW(0x81)
007a60 e0a0      	LDI  R26,HIGH(0x81)
007a61 07fa      	CPC  R31,R26
007a62 f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
007a63 c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
007a64 38e2      	CPI  R30,LOW(0x82)
007a65 e0a0      	LDI  R26,HIGH(0x82)
007a66 07fa      	CPC  R31,R26
007a67 f439      	BRNE _0x220090
007a68 91a0 147a 	LDS  R26,_powerSrcStatus
007a6a 30a1      	CPI  R26,LOW(0x1)
007a6b f411      	BRNE _0x220091
                +
007a6c e021     +LDI R18 , LOW ( 1 )
007a6d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
007a6e c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
007a6f 38e3      	CPI  R30,LOW(0x83)
007a70 e0a0      	LDI  R26,HIGH(0x83)
007a71 07fa      	CPC  R31,R26
007a72 f439      	BRNE _0x220092
007a73 91a0 147b 	LDS  R26,_batteryStatus
007a75 30a1      	CPI  R26,LOW(0x1)
007a76 f411      	BRNE _0x220093
                +
007a77 e021     +LDI R18 , LOW ( 1 )
007a78 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
007a79 c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
007a7a 38e4      	CPI  R30,LOW(0x84)
007a7b e0a0      	LDI  R26,HIGH(0x84)
007a7c 07fa      	CPC  R31,R26
007a7d f409      	BRNE _0x220094
007a7e c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
007a7f 38e5      	CPI  R30,LOW(0x85)
007a80 e0a0      	LDI  R26,HIGH(0x85)
007a81 07fa      	CPC  R31,R26
007a82 f439      	BRNE _0x220095
007a83 91a0 14a7 	LDS  R26,_memoryAlarm
007a85 30a1      	CPI  R26,LOW(0x1)
007a86 f411      	BRNE _0x220096
                +
007a87 e021     +LDI R18 , LOW ( 1 )
007a88 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
007a89 c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
007a8a 38e6      	CPI  R30,LOW(0x86)
007a8b e0a0      	LDI  R26,HIGH(0x86)
007a8c 07fa      	CPC  R31,R26
007a8d f439      	BRNE _0x220097
007a8e 91a0 14a7 	LDS  R26,_memoryAlarm
007a90 30a2      	CPI  R26,LOW(0x2)
007a91 f411      	BRNE _0x220098
                +
007a92 e021     +LDI R18 , LOW ( 1 )
007a93 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
007a94 c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
007a95 38e7      	CPI  R30,LOW(0x87)
007a96 e0a0      	LDI  R26,HIGH(0x87)
007a97 07fa      	CPC  R31,R26
007a98 f439      	BRNE _0x220099
007a99 91a0 1480 	LDS  R26,_serverCommStatus
007a9b 30a2      	CPI  R26,LOW(0x2)
007a9c f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
007a9d e021     +LDI R18 , LOW ( 1 )
007a9e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
007a9f c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
007aa0 39e0      	CPI  R30,LOW(0x90)
007aa1 e0a0      	LDI  R26,HIGH(0x90)
007aa2 07fa      	CPC  R31,R26
007aa3 f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
007aa4 39e1      	CPI  R30,LOW(0x91)
007aa5 e0a0      	LDI  R26,HIGH(0x91)
007aa6 07fa      	CPC  R31,R26
007aa7 f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
007aa8 c004      	RJMP _0x22009E
                 _0x22009D:
007aa9 39e2      	CPI  R30,LOW(0x92)
007aaa e0a0      	LDI  R26,HIGH(0x92)
007aab 07fa      	CPC  R31,R26
007aac f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
007aad c004      	RJMP _0x2200A0
                 _0x22009F:
007aae 39e3      	CPI  R30,LOW(0x93)
007aaf e0a0      	LDI  R26,HIGH(0x93)
007ab0 07fa      	CPC  R31,R26
007ab1 f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
007ab2 c004      	RJMP _0x2200A2
                 _0x2200A1:
007ab3 39e4      	CPI  R30,LOW(0x94)
007ab4 e0a0      	LDI  R26,HIGH(0x94)
007ab5 07fa      	CPC  R31,R26
007ab6 f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
007ab7 c004      	RJMP _0x2200A4
                 _0x2200A3:
007ab8 39ef      	CPI  R30,LOW(0x9F)
007ab9 e0a0      	LDI  R26,HIGH(0x9F)
007aba 07fa      	CPC  R31,R26
007abb f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
007abc efe8     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
007abd e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
007abe e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
007abf e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
007ac0 c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
007ac1 e2eb     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
007ac2 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
007ac3 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
007ac4 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
007ac5 940e e05e 	CALL __PUTPARD1
007ac7 85e8      	LDD  R30,Y+8
007ac8 940e c143 	CALL SUBOPT_0x29
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
007aca 01f9      	MOVW R30,R18
007acb 940e e0d7 	CALL __LOADLOCR4
007acd 940c 7e55 	JMP  _0x20E0054
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
007acf 93ba      	ST   -Y,R27
007ad0 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007ad1 91e0 1692 	LDS  R30,_mtncAlarm
007ad3 91a0 1479 	LDS  R26,_mtncStatus
007ad5 17ea      	CP   R30,R26
007ad6 f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
007ad7 91e0 1479 	LDS  R30,_mtncStatus
007ad9 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
007adb 91e0 1479 	LDS  R30,_mtncStatus
007add 81a8      	LD   R26,Y
007ade 81b9      	LDD  R27,Y+1
007adf 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
007ae0 e0e1      	LDI  R30,LOW(1)
007ae1 e0f0      	LDI  R31,HIGH(1)
007ae2 c0ee      	RJMP _0x20E0059
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
007ae3 c0eb      	RJMP _0x20E005A
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
007ae4 93ba      	ST   -Y,R27
007ae5 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007ae6 91e0 1693 	LDS  R30,_powerSrcAlarm
007ae8 91a0 147a 	LDS  R26,_powerSrcStatus
007aea 17ea      	CP   R30,R26
007aeb f1e1      	BREQ _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
007aec 91e0 169c 	LDS  R30,_lastCheck_S0110003000
007aee 17ea      	CP   R30,R26
007aef f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
007af0 e0e0      	LDI  R30,LOW(0)
007af1 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
007af3 91e0 147a 	LDS  R30,_powerSrcStatus
007af5 93e0 169c 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
007af7 91e0 169b 	LDS  R30,_t_flag_S0110003000
007af9 30e0      	CPI  R30,0
007afa f499      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
007afb 91a0 147a 	LDS  R26,_powerSrcStatus
007afd 30a1      	CPI  R26,LOW(0x1)
007afe f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
007aff e9e7      	LDI  R30,LOW(_t_S0110003000)
007b00 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007b01 940e c957 	CALL SUBOPT_0x170
007b03 c004      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
007b04 e9e7      	LDI  R30,LOW(_t_S0110003000)
007b05 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007b06 940e d012 	CALL SUBOPT_0x274
                 _0x2200F2:
007b08 940e 4146 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
007b0a e0e1      	LDI  R30,LOW(1)
007b0b 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
007b0d c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
007b0e 91a0 1697 	LDS  R26,_t_S0110003000
007b10 91b0 1698 	LDS  R27,_t_S0110003000+1
007b12 9180 1699 	LDS  R24,_t_S0110003000+2
007b14 9190 169a 	LDS  R25,_t_S0110003000+3
007b16 940e 4130 	CALL _TIMER_checkTimerExceed
007b18 9730      	SBIW R30,0
007b19 f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
007b1a 91e0 147a 	LDS  R30,_powerSrcStatus
007b1c 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
007b1e 91e0 147a 	LDS  R30,_powerSrcStatus
007b20 940e d019 	CALL SUBOPT_0x275
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
007b22 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
007b24 e0e1      	LDI  R30,LOW(1)
007b25 e0f0      	LDI  R31,HIGH(1)
007b26 c0aa      	RJMP _0x20E0059
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
007b27 c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
007b28 e0e0      	LDI  R30,LOW(0)
007b29 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
007b2b c0a3      	RJMP _0x20E005A
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
007b2c 93ba      	ST   -Y,R27
007b2d 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007b2e 940e d01e 	CALL SUBOPT_0x276
007b30 f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
007b31 91e0 14a6 	LDS  R30,_batteryAlarm
007b33 91a0 147b 	LDS  R26,_batteryStatus
007b35 17ea      	CP   R30,R26
007b36 f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
007b37 91e0 16a2 	LDS  R30,_lastCheck_S0110004000
007b39 17ea      	CP   R30,R26
007b3a f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
007b3b e0e0      	LDI  R30,LOW(0)
007b3c 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
007b3e 91e0 147b 	LDS  R30,_batteryStatus
007b40 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
007b42 91e0 16a1 	LDS  R30,_t_flag_S0110004000
007b44 30e0      	CPI  R30,0
007b45 f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
007b46 e9ed      	LDI  R30,LOW(_t_S0110004000)
007b47 e1f6      	LDI  R31,HIGH(_t_S0110004000)
007b48 940e c132 	CALL SUBOPT_0x27
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
007b4a e0e1      	LDI  R30,LOW(1)
007b4b 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
007b4d c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
007b4e 91a0 169d 	LDS  R26,_t_S0110004000
007b50 91b0 169e 	LDS  R27,_t_S0110004000+1
007b52 9180 169f 	LDS  R24,_t_S0110004000+2
007b54 9190 16a0 	LDS  R25,_t_S0110004000+3
007b56 940e 4130 	CALL _TIMER_checkTimerExceed
007b58 9730      	SBIW R30,0
007b59 f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
007b5a 91e0 147b 	LDS  R30,_batteryStatus
007b5c 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
007b5e 91e0 147b 	LDS  R30,_batteryStatus
007b60 940e d019 	CALL SUBOPT_0x275
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
007b62 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
007b64 e0e1      	LDI  R30,LOW(1)
007b65 e0f0      	LDI  R31,HIGH(1)
007b66 c06a      	RJMP _0x20E0059
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
007b67 c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
007b68 e0e0      	LDI  R30,LOW(0)
007b69 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
007b6b c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
007b6c e0e0      	LDI  R30,LOW(0)
007b6d 93e0 169d 	STS  _t_S0110004000,R30
007b6f 93e0 169e 	STS  _t_S0110004000+1,R30
007b71 93e0 169f 	STS  _t_S0110004000+2,R30
007b73 93e0 16a0 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
007b75 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
007b77 e6e9      	LDI  R30,LOW(105)
007b78 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
007b7a 91e0 14a6 	LDS  R30,_batteryAlarm
007b7c 30e0      	CPI  R30,0
007b7d f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
007b7e e0e0      	LDI  R30,LOW(0)
007b7f 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
007b81 940e d029 	CALL SUBOPT_0x277
                 ; 0011 0109             return 1;
007b83 c04d      	RJMP _0x20E0059
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
007b84 c04a      	RJMP _0x20E005A
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
007b85 93ba      	ST   -Y,R27
007b86 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007b87 940e d030 	CALL SUBOPT_0x278
007b89 f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
007b8a 91e0 14a7 	LDS  R30,_memoryAlarm
007b8c 91a0 1482 	LDS  R26,_memoryStatus
007b8e 17ea      	CP   R30,R26
007b8f f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
007b90 91e0 16a7 	LDS  R30,_t_flag_S0110005000
007b92 30e0      	CPI  R30,0
007b93 f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
007b94 eae3      	LDI  R30,LOW(_t_S0110005000)
007b95 e1f6      	LDI  R31,HIGH(_t_S0110005000)
007b96 940e c1bf 	CALL SUBOPT_0x3B
                 ; 0011 011B                 t_flag          = 1;
007b98 e0e1      	LDI  R30,LOW(1)
007b99 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
007b9b c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
007b9c 91a0 16a3 	LDS  R26,_t_S0110005000
007b9e 91b0 16a4 	LDS  R27,_t_S0110005000+1
007ba0 9180 16a5 	LDS  R24,_t_S0110005000+2
007ba2 9190 16a6 	LDS  R25,_t_S0110005000+3
007ba4 940e 4130 	CALL _TIMER_checkTimerExceed
007ba6 9730      	SBIW R30,0
007ba7 f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
007ba8 91e0 1482 	LDS  R30,_memoryStatus
007baa 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
007bac 91e0 1482 	LDS  R30,_memoryStatus
007bae 940e d019 	CALL SUBOPT_0x275
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
007bb0 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
007bb2 e0e1      	LDI  R30,LOW(1)
007bb3 e0f0      	LDI  R31,HIGH(1)
007bb4 c01c      	RJMP _0x20E0059
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
007bb5 c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
007bb6 e0e0      	LDI  R30,LOW(0)
007bb7 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
007bb9 c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
007bba e0e0      	LDI  R30,LOW(0)
007bbb 93e0 16a3 	STS  _t_S0110005000,R30
007bbd 93e0 16a4 	STS  _t_S0110005000+1,R30
007bbf 93e0 16a5 	STS  _t_S0110005000+2,R30
007bc1 93e0 16a6 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
007bc3 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
007bc5 91e0 14a6 	LDS  R30,_batteryAlarm
007bc7 30e0      	CPI  R30,0
007bc8 f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
007bc9 e0e0      	LDI  R30,LOW(0)
007bca 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
007bcc 940e d029 	CALL SUBOPT_0x277
                 ; 0011 0136             return 1;
007bce c002      	RJMP _0x20E0059
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E005A:
007bcf e0e0      	LDI  R30,LOW(0)
007bd0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0059:
007bd1 9622      	ADIW R28,2
007bd2 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
007bd3 940e c6e2 	CALL SUBOPT_0x107
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007bd5 f022      	BRMI _0x2200C7
007bd6 81aa      	LDD  R26,Y+2
007bd7 81bb      	LDD  R27,Y+2+1
007bd8 9712      	SBIW R26,2
007bd9 f04c      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
007bda e5eb     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
007bdb e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
007bdc e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
007bdd e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
007bde 940e c6ce 	CALL SUBOPT_0x103
007be0 940e c637 	CALL SUBOPT_0xE8
                 ; 0011 0145         return 0;
007be2 c10b      	RJMP _0x20E0058
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
007be3 940e d037 	CALL SUBOPT_0x279
007be5 56ea      	SUBI R30,LOW(-_dinAlarm)
007be6 4efb      	SBCI R31,HIGH(-_dinAlarm)
007be7 81e0      	LD   R30,Z
007be8 17ea      	CP   R30,R26
007be9 f411      	BRNE PC+3
007bea 940c 7c2c 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
007bec 940e d037 	CALL SUBOPT_0x279
007bee 54ee      	SUBI R30,LOW(-_lastCheck_S0110006000)
007bef 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
007bf0 81e0      	LD   R30,Z
007bf1 17ea      	CP   R30,R26
007bf2 f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
007bf3 940e d03f 	CALL SUBOPT_0x27A
007bf5 e0a0      	LDI  R26,LOW(0)
007bf6 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
007bf7 81aa      	LDD  R26,Y+2
007bf8 81bb      	LDD  R27,Y+2+1
007bf9 54ae      	SUBI R26,LOW(-_lastCheck_S0110006000)
007bfa 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
007bfb 940e d044 	CALL SUBOPT_0x27B
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
007bfd 940e d03f 	CALL SUBOPT_0x27A
007bff 81e0      	LD   R30,Z
007c00 30e0      	CPI  R30,0
007c01 f469      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
007c02 81ea      	LDD  R30,Y+2
007c03 81fb      	LDD  R31,Y+2+1
007c04 eaa8      	LDI  R26,LOW(_t_S0110006000)
007c05 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007c06 940e cfd6 	CALL SUBOPT_0x26B
007c08 940e cd51 	CALL SUBOPT_0x210
                 ; 0011 0151             t_flag[ch]          = 1;
007c0a 940e d03f 	CALL SUBOPT_0x27A
007c0c e0a1      	LDI  R26,LOW(1)
007c0d 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
007c0e c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
007c0f 81ea      	LDD  R30,Y+2
007c10 81fb      	LDD  R31,Y+2+1
007c11 eaa8      	LDI  R26,LOW(_t_S0110006000)
007c12 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007c13 940e cfda 	CALL SUBOPT_0x26C
007c15 940e c0ee 	CALL SUBOPT_0x1C
007c17 f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
007c18 81aa      	LDD  R26,Y+2
007c19 81bb      	LDD  R27,Y+2+1
007c1a 56aa      	SUBI R26,LOW(-_dinAlarm)
007c1b 4ebb      	SBCI R27,HIGH(-_dinAlarm)
007c1c 940e d044 	CALL SUBOPT_0x27B
                 ; 0011 0157                 *code           = dinStatus[ch];
007c1e 81ea      	LDD  R30,Y+2
007c1f 81fb      	LDD  R31,Y+2+1
007c20 58e4      	SUBI R30,LOW(-_dinStatus)
007c21 4efb      	SBCI R31,HIGH(-_dinStatus)
007c22 940e d003 	CALL SUBOPT_0x271
                 ; 0011 0158                 t_flag[ch]      = 0;
007c24 940e d03f 	CALL SUBOPT_0x27A
007c26 e0a0      	LDI  R26,LOW(0)
007c27 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
007c28 e0e1      	LDI  R30,LOW(1)
007c29 e0f0      	LDI  R31,HIGH(1)
007c2a c0c5      	RJMP _0x20E0057
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
007c2b c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
007c2c 940e d03f 	CALL SUBOPT_0x27A
007c2e e0a0      	LDI  R26,LOW(0)
007c2f 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
007c30 c0bd      	RJMP _0x20E0058
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
007c31 940e d04b 	CALL SUBOPT_0x27C
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007c33 59e1      	SUBI R30,LOW(-_sensorStatus)
007c34 4efb      	SBCI R31,HIGH(-_sensorStatus)
007c35 81a0      	LD   R26,Z
007c36 81ea      	LDD  R30,Y+2
007c37 81fb      	LDD  R31,Y+2+1
007c38 57e4      	SUBI R30,LOW(-_sensorAlarm)
007c39 4efb      	SBCI R31,HIGH(-_sensorAlarm)
007c3a 81e0      	LD   R30,Z
007c3b 17ea      	CP   R30,R26
007c3c f411      	BRNE PC+3
007c3d 940c 7c90 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
007c3f 940e d050 	CALL SUBOPT_0x27D
007c41 81a0      	LD   R26,Z
007c42 81ea      	LDD  R30,Y+2
007c43 81fb      	LDD  R31,Y+2+1
007c44 53e3      	SUBI R30,LOW(-_lastCheck_S0110007000)
007c45 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
007c46 81e0      	LD   R30,Z
007c47 17ea      	CP   R30,R26
007c48 f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
007c49 940e d055 	CALL SUBOPT_0x27E
007c4b e0a0      	LDI  R26,LOW(0)
007c4c 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
007c4d 81aa      	LDD  R26,Y+2
007c4e 81bb      	LDD  R27,Y+2+1
007c4f 53a3      	SUBI R26,LOW(-_lastCheck_S0110007000)
007c50 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
007c51 940e d050 	CALL SUBOPT_0x27D
007c53 81e0      	LD   R30,Z
007c54 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
007c55 940e d055 	CALL SUBOPT_0x27E
007c57 81e0      	LD   R30,Z
007c58 30e0      	CPI  R30,0
007c59 f4c9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007c5a 940e d050 	CALL SUBOPT_0x27D
007c5c 81a0      	LD   R26,Z
007c5d 3faf      	CPI  R26,LOW(0xFF)
007c5e f439      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
007c5f 940e d05a 	CALL SUBOPT_0x27F
                +
007c61 e1ae     +LDI R26 , LOW ( 0x1E )
007c62 e0b0     +LDI R27 , HIGH ( 0x1E )
007c63 e080     +LDI R24 , BYTE3 ( 0x1E )
007c64 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
007c65 c006      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
007c66 940e d05a 	CALL SUBOPT_0x27F
                +
007c68 e0a3     +LDI R26 , LOW ( 0x3 )
007c69 e0b0     +LDI R27 , HIGH ( 0x3 )
007c6a e080     +LDI R24 , BYTE3 ( 0x3 )
007c6b e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
                 _0x2200F4:
007c6c 940e 4146 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
007c6e 940e d055 	CALL SUBOPT_0x27E
007c70 e0a1      	LDI  R26,LOW(1)
007c71 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
007c72 c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
007c73 81ea      	LDD  R30,Y+2
007c74 81fb      	LDD  R31,Y+2+1
007c75 eba4      	LDI  R26,LOW(_t_S0110007000)
007c76 e1b6      	LDI  R27,HIGH(_t_S0110007000)
007c77 940e cfda 	CALL SUBOPT_0x26C
007c79 940e c0ee 	CALL SUBOPT_0x1C
007c7b f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
007c7c 81aa      	LDD  R26,Y+2
007c7d 81bb      	LDD  R27,Y+2+1
007c7e 57a4      	SUBI R26,LOW(-_sensorAlarm)
007c7f 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
007c80 940e d050 	CALL SUBOPT_0x27D
007c82 81e0      	LD   R30,Z
007c83 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
007c84 940e d050 	CALL SUBOPT_0x27D
007c86 940e d003 	CALL SUBOPT_0x271
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
007c88 940e d055 	CALL SUBOPT_0x27E
007c8a e0a0      	LDI  R26,LOW(0)
007c8b 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
007c8c e0e1      	LDI  R30,LOW(1)
007c8d e0f0      	LDI  R31,HIGH(1)
007c8e c061      	RJMP _0x20E0057
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
007c8f c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
007c90 940e d055 	CALL SUBOPT_0x27E
007c92 e0a0      	LDI  R26,LOW(0)
007c93 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
007c94 c059      	RJMP _0x20E0058
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
007c95 940e d04b 	CALL SUBOPT_0x27C
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007c97 58ec      	SUBI R30,LOW(-_dataStatus)
007c98 4efb      	SBCI R31,HIGH(-_dataStatus)
007c99 81a0      	LD   R26,Z
007c9a 81ea      	LDD  R30,Y+2
007c9b 81fb      	LDD  R31,Y+2+1
007c9c 56ef      	SUBI R30,LOW(-_dataAlarm)
007c9d 4efb      	SBCI R31,HIGH(-_dataAlarm)
007c9e 81e0      	LD   R30,Z
007c9f 17ea      	CP   R30,R26
007ca0 f411      	BRNE PC+3
007ca1 940c 7cea 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
007ca3 940e d05f 	CALL SUBOPT_0x280
007ca5 81e0      	LD   R30,Z
007ca6 30e0      	CPI  R30,0
007ca7 f489      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
007ca8 81ea      	LDD  R30,Y+2
007ca9 81fb      	LDD  R31,Y+2+1
007caa eda2      	LDI  R26,LOW(_t_S0110008000)
007cab e1b6      	LDI  R27,HIGH(_t_S0110008000)
007cac 940e cfd6 	CALL SUBOPT_0x26B
                +
007cae e0a3     +LDI R26 , LOW ( 0x3 )
007caf e0b0     +LDI R27 , HIGH ( 0x3 )
007cb0 e080     +LDI R24 , BYTE3 ( 0x3 )
007cb1 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
007cb2 940e 4146 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
007cb4 940e d05f 	CALL SUBOPT_0x280
007cb6 e0a1      	LDI  R26,LOW(1)
007cb7 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
007cb8 c030      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
007cb9 81ea      	LDD  R30,Y+2
007cba 81fb      	LDD  R31,Y+2+1
007cbb eda2      	LDI  R26,LOW(_t_S0110008000)
007cbc e1b6      	LDI  R27,HIGH(_t_S0110008000)
007cbd 940e cfda 	CALL SUBOPT_0x26C
007cbf 940e c0ee 	CALL SUBOPT_0x1C
007cc1 f139      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
007cc2 81aa      	LDD  R26,Y+2
007cc3 81bb      	LDD  R27,Y+2+1
007cc4 56af      	SUBI R26,LOW(-_dataAlarm)
007cc5 4ebb      	SBCI R27,HIGH(-_dataAlarm)
007cc6 81ea      	LDD  R30,Y+2
007cc7 81fb      	LDD  R31,Y+2+1
007cc8 58ec      	SUBI R30,LOW(-_dataStatus)
007cc9 4efb      	SBCI R31,HIGH(-_dataStatus)
007cca 81e0      	LD   R30,Z
007ccb 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
007ccc 81ea      	LDD  R30,Y+2
007ccd 81fb      	LDD  R31,Y+2+1
007cce 58ec      	SUBI R30,LOW(-_dataStatus)
007ccf 4efb      	SBCI R31,HIGH(-_dataStatus)
007cd0 940e d003 	CALL SUBOPT_0x271
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
007cd2 940e d05f 	CALL SUBOPT_0x280
007cd4 e0a0      	LDI  R26,LOW(0)
007cd5 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
007cd6 e8eb     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
007cd7 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
007cd8 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
007cd9 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
007cda 940e c6ce 	CALL SUBOPT_0x103
007cdc 9631      	ADIW R30,1
007cdd 940e df3b 	CALL __CWD1
007cdf 940e c79d 	CALL SUBOPT_0x127
007ce1 56ef      	SUBI R30,LOW(-_dataAlarm)
007ce2 4efb      	SBCI R31,HIGH(-_dataAlarm)
007ce3 81e0      	LD   R30,Z
007ce4 940e ce35 	CALL SUBOPT_0x22F
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
007ce6 e0e1      	LDI  R30,LOW(1)
007ce7 e0f0      	LDI  R31,HIGH(1)
007ce8 c007      	RJMP _0x20E0057
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
007ce9 c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
007cea 940e d05f 	CALL SUBOPT_0x280
007cec e0a0      	LDI  R26,LOW(0)
007ced 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
                 _0x20E0058:
007cee e0e0      	LDI  R30,LOW(0)
007cef e0f0      	LDI  R31,HIGH(0)
                 _0x20E0057:
007cf0 9624      	ADIW R28,4
007cf1 9508      	RET
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
007cf2 940e c3bf 	CALL SUBOPT_0x86
                 ;	period -> Y+0
007cf4 f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
007cf5 940e c124 	CALL SUBOPT_0x25
007cf7 940e c129 	CALL SUBOPT_0x26
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
007cf9 e0e1      	LDI  R30,LOW(1)
007cfa c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
007cfb e8e7      	LDI  R30,LOW(_muteAlarmExpired)
007cfc e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
007cfd 93fa      	ST   -Y,R31
007cfe 93ea      	ST   -Y,R30
007cff 940e c4e8 	CALL SUBOPT_0xB3
007d01 940e 4146 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
007d03 e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
007d04 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
007d06 e0e0      	LDI  R30,LOW(0)
007d07 e0f0      	LDI  R31,HIGH(0)
007d08 940c 81a2 	JMP  _0x20E004A
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
007d0a 91e0 148b 	LDS  R30,_muteMode
007d0c 940e cd6c 	CALL SUBOPT_0x214
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
007d0e f0f1      	BREQ _0x20E0055
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
007d0f 30e2      	CPI  R30,LOW(0x2)
007d10 e0a0      	LDI  R26,HIGH(0x2)
007d11 07fa      	CPC  R31,R26
007d12 f469      	BRNE _0x2200E7
007d13 91a0 1487 	LDS  R26,_muteAlarmExpired
007d15 91b0 1488 	LDS  R27,_muteAlarmExpired+1
007d17 9180 1489 	LDS  R24,_muteAlarmExpired+2
007d19 9190 148a 	LDS  R25,_muteAlarmExpired+3
007d1b 940e 4130 	CALL _TIMER_checkTimerExceed
007d1d 9730      	SBIW R30,0
007d1e f459      	BRNE _0x20E0056
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
007d1f c00d      	RJMP _0x20E0055
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
007d20 ebed     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
007d21 e4fb     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
007d22 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
007d23 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
007d24 940e e05e 	CALL __PUTPARD1
007d26 91e0 148b 	LDS  R30,_muteMode
007d28 940e c143 	CALL SUBOPT_0x29
                 ; 0011 01FF                                 return 1;
                 _0x20E0056:
007d2a e0e1      	LDI  R30,LOW(1)
007d2b e0f0      	LDI  R31,HIGH(1)
007d2c 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0055:
007d2d e0e0      	LDI  R30,LOW(0)
007d2e e0f0      	LDI  R31,HIGH(0)
007d2f 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
007d30 940e c85c 	CALL SUBOPT_0x14B
                 ;	i -> R16,R17
                 _0x2200E9:
                +
007d32 3005     +CPI R16 , LOW ( 5 )
007d33 e0e0     +LDI R30 , HIGH ( 5 )
007d34 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007d35 f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
007d36 e8ac      	LDI  R26,LOW(_sensorAlarm)
007d37 e1b4      	LDI  R27,HIGH(_sensorAlarm)
007d38 940e c861 	CALL SUBOPT_0x14C
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
007d3a e9a1      	LDI  R26,LOW(_dataAlarm)
007d3b e1b4      	LDI  R27,HIGH(_dataAlarm)
007d3c 940e c861 	CALL SUBOPT_0x14C
                 ; 0011 0210     }
                +
007d3e 5f0f     +SUBI R16 , LOW ( - 1 )
007d3f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d40 cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
007d41 e000     +LDI R16 , LOW ( 0 )
007d42 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
007d43 3100     +CPI R16 , LOW ( 16 )
007d44 e0e0     +LDI R30 , HIGH ( 16 )
007d45 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007d46 f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
007d47 e9a6      	LDI  R26,LOW(_dinAlarm)
007d48 e1b4      	LDI  R27,HIGH(_dinAlarm)
007d49 0fa0      	ADD  R26,R16
007d4a 1fb1      	ADC  R27,R17
007d4b efef      	LDI  R30,LOW(255)
007d4c 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
007d4d 5f0f     +SUBI R16 , LOW ( - 1 )
007d4e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d4f cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
007d50 e000     +LDI R16 , LOW ( 0 )
007d51 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
007d52 3100     +CPI R16 , LOW ( 16 )
007d53 e0e0     +LDI R30 , HIGH ( 16 )
007d54 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007d55 f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
007d56 e8a2      	LDI  R26,LOW(_ainAlarm)
007d57 e1b6      	LDI  R27,HIGH(_ainAlarm)
007d58 0fa0      	ADD  R26,R16
007d59 1fb1      	ADC  R27,R17
007d5a efef      	LDI  R30,LOW(255)
007d5b 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
007d5c 5f0f     +SUBI R16 , LOW ( - 1 )
007d5d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007d5e cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
007d5f efef      	LDI  R30,LOW(255)
007d60 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
007d61 e0e0      	LDI  R30,LOW(0)
007d62 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
007d64 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
007d66 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
007d68 93e0 1694 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
007d6a 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
007d6c 93e0 1695 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
007d6e 93e0 1696 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
007d70 940c 81f4 	JMP  _0x20E0048
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 _OLED_showDateTime:
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
007d72 93ba      	ST   -Y,R27
007d73 93aa      	ST   -Y,R26
007d74 976a      	SBIW R28,26
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
007d75 940e c06e 	CALL SUBOPT_0x9
007d77 8dac      	LDD  R26,Y+28
007d78 8dbd      	LDD  R27,Y+28+1
007d79 940e 47ea 	CALL _RTC_getDateTime
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                +
007d7b eeee     +LDI R30 , LOW ( 2 * _0x240000 + ( 0 ) )
007d7c e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 0 ) )
007d7d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 0 ) )
007d7e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 0 ) )
                 	__POINTD1FN _0x240000,0
007d7f 940e c3e8 	CALL SUBOPT_0x8D
007d81 940e c3e8 	CALL SUBOPT_0x8D
007d83 940e c3e8 	CALL SUBOPT_0x8D
007d85 940e e05e 	CALL __PUTPARD1
007d87 e08c      	LDI  R24,12
007d88 d1de      	RCALL _printOLED
007d89 9660      	ADIW R28,16
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                +
007d8a efef     +LDI R30 , LOW ( 2 * _0x240000 + ( 17 ) )
007d8b e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 17 ) )
007d8c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 17 ) )
007d8d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 17 ) )
                 	__POINTD1FN _0x240000,17
007d8e 940e c2a1 	CALL SUBOPT_0x5B
007d90 940e c661 	CALL SUBOPT_0xF1
007d92 940e d064 	CALL SUBOPT_0x281
                 ; 0012 0019 
                 ; 0012 001A }
007d94 966c      	ADIW R28,28
007d95 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 _OLED_showSensorValue:
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
007d96 940e c85c 	CALL SUBOPT_0x14B
                 ;	i -> R16,R17
                 _0x240004:
                +
007d98 3005     +CPI R16 , LOW ( 5 )
007d99 e0e0     +LDI R30 , HIGH ( 5 )
007d9a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007d9b f014      	BRLT PC+3
007d9c 940c 7e13 	JMP _0x240005
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
007d9e 940e cfde 	CALL SUBOPT_0x26D
007da0 f411      	BRNE PC+3
007da1 940c 7e08 	JMP _0x240006
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
007da3 940e d069 	CALL SUBOPT_0x282
                +
007da5 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007da6 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007da7 81e0      	LD   R30,Z
007da8 940e c14e 	CALL SUBOPT_0x2B
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
007daa f469      	BRNE _0x24000A
                +
007dab e0eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 29 ) )
007dac e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 29 ) )
007dad e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 29 ) )
007dae e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 29 ) )
                 	__POINTD1FN _0x240000,29
007daf 940e d06f 	CALL SUBOPT_0x283
007db1 940e d069 	CALL SUBOPT_0x282
007db3 940e c102 	CALL SUBOPT_0x20
007db5 940e d073 	CALL SUBOPT_0x284
                 ; 0012 0028                                                 break;
007db7 c04f      	RJMP _0x240009
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 _0x24000A:
007db8 38e1      	CPI  R30,LOW(0x81)
007db9 e0a0      	LDI  R26,HIGH(0x81)
007dba 07fa      	CPC  R31,R26
007dbb f449      	BRNE _0x24000B
                +
007dbc e1e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 39 ) )
007dbd e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 39 ) )
007dbe e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 39 ) )
007dbf e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 39 ) )
                 	__POINTD1FN _0x240000,39
007dc0 940e d06f 	CALL SUBOPT_0x283
007dc2 940e d076 	CALL SUBOPT_0x285
                 ; 0012 002A                                                 break;
007dc4 c042      	RJMP _0x240009
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 _0x24000B:
007dc5 38e2      	CPI  R30,LOW(0x82)
007dc6 e0a0      	LDI  R26,HIGH(0x82)
007dc7 07fa      	CPC  R31,R26
007dc8 f449      	BRNE _0x24000C
                +
007dc9 e2e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 50 ) )
007dca e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 50 ) )
007dcb e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 50 ) )
007dcc e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 50 ) )
                 	__POINTD1FN _0x240000,50
007dcd 940e d06f 	CALL SUBOPT_0x283
007dcf 940e d076 	CALL SUBOPT_0x285
                 ; 0012 002C                                                 break;
007dd1 c035      	RJMP _0x240009
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 _0x24000C:
007dd2 38e4      	CPI  R30,LOW(0x84)
007dd3 e0a0      	LDI  R26,HIGH(0x84)
007dd4 07fa      	CPC  R31,R26
007dd5 f449      	BRNE _0x24000D
                +
007dd6 e2eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 61 ) )
007dd7 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 61 ) )
007dd8 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 61 ) )
007dd9 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 61 ) )
                 	__POINTD1FN _0x240000,61
007dda 940e d06f 	CALL SUBOPT_0x283
007ddc 940e d076 	CALL SUBOPT_0x285
                 ; 0012 002E                                                 break;
007dde c028      	RJMP _0x240009
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 _0x24000D:
007ddf 39e0      	CPI  R30,LOW(0x90)
007de0 e0a0      	LDI  R26,HIGH(0x90)
007de1 07fa      	CPC  R31,R26
007de2 f449      	BRNE _0x24000E
                +
007de3 e3e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 72 ) )
007de4 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 72 ) )
007de5 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 72 ) )
007de6 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 72 ) )
                 	__POINTD1FN _0x240000,72
007de7 940e d06f 	CALL SUBOPT_0x283
007de9 940e d076 	CALL SUBOPT_0x285
                 ; 0012 0030                                                 break;
007deb c01b      	RJMP _0x240009
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 _0x24000E:
007dec 3fef      	CPI  R30,LOW(0xFF)
007ded e0a0      	LDI  R26,HIGH(0xFF)
007dee 07fa      	CPC  R31,R26
007def f449      	BRNE _0x240010
                +
007df0 e4e1     +LDI R30 , LOW ( 2 * _0x240000 + ( 83 ) )
007df1 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 83 ) )
007df2 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 83 ) )
007df3 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 83 ) )
                 	__POINTD1FN _0x240000,83
007df4 940e d06f 	CALL SUBOPT_0x283
007df6 940e d076 	CALL SUBOPT_0x285
                 ; 0012 0032                                                 break;
007df8 c00e      	RJMP _0x240009
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 _0x240010:
                +
007df9 e5e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 98 ) )
007dfa e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 98 ) )
007dfb e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 98 ) )
007dfc e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 98 ) )
                 	__POINTD1FN _0x240000,98
007dfd 940e d06f 	CALL SUBOPT_0x283
007dff 940e d069 	CALL SUBOPT_0x282
                +
007e01 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007e02 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007e03 81e0      	LD   R30,Z
007e04 940e ce35 	CALL SUBOPT_0x22F
                 ; 0012 0034                                                 return;
007e06 c3ed      	RJMP _0x20E0048
                 ; 0012 0035             }
                 _0x240009:
                 ; 0012 0036         }
                 ; 0012 0037         else{
007e07 c008      	RJMP _0x240011
                 _0x240006:
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                +
007e08 e8ec     +LDI R30 , LOW ( 2 * _0x240000 + ( 158 ) )
007e09 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 158 ) )
007e0a e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 158 ) )
007e0b e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 158 ) )
                 	__POINTD1FN _0x240000,158
007e0c 940e d06f 	CALL SUBOPT_0x283
007e0e 940e d076 	CALL SUBOPT_0x285
                 ; 0012 0039         }
                 _0x240011:
                 ; 0012 003A     }
                +
007e10 5f0f     +SUBI R16 , LOW ( - 1 )
007e11 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007e12 cf85      	RJMP _0x240004
                 _0x240005:
                 ; 0012 003B 
                 ; 0012 003C     return;
007e13 c3e0      	RJMP _0x20E0048
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 _OLED_showPowerStatus:
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
007e14 940e e063 	CALL __PUTPARD2
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
007e16 81ec      	LDD  R30,Y+4
007e17 30e0      	CPI  R30,0
007e18 f429      	BRNE _0x240012
                 ; 0012 0044         printOLED("CG1");
                +
007e19 e9e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 167 ) )
007e1a e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 167 ) )
007e1b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 167 ) )
007e1c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 167 ) )
                 	__POINTD1FN _0x240000,167
007e1d c033      	RJMP _0x240056
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 _0x240012:
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
007e1e 940e d07b 	CALL SUBOPT_0x286
007e20 f428      	BRSH _0x240014
                 ; 0012 0049             printOLED("BL0");
                +
007e21 e9e9     +LDI R30 , LOW ( 2 * _0x240000 + ( 171 ) )
007e22 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 171 ) )
007e23 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 171 ) )
007e24 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 171 ) )
                 	__POINTD1FN _0x240000,171
007e25 c02b      	RJMP _0x240056
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 _0x240014:
007e26 940e d07b 	CALL SUBOPT_0x286
007e28 f018      	BRLO _0x240017
007e29 940e d084 	CALL SUBOPT_0x287
007e2b f008      	BRLO _0x240018
                 _0x240017:
007e2c c005      	RJMP _0x240016
                 _0x240018:
                 ; 0012 004C             printOLED("BL1");
                +
007e2d e9ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 175 ) )
007e2e e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 175 ) )
007e2f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 175 ) )
007e30 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 175 ) )
                 	__POINTD1FN _0x240000,175
007e31 c01f      	RJMP _0x240056
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 _0x240016:
007e32 940e d084 	CALL SUBOPT_0x287
007e34 f018      	BRLO _0x24001B
007e35 940e d08d 	CALL SUBOPT_0x288
007e37 f008      	BRLO _0x24001C
                 _0x24001B:
007e38 c005      	RJMP _0x24001A
                 _0x24001C:
                 ; 0012 004F             printOLED("BL2");
                +
007e39 eae1     +LDI R30 , LOW ( 2 * _0x240000 + ( 179 ) )
007e3a e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 179 ) )
007e3b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 179 ) )
007e3c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 179 ) )
                 	__POINTD1FN _0x240000,179
007e3d c013      	RJMP _0x240056
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 _0x24001A:
007e3e 940e d08d 	CALL SUBOPT_0x288
007e40 f018      	BRLO _0x24001F
007e41 940e d096 	CALL SUBOPT_0x289
007e43 f008      	BRLO _0x240020
                 _0x24001F:
007e44 c005      	RJMP _0x24001E
                 _0x240020:
                 ; 0012 0052             printOLED("BL3");
                +
007e45 eae5     +LDI R30 , LOW ( 2 * _0x240000 + ( 183 ) )
007e46 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 183 ) )
007e47 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 183 ) )
007e48 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 183 ) )
                 	__POINTD1FN _0x240000,183
007e49 c007      	RJMP _0x240056
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 _0x24001E:
007e4a 940e d096 	CALL SUBOPT_0x289
007e4c f040      	BRLO _0x240022
                 ; 0012 0055             printOLED("BL4");
                +
007e4d eae9     +LDI R30 , LOW ( 2 * _0x240000 + ( 187 ) )
007e4e e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 187 ) )
007e4f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 187 ) )
007e50 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 187 ) )
                 	__POINTD1FN _0x240000,187
                 _0x240056:
007e51 940e e05e 	CALL __PUTPARD1
007e53 940e d09f 	CALL SUBOPT_0x28A
                 ; 0012 0056         }
                 ; 0012 0057     }
                 _0x240022:
                 ; 0012 0058 }
                 _0x20E0054:
007e55 9625      	ADIW R28,5
007e56 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 _OLED_showInputStatus:
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
007e57 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007e58 81aa      	LDD  R26,Y+2
007e59 23aa      	TST  R26
007e5a f022      	BRMI _0x240024
007e5b 81a9      	LDD  R26,Y+1
007e5c 81ba      	LDD  R27,Y+1+1
007e5d 9718      	SBIW R26,8
007e5e f03c      	BRLT _0x240023
                 _0x240024:
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                +
007e5f eaed     +LDI R30 , LOW ( 2 * _0x240000 + ( 191 ) )
007e60 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 191 ) )
007e61 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 191 ) )
007e62 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 191 ) )
                 	__POINTD1FN _0x240000,191
007e63 940e c02f 	CALL SUBOPT_0x3
                 ; 0012 005E         return;
007e65 c045      	RJMP _0x20E0052
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 _0x240023:
007e66 81a9      	LDD  R26,Y+1
007e67 81ba      	LDD  R27,Y+1+1
007e68 e0e3      	LDI  R30,LOW(3)
007e69 940e df7c 	CALL __MULB1W2U
007e6b 5be1      	SUBI R30,LOW(-_din_config)
007e6c 4efd      	SBCI R31,HIGH(-_din_config)
007e6d 81a0      	LD   R26,Z
007e6e 30a1      	CPI  R26,LOW(0x1)
007e6f f5d9      	BRNE _0x20E0052
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
007e70 81a8      	LD   R26,Y
007e71 30a0      	CPI  R26,LOW(0x0)
007e72 f011      	BREQ _0x240028
007e73 30a1      	CPI  R26,LOW(0x1)
007e74 f409      	BRNE _0x240029
                 _0x240028:
007e75 c001      	RJMP _0x240027
                 _0x240029:
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
007e76 c034      	RJMP _0x20E0052
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 _0x240027:
                +
007e77 eee4     +LDI R30 , LOW ( 2 * _0x240000 + ( 246 ) )
007e78 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 246 ) )
007e79 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 246 ) )
007e7a e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 246 ) )
                 	__POINTD1FN _0x240000,246
007e7b c024      	RJMP _0x20E0053
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 _OLED_showOutputStatus:
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
007e7c 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007e7d 81aa      	LDD  R26,Y+2
007e7e 23aa      	TST  R26
007e7f f022      	BRMI _0x24002B
007e80 81a9      	LDD  R26,Y+1
007e81 81ba      	LDD  R27,Y+1+1
007e82 9718      	SBIW R26,8
007e83 f03c      	BRLT _0x24002A
                 _0x24002B:
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                +
007e84 eeed     +LDI R30 , LOW ( 2 * _0x240000 + ( 255 ) )
007e85 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 255 ) )
007e86 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 255 ) )
007e87 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 255 ) )
                 	__POINTD1FN _0x240000,255
007e88 940e c02f 	CALL SUBOPT_0x3
                 ; 0012 0071         return;
007e8a c020      	RJMP _0x20E0052
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 _0x24002A:
007e8b 81a9      	LDD  R26,Y+1
007e8c 81ba      	LDD  R27,Y+1+1
007e8d e2e6      	LDI  R30,LOW(38)
007e8e 940e df7c 	CALL __MULB1W2U
007e90 58e1      	SUBI R30,LOW(-_dout_config)
007e91 4efd      	SBCI R31,HIGH(-_dout_config)
007e92 81a0      	LD   R26,Z
007e93 30a1      	CPI  R26,LOW(0x1)
007e94 f4b1      	BRNE _0x20E0052
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
007e95 81a8      	LD   R26,Y
007e96 30a0      	CPI  R26,LOW(0x0)
007e97 f011      	BREQ _0x24002F
007e98 30a1      	CPI  R26,LOW(0x1)
007e99 f409      	BRNE _0x240030
                 _0x24002F:
007e9a c001      	RJMP _0x24002E
                 _0x240030:
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
007e9b c00f      	RJMP _0x20E0052
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 _0x24002E:
                +
007e9c e2e5     +LDI R30 , LOW ( 2 * _0x240000 + ( 311 ) )
007e9d e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 311 ) )
007e9e e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 311 ) )
007e9f e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 311 ) )
                 	__POINTD1FN _0x240000,311
                 _0x20E0053:
007ea0 940e e05e 	CALL __PUTPARD1
007ea2 81ed      	LDD  R30,Y+5
007ea3 81fe      	LDD  R31,Y+5+1
007ea4 940e cf23 	CALL SUBOPT_0x251
007ea6 85e8      	LDD  R30,Y+8
007ea7 940e c2e0 	CALL SUBOPT_0x65
007ea9 940e d064 	CALL SUBOPT_0x281
                 ; 0012 007E }
                 _0x20E0052:
007eab 9623      	ADIW R28,3
007eac 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 _OLED_showServerCommStatus:
                 ; 0012 0082     printOLED("SC%1d",state);
007ead 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007eae e2ee     +LDI R30 , LOW ( 2 * _0x240000 + ( 320 ) )
007eaf e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 320 ) )
007eb0 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 320 ) )
007eb1 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 320 ) )
                 	__POINTD1FN _0x240000,320
007eb2 940e d0a4 	CALL SUBOPT_0x28B
007eb4 940e d076 	CALL SUBOPT_0x285
                 ; 0012 0083 }
007eb6 c12e      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 _OLED_showLanStatus:
                 ; 0012 0087     printOLED("LC%1d",state);
007eb7 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007eb8 e3e4     +LDI R30 , LOW ( 2 * _0x240000 + ( 326 ) )
007eb9 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 326 ) )
007eba e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 326 ) )
007ebb e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 326 ) )
                 	__POINTD1FN _0x240000,326
007ebc 940e d0a4 	CALL SUBOPT_0x28B
007ebe 940e d076 	CALL SUBOPT_0x285
                 ; 0012 0088 }
007ec0 c124      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 _OLED_showBuzzerStatus:
                 ; 0012 008C     printOLED("BZ%1d",state);
007ec1 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007ec2 e3ea     +LDI R30 , LOW ( 2 * _0x240000 + ( 332 ) )
007ec3 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 332 ) )
007ec4 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 332 ) )
007ec5 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 332 ) )
                 	__POINTD1FN _0x240000,332
007ec6 940e d0a4 	CALL SUBOPT_0x28B
007ec8 940e d076 	CALL SUBOPT_0x285
                 ; 0012 008D }
007eca c11a      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 _OLED_showMemoryStatus:
                 ; 0012 0091     printOLED("MS%1d",state);
007ecb 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007ecc e4e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 338 ) )
007ecd e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 338 ) )
007ece e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 338 ) )
007ecf e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 338 ) )
                 	__POINTD1FN _0x240000,338
007ed0 940e d0a4 	CALL SUBOPT_0x28B
007ed2 940e d076 	CALL SUBOPT_0x285
                 ; 0012 0092 }
007ed4 c110      	RJMP _0x20E0051
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 _OLED_showAlarmStatus:
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
007ed5 972a      	SBIW R28,10
007ed6 940e d008 	CALL SUBOPT_0x272
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                +
007ed8 e000     +LDI R16 , LOW ( 0 )
007ed9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x240032:
                +
007eda 3005     +CPI R16 , LOW ( 5 )
007edb e0e0     +LDI R30 , HIGH ( 5 )
007edc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007edd f014      	BRLT PC+3
007ede 940c 7f1f 	JMP _0x240033
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
007ee0 940e cfde 	CALL SUBOPT_0x26D
007ee2 f189      	BREQ _0x240034
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
007ee3 01f8      	MOVW R30,R16
007ee4 01de      	MOVW R26,R28
007ee5 9619      	ADIW R26,9
007ee6 0fea      	ADD  R30,R26
007ee7 1ffb      	ADC  R31,R27
007ee8 010f      	MOVW R0,R30
007ee9 e8ac      	LDI  R26,LOW(_sensorAlarm)
007eea e1b4      	LDI  R27,HIGH(_sensorAlarm)
007eeb 940e d00d 	CALL SUBOPT_0x273
007eed f011      	BREQ _0x240035
007eee e0e1      	LDI  R30,LOW(1)
007eef c001      	RJMP _0x240036
                 _0x240035:
007ef0 e0e0      	LDI  R30,LOW(0)
                 _0x240036:
007ef1 01d0      	MOVW R26,R0
007ef2 93ec      	ST   X,R30
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                +
007ef3 e1ad     +LDI R26 , 29
007ef4 9fa0     +MUL R26 , R16
007ef5 01f0     +MOVW R30 , R0
007ef6 9fa1     +MUL R26 , R17
007ef7 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
                +
007ef8 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
007ef9 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
007efa 81e0      	LD   R30,Z
007efb 30e0      	CPI  R30,0
007efc f081      	BREQ _0x240038
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
007efd 01f8      	MOVW R30,R16
007efe 01de      	MOVW R26,R28
007eff 9614      	ADIW R26,4
007f00 0fea      	ADD  R30,R26
007f01 1ffb      	ADC  R31,R27
007f02 010f      	MOVW R0,R30
007f03 e9a1      	LDI  R26,LOW(_dataAlarm)
007f04 e1b4      	LDI  R27,HIGH(_dataAlarm)
007f05 940e d00d 	CALL SUBOPT_0x273
007f07 f011      	BREQ _0x240039
007f08 e0e1      	LDI  R30,LOW(1)
007f09 c001      	RJMP _0x24003A
                 _0x240039:
007f0a e0e0      	LDI  R30,LOW(0)
                 _0x24003A:
007f0b 01d0      	MOVW R26,R0
007f0c c005      	RJMP _0x240057
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 _0x240038:
                 ; 0012 00A3                 flagData[i]     = 0;
007f0d 01de      	MOVW R26,R28
007f0e 9614      	ADIW R26,4
007f0f 0fa0      	ADD  R26,R16
007f10 1fb1      	ADC  R27,R17
007f11 e0e0      	LDI  R30,LOW(0)
                 _0x240057:
007f12 93ec      	ST   X,R30
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
007f13 c008      	RJMP _0x24003D
                 _0x240034:
                 ; 0012 00A7             flagSens[i]         = 0;
007f14 01de      	MOVW R26,R28
007f15 9619      	ADIW R26,9
007f16 940e c861 	CALL SUBOPT_0x14C
                 ; 0012 00A8             flagData[i]         = 0;
007f18 01de      	MOVW R26,R28
007f19 9614      	ADIW R26,4
007f1a 940e c861 	CALL SUBOPT_0x14C
                 ; 0012 00A9         }
                 _0x24003D:
                 ; 0012 00AA 
                 ; 0012 00AB     }
                +
007f1c 5f0f     +SUBI R16 , LOW ( - 1 )
007f1d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007f1e cfbb      	RJMP _0x240032
                 _0x240033:
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
007f1f 940e d01e 	CALL SUBOPT_0x276
007f21 f44c      	BRGE _0x24003E
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
007f22 91e0 14a6 	LDS  R30,_batteryAlarm
007f24 30e0      	CPI  R30,0
007f25 f011      	BREQ _0x24003F
007f26 e0e1      	LDI  R30,LOW(1)
007f27 c001      	RJMP _0x240040
                 _0x24003F:
007f28 e0e0      	LDI  R30,LOW(0)
                 _0x240040:
007f29 2f3e      	MOV  R19,R30
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
007f2a c001      	RJMP _0x240042
                 _0x24003E:
                 ; 0012 00B1         flagBatt                = 0;
007f2b e030      	LDI  R19,LOW(0)
                 ; 0012 00B2     }
                 _0x240042:
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
007f2c 940e d030 	CALL SUBOPT_0x278
007f2e f448      	BRSH _0x240043
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
007f2f 91e0 14a7 	LDS  R30,_memoryAlarm
007f31 30e0      	CPI  R30,0
007f32 f011      	BREQ _0x240044
007f33 e0e1      	LDI  R30,LOW(1)
007f34 c001      	RJMP _0x240045
                 _0x240044:
007f35 e0e0      	LDI  R30,LOW(0)
                 _0x240045:
007f36 2f2e      	MOV  R18,R30
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
007f37 c001      	RJMP _0x240047
                 _0x240043:
                 ; 0012 00B8         flagMemo                = 0;
007f38 e020      	LDI  R18,LOW(0)
                 ; 0012 00B9     }
                 _0x240047:
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                +
007f39 e4e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 344 ) )
007f3a e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 344 ) )
007f3b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 344 ) )
007f3c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 344 ) )
                 	__POINTD1FN _0x240000,344
007f3d 940e e05e 	CALL __PUTPARD1
007f3f 85ed      	LDD  R30,Y+13
007f40 940e c2e0 	CALL SUBOPT_0x65
007f42 89ea      	LDD  R30,Y+18
007f43 940e c2e0 	CALL SUBOPT_0x65
007f45 89ef      	LDD  R30,Y+23
007f46 940e c2e0 	CALL SUBOPT_0x65
007f48 8dec      	LDD  R30,Y+28
007f49 940e c2e0 	CALL SUBOPT_0x65
007f4b a1e9      	LDD  R30,Y+33
007f4c 940e c2e0 	CALL SUBOPT_0x65
007f4e 8dec      	LDD  R30,Y+28
007f4f 940e c2e0 	CALL SUBOPT_0x65
007f51 a1e9      	LDD  R30,Y+33
007f52 940e c2e0 	CALL SUBOPT_0x65
007f54 a1ee      	LDD  R30,Y+38
007f55 940e c2e0 	CALL SUBOPT_0x65
007f57 a5eb      	LDD  R30,Y+43
007f58 940e c2e0 	CALL SUBOPT_0x65
007f5a a9e8      	LDD  R30,Y+48
007f5b 940e c2e0 	CALL SUBOPT_0x65
007f5d 2fe3      	MOV  R30,R19
007f5e 940e c2e0 	CALL SUBOPT_0x65
007f60 2fe2      	MOV  R30,R18
007f61 940e c2e0 	CALL SUBOPT_0x65
007f63 e380      	LDI  R24,48
007f64 d002      	RCALL _printOLED
007f65 96e4      	ADIW R28,52
                 ; 0012 00BF 
                 ; 0012 00C0     return;
007f66 c129      	RJMP _0x20E004F
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 _printOLED:
007f67 92ff      	PUSH R15
007f68 2ef8      	MOV  R15,R24
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
007f69 97ef      	SBIW R28,63
007f6a 9721      	SBIW R28,1
007f6b 931a      	ST   -Y,R17
007f6c 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
007f6d 01de      	MOVW R26,R28
007f6e 96de      	ADIW R26,62
007f6f 940e deb2 	CALL __ADDW2R15
007f71 018d      	MOVW R16,R26
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
007f72 940e cc62 	CALL SUBOPT_0x1F1
007f74 01de      	MOVW R26,R28
007f75 5bac      	SUBI R26,LOW(-(68))
007f76 4fbf      	SBCI R27,HIGH(-(68))
007f77 940e d0a9 	CALL SUBOPT_0x28C
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
007f79 98f0      	CBI  0x1E,0
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
007f7a e0a1      	LDI  R26,LOW(1)
007f7b 940e 4078 	CALL _putchar2
                 ; 0012 00DB     send_uart(2,strcmd);
007f7d e0e2      	LDI  R30,LOW(2)
007f7e 93ea      	ST   -Y,R30
007f7f 01de      	MOVW R26,R28
007f80 9613      	ADIW R26,3
007f81 940e 40c0 	CALL _send_uart
                 ; 0012 00DC     putchar2(0x04);
007f83 e0a4      	LDI  R26,LOW(4)
007f84 940e 4078 	CALL _putchar2
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
007f86 01fe      	MOVW R30,R28
007f87 96fe      	ADIW R30,62
007f88 940e d012 	CALL SUBOPT_0x274
007f8a 940e 4146 	CALL _TIMER_setTimer
                 ; 0012 00DF 
                 ; 0012 00E0     /*bongkot OLED assume flag_oled_ack = 1(OLED has connect and ack);*/
                 ; 0012 00E1     //flag_oled_ack = 1;
                 ; 0012 00E2 
                 ; 0012 00E3     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 _0x24004A:
007f8c 99f0      	SBIC 0x1E,0
007f8d c00c      	RJMP _0x24004D
                +
007f8e 01de     +MOVW R26 , R28
007f8f 5ca2     +SUBI R26 , LOW ( - 62 )
007f90 4fbf     +SBCI R27 , HIGH ( - 62 )
007f91 900d     +LD R0 , X +
007f92 901d     +LD R1 , X +
007f93 918d     +LD R24 , X +
007f94 919c     +LD R25 , X
007f95 01d0     +MOVW R26 , R0
                 	__GETD2SX 62
007f96 940e 4130 	CALL _TIMER_checkTimerExceed
007f98 9730      	SBIW R30,0
007f99 f009      	BREQ _0x24004E
                 _0x24004D:
007f9a c001      	RJMP _0x24004C
                 _0x24004E:
007f9b cff0      	RJMP _0x24004A
                 _0x24004C:
                 ; 0012 00E4 
                 ; 0012 00E5     if(!flag_oled_ack){
007f9c 99f0      	SBIC 0x1E,0
007f9d c006      	RJMP _0x24004F
                 ; 0012 00E6         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                +
007f9e e6ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 383 ) )
007f9f e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 383 ) )
007fa0 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 383 ) )
007fa1 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 383 ) )
                 	__POINTD1FN _0x240000,383
007fa2 940e c02f 	CALL SUBOPT_0x3
                 ; 0012 00E7     }
                 ; 0012 00E8 
                 ; 0012 00E9 }
                 _0x24004F:
007fa4 8119      	LDD  R17,Y+1
007fa5 8108      	LDD  R16,Y+0
007fa6 96ef      	ADIW R28,63
007fa7 9623      	ADIW R28,3
007fa8 90ff      	POP  R15
007fa9 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00F1 {
                 _OLED_reset:
                 ; 0012 00F2     OLED_RESET = 0;            // Active SOLED Reset
007faa 98a5      	CBI  0x14,5
                 ; 0012 00F3     delay_ms(1);
007fab 940e c359 	CALL SUBOPT_0x75
007fad 940e dcff 	CALL _delay_ms
                 ; 0012 00F4     OLED_RESET = 1;            // Dective SOLED Reset for start use.
007faf 9aa5      	SBI  0x14,5
                 ; 0012 00F5     delay_ms(1);
007fb0 940e c359 	CALL SUBOPT_0x75
007fb2 940e dcff 	CALL _delay_ms
                 ; 0012 00F6 
                 ; 0012 00F7 }
007fb4 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00FA {
                 _init_oled:
                 ; 0012 00FB     printDebug("Initializing OLED.. ");
                +
007fb5 e8e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
007fb6 e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
007fb7 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
007fb8 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
007fb9 940e c02f 	CALL SUBOPT_0x3
                 ; 0012 00FC     flag_oled_ack = 0;
007fbb 98f0      	CBI  0x1E,0
                 ; 0012 00FD     OLED_reset();
007fbc dfed      	RCALL _OLED_reset
                 ; 0012 00FE     printDebug("OK\r\n");
                +
007fbd e9eb     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
007fbe e4fd     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
007fbf e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
007fc0 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
007fc1 940e e05e 	CALL __PUTPARD1
007fc3 e080      	LDI  R24,0
007fc4 940e 9de6 	CALL _printDebug
007fc6 c1db      	RJMP _0x20E004A
                 ; 0012 00FF }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
007fc7 93aa      	ST   -Y,R26
                 ;	res -> Y+0
007fc8 81a8      	LD   R26,Y
007fc9 30a1      	CPI  R26,LOW(0x1)
007fca f010      	BRLO _0x260005
007fcb 31a0      	CPI  R26,LOW(0x10)
007fcc f008      	BRLO _0x260006
                 _0x260005:
007fcd c017      	RJMP _0x260004
                 _0x260006:
                +
007fce e7e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
007fcf e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
007fd0 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
007fd1 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
007fd2 940e e05e 	CALL __PUTPARD1
007fd4 81ec      	LDD  R30,Y+4
007fd5 e6aa      	LDI  R26,LOW(_error_msg*2)
007fd6 e0b1      	LDI  R27,HIGH(_error_msg*2)
007fd7 e080      	LDI  R24,BYTE3(_error_msg*2)
007fd8 27ff      	CLR  R31
007fd9 2766      	CLR  R22
007fda 2777      	CLR  R23
007fdb 940e df21 	CALL __LSLD1
007fdd 940e df21 	CALL __LSLD1
007fdf 940e deb6 	CALL __ADDD12
007fe1 940e e043 	CALL __GETD1PF
007fe3 940e ca02 	CALL SUBOPT_0x189
                 _0x260004:
                 _0x20E0051:
007fe5 9621      	ADIW R28,1
007fe6 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
007fe7 940e c394 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
007fe9 940e cf9f 	CALL SUBOPT_0x263
007feb f449      	BRNE _0x260007
                +
007fec e7ef     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
007fed e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
007fee e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
007fef e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
007ff0 940e c02f 	CALL SUBOPT_0x3
007ff2 efef      	LDI  R30,LOW(65535)
007ff3 efff      	LDI  R31,HIGH(65535)
007ff4 c09b      	RJMP _0x20E004F
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
007ff5 940e cac1 	CALL SUBOPT_0x1AD
007ff7 940e d0b2 	CALL SUBOPT_0x28D
                 ; 0013 002F     if(res != FR_OK){
007ff9 f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
007ffa eae2     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
007ffb e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
007ffc e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
007ffd e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
007ffe 940e c3e8 	CALL SUBOPT_0x8D
008000 940e ca02 	CALL SUBOPT_0x189
                 ; 0013 0031         error(res);
008002 940e d0b9 	CALL SUBOPT_0x28E
                 ; 0013 0032         return -1;
008004 c08b      	RJMP _0x20E004F
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
008005 940e cac1 	CALL SUBOPT_0x1AD
008007 940e ca2b 	CALL SUBOPT_0x192
008009 940e ca2b 	CALL SUBOPT_0x192
00800b b7ad      	IN   R26,SPL
00800c b7be      	IN   R27,SPH
00800d 9711      	SBIW R26,1
00800e 933f      	PUSH R19
00800f 932f      	PUSH R18
008010 940e b747 	CALL _f_write
008012 912f      	POP  R18
008013 913f      	POP  R19
008014 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
008015 3010      	CPI  R17,0
008016 f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
008017 ece8     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
008018 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
008019 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
00801a e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
00801b 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0038         print_payload(data,len);
00801d 940e c8ce 	CALL SUBOPT_0x15A
00801f 81ae      	LDD  R26,Y+6
008020 81bf      	LDD  R27,Y+6+1
008021 940e 9e6a 	CALL _print_payload
                 ; 0013 0039         error(res);
008023 2fa1      	MOV  R26,R17
008024 dfa2      	RCALL _error
                 ; 0013 003A         return -2;
008025 efee      	LDI  R30,LOW(65534)
008026 efff      	LDI  R31,HIGH(65534)
008027 c068      	RJMP _0x20E004F
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
008028 81ec      	LDD  R30,Y+4
008029 81fd      	LDD  R31,Y+4+1
00802a 17e2      	CP   R30,R18
00802b 07f3      	CPC  R31,R19
00802c f081      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
00802d eeea     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
00802e e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
00802f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
008030 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
008031 940e e05e 	CALL __PUTPARD1
008033 01f9      	MOVW R30,R18
008034 940e c191 	CALL SUBOPT_0x34
008036 85ec      	LDD  R30,Y+12
008037 85fd      	LDD  R31,Y+12+1
008038 940e c80b 	CALL SUBOPT_0x13D
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
00803a efed      	LDI  R30,LOW(65533)
00803b efff      	LDI  R31,HIGH(65533)
00803c c053      	RJMP _0x20E004F
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
00803d c050      	RJMP _0x20E0050
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
00803e 940e c394 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
008040 940e cf9f 	CALL SUBOPT_0x263
008042 f449      	BRNE _0x26000B
                +
008043 e1e7     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
008044 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
008045 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
008046 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
008047 940e c02f 	CALL SUBOPT_0x3
008049 efef      	LDI  R30,LOW(65535)
00804a efff      	LDI  R31,HIGH(65535)
00804b c044      	RJMP _0x20E004F
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
00804c 940e cac1 	CALL SUBOPT_0x1AD
00804e 940e d0b2 	CALL SUBOPT_0x28D
                 ; 0013 004D     if(res != FR_OK){
008050 f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
008051 e3e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
008052 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
008053 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
008054 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
008055 940e c3e8 	CALL SUBOPT_0x8D
008057 940e ca02 	CALL SUBOPT_0x189
                 ; 0013 004F         error(res);
008059 940e d0b9 	CALL SUBOPT_0x28E
                 ; 0013 0050         return -1;
00805b c034      	RJMP _0x20E004F
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
00805c 940e cac1 	CALL SUBOPT_0x1AD
00805e 940e ca2b 	CALL SUBOPT_0x192
008060 940e ca2b 	CALL SUBOPT_0x192
008062 b7ad      	IN   R26,SPL
008063 b7be      	IN   R27,SPH
008064 9711      	SBIW R26,1
008065 933f      	PUSH R19
008066 932f      	PUSH R18
008067 940e b5e2 	CALL _f_read
008069 912f      	POP  R18
00806a 913f      	POP  R19
00806b 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
00806c 3010      	CPI  R17,0
00806d f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
00806e e5ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
00806f e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
008070 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
008071 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
008072 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0056         error(res);
008074 2fa1      	MOV  R26,R17
008075 df51      	RCALL _error
                 ; 0013 0057         return -2;
008076 efee      	LDI  R30,LOW(65534)
008077 efff      	LDI  R31,HIGH(65534)
008078 c017      	RJMP _0x20E004F
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
008079 81ec      	LDD  R30,Y+4
00807a 81fd      	LDD  R31,Y+4+1
00807b 17e2      	CP   R30,R18
00807c 07f3      	CPC  R31,R19
00807d f081      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
00807e e7ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
00807f e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
008080 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
008081 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
008082 940e e05e 	CALL __PUTPARD1
008084 01f9      	MOVW R30,R18
008085 940e c191 	CALL SUBOPT_0x34
008087 85ec      	LDD  R30,Y+12
008088 85fd      	LDD  R31,Y+12+1
008089 940e c80b 	CALL SUBOPT_0x13D
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
00808b efed      	LDI  R30,LOW(65533)
00808c efff      	LDI  R31,HIGH(65533)
00808d c002      	RJMP _0x20E004F
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0050:
00808e e0e0      	LDI  R30,LOW(0)
00808f e0f0      	LDI  R31,HIGH(0)
                 _0x20E004F:
008090 940e e0d7 	CALL __LOADLOCR4
008092 962e      	ADIW R28,14
008093 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
008094 940e c651 	CALL SUBOPT_0xED
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
008096 e1ef      	LDI  R30,LOW(_root_path)
008097 e1f9      	LDI  R31,HIGH(_root_path)
008098 940e d0bf 	CALL SUBOPT_0x28F
00809a e1ad      	LDI  R26,LOW(_pfat)
00809b e1b9      	LDI  R27,HIGH(_pfat)
00809c 940e bb0f 	CALL _f_getfree
00809e 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
00809f 3010      	CPI  R17,0
0080a0 f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
0080a1 eaea     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
0080a2 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
0080a3 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
0080a4 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
0080a5 940e d0c6 	CALL SUBOPT_0x290
0080a7 940e c0a5 	CALL SUBOPT_0x12
                 ; 0013 006F        error(res);
0080a9 2fa1      	MOV  R26,R17
0080aa 940e d0cc 	CALL SUBOPT_0x291
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
0080ac c012      	RJMP _0x20E004E
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
0080ad 91e0 191d 	LDS  R30,_pfat
0080af 91f0 191e 	LDS  R31,_pfat+1
0080b1 940e d0da 	CALL SUBOPT_0x292
0080b3 940e d0dd 	CALL SUBOPT_0x293
0080b5 940e d0e2 	CALL SUBOPT_0x294
0080b7 940e df1c 	CALL __LSRD1
0080b9 81ad      	LDD  R26,Y+5
0080ba 81be      	LDD  R27,Y+5+1
0080bb 940e e039 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
0080bd e0e0      	LDI  R30,LOW(0)
0080be e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
0080bf 8118      	LDD  R17,Y+0
0080c0 9627      	ADIW R28,7
0080c1 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
0080c2 931a      	ST   -Y,R17
                 ;	res -> R17
0080c3 e0e0      	LDI  R30,LOW(0)
0080c4 93ea      	ST   -Y,R30
0080c5 eeab      	LDI  R26,LOW(_fat)
0080c6 e1b6      	LDI  R27,HIGH(_fat)
0080c7 940e b488 	CALL _f_mount
0080c9 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
0080ca 3010      	CPI  R17,0
0080cb f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
0080cc ede8     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
0080cd e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
0080ce e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
0080cf e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
0080d0 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0082         error(res);
0080d2 940e d0b9 	CALL SUBOPT_0x28E
                 ; 0013 0083         return -1;
0080d4 c008      	RJMP _0x20E004D
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
0080d5 efe9     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
0080d6 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
0080d7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
0080d8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
0080d9 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0087     return 0;
0080db e0e0      	LDI  R30,LOW(0)
0080dc e0f0      	LDI  R31,HIGH(0)
                 _0x20E004D:
0080dd 9119      	LD   R17,Y+
0080de 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
0080df 93aa      	ST   -Y,R26
0080e0 97ef      	SBIW R28,63
0080e1 9763      	SBIW R28,19
0080e2 50d2      	SUBI R29,2
0080e3 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
0080e4 940e cf9f 	CALL SUBOPT_0x263
0080e6 f449      	BRNE _0x260014
                +
0080e7 e9ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
0080e8 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
0080e9 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
0080ea e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
0080eb 940e c02f 	CALL SUBOPT_0x3
0080ed efef      	LDI  R30,LOW(65535)
0080ee efff      	LDI  R31,HIGH(65535)
0080ef c048      	RJMP _0x20E004C
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
0080f0 01fe      	MOVW R30,R28
0080f1 9631      	ADIW R30,1
0080f2 93fa      	ST   -Y,R31
0080f3 93ea      	ST   -Y,R30
0080f4 940e d0e7 	CALL SUBOPT_0x295
                +
0080f6 01fe     +MOVW R30 , R28
0080f7 5ae2     +SUBI R30 , LOW ( - 606 )
0080f8 4ffd     +SBCI R31 , HIGH ( - 606 )
0080f9 9001     +LD R0 , Z +
0080fa 81f0     +LD R31 , Z
0080fb 2de0     +MOV R30 , R0
                 	__GETW1SX 606
0080fc 940e c191 	CALL SUBOPT_0x34
0080fe e088      	LDI  R24,8
0080ff 940e bf41 	CALL _sprintf
008101 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
008102 01de     +MOVW R26 , R28
008103 5aad     +SUBI R26 , LOW ( - 595 )
008104 4fbd     +SBCI R27 , HIGH ( - 595 )
008105 91ac     +LD R26 , X
                 	__GETB2SX 595
008106 30a1      	CPI  R26,LOW(0x1)
008107 f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
008108 01fe      	MOVW R30,R28
008109 96f3      	ADIW R30,51
00810a 940e d0bf 	CALL SUBOPT_0x28F
00810c e0aa      	LDI  R26,LOW(10)
00810d c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
00810e 01fe      	MOVW R30,R28
00810f 96f3      	ADIW R30,51
008110 940e d0bf 	CALL SUBOPT_0x28F
008112 e0a6      	LDI  R26,LOW(6)
                 _0x260021:
008113 940e b4b3 	CALL _f_open
008115 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
008116 3018      	CPI  R17,8
008117 f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
008118 e0e0      	LDI  R30,LOW(0)
008119 e0f0      	LDI  R31,HIGH(0)
00811a c01d      	RJMP _0x20E004C
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
00811b 3010      	CPI  R17,0
00811c f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
00811d ece7     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
00811e e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
00811f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
008120 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
008121 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 00DA         error(res);
008123 940e d0b9 	CALL SUBOPT_0x28E
                 ; 0013 00DB         return -1;
008125 c012      	RJMP _0x20E004C
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
008126 01de      	MOVW R26,R28
008127 96d3      	ADIW R26,51
008128 940e b964 	CALL _f_close
00812a 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
00812b 3010      	CPI  R17,0
00812c f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
00812d eee9     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
00812e e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
00812f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
008130 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
008131 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 00E3         error(res);
008133 940e d0b9 	CALL SUBOPT_0x28E
                 ; 0013 00E4         return -1;
008135 c002      	RJMP _0x20E004C
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
008136 e0e1      	LDI  R30,LOW(1)
008137 e0f0      	LDI  R31,HIGH(1)
                 _0x20E004C:
008138 8118      	LDD  R17,Y+0
008139 96ef      	ADIW R28,63
00813a 9667      	ADIW R28,23
00813b 5fde      	SUBI R29,-2
00813c 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
00813d 93ba      	ST   -Y,R27
00813e 93aa      	ST   -Y,R26
00813f 97e2      	SBIW R28,50
008140 931a      	ST   -Y,R17
008141 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
008142 940e cf9f 	CALL SUBOPT_0x263
008144 f449      	BRNE _0x26001B
                +
008145 e0ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
008146 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
008147 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
008148 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
008149 940e c02f 	CALL SUBOPT_0x3
00814b efef      	LDI  R30,LOW(65535)
00814c efff      	LDI  R31,HIGH(65535)
00814d c02a      	RJMP _0x20E004B
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
00814e 940e cc62 	CALL SUBOPT_0x1F1
008150 940e d0e7 	CALL SUBOPT_0x295
008152 adee      	LDD  R30,Y+62
008153 adff      	LDD  R31,Y+62+1
008154 940e c191 	CALL SUBOPT_0x34
008156 e088      	LDI  R24,8
008157 940e bf41 	CALL _sprintf
008159 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
00815a a9ee      	LDD  R30,Y+54
00815b a9ff      	LDD  R31,Y+54+1
00815c 940e d0ec 	CALL SUBOPT_0x296
00815e e0a3      	LDI  R26,LOW(3)
00815f 940e b4b3 	CALL _f_open
008161 2f0e      	MOV  R16,R30
008162 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
008163 2e00      	MOV  R0,R16
008164 2a01      	OR   R0,R17
008165 f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
008166 e2ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
008167 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
008168 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
008169 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
00816a 940e e05e 	CALL __PUTPARD1
00816c ade8      	LDD  R30,Y+56
00816d adf9      	LDD  R31,Y+56+1
00816e 940e c191 	CALL SUBOPT_0x34
008170 940e c0a5 	CALL SUBOPT_0x12
                 ; 0013 00F6         error(res);
008172 2fa0      	MOV  R26,R16
008173 940e d0cc 	CALL SUBOPT_0x291
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
008175 c002      	RJMP _0x20E004B
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
008176 e0e0      	LDI  R30,LOW(0)
008177 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004B:
008178 8119      	LDD  R17,Y+1
008179 8108      	LDD  R16,Y+0
00817a 96e8      	ADIW R28,56
00817b 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
00817c 940e c3a0 	CALL SUBOPT_0x81
                 ;	*file -> Y+2
                 ;	res -> R16,R17
00817e 940e cf9f 	CALL SUBOPT_0x263
008180 f449      	BRNE _0x26001D
                +
008181 e5e3     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
008182 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
008183 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
008184 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
008185 940e c02f 	CALL SUBOPT_0x3
008187 efef      	LDI  R30,LOW(65535)
008188 efff      	LDI  R31,HIGH(65535)
008189 c016      	RJMP _0x20E0049
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
00818a 81aa      	LDD  R26,Y+2
00818b 81bb      	LDD  R27,Y+2+1
00818c 940e b964 	CALL _f_close
00818e 2f0e      	MOV  R16,R30
00818f 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
008190 2e00      	MOV  R0,R16
008191 2a01      	OR   R0,R17
008192 f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
008193 e7e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
008194 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
008195 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
008196 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
008197 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0107         error(res);
008199 2fa0      	MOV  R26,R16
00819a de2c      	RCALL _error
                 ; 0013 0108         return -1;
00819b efef      	LDI  R30,LOW(65535)
00819c efff      	LDI  R31,HIGH(65535)
00819d c002      	RJMP _0x20E0049
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
00819e e0e0      	LDI  R30,LOW(0)
00819f e0f0      	LDI  R31,HIGH(0)
                 _0x20E0049:
0081a0 8119      	LDD  R17,Y+1
0081a1 8108      	LDD  R16,Y+0
                 _0x20E004A:
0081a2 9624      	ADIW R28,4
0081a3 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
0081a4 931a      	ST   -Y,R17
0081a5 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
0081a6 e9e8     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
0081a7 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
0081a8 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
0081a9 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
0081aa 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
0081ac eeeb      	LDI  R30,LOW(_fat)
0081ad e1f6      	LDI  R31,HIGH(_fat)
0081ae 93e0 191d 	STS  _pfat,R30
0081b0 93f0 191e 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
0081b2 eea8      	LDI  R26,LOW(1000)
0081b3 e0b3      	LDI  R27,HIGH(1000)
0081b4 940e dcff 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
0081b6 ebee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
0081b7 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
0081b8 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
0081b9 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
0081ba 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 011A     err = SD_mount();
0081bc df05      	RCALL _SD_mount
0081bd 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
0081be 2311      	TST  R17
0081bf f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
0081c0 edee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
0081c1 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
0081c2 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
0081c3 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
0081c4 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 011D         return -1;
0081c6 efef      	LDI  R30,LOW(65535)
0081c7 efff      	LDI  R31,HIGH(65535)
0081c8 c02b      	RJMP _0x20E0048
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
0081c9 efec     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
0081ca e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
0081cb e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
0081cc e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
0081cd 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
0081cf eea8      	LDI  R26,LOW(1000)
0081d0 e0b3      	LDI  R27,HIGH(1000)
0081d1 940e dcff 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
0081d3 e6ab      	LDI  R26,LOW(_sdFreeSpace)
0081d4 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
0081d5 debe      	RCALL _SD_readMemoryRemain
0081d6 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
0081d7 2311      	TST  R17
0081d8 f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
0081d9 e1eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
0081da e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
0081db e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
0081dc e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
0081dd 940e c02f 	CALL SUBOPT_0x3
                 ; 0013 0128         return -1;
0081df efef      	LDI  R30,LOW(65535)
0081e0 efff      	LDI  R31,HIGH(65535)
0081e1 c012      	RJMP _0x20E0048
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
0081e2 e4e4     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
0081e3 e5f2     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
0081e4 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
0081e5 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
0081e6 940e e05e 	CALL __PUTPARD1
0081e8 91e0 146b 	LDS  R30,_sdFreeSpace
0081ea 91f0 146c 	LDS  R31,_sdFreeSpace+1
0081ec 9160 146d 	LDS  R22,_sdFreeSpace+2
0081ee 9170 146e 	LDS  R23,_sdFreeSpace+3
0081f0 940e ca02 	CALL SUBOPT_0x189
                 ; 0013 012D 
                 ; 0013 012E     return 0;
0081f2 e0e0      	LDI  R30,LOW(0)
0081f3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0048:
0081f4 9109      	LD   R16,Y+
0081f5 9119      	LD   R17,Y+
0081f6 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
0081f7 940e e063 	CALL __PUTPARD2
0081f9 9728      	SBIW R28,8
0081fa 940e e0d0 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0081fc 940e d0f3 	CALL SUBOPT_0x297
0081fe 940e d0f8 	CALL SUBOPT_0x298
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
008200 f44a      	BRPL _0x280009
                +
008201 eaee     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
008202 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
008203 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
008204 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
008205 940e c02f 	CALL SUBOPT_0x3
008207 efef      	LDI  R30,LOW(65535)
008208 efff      	LDI  R31,HIGH(65535)
008209 c078      	RJMP _0x20E0047
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
00820a e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
00820b 940e d0ff 	CALL SUBOPT_0x299
00820d 940e d105 	CALL SUBOPT_0x29A
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
00820f 940e d0f3 	CALL SUBOPT_0x297
008211 940e d109 	CALL SUBOPT_0x29B
008213 b7ed      	IN   R30,SPL
008214 b7fe      	IN   R31,SPH
008215 9731      	SBIW R30,1
008216 93fa      	ST   -Y,R31
008217 93ea      	ST   -Y,R30
008218 934f      	PUSH R20
008219 933f      	PUSH R19
00821a 940e c359 	CALL SUBOPT_0x75
00821c ddca      	RCALL _SD_writeData
00821d 913f      	POP  R19
00821e 914f      	POP  R20
00821f 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
008220 2311      	TST  R17
008221 f44a      	BRPL _0x28000A
                +
008222 edec     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
008223 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
008224 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
008225 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
008226 940e c02f 	CALL SUBOPT_0x3
008228 efef      	LDI  R30,LOW(65535)
008229 efff      	LDI  R31,HIGH(65535)
00822a c057      	RJMP _0x20E0047
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
00822b 940e d0f3 	CALL SUBOPT_0x297
00822d 940e d10e 	CALL SUBOPT_0x29C
00822f 940e e05e 	CALL __PUTPARD1
008231 01fe      	MOVW R30,R28
008232 9678      	ADIW R30,24
008233 940e d112 	CALL SUBOPT_0x29D
008235 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
008237 f44a      	BRPL _0x28000B
                +
008238 e0e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
008239 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
00823a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
00823b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
00823c 940e c02f 	CALL SUBOPT_0x3
00823e efef      	LDI  R30,LOW(65535)
00823f efff      	LDI  R31,HIGH(65535)
008240 c041      	RJMP _0x20E0047
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
008241 940e d0f3 	CALL SUBOPT_0x297
008243 940e d11b 	CALL SUBOPT_0x29F
008245 01fe      	MOVW R30,R28
008246 9676      	ADIW R30,22
008247 93fa      	ST   -Y,R31
008248 93ea      	ST   -Y,R30
008249 940e c352 	CALL SUBOPT_0x73
00824b 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
00824d f44a      	BRPL _0x28000C
                +
00824e e3eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
00824f e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
008250 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
008251 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
008252 940e c02f 	CALL SUBOPT_0x3
008254 efef      	LDI  R30,LOW(65535)
008255 efff      	LDI  R31,HIGH(65535)
008256 c02b      	RJMP _0x20E0047
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
008257 940e d0f3 	CALL SUBOPT_0x297
008259 940e d124 	CALL SUBOPT_0x2A0
00825b 940e e05e 	CALL __PUTPARD1
00825d 940e c30a 	CALL SUBOPT_0x6C
00825f 940e c35f 	CALL SUBOPT_0x77
008261 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
008263 f44a      	BRPL _0x28000D
                +
008264 e6eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
008265 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
008266 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
008267 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
008268 940e c02f 	CALL SUBOPT_0x3
00826a efef      	LDI  R30,LOW(65535)
00826b efff      	LDI  R31,HIGH(65535)
00826c c015      	RJMP _0x20E0047
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
00826d 940e d0f3 	CALL SUBOPT_0x297
00826f 940e d12b 	CALL SUBOPT_0x2A1
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
008271 f45a      	BRPL _0x28000E
                +
008272 e9e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
008273 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
008274 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
008275 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
008276 940e c3e8 	CALL SUBOPT_0x8D
008278 940e ca02 	CALL SUBOPT_0x189
00827a efef      	LDI  R30,LOW(65535)
00827b efff      	LDI  R31,HIGH(65535)
00827c c005      	RJMP _0x20E0047
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
00827d e0e0      	LDI  R30,LOW(0)
00827e 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
008280 85e8      	LDD  R30,Y+8
008281 85f9      	LDD  R31,Y+8+1
                 _0x20E0047:
008282 940e e0d7 	CALL __LOADLOCR4
008284 9668      	ADIW R28,24
008285 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
008286 940e c62c 	CALL SUBOPT_0xE6
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
008288 940e d13a 	CALL SUBOPT_0x2A2
00828a 940e d13f 	CALL SUBOPT_0x2A3
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
00828c f44a      	BRPL _0x28000F
                +
00828d ecea     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
00828e e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
00828f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
008290 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
008291 940e c02f 	CALL SUBOPT_0x3
008293 efef      	LDI  R30,LOW(65535)
008294 efff      	LDI  R31,HIGH(65535)
008295 c1b9      	RJMP _0x20E0044
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
008296 940e d13a 	CALL SUBOPT_0x2A2
008298 940e d146 	CALL SUBOPT_0x2A4
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
00829a f44a      	BRPL _0x280010
                +
00829b efe6     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
00829c e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
00829d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
00829e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
00829f 940e c02f 	CALL SUBOPT_0x3
0082a1 efef      	LDI  R30,LOW(65535)
0082a2 efff      	LDI  R31,HIGH(65535)
0082a3 c1ab      	RJMP _0x20E0044
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
0082a4 940e d14d 	CALL SUBOPT_0x2A5
0082a6 940e d153 	CALL SUBOPT_0x2A6
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
0082a8 940e d159 	CALL SUBOPT_0x2A7
0082aa f0b8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
0082ab e5e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
0082ac e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
0082ad e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
0082ae e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
0082af 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0082b1 940e d160 	CALL SUBOPT_0x2A8
                 ; 0014 0050         if(res < 0)
0082b3 f442      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
0082b4 e7e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
0082b5 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
0082b6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
0082b7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
0082b8 940e c2b9 	CALL SUBOPT_0x5F
0082ba 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
0082bc e0e1      	LDI  R30,LOW(1)
0082bd 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
0082bf e0e0      	LDI  R30,LOW(0)
0082c0 e0f0      	LDI  R31,HIGH(0)
0082c1 c18d      	RJMP _0x20E0044
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
0082c2 940e d0ff 	CALL SUBOPT_0x299
0082c4 940e d105 	CALL SUBOPT_0x29A
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
0082c6 940e d13a 	CALL SUBOPT_0x2A2
0082c8 940e d109 	CALL SUBOPT_0x29B
0082ca b7ed      	IN   R30,SPL
0082cb b7fe      	IN   R31,SPH
0082cc 9731      	SBIW R30,1
0082cd 93fa      	ST   -Y,R31
0082ce 93ea      	ST   -Y,R30
0082cf 934f      	PUSH R20
0082d0 933f      	PUSH R19
0082d1 940e c359 	CALL SUBOPT_0x75
0082d3 dd6a      	RCALL _SD_readData
0082d4 913f      	POP  R19
0082d5 914f      	POP  R20
0082d6 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
0082d7 2311      	TST  R17
0082d8 f44a      	BRPL _0x280013
                +
0082d9 eae3     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
0082da e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
0082db e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
0082dc e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
0082dd 940e c02f 	CALL SUBOPT_0x3
0082df efef      	LDI  R30,LOW(65535)
0082e0 efff      	LDI  R31,HIGH(65535)
0082e1 c16d      	RJMP _0x20E0044
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
0082e2 940e d13a 	CALL SUBOPT_0x2A2
0082e4 940e d10e 	CALL SUBOPT_0x29C
0082e6 940e c65c 	CALL SUBOPT_0xF0
0082e8 940e d112 	CALL SUBOPT_0x29D
0082ea 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
0082ec f44a      	BRPL _0x280014
                +
0082ed eced     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
0082ee e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
0082ef e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
0082f0 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
0082f1 940e c02f 	CALL SUBOPT_0x3
0082f3 efef      	LDI  R30,LOW(65535)
0082f4 efff      	LDI  R31,HIGH(65535)
0082f5 c159      	RJMP _0x20E0044
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
0082f6 940e d13a 	CALL SUBOPT_0x2A2
0082f8 940e d11b 	CALL SUBOPT_0x29F
0082fa 8dea      	LDD  R30,Y+26
0082fb 8dfb      	LDD  R31,Y+26+1
0082fc 93fa      	ST   -Y,R31
0082fd 93ea      	ST   -Y,R30
0082fe 940e c352 	CALL SUBOPT_0x73
008300 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
008302 f44a      	BRPL _0x280015
                +
008303 efec     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
008304 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
008305 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
008306 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
008307 940e c02f 	CALL SUBOPT_0x3
008309 efef      	LDI  R30,LOW(65535)
00830a efff      	LDI  R31,HIGH(65535)
00830b c143      	RJMP _0x20E0044
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
00830c 940e d13a 	CALL SUBOPT_0x2A2
00830e 940e d124 	CALL SUBOPT_0x2A0
008310 940e ceb2 	CALL SUBOPT_0x241
008312 940e d112 	CALL SUBOPT_0x29D
008314 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
008316 f44a      	BRPL _0x280016
                +
008317 e2e9     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
008318 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
008319 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
00831a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
00831b 940e c02f 	CALL SUBOPT_0x3
00831d efef      	LDI  R30,LOW(65535)
00831e efff      	LDI  R31,HIGH(65535)
00831f c12f      	RJMP _0x20E0044
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
008320 c124      	RJMP _0x20E0045
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
008321 93aa      	ST   -Y,R26
008322 9728      	SBIW R28,8
008323 940e e0d0 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
008325 940e d176 	CALL SUBOPT_0x2AA
008327 940e d0f8 	CALL SUBOPT_0x298
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
008329 f44a      	BRPL _0x280017
                +
00832a e5e4     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
00832b e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
00832c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
00832d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
00832e 940e c02f 	CALL SUBOPT_0x3
008330 efef      	LDI  R30,LOW(65535)
008331 efff      	LDI  R31,HIGH(65535)
008332 c076      	RJMP _0x20E0046
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
008333 e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
008334 940e d17b 	CALL SUBOPT_0x2AB
008336 940e d105 	CALL SUBOPT_0x29A
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
008338 940e d176 	CALL SUBOPT_0x2AA
00833a 940e d109 	CALL SUBOPT_0x29B
00833c b7ed      	IN   R30,SPL
00833d b7fe      	IN   R31,SPH
00833e 9731      	SBIW R30,1
00833f 93fa      	ST   -Y,R31
008340 93ea      	ST   -Y,R30
008341 934f      	PUSH R20
008342 933f      	PUSH R19
008343 940e c359 	CALL SUBOPT_0x75
008345 dca1      	RCALL _SD_writeData
008346 913f      	POP  R19
008347 914f      	POP  R20
008348 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
008349 2311      	TST  R17
00834a f44a      	BRPL _0x280018
                +
00834b e8e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
00834c e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
00834d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
00834e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
00834f 940e c02f 	CALL SUBOPT_0x3
008351 efef      	LDI  R30,LOW(65535)
008352 efff      	LDI  R31,HIGH(65535)
008353 c055      	RJMP _0x20E0046
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
008354 940e d176 	CALL SUBOPT_0x2AA
008356 940e d10e 	CALL SUBOPT_0x29C
008358 940e e05e 	CALL __PUTPARD1
00835a 01fe      	MOVW R30,R28
00835b 9674      	ADIW R30,20
00835c 940e d112 	CALL SUBOPT_0x29D
00835e 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
008360 f44a      	BRPL _0x280019
                +
008361 ebe1     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
008362 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
008363 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
008364 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
008365 940e c02f 	CALL SUBOPT_0x3
008367 efef      	LDI  R30,LOW(65535)
008368 efff      	LDI  R31,HIGH(65535)
008369 c03f      	RJMP _0x20E0046
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
00836a 940e d176 	CALL SUBOPT_0x2AA
00836c 940e d11b 	CALL SUBOPT_0x29F
00836e 01fe      	MOVW R30,R28
00836f 9673      	ADIW R30,19
008370 940e d181 	CALL SUBOPT_0x2AC
008372 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
008374 f44a      	BRPL _0x28001A
                +
008375 eee4     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
008376 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
008377 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
008378 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
008379 940e c02f 	CALL SUBOPT_0x3
00837b efef      	LDI  R30,LOW(65535)
00837c efff      	LDI  R31,HIGH(65535)
00837d c02b      	RJMP _0x20E0046
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
00837e 940e d176 	CALL SUBOPT_0x2AA
008380 940e d185 	CALL SUBOPT_0x2AD
008382 940e e05e 	CALL __PUTPARD1
008384 940e c30a 	CALL SUBOPT_0x6C
008386 940e c359 	CALL SUBOPT_0x75
008388 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
00838a f44a      	BRPL _0x28001B
                +
00838b e1e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
00838c e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
00838d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
00838e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
00838f 940e c02f 	CALL SUBOPT_0x3
008391 efef      	LDI  R30,LOW(65535)
008392 efff      	LDI  R31,HIGH(65535)
008393 c015      	RJMP _0x20E0046
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
008394 940e d176 	CALL SUBOPT_0x2AA
008396 940e d12b 	CALL SUBOPT_0x2A1
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
008398 f45a      	BRPL _0x28001C
                +
008399 e4e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
00839a e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
00839b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
00839c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
00839d 940e c3e8 	CALL SUBOPT_0x8D
00839f 940e ca02 	CALL SUBOPT_0x189
0083a1 efef      	LDI  R30,LOW(65535)
0083a2 efff      	LDI  R31,HIGH(65535)
0083a3 c005      	RJMP _0x20E0046
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
0083a4 e0e0      	LDI  R30,LOW(0)
0083a5 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
0083a7 85e8      	LDD  R30,Y+8
0083a8 85f9      	LDD  R31,Y+8+1
                 _0x20E0046:
0083a9 940e e0d7 	CALL __LOADLOCR4
0083ab 9664      	ADIW R28,20
0083ac 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
0083ad 940e c62c 	CALL SUBOPT_0xE6
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0083af 940e d13a 	CALL SUBOPT_0x2A2
0083b1 940e d13f 	CALL SUBOPT_0x2A3
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
0083b3 f44a      	BRPL _0x28001D
                +
0083b4 e7e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
0083b5 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
0083b6 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
0083b7 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
0083b8 940e c02f 	CALL SUBOPT_0x3
0083ba efef      	LDI  R30,LOW(65535)
0083bb efff      	LDI  R31,HIGH(65535)
0083bc c092      	RJMP _0x20E0044
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
0083bd 940e d13a 	CALL SUBOPT_0x2A2
0083bf 940e d146 	CALL SUBOPT_0x2A4
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
0083c1 f44a      	BRPL _0x28001E
                +
0083c2 e9ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
0083c3 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
0083c4 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
0083c5 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
0083c6 940e c02f 	CALL SUBOPT_0x3
0083c8 efef      	LDI  R30,LOW(65535)
0083c9 efff      	LDI  R31,HIGH(65535)
0083ca c084      	RJMP _0x20E0044
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
0083cb 940e d14d 	CALL SUBOPT_0x2A5
0083cd 940e d153 	CALL SUBOPT_0x2A6
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
0083cf 940e d159 	CALL SUBOPT_0x2A7
0083d1 f0b8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
0083d2 ecea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
0083d3 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
0083d4 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
0083d5 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
0083d6 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0083d8 940e d18c 	CALL SUBOPT_0x2AE
                 ; 0014 00A9         if(res < 0)
0083da f442      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
0083db e7e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
0083dc e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
0083dd e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
0083de e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
0083df 940e c300 	CALL SUBOPT_0x6A
0083e1 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
0083e3 e0e1      	LDI  R30,LOW(1)
0083e4 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
0083e6 e0e0      	LDI  R30,LOW(0)
0083e7 e0f0      	LDI  R31,HIGH(0)
0083e8 c066      	RJMP _0x20E0044
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
0083e9 940e d17b 	CALL SUBOPT_0x2AB
0083eb 940e d105 	CALL SUBOPT_0x29A
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
0083ed 940e d13a 	CALL SUBOPT_0x2A2
0083ef 940e d109 	CALL SUBOPT_0x29B
0083f1 b7ed      	IN   R30,SPL
0083f2 b7fe      	IN   R31,SPH
0083f3 9731      	SBIW R30,1
0083f4 93fa      	ST   -Y,R31
0083f5 93ea      	ST   -Y,R30
0083f6 934f      	PUSH R20
0083f7 933f      	PUSH R19
0083f8 940e c359 	CALL SUBOPT_0x75
0083fa dc43      	RCALL _SD_readData
0083fb 913f      	POP  R19
0083fc 914f      	POP  R20
0083fd 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
0083fe 2311      	TST  R17
0083ff f44a      	BRPL _0x280021
                +
008400 eeea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
008401 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
008402 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
008403 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
008404 940e c02f 	CALL SUBOPT_0x3
008406 efef      	LDI  R30,LOW(65535)
008407 efff      	LDI  R31,HIGH(65535)
008408 c046      	RJMP _0x20E0044
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
008409 940e d13a 	CALL SUBOPT_0x2A2
00840b 940e d10e 	CALL SUBOPT_0x29C
00840d 940e c65c 	CALL SUBOPT_0xF0
00840f 940e d112 	CALL SUBOPT_0x29D
008411 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
008413 f44a      	BRPL _0x280022
                +
008414 e1e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
008415 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
008416 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
008417 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
008418 940e c02f 	CALL SUBOPT_0x3
00841a efef      	LDI  R30,LOW(65535)
00841b efff      	LDI  R31,HIGH(65535)
00841c c032      	RJMP _0x20E0044
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
00841d 940e d13a 	CALL SUBOPT_0x2A2
00841f 940e d11b 	CALL SUBOPT_0x29F
008421 8dea      	LDD  R30,Y+26
008422 8dfb      	LDD  R31,Y+26+1
008423 940e d181 	CALL SUBOPT_0x2AC
008425 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
008427 f44a      	BRPL _0x280023
                +
008428 e4e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
008429 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
00842a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
00842b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
00842c 940e c02f 	CALL SUBOPT_0x3
00842e efef      	LDI  R30,LOW(65535)
00842f efff      	LDI  R31,HIGH(65535)
008430 c01e      	RJMP _0x20E0044
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
008431 940e d13a 	CALL SUBOPT_0x2A2
008433 940e d185 	CALL SUBOPT_0x2AD
008435 940e ceb2 	CALL SUBOPT_0x241
008437 940e d181 	CALL SUBOPT_0x2AC
008439 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
00843b f44a      	BRPL _0x280024
                +
00843c e6ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
00843d e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
00843e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
00843f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
008440 940e c02f 	CALL SUBOPT_0x3
008442 efef      	LDI  R30,LOW(65535)
008443 efff      	LDI  R31,HIGH(65535)
008444 c00a      	RJMP _0x20E0044
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E0045:
                +
008445 85e8     +LDD R30 , Y + 8
008446 85f9     +LDD R31 , Y + 8 + 1
008447 856a     +LDD R22 , Y + 8 + 2
008448 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
008449 89a8      	LDD  R26,Y+16
00844a 89b9      	LDD  R27,Y+16+1
00844b 940e e039 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
00844d e0e1      	LDI  R30,LOW(1)
00844e e0f0      	LDI  R31,HIGH(1)
                 _0x20E0044:
00844f 940e e0d7 	CALL __LOADLOCR4
008451 966a      	ADIW R28,26
008452 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
008453 940e c3a0 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
008455 940e d19d 	CALL SUBOPT_0x2AF
008457 940e d1a2 	CALL SUBOPT_0x2B0
008459 940e ca2b 	CALL SUBOPT_0x192
00845b 940e c35f 	CALL SUBOPT_0x77
00845d 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 00CE     if(res < 0)
00845f f44a      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
008460 e9eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
008461 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
008462 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
008463 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
008464 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 00D1         return -1;
008466 efef      	LDI  R30,LOW(65535)
008467 efff      	LDI  R31,HIGH(65535)
008468 c048      	RJMP _0x20E0042
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
008469 ece6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
00846a e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
00846b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
00846c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
00846d c03b      	RJMP _0x20E0043
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
00846e 940e cc6f 	CALL SUBOPT_0x1F4
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
008470 eee4     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
008471 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
008472 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
008473 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
008474 940e cc6b 	CALL SUBOPT_0x1F3
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
008476 940e cc62 	CALL SUBOPT_0x1F1
008478 940e c35f 	CALL SUBOPT_0x77
00847a 940e c8fa 	CALL SUBOPT_0x161
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
00847c 940e d1a2 	CALL SUBOPT_0x2B0
00847e 01fe      	MOVW R30,R28
00847f 9638      	ADIW R30,8
008480 940e d112 	CALL SUBOPT_0x29D
008482 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 00E1     if(res < 0)
008484 f44a      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
008485 e0e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
008486 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
008487 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
008488 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
008489 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 00E4         return -1;
00848b efef      	LDI  R30,LOW(65535)
00848c efff      	LDI  R31,HIGH(65535)
00848d c049      	RJMP _0x20E0040
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
00848e c046      	RJMP _0x20E0041
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
00848f 940e c3a0 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
008491 940e d19d 	CALL SUBOPT_0x2AF
008493 940e d1a9 	CALL SUBOPT_0x2B1
008495 940e ca2b 	CALL SUBOPT_0x192
008497 940e c35f 	CALL SUBOPT_0x77
008499 940e d171 	CALL SUBOPT_0x2A9
                 ; 0014 00EF     if(res < 0)
00849b f44a      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
00849c e3e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
00849d e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
00849e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
00849f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
0084a0 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 00F2         return -1;
0084a2 efef      	LDI  R30,LOW(65535)
0084a3 efff      	LDI  R31,HIGH(65535)
0084a4 c00c      	RJMP _0x20E0042
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
0084a5 e5ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
0084a6 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
0084a7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
0084a8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
                 _0x20E0043:
0084a9 940e e05e 	CALL __PUTPARD1
0084ab 81ae      	LDD  R26,Y+6
0084ac 81bf      	LDD  R27,Y+6+1
0084ad 940e c7b1 	CALL SUBOPT_0x12B
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
0084af e0e0      	LDI  R30,LOW(0)
0084b0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0042:
0084b1 8119      	LDD  R17,Y+1
0084b2 8108      	LDD  R16,Y+0
0084b3 9626      	ADIW R28,6
0084b4 9508      	RET
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
0084b5 940e cc6f 	CALL SUBOPT_0x1F4
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
0084b7 e7e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
0084b8 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
0084b9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
0084ba e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
0084bb 940e cc6b 	CALL SUBOPT_0x1F3
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
0084bd 940e cc62 	CALL SUBOPT_0x1F1
0084bf 940e c35f 	CALL SUBOPT_0x77
0084c1 940e c8fa 	CALL SUBOPT_0x161
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
0084c3 940e d1a9 	CALL SUBOPT_0x2B1
0084c5 01fe      	MOVW R30,R28
0084c6 9638      	ADIW R30,8
0084c7 940e d112 	CALL SUBOPT_0x29D
0084c9 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 0102     if(res < 0)
0084cb f44a      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
0084cc e9e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
0084cd e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
0084ce e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
0084cf e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
0084d0 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 0105         return -1;
0084d2 efef      	LDI  R30,LOW(65535)
0084d3 efff      	LDI  R31,HIGH(65535)
0084d4 c002      	RJMP _0x20E0040
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
                 _0x20E0041:
0084d5 e0e0      	LDI  R30,LOW(0)
0084d6 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0040:
0084d7 8119      	LDD  R17,Y+1
0084d8 8108      	LDD  R16,Y+0
0084d9 9628      	ADIW R28,8
0084da 9508      	RET
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
0084db 940e cbef 	CALL SUBOPT_0x1DA
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
0084dd 81ec      	LDD  R30,Y+4
0084de 81fd      	LDD  R31,Y+4+1
0084df 940e c297 	CALL SUBOPT_0x59
0084e1 940e d0e2 	CALL SUBOPT_0x294
                +
0084e3 5fe0     +SUBI R30 , LOW ( - 16 )
0084e4 4fff     +SBCI R31 , HIGH ( - 16 )
0084e5 4f6f     +SBCI R22 , BYTE3 ( - 16 )
0084e6 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
0084e7 940e c481 	CALL SUBOPT_0xA0
                 ; 0014 0115 
                 ; 0014 0116     return address;
0084e9 940e c3c6 	CALL SUBOPT_0x87
0084eb 962a      	ADIW R28,10
0084ec 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
0084ed 93ba      	ST   -Y,R27
0084ee 93aa      	ST   -Y,R26
0084ef 97a0      	SBIW R28,32
0084f0 50d2      	SUBI R29,2
0084f1 931a      	ST   -Y,R17
0084f2 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
0084f3 01fe     +MOVW R30 , R28
0084f4 5de9     +SUBI R30 , LOW ( - 551 )
0084f5 4ffd     +SBCI R31 , HIGH ( - 551 )
0084f6 9001     +LD R0 , Z +
0084f7 81f0     +LD R31 , Z
0084f8 2de0     +MOV R30 , R0
                 	__GETW1SX 551
0084f9 93fa      	ST   -Y,R31
0084fa 93ea      	ST   -Y,R30
                +
0084fb 01de     +MOVW R26 , R28
0084fc 5da8     +SUBI R26 , LOW ( - 552 )
0084fd 4fbd     +SBCI R27 , HIGH ( - 552 )
0084fe 91ac     +LD R26 , X
                 	__GETB2SX 552
0084ff dbdf      	RCALL _SD_createFile
008500 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
008501 2311      	TST  R17
008502 f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
008503 ebef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
008504 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
008505 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
008506 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
008507 940e d1b0 	CALL SUBOPT_0x2B2
008509 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 0121         return -1;
00850b efef      	LDI  R30,LOW(65535)
00850c efff      	LDI  R31,HIGH(65535)
00850d c075      	RJMP _0x20E003E
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
00850e 2e00      	MOV  R0,R16
00850f 2a01      	OR   R0,R17
008510 f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
008511 eeeb     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
008512 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
008513 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
008514 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
008515 940e d1b0 	CALL SUBOPT_0x2B2
008517 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 0126         return 0;
008519 e0e0      	LDI  R30,LOW(0)
00851a e0f0      	LDI  R31,HIGH(0)
00851b c067      	RJMP _0x20E003E
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
00851c e0ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
00851d e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
00851e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
00851f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
008520 940e d1b0 	CALL SUBOPT_0x2B2
008522 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
008524 01fe     +MOVW R30 , R28
008525 5dee     +SUBI R30 , LOW ( - 546 )
008526 4ffd     +SBCI R31 , HIGH ( - 546 )
008527 9001     +LD R0 , Z +
008528 81f0     +LD R31 , Z
008529 2de0     +MOV R30 , R0
                 	__GETW1SX 546
00852a 9730      	SBIW R30,0
00852b f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
00852c e2ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
00852d e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
00852e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
00852f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
008530 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 012E             return 1;
008532 c04e      	RJMP _0x20E003F
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
008533 940e cc62 	CALL SUBOPT_0x1F1
                +
008535 01de     +MOVW R26 , R28
008536 5da7     +SUBI R26 , LOW ( - 553 )
008537 4fbd     +SBCI R27 , HIGH ( - 553 )
008538 900d     +LD R0 , X +
008539 91bc     +LD R27 , X
00853a 2da0     +MOV R26 , R0
                 	__GETW2SX 553
00853b dc01      	RCALL _SD_openFile
00853c 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
00853d 2311      	TST  R17
00853e f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
00853f e5ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
008540 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
008541 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
008542 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
008543 940e d1b0 	CALL SUBOPT_0x2B2
008545 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 0136             return -1;
008547 efef      	LDI  R30,LOW(65535)
008548 efff      	LDI  R31,HIGH(65535)
008549 c039      	RJMP _0x20E003E
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
00854a e8e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
00854b e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
00854c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
00854d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
00854e 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 013B             print_payload(initString,len);
008550 940e d1ba 	CALL SUBOPT_0x2B3
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
008552 940e cc62 	CALL SUBOPT_0x1F1
008554 940e d1a2 	CALL SUBOPT_0x2B0
                +
008556 01fe     +MOVW R30 , R28
008557 5de6     +SUBI R30 , LOW ( - 554 )
008558 4ffd     +SBCI R31 , HIGH ( - 554 )
008559 9001     +LD R0 , Z +
00855a 81f0     +LD R31 , Z
00855b 2de0     +MOV R30 , R0
                 	__GETW1SX 554
00855c 93fa      	ST   -Y,R31
00855d 93ea      	ST   -Y,R30
                +
00855e 01de     +MOVW R26 , R28
00855f 5da6     +SUBI R26 , LOW ( - 554 )
008560 4fbd     +SBCI R27 , HIGH ( - 554 )
008561 900d     +LD R0 , X +
008562 91bc     +LD R27 , X
008563 2da0     +MOV R26 , R0
                 	__GETW2SX 554
008564 940e d116 	CALL SUBOPT_0x29E
                 ; 0014 013D             if(res < 0)
008566 f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
008567 eaef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
008568 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
008569 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
00856a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
00856b 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 0140                 print_payload(initString,len);
00856d 940e d1ba 	CALL SUBOPT_0x2B3
                 ; 0014 0141                 return -1;
00856f efef      	LDI  R30,LOW(65535)
008570 efff      	LDI  R31,HIGH(65535)
008571 c011      	RJMP _0x20E003E
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
008572 01de      	MOVW R26,R28
008573 9612      	ADIW R26,2
008574 dc07      	RCALL _SD_closeFile
008575 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
008576 2311      	TST  R17
008577 f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
008578 eee3     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
008579 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
00857a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
00857b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
00857c 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 0148                 return -1;
00857e efef      	LDI  R30,LOW(65535)
00857f efff      	LDI  R31,HIGH(65535)
008580 c002      	RJMP _0x20E003E
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E003F:
008581 e0e1      	LDI  R30,LOW(1)
008582 e0f0      	LDI  R31,HIGH(1)
                 _0x20E003E:
008583 8119      	LDD  R17,Y+1
008584 8108      	LDD  R16,Y+0
008585 96a9      	ADIW R28,41
008586 5fde      	SUBI R29,-2
008587 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
008588 940e e0d0 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
00858a e020     +LDI R18 , LOW ( 0 )
00858b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00858c e0ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
00858d e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
00858e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
00858f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
008590 940e c02f 	CALL SUBOPT_0x3
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
008592 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
008593 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
008594 940e c676 	CALL SUBOPT_0xF5
008596 940e d1ca 	CALL SUBOPT_0x2B4
                 ; 0014 0159     if(res < 0)
008598 f442      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
008599 940e d1d5 	CALL SUBOPT_0x2B5
00859b 940e c2b9 	CALL SUBOPT_0x5F
00859d 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 015C         ret = ret-1;
                +
00859f 5021     +SUBI R18 , LOW ( 1 )
0085a0 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
0085a1 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
0085a2 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
0085a3 940e c676 	CALL SUBOPT_0xF5
0085a5 940e d1ca 	CALL SUBOPT_0x2B4
                 ; 0014 0160     if(res < 0)
0085a7 f442      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
0085a8 940e d1d5 	CALL SUBOPT_0x2B5
0085aa 940e c300 	CALL SUBOPT_0x6A
0085ac 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 0163         ret = ret-1;
                +
0085ae 5021     +SUBI R18 , LOW ( 1 )
0085af 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
0085b0 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
0085b1 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
0085b2 940e c676 	CALL SUBOPT_0xF5
0085b4 940e ca35 	CALL SUBOPT_0x194
0085b6 df36      	RCALL _LOG_createFile
0085b7 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
0085b8 2311      	TST  R17
0085b9 f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
0085ba 940e d1d5 	CALL SUBOPT_0x2B5
0085bc 940e d1da 	CALL SUBOPT_0x2B6
0085be 940e c0a5 	CALL SUBOPT_0x12
                 ; 0014 016A         ret = ret-1;
                +
0085c0 5021     +SUBI R18 , LOW ( 1 )
0085c1 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
0085c2 01f9      	MOVW R30,R18
0085c3 940e e0d7 	CALL __LOADLOCR4
0085c5 9624      	ADIW R28,4
0085c6 9508      	RET
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
0085c7 940e cc6f 	CALL SUBOPT_0x1F4
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
0085c9 d0b1      	RCALL _findFreeSlotDataLogQueue
0085ca 2f0e      	MOV  R16,R30
0085cb 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
0085cc 2311      	TST  R17
0085cd f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
0085ce e5e2     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
0085cf e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
0085d0 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
0085d1 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
0085d2 940e c02f 	CALL SUBOPT_0x3
                 ; 0015 0017         return -1;
0085d4 efef      	LDI  R30,LOW(65535)
0085d5 efff      	LDI  R31,HIGH(65535)
0085d6 c038      	RJMP _0x20E003D
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
0085d7 940e c93d 	CALL SUBOPT_0x16D
0085d9 55e0      	SUBI R30,LOW(-_dataLogQueue)
0085da 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
0085db 85ac      	LDD  R26,Y+12
0085dc 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
0085dd 940e c93d 	CALL SUBOPT_0x16D
                +
0085df 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
0085e0 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
0085e1 940e c5c6 	CALL SUBOPT_0xD7
0085e3 940e cf72 	CALL SUBOPT_0x25C
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
0085e5 940e c93d 	CALL SUBOPT_0x16D
                +
0085e7 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
0085e8 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
0085e9 81ae      	LDD  R26,Y+6
0085ea 81bf      	LDD  R27,Y+6+1
0085eb 83a0      	STD  Z+0,R26
0085ec 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
0085ed 940e c93d 	CALL SUBOPT_0x16D
                +
0085ef 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
0085f0 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
0085f1 940e c4e8 	CALL SUBOPT_0xB3
0085f3 940e cf72 	CALL SUBOPT_0x25C
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
0085f5 91e0 1a1e 	LDS  R30,_dataLogQCount
0085f7 5fef      	SUBI R30,-LOW(1)
0085f8 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
0085fa e8e8     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
0085fb e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
0085fc e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
0085fd e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
0085fe 940e e05e 	CALL __PUTPARD1
008600 89e8      	LDD  R30,Y+16
008601 940e c2e0 	CALL SUBOPT_0x65
008603 01f8      	MOVW R30,R16
008604 940e cf23 	CALL SUBOPT_0x251
008606 91e0 1a1e 	LDS  R30,_dataLogQCount
008608 940e c2e0 	CALL SUBOPT_0x65
00860a 940e c2e6 	CALL SUBOPT_0x66
                 ; 0015 0021     return dataLogQCount;
00860c 91e0 1a1e 	LDS  R30,_dataLogQCount
00860e e0f0      	LDI  R31,0
                 _0x20E003D:
00860f 8119      	LDD  R17,Y+1
008610 8108      	LDD  R16,Y+0
008611 962d      	ADIW R28,13
008612 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
008613 940e c3a0 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
008615 91e0 1a1e 	LDS  R30,_dataLogQCount
008617 30e0      	CPI  R30,0
008618 f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
008619 eee4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
00861a e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
00861b e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
00861c e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
00861d 940e c02f 	CALL SUBOPT_0x3
                 ; 0015 002A         return -1;
00861f c0f5      	RJMP _0x20E003B
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
008620 e000     +LDI R16 , LOW ( 0 )
008621 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
008622 300a     +CPI R16 , LOW ( 10 )
008623 e0e0     +LDI R30 , HIGH ( 10 )
008624 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
008625 f54c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
008626 940e c93d 	CALL SUBOPT_0x16D
008628 55e0      	SUBI R30,LOW(-_dataLogQueue)
008629 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00862a 81e0      	LD   R30,Z
00862b 85a8      	LDD  R26,Y+8
00862c 17ea      	CP   R30,R26
00862d f4f1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
00862e 940e c93d 	CALL SUBOPT_0x16D
                +
008630 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
008631 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
008632 940e d1e0 	CALL SUBOPT_0x2B7
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
008634 940e c93d 	CALL SUBOPT_0x16D
                +
008636 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
008637 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
008638 01df      	MOVW R26,R30
008639 940e e02a 	CALL __GETW1P
00863b 81ac      	LDD  R26,Y+4
00863c 81bd      	LDD  R27,Y+4+1
00863d 93ed      	ST   X+,R30
00863e 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
00863f 940e c93d 	CALL SUBOPT_0x16D
                +
008641 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
008642 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
008643 01df      	MOVW R26,R30
008644 940e e02e 	CALL __GETD1P
008646 81aa      	LDD  R26,Y+2
008647 81bb      	LDD  R27,Y+2+1
008648 940e e039 	CALL __PUTDP1
                 ; 0015 0034 
                 ; 0015 0035             return i;
00864a 01f8      	MOVW R30,R16
00864b c0cb      	RJMP _0x20E003A
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
00864c 5f0f     +SUBI R16 , LOW ( - 1 )
00864d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00864e cfd3      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
00864f e1e4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
008650 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
008651 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
008652 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
008653 c0bc      	RJMP _0x20E003C
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
008654 93aa      	ST   -Y,R26
008655 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
008656 e010      	LDI  R17,LOW(0)
                 _0x2A000A:
008657 301a      	CPI  R17,10
008658 f4e8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
008659 940e d1e8 	CALL SUBOPT_0x2B8
00865b 81e0      	LD   R30,Z
00865c 81a9      	LDD  R26,Y+1
00865d 17ea      	CP   R30,R26
00865e f4a9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
00865f 940e d1e8 	CALL SUBOPT_0x2B8
008661 940e d1ee 	CALL SUBOPT_0x2B9
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
008663 91e0 1a1e 	LDS  R30,_dataLogQCount
008665 50e1      	SUBI R30,LOW(1)
008666 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
008668 e5e4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
008669 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
00866a e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
00866b e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
00866c 940e ccb1 	CALL SUBOPT_0x1FB
00866e 940e ccb6 	CALL SUBOPT_0x1FC
                 ; 0015 004B             return dataLogQCount;
008670 91e0 1a1e 	LDS  R30,_dataLogQCount
008672 e0f0      	LDI  R31,0
008673 c0da      	RJMP _0x20E0038
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
008674 5f1f      	SUBI R17,-1
008675 cfe1      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
008676 eae9     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
008677 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
008678 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
008679 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
00867a c0cc      	RJMP _0x20E0039
                 ; 0015 004F     return -1;
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
00867b 931a      	ST   -Y,R17
                 ;	i -> R17
00867c e010      	LDI  R17,LOW(0)
                 _0x2A000E:
00867d 301a      	CPI  R17,10
00867e f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
00867f 940e d1e8 	CALL SUBOPT_0x2B8
008681 81e0      	LD   R30,Z
008682 30e0      	CPI  R30,0
008683 f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
008684 2fe1      	MOV  R30,R17
008685 c0ea      	RJMP _0x20E0037
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
008686 5f1f      	SUBI R17,-1
008687 cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
008688 efef      	LDI  R30,LOW(255)
008689 c0e6      	RJMP _0x20E0037
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
00868a 931a      	ST   -Y,R17
                 ;	i -> R17
00868b e010      	LDI  R17,LOW(0)
                 _0x2A0012:
00868c 301a      	CPI  R17,10
00868d f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
00868e 940e d1e8 	CALL SUBOPT_0x2B8
008690 940e d1ee 	CALL SUBOPT_0x2B9
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
008692 5f1f      	SUBI R17,-1
008693 cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
008694 c0db      	RJMP _0x20E0037
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
008695 93aa      	ST   -Y,R26
008696 931a      	ST   -Y,R17
008697 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
008698 d0b8      	RCALL _findFreeSlotEventLogQueue
008699 2f0e      	MOV  R16,R30
00869a 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
00869b 2311      	TST  R17
00869c f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
00869d eeeb     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
00869e e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
00869f e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
0086a0 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
0086a1 940e c02f 	CALL SUBOPT_0x3
                 ; 0015 0076         return -1;
0086a3 c071      	RJMP _0x20E003B
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
0086a4 940e d209 	CALL SUBOPT_0x2BA
0086a6 5ded      	SUBI R30,LOW(-_eventLogQueue)
0086a7 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0086a8 85a8      	LDD  R26,Y+8
0086a9 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
0086aa 940e d209 	CALL SUBOPT_0x2BA
                +
0086ac 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
0086ad 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
0086ae 940e c4af 	CALL SUBOPT_0xA8
0086b0 940e cf72 	CALL SUBOPT_0x25C
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
0086b2 940e d209 	CALL SUBOPT_0x2BA
                +
0086b4 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
0086b5 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
0086b6 81ab      	LDD  R26,Y+3
0086b7 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
0086b8 940e d209 	CALL SUBOPT_0x2BA
                +
0086ba 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0086bb 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0086bc 81aa      	LDD  R26,Y+2
0086bd 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
0086be 91e0 19af 	LDS  R30,_eventLogQCount
0086c0 5fef      	SUBI R30,-LOW(1)
0086c1 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
0086c3 e2e3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
0086c4 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
0086c5 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
0086c6 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
0086c7 940e cc79 	CALL SUBOPT_0x1F6
0086c9 01f8      	MOVW R30,R16
0086ca 940e cf23 	CALL SUBOPT_0x251
0086cc 91e0 19af 	LDS  R30,_eventLogQCount
0086ce 940e c2e0 	CALL SUBOPT_0x65
0086d0 940e c2e6 	CALL SUBOPT_0x66
                 ; 0015 0080     return eventLogQCount;
0086d2 91e0 19af 	LDS  R30,_eventLogQCount
0086d4 e0f0      	LDI  R31,0
0086d5 c041      	RJMP _0x20E003A
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
0086d6 940e c3a0 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
0086d8 91e0 19af 	LDS  R30,_eventLogQCount
0086da 30e0      	CPI  R30,0
0086db f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
0086dc e7ef     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
0086dd e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
0086de e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
0086df e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
0086e0 940e c02f 	CALL SUBOPT_0x3
                 ; 0015 0089         return -1;
0086e2 c032      	RJMP _0x20E003B
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
0086e3 e000     +LDI R16 , LOW ( 0 )
0086e4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
0086e5 3104     +CPI R16 , LOW ( 20 )
0086e6 e0e0     +LDI R30 , HIGH ( 20 )
0086e7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0086e8 f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
0086e9 940e d209 	CALL SUBOPT_0x2BA
0086eb 5ded      	SUBI R30,LOW(-_eventLogQueue)
0086ec 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0086ed 81e0      	LD   R30,Z
0086ee 85a8      	LDD  R26,Y+8
0086ef 17ea      	CP   R30,R26
0086f0 f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
0086f1 940e d209 	CALL SUBOPT_0x2BA
                +
0086f3 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
0086f4 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
0086f5 940e d1e0 	CALL SUBOPT_0x2B7
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
0086f7 940e d209 	CALL SUBOPT_0x2BA
                +
0086f9 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
0086fa 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
0086fb 81e0      	LD   R30,Z
0086fc 81ac      	LDD  R26,Y+4
0086fd 81bd      	LDD  R27,Y+4+1
0086fe 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
0086ff 940e d209 	CALL SUBOPT_0x2BA
                +
008701 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008702 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008703 81e0      	LD   R30,Z
008704 81aa      	LDD  R26,Y+2
008705 81bb      	LDD  R27,Y+2+1
008706 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
008707 01f8      	MOVW R30,R16
008708 c00e      	RJMP _0x20E003A
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
008709 5f0f     +SUBI R16 , LOW ( - 1 )
00870a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00870b cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
00870c ebe1     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
00870d e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
00870e e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
00870f e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E003C:
008710 940e e05e 	CALL __PUTPARD1
008712 85ec      	LDD  R30,Y+12
008713 940e c143 	CALL SUBOPT_0x29
                 ; 0015 0099     return -1;
                 _0x20E003B:
008715 efef      	LDI  R30,LOW(65535)
008716 efff      	LDI  R31,HIGH(65535)
                 _0x20E003A:
008717 8119      	LDD  R17,Y+1
008718 8108      	LDD  R16,Y+0
008719 9629      	ADIW R28,9
00871a 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
00871b 93aa      	ST   -Y,R26
00871c 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
00871d e010      	LDI  R17,LOW(0)
                 _0x2A001B:
00871e 3114      	CPI  R17,20
00871f f518      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
008720 940e d20f 	CALL SUBOPT_0x2BB
008722 81e0      	LD   R30,Z
008723 81a9      	LDD  R26,Y+1
008724 17ea      	CP   R30,R26
008725 f4d9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
008726 940e d20f 	CALL SUBOPT_0x2BB
008728 940e d215 	CALL SUBOPT_0x2BC
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
00872a 940e d21b 	CALL SUBOPT_0x2BD
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
00872c 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00872d 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
00872e e0a0      	LDI  R26,LOW(0)
00872f 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
008730 91e0 19af 	LDS  R30,_eventLogQCount
008732 50e1      	SUBI R30,LOW(1)
008733 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
008735 efe3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
008736 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
008737 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
008738 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
008739 940e ccb1 	CALL SUBOPT_0x1FB
00873b 940e ccb6 	CALL SUBOPT_0x1FC
                 ; 0015 00AA             return eventLogQCount;
00873d 91e0 19af 	LDS  R30,_eventLogQCount
00873f e0f0      	LDI  R31,0
008740 c00d      	RJMP _0x20E0038
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
008741 5f1f      	SUBI R17,-1
008742 cfdb      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
008743 e4e8     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
008744 e5fd     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
008745 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
008746 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
                 _0x20E0039:
008747 940e e05e 	CALL __PUTPARD1
008749 81ed      	LDD  R30,Y+5
00874a 940e c143 	CALL SUBOPT_0x29
                 ; 0015 00AE     return -1;
00874c efef      	LDI  R30,LOW(65535)
00874d efff      	LDI  R31,HIGH(65535)
                 _0x20E0038:
00874e 8118      	LDD  R17,Y+0
00874f 9622      	ADIW R28,2
008750 9508      	RET
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
008751 931a      	ST   -Y,R17
                 ;	i -> R17
008752 e010      	LDI  R17,LOW(0)
                 _0x2A001F:
008753 3114      	CPI  R17,20
008754 f448      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
008755 940e d20f 	CALL SUBOPT_0x2BB
008757 81e0      	LD   R30,Z
008758 30e0      	CPI  R30,0
008759 f411      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
00875a 2fe1      	MOV  R30,R17
00875b c014      	RJMP _0x20E0037
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
00875c 5f1f      	SUBI R17,-1
00875d cff5      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
00875e efef      	LDI  R30,LOW(255)
00875f c010      	RJMP _0x20E0037
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
008760 931a      	ST   -Y,R17
                 ;	i -> R17
008761 e010      	LDI  R17,LOW(0)
                 _0x2A0023:
008762 3114      	CPI  R17,20
008763 f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
008764 940e d20f 	CALL SUBOPT_0x2BB
008766 940e d215 	CALL SUBOPT_0x2BC
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
008768 940e d21b 	CALL SUBOPT_0x2BD
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
00876a 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
00876b 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
00876c e0a0      	LDI  R26,LOW(0)
00876d 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
00876e 5f1f      	SUBI R17,-1
00876f cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
                 _0x20E0037:
008770 9119      	LD   R17,Y+
008771 9508      	RET
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 _MENU_processKey:
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
008772 93aa      	ST   -Y,R26
008773 97ef      	SBIW R28,63
008774 9761      	SBIW R28,17
008775 e48e      	LDI  R24,78
008776 e0a0      	LDI  R26,LOW(0)
008777 e0b0      	LDI  R27,HIGH(0)
008778 e8ec      	LDI  R30,LOW(_0x2C0003*2)
008779 e5fd      	LDI  R31,HIGH(_0x2C0003*2)
00877a e060      	LDI  R22,BYTE3(_0x2C0003*2)
00877b 940e e0dc 	CALL __INITLOCB
00877d 940e e0ce 	CALL __SAVELOCR6
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
00877f 91e0 14df 	LDS  R30,_currentPage
008781 30e0      	CPI  R30,0
008782 f451      	BRNE _0x2C0004
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                +
008783 01de     +MOVW R26 , R28
008784 5aaa     +SUBI R26 , LOW ( - 86 )
008785 4fbf     +SBCI R27 , HIGH ( - 86 )
008786 91ac     +LD R26 , X
                 	__GETB2SX 86
008787 30a1      	CPI  R26,LOW(0x1)
008788 f411      	BRNE _0x2C0005
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
008789 940e d226 	CALL SUBOPT_0x2BE
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 _0x2C0005:
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
00878b 940c 96ea 	JMP  _0x2C0006
                 _0x2C0004:
00878d 91a0 14df 	LDS  R26,_currentPage
00878f 30a1      	CPI  R26,LOW(0x1)
008790 f011      	BREQ PC+3
008791 940c 87ed 	JMP _0x2C0007
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
008793 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
008795 f409      	BRNE _0x2C000B
008796 c04b      	RJMP _0x2C02B4
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000B:
008797 30e2      	CPI  R30,LOW(0x2)
008798 e0a0      	LDI  R26,HIGH(0x2)
008799 07fa      	CPC  R31,R26
00879a f449      	BRNE _0x2C000C
00879b 940e d23e 	CALL SUBOPT_0x2C0
00879d f41c      	BRGE _0x2C000D
00879e e0e3      	LDI  R30,LOW(3)
00879f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000D:
0087a1 940e d245 	CALL SUBOPT_0x2C1
0087a3 c047      	RJMP _0x2C000A
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000C:
0087a4 30e3      	CPI  R30,LOW(0x3)
0087a5 e0a0      	LDI  R26,HIGH(0x3)
0087a6 07fa      	CPC  R31,R26
0087a7 f451      	BRNE _0x2C000E
0087a8 940e d252 	CALL SUBOPT_0x2C2
0087aa 30a4      	CPI  R26,LOW(0x4)
0087ab f01c      	BRLT _0x2C000F
0087ac e0e0      	LDI  R30,LOW(0)
0087ad 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000F:
0087af 940e d245 	CALL SUBOPT_0x2C1
0087b1 c039      	RJMP _0x2C000A
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 _0x2C000E:
0087b2 30e4      	CPI  R30,LOW(0x4)
0087b3 e0a0      	LDI  R26,HIGH(0x4)
0087b4 07fa      	CPC  R31,R26
0087b5 f5a9      	BRNE _0x2C000A
0087b6 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0087b8 30e0      	CPI  R30,0
0087b9 f419      	BRNE _0x2C0011
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
0087ba 940e d258 	CALL SUBOPT_0x2C3
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
0087bc c02e      	RJMP _0x2C0012
                 _0x2C0011:
0087bd 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0087bf 30a1      	CPI  R26,LOW(0x1)
0087c0 f431      	BRNE _0x2C0013
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
0087c1 e0ee      	LDI  R30,LOW(14)
0087c2 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
0087c4 940e d271 	CALL SUBOPT_0x2C5
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
0087c6 c024      	RJMP _0x2C0014
                 _0x2C0013:
0087c7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0087c9 30a2      	CPI  R26,LOW(0x2)
0087ca f431      	BRNE _0x2C0015
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
0087cb e1e1      	LDI  R30,LOW(17)
0087cc 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
0087ce 940e d27e 	CALL SUBOPT_0x2C6
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
0087d0 c01a      	RJMP _0x2C0016
                 _0x2C0015:
0087d1 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0087d3 30a3      	CPI  R26,LOW(0x3)
0087d4 f469      	BRNE _0x2C0017
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
0087d5 e2e2      	LDI  R30,LOW(34)
0087d6 940e d28b 	CALL SUBOPT_0x2C7
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
0087d8 e0e1      	LDI  R30,LOW(1)
0087d9 940e d291 	CALL SUBOPT_0x2C8
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
0087db 940e d29b 	CALL SUBOPT_0x2C9
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                +
0087dd e0ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 33 ) )
0087de e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 33 ) )
0087df e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 33 ) )
0087e0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 33 ) )
                 	__POINTD1FN _0x2C0000,33
0087e1 c005      	RJMP _0x2C02B5
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 _0x2C0017:
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 _0x2C02B4:
0087e2 e0e0      	LDI  R30,LOW(0)
0087e3 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
0087e5 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02B5:
0087e7 940e e05e 	CALL __PUTPARD1
0087e9 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 0062                             }
                 _0x2C0016:
                 _0x2C0014:
                 _0x2C0012:
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 _0x2C000A:
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
0087eb 940c 96ea 	JMP  _0x2C0019
                 _0x2C0007:
0087ed 91a0 14df 	LDS  R26,_currentPage
0087ef 30a2      	CPI  R26,LOW(0x2)
0087f0 f011      	BREQ PC+3
0087f1 940c 883c 	JMP _0x2C001A
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
0087f3 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
0087f5 f419      	BRNE _0x2C001E
0087f6 940e d226 	CALL SUBOPT_0x2BE
0087f8 c041      	RJMP _0x2C001D
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001E:
0087f9 30e2      	CPI  R30,LOW(0x2)
0087fa e0a0      	LDI  R26,HIGH(0x2)
0087fb 07fa      	CPC  R31,R26
0087fc f449      	BRNE _0x2C001F
0087fd 940e d23e 	CALL SUBOPT_0x2C0
0087ff f41c      	BRGE _0x2C0020
008800 e0e1      	LDI  R30,LOW(1)
008801 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0020:
008803 940e d245 	CALL SUBOPT_0x2C1
008805 c034      	RJMP _0x2C001D
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001F:
008806 30e3      	CPI  R30,LOW(0x3)
008807 e0a0      	LDI  R26,HIGH(0x3)
008808 07fa      	CPC  R31,R26
008809 f451      	BRNE _0x2C0021
00880a 940e d252 	CALL SUBOPT_0x2C2
00880c 30a2      	CPI  R26,LOW(0x2)
00880d f01c      	BRLT _0x2C0022
00880e e0e0      	LDI  R30,LOW(0)
00880f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0022:
008811 940e d245 	CALL SUBOPT_0x2C1
008813 c026      	RJMP _0x2C001D
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 _0x2C0021:
008814 30e4      	CPI  R30,LOW(0x4)
008815 e0a0      	LDI  R26,HIGH(0x4)
008816 07fa      	CPC  R31,R26
008817 f511      	BRNE _0x2C001D
008818 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00881a 30e0      	CPI  R30,0
00881b f431      	BRNE _0x2C0024
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
00881c e0e3      	LDI  R30,LOW(3)
00881d 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
00881f 940e d2a6 	CALL SUBOPT_0x2CB
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
008821 c018      	RJMP _0x2C0025
                 _0x2C0024:
008822 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008824 30a1      	CPI  R26,LOW(0x1)
008825 f459      	BRNE _0x2C0026
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
008826 e2e1      	LDI  R30,LOW(33)
008827 940e d2b3 	CALL SUBOPT_0x2CC
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
008829 e0e2      	LDI  R30,LOW(2)
00882a 940e d291 	CALL SUBOPT_0x2C8
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
00882c 940e d29b 	CALL SUBOPT_0x2C9
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
00882e 940e d2b9 	CALL SUBOPT_0x2CD
008830 c005      	RJMP _0x2C02B6
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 _0x2C0026:
                 ; 0016 007A                                 currentPage = P_MONITOR;
008831 e0e0      	LDI  R30,LOW(0)
008832 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
008834 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02B6:
008836 940e e05e 	CALL __PUTPARD1
008838 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 007D                             }
                 _0x2C0025:
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 _0x2C001D:
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
00883a 940c 96ea 	JMP  _0x2C0028
                 _0x2C001A:
00883c 91a0 14df 	LDS  R26,_currentPage
00883e 30a3      	CPI  R26,LOW(0x3)
00883f f011      	BREQ PC+3
008840 940c 8a13 	JMP _0x2C0029
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
008842 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008844 f419      	BRNE _0x2C002D
008845 940e d258 	CALL SUBOPT_0x2C3
008847 c1c9      	RJMP _0x2C002C
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002D:
008848 30e2      	CPI  R30,LOW(0x2)
008849 e0a0      	LDI  R26,HIGH(0x2)
00884a 07fa      	CPC  R31,R26
00884b f449      	BRNE _0x2C002E
00884c 940e d23e 	CALL SUBOPT_0x2C0
00884e f41c      	BRGE _0x2C002F
00884f e0e2      	LDI  R30,LOW(2)
008850 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C002F:
008852 940e d245 	CALL SUBOPT_0x2C1
008854 c1bc      	RJMP _0x2C002C
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002E:
008855 30e3      	CPI  R30,LOW(0x3)
008856 e0a0      	LDI  R26,HIGH(0x3)
008857 07fa      	CPC  R31,R26
008858 f451      	BRNE _0x2C0030
008859 940e d252 	CALL SUBOPT_0x2C2
00885b 30a3      	CPI  R26,LOW(0x3)
00885c f01c      	BRLT _0x2C0031
00885d e0e0      	LDI  R30,LOW(0)
00885e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0031:
008860 940e d245 	CALL SUBOPT_0x2C1
008862 c1ae      	RJMP _0x2C002C
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 _0x2C0030:
008863 30e4      	CPI  R30,LOW(0x4)
008864 e0a0      	LDI  R26,HIGH(0x4)
008865 07fa      	CPC  R31,R26
008866 f011      	BREQ PC+3
008867 940c 8a11 	JMP _0x2C002C
008869 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00886b 30e0      	CPI  R30,0
00886c f531      	BRNE _0x2C0033
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
00886d e0e4      	LDI  R30,LOW(4)
00886e 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                +
008870 e1eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 45 ) )
008871 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 45 ) )
008872 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 45 ) )
008873 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 45 ) )
                 	__POINTD1FN _0x2C0000,45
008874 940e d2be 	CALL SUBOPT_0x2CE
                +
008876 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
008877 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
008878 940e c191 	CALL SUBOPT_0x34
                +
00887a e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
00887b e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
00887c 940e c191 	CALL SUBOPT_0x34
00887e 940e c2e6 	CALL SUBOPT_0x66
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                +
008880 e2ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 63 ) )
008881 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 63 ) )
008882 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 63 ) )
008883 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 63 ) )
                 	__POINTD1FN _0x2C0000,63
008884 940e d2be 	CALL SUBOPT_0x2CE
                +
008886 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
008887 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
008888 940e c191 	CALL SUBOPT_0x34
                +
00888a e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
00888b e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
00888c 940e c191 	CALL SUBOPT_0x34
00888e e08c      	LDI  R24,12
00888f 940e 7f67 	CALL _printOLED
008891 9660      	ADIW R28,16
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
008892 c17e      	RJMP _0x2C0034
                 _0x2C0033:
008893 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008895 30a1      	CPI  R26,LOW(0x1)
008896 f011      	BREQ PC+3
008897 940c 893d 	JMP _0x2C0035
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
008899 e0e5      	LDI  R30,LOW(5)
00889a 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
00889c 01fe      	MOVW R30,R28
00889d 9638      	ADIW R30,8
00889e 940e c676 	CALL SUBOPT_0xF5
0088a0 940e d2c4 	CALL SUBOPT_0x2CF
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
0088a2 940e d2d7 	CALL SUBOPT_0x2D0
0088a4 940e d2db 	CALL SUBOPT_0x2D1
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
0088a6 91a0 11b6 	LDS  R26,_operating_config
0088a8 31a0      	CPI  R26,LOW(0x10)
0088a9 f439      	BRNE _0x2C0036
0088aa 940e d2df 	CALL SUBOPT_0x2D2
                +
0088ac e3e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 75 ) )
0088ad e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 75 ) )
0088ae e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 75 ) )
0088af e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 75 ) )
                 	__POINTD1FN _0x2C0000,75
0088b0 c011      	RJMP _0x2C02B7
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 _0x2C0036:
0088b1 91a0 11b6 	LDS  R26,_operating_config
0088b3 32a0      	CPI  R26,LOW(0x20)
0088b4 f439      	BRNE _0x2C0038
0088b5 940e d2df 	CALL SUBOPT_0x2D2
                +
0088b7 e4e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 85 ) )
0088b8 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 85 ) )
0088b9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 85 ) )
0088ba e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 85 ) )
                 	__POINTD1FN _0x2C0000,85
0088bb c006      	RJMP _0x2C02B7
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 _0x2C0038:
0088bc 940e d2df 	CALL SUBOPT_0x2D2
                +
0088be e4ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 97 ) )
0088bf e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 97 ) )
0088c0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 97 ) )
0088c1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 97 ) )
                 	__POINTD1FN _0x2C0000,97
                 _0x2C02B7:
0088c2 940e e05e 	CALL __PUTPARD1
0088c4 940e d2e4 	CALL SUBOPT_0x2D3
                 ; 0016 00A0                                 strcat(cmd,str);
0088c6 940e d2e9 	CALL SUBOPT_0x2D4
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
0088c8 940e d2db 	CALL SUBOPT_0x2D1
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                +
0088ca 91a0 11b7+LDS R26 , _operating_config + ( 1 )
                 	__GETB2MN _operating_config,1
0088cc 30a1      	CPI  R26,LOW(0x1)
0088cd f439      	BRNE _0x2C003A
0088ce 940e d2df 	CALL SUBOPT_0x2D2
                +
0088d0 e5e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
0088d1 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
0088d2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
0088d3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
0088d4 c006      	RJMP _0x2C02B8
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003A:
0088d5 940e d2df 	CALL SUBOPT_0x2D2
                +
0088d7 e6e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
0088d8 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
0088d9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
0088da e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B8:
0088db 940e e05e 	CALL __PUTPARD1
0088dd 940e d2e4 	CALL SUBOPT_0x2D3
                 ; 0016 00A5                                 strcat(cmd,str);
0088df 940e d2e9 	CALL SUBOPT_0x2D4
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
0088e1 940e d2db 	CALL SUBOPT_0x2D1
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                +
0088e3 91a0 11b8+LDS R26 , _operating_config + ( 2 )
                 	__GETB2MN _operating_config,2
0088e5 30a1      	CPI  R26,LOW(0x1)
0088e6 f439      	BRNE _0x2C003C
0088e7 940e d2df 	CALL SUBOPT_0x2D2
                +
0088e9 e5e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
0088ea e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
0088eb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
0088ec e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
0088ed c006      	RJMP _0x2C02B9
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003C:
0088ee 940e d2df 	CALL SUBOPT_0x2D2
                +
0088f0 e6e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
0088f1 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
0088f2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
0088f3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B9:
0088f4 940e e05e 	CALL __PUTPARD1
0088f6 940e d2e4 	CALL SUBOPT_0x2D3
                 ; 0016 00AA                                 strcat(cmd,str);
0088f8 940e d2e9 	CALL SUBOPT_0x2D4
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
0088fa 940e d2db 	CALL SUBOPT_0x2D1
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                +
0088fc e000     +LDI R16 , LOW ( 0 )
0088fd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0088fe e020     +LDI R18 , LOW ( 0 )
0088ff e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2C003F:
                +
008900 3005     +CPI R16 , LOW ( 5 )
008901 e0e0     +LDI R30 , HIGH ( 5 )
008902 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008903 f4c4      	BRGE _0x2C0040
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
008904 940e d2f2 	CALL SUBOPT_0x2D5
008906 81a0      	LD   R26,Z
008907 30a1      	CPI  R26,LOW(0x1)
008908 f421      	BRNE _0x2C0041
008909 940e d2f7 	CALL SUBOPT_0x2D6
00890b e4e5      	LDI  R30,LOW(69)
00890c c003      	RJMP _0x2C02BA
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 _0x2C0041:
00890d 940e d2f7 	CALL SUBOPT_0x2D6
00890f e4e4      	LDI  R30,LOW(68)
                 _0x2C02BA:
008910 93ec      	ST   X,R30
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                +
008911 3004     +CPI R16 , LOW ( 4 )
008912 e0e0     +LDI R30 , HIGH ( 4 )
008913 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
008914 f424      	BRGE _0x2C0043
                 ; 0016 00B1                                         str[j++] = '/';
008915 940e d2f7 	CALL SUBOPT_0x2D6
008917 e2ef      	LDI  R30,LOW(47)
008918 93ec      	ST   X,R30
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 _0x2C0043:
                +
008919 5f0f     +SUBI R16 , LOW ( - 1 )
00891a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00891b cfe4      	RJMP _0x2C003F
                 _0x2C0040:
                 ; 0016 00B5                                 str[j++]    = ',';
00891c 940e d2f7 	CALL SUBOPT_0x2D6
00891e e2ec      	LDI  R30,LOW(44)
00891f 93ec      	ST   X,R30
                 ; 0016 00B6                                 str[j++]    = '\0';
008920 940e d2f7 	CALL SUBOPT_0x2D6
008922 e0e0      	LDI  R30,LOW(0)
008923 93ec      	ST   X,R30
                 ; 0016 00B7                                 strcat(cmd,str);
008924 01fe      	MOVW R30,R28
008925 9638      	ADIW R30,8
008926 93fa      	ST   -Y,R31
008927 93ea      	ST   -Y,R30
008928 01de      	MOVW R26,R28
008929 96dc      	ADIW R26,60
00892a 940e a590 	CALL _strcat
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                +
00892c e6e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 123 ) )
00892d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 123 ) )
00892e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 123 ) )
00892f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 123 ) )
                 	__POINTD1FN _0x2C0000,123
008930 940e d2ff 	CALL SUBOPT_0x2D7
008932 940e c0a5 	CALL SUBOPT_0x12
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                +
008934 e7eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 141 ) )
008935 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 141 ) )
008936 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 141 ) )
008937 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 141 ) )
                 	__POINTD1FN _0x2C0000,141
008938 940e d2ff 	CALL SUBOPT_0x2D7
00893a 940e d076 	CALL SUBOPT_0x285
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
00893c c0d4      	RJMP _0x2C0044
                 _0x2C0035:
00893d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00893f 30a2      	CPI  R26,LOW(0x2)
008940 f011      	BREQ PC+3
008941 940c 8a0a 	JMP _0x2C0045
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
008943 01fe      	MOVW R30,R28
008944 9638      	ADIW R30,8
008945 940e c676 	CALL SUBOPT_0xF5
008947 940e d2c4 	CALL SUBOPT_0x2CF
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
008949 e4a5      	LDI  R26,LOW(325)
00894a e0b1      	LDI  R27,HIGH(325)
00894b 940e a4fe 	CALL _malloc
                +
00894d 01de     +MOVW R26 , R28
00894e 5aac     +SUBI R26 , LOW ( - 84 )
00894f 4fbf     +SBCI R27 , HIGH ( - 84 )
008950 93ed     +ST X + , R30
008951 93fc     +ST X , R31
                 	__PUTW1SX 84
                 ; 0016 00C2                                 if(msg == NULL){
008952 940e d305 	CALL SUBOPT_0x2D8
008954 9730      	SBIW R30,0
008955 f449      	BRNE _0x2C0046
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                +
008956 e8e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 146 ) )
008957 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 146 ) )
008958 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 146 ) )
008959 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 146 ) )
                 	__POINTD1FN _0x2C0000,146
00895a 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
00895c 940e d258 	CALL SUBOPT_0x2C3
00895e c0b2      	RJMP _0x2C002C
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 _0x2C0046:
00895f 940e d305 	CALL SUBOPT_0x2D8
008961 93fa      	ST   -Y,R31
008962 93ea      	ST   -Y,R30
008963 01de      	MOVW R26,R28
008964 5aac      	SUBI R26,LOW(-(84))
008965 4fbf      	SBCI R27,HIGH(-(84))
008966 940e 5e2b 	CALL _ETH_getConfig
008968 01af      	MOVW R20,R30
                 ; 0016 00C8                                 if(res < 0){
008969 2355      	TST  R21
00896a f42a      	BRPL _0x2C0047
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                +
00896b ebe4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 198 ) )
00896c e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 198 ) )
00896d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 198 ) )
00896e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 198 ) )
                 	__POINTD1FN _0x2C0000,198
00896f c026      	RJMP _0x2C02BB
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 _0x2C0047:
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                +
008970 edef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 241 ) )
008971 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 241 ) )
008972 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 241 ) )
008973 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 241 ) )
                 	__POINTD1FN _0x2C0000,241
008974 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                +
008976 e0eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 285 ) )
008977 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 285 ) )
008978 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 285 ) )
008979 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 285 ) )
                 	__POINTD1FN _0x2C0000,285
00897a 940e cd8e 	CALL SUBOPT_0x219
00897c 940e c191 	CALL SUBOPT_0x34
00897e 940e c0a5 	CALL SUBOPT_0x12
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                +
008980 e000     +LDI R16 , LOW ( 0 )
008981 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C004A:
008982 940e d30c 	CALL SUBOPT_0x2D9
008984 170e      	CP   R16,R30
008985 071f      	CPC  R17,R31
008986 f458      	BRSH _0x2C004B
                 ; 0016 00CF                                         putchar3(msg[i]);
008987 01f8      	MOVW R30,R16
008988 940e d313 	CALL SUBOPT_0x2DA
00898a 0fae      	ADD  R26,R30
00898b 1fbf      	ADC  R27,R31
00898c 91ac      	LD   R26,X
00898d 940e 40b6 	CALL _putchar3
                 ; 0016 00D0                                     }
                +
00898f 5f0f     +SUBI R16 , LOW ( - 1 )
008990 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008991 cff0      	RJMP _0x2C004A
                 _0x2C004B:
                 ; 0016 00D1                                     printDebug("\r\n");
                +
008992 ebe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
008993 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
008994 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
008995 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
                 _0x2C02BB:
008996 940e e05e 	CALL __PUTPARD1
008998 940e c19a 	CALL SUBOPT_0x36
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
00899a 940e d305 	CALL SUBOPT_0x2D8
00899c 93fa      	ST   -Y,R31
00899d 93ea      	ST   -Y,R30
00899e 940e d31a 	CALL SUBOPT_0x2DB
0089a0 940e 9914 	CALL _getNetworkInfo
0089a2 01af      	MOVW R20,R30
                 ; 0016 00D5                                 if(res<0){
0089a3 2355      	TST  R21
0089a4 f45a      	BRPL _0x2C004C
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                +
0089a5 e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 322 ) )
0089a6 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 322 ) )
0089a7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 322 ) )
0089a8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 322 ) )
                 	__POINTD1FN _0x2C0000,322
0089a9 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 00D7                                     return;
0089ab 940e e0d5 	CALL __LOADLOCR6
0089ad 96ef      	ADIW R28,63
0089ae 9668      	ADIW R28,24
0089af 9508      	RET
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 _0x2C004C:
0089b0 e0e6      	LDI  R30,LOW(6)
0089b1 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
0089b3 e5ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 366 ) )
0089b4 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 366 ) )
0089b5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 366 ) )
0089b6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 366 ) )
                 	__POINTD1FN _0x2C0000,366
0089b7 940e d329 	CALL SUBOPT_0x2DC
0089b9 940e d33d 	CALL SUBOPT_0x2DD
0089bb 940e d34f 	CALL SUBOPT_0x2DE
0089bd 940e d361 	CALL SUBOPT_0x2DF
0089bf 940e d373 	CALL SUBOPT_0x2E0
0089c1 940e d385 	CALL SUBOPT_0x2E1
0089c3 940e d397 	CALL SUBOPT_0x2E2
0089c5 940e d3a9 	CALL SUBOPT_0x2E3
0089c7 940e d3bb 	CALL SUBOPT_0x2E4
0089c9 940e d3cd 	CALL SUBOPT_0x2E5
0089cb 940e d3df 	CALL SUBOPT_0x2E6
0089cd 940e d3f1 	CALL SUBOPT_0x2E7
0089cf 940e d403 	CALL SUBOPT_0x2E8
0089d1 940e d415 	CALL SUBOPT_0x2E9
0089d3 940e d427 	CALL SUBOPT_0x2EA
0089d5 940e d439 	CALL SUBOPT_0x2EB
0089d7 e480      	LDI  R24,64
0089d8 940e 9de6 	CALL _printDebug
0089da 96ef      	ADIW R28,63
0089db 9625      	ADIW R28,5
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
0089dc eae3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 437 ) )
0089dd e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 437 ) )
0089de e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 437 ) )
0089df e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 437 ) )
                 	__POINTD1FN _0x2C0000,437
0089e0 940e d329 	CALL SUBOPT_0x2DC
0089e2 940e d33d 	CALL SUBOPT_0x2DD
0089e4 940e d34f 	CALL SUBOPT_0x2DE
0089e6 940e d361 	CALL SUBOPT_0x2DF
0089e8 940e d373 	CALL SUBOPT_0x2E0
0089ea 940e d385 	CALL SUBOPT_0x2E1
0089ec 940e d397 	CALL SUBOPT_0x2E2
0089ee 940e d3a9 	CALL SUBOPT_0x2E3
0089f0 940e d3bb 	CALL SUBOPT_0x2E4
0089f2 940e d3cd 	CALL SUBOPT_0x2E5
0089f4 940e d3df 	CALL SUBOPT_0x2E6
0089f6 940e d3f1 	CALL SUBOPT_0x2E7
0089f8 940e d403 	CALL SUBOPT_0x2E8
0089fa 940e d415 	CALL SUBOPT_0x2E9
0089fc 940e d427 	CALL SUBOPT_0x2EA
0089fe 940e d439 	CALL SUBOPT_0x2EB
008a00 e480      	LDI  R24,64
008a01 940e 7f67 	CALL _printOLED
008a03 96ef      	ADIW R28,63
008a04 9625      	ADIW R28,5
                 ; 0016 0100                                 free( msg );
008a05 940e d313 	CALL SUBOPT_0x2DA
008a07 940e a519 	CALL _free
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
008a09 c007      	RJMP _0x2C004D
                 _0x2C0045:
                 ; 0016 0103                                 currentPage = P_MONITOR;
008a0a e0e0      	LDI  R30,LOW(0)
008a0b 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
008a0d 940e d2a1 	CALL SUBOPT_0x2CA
008a0f 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 0106                             }
                 _0x2C004D:
                 _0x2C0044:
                 _0x2C0034:
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 _0x2C002C:
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
008a11 940c 96ea 	JMP  _0x2C004E
                 _0x2C0029:
008a13 91a0 14df 	LDS  R26,_currentPage
008a15 30a4      	CPI  R26,LOW(0x4)
008a16 f4b1      	BRNE _0x2C004F
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
008a17 940e d44e 	CALL SUBOPT_0x2ED
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
008a19 f089      	BREQ _0x2C0052
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
008a1a 30e3      	CPI  R30,LOW(0x3)
008a1b e0a0      	LDI  R26,HIGH(0x3)
008a1c 07fa      	CPC  R31,R26
008a1d f069      	BREQ _0x2C0052
                 ; 0016 010F         case KEY_MODE   :
008a1e 30e1      	CPI  R30,LOW(0x1)
008a1f e0a0      	LDI  R26,HIGH(0x1)
008a20 07fa      	CPC  R31,R26
008a21 f021      	BREQ _0x2C0056
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008a22 30e4      	CPI  R30,LOW(0x4)
008a23 e0a0      	LDI  R26,HIGH(0x4)
008a24 07fa      	CPC  R31,R26
008a25 f429      	BRNE _0x2C0052
                 _0x2C0056:
008a26 e0e3      	LDI  R30,LOW(3)
008a27 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
008a29 940e d2a6 	CALL SUBOPT_0x2CB
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 _0x2C0052:
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
008a2b 940c 96ea 	JMP  _0x2C0058
                 _0x2C004F:
008a2d 91a0 14df 	LDS  R26,_currentPage
008a2f 30a5      	CPI  R26,LOW(0x5)
008a30 f4b1      	BRNE _0x2C0059
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
008a31 940e d44e 	CALL SUBOPT_0x2ED
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
008a33 f089      	BREQ _0x2C005C
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
008a34 30e3      	CPI  R30,LOW(0x3)
008a35 e0a0      	LDI  R26,HIGH(0x3)
008a36 07fa      	CPC  R31,R26
008a37 f069      	BREQ _0x2C005C
                 ; 0016 011B         case KEY_MODE   :
008a38 30e1      	CPI  R30,LOW(0x1)
008a39 e0a0      	LDI  R26,HIGH(0x1)
008a3a 07fa      	CPC  R31,R26
008a3b f021      	BREQ _0x2C0060
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008a3c 30e4      	CPI  R30,LOW(0x4)
008a3d e0a0      	LDI  R26,HIGH(0x4)
008a3e 07fa      	CPC  R31,R26
008a3f f429      	BRNE _0x2C005C
                 _0x2C0060:
008a40 e0e3      	LDI  R30,LOW(3)
008a41 940e d457 	CALL SUBOPT_0x2EE
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
008a43 940e d2a6 	CALL SUBOPT_0x2CB
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 _0x2C005C:
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
008a45 940c 96ea 	JMP  _0x2C0062
                 _0x2C0059:
008a47 91a0 14df 	LDS  R26,_currentPage
008a49 30a6      	CPI  R26,LOW(0x6)
008a4a f4b1      	BRNE _0x2C0063
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
008a4b 940e d44e 	CALL SUBOPT_0x2ED
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
008a4d f089      	BREQ _0x2C0066
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
008a4e 30e3      	CPI  R30,LOW(0x3)
008a4f e0a0      	LDI  R26,HIGH(0x3)
008a50 07fa      	CPC  R31,R26
008a51 f069      	BREQ _0x2C0066
                 ; 0016 0127         case KEY_MODE   :
008a52 30e1      	CPI  R30,LOW(0x1)
008a53 e0a0      	LDI  R26,HIGH(0x1)
008a54 07fa      	CPC  R31,R26
008a55 f021      	BREQ _0x2C006A
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008a56 30e4      	CPI  R30,LOW(0x4)
008a57 e0a0      	LDI  R26,HIGH(0x4)
008a58 07fa      	CPC  R31,R26
008a59 f429      	BRNE _0x2C0066
                 _0x2C006A:
008a5a e0e3      	LDI  R30,LOW(3)
008a5b 940e d45d 	CALL SUBOPT_0x2EF
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
008a5d 940e d2a6 	CALL SUBOPT_0x2CB
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 _0x2C0066:
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
008a5f 940c 96ea 	JMP  _0x2C006C
                 _0x2C0063:
008a61 91a0 14df 	LDS  R26,_currentPage
008a63 30a7      	CPI  R26,LOW(0x7)
008a64 f011      	BREQ PC+3
008a65 940c 8aeb 	JMP _0x2C006D
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
008a67 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
008a69 f441      	BRNE _0x2C0071
008a6a e0e2      	LDI  R30,LOW(2)
008a6b 940e d457 	CALL SUBOPT_0x2EE
008a6d 940e d463 	CALL SUBOPT_0x2F0
008a6f 940e d468 	CALL SUBOPT_0x2F1
008a71 c077      	RJMP _0x2C0070
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0071:
008a72 30e2      	CPI  R30,LOW(0x2)
008a73 e0a0      	LDI  R26,HIGH(0x2)
008a74 07fa      	CPC  R31,R26
008a75 f449      	BRNE _0x2C0072
008a76 940e d23e 	CALL SUBOPT_0x2C0
008a78 f41c      	BRGE _0x2C0073
008a79 e0e1      	LDI  R30,LOW(1)
008a7a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0073:
008a7c 940e d245 	CALL SUBOPT_0x2C1
008a7e c06a      	RJMP _0x2C0070
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0072:
008a7f 30e3      	CPI  R30,LOW(0x3)
008a80 e0a0      	LDI  R26,HIGH(0x3)
008a81 07fa      	CPC  R31,R26
008a82 f451      	BRNE _0x2C0074
008a83 940e d252 	CALL SUBOPT_0x2C2
008a85 30a2      	CPI  R26,LOW(0x2)
008a86 f01c      	BRLT _0x2C0075
008a87 e0e0      	LDI  R30,LOW(0)
008a88 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0075:
008a8a 940e d245 	CALL SUBOPT_0x2C1
008a8c c05c      	RJMP _0x2C0070
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 _0x2C0074:
008a8d 30e4      	CPI  R30,LOW(0x4)
008a8e e0a0      	LDI  R26,HIGH(0x4)
008a8f 07fa      	CPC  R31,R26
008a90 f011      	BREQ PC+3
008a91 940c 8ae9 	JMP _0x2C0070
008a93 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008a95 30e0      	CPI  R30,0
008a96 f561      	BRNE _0x2C0077
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
008a97 e0e8      	LDI  R30,LOW(8)
008a98 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                +
008a9a 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
008a9c 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                +
008a9e 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
008aa0 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                +
008aa2 ede6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 488 ) )
008aa3 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 488 ) )
008aa4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 488 ) )
008aa5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 488 ) )
                 	__POINTD1FN _0x2C0000,488
008aa6 940e d471 	CALL SUBOPT_0x2F2
008aa8 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008aaa 940e ce35 	CALL SUBOPT_0x22F
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
008aac 940e d477 	CALL SUBOPT_0x2F3
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                +
008aae e0e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 532 ) )
008aaf e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 532 ) )
008ab0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 532 ) )
008ab1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 532 ) )
                 	__POINTD1FN _0x2C0000,532
008ab2 940e d471 	CALL SUBOPT_0x2F2
008ab4 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                +
008ab6 e0e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 539 ) )
008ab7 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 539 ) )
008ab8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 539 ) )
008ab9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 539 ) )
                 	__POINTD1FN _0x2C0000,539
008aba 940e e05e 	CALL __PUTPARD1
008abc 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008abe 940e c2e0 	CALL SUBOPT_0x65
008ac0 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
008ac2 c026      	RJMP _0x2C0078
                 _0x2C0077:
008ac3 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ac5 30a1      	CPI  R26,LOW(0x1)
008ac6 f4d9      	BRNE _0x2C0079
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
008ac7 e0e9      	LDI  R30,LOW(9)
008ac8 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                +
008aca e1e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008acb e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008acc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008acd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008ace 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 0146                                 for(i=0;i<12;i++){
                +
008ad0 e000     +LDI R16 , LOW ( 0 )
008ad1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C007B:
                +
008ad2 300c     +CPI R16 , LOW ( 12 )
008ad3 e0e0     +LDI R30 , HIGH ( 12 )
008ad4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008ad5 f45c      	BRGE _0x2C007C
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
008ad6 940e d47c 	CALL SUBOPT_0x2F4
008ad8 e2ae      	LDI  R26,LOW(_setIp_S0160000000)
008ad9 e1ba      	LDI  R27,HIGH(_setIp_S0160000000)
008ada 940e d484 	CALL SUBOPT_0x2F5
008adc 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0148                                 }
                +
008ade 5f0f     +SUBI R16 , LOW ( - 1 )
008adf 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008ae0 cff1      	RJMP _0x2C007B
                 _0x2C007C:
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
008ae1 c007      	RJMP _0x2C007D
                 _0x2C0079:
                 ; 0016 014B                                 currentPage = P_MONITOR;
008ae2 e0e0      	LDI  R30,LOW(0)
008ae3 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
008ae5 940e d2a1 	CALL SUBOPT_0x2CA
008ae7 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 014E                             }
                 _0x2C007D:
                 _0x2C0078:
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 _0x2C0070:
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
008ae9 940c 96ea 	JMP  _0x2C007E
                 _0x2C006D:
008aeb 91a0 14df 	LDS  R26,_currentPage
008aed 30a8      	CPI  R26,LOW(0x8)
008aee f011      	BREQ PC+3
008aef 940c 8b83 	JMP _0x2C007F
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
008af1 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
008af3 f431      	BRNE _0x2C0083
008af4 e0e7      	LDI  R30,LOW(7)
008af5 940e d26b 	CALL SUBOPT_0x2C4
008af7 940e d489 	CALL SUBOPT_0x2F6
008af9 c087      	RJMP _0x2C0082
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0083:
008afa 30e2      	CPI  R30,LOW(0x2)
008afb e0a0      	LDI  R26,HIGH(0x2)
008afc 07fa      	CPC  R31,R26
008afd f449      	BRNE _0x2C0084
008afe 940e d23e 	CALL SUBOPT_0x2C0
008b00 f41c      	BRGE _0x2C0085
008b01 e0e2      	LDI  R30,LOW(2)
008b02 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0085:
008b04 940e d477 	CALL SUBOPT_0x2F3
008b06 c07a      	RJMP _0x2C0082
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0084:
008b07 30e3      	CPI  R30,LOW(0x3)
008b08 e0a0      	LDI  R26,HIGH(0x3)
008b09 07fa      	CPC  R31,R26
008b0a f451      	BRNE _0x2C0086
008b0b 940e d252 	CALL SUBOPT_0x2C2
008b0d 30a3      	CPI  R26,LOW(0x3)
008b0e f01c      	BRLT _0x2C0087
008b0f e0e0      	LDI  R30,LOW(0)
008b10 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0087:
008b12 940e d477 	CALL SUBOPT_0x2F3
008b14 c06c      	RJMP _0x2C0082
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0086:
008b15 30e4      	CPI  R30,LOW(0x4)
008b16 e0a0      	LDI  R26,HIGH(0x4)
008b17 07fa      	CPC  R31,R26
008b18 f011      	BREQ PC+3
008b19 940c 8b81 	JMP _0x2C0082
008b1b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008b1d 30e0      	CPI  R30,0
008b1e f4c9      	BRNE _0x2C0089
                 ; 0016 0159                                 devEn       = !devEn;
008b1f 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008b21 940e df4a 	CALL __LNEGB1
008b23 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                +
008b25 e2e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 564 ) )
008b26 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 564 ) )
008b27 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 564 ) )
008b28 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 564 ) )
                 	__POINTD1FN _0x2C0000,564
008b29 940e d48e 	CALL SUBOPT_0x2F7
008b2b 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008b2d 940e ce35 	CALL SUBOPT_0x22F
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
008b2f 940e d497 	CALL SUBOPT_0x2F8
008b31 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008b33 940e c2e0 	CALL SUBOPT_0x65
008b35 940e d064 	CALL SUBOPT_0x281
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
008b37 c049      	RJMP _0x2C008A
                 _0x2C0089:
008b38 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b3a 30a1      	CPI  R26,LOW(0x1)
008b3b f4c9      	BRNE _0x2C008B
                 ; 0016 015E                                 almEn       = !almEn;
008b3c 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b3e 940e df4a 	CALL __LNEGB1
008b40 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                +
008b42 e4e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 600 ) )
008b43 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 600 ) )
008b44 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 600 ) )
008b45 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 600 ) )
                 	__POINTD1FN _0x2C0000,600
008b46 940e d48e 	CALL SUBOPT_0x2F7
008b48 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b4a 940e ce35 	CALL SUBOPT_0x22F
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
008b4c 940e d497 	CALL SUBOPT_0x2F8
008b4e 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008b50 940e c2e0 	CALL SUBOPT_0x65
008b52 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
008b54 c02c      	RJMP _0x2C008C
                 _0x2C008B:
008b55 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b57 30a2      	CPI  R26,LOW(0x2)
008b58 f509      	BRNE _0x2C008D
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
008b59 91e0 1a5e 	LDS  R30,_devEn_S0160000000
                +
008b5b 93e0 11b7+STS _operating_config + ( 1 ) , R30
                 	__PUTB1MN _operating_config,1
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
008b5d 91e0 1a5f 	LDS  R30,_almEn_S0160000000
                +
008b5f 93e0 11b8+STS _operating_config + ( 2 ) , R30
                 	__PUTB1MN _operating_config,2
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
008b61 940e d49c 	CALL SUBOPT_0x2F9
                 ; 0016 0167                                 if(res < 0){
008b63 f452      	BRPL _0x2C008E
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008b64 940e d4a3 	CALL SUBOPT_0x2FA
                 ; 0016 0169                                     currentPage = P_FAILED;
008b66 e2e5      	LDI  R30,LOW(37)
008b67 940e d2b3 	CALL SUBOPT_0x2CC
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
008b69 940e d4a9 	CALL SUBOPT_0x2FB
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
008b6b 940e d4b0 	CALL SUBOPT_0x2FC
008b6d c007      	RJMP _0x2C02BC
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 _0x2C008E:
                 ; 0016 0170                                     currentPage = P_FINISH;
008b6e e2e4      	LDI  R30,LOW(36)
008b6f 940e d2b3 	CALL SUBOPT_0x2CC
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
008b71 940e d4a9 	CALL SUBOPT_0x2FB
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
008b73 940e d4b5 	CALL SUBOPT_0x2FD
                 _0x2C02BC:
008b75 940e e05e 	CALL __PUTPARD1
008b77 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
008b79 c007      	RJMP _0x2C0090
                 _0x2C008D:
                 ; 0016 0178                                 currentPage = P_MONITOR;
008b7a e0e0      	LDI  R30,LOW(0)
008b7b 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
008b7d 940e d2a1 	CALL SUBOPT_0x2CA
008b7f 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 017B                             }
                 _0x2C0090:
                 _0x2C008C:
                 _0x2C008A:
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 _0x2C0082:
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
008b81 940c 96ea 	JMP  _0x2C0091
                 _0x2C007F:
008b83 91a0 14df 	LDS  R26,_currentPage
008b85 30a9      	CPI  R26,LOW(0x9)
008b86 f011      	BREQ PC+3
008b87 940c 8bfc 	JMP _0x2C0092
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
008b89 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
008b8b f431      	BRNE _0x2C0096
008b8c e0e7      	LDI  R30,LOW(7)
008b8d 940e d457 	CALL SUBOPT_0x2EE
008b8f 940e d489 	CALL SUBOPT_0x2F6
008b91 c068      	RJMP _0x2C0095
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C0096:
008b92 30e2      	CPI  R30,LOW(0x2)
008b93 e0a0      	LDI  R26,HIGH(0x2)
008b94 07fa      	CPC  R31,R26
008b95 f451      	BRNE _0x2C0097
008b96 940e d252 	CALL SUBOPT_0x2C2
008b98 30ad      	CPI  R26,LOW(0xD)
008b99 f01c      	BRLT _0x2C0098
008b9a e0e0      	LDI  R30,LOW(0)
008b9b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0098:
008b9d 940e d4ba 	CALL SUBOPT_0x2FE
008b9f c05a      	RJMP _0x2C0095
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C0097:
008ba0 30e3      	CPI  R30,LOW(0x3)
008ba1 e0a0      	LDI  R26,HIGH(0x3)
008ba2 07fa      	CPC  R31,R26
008ba3 f449      	BRNE _0x2C0099
008ba4 940e d23e 	CALL SUBOPT_0x2C0
008ba6 f41c      	BRGE _0x2C009A
008ba7 e0ec      	LDI  R30,LOW(12)
008ba8 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C009A:
008baa 940e d4ba 	CALL SUBOPT_0x2FE
008bac c04d      	RJMP _0x2C0095
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 _0x2C0099:
008bad 30e4      	CPI  R30,LOW(0x4)
008bae e0a0      	LDI  R26,HIGH(0x4)
008baf 07fa      	CPC  R31,R26
008bb0 f011      	BREQ PC+3
008bb1 940c 8bfa 	JMP _0x2C0095
008bb3 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008bb5 30ac      	CPI  R26,LOW(0xC)
008bb6 f4f1      	BRNE _0x2C009C
                 ; 0016 0186                                 cursor = 0;
008bb7 e0e0      	LDI  R30,LOW(0)
008bb8 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
008bba e0ea      	LDI  R30,LOW(10)
008bbb 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0188                                 printOLED("SM");
                +
008bbd eae6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008bbe e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008bbf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008bc0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008bc1 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 0189                                 for(i=0;i<12;i++){
                +
008bc3 e000     +LDI R16 , LOW ( 0 )
008bc4 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C009E:
                +
008bc5 300c     +CPI R16 , LOW ( 12 )
008bc6 e0e0     +LDI R30 , HIGH ( 12 )
008bc7 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008bc8 f45c      	BRGE _0x2C009F
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
008bc9 940e d47c 	CALL SUBOPT_0x2F4
008bcb e3aa      	LDI  R26,LOW(_setMask_S0160000000)
008bcc e1ba      	LDI  R27,HIGH(_setMask_S0160000000)
008bcd 940e d484 	CALL SUBOPT_0x2F5
008bcf 940e d064 	CALL SUBOPT_0x281
                 ; 0016 018B                                 }
                +
008bd1 5f0f     +SUBI R16 , LOW ( - 1 )
008bd2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008bd3 cff1      	RJMP _0x2C009E
                 _0x2C009F:
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
008bd4 c025      	RJMP _0x2C00A0
                 _0x2C009C:
008bd5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008bd7 30ac      	CPI  R26,LOW(0xC)
008bd8 f4d4      	BRGE _0x2C00A1
                 ; 0016 018E                                 if((cursor%3) == 0){
008bd9 940e d4bf 	CALL SUBOPT_0x2FF
008bdb f439      	BRNE _0x2C00A2
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
008bdc 940e d4ca 	CALL SUBOPT_0x300
008bde 30e3      	CPI  R30,LOW(0x3)
008bdf f010      	BRLO _0x2C00A3
008be0 940e d4d3 	CALL SUBOPT_0x301
                 ; 0016 0190                                 }
                 _0x2C00A3:
                 ; 0016 0191                                 else{
008be2 c006      	RJMP _0x2C00A4
                 _0x2C00A2:
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
008be3 940e d4ca 	CALL SUBOPT_0x300
008be5 30ea      	CPI  R30,LOW(0xA)
008be6 f010      	BRLO _0x2C00A5
008be7 940e d4d3 	CALL SUBOPT_0x301
                 ; 0016 0193                                 }
                 _0x2C00A5:
                 _0x2C00A4:
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
008be9 940e d4db 	CALL SUBOPT_0x302
008beb 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
008bec 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
008bed 81e0      	LD   R30,Z
008bee 940e c2e0 	CALL SUBOPT_0x65
008bf0 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
008bf2 c007      	RJMP _0x2C00A6
                 _0x2C00A1:
                 ; 0016 0198                                 currentPage = P_MONITOR;
008bf3 e0e0      	LDI  R30,LOW(0)
008bf4 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
008bf6 940e d2a1 	CALL SUBOPT_0x2CA
008bf8 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 019B                             }
                 _0x2C00A6:
                 _0x2C00A0:
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 _0x2C0095:
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
008bfa 940c 96ea 	JMP  _0x2C00A7
                 _0x2C0092:
008bfc 91a0 14df 	LDS  R26,_currentPage
008bfe 30aa      	CPI  R26,LOW(0xA)
008bff f011      	BREQ PC+3
008c00 940c 8c79 	JMP _0x2C00A8
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
008c02 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
008c04 f441      	BRNE _0x2C00AC
008c05 e0e9      	LDI  R30,LOW(9)
008c06 940e d26b 	CALL SUBOPT_0x2C4
                +
008c08 e1e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
008c09 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
008c0a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
008c0b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
008c0c c066      	RJMP _0x2C02BD
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AC:
008c0d 30e2      	CPI  R30,LOW(0x2)
008c0e e0a0      	LDI  R26,HIGH(0x2)
008c0f 07fa      	CPC  R31,R26
008c10 f451      	BRNE _0x2C00AD
008c11 940e d252 	CALL SUBOPT_0x2C2
008c13 30ad      	CPI  R26,LOW(0xD)
008c14 f01c      	BRLT _0x2C00AE
008c15 e0e0      	LDI  R30,LOW(0)
008c16 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00AE:
008c18 940e d4ba 	CALL SUBOPT_0x2FE
008c1a c05c      	RJMP _0x2C00AB
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AD:
008c1b 30e3      	CPI  R30,LOW(0x3)
008c1c e0a0      	LDI  R26,HIGH(0x3)
008c1d 07fa      	CPC  R31,R26
008c1e f449      	BRNE _0x2C00AF
008c1f 940e d23e 	CALL SUBOPT_0x2C0
008c21 f41c      	BRGE _0x2C00B0
008c22 e0ec      	LDI  R30,LOW(12)
008c23 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00B0:
008c25 940e d4ba 	CALL SUBOPT_0x2FE
008c27 c04f      	RJMP _0x2C00AB
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00AF:
008c28 30e4      	CPI  R30,LOW(0x4)
008c29 e0a0      	LDI  R26,HIGH(0x4)
008c2a 07fa      	CPC  R31,R26
008c2b f011      	BREQ PC+3
008c2c 940c 8c77 	JMP _0x2C00AB
008c2e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c30 30ac      	CPI  R26,LOW(0xC)
008c31 f4f1      	BRNE _0x2C00B2
                 ; 0016 01A6                                 cursor = 0;
008c32 e0e0      	LDI  R30,LOW(0)
008c33 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
008c35 e0eb      	LDI  R30,LOW(11)
008c36 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01A8                                 printOLED("SG");
                +
008c38 eae9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008c39 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008c3a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008c3b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008c3c 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                +
008c3e e000     +LDI R16 , LOW ( 0 )
008c3f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00B4:
                +
008c40 300c     +CPI R16 , LOW ( 12 )
008c41 e0e0     +LDI R30 , HIGH ( 12 )
008c42 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008c43 f45c      	BRGE _0x2C00B5
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
008c44 940e d47c 	CALL SUBOPT_0x2F4
008c46 e4a6      	LDI  R26,LOW(_setGw_S0160000000)
008c47 e1ba      	LDI  R27,HIGH(_setGw_S0160000000)
008c48 940e d484 	CALL SUBOPT_0x2F5
008c4a 940e d064 	CALL SUBOPT_0x281
                 ; 0016 01AB                                 }
                +
008c4c 5f0f     +SUBI R16 , LOW ( - 1 )
008c4d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008c4e cff1      	RJMP _0x2C00B4
                 _0x2C00B5:
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
008c4f c027      	RJMP _0x2C00B6
                 _0x2C00B2:
008c50 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c52 30ac      	CPI  R26,LOW(0xC)
008c53 f4d4      	BRGE _0x2C00B7
                 ; 0016 01AE                                 if((cursor%3) == 0){
008c54 940e d4bf 	CALL SUBOPT_0x2FF
008c56 f439      	BRNE _0x2C00B8
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
008c57 940e d4eb 	CALL SUBOPT_0x303
008c59 30e3      	CPI  R30,LOW(0x3)
008c5a f010      	BRLO _0x2C00B9
008c5b 940e d4f4 	CALL SUBOPT_0x304
                 ; 0016 01B0                                 }
                 _0x2C00B9:
                 ; 0016 01B1                                 else{
008c5d c006      	RJMP _0x2C00BA
                 _0x2C00B8:
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
008c5e 940e d4eb 	CALL SUBOPT_0x303
008c60 30ea      	CPI  R30,LOW(0xA)
008c61 f010      	BRLO _0x2C00BB
008c62 940e d4f4 	CALL SUBOPT_0x304
                 ; 0016 01B3                                 }
                 _0x2C00BB:
                 _0x2C00BA:
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
008c64 940e d4db 	CALL SUBOPT_0x302
008c66 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
008c67 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
008c68 81e0      	LD   R30,Z
008c69 940e c2e0 	CALL SUBOPT_0x65
008c6b 940e d064 	CALL SUBOPT_0x281
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
008c6d c009      	RJMP _0x2C00BC
                 _0x2C00B7:
                 ; 0016 01B8                                 currentPage = P_MONITOR;
008c6e e0e0      	LDI  R30,LOW(0)
008c6f 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
008c71 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02BD:
008c73 940e e05e 	CALL __PUTPARD1
008c75 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 01BB                             }
                 _0x2C00BC:
                 _0x2C00B6:
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 _0x2C00AB:
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
008c77 940c 96ea 	JMP  _0x2C00BD
                 _0x2C00A8:
008c79 91a0 14df 	LDS  R26,_currentPage
008c7b 30ab      	CPI  R26,LOW(0xB)
008c7c f011      	BREQ PC+3
008c7d 940c 8cf6 	JMP _0x2C00BE
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
008c7f 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
008c81 f441      	BRNE _0x2C00C2
008c82 e0ea      	LDI  R30,LOW(10)
008c83 940e d26b 	CALL SUBOPT_0x2C4
                +
008c85 eae6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008c86 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008c87 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
008c88 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
008c89 c066      	RJMP _0x2C02BE
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C2:
008c8a 30e2      	CPI  R30,LOW(0x2)
008c8b e0a0      	LDI  R26,HIGH(0x2)
008c8c 07fa      	CPC  R31,R26
008c8d f451      	BRNE _0x2C00C3
008c8e 940e d252 	CALL SUBOPT_0x2C2
008c90 30ad      	CPI  R26,LOW(0xD)
008c91 f01c      	BRLT _0x2C00C4
008c92 e0e0      	LDI  R30,LOW(0)
008c93 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C4:
008c95 940e d4ba 	CALL SUBOPT_0x2FE
008c97 c05c      	RJMP _0x2C00C1
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C3:
008c98 30e3      	CPI  R30,LOW(0x3)
008c99 e0a0      	LDI  R26,HIGH(0x3)
008c9a 07fa      	CPC  R31,R26
008c9b f449      	BRNE _0x2C00C5
008c9c 940e d23e 	CALL SUBOPT_0x2C0
008c9e f41c      	BRGE _0x2C00C6
008c9f e0ec      	LDI  R30,LOW(12)
008ca0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C6:
008ca2 940e d4ba 	CALL SUBOPT_0x2FE
008ca4 c04f      	RJMP _0x2C00C1
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00C5:
008ca5 30e4      	CPI  R30,LOW(0x4)
008ca6 e0a0      	LDI  R26,HIGH(0x4)
008ca7 07fa      	CPC  R31,R26
008ca8 f011      	BREQ PC+3
008ca9 940c 8cf4 	JMP _0x2C00C1
008cab 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cad 30ac      	CPI  R26,LOW(0xC)
008cae f4f1      	BRNE _0x2C00C8
                 ; 0016 01C6                                 cursor = 0;
008caf e0e0      	LDI  R30,LOW(0)
008cb0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
008cb2 e0ec      	LDI  R30,LOW(12)
008cb3 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01C8                                 printOLED("SS");
                +
008cb5 eaec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 702 ) )
008cb6 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 702 ) )
008cb7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 702 ) )
008cb8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 702 ) )
                 	__POINTD1FN _0x2C0000,702
008cb9 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                +
008cbb e000     +LDI R16 , LOW ( 0 )
008cbc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00CA:
                +
008cbd 300c     +CPI R16 , LOW ( 12 )
008cbe e0e0     +LDI R30 , HIGH ( 12 )
008cbf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008cc0 f45c      	BRGE _0x2C00CB
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
008cc1 940e d47c 	CALL SUBOPT_0x2F4
008cc3 e5a2      	LDI  R26,LOW(_setServer_S0160000000)
008cc4 e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
008cc5 940e d484 	CALL SUBOPT_0x2F5
008cc7 940e d064 	CALL SUBOPT_0x281
                 ; 0016 01CB                                 }
                +
008cc9 5f0f     +SUBI R16 , LOW ( - 1 )
008cca 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008ccb cff1      	RJMP _0x2C00CA
                 _0x2C00CB:
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
008ccc c027      	RJMP _0x2C00CC
                 _0x2C00C8:
008ccd 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ccf 30ac      	CPI  R26,LOW(0xC)
008cd0 f4d4      	BRGE _0x2C00CD
                 ; 0016 01CE                                 if((cursor%3) == 0){
008cd1 940e d4bf 	CALL SUBOPT_0x2FF
008cd3 f439      	BRNE _0x2C00CE
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
008cd4 940e d4fc 	CALL SUBOPT_0x305
008cd6 30e3      	CPI  R30,LOW(0x3)
008cd7 f010      	BRLO _0x2C00CF
008cd8 940e d505 	CALL SUBOPT_0x306
                 ; 0016 01D0                                 }
                 _0x2C00CF:
                 ; 0016 01D1                                 else{
008cda c006      	RJMP _0x2C00D0
                 _0x2C00CE:
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
008cdb 940e d4fc 	CALL SUBOPT_0x305
008cdd 30ea      	CPI  R30,LOW(0xA)
008cde f010      	BRLO _0x2C00D1
008cdf 940e d505 	CALL SUBOPT_0x306
                 ; 0016 01D3                                 }
                 _0x2C00D1:
                 _0x2C00D0:
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
008ce1 940e d4db 	CALL SUBOPT_0x302
008ce3 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
008ce4 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
008ce5 81e0      	LD   R30,Z
008ce6 940e c2e0 	CALL SUBOPT_0x65
008ce8 940e d064 	CALL SUBOPT_0x281
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
008cea c009      	RJMP _0x2C00D2
                 _0x2C00CD:
                 ; 0016 01D8                                 currentPage = P_MONITOR;
008ceb e0e0      	LDI  R30,LOW(0)
008cec 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
008cee 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02BE:
008cf0 940e e05e 	CALL __PUTPARD1
008cf2 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 01DB                             }
                 _0x2C00D2:
                 _0x2C00CC:
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 _0x2C00C1:
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
008cf4 940c 96ea 	JMP  _0x2C00D3
                 _0x2C00BE:
008cf6 91a0 14df 	LDS  R26,_currentPage
008cf8 30ac      	CPI  R26,LOW(0xC)
008cf9 f011      	BREQ PC+3
008cfa 940c 8d82 	JMP _0x2C00D4
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
008cfc 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
008cfe f441      	BRNE _0x2C00D8
008cff e0eb      	LDI  R30,LOW(11)
008d00 940e d26b 	CALL SUBOPT_0x2C4
                +
008d02 eae9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008d03 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008d04 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008d05 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008d06 c075      	RJMP _0x2C02BF
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D8:
008d07 30e2      	CPI  R30,LOW(0x2)
008d08 e0a0      	LDI  R26,HIGH(0x2)
008d09 07fa      	CPC  R31,R26
008d0a f451      	BRNE _0x2C00D9
008d0b 940e d252 	CALL SUBOPT_0x2C2
008d0d 30ad      	CPI  R26,LOW(0xD)
008d0e f01c      	BRLT _0x2C00DA
008d0f e0e0      	LDI  R30,LOW(0)
008d10 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DA:
008d12 940e d4ba 	CALL SUBOPT_0x2FE
008d14 c06b      	RJMP _0x2C00D7
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D9:
008d15 30e3      	CPI  R30,LOW(0x3)
008d16 e0a0      	LDI  R26,HIGH(0x3)
008d17 07fa      	CPC  R31,R26
008d18 f449      	BRNE _0x2C00DB
008d19 940e d23e 	CALL SUBOPT_0x2C0
008d1b f41c      	BRGE _0x2C00DC
008d1c e0ec      	LDI  R30,LOW(12)
008d1d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DC:
008d1f 940e d4ba 	CALL SUBOPT_0x2FE
008d21 c05e      	RJMP _0x2C00D7
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00DB:
008d22 30e4      	CPI  R30,LOW(0x4)
008d23 e0a0      	LDI  R26,HIGH(0x4)
008d24 07fa      	CPC  R31,R26
008d25 f011      	BREQ PC+3
008d26 940c 8d80 	JMP _0x2C00D7
008d28 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d2a 30ac      	CPI  R26,LOW(0xC)
008d2b f569      	BRNE _0x2C00DE
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
008d2c e0ed      	LDI  R30,LOW(13)
008d2d 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008d2f eaef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 705 ) )
008d30 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 705 ) )
008d31 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 705 ) )
008d32 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 705 ) )
                 	__POINTD1FN _0x2C0000,705
008d33 940e d329 	CALL SUBOPT_0x2DC
008d35 940e d33d 	CALL SUBOPT_0x2DD
008d37 940e d34f 	CALL SUBOPT_0x2DE
008d39 940e d361 	CALL SUBOPT_0x2DF
008d3b 940e d373 	CALL SUBOPT_0x2E0
008d3d 940e d385 	CALL SUBOPT_0x2E1
008d3f 940e d397 	CALL SUBOPT_0x2E2
008d41 940e d3a9 	CALL SUBOPT_0x2E3
008d43 940e d3bb 	CALL SUBOPT_0x2E4
008d45 940e d3cd 	CALL SUBOPT_0x2E5
008d47 940e d3df 	CALL SUBOPT_0x2E6
008d49 940e d3f1 	CALL SUBOPT_0x2E7
008d4b 940e d403 	CALL SUBOPT_0x2E8
008d4d 940e d415 	CALL SUBOPT_0x2E9
008d4f 940e d427 	CALL SUBOPT_0x2EA
008d51 940e d439 	CALL SUBOPT_0x2EB
008d53 e480      	LDI  R24,64
008d54 940e 7f67 	CALL _printOLED
008d56 96ef      	ADIW R28,63
008d57 9625      	ADIW R28,5
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
008d58 c027      	RJMP _0x2C00DF
                 _0x2C00DE:
008d59 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d5b 30ac      	CPI  R26,LOW(0xC)
008d5c f4d4      	BRGE _0x2C00E0
                 ; 0016 01FB                                 if((cursor%3) == 0){
008d5d 940e d4bf 	CALL SUBOPT_0x2FF
008d5f f439      	BRNE _0x2C00E1
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
008d60 940e d50d 	CALL SUBOPT_0x307
008d62 30e3      	CPI  R30,LOW(0x3)
008d63 f010      	BRLO _0x2C00E2
008d64 940e d516 	CALL SUBOPT_0x308
                 ; 0016 01FD                                 }
                 _0x2C00E2:
                 ; 0016 01FE                                 else{
008d66 c006      	RJMP _0x2C00E3
                 _0x2C00E1:
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
008d67 940e d50d 	CALL SUBOPT_0x307
008d69 30ea      	CPI  R30,LOW(0xA)
008d6a f010      	BRLO _0x2C00E4
008d6b 940e d516 	CALL SUBOPT_0x308
                 ; 0016 0200                                 }
                 _0x2C00E4:
                 _0x2C00E3:
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
008d6d 940e d4db 	CALL SUBOPT_0x302
008d6f 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
008d70 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
008d71 81e0      	LD   R30,Z
008d72 940e c2e0 	CALL SUBOPT_0x65
008d74 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
008d76 c009      	RJMP _0x2C00E5
                 _0x2C00E0:
                 ; 0016 0205                                 currentPage = P_MONITOR;
008d77 e0e0      	LDI  R30,LOW(0)
008d78 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
008d7a 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02BF:
008d7c 940e e05e 	CALL __PUTPARD1
008d7e 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 0208                             }
                 _0x2C00E5:
                 _0x2C00DF:
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 _0x2C00D7:
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
008d80 940c 96ea 	JMP  _0x2C00E6
                 _0x2C00D4:
008d82 91a0 14df 	LDS  R26,_currentPage
008d84 30ad      	CPI  R26,LOW(0xD)
008d85 f571      	BRNE _0x2C00E7
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
008d86 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
008d88 f431      	BRNE _0x2C00EB
008d89 e0e7      	LDI  R30,LOW(7)
008d8a 940e d457 	CALL SUBOPT_0x2EE
008d8c 940e d489 	CALL SUBOPT_0x2F6
008d8e c023      	RJMP _0x2C00EA
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 _0x2C00EB:
008d8f 30e2      	CPI  R30,LOW(0x2)
008d90 e0a0      	LDI  R26,HIGH(0x2)
008d91 07fa      	CPC  R31,R26
008d92 f0f9      	BREQ _0x2C00EA
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
008d93 30e3      	CPI  R30,LOW(0x3)
008d94 e0a0      	LDI  R26,HIGH(0x3)
008d95 07fa      	CPC  R31,R26
008d96 f0d9      	BREQ _0x2C00EA
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
008d97 30e4      	CPI  R30,LOW(0x4)
008d98 e0a0      	LDI  R26,HIGH(0x4)
008d99 07fa      	CPC  R31,R26
008d9a f4b9      	BRNE _0x2C00EA
008d9b e2e4      	LDI  R30,LOW(36)
008d9c 940e d2b3 	CALL SUBOPT_0x2CC
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
008d9e e0ed      	LDI  R30,LOW(13)
008d9f 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
008da1 940e d31a 	CALL SUBOPT_0x2DB
008da3 940e 5e99 	CALL _ETH_setConfig
008da5 01af      	MOVW R20,R30
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
008da6 2355      	TST  R21
008da7 f432      	BRPL _0x2C00EF
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                +
008da8 eee2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 756 ) )
008da9 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 756 ) )
008daa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 756 ) )
008dab e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 756 ) )
                 	__POINTD1FN _0x2C0000,756
008dac 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 _0x2C00EF:
008dae 940e d4b5 	CALL SUBOPT_0x2FD
008db0 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 _0x2C00EA:
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
008db2 940c 96ea 	JMP  _0x2C00F0
                 _0x2C00E7:
008db4 91a0 14df 	LDS  R26,_currentPage
008db6 30ae      	CPI  R26,LOW(0xE)
008db7 f011      	BREQ PC+3
008db8 940c 8e09 	JMP _0x2C00F1
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
008dba 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
008dbc f431      	BRNE _0x2C00F5
008dbd e0e1      	LDI  R30,LOW(1)
008dbe 940e d457 	CALL SUBOPT_0x2EE
008dc0 940e d524 	CALL SUBOPT_0x30A
008dc2 c044      	RJMP _0x2C00F4
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F5:
008dc3 30e2      	CPI  R30,LOW(0x2)
008dc4 e0a0      	LDI  R26,HIGH(0x2)
008dc5 07fa      	CPC  R31,R26
008dc6 f449      	BRNE _0x2C00F6
008dc7 940e d23e 	CALL SUBOPT_0x2C0
008dc9 f41c      	BRGE _0x2C00F7
008dca e0e1      	LDI  R30,LOW(1)
008dcb 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F7:
008dcd 940e d245 	CALL SUBOPT_0x2C1
008dcf c037      	RJMP _0x2C00F4
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F6:
008dd0 30e3      	CPI  R30,LOW(0x3)
008dd1 e0a0      	LDI  R26,HIGH(0x3)
008dd2 07fa      	CPC  R31,R26
008dd3 f451      	BRNE _0x2C00F8
008dd4 940e d252 	CALL SUBOPT_0x2C2
008dd6 30a2      	CPI  R26,LOW(0x2)
008dd7 f01c      	BRLT _0x2C00F9
008dd8 e0e0      	LDI  R30,LOW(0)
008dd9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F9:
008ddb 940e d245 	CALL SUBOPT_0x2C1
008ddd c029      	RJMP _0x2C00F4
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 _0x2C00F8:
008dde 30e4      	CPI  R30,LOW(0x4)
008ddf e0a0      	LDI  R26,HIGH(0x4)
008de0 07fa      	CPC  R31,R26
008de1 f529      	BRNE _0x2C00F4
008de2 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008de4 30e0      	CPI  R30,0
008de5 f431      	BRNE _0x2C00FB
                 ; 0016 0229                                 currentPage = P_PRB_V;
008de6 e0ef      	LDI  R30,LOW(15)
008de7 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
008de9 940e d529 	CALL SUBOPT_0x30B
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
008deb c01b      	RJMP _0x2C00FC
                 _0x2C00FB:
008dec 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008dee 30a1      	CPI  R26,LOW(0x1)
008def f471      	BRNE _0x2C00FD
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
008df0 e2e1      	LDI  R30,LOW(33)
008df1 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
008df3 e1e0      	LDI  R30,LOW(16)
008df4 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
008df6 e0ee      	LDI  R30,LOW(14)
008df7 940e d291 	CALL SUBOPT_0x2C8
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
008df9 940e d29b 	CALL SUBOPT_0x2C9
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
008dfb 940e d2b9 	CALL SUBOPT_0x2CD
008dfd c005      	RJMP _0x2C02C0
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 _0x2C00FD:
                 ; 0016 0237                                 currentPage = P_MONITOR;
008dfe e0e0      	LDI  R30,LOW(0)
008dff 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
008e01 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02C0:
008e03 940e e05e 	CALL __PUTPARD1
008e05 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 023A                             }
                 _0x2C00FC:
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 _0x2C00F4:
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
008e07 940c 96ea 	JMP  _0x2C00FF
                 _0x2C00F1:
008e09 91a0 14df 	LDS  R26,_currentPage
008e0b 30af      	CPI  R26,LOW(0xF)
008e0c f549      	BRNE _0x2C0100
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
008e0d 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
008e0f f0f9      	BREQ _0x2C02C1
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
008e10 30e2      	CPI  R30,LOW(0x2)
008e11 e0a0      	LDI  R26,HIGH(0x2)
008e12 07fa      	CPC  R31,R26
008e13 f451      	BRNE _0x2C0105
008e14 940e d252 	CALL SUBOPT_0x2C2
008e16 30a5      	CPI  R26,LOW(0x5)
008e17 f01c      	BRLT _0x2C0106
008e18 e0e0      	LDI  R30,LOW(0)
008e19 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0106:
008e1b 940e d529 	CALL SUBOPT_0x30B
008e1d c016      	RJMP _0x2C0103
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 _0x2C0105:
008e1e 30e3      	CPI  R30,LOW(0x3)
008e1f e0a0      	LDI  R26,HIGH(0x3)
008e20 07fa      	CPC  R31,R26
008e21 f449      	BRNE _0x2C0107
008e22 940e d23e 	CALL SUBOPT_0x2C0
008e24 f41c      	BRGE _0x2C0108
008e25 e0e4      	LDI  R30,LOW(4)
008e26 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0108:
008e28 940e d529 	CALL SUBOPT_0x30B
008e2a c009      	RJMP _0x2C0103
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 _0x2C0107:
008e2b 30e4      	CPI  R30,LOW(0x4)
008e2c e0a0      	LDI  R26,HIGH(0x4)
008e2d 07fa      	CPC  R31,R26
008e2e f429      	BRNE _0x2C0103
                 _0x2C02C1:
008e2f e0ee      	LDI  R30,LOW(14)
008e30 940e d26b 	CALL SUBOPT_0x2C4
008e32 940e d271 	CALL SUBOPT_0x2C5
                 ; 0016 0245         }
                 _0x2C0103:
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
008e34 940c 96ea 	JMP  _0x2C010A
                 _0x2C0100:
008e36 91a0 14df 	LDS  R26,_currentPage
008e38 31a0      	CPI  R26,LOW(0x10)
008e39 f011      	BREQ PC+3
008e3a 940c 8ebf 	JMP _0x2C010B
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
008e3c 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
008e3e f431      	BRNE _0x2C010F
008e3f e0ee      	LDI  R30,LOW(14)
008e40 940e d457 	CALL SUBOPT_0x2EE
008e42 940e d271 	CALL SUBOPT_0x2C5
008e44 c078      	RJMP _0x2C010E
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C010F:
008e45 30e2      	CPI  R30,LOW(0x2)
008e46 e0a0      	LDI  R26,HIGH(0x2)
008e47 07fa      	CPC  R31,R26
008e48 f449      	BRNE _0x2C0110
008e49 940e d23e 	CALL SUBOPT_0x2C0
008e4b f41c      	BRGE _0x2C0111
008e4c e0e5      	LDI  R30,LOW(5)
008e4d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0111:
008e4f 940e d245 	CALL SUBOPT_0x2C1
008e51 c06b      	RJMP _0x2C010E
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0110:
008e52 30e3      	CPI  R30,LOW(0x3)
008e53 e0a0      	LDI  R26,HIGH(0x3)
008e54 07fa      	CPC  R31,R26
008e55 f451      	BRNE _0x2C0112
008e56 940e d252 	CALL SUBOPT_0x2C2
008e58 30a6      	CPI  R26,LOW(0x6)
008e59 f01c      	BRLT _0x2C0113
008e5a e0e0      	LDI  R30,LOW(0)
008e5b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0113:
008e5d 940e d245 	CALL SUBOPT_0x2C1
008e5f c05d      	RJMP _0x2C010E
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 _0x2C0112:
008e60 30e4      	CPI  R30,LOW(0x4)
008e61 e0a0      	LDI  R26,HIGH(0x4)
008e62 07fa      	CPC  R31,R26
008e63 f011      	BREQ PC+3
008e64 940c 8ebd 	JMP _0x2C010E
008e66 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e68 30a5      	CPI  R26,LOW(0x5)
008e69 f49c      	BRGE _0x2C0115
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
008e6a 940e d530 	CALL SUBOPT_0x30C
008e6c 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
008e6d 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
008e6e 940e d534 	CALL SUBOPT_0x30D
008e70 940e df4a 	CALL __LNEGB1
008e72 940e d53b 	CALL SUBOPT_0x30E
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
008e74 940e d543 	CALL SUBOPT_0x30F
008e76 940e d534 	CALL SUBOPT_0x30D
008e78 940e c2e0 	CALL SUBOPT_0x65
008e7a 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
008e7c c040      	RJMP _0x2C0116
                 _0x2C0115:
008e7d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e7f 30a5      	CPI  R26,LOW(0x5)
008e80 f5a9      	BRNE _0x2C0117
                 ; 0016 0252                                 currentPage = P_FINISH;
008e81 940e d54a 	CALL SUBOPT_0x310
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
008e83 e0e0      	LDI  R30,LOW(0)
008e84 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
008e86 e000     +LDI R16 , LOW ( 0 )
008e87 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0119:
                +
008e88 3005     +CPI R16 , LOW ( 5 )
008e89 e0e0     +LDI R30 , HIGH ( 5 )
008e8a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008e8b f46c      	BRGE _0x2C011A
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
008e8c 940e d2f2 	CALL SUBOPT_0x2D5
008e8e 010f      	MOVW R0,R30
008e8f e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
008e90 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
008e91 0fa0      	ADD  R26,R16
008e92 1fb1      	ADC  R27,R17
008e93 91ec      	LD   R30,X
008e94 01d0      	MOVW R26,R0
008e95 93ec      	ST   X,R30
                 ; 0016 0257                                 }
                +
008e96 5f0f     +SUBI R16 , LOW ( - 1 )
008e97 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008e98 cfef      	RJMP _0x2C0119
                 _0x2C011A:
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
008e99 940e d49c 	CALL SUBOPT_0x2F9
                 ; 0016 025A                                 if(res < 0){
008e9b f472      	BRPL _0x2C011B
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008e9c 940e d4a3 	CALL SUBOPT_0x2FA
                 ; 0016 025C                                     currentPage = P_FAILED;
008e9e e2e5      	LDI  R30,LOW(37)
008e9f 93e0 14df 	STS  _currentPage,R30
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
008ea1 e0ee      	LDI  R30,LOW(14)
008ea2 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
008ea4 e1e0      	LDI  R30,LOW(16)
008ea5 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
008ea7 940e d4b0 	CALL SUBOPT_0x2FC
008ea9 c007      	RJMP _0x2C02C2
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 _0x2C011B:
                 ; 0016 0263                                     currentPage = P_FINISH;
008eaa 940e d54a 	CALL SUBOPT_0x310
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
008eac e1e0      	LDI  R30,LOW(16)
008ead 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
008eaf 940e d4b5 	CALL SUBOPT_0x2FD
                 _0x2C02C2:
008eb1 940e e05e 	CALL __PUTPARD1
008eb3 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
008eb5 c007      	RJMP _0x2C011D
                 _0x2C0117:
                 ; 0016 026B                                 currentPage = P_MONITOR;
008eb6 e0e0      	LDI  R30,LOW(0)
008eb7 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
008eb9 940e d2a1 	CALL SUBOPT_0x2CA
008ebb 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 026E                             }
                 _0x2C011D:
                 _0x2C0116:
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 _0x2C010E:
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
008ebd 940c 96ea 	JMP  _0x2C011E
                 _0x2C010B:
008ebf 91a0 14df 	LDS  R26,_currentPage
008ec1 31a1      	CPI  R26,LOW(0x11)
008ec2 f011      	BREQ PC+3
008ec3 940c 8f1f 	JMP _0x2C011F
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
008ec5 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
008ec7 f431      	BRNE _0x2C0123
008ec8 e0e1      	LDI  R30,LOW(1)
008ec9 940e d45d 	CALL SUBOPT_0x2EF
008ecb 940e d524 	CALL SUBOPT_0x30A
008ecd c050      	RJMP _0x2C0122
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0123:
008ece 30e2      	CPI  R30,LOW(0x2)
008ecf e0a0      	LDI  R26,HIGH(0x2)
008ed0 07fa      	CPC  R31,R26
008ed1 f449      	BRNE _0x2C0124
008ed2 940e d23e 	CALL SUBOPT_0x2C0
008ed4 f41c      	BRGE _0x2C0125
008ed5 e0e1      	LDI  R30,LOW(1)
008ed6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0125:
008ed8 940e d245 	CALL SUBOPT_0x2C1
008eda c043      	RJMP _0x2C0122
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0124:
008edb 30e3      	CPI  R30,LOW(0x3)
008edc e0a0      	LDI  R26,HIGH(0x3)
008edd 07fa      	CPC  R31,R26
008ede f451      	BRNE _0x2C0126
008edf 940e d252 	CALL SUBOPT_0x2C2
008ee1 30a2      	CPI  R26,LOW(0x2)
008ee2 f01c      	BRLT _0x2C0127
008ee3 e0e0      	LDI  R30,LOW(0)
008ee4 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0127:
008ee6 940e d245 	CALL SUBOPT_0x2C1
008ee8 c035      	RJMP _0x2C0122
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 _0x2C0126:
008ee9 30e4      	CPI  R30,LOW(0x4)
008eea e0a0      	LDI  R26,HIGH(0x4)
008eeb 07fa      	CPC  R31,R26
008eec f589      	BRNE _0x2C0122
008eed 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008eef 30e0      	CPI  R30,0
008ef0 f491      	BRNE _0x2C0129
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
008ef1 e1e2      	LDI  R30,LOW(18)
008ef2 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
008ef4 91e0 148b 	LDS  R30,_muteMode
008ef6 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
008ef8 940e d551 	CALL SUBOPT_0x311
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
008efa 940e d497 	CALL SUBOPT_0x2F8
008efc 91e0 1a65 	LDS  R30,_mute_S0160000000
008efe 940e c2e0 	CALL SUBOPT_0x65
008f00 940e d064 	CALL SUBOPT_0x281
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
008f02 c01b      	RJMP _0x2C012A
                 _0x2C0129:
008f03 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f05 30a1      	CPI  R26,LOW(0x1)
008f06 f471      	BRNE _0x2C012B
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
008f07 e2e1      	LDI  R30,LOW(33)
008f08 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
008f0a e1e3      	LDI  R30,LOW(19)
008f0b 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
008f0d e1e1      	LDI  R30,LOW(17)
008f0e 940e d291 	CALL SUBOPT_0x2C8
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
008f10 940e d29b 	CALL SUBOPT_0x2C9
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
008f12 940e d2b9 	CALL SUBOPT_0x2CD
008f14 c005      	RJMP _0x2C02C3
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 _0x2C012B:
                 ; 0016 0288                                 currentPage = P_MONITOR;
008f15 e0e0      	LDI  R30,LOW(0)
008f16 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
008f18 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02C3:
008f1a 940e e05e 	CALL __PUTPARD1
008f1c 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 028B                             }
                 _0x2C012A:
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 _0x2C0122:
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
008f1e c7cb      	RJMP _0x2C012D
                 _0x2C011F:
008f1f 91a0 14df 	LDS  R26,_currentPage
008f21 31a2      	CPI  R26,LOW(0x12)
008f22 f011      	BREQ PC+3
008f23 940c 8f7d 	JMP _0x2C012E
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
008f25 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
008f27 f431      	BRNE _0x2C0132
008f28 e1e1      	LDI  R30,LOW(17)
008f29 940e d26b 	CALL SUBOPT_0x2C4
008f2b 940e d27e 	CALL SUBOPT_0x2C6
008f2d c04e      	RJMP _0x2C0131
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0132:
008f2e 30e2      	CPI  R30,LOW(0x2)
008f2f e0a0      	LDI  R26,HIGH(0x2)
008f30 07fa      	CPC  R31,R26
008f31 f449      	BRNE _0x2C0133
008f32 940e d23e 	CALL SUBOPT_0x2C0
008f34 f41c      	BRGE _0x2C0134
008f35 e0e1      	LDI  R30,LOW(1)
008f36 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0134:
008f38 940e d551 	CALL SUBOPT_0x311
008f3a c041      	RJMP _0x2C0131
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0133:
008f3b 30e3      	CPI  R30,LOW(0x3)
008f3c e0a0      	LDI  R26,HIGH(0x3)
008f3d 07fa      	CPC  R31,R26
008f3e f451      	BRNE _0x2C0135
008f3f 940e d252 	CALL SUBOPT_0x2C2
008f41 30a2      	CPI  R26,LOW(0x2)
008f42 f01c      	BRLT _0x2C0136
008f43 e0e0      	LDI  R30,LOW(0)
008f44 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0136:
008f46 940e d551 	CALL SUBOPT_0x311
008f48 c033      	RJMP _0x2C0131
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0135:
008f49 30e4      	CPI  R30,LOW(0x4)
008f4a e0a0      	LDI  R26,HIGH(0x4)
008f4b 07fa      	CPC  R31,R26
008f4c f579      	BRNE _0x2C0131
008f4d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008f4f 30e0      	CPI  R30,0
008f50 f479      	BRNE _0x2C0138
                 ; 0016 0296                                 mute       = !mute;
008f51 91e0 1a65 	LDS  R30,_mute_S0160000000
008f53 940e df4a 	CALL __LNEGB1
008f55 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
008f57 940e d497 	CALL SUBOPT_0x2F8
008f59 91e0 1a65 	LDS  R30,_mute_S0160000000
008f5b 940e c2e0 	CALL SUBOPT_0x65
008f5d 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
008f5f c01c      	RJMP _0x2C0139
                 _0x2C0138:
008f60 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f62 30a1      	CPI  R26,LOW(0x1)
008f63 f479      	BRNE _0x2C013A
                 ; 0016 029A                                 currentPage = P_FINISH;
008f64 940e d556 	CALL SUBOPT_0x312
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
008f66 e1e2      	LDI  R30,LOW(18)
008f67 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 029D                                 muteMode    = mute;
008f69 91e0 1a65 	LDS  R30,_mute_S0160000000
008f6b 93e0 148b 	STS  _muteMode,R30
                 ; 0016 029E                                 cursor      = 0;
008f6d e0e0      	LDI  R30,LOW(0)
008f6e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 029F                                 printOLED("FI");
008f70 940e d4b5 	CALL SUBOPT_0x2FD
008f72 c005      	RJMP _0x2C02C4
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 _0x2C013A:
                 ; 0016 02A2                                 currentPage = P_MONITOR;
008f73 e0e0      	LDI  R30,LOW(0)
008f74 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
008f76 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02C4:
008f78 940e e05e 	CALL __PUTPARD1
008f7a 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 02A5                             }
                 _0x2C0139:
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 _0x2C0131:
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
008f7c c76d      	RJMP _0x2C013C
                 _0x2C012E:
008f7d 91a0 14df 	LDS  R26,_currentPage
008f7f 31a3      	CPI  R26,LOW(0x13)
008f80 f011      	BREQ PC+3
008f81 940c 8fdf 	JMP _0x2C013D
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
008f83 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
008f85 f431      	BRNE _0x2C0141
008f86 e1e1      	LDI  R30,LOW(17)
008f87 940e d457 	CALL SUBOPT_0x2EE
008f89 940e d27e 	CALL SUBOPT_0x2C6
008f8b c052      	RJMP _0x2C0140
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0141:
008f8c 30e2      	CPI  R30,LOW(0x2)
008f8d e0a0      	LDI  R26,HIGH(0x2)
008f8e 07fa      	CPC  R31,R26
008f8f f481      	BRNE _0x2C0142
008f90 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f92 30a4      	CPI  R26,LOW(0x4)
008f93 f414      	BRGE _0x2C0143
008f94 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0143:
008f96 940e d252 	CALL SUBOPT_0x2C2
008f98 30a5      	CPI  R26,LOW(0x5)
008f99 f01c      	BRLT _0x2C0144
008f9a e0e0      	LDI  R30,LOW(0)
008f9b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0144:
008f9d 940e d562 	CALL SUBOPT_0x314
008f9f c03e      	RJMP _0x2C0140
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0142:
008fa0 30e3      	CPI  R30,LOW(0x3)
008fa1 e0a0      	LDI  R26,HIGH(0x3)
008fa2 07fa      	CPC  R31,R26
008fa3 f479      	BRNE _0x2C0145
008fa4 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fa6 30a4      	CPI  R26,LOW(0x4)
008fa7 f414      	BRGE _0x2C0146
008fa8 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0146:
008faa 940e d23e 	CALL SUBOPT_0x2C0
008fac f41c      	BRGE _0x2C0147
008fad e0e4      	LDI  R30,LOW(4)
008fae 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0147:
008fb0 940e d562 	CALL SUBOPT_0x314
008fb2 c02b      	RJMP _0x2C0140
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 _0x2C0145:
008fb3 30e4      	CPI  R30,LOW(0x4)
008fb4 e0a0      	LDI  R26,HIGH(0x4)
008fb5 07fa      	CPC  R31,R26
008fb6 f539      	BRNE _0x2C0140
008fb7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fb9 30a4      	CPI  R26,LOW(0x4)
008fba f471      	BRNE _0x2C0149
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
008fbb e1e4      	LDI  R30,LOW(20)
008fbc 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
008fbe 940e d567 	CALL SUBOPT_0x315
008fc0 940e d29b 	CALL SUBOPT_0x2C9
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                +
008fc2 e2e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 819 ) )
008fc3 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 819 ) )
008fc4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 819 ) )
008fc5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 819 ) )
                 	__POINTD1FN _0x2C0000,819
008fc6 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
008fc8 c015      	RJMP _0x2C014A
                 _0x2C0149:
008fc9 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fcb 30a4      	CPI  R26,LOW(0x4)
008fcc f48c      	BRGE _0x2C014B
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
008fcd 940e d530 	CALL SUBOPT_0x30C
008fcf 5daa      	SUBI R26,LOW(-_newPwd_S0160000000)
008fd0 4eb5      	SBCI R27,HIGH(-_newPwd_S0160000000)
008fd1 940e d56f 	CALL SUBOPT_0x316
008fd3 f024      	BRLT _0x2C014C
008fd4 940e d574 	CALL SUBOPT_0x317
008fd6 e0a0      	LDI  R26,LOW(0)
008fd7 83a0      	STD  Z+0,R26
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 _0x2C014C:
008fd8 940e d57a 	CALL SUBOPT_0x318
008fda 940e d574 	CALL SUBOPT_0x317
008fdc 940e d581 	CALL SUBOPT_0x319
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 _0x2C014B:
                 _0x2C014A:
                 ; 0016 02BC         }
                 _0x2C0140:
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
008fde c70b      	RJMP _0x2C014D
                 _0x2C013D:
008fdf 91a0 14df 	LDS  R26,_currentPage
008fe1 31a4      	CPI  R26,LOW(0x14)
008fe2 f011      	BREQ PC+3
008fe3 940c 906f 	JMP _0x2C014E
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
008fe5 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
008fe7 f431      	BRNE _0x2C0152
008fe8 e1e1      	LDI  R30,LOW(17)
008fe9 940e d457 	CALL SUBOPT_0x2EE
008feb 940e d27e 	CALL SUBOPT_0x2C6
008fed c080      	RJMP _0x2C0151
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0152:
008fee 30e2      	CPI  R30,LOW(0x2)
008fef e0a0      	LDI  R26,HIGH(0x2)
008ff0 07fa      	CPC  R31,R26
008ff1 f481      	BRNE _0x2C0153
008ff2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ff4 30a4      	CPI  R26,LOW(0x4)
008ff5 f414      	BRGE _0x2C0154
008ff6 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0154:
008ff8 940e d252 	CALL SUBOPT_0x2C2
008ffa 30a5      	CPI  R26,LOW(0x5)
008ffb f01c      	BRLT _0x2C0155
008ffc e0e0      	LDI  R30,LOW(0)
008ffd 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0155:
008fff 940e d562 	CALL SUBOPT_0x314
009001 c06c      	RJMP _0x2C0151
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0153:
009002 30e3      	CPI  R30,LOW(0x3)
009003 e0a0      	LDI  R26,HIGH(0x3)
009004 07fa      	CPC  R31,R26
009005 f479      	BRNE _0x2C0156
009006 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009008 30a4      	CPI  R26,LOW(0x4)
009009 f414      	BRGE _0x2C0157
00900a 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0157:
00900c 940e d23e 	CALL SUBOPT_0x2C0
00900e f41c      	BRGE _0x2C0158
00900f e0e4      	LDI  R30,LOW(4)
009010 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0158:
009012 940e d562 	CALL SUBOPT_0x314
009014 c059      	RJMP _0x2C0151
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 _0x2C0156:
009015 30e4      	CPI  R30,LOW(0x4)
009016 e0a0      	LDI  R26,HIGH(0x4)
009017 07fa      	CPC  R31,R26
009018 f011      	BREQ PC+3
009019 940c 906e 	JMP _0x2C0151
00901b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00901d 30a4      	CPI  R26,LOW(0x4)
00901e f5d1      	BRNE _0x2C015A
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
00901f 940e d585 	CALL SUBOPT_0x31A
009021 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
009022 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
009023 940e d112 	CALL SUBOPT_0x29D
009025 940e a522 	CALL _memcmp
009027 30e0      	CPI  R30,0
009028 f0e1      	BREQ _0x2C015B
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                +
009029 e2ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 831 ) )
00902a e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 831 ) )
00902b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 831 ) )
00902c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 831 ) )
                 	__POINTD1FN _0x2C0000,831
00902d 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
00902f 940e d585 	CALL SUBOPT_0x31A
009031 940e d58a 	CALL SUBOPT_0x31B
009033 940e a580 	CALL _memset
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
009035 940e d567 	CALL SUBOPT_0x315
009037 940e a580 	CALL _memset
                 ; 0016 02CC                                     currentPage = P_FAILED;
009039 e2e5      	LDI  R30,LOW(37)
00903a 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
00903c e1e1      	LDI  R30,LOW(17)
00903d 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
00903f e1e4      	LDI  R30,LOW(20)
009040 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
009042 940e d4b0 	CALL SUBOPT_0x2FC
009044 c00f      	RJMP _0x2C02C5
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 _0x2C015B:
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
009045 940e d58e 	CALL SUBOPT_0x31C
009047 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
009048 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
009049 940e d112 	CALL SUBOPT_0x29D
00904b 940e 9a9b 	CALL _r2ecpy
                 ; 0016 02D4                                     currentPage = P_FINISH;
00904d 940e d556 	CALL SUBOPT_0x312
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
00904f e1e4      	LDI  R30,LOW(20)
009050 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
009052 940e d4b5 	CALL SUBOPT_0x2FD
                 _0x2C02C5:
009054 940e e05e 	CALL __PUTPARD1
009056 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
009058 c015      	RJMP _0x2C015D
                 _0x2C015A:
009059 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00905b 30a4      	CPI  R26,LOW(0x4)
00905c f48c      	BRGE _0x2C015E
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
00905d 940e d530 	CALL SUBOPT_0x30C
00905f 5da6      	SUBI R26,LOW(-_confPwd_S0160000000)
009060 4eb5      	SBCI R27,HIGH(-_confPwd_S0160000000)
009061 940e d56f 	CALL SUBOPT_0x316
009063 f024      	BRLT _0x2C015F
009064 940e d597 	CALL SUBOPT_0x31D
009066 e0a0      	LDI  R26,LOW(0)
009067 83a0      	STD  Z+0,R26
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 _0x2C015F:
009068 940e d57a 	CALL SUBOPT_0x318
00906a 940e d597 	CALL SUBOPT_0x31D
00906c 940e d581 	CALL SUBOPT_0x319
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 _0x2C015E:
                 _0x2C015D:
                 ; 0016 02E1         }
                 _0x2C0151:
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
00906e c67b      	RJMP _0x2C0160
                 _0x2C014E:
00906f 91a0 14df 	LDS  R26,_currentPage
009071 31a5      	CPI  R26,LOW(0x15)
009072 f011      	BREQ PC+3
009073 940c 9104 	JMP _0x2C0161
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
009075 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
009077 f419      	BRNE _0x2C0165
009078 940e d59d 	CALL SUBOPT_0x31E
00907a c088      	RJMP _0x2C0164
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0165:
00907b 30e2      	CPI  R30,LOW(0x2)
00907c e0a0      	LDI  R26,HIGH(0x2)
00907d 07fa      	CPC  R31,R26
00907e f449      	BRNE _0x2C0166
00907f 940e d23e 	CALL SUBOPT_0x2C0
009081 f41c      	BRGE _0x2C0167
009082 e0e3      	LDI  R30,LOW(3)
009083 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0167:
009085 940e d245 	CALL SUBOPT_0x2C1
009087 c07b      	RJMP _0x2C0164
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0166:
009088 30e3      	CPI  R30,LOW(0x3)
009089 e0a0      	LDI  R26,HIGH(0x3)
00908a 07fa      	CPC  R31,R26
00908b f451      	BRNE _0x2C0168
00908c 940e d252 	CALL SUBOPT_0x2C2
00908e 30a4      	CPI  R26,LOW(0x4)
00908f f01c      	BRLT _0x2C0169
009090 e0e0      	LDI  R30,LOW(0)
009091 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0169:
009093 940e d245 	CALL SUBOPT_0x2C1
009095 c06d      	RJMP _0x2C0164
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 _0x2C0168:
009096 30e4      	CPI  R30,LOW(0x4)
009097 e0a0      	LDI  R26,HIGH(0x4)
009098 07fa      	CPC  R31,R26
009099 f011      	BREQ PC+3
00909a 940c 9103 	JMP _0x2C0164
00909c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00909e 30e0      	CPI  R30,0
00909f f571      	BRNE _0x2C016B
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
0090a0 e1e6      	LDI  R30,LOW(22)
0090a1 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
0090a3 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
0090a4 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
0090a5 940e 98a4 	CALL _get_current_vref
0090a7 01af      	MOVW R20,R30
                 ; 0016 02ED                                 if(res < 0){
0090a8 2355      	TST  R21
0090a9 f44a      	BRPL _0x2C016C
                 ; 0016 02EE                                     vRef[0] = 2;
0090aa e0e2      	LDI  R30,LOW(2)
0090ab 93e0 1a66 	STS  _vRef_S0160000000,R30
                 ; 0016 02EF                                     vRef[1] = 5;
0090ad e0e5      	LDI  R30,LOW(5)
                +
0090ae 93e0 1a67+STS _vRef_S0160000000 + ( 1 ) , R30
                 	__PUTB1MN _vRef_S0160000000,1
                 ; 0016 02F0                                     vRef[2] = 6;
0090b0 e0e6      	LDI  R30,LOW(6)
                +
0090b1 93e0 1a68+STS _vRef_S0160000000 + ( 2 ) , R30
                 	__PUTB1MN _vRef_S0160000000,2
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 _0x2C016C:
                +
0090b3 e5ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 878 ) )
0090b4 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 878 ) )
0090b5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 878 ) )
0090b6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 878 ) )
                 	__POINTD1FN _0x2C0000,878
0090b7 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                +
0090b9 e000     +LDI R16 , LOW ( 0 )
0090ba e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C016E:
                +
0090bb 3003     +CPI R16 , LOW ( 3 )
0090bc e0e0     +LDI R30 , HIGH ( 3 )
0090bd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
0090be f474      	BRGE _0x2C016F
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
0090bf 940e d5a4 	CALL SUBOPT_0x31F
0090c1 01f8      	MOVW R30,R16
0090c2 940e cf23 	CALL SUBOPT_0x251
0090c4 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
0090c5 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
0090c6 940e d484 	CALL SUBOPT_0x2F5
0090c8 940e d064 	CALL SUBOPT_0x281
                 ; 0016 02F5                                 }
                +
0090ca 5f0f     +SUBI R16 , LOW ( - 1 )
0090cb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0090cc cfee      	RJMP _0x2C016E
                 _0x2C016F:
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
0090cd c035      	RJMP _0x2C0170
                 _0x2C016B:
0090ce 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090d0 30a1      	CPI  R26,LOW(0x1)
0090d1 f459      	BRNE _0x2C0171
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
0090d2 e1e7      	LDI  R30,LOW(23)
0090d3 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
0090d5 e0e0      	LDI  R30,LOW(0)
0090d6 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
0090d8 940e d5ab 	CALL SUBOPT_0x320
0090da 940e d076 	CALL SUBOPT_0x285
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
0090dc c026      	RJMP _0x2C0172
                 _0x2C0171:
0090dd 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090df 30a2      	CPI  R26,LOW(0x2)
0090e0 f469      	BRNE _0x2C0173
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
0090e1 e1ea      	LDI  R30,LOW(26)
0090e2 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
0090e4 e0e0      	LDI  R30,LOW(0)
0090e5 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
0090e7 940e d5b6 	CALL SUBOPT_0x321
0090e9 940e d5bd 	CALL SUBOPT_0x322
0090eb 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
0090ed c015      	RJMP _0x2C0174
                 _0x2C0173:
0090ee 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090f0 30a3      	CPI  R26,LOW(0x3)
0090f1 f441      	BRNE _0x2C0175
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
0090f2 e2e0      	LDI  R30,LOW(32)
0090f3 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                +
0090f5 e7e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 902 ) )
0090f6 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 902 ) )
0090f7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 902 ) )
0090f8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 902 ) )
                 	__POINTD1FN _0x2C0000,902
0090f9 c005      	RJMP _0x2C02C6
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 _0x2C0175:
                 ; 0016 0309                                 currentPage = P_MONITOR;
0090fa e0e0      	LDI  R30,LOW(0)
0090fb 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
0090fd 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02C6:
0090ff 940e e05e 	CALL __PUTPARD1
009101 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 030C                             }
                 _0x2C0174:
                 _0x2C0172:
                 _0x2C0170:
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 _0x2C0164:
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
009103 c5e6      	RJMP _0x2C0177
                 _0x2C0161:
009104 91a0 14df 	LDS  R26,_currentPage
009106 31a6      	CPI  R26,LOW(0x16)
009107 f011      	BREQ PC+3
009108 940c 916b 	JMP _0x2C0178
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
00910a 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
00910c f431      	BRNE _0x2C017C
00910d e1e5      	LDI  R30,LOW(21)
00910e 940e d26b 	CALL SUBOPT_0x2C4
009110 940e d5c2 	CALL SUBOPT_0x323
009112 c057      	RJMP _0x2C017B
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017C:
009113 30e2      	CPI  R30,LOW(0x2)
009114 e0a0      	LDI  R26,HIGH(0x2)
009115 07fa      	CPC  R31,R26
009116 f451      	BRNE _0x2C017D
009117 940e d252 	CALL SUBOPT_0x2C2
009119 30a4      	CPI  R26,LOW(0x4)
00911a f01c      	BRLT _0x2C017E
00911b e0e0      	LDI  R30,LOW(0)
00911c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C017E:
00911e 940e d5c7 	CALL SUBOPT_0x324
009120 c049      	RJMP _0x2C017B
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017D:
009121 30e3      	CPI  R30,LOW(0x3)
009122 e0a0      	LDI  R26,HIGH(0x3)
009123 07fa      	CPC  R31,R26
009124 f449      	BRNE _0x2C017F
009125 940e d23e 	CALL SUBOPT_0x2C0
009127 f41c      	BRGE _0x2C0180
009128 e0e3      	LDI  R30,LOW(3)
009129 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0180:
00912b 940e d5c7 	CALL SUBOPT_0x324
00912d c03c      	RJMP _0x2C017B
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 _0x2C017F:
00912e 30e4      	CPI  R30,LOW(0x4)
00912f e0a0      	LDI  R26,HIGH(0x4)
009130 07fa      	CPC  R31,R26
009131 f5c1      	BRNE _0x2C017B
009132 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009134 30a3      	CPI  R26,LOW(0x3)
009135 f481      	BRNE _0x2C0182
                 ; 0016 0317                                 currentPage = P_FINISH;
009136 e2e4      	LDI  R30,LOW(36)
009137 940e d28b 	CALL SUBOPT_0x2C7
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
009139 e1e6      	LDI  R30,LOW(22)
00913a 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 031A                                 set_vref(&vRef[0]);
00913c e6a6      	LDI  R26,LOW(_vRef_S0160000000)
00913d e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
00913e 940e 9a35 	CALL _set_vref
                 ; 0016 031B                                 cursor = 0;
009140 e0e0      	LDI  R30,LOW(0)
009141 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 031C                                 printOLED("FI");
009143 940e d4b5 	CALL SUBOPT_0x2FD
009145 c020      	RJMP _0x2C02C7
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 _0x2C0182:
009146 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009148 30a3      	CPI  R26,LOW(0x3)
009149 f4bc      	BRGE _0x2C0184
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
00914a 940e d530 	CALL SUBOPT_0x30C
00914c 59aa      	SUBI R26,LOW(-_vRef_S0160000000)
00914d 4eb5      	SBCI R27,HIGH(-_vRef_S0160000000)
00914e 940e d56f 	CALL SUBOPT_0x316
009150 f020      	BRLO _0x2C0185
009151 940e d5cc 	CALL SUBOPT_0x325
009153 e0a0      	LDI  R26,LOW(0)
009154 83a0      	STD  Z+0,R26
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 _0x2C0185:
009155 940e d5a4 	CALL SUBOPT_0x31F
009157 940e d543 	CALL SUBOPT_0x30F
009159 940e d5cc 	CALL SUBOPT_0x325
00915b 81e0      	LD   R30,Z
00915c 940e c2e0 	CALL SUBOPT_0x65
00915e 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
009160 c009      	RJMP _0x2C0186
                 _0x2C0184:
                 ; 0016 0323                                 currentPage = P_MONITOR;
009161 e0e0      	LDI  R30,LOW(0)
009162 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
009164 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02C7:
009166 940e e05e 	CALL __PUTPARD1
009168 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 0326                             }
                 _0x2C0186:
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 _0x2C017B:
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
00916a c57f      	RJMP _0x2C0187
                 _0x2C0178:
00916b 91a0 14df 	LDS  R26,_currentPage
00916d 31a7      	CPI  R26,LOW(0x17)
00916e f011      	BREQ PC+3
00916f 940c 91c6 	JMP _0x2C0188
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
009171 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
009173 f449      	BRNE _0x2C018C
009174 e1e5      	LDI  R30,LOW(21)
009175 940e d457 	CALL SUBOPT_0x2EE
009177 e0e0      	LDI  R30,LOW(0)
009178 93e0 1a69 	STS  _prb1_S0160000000,R30
00917a 940e d5c2 	CALL SUBOPT_0x323
00917c c048      	RJMP _0x2C018B
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018C:
00917d 30e2      	CPI  R30,LOW(0x2)
00917e e0a0      	LDI  R26,HIGH(0x2)
00917f 07fa      	CPC  R31,R26
009180 f451      	BRNE _0x2C018D
009181 940e d252 	CALL SUBOPT_0x2C2
009183 30a2      	CPI  R26,LOW(0x2)
009184 f01c      	BRLT _0x2C018E
009185 e0e0      	LDI  R30,LOW(0)
009186 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C018E:
009188 940e d5d2 	CALL SUBOPT_0x326
00918a c03a      	RJMP _0x2C018B
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018D:
00918b 30e3      	CPI  R30,LOW(0x3)
00918c e0a0      	LDI  R26,HIGH(0x3)
00918d 07fa      	CPC  R31,R26
00918e f449      	BRNE _0x2C018F
00918f 940e d23e 	CALL SUBOPT_0x2C0
009191 f41c      	BRGE _0x2C0190
009192 e0e1      	LDI  R30,LOW(1)
009193 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0190:
009195 940e d5d2 	CALL SUBOPT_0x326
009197 c02d      	RJMP _0x2C018B
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 _0x2C018F:
009198 30e4      	CPI  R30,LOW(0x4)
009199 e0a0      	LDI  R26,HIGH(0x4)
00919a 07fa      	CPC  R31,R26
00919b f549      	BRNE _0x2C018B
00919c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00919e 30e0      	CPI  R30,0
00919f f469      	BRNE _0x2C0192
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
0091a0 940e d5d7 	CALL SUBOPT_0x327
0091a2 f018      	BRLO _0x2C0193
0091a3 e0e0      	LDI  R30,LOW(0)
0091a4 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 _0x2C0193:
0091a6 940e d5de 	CALL SUBOPT_0x328
0091a8 940e d5bd 	CALL SUBOPT_0x322
0091aa 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
0091ac c018      	RJMP _0x2C0194
                 _0x2C0192:
0091ad 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0091af 30a1      	CPI  R26,LOW(0x1)
0091b0 f469      	BRNE _0x2C0195
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
0091b1 e1e8      	LDI  R30,LOW(24)
0091b2 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
0091b4 e0e0      	LDI  R30,LOW(0)
0091b5 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
0091b7 940e d5b6 	CALL SUBOPT_0x321
0091b9 940e d5e5 	CALL SUBOPT_0x329
0091bb 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
0091bd c007      	RJMP _0x2C0196
                 _0x2C0195:
                 ; 0016 033B                                 currentPage = P_MONITOR;
0091be e0e0      	LDI  R30,LOW(0)
0091bf 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
0091c1 940e d2a1 	CALL SUBOPT_0x2CA
0091c3 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 033E                             }
                 _0x2C0196:
                 _0x2C0194:
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 _0x2C018B:
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
0091c5 c524      	RJMP _0x2C0197
                 _0x2C0188:
0091c6 91a0 14df 	LDS  R26,_currentPage
0091c8 31a8      	CPI  R26,LOW(0x18)
0091c9 f011      	BREQ PC+3
0091ca 940c 9224 	JMP _0x2C0198
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
0091cc 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
0091ce f459      	BRNE _0x2C019C
0091cf e1e7      	LDI  R30,LOW(23)
0091d0 940e d26b 	CALL SUBOPT_0x2C4
0091d2 e0e0      	LDI  R30,LOW(0)
0091d3 93e0 1a6a 	STS  _prb2_S0160000000,R30
0091d5 940e d5ab 	CALL SUBOPT_0x320
0091d7 940e d076 	CALL SUBOPT_0x285
0091d9 c049      	RJMP _0x2C019B
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019C:
0091da 30e2      	CPI  R30,LOW(0x2)
0091db e0a0      	LDI  R26,HIGH(0x2)
0091dc 07fa      	CPC  R31,R26
0091dd f451      	BRNE _0x2C019D
0091de 940e d252 	CALL SUBOPT_0x2C2
0091e0 30a2      	CPI  R26,LOW(0x2)
0091e1 f01c      	BRLT _0x2C019E
0091e2 e0e0      	LDI  R30,LOW(0)
0091e3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C019E:
0091e5 940e d5d2 	CALL SUBOPT_0x326
0091e7 c03b      	RJMP _0x2C019B
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019D:
0091e8 30e3      	CPI  R30,LOW(0x3)
0091e9 e0a0      	LDI  R26,HIGH(0x3)
0091ea 07fa      	CPC  R31,R26
0091eb f449      	BRNE _0x2C019F
0091ec 940e d23e 	CALL SUBOPT_0x2C0
0091ee f41c      	BRGE _0x2C01A0
0091ef e0e1      	LDI  R30,LOW(1)
0091f0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01A0:
0091f2 940e d5d2 	CALL SUBOPT_0x326
0091f4 c02e      	RJMP _0x2C019B
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 _0x2C019F:
0091f5 30e4      	CPI  R30,LOW(0x4)
0091f6 e0a0      	LDI  R26,HIGH(0x4)
0091f7 07fa      	CPC  R31,R26
0091f8 f551      	BRNE _0x2C019B
0091f9 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0091fb 30e0      	CPI  R30,0
0091fc f489      	BRNE _0x2C01A2
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
0091fd 91a0 1a6a 	LDS  R26,_prb2_S0160000000
0091ff 5faf      	SUBI R26,-LOW(1)
009200 93a0 1a6a 	STS  _prb2_S0160000000,R26
009202 30a5      	CPI  R26,LOW(0x5)
009203 f018      	BRLO _0x2C01A3
009204 e0e0      	LDI  R30,LOW(0)
009205 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 _0x2C01A3:
009207 940e d5de 	CALL SUBOPT_0x328
009209 940e d5e5 	CALL SUBOPT_0x329
00920b 940e d076 	CALL SUBOPT_0x285
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
00920d c015      	RJMP _0x2C01A4
                 _0x2C01A2:
00920e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009210 30a1      	CPI  R26,LOW(0x1)
009211 f451      	BRNE _0x2C01A5
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
009212 e1e9      	LDI  R30,LOW(25)
009213 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
009215 940e d5ea 	CALL SUBOPT_0x32A
009217 940e d5e5 	CALL SUBOPT_0x329
009219 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
00921b c007      	RJMP _0x2C01A6
                 _0x2C01A5:
                 ; 0016 0352                                 currentPage = P_MONITOR;
00921c e0e0      	LDI  R30,LOW(0)
00921d 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
00921f 940e d2a1 	CALL SUBOPT_0x2CA
009221 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 0355                             }
                 _0x2C01A6:
                 _0x2C01A4:
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 _0x2C019B:
                 ; 0016 0358     }
                 ; 0016 0359     else if ( currentPage == P_CAL1_CONFIRM )
009223 c4c6      	RJMP _0x2C01A7
                 _0x2C0198:
009224 91a0 14df 	LDS  R26,_currentPage
009226 31a9      	CPI  R26,LOW(0x19)
009227 f599      	BRNE _0x2C01A8
                 ; 0016 035A     {
                 ; 0016 035B         switch(key){
009228 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 035C         case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
00922a f451      	BRNE _0x2C01AC
00922b e1e8      	LDI  R30,LOW(24)
00922c 940e d26b 	CALL SUBOPT_0x2C4
00922e 940e d5b6 	CALL SUBOPT_0x321
009230 940e d5e5 	CALL SUBOPT_0x329
009232 940e d076 	CALL SUBOPT_0x285
009234 c025      	RJMP _0x2C01AB
                 ; 0016 035D         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C01AC:
009235 30e2      	CPI  R30,LOW(0x2)
009236 e0a0      	LDI  R26,HIGH(0x2)
009237 07fa      	CPC  R31,R26
009238 f109      	BREQ _0x2C01AB
                 ; 0016 035E         case KEY_DOWN   :   /* no operation */                                                                  break;
009239 30e3      	CPI  R30,LOW(0x3)
00923a e0a0      	LDI  R26,HIGH(0x3)
00923b 07fa      	CPC  R31,R26
00923c f0e9      	BREQ _0x2C01AB
                 ; 0016 035F         case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
00923d 30e4      	CPI  R30,LOW(0x4)
00923e e0a0      	LDI  R26,HIGH(0x4)
00923f 07fa      	CPC  R31,R26
009240 f4c9      	BRNE _0x2C01AB
009241 940e d5f1 	CALL SUBOPT_0x32B
009243 91a0 1a6a 	LDS  R26,_prb2_S0160000000
009245 27bb      	CLR  R27
009246 940e 6eca 	CALL _sensorCalibrate1
009248 01af      	MOVW R20,R30
                 ; 0016 0360                             if(res < 0){
009249 2355      	TST  R21
00924a f432      	BRPL _0x2C01B0
                 ; 0016 0361                                 currentPage = P_FAILED;
00924b e2e5      	LDI  R30,LOW(37)
00924c 940e d5f7 	CALL SUBOPT_0x32C
                 ; 0016 0362                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364                                 cursor      = 0;
                 ; 0016 0365                                 printOLED("FL");
00924e 940e d4b0 	CALL SUBOPT_0x2FC
009250 c005      	RJMP _0x2C02C8
                 ; 0016 0366                             }
                 ; 0016 0367                             else{
                 _0x2C01B0:
                 ; 0016 0368                                 currentPage = P_FINISH;
009251 e2e4      	LDI  R30,LOW(36)
009252 940e d5f7 	CALL SUBOPT_0x32C
                 ; 0016 0369                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B                                 cursor      = 0;
                 ; 0016 036C                                 printOLED("FI");
009254 940e d4b5 	CALL SUBOPT_0x2FD
                 _0x2C02C8:
009256 940e e05e 	CALL __PUTPARD1
009258 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 036D                             }
                 ; 0016 036E                             break;
                 ; 0016 036F         }
                 _0x2C01AB:
                 ; 0016 0370     }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
00925a c48f      	RJMP _0x2C01B2
                 _0x2C01A8:
00925b 91a0 14df 	LDS  R26,_currentPage
00925d 31aa      	CPI  R26,LOW(0x1A)
00925e f011      	BREQ PC+3
00925f 940c 92ac 	JMP _0x2C01B3
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
009261 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
009263 f431      	BRNE _0x2C01B7
009264 e1e5      	LDI  R30,LOW(21)
009265 940e d45d 	CALL SUBOPT_0x2EF
009267 940e d5c2 	CALL SUBOPT_0x323
009269 c041      	RJMP _0x2C01B6
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B7:
00926a 30e2      	CPI  R30,LOW(0x2)
00926b e0a0      	LDI  R26,HIGH(0x2)
00926c 07fa      	CPC  R31,R26
00926d f451      	BRNE _0x2C01B8
00926e 940e d252 	CALL SUBOPT_0x2C2
009270 30a2      	CPI  R26,LOW(0x2)
009271 f01c      	BRLT _0x2C01B9
009272 e0e0      	LDI  R30,LOW(0)
009273 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01B9:
009275 940e d5d2 	CALL SUBOPT_0x326
009277 c033      	RJMP _0x2C01B6
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B8:
009278 30e3      	CPI  R30,LOW(0x3)
009279 e0a0      	LDI  R26,HIGH(0x3)
00927a 07fa      	CPC  R31,R26
00927b f449      	BRNE _0x2C01BA
00927c 940e d23e 	CALL SUBOPT_0x2C0
00927e f41c      	BRGE _0x2C01BB
00927f e0e1      	LDI  R30,LOW(1)
009280 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01BB:
009282 940e d5d2 	CALL SUBOPT_0x326
009284 c026      	RJMP _0x2C01B6
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 _0x2C01BA:
009285 30e4      	CPI  R30,LOW(0x4)
009286 e0a0      	LDI  R26,HIGH(0x4)
009287 07fa      	CPC  R31,R26
009288 f511      	BRNE _0x2C01B6
009289 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00928b 30e0      	CPI  R30,0
00928c f469      	BRNE _0x2C01BD
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
00928d 940e d5d7 	CALL SUBOPT_0x327
00928f f018      	BRLO _0x2C01BE
009290 e0e0      	LDI  R30,LOW(0)
009291 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 _0x2C01BE:
009293 940e d5de 	CALL SUBOPT_0x328
009295 940e d5bd 	CALL SUBOPT_0x322
009297 940e d076 	CALL SUBOPT_0x285
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
009299 c011      	RJMP _0x2C01BF
                 _0x2C01BD:
00929a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00929c 30a1      	CPI  R26,LOW(0x1)
00929d f431      	BRNE _0x2C01C0
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
00929e e1eb      	LDI  R30,LOW(27)
00929f 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
0092a1 940e d5fe 	CALL SUBOPT_0x32D
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
0092a3 c007      	RJMP _0x2C01C1
                 _0x2C01C0:
                 ; 0016 0381                                 currentPage = P_MONITOR;
0092a4 e0e0      	LDI  R30,LOW(0)
0092a5 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
0092a7 940e d2a1 	CALL SUBOPT_0x2CA
0092a9 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 0384                             }
                 _0x2C01C1:
                 _0x2C01BF:
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 _0x2C01B6:
                 ; 0016 0387     }
                 ; 0016 0388     else if ( currentPage == P_CAL2_MENU )
0092ab c43e      	RJMP _0x2C01C2
                 _0x2C01B3:
0092ac 91a0 14df 	LDS  R26,_currentPage
0092ae 31ab      	CPI  R26,LOW(0x1B)
0092af f011      	BREQ PC+3
0092b0 940c 9360 	JMP _0x2C01C3
                 ; 0016 0389     {
                 ; 0016 038A         switch(key){
0092b2 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 038B         case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
0092b4 f451      	BRNE _0x2C01C7
0092b5 e1ea      	LDI  R30,LOW(26)
0092b6 940e d26b 	CALL SUBOPT_0x2C4
0092b8 940e d5b6 	CALL SUBOPT_0x321
0092ba 940e d5bd 	CALL SUBOPT_0x322
0092bc 940e d076 	CALL SUBOPT_0x285
0092be c0a0      	RJMP _0x2C01C6
                 ; 0016 038C         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C7:
0092bf 30e2      	CPI  R30,LOW(0x2)
0092c0 e0a0      	LDI  R26,HIGH(0x2)
0092c1 07fa      	CPC  R31,R26
0092c2 f449      	BRNE _0x2C01C8
0092c3 940e d23e 	CALL SUBOPT_0x2C0
0092c5 f41c      	BRGE _0x2C01C9
0092c6 e0e3      	LDI  R30,LOW(3)
0092c7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01C9:
0092c9 940e d245 	CALL SUBOPT_0x2C1
0092cb c093      	RJMP _0x2C01C6
                 ; 0016 038D         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C8:
0092cc 30e3      	CPI  R30,LOW(0x3)
0092cd e0a0      	LDI  R26,HIGH(0x3)
0092ce 07fa      	CPC  R31,R26
0092cf f451      	BRNE _0x2C01CA
0092d0 940e d252 	CALL SUBOPT_0x2C2
0092d2 30a4      	CPI  R26,LOW(0x4)
0092d3 f01c      	BRLT _0x2C01CB
0092d4 e0e0      	LDI  R30,LOW(0)
0092d5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01CB:
0092d7 940e d245 	CALL SUBOPT_0x2C1
0092d9 c085      	RJMP _0x2C01C6
                 ; 0016 038E         case KEY_OK     :   if(cursor < 3){
                 _0x2C01CA:
0092da 30e4      	CPI  R30,LOW(0x4)
0092db e0a0      	LDI  R26,HIGH(0x4)
0092dc 07fa      	CPC  R31,R26
0092dd f011      	BREQ PC+3
0092de 940c 935f 	JMP _0x2C01C6
0092e0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092e2 30a3      	CPI  R26,LOW(0x3)
0092e3 f014      	BRLT PC+3
0092e4 940c 934a 	JMP _0x2C01CD
                 ; 0016 038F                                 if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
0092e6 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0092e8 30e0      	CPI  R30,0
0092e9 f411      	BRNE _0x2C01CE
0092ea e1ec      	LDI  R30,LOW(28)
0092eb c00b      	RJMP _0x2C02C9
                 ; 0016 0390                                 else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 _0x2C01CE:
0092ec 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092ee 30a1      	CPI  R26,LOW(0x1)
0092ef f411      	BRNE _0x2C01D0
0092f0 e1ed      	LDI  R30,LOW(29)
0092f1 c005      	RJMP _0x2C02C9
                 ; 0016 0391                                 else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 _0x2C01D0:
0092f2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092f4 30a2      	CPI  R26,LOW(0x2)
0092f5 f419      	BRNE _0x2C01D2
0092f6 e1ee      	LDI  R30,LOW(30)
                 _0x2C02C9:
0092f7 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0392 
                 ; 0016 0393                                 printOLED("CP%1d%1d",cursor+1,prb1+1);
                 _0x2C01D2:
                +
0092f9 e9eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 941 ) )
0092fa e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 941 ) )
0092fb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 941 ) )
0092fc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 941 ) )
                 	__POINTD1FN _0x2C0000,941
0092fd 940e e05e 	CALL __PUTPARD1
0092ff 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009301 e0f0      	LDI  R31,0
009302 fde7      	SBRC R30,7
009303 efff      	SER  R31
009304 940e cccc 	CALL SUBOPT_0x200
009306 940e d5bd 	CALL SUBOPT_0x322
009308 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0394 
                 ; 0016 0395                                 res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
00930a 940e d5f1 	CALL SUBOPT_0x32B
00930c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00930e e0f0      	LDI  R31,0
00930f fde7      	SBRC R30,7
009310 efff      	SER  R31
009311 59eb      	SUBI R30,LOW(-101)
009312 4fff      	SBCI R31,HIGH(-101)
009313 940e d603 	CALL SUBOPT_0x32E
009315 940e 7117 	CALL _sensorGetCurrentSetPoint
009317 01af      	MOVW R20,R30
                 ; 0016 0396                                 if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
009318 2355      	TST  R21
009319 f442      	BRPL _0x2C01D3
00931a e6eb      	LDI  R30,LOW(_calPnt_S0160000000)
00931b e1fa      	LDI  R31,HIGH(_calPnt_S0160000000)
00931c 940e c676 	CALL SUBOPT_0xF5
00931e e0a6      	LDI  R26,LOW(6)
00931f e0b0      	LDI  R27,0
009320 940e a580 	CALL _memset
                 ; 0016 0397                                 for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 _0x2C01D3:
                +
009322 e000     +LDI R16 , LOW ( 0 )
009323 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C01D5:
                +
009324 3006     +CPI R16 , LOW ( 6 )
009325 e0e0     +LDI R30 , HIGH ( 6 )
009326 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
009327 f4f4      	BRGE _0x2C01D6
009328 940e d608 	CALL SUBOPT_0x32F
00932a 01f8      	MOVW R30,R16
00932b 940e cf23 	CALL SUBOPT_0x251
00932d e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00932e e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00932f 940e d484 	CALL SUBOPT_0x2F5
009331 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0398                                                     printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                +
009333 eaed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 959 ) )
009334 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 959 ) )
009335 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 959 ) )
009336 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 959 ) )
                 	__POINTD1FN _0x2C0000,959
009337 940e e05e 	CALL __PUTPARD1
009339 01f8      	MOVW R30,R16
00933a 940e cf23 	CALL SUBOPT_0x251
00933c e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00933d e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00933e 0fa0      	ADD  R26,R16
00933f 1fb1      	ADC  R27,R17
009340 91ec      	LD   R30,X
009341 940e ce35 	CALL SUBOPT_0x22F
                +
009343 5f0f     +SUBI R16 , LOW ( - 1 )
009344 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009345 cfde      	RJMP _0x2C01D5
                 _0x2C01D6:
                 ; 0016 0399                                 cursor      = 0;
009346 e0e0      	LDI  R30,LOW(0)
009347 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 039A                             }
                 ; 0016 039B                             else if(cursor == 3){       // -- Calculate
009349 c015      	RJMP _0x2C01D7
                 _0x2C01CD:
00934a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00934c 30a3      	CPI  R26,LOW(0x3)
00934d f451      	BRNE _0x2C01D8
                 ; 0016 039C                                 currentPage = P_CAL2_CONFIRM;
00934e e1ef      	LDI  R30,LOW(31)
00934f 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 039D                                 cursor      = 0;
                 ; 0016 039E                                 printOLED("CC%1d",prb1+1);
009351 940e d5ea 	CALL SUBOPT_0x32A
009353 940e d5bd 	CALL SUBOPT_0x322
009355 940e d076 	CALL SUBOPT_0x285
                 ; 0016 039F                             }
                 ; 0016 03A0                             else{                       // -- Exit -- should not occur
009357 c007      	RJMP _0x2C01D9
                 _0x2C01D8:
                 ; 0016 03A1                                 currentPage = P_MONITOR;
009358 e0e0      	LDI  R30,LOW(0)
009359 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 03A2                                 cursor      = 0;
                 ; 0016 03A3                                 printOLED("M0");
00935b 940e d2a1 	CALL SUBOPT_0x2CA
00935d 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 03A4                             }
                 _0x2C01D9:
                 _0x2C01D7:
                 ; 0016 03A5             break;
                 ; 0016 03A6         }
                 _0x2C01C6:
                 ; 0016 03A7     }
                 ; 0016 03A8     else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
00935f c38a      	RJMP _0x2C01DA
                 _0x2C01C3:
009360 91a0 14df 	LDS  R26,_currentPage
009362 31ac      	CPI  R26,LOW(0x1C)
009363 f029      	BREQ _0x2C01DC
009364 31ad      	CPI  R26,LOW(0x1D)
009365 f019      	BREQ _0x2C01DC
009366 31ae      	CPI  R26,LOW(0x1E)
009367 f009      	BREQ _0x2C01DC
009368 c0c7      	RJMP _0x2C01DB
                 _0x2C01DC:
                 ; 0016 03A9     {
                 ; 0016 03AA         switch(key){
009369 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 03AB         case KEY_MODE   :   currentPage = P_CAL2_MENU;
00936b f4c9      	BRNE _0x2C01E1
00936c e1eb      	LDI  R30,LOW(27)
00936d 93e0 14df 	STS  _currentPage,R30
                 ; 0016 03AC                             if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
00936f 91a0 14df 	LDS  R26,_currentPage
009371 31ac      	CPI  R26,LOW(0x1C)
009372 f411      	BRNE _0x2C01E2
009373 e0e0      	LDI  R30,LOW(0)
009374 c00b      	RJMP _0x2C02CA
                 ; 0016 03AD                             else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 _0x2C01E2:
009375 91a0 14df 	LDS  R26,_currentPage
009377 31ad      	CPI  R26,LOW(0x1D)
009378 f411      	BRNE _0x2C01E4
009379 e0e1      	LDI  R30,LOW(1)
00937a c005      	RJMP _0x2C02CA
                 ; 0016 03AE                             else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 _0x2C01E4:
00937b 91a0 14df 	LDS  R26,_currentPage
00937d 31ae      	CPI  R26,LOW(0x1E)
00937e f419      	BRNE _0x2C01E6
00937f e0e2      	LDI  R30,LOW(2)
                 _0x2C02CA:
009380 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 03AF                             printOLED("M8%1d",cursor);                                                                      break;
                 _0x2C01E6:
009382 940e d5fe 	CALL SUBOPT_0x32D
009384 c0aa      	RJMP _0x2C01E0
                 ; 0016 03B0         case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E1:
009385 30e2      	CPI  R30,LOW(0x2)
009386 e0a0      	LDI  R26,HIGH(0x2)
009387 07fa      	CPC  R31,R26
009388 f451      	BRNE _0x2C01E7
009389 940e d252 	CALL SUBOPT_0x2C2
00938b 30a7      	CPI  R26,LOW(0x7)
00938c f01c      	BRLT _0x2C01E8
00938d e0e0      	LDI  R30,LOW(0)
00938e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01E8:
009390 940e d60f 	CALL SUBOPT_0x330
009392 c09c      	RJMP _0x2C01E0
                 ; 0016 03B1         case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E7:
009393 30e3      	CPI  R30,LOW(0x3)
009394 e0a0      	LDI  R26,HIGH(0x3)
009395 07fa      	CPC  R31,R26
009396 f449      	BRNE _0x2C01E9
009397 940e d23e 	CALL SUBOPT_0x2C0
009399 f41c      	BRGE _0x2C01EA
00939a e0e6      	LDI  R30,LOW(6)
00939b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01EA:
00939d 940e d60f 	CALL SUBOPT_0x330
00939f c08f      	RJMP _0x2C01E0
                 ; 0016 03B2         case KEY_OK     :   if(cursor == 6){
                 _0x2C01E9:
0093a0 30e4      	CPI  R30,LOW(0x4)
0093a1 e0a0      	LDI  R26,HIGH(0x4)
0093a2 07fa      	CPC  R31,R26
0093a3 f011      	BREQ PC+3
0093a4 940c 942f 	JMP _0x2C01E0
0093a6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0093a8 30a6      	CPI  R26,LOW(0x6)
0093a9 f011      	BREQ PC+3
0093aa 940c 93f0 	JMP _0x2C01EC
                 ; 0016 03B3 
                 ; 0016 03B4                                 if(currentPage == P_CAL2_SPT1){
0093ac 91a0 14df 	LDS  R26,_currentPage
0093ae 31ac      	CPI  R26,LOW(0x1C)
0093af f451      	BRNE _0x2C01ED
                 ; 0016 03B5                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
0093b0 940e d5f1 	CALL SUBOPT_0x32B
0093b2 e6e5      	LDI  R30,LOW(101)
0093b3 e0f0      	LDI  R31,HIGH(101)
0093b4 940e d603 	CALL SUBOPT_0x32E
0093b6 940e 7299 	CALL _sensorSetCurrentSetPoint
0093b8 01af      	MOVW R20,R30
                 ; 0016 03B6                                 }
                 ; 0016 03B7                                 else if(currentPage == P_CAL2_SPT2){
0093b9 c01e      	RJMP _0x2C01EE
                 _0x2C01ED:
0093ba 91a0 14df 	LDS  R26,_currentPage
0093bc 31ad      	CPI  R26,LOW(0x1D)
0093bd f451      	BRNE _0x2C01EF
                 ; 0016 03B8                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
0093be 940e d5f1 	CALL SUBOPT_0x32B
0093c0 e6e6      	LDI  R30,LOW(102)
0093c1 e0f0      	LDI  R31,HIGH(102)
0093c2 940e d603 	CALL SUBOPT_0x32E
0093c4 940e 7299 	CALL _sensorSetCurrentSetPoint
0093c6 01af      	MOVW R20,R30
                 ; 0016 03B9                                 }
                 ; 0016 03BA                                 else if(currentPage == P_CAL2_SPT3){
0093c7 c010      	RJMP _0x2C01F0
                 _0x2C01EF:
0093c8 91a0 14df 	LDS  R26,_currentPage
0093ca 31ae      	CPI  R26,LOW(0x1E)
0093cb f451      	BRNE _0x2C01F1
                 ; 0016 03BB                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
0093cc 940e d5f1 	CALL SUBOPT_0x32B
0093ce e6e7      	LDI  R30,LOW(103)
0093cf e0f0      	LDI  R31,HIGH(103)
0093d0 940e d603 	CALL SUBOPT_0x32E
0093d2 940e 7299 	CALL _sensorSetCurrentSetPoint
0093d4 01af      	MOVW R20,R30
                 ; 0016 03BC                                 }
                 ; 0016 03BD                                 else{
0093d5 c002      	RJMP _0x2C01F2
                 _0x2C01F1:
                 ; 0016 03BE                                     // -- should not occur -- //
                 ; 0016 03BF                                     res = -1;
                +
0093d6 ef4f     +LDI R20 , LOW ( - 1 )
0093d7 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 ; 0016 03C0                                 }
                 _0x2C01F2:
                 _0x2C01F0:
                 _0x2C01EE:
                 ; 0016 03C1 
                 ; 0016 03C2                                 if(res < 0){
0093d8 2355      	TST  R21
0093d9 f44a      	BRPL _0x2C01F3
                 ; 0016 03C3                                     currentPage = P_FAILED;
0093da 940e d614 	CALL SUBOPT_0x331
                 ; 0016 03C4                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5                                     tmpPrevPage = currentPage;
0093dc 91e0 14df 	LDS  R30,_currentPage
0093de 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 03C6                                     cursor      = 0;
                 ; 0016 03C7                                     printOLED("FL");
0093e0 940e d4b0 	CALL SUBOPT_0x2FC
0093e2 c008      	RJMP _0x2C02CB
                 ; 0016 03C8                                 }
                 ; 0016 03C9                                 else{
                 _0x2C01F3:
                 ; 0016 03CA                                     currentPage = P_FINISH;
0093e3 940e d61b 	CALL SUBOPT_0x332
                 ; 0016 03CB                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC                                     tmpPrevPage = currentPage;
0093e5 91e0 14df 	LDS  R30,_currentPage
0093e7 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 03CD                                     cursor      = 0;
                 ; 0016 03CE                                     printOLED("FI");
0093e9 940e d4b5 	CALL SUBOPT_0x2FD
                 _0x2C02CB:
0093eb 940e e05e 	CALL __PUTPARD1
0093ed 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 03CF                                 }
                 ; 0016 03D0                             }
                 ; 0016 03D1                             else if(cursor == 0){   // toggle '+' & '-'
0093ef c03f      	RJMP _0x2C01F5
                 _0x2C01EC:
0093f0 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0093f2 30e0      	CPI  R30,0
0093f3 f4c9      	BRNE _0x2C01F6
                 ; 0016 03D2                                 if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
0093f4 940e d530 	CALL SUBOPT_0x30C
0093f6 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
0093f7 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
0093f8 91ec      	LD   R30,X
0093f9 5fef      	SUBI R30,-LOW(1)
0093fa 93ec      	ST   X,R30
0093fb 30e2      	CPI  R30,LOW(0x2)
0093fc f020      	BRLO _0x2C01F7
0093fd 940e d622 	CALL SUBOPT_0x333
0093ff e0a0      	LDI  R26,LOW(0)
009400 83a0      	STD  Z+0,R26
                 ; 0016 03D3                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01F7:
009401 940e d608 	CALL SUBOPT_0x32F
009403 940e d543 	CALL SUBOPT_0x30F
009405 940e d622 	CALL SUBOPT_0x333
009407 81e0      	LD   R30,Z
009408 940e c2e0 	CALL SUBOPT_0x65
00940a 940e d064 	CALL SUBOPT_0x281
                 ; 0016 03D4                             }
                 ; 0016 03D5                             else if(cursor < 6){
00940c c022      	RJMP _0x2C01F8
                 _0x2C01F6:
00940d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00940f 30a6      	CPI  R26,LOW(0x6)
009410 f4bc      	BRGE _0x2C01F9
                 ; 0016 03D6                                 if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
009411 940e d530 	CALL SUBOPT_0x30C
009413 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
009414 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
009415 940e d56f 	CALL SUBOPT_0x316
009417 f020      	BRLO _0x2C01FA
009418 940e d622 	CALL SUBOPT_0x333
00941a e0a0      	LDI  R26,LOW(0)
00941b 83a0      	STD  Z+0,R26
                 ; 0016 03D7                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01FA:
00941c 940e d608 	CALL SUBOPT_0x32F
00941e 940e d543 	CALL SUBOPT_0x30F
009420 940e d622 	CALL SUBOPT_0x333
009422 81e0      	LD   R30,Z
009423 940e c2e0 	CALL SUBOPT_0x65
009425 940e d064 	CALL SUBOPT_0x281
                 ; 0016 03D8                             }
                 ; 0016 03D9                             else{                       // -- Exit -- should not occur
009427 c007      	RJMP _0x2C01FB
                 _0x2C01F9:
                 ; 0016 03DA                                 currentPage = P_MONITOR;
009428 e0e0      	LDI  R30,LOW(0)
009429 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 03DB                                 cursor      = 0;
                 ; 0016 03DC                                 printOLED("M0");
00942b 940e d2a1 	CALL SUBOPT_0x2CA
00942d 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 03DD                             }
                 _0x2C01FB:
                 _0x2C01F8:
                 _0x2C01F5:
                 ; 0016 03DE             break;
                 ; 0016 03DF         }
                 _0x2C01E0:
                 ; 0016 03E0     }
                 ; 0016 03E1     else if ( currentPage == P_CAL2_CONFIRM )
00942f c2ba      	RJMP _0x2C01FC
                 _0x2C01DB:
009430 91a0 14df 	LDS  R26,_currentPage
009432 31af      	CPI  R26,LOW(0x1F)
009433 f589      	BRNE _0x2C01FD
                 ; 0016 03E2     {
                 ; 0016 03E3         switch(key){
009434 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 03E4         case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
009436 f431      	BRNE _0x2C0201
009437 e1eb      	LDI  R30,LOW(27)
009438 940e d457 	CALL SUBOPT_0x2EE
00943a 940e d5fe 	CALL SUBOPT_0x32D
00943c c027      	RJMP _0x2C0200
                 ; 0016 03E5         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C0201:
00943d 30e2      	CPI  R30,LOW(0x2)
00943e e0a0      	LDI  R26,HIGH(0x2)
00943f 07fa      	CPC  R31,R26
009440 f119      	BREQ _0x2C0200
                 ; 0016 03E6         case KEY_DOWN   :   /* no operation */                                                                  break;
009441 30e3      	CPI  R30,LOW(0x3)
009442 e0a0      	LDI  R26,HIGH(0x3)
009443 07fa      	CPC  R31,R26
009444 f0f9      	BREQ _0x2C0200
                 ; 0016 03E7         case KEY_OK     :   res = sensorCalibrate2(prb1);
009445 30e4      	CPI  R30,LOW(0x4)
009446 e0a0      	LDI  R26,HIGH(0x4)
009447 07fa      	CPC  R31,R26
009448 f4d9      	BRNE _0x2C0200
009449 91a0 1a69 	LDS  R26,_prb1_S0160000000
00944b 27bb      	CLR  R27
00944c 940e 6f98 	CALL _sensorCalibrate2
00944e 01af      	MOVW R20,R30
                 ; 0016 03E8                             if(res < 0){
00944f 2355      	TST  R21
009450 f442      	BRPL _0x2C0205
                 ; 0016 03E9                                 currentPage = P_FAILED;
009451 940e d614 	CALL SUBOPT_0x331
                 ; 0016 03EA                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB                                 tmpPrevPage = P_CAL2_CONFIRM;
009453 e1ef      	LDI  R30,LOW(31)
009454 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 03EC                                 cursor      = 0;
                 ; 0016 03ED                                 printOLED("FL");
009456 940e d4b0 	CALL SUBOPT_0x2FC
009458 c007      	RJMP _0x2C02CC
                 ; 0016 03EE                             }
                 ; 0016 03EF                             else{
                 _0x2C0205:
                 ; 0016 03F0                                 currentPage = P_FINISH;
009459 940e d61b 	CALL SUBOPT_0x332
                 ; 0016 03F1                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2                                 tmpPrevPage = P_CAL2_CONFIRM;
00945b e1ef      	LDI  R30,LOW(31)
00945c 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 03F3                                 cursor      = 0;
                 ; 0016 03F4                                 printOLED("FI");
00945e 940e d4b5 	CALL SUBOPT_0x2FD
                 _0x2C02CC:
009460 940e e05e 	CALL __PUTPARD1
009462 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 03F5                             }
                 ; 0016 03F6                             break;
                 ; 0016 03F7         }
                 _0x2C0200:
                 ; 0016 03F8     }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
009464 c285      	RJMP _0x2C0207
                 _0x2C01FD:
009465 91a0 14df 	LDS  R26,_currentPage
009467 32a0      	CPI  R26,LOW(0x20)
009468 f591      	BRNE _0x2C0208
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
009469 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
00946b f449      	BRNE _0x2C020C
00946c e1e5      	LDI  R30,LOW(21)
00946d 93e0 14df 	STS  _currentPage,R30
00946f e0e3      	LDI  R30,LOW(3)
009470 93e0 1a1f 	STS  _cursor_S0160000000,R30
009472 940e d5c2 	CALL SUBOPT_0x323
009474 c025      	RJMP _0x2C020B
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C020C:
009475 30e2      	CPI  R30,LOW(0x2)
009476 e0a0      	LDI  R26,HIGH(0x2)
009477 07fa      	CPC  R31,R26
009478 f109      	BREQ _0x2C020B
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
009479 30e3      	CPI  R30,LOW(0x3)
00947a e0a0      	LDI  R26,HIGH(0x3)
00947b 07fa      	CPC  R31,R26
00947c f0e9      	BREQ _0x2C020B
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
00947d 30e4      	CPI  R30,LOW(0x4)
00947e e0a0      	LDI  R26,HIGH(0x4)
00947f 07fa      	CPC  R31,R26
009480 f4c9      	BRNE _0x2C020B
009481 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
009482 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
009483 940e c676 	CALL SUBOPT_0xF5
009485 940e c35f 	CALL SUBOPT_0x77
009487 940e a580 	CALL _memset
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
009489 940e d58e 	CALL SUBOPT_0x31C
00948b e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00948c e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00948d 940e d112 	CALL SUBOPT_0x29D
00948f d60b      	RCALL _r2ecpy
                 ; 0016 0401                             currentPage = P_FINISH;
009490 e2e4      	LDI  R30,LOW(36)
009491 940e d28b 	CALL SUBOPT_0x2C7
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
009493 e2e0      	LDI  R30,LOW(32)
009494 940e d51e 	CALL SUBOPT_0x309
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
009496 940e d4b5 	CALL SUBOPT_0x2FD
009498 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 _0x2C020B:
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
00949a c24f      	RJMP _0x2C0210
                 _0x2C0208:
00949b 91a0 14df 	LDS  R26,_currentPage
00949d 32a1      	CPI  R26,LOW(0x21)
00949e f011      	BREQ PC+3
00949f 940c 957c 	JMP _0x2C0211
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
0094a1 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
0094a3 f569      	BRNE _0x2C0215
0094a4 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
0094a6 e0f0      	LDI  R31,0
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
0094a7 30e2      	CPI  R30,LOW(0x2)
0094a8 e0a0      	LDI  R26,HIGH(0x2)
0094a9 07fa      	CPC  R31,R26
0094aa f431      	BRNE _0x2C0219
0094ab e0e2      	LDI  R30,LOW(2)
0094ac 940e d457 	CALL SUBOPT_0x2EE
0094ae 940e d463 	CALL SUBOPT_0x2F0
0094b0 c013      	RJMP _0x2C02CD
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0219:
0094b1 30ee      	CPI  R30,LOW(0xE)
0094b2 e0a0      	LDI  R26,HIGH(0xE)
0094b3 07fa      	CPC  R31,R26
0094b4 f431      	BRNE _0x2C021A
0094b5 e0ee      	LDI  R30,LOW(14)
0094b6 940e d457 	CALL SUBOPT_0x2EE
0094b8 940e d628 	CALL SUBOPT_0x334
0094ba c009      	RJMP _0x2C02CD
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C021A:
0094bb 31e1      	CPI  R30,LOW(0x11)
0094bc e0a0      	LDI  R26,HIGH(0x11)
0094bd 07fa      	CPC  R31,R26
0094be f459      	BRNE _0x2C0218
0094bf e1e1      	LDI  R30,LOW(17)
0094c0 940e d457 	CALL SUBOPT_0x2EE
0094c2 940e d62d 	CALL SUBOPT_0x335
                 _0x2C02CD:
0094c4 940e e05e 	CALL __PUTPARD1
0094c6 940e d543 	CALL SUBOPT_0x30F
0094c8 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0410                             }
                 _0x2C0218:
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
0094ca 940e d632 	CALL SUBOPT_0x336
0094cc 940e d58a 	CALL SUBOPT_0x31B
0094ce 940e a580 	CALL _memset
0094d0 c0aa      	RJMP _0x2C0214
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0215:
0094d1 30e2      	CPI  R30,LOW(0x2)
0094d2 e0a0      	LDI  R26,HIGH(0x2)
0094d3 07fa      	CPC  R31,R26
0094d4 f481      	BRNE _0x2C021C
0094d5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0094d7 30a4      	CPI  R26,LOW(0x4)
0094d8 f414      	BRGE _0x2C021D
0094d9 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C021D:
0094db 940e d252 	CALL SUBOPT_0x2C2
0094dd 30a5      	CPI  R26,LOW(0x5)
0094de f01c      	BRLT _0x2C021E
0094df e0e0      	LDI  R30,LOW(0)
0094e0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C021E:
0094e2 940e d562 	CALL SUBOPT_0x314
0094e4 c096      	RJMP _0x2C0214
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C021C:
0094e5 30e3      	CPI  R30,LOW(0x3)
0094e6 e0a0      	LDI  R26,HIGH(0x3)
0094e7 07fa      	CPC  R31,R26
0094e8 f479      	BRNE _0x2C021F
0094e9 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0094eb 30a4      	CPI  R26,LOW(0x4)
0094ec f414      	BRGE _0x2C0220
0094ed 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C0220:
0094ef 940e d23e 	CALL SUBOPT_0x2C0
0094f1 f41c      	BRGE _0x2C0221
0094f2 e0e4      	LDI  R30,LOW(4)
0094f3 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0221:
0094f5 940e d562 	CALL SUBOPT_0x314
0094f7 c083      	RJMP _0x2C0214
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 _0x2C021F:
0094f8 30e4      	CPI  R30,LOW(0x4)
0094f9 e0a0      	LDI  R26,HIGH(0x4)
0094fa 07fa      	CPC  R31,R26
0094fb f011      	BREQ PC+3
0094fc 940c 957b 	JMP _0x2C0214
0094fe 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009500 30a4      	CPI  R26,LOW(0x4)
009501 f011      	BREQ PC+3
009502 940c 9566 	JMP _0x2C0223
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
009504 940e d632 	CALL SUBOPT_0x336
009506 940e d30c 	CALL SUBOPT_0x2D9
009508 940e d112 	CALL SUBOPT_0x29D
00950a d5a3      	RCALL _recmp
00950b 9730      	SBIW R30,0
00950c f061      	BREQ _0x2C0224
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
00950d e2e3      	LDI  R30,LOW(35)
00950e 940e d26b 	CALL SUBOPT_0x2C4
009510 940e d637 	CALL SUBOPT_0x337
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
009512 940e d632 	CALL SUBOPT_0x336
009514 940e d58a 	CALL SUBOPT_0x31B
009516 940e a580 	CALL _memset
                 ; 0016 041D                                     break;
009518 c062      	RJMP _0x2C0214
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 _0x2C0224:
009519 940e d63c 	CALL SUBOPT_0x338
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
00951b f431      	BRNE _0x2C0228
00951c e0e7      	LDI  R30,LOW(7)
00951d 940e d26b 	CALL SUBOPT_0x2C4
00951f 940e d489 	CALL SUBOPT_0x2F6
009521 c043      	RJMP _0x2C0227
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 _0x2C0228:
009522 31e0      	CPI  R30,LOW(0x10)
009523 e0a0      	LDI  R26,HIGH(0x10)
009524 07fa      	CPC  R31,R26
009525 f521      	BRNE _0x2C0229
009526 e1e0      	LDI  R30,LOW(16)
009527 940e d26b 	CALL SUBOPT_0x2C4
                +
009529 ecea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 988 ) )
00952a e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 988 ) )
00952b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 988 ) )
00952c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 988 ) )
                 	__POINTD1FN _0x2C0000,988
00952d 940e d44b 	CALL SUBOPT_0x2EC
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
00952f e000     +LDI R16 , LOW ( 0 )
009530 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C022B:
                +
009531 3005     +CPI R16 , LOW ( 5 )
009532 e0e0     +LDI R30 , HIGH ( 5 )
009533 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
009534 f4a4      	BRGE _0x2C022C
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
009535 01d8      	MOVW R26,R16
009536 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
009537 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
009538 940e d2f2 	CALL SUBOPT_0x2D5
00953a 81e0      	LD   R30,Z
00953b 940e d53b 	CALL SUBOPT_0x30E
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
00953d 01f8      	MOVW R30,R16
00953e 940e cf23 	CALL SUBOPT_0x251
009540 e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
009541 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
009542 940e d484 	CALL SUBOPT_0x2F5
009544 940e d064 	CALL SUBOPT_0x281
                 ; 0016 0427                                                       }
                +
009546 5f0f     +SUBI R16 , LOW ( - 1 )
009547 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009548 cfe8      	RJMP _0x2C022B
                 _0x2C022C:
                 ; 0016 0428                                                       break;
009549 c01b      	RJMP _0x2C0227
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 _0x2C0229:
00954a 31e3      	CPI  R30,LOW(0x13)
00954b e0a0      	LDI  R26,HIGH(0x13)
00954c 07fa      	CPC  R31,R26
00954d f471      	BRNE _0x2C022E
00954e e1e3      	LDI  R30,LOW(19)
00954f 93e0 14df 	STS  _currentPage,R30
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
009551 940e d585 	CALL SUBOPT_0x31A
009553 940e d58a 	CALL SUBOPT_0x31B
009555 940e d29b 	CALL SUBOPT_0x2C9
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                +
009557 eced     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 991 ) )
009558 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 991 ) )
009559 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 991 ) )
00955a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 991 ) )
                 	__POINTD1FN _0x2C0000,991
00955b c005      	RJMP _0x2C02CE
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 _0x2C022E:
                 ; 0016 042F                                                       currentPage = P_MONITOR;
00955c e0e0      	LDI  R30,LOW(0)
00955d 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
00955f 940e d2a1 	CALL SUBOPT_0x2CA
                 _0x2C02CE:
009561 940e e05e 	CALL __PUTPARD1
009563 940e d09f 	CALL SUBOPT_0x28A
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 _0x2C0227:
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
009565 c015      	RJMP _0x2C022F
                 _0x2C0223:
009566 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009568 30a4      	CPI  R26,LOW(0x4)
009569 f48c      	BRGE _0x2C0230
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
00956a 940e d530 	CALL SUBOPT_0x30C
00956c 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
00956d 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
00956e 940e d56f 	CALL SUBOPT_0x316
009570 f024      	BRLT _0x2C0231
009571 940e d643 	CALL SUBOPT_0x339
009573 e0a0      	LDI  R26,LOW(0)
009574 83a0      	STD  Z+0,R26
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0231:
009575 940e d57a 	CALL SUBOPT_0x318
009577 940e d643 	CALL SUBOPT_0x339
009579 940e d581 	CALL SUBOPT_0x319
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 _0x2C0230:
                 _0x2C022F:
                 ; 0016 043A         }
                 _0x2C0214:
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
00957b c16e      	RJMP _0x2C0232
                 _0x2C0211:
00957c 91a0 14df 	LDS  R26,_currentPage
00957e 32a2      	CPI  R26,LOW(0x22)
00957f f011      	BREQ PC+3
009580 940c 95f7 	JMP _0x2C0233
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
009582 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
009584 f419      	BRNE _0x2C0237
009585 940e d59d 	CALL SUBOPT_0x31E
009587 c06e      	RJMP _0x2C0236
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0237:
009588 30e2      	CPI  R30,LOW(0x2)
009589 e0a0      	LDI  R26,HIGH(0x2)
00958a 07fa      	CPC  R31,R26
00958b f481      	BRNE _0x2C0238
00958c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00958e 30a4      	CPI  R26,LOW(0x4)
00958f f414      	BRGE _0x2C0239
009590 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C0239:
009592 940e d252 	CALL SUBOPT_0x2C2
009594 30a5      	CPI  R26,LOW(0x5)
009595 f01c      	BRLT _0x2C023A
009596 e0e0      	LDI  R30,LOW(0)
009597 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023A:
009599 940e d562 	CALL SUBOPT_0x314
00959b c05a      	RJMP _0x2C0236
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0238:
00959c 30e3      	CPI  R30,LOW(0x3)
00959d e0a0      	LDI  R26,HIGH(0x3)
00959e 07fa      	CPC  R31,R26
00959f f479      	BRNE _0x2C023B
0095a0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095a2 30a4      	CPI  R26,LOW(0x4)
0095a3 f414      	BRGE _0x2C023C
0095a4 940e d55d 	CALL SUBOPT_0x313
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C023C:
0095a6 940e d23e 	CALL SUBOPT_0x2C0
0095a8 f41c      	BRGE _0x2C023D
0095a9 e0e4      	LDI  R30,LOW(4)
0095aa 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023D:
0095ac 940e d562 	CALL SUBOPT_0x314
0095ae c047      	RJMP _0x2C0236
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 _0x2C023B:
0095af 30e4      	CPI  R30,LOW(0x4)
0095b0 e0a0      	LDI  R26,HIGH(0x4)
0095b1 07fa      	CPC  R31,R26
0095b2 f011      	BREQ PC+3
0095b3 940c 95f6 	JMP _0x2C0236
0095b5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095b7 30a4      	CPI  R26,LOW(0x4)
0095b8 f541      	BRNE _0x2C023F
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
0095b9 940e d632 	CALL SUBOPT_0x336
                +
0095bb 01fe     +MOVW R30 , R28
0095bc 5be0     +SUBI R30 , LOW ( - 80 )
0095bd 4fff     +SBCI R31 , HIGH ( - 80 )
0095be 9001     +LD R0 , Z +
0095bf 81f0     +LD R31 , Z
0095c0 2de0     +MOV R30 , R0
                 	__GETW1SX 80
0095c1 940e d112 	CALL SUBOPT_0x29D
0095c3 d4ea      	RCALL _recmp
0095c4 9730      	SBIW R30,0
0095c5 f079      	BREQ _0x2C0240
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
0095c6 e0e1      	LDI  R30,LOW(1)
0095c7 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
0095c9 e2e3      	LDI  R30,LOW(35)
0095ca 940e d26b 	CALL SUBOPT_0x2C4
0095cc 940e d637 	CALL SUBOPT_0x337
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
0095ce 940e d632 	CALL SUBOPT_0x336
0095d0 940e d58a 	CALL SUBOPT_0x31B
0095d2 940e a580 	CALL _memset
                 ; 0016 044B                                     break;
0095d4 c021      	RJMP _0x2C0236
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 _0x2C0240:
0095d5 e1e5      	LDI  R30,LOW(21)
0095d6 940e d26b 	CALL SUBOPT_0x2C4
0095d8 940e d5c2 	CALL SUBOPT_0x323
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
0095da 940e d632 	CALL SUBOPT_0x336
0095dc 940e d58a 	CALL SUBOPT_0x31B
0095de 940e a580 	CALL _memset
                 ; 0016 0451                                 break;
0095e0 c015      	RJMP _0x2C0236
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 _0x2C023F:
0095e1 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0095e3 30a4      	CPI  R26,LOW(0x4)
0095e4 f48c      	BRGE _0x2C0242
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
0095e5 940e d530 	CALL SUBOPT_0x30C
0095e7 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
0095e8 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
0095e9 940e d56f 	CALL SUBOPT_0x316
0095eb f024      	BRLT _0x2C0243
0095ec 940e d643 	CALL SUBOPT_0x339
0095ee e0a0      	LDI  R26,LOW(0)
0095ef 83a0      	STD  Z+0,R26
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0243:
0095f0 940e d57a 	CALL SUBOPT_0x318
0095f2 940e d643 	CALL SUBOPT_0x339
0095f4 940e d581 	CALL SUBOPT_0x319
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 _0x2C0242:
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 _0x2C0236:
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
0095f6 c0f3      	RJMP _0x2C0244
                 _0x2C0233:
0095f7 91a0 14df 	LDS  R26,_currentPage
0095f9 32a3      	CPI  R26,LOW(0x23)
0095fa f011      	BREQ PC+3
0095fb 940c 9641 	JMP _0x2C0245
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
0095fd 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
0095ff f409      	BRNE _0x2C0249
009600 c03f      	RJMP _0x2C0248
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C0249:
009601 30e2      	CPI  R30,LOW(0x2)
009602 e0a0      	LDI  R26,HIGH(0x2)
009603 07fa      	CPC  R31,R26
009604 f1d9      	BREQ _0x2C0248
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
009605 30e3      	CPI  R30,LOW(0x3)
009606 e0a0      	LDI  R26,HIGH(0x3)
009607 07fa      	CPC  R31,R26
009608 f1b9      	BREQ _0x2C0248
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
009609 30e4      	CPI  R30,LOW(0x4)
00960a e0a0      	LDI  R26,HIGH(0x4)
00960b 07fa      	CPC  R31,R26
00960c f599      	BRNE _0x2C0248
00960d 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
00960f 940e cd6c 	CALL SUBOPT_0x214
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
009611 f459      	BRNE _0x2C0250
009612 e0e1      	LDI  R30,LOW(1)
009613 93e0 14df 	STS  _currentPage,R30
009615 e0e3      	LDI  R30,LOW(3)
009616 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
009618 eeee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
009619 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00961a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00961b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00961c c01d      	RJMP _0x2C02CF
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 _0x2C0250:
00961d 30e2      	CPI  R30,LOW(0x2)
00961e e0a0      	LDI  R26,HIGH(0x2)
00961f 07fa      	CPC  R31,R26
009620 f431      	BRNE _0x2C0251
009621 e0e2      	LDI  R30,LOW(2)
009622 940e d457 	CALL SUBOPT_0x2EE
009624 940e d463 	CALL SUBOPT_0x2F0
009626 c013      	RJMP _0x2C02CF
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0251:
009627 30ee      	CPI  R30,LOW(0xE)
009628 e0a0      	LDI  R26,HIGH(0xE)
009629 07fa      	CPC  R31,R26
00962a f431      	BRNE _0x2C0252
00962b e0ee      	LDI  R30,LOW(14)
00962c 940e d457 	CALL SUBOPT_0x2EE
00962e 940e d628 	CALL SUBOPT_0x334
009630 c009      	RJMP _0x2C02CF
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C0252:
009631 31e1      	CPI  R30,LOW(0x11)
009632 e0a0      	LDI  R26,HIGH(0x11)
009633 07fa      	CPC  R31,R26
009634 f459      	BRNE _0x2C024F
009635 e1e1      	LDI  R30,LOW(17)
009636 940e d457 	CALL SUBOPT_0x2EE
009638 940e d62d 	CALL SUBOPT_0x335
                 _0x2C02CF:
00963a 940e e05e 	CALL __PUTPARD1
00963c 940e d543 	CALL SUBOPT_0x30F
00963e 940e d076 	CALL SUBOPT_0x285
                 ; 0016 0469                             }
                 _0x2C024F:
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 _0x2C0248:
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
009640 c0a9      	RJMP _0x2C0254
                 _0x2C0245:
009641 91a0 14df 	LDS  R26,_currentPage
009643 32a4      	CPI  R26,LOW(0x24)
009644 f019      	BREQ _0x2C0256
009645 32a5      	CPI  R26,LOW(0x25)
009646 f009      	BREQ _0x2C0256
009647 c0a2      	RJMP _0x2C0255
                 _0x2C0256:
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
009648 940e d239 	CALL SUBOPT_0x2BF
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
00964a f409      	BRNE _0x2C025B
00964b c09e      	RJMP _0x2C025A
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C025B:
00964c 30e2      	CPI  R30,LOW(0x2)
00964d e0a0      	LDI  R26,HIGH(0x2)
00964e 07fa      	CPC  R31,R26
00964f f409      	BRNE _0x2C025C
009650 c099      	RJMP _0x2C025A
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 _0x2C025C:
009651 30e3      	CPI  R30,LOW(0x3)
009652 e0a0      	LDI  R26,HIGH(0x3)
009653 07fa      	CPC  R31,R26
009654 f409      	BRNE _0x2C025D
009655 c094      	RJMP _0x2C025A
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 _0x2C025D:
009656 30e4      	CPI  R30,LOW(0x4)
009657 e0a0      	LDI  R26,HIGH(0x4)
009658 07fa      	CPC  R31,R26
009659 f011      	BREQ PC+3
00965a 940c 96ea 	JMP _0x2C025A
00965c 940e d63c 	CALL SUBOPT_0x338
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
00965e f499      	BRNE _0x2C0262
00965f e0e7      	LDI  R30,LOW(7)
009660 940e d649 	CALL SUBOPT_0x33A
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
009662 30a8      	CPI  R26,LOW(0x8)
009663 f411      	BRNE _0x2C0263
009664 e0e0      	LDI  R30,LOW(0)
009665 c005      	RJMP _0x2C02D0
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 _0x2C0263:
009666 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009668 30ad      	CPI  R26,LOW(0xD)
009669 f419      	BRNE _0x2C0265
00966a e0e1      	LDI  R30,LOW(1)
                 _0x2C02D0:
00966b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 _0x2C0265:
                +
00966d e1ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00966e e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00966f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
009670 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
009671 c06e      	RJMP _0x2C02D1
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 _0x2C0262:
009672 30ee      	CPI  R30,LOW(0xE)
009673 e0a0      	LDI  R26,HIGH(0xE)
009674 07fa      	CPC  R31,R26
009675 f431      	BRNE _0x2C0266
009676 e0ee      	LDI  R30,LOW(14)
009677 940e d457 	CALL SUBOPT_0x2EE
009679 940e d628 	CALL SUBOPT_0x334
00967b c064      	RJMP _0x2C02D1
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 _0x2C0266:
00967c 31e1      	CPI  R30,LOW(0x11)
00967d e0a0      	LDI  R26,HIGH(0x11)
00967e 07fa      	CPC  R31,R26
00967f f489      	BRNE _0x2C0267
009680 e1e1      	LDI  R30,LOW(17)
009681 940e d649 	CALL SUBOPT_0x33A
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
009683 31a2      	CPI  R26,LOW(0x12)
009684 f411      	BRNE _0x2C0268
009685 e0e0      	LDI  R30,LOW(0)
009686 c005      	RJMP _0x2C02D2
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 _0x2C0268:
009687 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
009689 31a4      	CPI  R26,LOW(0x14)
00968a f419      	BRNE _0x2C026A
00968b e0e1      	LDI  R30,LOW(1)
                 _0x2C02D2:
00968c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 _0x2C026A:
00968e 940e d62d 	CALL SUBOPT_0x335
009690 c04f      	RJMP _0x2C02D1
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 _0x2C0267:
009691 31e5      	CPI  R30,LOW(0x15)
009692 e0a0      	LDI  R26,HIGH(0x15)
009693 07fa      	CPC  R31,R26
009694 f4c9      	BRNE _0x2C026B
009695 e1e5      	LDI  R30,LOW(21)
009696 940e d649 	CALL SUBOPT_0x33A
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
009698 31a6      	CPI  R26,LOW(0x16)
009699 f411      	BRNE _0x2C026C
00969a e0e0      	LDI  R30,LOW(0)
00969b c00b      	RJMP _0x2C02D3
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 _0x2C026C:
00969c 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00969e 31ab      	CPI  R26,LOW(0x1B)
00969f f411      	BRNE _0x2C026E
0096a0 e0e2      	LDI  R30,LOW(2)
0096a1 c005      	RJMP _0x2C02D3
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 _0x2C026E:
0096a2 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096a4 32a0      	CPI  R26,LOW(0x20)
0096a5 f419      	BRNE _0x2C0270
0096a6 e0e3      	LDI  R30,LOW(3)
                 _0x2C02D3:
0096a7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 _0x2C0270:
                +
0096a9 e7e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
0096aa e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
0096ab e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
0096ac e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
0096ad c032      	RJMP _0x2C02D1
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 _0x2C026B:
0096ae 31e8      	CPI  R30,LOW(0x18)
0096af e0a0      	LDI  R26,HIGH(0x18)
0096b0 07fa      	CPC  R31,R26
0096b1 f461      	BRNE _0x2C0271
0096b2 e1e8      	LDI  R30,LOW(24)
0096b3 940e d26b 	CALL SUBOPT_0x2C4
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
0096b5 940e d5b6 	CALL SUBOPT_0x321
0096b7 91e0 1a6a 	LDS  R30,_prb2_S0160000000
0096b9 e0f0      	LDI  R31,0
0096ba 9631      	ADIW R30,1
0096bb 940e df3b 	CALL __CWD1
0096bd c028      	RJMP _0x2C02D4
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 _0x2C0271:
0096be 31eb      	CPI  R30,LOW(0x1B)
0096bf e0a0      	LDI  R26,HIGH(0x1B)
0096c0 07fa      	CPC  R31,R26
0096c1 f541      	BRNE _0x2C0261
0096c2 e1eb      	LDI  R30,LOW(27)
0096c3 940e d649 	CALL SUBOPT_0x33A
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
0096c5 31ac      	CPI  R26,LOW(0x1C)
0096c6 f411      	BRNE _0x2C0273
0096c7 e0e0      	LDI  R30,LOW(0)
0096c8 c011      	RJMP _0x2C02D5
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 _0x2C0273:
0096c9 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096cb 31ad      	CPI  R26,LOW(0x1D)
0096cc f411      	BRNE _0x2C0275
0096cd e0e1      	LDI  R30,LOW(1)
0096ce c00b      	RJMP _0x2C02D5
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 _0x2C0275:
0096cf 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096d1 31ae      	CPI  R26,LOW(0x1E)
0096d2 f411      	BRNE _0x2C0277
0096d3 e0e2      	LDI  R30,LOW(2)
0096d4 c005      	RJMP _0x2C02D5
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 _0x2C0277:
0096d5 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0096d7 31af      	CPI  R26,LOW(0x1F)
0096d8 f419      	BRNE _0x2C0279
0096d9 e0e3      	LDI  R30,LOW(3)
                 _0x2C02D5:
0096da 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 _0x2C0279:
                +
0096dc e9e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
0096dd e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
0096de e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
0096df e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
                 _0x2C02D1:
0096e0 940e e05e 	CALL __PUTPARD1
0096e2 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0096e4 940e df35 	CALL __CBD1
                 _0x2C02D4:
0096e6 940e e05e 	CALL __PUTPARD1
0096e8 940e d076 	CALL SUBOPT_0x285
                 ; 0016 048D                             }
                 _0x2C0261:
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 _0x2C025A:
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 _0x2C0255:
                 _0x2C0254:
                 _0x2C0244:
                 _0x2C0232:
                 _0x2C0210:
                 _0x2C0207:
                 _0x2C01FC:
                 _0x2C01DA:
                 _0x2C01C2:
                 _0x2C01B2:
                 _0x2C01A7:
                 _0x2C0197:
                 _0x2C0187:
                 _0x2C0177:
                 _0x2C0160:
                 _0x2C014D:
                 _0x2C013C:
                 _0x2C012D:
                 _0x2C011E:
                 _0x2C010A:
                 _0x2C00FF:
                 _0x2C00F0:
                 _0x2C00E6:
                 _0x2C00D3:
                 _0x2C00BD:
                 _0x2C00A7:
                 _0x2C0091:
                 _0x2C007E:
                 _0x2C006C:
                 _0x2C0062:
                 _0x2C0058:
                 _0x2C004E:
                 _0x2C0028:
                 _0x2C0019:
                 _0x2C0006:
0096ea 940e e0d5 	CALL __LOADLOCR6
0096ec 96ef      	ADIW R28,63
0096ed 9668      	ADIW R28,24
0096ee 9508      	RET
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 _showProbeConfig:
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
0096ef 93ba      	ST   -Y,R27
0096f0 93aa      	ST   -Y,R26
0096f1 9764      	SBIW R28,20
0096f2 e184      	LDI  R24,20
0096f3 e0a0      	LDI  R26,LOW(0)
0096f4 e0b0      	LDI  R27,HIGH(0)
0096f5 edea      	LDI  R30,LOW(_0x2C027A*2)
0096f6 e5fd      	LDI  R31,HIGH(_0x2C027A*2)
0096f7 e060      	LDI  R22,BYTE3(_0x2C027A*2)
0096f8 940e e0dc 	CALL __INITLOCB
0096fa 940e d008 	CALL SUBOPT_0x272
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                +
0096fc e020     +LDI R18 , LOW ( 0 )
0096fd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0096fe 8da8      	LDD  R26,Y+24
0096ff 8db9      	LDD  R27,Y+24+1
009700 e1ed      	LDI  R30,LOW(29)
009701 940e df7c 	CALL __MULB1W2U
009703 54e2      	SUBI R30,LOW(-_sensor_config)
009704 4efe      	SBCI R31,HIGH(-_sensor_config)
009705 01df      	MOVW R26,R30
009706 940e d64e 	CALL SUBOPT_0x33B
009708 01de      	MOVW R26,R28
009709 9656      	ADIW R26,22
00970a d0ae      	RCALL _get_current_sampling
00970b 018f      	MOVW R16,R30
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
00970c 2311      	TST  R17
00970d f42a      	BRPL _0x2C027B
                 ; 0016 04A8         val[0] = 0;
00970e e0e0      	LDI  R30,LOW(0)
00970f 8bec      	STD  Y+20,R30
                 ; 0016 04A9         val[1] = 0;
009710 8bed      	STD  Y+21,R30
                 ; 0016 04AA         val[2] = 0;
009711 8bee      	STD  Y+22,R30
                 ; 0016 04AB         val[3] = 0;
009712 8bef      	STD  Y+23,R30
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 _0x2C027B:
                +
009713 e020     +LDI R18 , LOW ( 0 )
009714 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0016 04AF     sampling += val[0] * 100;
009715 89ac      	LDD  R26,Y+20
009716 e6e4      	LDI  R30,LOW(100)
009717 02ea      	MULS R30,R26
009718 01f0      	MOVW R30,R0
                +
009719 0f2e     +ADD R18 , R30
00971a 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B0     sampling += val[1] * 10;
00971b 89ad      	LDD  R26,Y+21
00971c e0ea      	LDI  R30,LOW(10)
00971d 02ea      	MULS R30,R26
00971e 01f0      	MOVW R30,R0
                +
00971f 0f2e     +ADD R18 , R30
009720 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B1     sampling += val[2];
009721 89ee      	LDD  R30,Y+22
009722 e0f0      	LDI  R31,0
009723 fde7      	SBRC R30,7
009724 efff      	SER  R31
                +
009725 0f2e     +ADD R18 , R30
009726 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
009727 940e c29c 	CALL SUBOPT_0x5A
009729 e0e0      	LDI  R30,LOW(0)
00972a 93ea      	ST   -Y,R30
00972b 940e cc05 	CALL SUBOPT_0x1DF
00972d 940e a580 	CALL _memset
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                +
00972f ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
009730 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
009731 8da8      	LDD  R26,Y+24
009732 8db9      	LDD  R27,Y+24+1
009733 940e ce29 	CALL SUBOPT_0x22D
009735 f439      	BRNE _0x2C027C
009736 940e c29c 	CALL SUBOPT_0x5A
                +
009738 ede0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 994 ) )
009739 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 994 ) )
00973a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 994 ) )
00973b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 994 ) )
                 	__POINTD1FN _0x2C0000,994
00973c c006      	RJMP _0x2C02D6
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 _0x2C027C:
00973d 940e c29c 	CALL SUBOPT_0x5A
                +
00973f ede4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 998 ) )
009740 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 998 ) )
009741 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 998 ) )
009742 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 998 ) )
                 	__POINTD1FN _0x2C0000,998
                 _0x2C02D6:
009743 940e e05e 	CALL __PUTPARD1
009745 940e d2e4 	CALL SUBOPT_0x2D3
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
009747 01fe      	MOVW R30,R28
009748 9634      	ADIW R30,4
009749 940e c676 	CALL SUBOPT_0xF5
00974b 940e cc05 	CALL SUBOPT_0x1DF
00974d 940e a580 	CALL _memset
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
00974f 8da8      	LDD  R26,Y+24
009750 8db9      	LDD  R27,Y+24+1
009751 e1ed      	LDI  R30,LOW(29)
009752 940e df7c 	CALL __MULB1W2U
                +
009754 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
009755 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
009756 81a0      	LD   R26,Z
009757 30a1      	CPI  R26,LOW(0x1)
009758 f449      	BRNE _0x2C027E
009759 01fe      	MOVW R30,R28
00975a 9634      	ADIW R30,4
00975b 93fa      	ST   -Y,R31
00975c 93ea      	ST   -Y,R30
                +
00975d ede8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1002 ) )
00975e e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1002 ) )
00975f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1002 ) )
009760 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1002 ) )
                 	__POINTD1FN _0x2C0000,1002
009761 c008      	RJMP _0x2C02D7
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 _0x2C027E:
009762 01fe      	MOVW R30,R28
009763 9634      	ADIW R30,4
009764 93fa      	ST   -Y,R31
009765 93ea      	ST   -Y,R30
                +
009766 edef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1009 ) )
009767 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1009 ) )
009768 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1009 ) )
009769 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1009 ) )
                 	__POINTD1FN _0x2C0000,1009
                 _0x2C02D7:
00976a 940e e05e 	CALL __PUTPARD1
00976c 940e d2e4 	CALL SUBOPT_0x2D3
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                +
00976e eee7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1017 ) )
00976f e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1017 ) )
009770 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1017 ) )
009771 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1017 ) )
                 	__POINTD1FN _0x2C0000,1017
009772 940e c65c 	CALL SUBOPT_0xF0
009774 940e cf23 	CALL SUBOPT_0x251
009776 940e d653 	CALL SUBOPT_0x33C
009778 01fe      	MOVW R30,R28
009779 967c      	ADIW R30,28
00977a 940e c191 	CALL SUBOPT_0x34
00977c 01fe      	MOVW R30,R28
00977d 9678      	ADIW R30,24
00977e 940e c191 	CALL SUBOPT_0x34
009780 940e d658 	CALL SUBOPT_0x33D
009782 a9ac      	LDD  R26,Y+52
009783 a9bd      	LDD  R27,Y+52+1
009784 940e cfbb 	CALL SUBOPT_0x267
009786 940e d661 	CALL SUBOPT_0x33E
009788 940e d66c 	CALL SUBOPT_0x33F
00978a 940e d675 	CALL SUBOPT_0x340
00978c 940e d67c 	CALL SUBOPT_0x341
00978e e28c      	LDI  R24,44
00978f 940e 9de6 	CALL _printDebug
009791 96e0      	ADIW R28,48
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                +
009792 efe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1035 ) )
009793 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1035 ) )
009794 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1035 ) )
009795 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1035 ) )
                 	__POINTD1FN _0x2C0000,1035
009796 940e c65c 	CALL SUBOPT_0xF0
009798 940e cf23 	CALL SUBOPT_0x251
00979a 940e d653 	CALL SUBOPT_0x33C
00979c 01fe      	MOVW R30,R28
00979d 967c      	ADIW R30,28
00979e 940e c191 	CALL SUBOPT_0x34
0097a0 01fe      	MOVW R30,R28
0097a1 9678      	ADIW R30,24
0097a2 940e c191 	CALL SUBOPT_0x34
0097a4 940e d658 	CALL SUBOPT_0x33D
0097a6 a9ac      	LDD  R26,Y+52
0097a7 a9bd      	LDD  R27,Y+52+1
0097a8 940e cfbb 	CALL SUBOPT_0x267
0097aa 940e d661 	CALL SUBOPT_0x33E
0097ac 940e d66c 	CALL SUBOPT_0x33F
0097ae 940e d675 	CALL SUBOPT_0x340
0097b0 940e d67c 	CALL SUBOPT_0x341
0097b2 e28c      	LDI  R24,44
0097b3 940e 7f67 	CALL _printOLED
0097b5 96e0      	ADIW R28,48
                 ; 0016 04CF 
                 ; 0016 04D0 }
0097b6 940e e0d7 	CALL __LOADLOCR4
0097b8 c159      	RJMP _0x20E0035
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 _get_current_sampling:
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
0097b9 940e d68b 	CALL SUBOPT_0x342
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                +
0097bb e2e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1078 ) )
0097bc e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1078 ) )
0097bd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1078 ) )
0097be e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1078 ) )
                 	__POINTD1FN _0x2C0000,1078
0097bf 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
0097c1 85aa      	LDD  R26,Y+10
0097c2 85bb      	LDD  R27,Y+10+1
0097c3 e1e0      	LDI  R30,LOW(3600)
0097c4 e0fe      	LDI  R31,HIGH(3600)
0097c5 940e df9a 	CALL __DIVW21U
0097c7 01af      	MOVW R20,R30
                 ; 0016 04DA     hr_c = period % 3600;
0097c8 85aa      	LDD  R26,Y+10
0097c9 85bb      	LDD  R27,Y+10+1
0097ca e1e0      	LDI  R30,LOW(3600)
0097cb e0fe      	LDI  R31,HIGH(3600)
0097cc 940e dfe8 	CALL __MODW21U
0097ce 83ee      	STD  Y+6,R30
0097cf 83ff      	STD  Y+6+1,R31
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
0097d0 2400      	CLR  R0
0097d1 1604      	CP   R0,R20
0097d2 0605      	CPC  R0,R21
0097d3 f440      	BRSH _0x2C0281
                +
0097d4 3e48     +CPI R20 , LOW ( 1000 )
0097d5 e0e3     +LDI R30 , HIGH ( 1000 )
0097d6 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
0097d7 f420      	BRSH _0x2C0281
0097d8 81ae      	LDD  R26,Y+6
0097d9 81bf      	LDD  R27,Y+6+1
0097da 9710      	SBIW R26,0
0097db f009      	BREQ _0x2C0282
                 _0x2C0281:
0097dc c00b      	RJMP _0x2C0280
                 _0x2C0282:
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                +
0097dd e5e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1126 ) )
0097de e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1126 ) )
0097df e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1126 ) )
0097e0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1126 ) )
                 	__POINTD1FN _0x2C0000,1126
0097e1 940e d691 	CALL SUBOPT_0x343
0097e3 940e c0a5 	CALL SUBOPT_0x12
                 ; 0016 04DD         val[0] = hr / 100;
0097e5 940e d696 	CALL SUBOPT_0x344
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
0097e7 c0b8      	RJMP _0x20E0036
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 _0x2C0280:
0097e8 85aa      	LDD  R26,Y+10
0097e9 85bb      	LDD  R27,Y+10+1
0097ea e3ec      	LDI  R30,LOW(60)
0097eb e0f0      	LDI  R31,HIGH(60)
0097ec 940e df9a 	CALL __DIVW21U
0097ee 018f      	MOVW R16,R30
                 ; 0016 04E6     min_c = period % 60;
0097ef 85aa      	LDD  R26,Y+10
0097f0 85bb      	LDD  R27,Y+10+1
0097f1 e3ec      	LDI  R30,LOW(60)
0097f2 e0f0      	LDI  R31,HIGH(60)
0097f3 940e dfe8 	CALL __MODW21U
0097f5 019f      	MOVW R18,R30
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
0097f6 2400      	CLR  R0
0097f7 1600      	CP   R0,R16
0097f8 0601      	CPC  R0,R17
0097f9 f440      	BRSH _0x2C0284
                +
0097fa 3e08     +CPI R16 , LOW ( 1000 )
0097fb e0e3     +LDI R30 , HIGH ( 1000 )
0097fc 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
0097fd f420      	BRSH _0x2C0284
0097fe 2400      	CLR  R0
0097ff 1602      	CP   R0,R18
009800 0603      	CPC  R0,R19
009801 f009      	BREQ _0x2C0285
                 _0x2C0284:
009802 c00b      	RJMP _0x2C0283
                 _0x2C0285:
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                +
009803 e7e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1158 ) )
009804 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1158 ) )
009805 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1158 ) )
009806 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1158 ) )
                 	__POINTD1FN _0x2C0000,1158
009807 940e d6c2 	CALL SUBOPT_0x345
009809 940e c0a5 	CALL SUBOPT_0x12
                 ; 0016 04E9         val[0] = min / 100;
00980b 940e d6c7 	CALL SUBOPT_0x346
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
00980d c092      	RJMP _0x20E0036
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 _0x2C0283:
00980e 85aa      	LDD  R26,Y+10
00980f 85bb      	LDD  R27,Y+10+1
009810 3ea8      	CPI  R26,LOW(0x3E8)
009811 e0e3      	LDI  R30,HIGH(0x3E8)
009812 07be      	CPC  R27,R30
009813 f5a8      	BRSH _0x2C0286
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                +
009814 e9e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1191 ) )
009815 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1191 ) )
009816 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1191 ) )
009817 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1191 ) )
                 	__POINTD1FN _0x2C0000,1191
009818 940e e05e 	CALL __PUTPARD1
00981a 85ee      	LDD  R30,Y+14
00981b 85ff      	LDD  R31,Y+14+1
00981c 940e c191 	CALL SUBOPT_0x34
00981e 940e c0a5 	CALL SUBOPT_0x12
                 ; 0016 04F3         val[0] = period / 100;
009820 940e d6f3 	CALL SUBOPT_0x347
009822 940e df9a 	CALL __DIVW21U
009824 85a8      	LDD  R26,Y+8
009825 85b9      	LDD  R27,Y+8+1
009826 93ec      	ST   X,R30
                 ; 0016 04F4         val[1] = (period % 100) / 10;
009827 940e d6f3 	CALL SUBOPT_0x347
009829 940e dfe8 	CALL __MODW21U
00982b 01df      	MOVW R26,R30
00982c e0ea      	LDI  R30,LOW(10)
00982d e0f0      	LDI  R31,HIGH(10)
00982e 940e df9a 	CALL __DIVW21U
                +
009830 85a8     +LDD R26 , Y + 8
009831 85b9     +LDD R27 , Y + 8 + 1
009832 9611     +ADIW R26 , 1
009833 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
009834 940e d6f3 	CALL SUBOPT_0x347
009836 940e dfe8 	CALL __MODW21U
009838 01df      	MOVW R26,R30
009839 e0ea      	LDI  R30,LOW(10)
00983a e0f0      	LDI  R31,HIGH(10)
00983b 940e dfe8 	CALL __MODW21U
                +
00983d 85a8     +LDD R26 , Y + 8
00983e 85b9     +LDD R27 , Y + 8 + 1
00983f 9612     +ADIW R26 , 2
009840 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
                 ; 0016 04F6         val[3] = 0;
009841 85a8      	LDD  R26,Y+8
009842 85b9      	LDD  R27,Y+8+1
009843 9613      	ADIW R26,3
009844 e0e0      	LDI  R30,LOW(0)
009845 93ec      	ST   X,R30
                 ; 0016 04F7         return 0;
009846 e0e0      	LDI  R30,LOW(0)
009847 e0f0      	LDI  R31,HIGH(0)
009848 c057      	RJMP _0x20E0036
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 _0x2C0286:
                +
009849 3e08     +CPI R16 , LOW ( 1000 )
00984a e0e3     +LDI R30 , HIGH ( 1000 )
00984b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
00984c f4d0      	BRSH _0x2C0287
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                +
00984d ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1224 ) )
00984e e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1224 ) )
00984f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1224 ) )
009850 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1224 ) )
                 	__POINTD1FN _0x2C0000,1224
009851 940e d6c2 	CALL SUBOPT_0x345
009853 01f9      	MOVW R30,R18
009854 940e c80b 	CALL SUBOPT_0x13D
                 ; 0016 04FC         if(min_c > 30){
                +
009856 312f     +CPI R18 , LOW ( 31 )
009857 e0e0     +LDI R30 , HIGH ( 31 )
009858 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
009859 f010      	BRLO _0x2C0288
                 ; 0016 04FD             min++;
                +
00985a 5f0f     +SUBI R16 , LOW ( - 1 )
00985b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 _0x2C0288:
                +
00985c edee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1264 ) )
00985d e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1264 ) )
00985e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1264 ) )
00985f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1264 ) )
                 	__POINTD1FN _0x2C0000,1264
009860 940e d6c2 	CALL SUBOPT_0x345
009862 940e c0a5 	CALL SUBOPT_0x12
                 ; 0016 0500         val[0] = min / 100;
009864 940e d6c7 	CALL SUBOPT_0x346
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
009866 c039      	RJMP _0x20E0036
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 _0x2C0287:
                +
009867 3e48     +CPI R20 , LOW ( 1000 )
009868 e0e3     +LDI R30 , HIGH ( 1000 )
009869 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
00986a f568      	BRSH _0x2C0289
                 ; 0016 0508         min   = hr_c / 60;
00986b 81ae      	LDD  R26,Y+6
00986c 81bf      	LDD  R27,Y+6+1
00986d e3ec      	LDI  R30,LOW(60)
00986e e0f0      	LDI  R31,HIGH(60)
00986f 940e df9a 	CALL __DIVW21U
009871 018f      	MOVW R16,R30
                 ; 0016 0509         min_c = hr_c % 60;
009872 81ae      	LDD  R26,Y+6
009873 81bf      	LDD  R27,Y+6+1
009874 e3ec      	LDI  R30,LOW(60)
009875 e0f0      	LDI  R31,HIGH(60)
009876 940e dfe8 	CALL __MODW21U
009878 019f      	MOVW R18,R30
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                +
009879 eeec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1278 ) )
00987a e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1278 ) )
00987b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1278 ) )
00987c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1278 ) )
                 	__POINTD1FN _0x2C0000,1278
00987d 940e d691 	CALL SUBOPT_0x343
00987f 01f8      	MOVW R30,R16
009880 940e c191 	CALL SUBOPT_0x34
009882 01f9      	MOVW R30,R18
009883 940e c191 	CALL SUBOPT_0x34
009885 940e c2e6 	CALL SUBOPT_0x66
                 ; 0016 050B         if(min > 30){
                +
009887 310f     +CPI R16 , LOW ( 31 )
009888 e0e0     +LDI R30 , HIGH ( 31 )
009889 071e     +CPC R17 , R30
                 	__CPWRN 16,17,31
00988a f010      	BRLO _0x2C028A
                 ; 0016 050C             hr++;
                +
00988b 5f4f     +SUBI R20 , LOW ( - 1 )
00988c 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 _0x2C028A:
                +
00988d e1eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1325 ) )
00988e e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1325 ) )
00988f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1325 ) )
009890 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1325 ) )
                 	__POINTD1FN _0x2C0000,1325
009891 940e d691 	CALL SUBOPT_0x343
009893 940e c0a5 	CALL SUBOPT_0x12
                 ; 0016 050F         val[0] = hr / 100;
009895 940e d696 	CALL SUBOPT_0x344
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
009897 c008      	RJMP _0x20E0036
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 _0x2C0289:
                +
009898 e2e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1338 ) )
009899 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1338 ) )
00989a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1338 ) )
00989b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1338 ) )
                 	__POINTD1FN _0x2C0000,1338
00989c 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 0517     return -1;
00989e efef      	LDI  R30,LOW(65535)
00989f efff      	LDI  R31,HIGH(65535)
                 _0x20E0036:
0098a0 940e e0d5 	CALL __LOADLOCR6
0098a2 962c      	ADIW R28,12
0098a3 9508      	RET
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 _get_current_vref:
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
0098a4 93ba      	ST   -Y,R27
0098a5 93aa      	ST   -Y,R26
0098a6 9762      	SBIW R28,18
0098a7 940e e0ce 	CALL __SAVELOCR6
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
0098a9 940e d6f8 	CALL SUBOPT_0x348
0098ab 01df      	MOVW R26,R30
0098ac 01cb      	MOVW R24,R22
0098ad 940e c6f1 	CALL SUBOPT_0x10A
0098af 940e de92 	CALL __CMPF12
0098b1 f009      	BREQ PC+2
0098b2 f410      	BRCC PC+3
0098b3 940c 98b8 	JMP  _0x2C028B
                 ; 0016 0526         return -1;
0098b5 efef      	LDI  R30,LOW(65535)
0098b6 efff      	LDI  R31,HIGH(65535)
0098b7 c058      	RJMP _0x20E0034
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 _0x2C028B:
0098b8 940e d6f8 	CALL SUBOPT_0x348
0098ba 940e d6fd 	CALL SUBOPT_0x349
                 ; 0016 052A     ftoa(vref,2,valTmp);
0098bc 940e d702 	CALL SUBOPT_0x34A
0098be e0e2      	LDI  R30,LOW(2)
0098bf 93ea      	ST   -Y,R30
0098c0 01de      	MOVW R26,R28
0098c1 9653      	ADIW R26,19
0098c2 940e a29b 	CALL _ftoa
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
0098c4 01de      	MOVW R26,R28
0098c5 961e      	ADIW R26,14
0098c6 940e a5c7 	CALL _strlen
0098c8 30e4      	CPI  R30,LOW(0x4)
0098c9 e0a0      	LDI  R26,HIGH(0x4)
0098ca 07fa      	CPC  R31,R26
0098cb f019      	BREQ _0x2C028C
0098cc efef      	LDI  R30,LOW(65535)
0098cd efff      	LDI  R31,HIGH(65535)
0098ce c041      	RJMP _0x20E0034
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 _0x2C028C:
                +
0098cf e4ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1375 ) )
0098d0 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1375 ) )
0098d1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1375 ) )
0098d2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1375 ) )
                 	__POINTD1FN _0x2C0000,1375
0098d3 940e e05e 	CALL __PUTPARD1
0098d5 940e d6f8 	CALL SUBOPT_0x348
0098d7 940e e05e 	CALL __PUTPARD1
0098d9 01fe      	MOVW R30,R28
0098da 9676      	ADIW R30,22
0098db 940e c80b 	CALL SUBOPT_0x13D
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
0098dd 85ee      	LDD  R30,Y+14
0098de 53e0      	SUBI R30,LOW(48)
0098df 8da8      	LDD  R26,Y+24
0098e0 8db9      	LDD  R27,Y+24+1
0098e1 93ec      	ST   X,R30
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
0098e2 89e8      	LDD  R30,Y+16
0098e3 53e0      	SUBI R30,LOW(48)
                +
0098e4 8da8     +LDD R26 , Y + 24
0098e5 8db9     +LDD R27 , Y + 24 + 1
0098e6 9611     +ADIW R26 , 1
0098e7 93ec     +ST X , R30
                 	__PUTB1SNS 24,1
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
0098e8 89e9      	LDD  R30,Y+17
0098e9 53e0      	SUBI R30,LOW(48)
                +
0098ea 8da8     +LDD R26 , Y + 24
0098eb 8db9     +LDD R27 , Y + 24 + 1
0098ec 9612     +ADIW R26 , 2
0098ed 93ec     +ST X , R30
                 	__PUTB1SNS 24,2
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                +
0098ee e7e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1417 ) )
0098ef e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1417 ) )
0098f0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1417 ) )
0098f1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1417 ) )
                 	__POINTD1FN _0x2C0000,1417
0098f2 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 0540     for(i=0;i<3;i++){
                +
0098f4 e000     +LDI R16 , LOW ( 0 )
0098f5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C028E:
                +
0098f6 3003     +CPI R16 , LOW ( 3 )
0098f7 e0e0     +LDI R30 , HIGH ( 3 )
0098f8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
0098f9 f474      	BRGE _0x2C028F
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                +
0098fa e9e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1444 ) )
0098fb e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1444 ) )
0098fc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1444 ) )
0098fd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1444 ) )
                 	__POINTD1FN _0x2C0000,1444
0098fe 940e e05e 	CALL __PUTPARD1
009900 01f8      	MOVW R30,R16
009901 8dac      	LDD  R26,Y+28
009902 8dbd      	LDD  R27,Y+28+1
009903 940e c9d4 	CALL SUBOPT_0x182
                 ; 0016 0542     }
                +
009905 5f0f     +SUBI R16 , LOW ( - 1 )
009906 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009907 cfee      	RJMP _0x2C028E
                 _0x2C028F:
                 ; 0016 0543     printDebug("\r\n");
                +
009908 ebe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
009909 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
00990a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
00990b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
00990c 940e c02f 	CALL SUBOPT_0x3
                 ; 0016 0544 
                 ; 0016 0545     return 0;
00990e e0e0      	LDI  R30,LOW(0)
00990f e0f0      	LDI  R31,HIGH(0)
                 _0x20E0034:
009910 940e e0d5 	CALL __LOADLOCR6
                 _0x20E0035:
009912 966a      	ADIW R28,26
009913 9508      	RET
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 _getNetworkInfo:
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
009914 93ba      ; 0016 0551     offset = 7;
009915 93aa      	ST   -Y,R27
009916 9760      	ST   -Y,R26
009917 940e e0d0 	SBIW R28,16
                 	CALL __SAVELOCR4
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                +
009919 e027     +LDI R18 , LOW ( 7 )
00991a e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
00991b 0189      	MOVW R16,R18
                 _0x2C0291:
00991c 940e d707 	CALL SUBOPT_0x34B
00991e f554      	BRGE _0x2C0292
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
00991f 940e d70c 	CALL SUBOPT_0x34C
009921 0fea      	ADD  R30,R26
009922 1ffb      	ADC  R31,R27
009923 93ff      	PUSH R31
009924 93ef      	PUSH R30
009925 940e d712 	CALL SUBOPT_0x34D
009927 93ef      	PUSH R30
009928 940e d720 	CALL SUBOPT_0x34E
00992a 91af      	POP  R26
00992b 0fea      	ADD  R30,R26
00992c 91af      	POP  R26
00992d 91bf      	POP  R27
00992e 940e d72b 	CALL SUBOPT_0x34F
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
009930 940e d734 	CALL SUBOPT_0x350
009932 940e d73a 	CALL SUBOPT_0x351
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
009934 9631      	ADIW R30,1
009935 940e d734 	CALL SUBOPT_0x350
009937 940e d745 	CALL SUBOPT_0x352
009939 940e ccbc 	CALL SUBOPT_0x1FD
00993b 940e d74a 	CALL SUBOPT_0x353
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
00993d 9632      	ADIW R30,2
00993e 940e d734 	CALL SUBOPT_0x350
009940 940e d745 	CALL SUBOPT_0x352
009942 940e cf75 	CALL SUBOPT_0x25D
009944 01db      	MOVW R26,R22
009945 93ec      	ST   X,R30
                 ; 0016 0557     }
                +
009946 5f0f     +SUBI R16 , LOW ( - 1 )
009947 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009948 cfd3      	RJMP _0x2C0291
                 _0x2C0292:
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                +
009949 e02b     +LDI R18 , LOW ( 11 )
00994a e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
00994b 0189      	MOVW R16,R18
                 _0x2C0294:
00994c 940e d707 	CALL SUBOPT_0x34B
00994e f554      	BRGE _0x2C0295
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
00994f 940e d751 	CALL SUBOPT_0x354
009951 0fea      	ADD  R30,R26
009952 1ffb      	ADC  R31,R27
009953 93ff      	PUSH R31
009954 93ef      	PUSH R30
009955 940e d712 	CALL SUBOPT_0x34D
009957 93ef      	PUSH R30
009958 940e d720 	CALL SUBOPT_0x34E
00995a 91af      	POP  R26
00995b 0fea      	ADD  R30,R26
00995c 91af      	POP  R26
00995d 91bf      	POP  R27
00995e 940e d72b 	CALL SUBOPT_0x34F
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
009960 940e d757 	CALL SUBOPT_0x355
009962 940e d73a 	CALL SUBOPT_0x351
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
009964 9631      	ADIW R30,1
009965 940e d757 	CALL SUBOPT_0x355
009967 940e d745 	CALL SUBOPT_0x352
009969 940e ccbc 	CALL SUBOPT_0x1FD
00996b 940e d74a 	CALL SUBOPT_0x353
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
00996d 9632      	ADIW R30,2
00996e 940e d757 	CALL SUBOPT_0x355
009970 940e d745 	CALL SUBOPT_0x352
009972 940e cf75 	CALL SUBOPT_0x25D
009974 01db      	MOVW R26,R22
009975 93ec      	ST   X,R30
                 ; 0016 055F     }
                +
009976 5f0f     +SUBI R16 , LOW ( - 1 )
009977 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009978 cfd3      	RJMP _0x2C0294
                 _0x2C0295:
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                +
009979 e02f     +LDI R18 , LOW ( 15 )
00997a e030     +LDI R19 , HIGH ( 15 )
                 	__GETWRN 18,19,15
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
00997b 0189      	MOVW R16,R18
                 _0x2C0297:
00997c 940e d707 	CALL SUBOPT_0x34B
00997e f554      	BRGE _0x2C0298
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
00997f 940e d75d 	CALL SUBOPT_0x356
009981 0fea      	ADD  R30,R26
009982 1ffb      	ADC  R31,R27
009983 93ff      	PUSH R31
009984 93ef      	PUSH R30
009985 940e d712 	CALL SUBOPT_0x34D
009987 93ef      	PUSH R30
009988 940e d720 	CALL SUBOPT_0x34E
00998a 91af      	POP  R26
00998b 0fea      	ADD  R30,R26
00998c 91af      	POP  R26
00998d 91bf      	POP  R27
00998e 940e d72b 	CALL SUBOPT_0x34F
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
009990 940e d763 	CALL SUBOPT_0x357
009992 940e d73a 	CALL SUBOPT_0x351
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
009994 9631      	ADIW R30,1
009995 940e d763 	CALL SUBOPT_0x357
009997 940e d745 	CALL SUBOPT_0x352
009999 940e ccbc 	CALL SUBOPT_0x1FD
00999b 940e d74a 	CALL SUBOPT_0x353
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
00999d 9632      	ADIW R30,2
00999e 940e d763 	CALL SUBOPT_0x357
0099a0 940e d745 	CALL SUBOPT_0x352
0099a2 940e cf75 	CALL SUBOPT_0x25D
0099a4 01db      	MOVW R26,R22
0099a5 93ec      	ST   X,R30
                 ; 0016 0567     }
                +
0099a6 5f0f     +SUBI R16 , LOW ( - 1 )
0099a7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0099a8 cfd3      	RJMP _0x2C0297
                 _0x2C0298:
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                +
0099a9 e125     +LDI R18 , LOW ( 21 )
0099aa e030     +LDI R19 , HIGH ( 21 )
                 	__GETWRN 18,19,21
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
0099ab 0189      	MOVW R16,R18
                 _0x2C029A:
0099ac 940e d707 	CALL SUBOPT_0x34B
0099ae f5ac      	BRGE _0x2C029B
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0099af 01f8      	MOVW R30,R16
0099b0 1be2      	SUB  R30,R18
0099b1 0bf3      	SBC  R31,R19
0099b2 01de      	MOVW R26,R28
0099b3 9614      	ADIW R26,4
0099b4 0fea      	ADD  R30,R26
0099b5 1ffb      	ADC  R31,R27
0099b6 93ff      	PUSH R31
0099b7 93ef      	PUSH R30
0099b8 940e d712 	CALL SUBOPT_0x34D
0099ba 93ef      	PUSH R30
0099bb 940e d720 	CALL SUBOPT_0x34E
0099bd 91af      	POP  R26
0099be 0fea      	ADD  R30,R26
0099bf 91af      	POP  R26
0099c0 91bf      	POP  R27
0099c1 940e d72b 	CALL SUBOPT_0x34F
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
0099c3 940e d769 	CALL SUBOPT_0x358
0099c5 940e d773 	CALL SUBOPT_0x359
0099c7 01df      	MOVW R26,R30
0099c8 e6e4      	LDI  R30,LOW(100)
0099c9 e0f0      	LDI  R31,HIGH(100)
0099ca 940e dfad 	CALL __DIVW21
0099cc 01db      	MOVW R26,R22
0099cd 940e d72b 	CALL SUBOPT_0x34F
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
0099cf 9631      	ADIW R30,1
0099d0 940e d769 	CALL SUBOPT_0x358
0099d2 91ac      	LD   R26,X
0099d3 27bb      	CLR  R27
0099d4 940e ccbc 	CALL SUBOPT_0x1FD
0099d6 940e d74a 	CALL SUBOPT_0x353
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
0099d8 9632      	ADIW R30,2
0099d9 940e d769 	CALL SUBOPT_0x358
0099db 91ac      	LD   R26,X
0099dc 27bb      	CLR  R27
0099dd 940e cf75 	CALL SUBOPT_0x25D
0099df 01db      	MOVW R26,R22
0099e0 93ec      	ST   X,R30
                 ; 0016 056F     }
                +
0099e1 5f0f     +SUBI R16 , LOW ( - 1 )
0099e2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0099e3 cfc8      	RJMP _0x2C029A
                 _0x2C029B:
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                +
0099e4 e9e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1449 ) )
0099e5 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1449 ) )
0099e6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1449 ) )
0099e7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1449 ) )
                 	__POINTD1FN _0x2C0000,1449
0099e8 940e e05e 	CALL __PUTPARD1
0099ea 89ec      	LDD  R30,Y+20
0099eb 940e c2e0 	CALL SUBOPT_0x65
0099ed 8de9      	LDD  R30,Y+25
0099ee 940e c2e0 	CALL SUBOPT_0x65
0099f0 8dee      	LDD  R30,Y+30
0099f1 940e c2e0 	CALL SUBOPT_0x65
0099f3 a1eb      	LDD  R30,Y+35
0099f4 940e c2e0 	CALL SUBOPT_0x65
0099f6 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                +
0099f8 ebec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1486 ) )
0099f9 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1486 ) )
0099fa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1486 ) )
0099fb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1486 ) )
                 	__POINTD1FN _0x2C0000,1486
0099fc 940e e05e 	CALL __PUTPARD1
0099fe 89e8      	LDD  R30,Y+16
0099ff 940e c2e0 	CALL SUBOPT_0x65
009a01 89ed      	LDD  R30,Y+21
009a02 940e c2e0 	CALL SUBOPT_0x65
009a04 8dea      	LDD  R30,Y+26
009a05 940e c2e0 	CALL SUBOPT_0x65
009a07 8def      	LDD  R30,Y+31
009a08 940e c2e0 	CALL SUBOPT_0x65
009a0a 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                +
009a0c eee1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1523 ) )
009a0d e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1523 ) )
009a0e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1523 ) )
009a0f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1523 ) )
                 	__POINTD1FN _0x2C0000,1523
009a10 940e cc79 	CALL SUBOPT_0x1F6
009a12 89e9      	LDD  R30,Y+17
009a13 940e c2e0 	CALL SUBOPT_0x65
009a15 89ee      	LDD  R30,Y+22
009a16 940e c2e0 	CALL SUBOPT_0x65
009a18 8deb      	LDD  R30,Y+27
009a19 940e c2e0 	CALL SUBOPT_0x65
009a1b 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                +
009a1d e0e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1560 ) )
009a1e e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1560 ) )
009a1f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1560 ) )
009a20 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1560 ) )
                 	__POINTD1FN _0x2C0000,1560
009a21 940e e05e 	CALL __PUTPARD1
009a23 85e8      	LDD  R30,Y+8
009a24 940e c2e0 	CALL SUBOPT_0x65
009a26 85ed      	LDD  R30,Y+13
009a27 940e c2e0 	CALL SUBOPT_0x65
009a29 89ea      	LDD  R30,Y+18
009a2a 940e c2e0 	CALL SUBOPT_0x65
009a2c 89ef      	LDD  R30,Y+23
009a2d 940e c2e0 	CALL SUBOPT_0x65
009a2f 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0016 0575 
                 ; 0016 0576     return 0;
009a31 940e c866 	CALL SUBOPT_0x14D
009a33 966e      	ADIW R28,30
009a34 9508      	RET
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 _set_vref:
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
009a35 940e c651 ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
009a37 930a      	CALL SUBOPT_0xED
                 	ST   -Y,R16
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
009a38 81ae      ;	tmpf -> Y+2
009a39 81bf      	LDD  R26,Y+6
009a3a 940e cadc 	LDD  R27,Y+6+1
009a3c 81ee      	CALL SUBOPT_0x1B1
009a3d 81ff      	LDD  R30,Y+6
009a3e 940e cae1 	LDD  R31,Y+6+1
009a40 81ee      	CALL SUBOPT_0x1B2
009a41 81ff      	LDD  R30,Y+6
009a42 940e d0da 	LDD  R31,Y+6+1
009a44 0fea      	CALL SUBOPT_0x292
009a45 1ffb      	ADD  R30,R26
009a46 018f      	ADC  R31,R27
                 	MOVW R16,R30
009a47 940e cce8 ; 0016 05D9     tmpf = (float) (tmp / 100.0);
009a49 01df      	CALL SUBOPT_0x203
009a4a 01cb      	MOVW R26,R30
                +
009a4b e0e0     +LDI R30 , LOW ( 0x42C80000 )
009a4c e0f0     +LDI R31 , HIGH ( 0x42C80000 )
009a4d ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
009a4e e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
009a4f 940e de4d 	CALL __DIVF21
009a51 940e c4de 	CALL SUBOPT_0xB1
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                +
009a53 e2eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1597 ) )
009a54 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1597 ) )
009a55 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1597 ) )
009a56 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1597 ) )
                 	__POINTD1FN _0x2C0000,1597
009a57 940e c798 	CALL SUBOPT_0x126
009a59 91ec      	LD   R30,X
009a5a 940e c2e0 	CALL SUBOPT_0x65
009a5c 85ee      	LDD  R30,Y+14
009a5d 85ff      	LDD  R31,Y+14+1
009a5e 81e1      	LDD  R30,Z+1
009a5f 940e c2e0 	CALL SUBOPT_0x65
009a61 89ea      	LDD  R30,Y+18
009a62 89fb      	LDD  R31,Y+18+1
009a63 81e2      	LDD  R30,Z+2
009a64 940e c2e0 	CALL SUBOPT_0x65
009a66 01f8      	MOVW R30,R16
009a67 940e cf23 	CALL SUBOPT_0x251
009a69 940e c534 	CALL SUBOPT_0xC1
009a6b 940e e05e 	CALL __PUTPARD1
009a6d e184      	LDI  R24,20
009a6e 940e 9de6 	CALL _printDebug
009a70 9668      	ADIW R28,24
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
009a71 940e c4e3 	CALL SUBOPT_0xB2
009a73 e8a9      	LDI  R26,LOW(_eep_vref_val)
009a74 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009a75 940e e091 	CALL __EEPROMWRD
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
009a77 c07a      	RJMP _0x20E0033
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 _h2i:
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
009a78 93aa      	ST   -Y,R26
                 ;	hex -> Y+0
009a79 81a8      	LD   R26,Y
009a7a 34a1      	CPI  R26,LOW(0x41)
009a7b f010      	BRLO _0x2C029D
009a7c 34a7      	CPI  R26,LOW(0x47)
009a7d f008      	BRLO _0x2C029E
                 _0x2C029D:
009a7e c004      	RJMP _0x2C029C
                 _0x2C029E:
009a7f 940e d776 	CALL SUBOPT_0x35A
009a81 97f7      	SBIW R30,55
009a82 c212      	RJMP _0x20E0030
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 _0x2C029C:
009a83 81a8      	LD   R26,Y
009a84 36a1      	CPI  R26,LOW(0x61)
009a85 f010      	BRLO _0x2C02A1
009a86 36a7      	CPI  R26,LOW(0x67)
009a87 f008      	BRLO _0x2C02A2
                 _0x2C02A1:
009a88 c005      	RJMP _0x2C02A0
                 _0x2C02A2:
009a89 940e d776 	CALL SUBOPT_0x35A
009a8b 55e7      	SUBI R30,LOW(87)
009a8c 40f0      	SBCI R31,HIGH(87)
009a8d c207      	RJMP _0x20E0030
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 _0x2C02A0:
009a8e 81a8      	LD   R26,Y
009a8f 33a0      	CPI  R26,LOW(0x30)
009a90 f010      	BRLO _0x2C02A5
009a91 33aa      	CPI  R26,LOW(0x3A)
009a92 f008      	BRLO _0x2C02A6
                 _0x2C02A5:
009a93 c004      	RJMP _0x2C02A4
                 _0x2C02A6:
009a94 940e d776 	CALL SUBOPT_0x35A
009a96 97f0      	SBIW R30,48
009a97 c1fd      	RJMP _0x20E0030
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 _0x2C02A4:
009a98 e0e0      	LDI  R30,LOW(0)
009a99 e0f0      	LDI  R31,HIGH(0)
009a9a c1fa      	RJMP _0x20E0030
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 _r2ecpy:
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
009a9b 940e c3a0 	CALL SUBOPT_0x81
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009a9d e000     +LDI R16 , LOW ( 0 )
009a9e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AB:
009a9f 940e c3a5 	CALL SUBOPT_0x82
009aa1 f45c      	BRGE _0x2C02AC
                 ; 0016 05FE         dest[i] = src[i];
009aa2 01f8      	MOVW R30,R16
009aa3 940e ca8c 	CALL SUBOPT_0x1A4
009aa5 010f      	MOVW R0,R30
009aa6 940e c3aa 	CALL SUBOPT_0x83
009aa8 940e c7d1 	CALL SUBOPT_0x131
                 ; 0016 05FF     }
                +
009aaa 5f0f     +SUBI R16 , LOW ( - 1 )
009aab 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009aac cff2      	RJMP _0x2C02AB
                 _0x2C02AC:
                 ; 0016 0600     return 0;
009aad c044      	RJMP _0x20E0033
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 _recmp:
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
009aae 940e c3a0 	CALL SUBOPT_0x81
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
009ab0 e000     +LDI R16 , LOW ( 0 )
009ab1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AE:
009ab2 940e c3a5 	CALL SUBOPT_0x82
009ab4 f544      	BRGE _0x2C02AF
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                +
009ab5 e5e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1635 ) )
009ab6 e6f4     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1635 ) )
009ab7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1635 ) )
009ab8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1635 ) )
                 	__POINTD1FN _0x2C0000,1635
009ab9 940e e05e 	CALL __PUTPARD1
009abb 01f8      	MOVW R30,R16
009abc 85aa      	LDD  R26,Y+10
009abd 85bb      	LDD  R27,Y+10+1
009abe 0fae      	ADD  R26,R30
009abf 1fbf      	ADC  R27,R31
009ac0 91ec      	LD   R30,X
009ac1 940e c2e0 	CALL SUBOPT_0x65
009ac3 01f8      	MOVW R30,R16
009ac4 85ac      	LDD  R26,Y+12
009ac5 85bd      	LDD  R27,Y+12+1
009ac6 0fae      	ADD  R26,R30
009ac7 1fbf      	ADC  R27,R31
009ac8 940e e085 	CALL __EEPROMRDB
009aca 940e c2e0 	CALL SUBOPT_0x65
009acc e8ad      	LDI  R26,LOW(_userPwd)
009acd e0b5      	LDI  R27,HIGH(_userPwd)
009ace 940e c67e 	CALL SUBOPT_0xF7
009ad0 940e c2e0 	CALL SUBOPT_0x65
009ad2 e9a1      	LDI  R26,LOW(_servicePwd)
009ad3 e0b5      	LDI  R27,HIGH(_servicePwd)
009ad4 940e c67e 	CALL SUBOPT_0xF7
009ad6 940e c2e0 	CALL SUBOPT_0x65
009ad8 940e c8e9 	CALL SUBOPT_0x15F
                 ; 0016 0609     }
                +
009ada 5f0f     +SUBI R16 , LOW ( - 1 )
009adb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009adc cfd5      	RJMP _0x2C02AE
                 _0x2C02AF:
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                +
009add e000     +LDI R16 , LOW ( 0 )
009ade e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02B1:
009adf 940e c3a5 	CALL SUBOPT_0x82
009ae1 f484      	BRGE _0x2C02B2
                 ; 0016 060C         if(src1[i] != src2[i]){
009ae2 01f8      	MOVW R30,R16
009ae3 940e ce24 	CALL SUBOPT_0x22C
009ae5 900c      	LD   R0,X
009ae6 940e c3aa 	CALL SUBOPT_0x83
009ae8 940e e085 	CALL __EEPROMRDB
009aea 15e0      	CP   R30,R0
009aeb f019      	BREQ _0x2C02B3
                 ; 0016 060D             return -1;
009aec efef      	LDI  R30,LOW(65535)
009aed efff      	LDI  R31,HIGH(65535)
009aee c005      	RJMP _0x20E0032
                 ; 0016 060E         }
                 ; 0016 060F     }
                 _0x2C02B3:
                +
009aef 5f0f     +SUBI R16 , LOW ( - 1 )
009af0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009af1 cfed      	RJMP _0x2C02B1
                 _0x2C02B2:
                 ; 0016 0610     return 0;
                 _0x20E0033:
009af2 e0e0      	LDI  R30,LOW(0)
009af3 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0032:
009af4 8119      	LDD  R17,Y+1
009af5 8108      	LDD  R16,Y+0
009af6 9628      	ADIW R28,8
009af7 9508      	RET
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 ;#include "adc.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;#include "sensor.h"
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;flash unsigned char cmdGetADCSensor[]       = "$CMDGAS";         // -- Get ADC sensor value -- //   ,chID(1)
                 ;
                 ;//flash unsigned char cmdSetSensorType[]   = "$CMDSST";        // -- Set Type Sensor -- //   $CMDSST,01#     //01=TMEC,02=PT100,03=K (AD595)
                 ;
                 ;
                 ;
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void iGetSensorValue(){
                 ; 0017 0027 void iGetSensorValue(){
                 
                 	.CSEG
                 _iGetSensorValue:
                 ; 0017 0028     printDebug("[Get ADC of sensor]\r\n");
                +
009af8 e8ec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
009af9 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
009afa e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
009afb e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
009afc 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 0029     iSensorGetADCValue();
009afe 940e 6a42 	CALL _iSensorGetADCValue
                 ; 0017 002A }
009b00 9508      	RET
                 ;int debugSetSensorType(){
                 ; 0017 002B int debugSetSensorType(){
                 ; 0017 002C     unsigned char i=0;
                 ; 0017 002D     unsigned char buffer[4];
                 ; 0017 002E     unsigned int sensorType;
                 ; 0017 002F     unsigned int pointID;
                 ; 0017 0030     float pointValue;         //std value
                 ; 0017 0031 
                 ; 0017 0032 
                 ; 0017 0033     printDebug("\r\n<Debug>SetCal: \r\n");
                 ;	i -> R17
                 ;	buffer -> Y+10
                 ;	sensorType -> R18,R19
                 ;	pointID -> R20,R21
                 ;	pointValue -> Y+6
                 ; 0017 0034     memset(buffer,0,sizeof(buffer));
                 ; 0017 0035     for(i=0;i<2;i++){
                 ; 0017 0036        buffer[i] = rxPackage3[i+8];
                 ; 0017 0037     }
                 ; 0017 0038     sensorType = atoi(buffer);
                 ; 0017 0039     printDebug("Sensor Type:%d \r\n",sensorType);
                 ; 0017 003A 
                 ; 0017 003B 
                 ; 0017 003C     return 0;
                 ; 0017 003D }
                 ;
                 ;int DEBUG_setDateTime(void)
                 ; 0017 0040 {
                 _DEBUG_setDateTime:
                 ; 0017 0041     unsigned char   i;
                 ; 0017 0042     unsigned char   buffer[32];
                 ; 0017 0043     int             tz;
                 ; 0017 0044 
                 ; 0017 0045     struct rtc_structure rtcSet;
                 ; 0017 0046 
                 ; 0017 0047     for(i=0;i<4;i++)
009b01 97ea      	SBIW R28,58
009b02 940e e0d0 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
009b04 e010      	LDI  R17,LOW(0)
                 _0x2E0008:
009b05 3014      	CPI  R17,4
009b06 f450      	BRSH _0x2E0009
                 ; 0017 0048     {
                 ; 0017 0049         buffer[i] = rxPackage3[i+8];
009b07 940e c4c1 	CALL SUBOPT_0xAB
009b09 940e d779 	CALL SUBOPT_0x35B
                +
009b0b 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009b0c 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009b0d 81e0      	LD   R30,Z
009b0e 93ec      	ST   X,R30
                 ; 0017 004A     }
009b0f 5f1f      	SUBI R17,-1
009b10 cff4      	RJMP _0x2E0008
                 _0x2E0009:
                 ; 0017 004B     buffer[4] = 0;
009b11 940e d77e 	CALL SUBOPT_0x35C
                 ; 0017 004C 
                 ; 0017 004D     rtcSet.year = atol(buffer);
009b13 940e c4aa 	CALL SUBOPT_0xA7
                 ; 0017 004E 
                 ; 0017 004F     printDebug("get year = %d\r\n",rtcSet.year);
                +
009b15 ece8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 60 ) )
009b16 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 60 ) )
009b17 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 60 ) )
009b18 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 60 ) )
                 	__POINTD1FN _0x2E0000,60
009b19 940e cc5e 	CALL SUBOPT_0x1F0
009b1b 940e ca02 	CALL SUBOPT_0x189
                 ; 0017 0050 
                 ; 0017 0051     for(i=0;i<2;i++)
009b1d e010      	LDI  R17,LOW(0)
                 _0x2E000B:
009b1e 3012      	CPI  R17,2
009b1f f450      	BRSH _0x2E000C
                 ; 0017 0052     {
                 ; 0017 0053         buffer[i] = rxPackage3[i+13];
009b20 940e c4c1 	CALL SUBOPT_0xAB
009b22 940e d779 	CALL SUBOPT_0x35B
                +
009b24 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
009b25 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
009b26 81e0      	LD   R30,Z
009b27 93ec      	ST   X,R30
                 ; 0017 0054     }
009b28 5f1f      	SUBI R17,-1
009b29 cff4      	RJMP _0x2E000B
                 _0x2E000C:
                 ; 0017 0055     buffer[2] = 0;
009b2a 940e d784 	CALL SUBOPT_0x35D
                 ; 0017 0056 
                 ; 0017 0057     rtcSet.month = atol(buffer);
009b2c 940e d78a 	CALL SUBOPT_0x35E
                 ; 0017 0058 
                 ; 0017 0059     printDebug("get month = %d\r\n",rtcSet.month);
                +
009b2e ede8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 76 ) )
009b2f e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 76 ) )
009b30 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 76 ) )
009b31 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 76 ) )
                 	__POINTD1FN _0x2E0000,76
009b32 940e c3e8 	CALL SUBOPT_0x8D
009b34 940e ca02 	CALL SUBOPT_0x189
                 ; 0017 005A 
                 ; 0017 005B     for(i=0;i<2;i++)
009b36 e010      	LDI  R17,LOW(0)
                 _0x2E000E:
009b37 3012      	CPI  R17,2
009b38 f450      	BRSH _0x2E000F
                 ; 0017 005C     {
                 ; 0017 005D         buffer[i] = rxPackage3[i+16];
009b39 940e c4c1 	CALL SUBOPT_0xAB
009b3b 940e d779 	CALL SUBOPT_0x35B
                +
009b3d 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
009b3e 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
009b3f 81e0      	LD   R30,Z
009b40 93ec      	ST   X,R30
                 ; 0017 005E     }
009b41 5f1f      	SUBI R17,-1
009b42 cff4      	RJMP _0x2E000E
                 _0x2E000F:
                 ; 0017 005F     buffer[2] = 0;
009b43 940e d784 	CALL SUBOPT_0x35D
                 ; 0017 0060 
                 ; 0017 0061     rtcSet.date = atol(buffer);
009b45 940e c63c 	CALL SUBOPT_0xE9
                 ; 0017 0062 
                 ; 0017 0063     printDebug("get date = %d\r\n",rtcSet.date);
                +
009b47 eee9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 93 ) )
009b48 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 93 ) )
009b49 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 93 ) )
009b4a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 93 ) )
                 	__POINTD1FN _0x2E0000,93
009b4b 940e c2a1 	CALL SUBOPT_0x5B
009b4d 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 0064 
                 ; 0017 0065     for(i=0;i<2;i++)
009b4f e010      	LDI  R17,LOW(0)
                 _0x2E0011:
009b50 3012      	CPI  R17,2
009b51 f450      	BRSH _0x2E0012
                 ; 0017 0066     {
                 ; 0017 0067         buffer[i] = rxPackage3[i+19];
009b52 940e c4c1 	CALL SUBOPT_0xAB
009b54 940e d779 	CALL SUBOPT_0x35B
                +
009b56 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
009b57 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
009b58 81e0      	LD   R30,Z
009b59 93ec      	ST   X,R30
                 ; 0017 0068     }
009b5a 5f1f      	SUBI R17,-1
009b5b cff4      	RJMP _0x2E0011
                 _0x2E0012:
                 ; 0017 0069     buffer[2] = 0;
009b5c 940e d784 	CALL SUBOPT_0x35D
                 ; 0017 006A 
                 ; 0017 006B     rtcSet.hour = atol(buffer);
009b5e 940e d78f 	CALL SUBOPT_0x35F
                 ; 0017 006C 
                 ; 0017 006D     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
009b60 efe9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 109 ) )
009b61 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 109 ) )
009b62 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 109 ) )
009b63 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 109 ) )
                 	__POINTD1FN _0x2E0000,109
009b64 940e e05e 	CALL __PUTPARD1
009b66 940e c5dd 	CALL SUBOPT_0xDB
009b68 940e ca02 	CALL SUBOPT_0x189
                 ; 0017 006E 
                 ; 0017 006F     for(i=0;i<2;i++)
009b6a e010      	LDI  R17,LOW(0)
                 _0x2E0014:
009b6b 3012      	CPI  R17,2
009b6c f450      	BRSH _0x2E0015
                 ; 0017 0070     {
                 ; 0017 0071         buffer[i] = rxPackage3[i+22];
009b6d 940e c4c1 	CALL SUBOPT_0xAB
009b6f 940e d779 	CALL SUBOPT_0x35B
                +
009b71 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
009b72 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
009b73 81e0      	LD   R30,Z
009b74 93ec      	ST   X,R30
                 ; 0017 0072     }
009b75 5f1f      	SUBI R17,-1
009b76 cff4      	RJMP _0x2E0014
                 _0x2E0015:
                 ; 0017 0073     buffer[2] = 0;
009b77 940e d784 	CALL SUBOPT_0x35D
                 ; 0017 0074 
                 ; 0017 0075     rtcSet.min = atol(buffer);
009b79 940e cdee 	CALL SUBOPT_0x224
                 ; 0017 0076 
                 ; 0017 0077     printDebug("get min = %d\r\n",rtcSet.min);
                +
009b7b e0e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 125 ) )
009b7c e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 125 ) )
009b7d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 125 ) )
009b7e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 125 ) )
                 	__POINTD1FN _0x2E0000,125
009b7f 940e e05e 	CALL __PUTPARD1
009b81 940e c661 	CALL SUBOPT_0xF1
009b83 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 0078 
                 ; 0017 0079     for(i=0;i<2;i++)
009b85 e010      	LDI  R17,LOW(0)
                 _0x2E0017:
009b86 3012      	CPI  R17,2
009b87 f450      	BRSH _0x2E0018
                 ; 0017 007A     {
                 ; 0017 007B         buffer[i] = rxPackage3[i+25];
009b88 940e c4c1 	CALL SUBOPT_0xAB
009b8a 940e d779 	CALL SUBOPT_0x35B
                +
009b8c 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
009b8d 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
009b8e 81e0      	LD   R30,Z
009b8f 93ec      	ST   X,R30
                 ; 0017 007C     }
009b90 5f1f      	SUBI R17,-1
009b91 cff4      	RJMP _0x2E0017
                 _0x2E0018:
                 ; 0017 007D     buffer[2] = 0;
009b92 940e d784 	CALL SUBOPT_0x35D
                 ; 0017 007E 
                 ; 0017 007F     rtcSet.sec = atol(buffer);
009b94 940e cde9 	CALL SUBOPT_0x223
                 ; 0017 0080 
                 ; 0017 0081     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
009b96 e1e8     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 140 ) )
009b97 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 140 ) )
009b98 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 140 ) )
009b99 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 140 ) )
                 	__POINTD1FN _0x2E0000,140
009b9a 940e e05e 	CALL __PUTPARD1
                +
009b9c 8dec     +LDD R30 , Y + 28
009b9d 8dfd     +LDD R31 , Y + 28 + 1
009b9e 8d6e     +LDD R22 , Y + 28 + 2
009b9f 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
009ba0 940e ca02 	CALL SUBOPT_0x189
                 ; 0017 0082 
                 ; 0017 0083     for(i=0;i<3;i++)
009ba2 e010      	LDI  R17,LOW(0)
                 _0x2E001A:
009ba3 3013      	CPI  R17,3
009ba4 f450      	BRSH _0x2E001B
                 ; 0017 0084     {
                 ; 0017 0085         buffer[i] = rxPackage3[i+28];
009ba5 940e c4c1 	CALL SUBOPT_0xAB
009ba7 940e d779 	CALL SUBOPT_0x35B
                +
009ba9 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
009baa 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
009bab 81e0      	LD   R30,Z
009bac 93ec      	ST   X,R30
                 ; 0017 0086     }
009bad 5f1f      	SUBI R17,-1
009bae cff4      	RJMP _0x2E001A
                 _0x2E001B:
                 ; 0017 0087     buffer[4] = 0;
009baf 940e d77e 	CALL SUBOPT_0x35C
                 ; 0017 0088 
                 ; 0017 0089     tz = atol(buffer);
009bb1 019f      	MOVW R18,R30
                 ; 0017 008A 
                 ; 0017 008B     printDebug("get timezone = %+d\r\n",tz);
                +
009bb2 e2e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 155 ) )
009bb3 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 155 ) )
009bb4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 155 ) )
009bb5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 155 ) )
                 	__POINTD1FN _0x2E0000,155
009bb6 940e c09d 	CALL SUBOPT_0x11
009bb8 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 008C 
                 ; 0017 008D     RTC_setDateTime(rtcSet,tz);
009bba 01fe      	MOVW R30,R28
009bbb 9634      	ADIW R30,4
009bbc e1aa      	LDI  R26,26
009bbd 940e e068 	CALL __PUTPARL
009bbf 01d9      	MOVW R26,R18
009bc0 940e 4786 	CALL _RTC_setDateTime
                 ; 0017 008E 
                 ; 0017 008F     return 0;
009bc2 940e c866 	CALL SUBOPT_0x14D
009bc4 96ee      	ADIW R28,62
009bc5 9508      	RET
                 ; 0017 0090 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 0093 {
                 _DEBUG_resetAlarm:
                 ; 0017 0094     resetAlarm();
009bc6 940e 7d30 	CALL _resetAlarm
                 ; 0017 0095 
                 ; 0017 0096     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
009bc8 e3ec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 176 ) )
009bc9 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 176 ) )
009bca e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 176 ) )
009bcb e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 176 ) )
                 	__POINTD1FN _0x2E0000,176
009bcc 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 0097 }
009bce 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 009A {
                 _DEBUG_ClearLogFile:
                 ; 0017 009B     int         res;
                 ; 0017 009C 
                 ; 0017 009D     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
009bcf 931a      	ST   -Y,R17
009bd0 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
009bd1 e5ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 211 ) )
009bd2 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 211 ) )
009bd3 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 211 ) )
009bd4 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 211 ) )
                 	__POINTD1FN _0x2E0000,211
009bd5 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 009E 
                 ; 0017 009F     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
009bd7 940e d160 	CALL SUBOPT_0x2A8
                 ; 0017 00A0     if(res < 0)
009bd9 f432      	BRPL _0x2E001C
                 ; 0017 00A1     {
                 ; 0017 00A2         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
009bda 940e d794 	CALL SUBOPT_0x360
009bdc 940e c2b9 	CALL SUBOPT_0x5F
009bde 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 00A3     }
                 ; 0017 00A4 
                 ; 0017 00A5     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E001C:
009be0 940e d18c 	CALL SUBOPT_0x2AE
                 ; 0017 00A6     if(res < 0)
009be2 f432      	BRPL _0x2E001D
                 ; 0017 00A7     {
                 ; 0017 00A8         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
009be3 940e d794 	CALL SUBOPT_0x360
009be5 940e c300 	CALL SUBOPT_0x6A
009be7 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 00A9     }
                 ; 0017 00AA 
                 ; 0017 00AB     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E001D:
009be9 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
009bea e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
009beb 93fa      	ST   -Y,R31
009bec 93ea      	ST   -Y,R30
009bed e0e1      	LDI  R30,LOW(1)
009bee 93ea      	ST   -Y,R30
009bef 940e ca35 	CALL SUBOPT_0x194
009bf1 940e 84ed 	CALL _LOG_createFile
009bf3 018f      	MOVW R16,R30
                 ; 0017 00AC     if(res < 0)
009bf4 2311      	TST  R17
009bf5 f432      	BRPL _0x2E001E
                 ; 0017 00AD     {
                 ; 0017 00AE         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
009bf6 940e d794 	CALL SUBOPT_0x360
009bf8 940e d1da 	CALL SUBOPT_0x2B6
009bfa 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 00AF     }
                 ; 0017 00B0 
                 ; 0017 00B1     return;
                 _0x2E001E:
009bfc 9109      	LD   R16,Y+
009bfd 9119      	LD   R17,Y+
009bfe 9508      	RET
                 ; 0017 00B2 }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 00B5 {
                 _DEBUG_setRealVref:
                 ; 0017 00B6     unsigned char i;
                 ; 0017 00B7     unsigned char rxStrSetVREF[6];
                 ; 0017 00B8 
                 ; 0017 00B9     for(i=0;i<=5;i++)
009bff 9726      	SBIW R28,6
009c00 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
009c01 e010      	LDI  R17,LOW(0)
                 _0x2E0020:
009c02 3016      	CPI  R17,6
009c03 f450      	BRSH _0x2E0021
                 ; 0017 00BA     {
                 ; 0017 00BB         rxStrSetVREF[i] = rxPackage3[i+8];
009c04 940e c4c1 	CALL SUBOPT_0xAB
009c06 940e d799 	CALL SUBOPT_0x361
                +
009c08 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009c09 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009c0a 81e0      	LD   R30,Z
009c0b 93ec      	ST   X,R30
                 ; 0017 00BC     }
009c0c 5f1f      	SUBI R17,-1
009c0d cff4      	RJMP _0x2E0020
                 _0x2E0021:
                 ; 0017 00BD     rxStrSetVREF[5] = '\0';
009c0e e0e0      	LDI  R30,LOW(0)
009c0f 83ee      	STD  Y+6,R30
                 ; 0017 00BE     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
009c10 ebec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 304 ) )
009c11 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 304 ) )
009c12 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 304 ) )
009c13 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 304 ) )
                 	__POINTD1FN _0x2E0000,304
009c14 940e e05e 	CALL __PUTPARD1
009c16 01fe      	MOVW R30,R28
009c17 9635      	ADIW R30,5
009c18 940e c191 	CALL SUBOPT_0x34
009c1a 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 00BF     eep_vref_val = (atof(rxStrSetVREF));
009c1c 01de      	MOVW R26,R28
009c1d 9611      	ADIW R26,1
009c1e 940e a358 	CALL _atof
009c20 e8a9      	LDI  R26,LOW(_eep_vref_val)
009c21 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009c22 940e e091 	CALL __EEPROMWRD
                 ; 0017 00C0     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
009c24 eeea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 350 ) )
009c25 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 350 ) )
009c26 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 350 ) )
009c27 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 350 ) )
                 	__POINTD1FN _0x2E0000,350
009c28 940e e05e 	CALL __PUTPARD1
009c2a e8a9      	LDI  R26,LOW(_eep_vref_val)
009c2b e0b5      	LDI  R27,HIGH(_eep_vref_val)
009c2c 940e c856 	CALL SUBOPT_0x14A
                 ; 0017 00C1 }
009c2e 8118      	LDD  R17,Y+0
009c2f 9627      	ADIW R28,7
009c30 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 00C4 {
                 _DEBUG_sensorSelect:
                 ; 0017 00C5     unsigned char ch[2];
                 ; 0017 00C6 
                 ; 0017 00C7     if(TEMP_SEL != TEMP_TYPE_K){
009c31 9722      	SBIW R28,2
                 ;	ch -> Y+0
009c32 940e c15f 	CALL SUBOPT_0x2E
009c34 f039      	BREQ _0x2E0022
                 ; 0017 00C8         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
009c35 e1e3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 391 ) )
009c36 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 391 ) )
009c37 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 391 ) )
009c38 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 391 ) )
                 	__POINTD1FN _0x2E0000,391
009c39 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 00C9         return;
009c3b c044      	RJMP _0x20E0031
                 ; 0017 00CA     }
                 ; 0017 00CB 
                 ; 0017 00CC     if(rxPackage3[8] == 'N'){
                 _0x2E0022:
                +
009c3c 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009c3e 34ae      	CPI  R26,LOW(0x4E)
009c3f f449      	BRNE _0x2E0023
                 ; 0017 00CD         hwCalId     = 9;
009c40 940e d79e 	CALL SUBOPT_0x362
                 ; 0017 00CE         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
009c42 e4e6     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 442 ) )
009c43 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 442 ) )
009c44 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 442 ) )
009c45 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 442 ) )
                 	__POINTD1FN _0x2E0000,442
009c46 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 00CF     }
                 ; 0017 00D0     else if(isdigit(rxPackage3[8])){
009c48 c037      	RJMP _0x2E0024
                 _0x2E0023:
                +
009c49 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009c4b 940e bf9f 	CALL _isdigit
009c4d 30e0      	CPI  R30,0
009c4e f109      	BREQ _0x2E0025
                 ; 0017 00D1         ch[0]       = rxPackage3[8];
                +
009c4f 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009c51 83e8      	ST   Y,R30
                 ; 0017 00D2         ch[1]       = '\0';
009c52 e0e0      	LDI  R30,LOW(0)
009c53 83e9      	STD  Y+1,R30
                 ; 0017 00D3         hwCalId     = atoi(ch);
009c54 01de      	MOVW R26,R28
009c55 940e a21e 	CALL _atoi
009c57 93e0 10f4 	STS  _hwCalId,R30
009c59 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 00D4 
                 ; 0017 00D5         SENSOR_SELECT(hwCalId);
009c5b 940e c484 	CALL SUBOPT_0xA1
009c5d 91e0 10f4 	LDS  R30,_hwCalId
009c5f 0fee      	LSL  R30
009c60 2bea      	OR   R30,R26
009c61 2da0      	MOV  R26,R0
009c62 93ec      	ST   X,R30
                 ; 0017 00D6         delay_ms(50);           // -- for multiplex stable -- //
009c63 940e c36b 	CALL SUBOPT_0x7A
                 ; 0017 00D7 
                 ; 0017 00D8         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
009c65 e6ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 483 ) )
009c66 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 483 ) )
009c67 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 483 ) )
009c68 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 483 ) )
                 	__POINTD1FN _0x2E0000,483
009c69 940e c171 	CALL SUBOPT_0x30
009c6b 940e c191 	CALL SUBOPT_0x34
009c6d 940e c0a5 	CALL SUBOPT_0x12
                 ; 0017 00D9     }
                 ; 0017 00DA     else{
009c6f c010      	RJMP _0x2E0026
                 _0x2E0025:
                 ; 0017 00DB         hwCalId     = 9;
009c70 940e d79e 	CALL SUBOPT_0x362
                 ; 0017 00DC         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
009c72 e9eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 527 ) )
009c73 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 527 ) )
009c74 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 527 ) )
009c75 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 527 ) )
                 	__POINTD1FN _0x2E0000,527
009c76 940e e05e 	CALL __PUTPARD1
                +
009c78 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009c7a 940e c2e0 	CALL SUBOPT_0x65
                +
009c7c 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009c7e 940e ce35 	CALL SUBOPT_0x22F
                 ; 0017 00DD     }
                 _0x2E0026:
                 _0x2E0024:
                 ; 0017 00DE 
                 ; 0017 00DF     return;
                 _0x20E0031:
009c80 9622      	ADIW R28,2
009c81 9508      	RET
                 ; 0017 00E0 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 00E3 {
                 _DEBUG_setDeviceEnable:
                 ; 0017 00E4     if(flag){
009c82 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
009c83 81e8      	LD   R30,Y
009c84 30e0      	CPI  R30,0
009c85 f021      	BREQ _0x2E0027
                 ; 0017 00E5         config_oper.deviceEnable        =   0x01;
                +
009c86 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009c87 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009c88 e0e1      	LDI  R30,LOW(1)
009c89 c003      	RJMP _0x2E0068
                 ; 0017 00E6     }
                 ; 0017 00E7     else{
                 _0x2E0027:
                 ; 0017 00E8         config_oper.deviceEnable        =   0x00;
                +
009c8a eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009c8b e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009c8c e0e0      	LDI  R30,LOW(0)
                 _0x2E0068:
009c8d 940e e0a1 	CALL __EEPROMWRB
                 ; 0017 00E9     }
                 ; 0017 00EA 
                 ; 0017 00EB     config_oper_flag                    =   0x01;
009c8f e4a3      	LDI  R26,LOW(_config_oper_flag)
009c90 e0b5      	LDI  R27,HIGH(_config_oper_flag)
009c91 940e c7d6 	CALL SUBOPT_0x132
                 ; 0017 00EC     is_operating_config_update          =   1;
009c93 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 00ED 
                 ; 0017 00EE     return;
                 _0x20E0030:
009c95 9621      	ADIW R28,1
009c96 9508      	RET
                 ; 0017 00EF }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 00F2 {
                 _DEBUG_setSerialNumber:
                 ; 0017 00F3     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 00F4     unsigned char i;
                 ; 0017 00F5     unsigned char set_str[24];
                 ; 0017 00F6 
                 ; 0017 00F7     for(i=0;i<24;i++){
009c97 9768      	SBIW R28,24
009c98 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
009c99 e010      	LDI  R17,LOW(0)
                 _0x2E002A:
009c9a 3118      	CPI  R17,24
009c9b f598      	BRSH _0x2E002B
                 ; 0017 00F8         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
009c9c 940e c4c1 	CALL SUBOPT_0xAB
                +
009c9e 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009c9f 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009ca0 81a0      	LD   R26,Z
009ca1 32ac      	CPI  R26,LOW(0x2C)
009ca2 f021      	BREQ _0x2E002D
009ca3 940e bfbc 	CALL _isxdigit
009ca5 30e0      	CPI  R30,0
009ca6 f009      	BREQ _0x2E002E
                 _0x2E002D:
009ca7 c013      	RJMP _0x2E002C
                 _0x2E002E:
                 ; 0017 00F9             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
009ca8 edea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 590 ) )
009ca9 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 590 ) )
009caa e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 590 ) )
009cab e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 590 ) )
                 	__POINTD1FN _0x2E0000,590
009cac 940e d7a5 	CALL SUBOPT_0x363
                +
009cae 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009caf 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009cb0 81e0      	LD   R30,Z
009cb1 940e c2e0 	CALL SUBOPT_0x65
009cb3 940e c4c1 	CALL SUBOPT_0xAB
                +
009cb5 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009cb6 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009cb7 81e0      	LD   R30,Z
009cb8 940e ce35 	CALL SUBOPT_0x22F
                 ; 0017 00FA             return;
009cba c09d      	RJMP _0x20E002F
                 ; 0017 00FB         }
                 ; 0017 00FC         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E002C:
009cbb 940e c4c1 	CALL SUBOPT_0xAB
009cbd 010f      	MOVW R0,R30
009cbe 01de      	MOVW R26,R28
009cbf 9611      	ADIW R26,1
009cc0 0fea      	ADD  R30,R26
009cc1 1ffb      	ADC  R31,R27
009cc2 93ff      	PUSH R31
009cc3 93ef      	PUSH R30
009cc4 01f0      	MOVW R30,R0
                +
009cc5 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009cc6 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009cc7 81a0      	LD   R26,Z
009cc8 940e bfcb 	CALL _tolower
009cca 91af      	POP  R26
009ccb 91bf      	POP  R27
009ccc 93ec      	ST   X,R30
                 ; 0017 00FD     }
009ccd 5f1f      	SUBI R17,-1
009cce cfcb      	RJMP _0x2E002A
                 _0x2E002B:
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
009ccf e1e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 651 ) )
009cd0 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 651 ) )
009cd1 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 651 ) )
009cd2 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 651 ) )
                 	__POINTD1FN _0x2E0000,651
009cd3 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 0100 
                 ; 0017 0101     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
009cd5 e4eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 703 ) )
009cd6 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 703 ) )
009cd7 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 703 ) )
009cd8 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 703 ) )
                 	__POINTD1FN _0x2E0000,703
009cd9 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 0102     for(i=0;i<24;i++){
009cdb e010      	LDI  R17,LOW(0)
                 _0x2E0030:
009cdc 3118      	CPI  R17,24
009cdd f010      	BRLO PC+3
009cde 940c 9d49 	JMP _0x2E0031
                 ; 0017 0103         if((i%3) == 0)      {   continue;                       }
009ce0 940e d7a9 	CALL SUBOPT_0x364
009ce2 9730      	SBIW R30,0
009ce3 f409      	BRNE _0x2E0032
009ce4 c062      	RJMP _0x2E002F
                 ; 0017 0104         else if((i%3) == 1) {
                 _0x2E0032:
009ce5 940e d7a9 	CALL SUBOPT_0x364
009ce7 30e1      	CPI  R30,LOW(0x1)
009ce8 e0a0      	LDI  R26,HIGH(0x1)
009ce9 07fa      	CPC  R31,R26
009cea f581      	BRNE _0x2E0034
                 ; 0017 0105 
                 ; 0017 0106             printDebug("[%c",set_str[i]);
                +
009ceb e7e3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 743 ) )
009cec e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 743 ) )
009ced e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 743 ) )
009cee e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 743 ) )
                 	__POINTD1FN _0x2E0000,743
009cef 940e d7a5 	CALL SUBOPT_0x363
009cf1 01de      	MOVW R26,R28
009cf2 9615      	ADIW R26,5
009cf3 940e c9d4 	CALL SUBOPT_0x182
                 ; 0017 0107 
                 ; 0017 0108             DEVICE_SERIAL[i/3]      = 0x00;
009cf5 940e d7b0 	CALL SUBOPT_0x365
009cf7 01df      	MOVW R26,R30
009cf8 e0e0      	LDI  R30,LOW(0)
009cf9 940e e0a1 	CALL __EEPROMWRB
                 ; 0017 0109 
                 ; 0017 010A             if(isdigit(set_str[i])){
009cfb 940e c4c1 	CALL SUBOPT_0xAB
009cfd 940e d799 	CALL SUBOPT_0x361
009cff 940e d7b9 	CALL SUBOPT_0x366
009d01 f051      	BREQ _0x2E0035
                 ; 0017 010B                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
009d02 940e d7b0 	CALL SUBOPT_0x365
009d04 010f      	MOVW R0,R30
009d05 940e c4c1 	CALL SUBOPT_0xAB
009d07 940e d799 	CALL SUBOPT_0x361
009d09 91ec      	LD   R30,X
009d0a 53e0      	SUBI R30,LOW(48)
009d0b c009      	RJMP _0x2E0069
                 ; 0017 010C             }
                 ; 0017 010D             else{
                 _0x2E0035:
                 ; 0017 010E                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
009d0c 940e d7b0 	CALL SUBOPT_0x365
009d0e 010f      	MOVW R0,R30
009d0f 940e c4c1 	CALL SUBOPT_0xAB
009d11 940e d799 	CALL SUBOPT_0x361
009d13 91ec      	LD   R30,X
009d14 55e7      	SUBI R30,LOW(87)
                 _0x2E0069:
009d15 95e2      	SWAP R30
009d16 7fe0      	ANDI R30,0xF0
009d17 01d0      	MOVW R26,R0
009d18 940e e0a1 	CALL __EEPROMWRB
                 ; 0017 010F             }
                 ; 0017 0110         }
                 ; 0017 0111         else if((i%3) == 2) {
009d1a c02c      	RJMP _0x2E0037
                 _0x2E0034:
009d1b 940e d7a9 	CALL SUBOPT_0x364
009d1d 30e2      	CPI  R30,LOW(0x2)
009d1e e0a0      	LDI  R26,HIGH(0x2)
009d1f 07fa      	CPC  R31,R26
009d20 f531      	BRNE _0x2E0038
                 ; 0017 0112 
                 ; 0017 0113             printDebug("%c]",set_str[i]);
                +
009d21 e7e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 747 ) )
009d22 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 747 ) )
009d23 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 747 ) )
009d24 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 747 ) )
                 	__POINTD1FN _0x2E0000,747
009d25 940e d7a5 	CALL SUBOPT_0x363
009d27 01de      	MOVW R26,R28
009d28 9615      	ADIW R26,5
009d29 940e c9d4 	CALL SUBOPT_0x182
                 ; 0017 0114 
                 ; 0017 0115             if(isdigit(set_str[i])){
009d2b 940e c4c1 	CALL SUBOPT_0xAB
009d2d 940e d799 	CALL SUBOPT_0x361
009d2f 940e d7b9 	CALL SUBOPT_0x366
009d31 f049      	BREQ _0x2E0039
                 ; 0017 0116                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
009d32 940e d7b0 	CALL SUBOPT_0x365
009d34 940e d7be 	CALL SUBOPT_0x367
009d36 940e d799 	CALL SUBOPT_0x361
009d38 91ec      	LD   R30,X
009d39 53e0      	SUBI R30,LOW(48)
009d3a c008      	RJMP _0x2E006A
                 ; 0017 0117             }
                 ; 0017 0118             else{
                 _0x2E0039:
                 ; 0017 0119                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
009d3b 940e d7b0 	CALL SUBOPT_0x365
009d3d 940e d7be 	CALL SUBOPT_0x367
009d3f 940e d799 	CALL SUBOPT_0x361
009d41 91ec      	LD   R30,X
009d42 55e7      	SUBI R30,LOW(87)
                 _0x2E006A:
009d43 29e0      	OR   R30,R0
009d44 01db      	MOVW R26,R22
009d45 940e e0a1 	CALL __EEPROMWRB
                 ; 0017 011A             }
                 ; 0017 011B         }
                 ; 0017 011C     }
                 _0x2E0038:
                 _0x2E0037:
                 _0x2E002F:
009d47 5f1f      	SUBI R17,-1
009d48 cf93      	RJMP _0x2E0030
                 _0x2E0031:
                 ; 0017 011D 
                 ; 0017 011E     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
009d49 e7eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 751 ) )
009d4a e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 751 ) )
009d4b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 751 ) )
009d4c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 751 ) )
                 	__POINTD1FN _0x2E0000,751
009d4d 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 011F     for(i=0;i<8;i++){
009d4f e010      	LDI  R17,LOW(0)
                 _0x2E003C:
009d50 3018      	CPI  R17,8
009d51 f420      	BRSH _0x2E003D
                 ; 0017 0120         printDebug("[%02X]",DEVICE_SERIAL[i]);
009d52 940e d7c5 	CALL SUBOPT_0x368
                 ; 0017 0121     }
009d54 5f1f      	SUBI R17,-1
009d55 cffa      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 0122     printDebug("\r\n");
009d56 940e d7d1 	CALL SUBOPT_0x369
                 ; 0017 0123 
                 ; 0017 0124     return;
                 _0x20E002F:
009d58 8118      	LDD  R17,Y+0
009d59 9669      	ADIW R28,25
009d5a 9508      	RET
                 ; 0017 0125 }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 0128 {
                 _DEBUG_readSerialNumber:
                 ; 0017 0129     unsigned char i;
                 ; 0017 012A 
                 ; 0017 012B     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
009d5b 931a      	ST   -Y,R17
                 ;	i -> R17
                +
009d5c ebe4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 808 ) )
009d5d e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 808 ) )
009d5e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 808 ) )
009d5f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 808 ) )
                 	__POINTD1FN _0x2E0000,808
009d60 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 012C     for(i=0;i<8;i++){
009d62 e010      	LDI  R17,LOW(0)
                 _0x2E003F:
009d63 3018      	CPI  R17,8
009d64 f420      	BRSH _0x2E0040
                 ; 0017 012D         printDebug("[%02X]",DEVICE_SERIAL[i]);
009d65 940e d7c5 	CALL SUBOPT_0x368
                 ; 0017 012E     }
009d67 5f1f      	SUBI R17,-1
009d68 cffa      	RJMP _0x2E003F
                 _0x2E0040:
                 ; 0017 012F     printDebug("\r\n");
009d69 940e d7d1 	CALL SUBOPT_0x369
                 ; 0017 0130 
                 ; 0017 0131     return;
009d6b 9119      	LD   R17,Y+
009d6c 9508      	RET
                 ; 0017 0132 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 013A {
                 _debug_req:
                 ; 0017 013B     flag_PackageTerminate3 = 0;
009d6d e0e0      	LDI  R30,LOW(0)
009d6e 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 013C 
                 ; 0017 013D     printDebug("Get Debug Req.:");
                +
009d70 eded     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 849 ) )
009d71 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 849 ) )
009d72 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 849 ) )
009d73 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 849 ) )
                 	__POINTD1FN _0x2E0000,849
009d74 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 013E 
                 ; 0017 013F 
                 ; 0017 0140     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
009d76 940e d7d7 	CALL SUBOPT_0x36A
                +
009d78 eaea     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009d79 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009d7a e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009d7b e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
009d7c 940e d7dc 	CALL SUBOPT_0x36B
009d7e f411      	BRNE _0x2E0041
                 ; 0017 0141         DEBUG_setDateTime();
009d7f dd81      	RCALL _DEBUG_setDateTime
                 ; 0017 0142     }
                 ; 0017 0143     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
009d80 c064      	RJMP _0x2E0042
                 _0x2E0041:
009d81 940e d7d7 	CALL SUBOPT_0x36A
                +
009d83 ebe2     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009d84 e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009d85 e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009d86 e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
009d87 940e d7dc 	CALL SUBOPT_0x36B
009d89 f411      	BRNE _0x2E0043
                 ; 0017 0144         DEBUG_resetAlarm();
009d8a de3b      	RCALL _DEBUG_resetAlarm
                 ; 0017 0145     }
                 ; 0017 0146     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
009d8b c059      	RJMP _0x2E0044
                 _0x2E0043:
009d8c 940e d7d7 	CALL SUBOPT_0x36A
                +
009d8e ebea     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
009d8f e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
009d90 e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
009d91 e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
009d92 940e d7dc 	CALL SUBOPT_0x36B
009d94 f411      	BRNE _0x2E0045
                 ; 0017 0147         DEBUG_ClearLogFile();
009d95 de39      	RCALL _DEBUG_ClearLogFile
                 ; 0017 0148     }
                 ; 0017 0149     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
009d96 c04e      	RJMP _0x2E0046
                 _0x2E0045:
009d97 940e d7d7 	CALL SUBOPT_0x36A
                +
009d99 ece2     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
009d9a e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
009d9b e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
009d9c e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
009d9d 940e d7dc 	CALL SUBOPT_0x36B
009d9f f411      	BRNE _0x2E0047
                 ; 0017 014A         DEBUG_setRealVref();
009da0 de5e      	RCALL _DEBUG_setRealVref
                 ; 0017 014B     }
                 ; 0017 014C     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
009da1 c043      	RJMP _0x2E0048
                 _0x2E0047:
009da2 940e d7d7 	CALL SUBOPT_0x36A
                +
009da4 ecea     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
009da5 e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
009da6 e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
009da7 e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
009da8 940e d7dc 	CALL SUBOPT_0x36B
009daa f411      	BRNE _0x2E0049
                 ; 0017 014D         DEBUG_sensorSelect();
009dab de85      	RCALL _DEBUG_sensorSelect
                 ; 0017 014E     }
                 ; 0017 014F     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
009dac c038      	RJMP _0x2E004A
                 _0x2E0049:
009dad 940e d7d7 	CALL SUBOPT_0x36A
                +
009daf ede2     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
009db0 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
009db1 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
009db2 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
009db3 940e d7dc 	CALL SUBOPT_0x36B
009db5 f419      	BRNE _0x2E004B
                 ; 0017 0150         DEBUG_setDeviceEnable(1);
009db6 e0a1      	LDI  R26,LOW(1)
009db7 deca      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0151     }
                 ; 0017 0152     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
009db8 c02c      	RJMP _0x2E004C
                 _0x2E004B:
009db9 940e d7d7 	CALL SUBOPT_0x36A
                +
009dbb edea     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
009dbc e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
009dbd e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
009dbe e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
009dbf 940e d7dc 	CALL SUBOPT_0x36B
009dc1 f419      	BRNE _0x2E004D
                 ; 0017 0153         DEBUG_setDeviceEnable(0);
009dc2 e0a0      	LDI  R26,LOW(0)
009dc3 debe      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0154     }
                 ; 0017 0155     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
009dc4 c020      	RJMP _0x2E004E
                 _0x2E004D:
009dc5 940e d7d7 	CALL SUBOPT_0x36A
                +
009dc7 eee2     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
009dc8 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
009dc9 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
009dca e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
009dcb 940e d7dc 	CALL SUBOPT_0x36B
009dcd f411      	BRNE _0x2E004F
                 ; 0017 0156         DEBUG_setSerialNumber();
009dce dec8      	RCALL _DEBUG_setSerialNumber
                 ; 0017 0157     }
                 ; 0017 0158     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
009dcf c015      	RJMP _0x2E0050
                 _0x2E004F:
009dd0 940e d7d7 	CALL SUBOPT_0x36A
                +
009dd2 eeea     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
009dd3 e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
009dd4 e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
009dd5 e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
009dd6 940e d7dc 	CALL SUBOPT_0x36B
009dd8 f411      	BRNE _0x2E0051
                 ; 0017 0159         DEBUG_readSerialNumber();
009dd9 df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 015A     }
                 ; 0017 015B     else if(!strncmpf(rxPackage3,cmdGetADCSensor,7)){
009dda c00a      	RJMP _0x2E0052
                 _0x2E0051:
009ddb 940e d7d7 	CALL SUBOPT_0x36A
                +
009ddd efe2     +LDI R30 , LOW ( 2 * _cmdGetADCSensor + ( 0 ) )
009dde e0f1     +LDI R31 , HIGH ( 2 * _cmdGetADCSensor + ( 0 ) )
009ddf e060     +LDI R22 , BYTE3 ( 2 * _cmdGetADCSensor + ( 0 ) )
009de0 e070     +LDI R23 , BYTE4 ( 2 * _cmdGetADCSensor + ( 0 ) )
                 	__POINTD1FN _cmdGetADCSensor,0
009de1 940e d7dc 	CALL SUBOPT_0x36B
009de3 f409      	BRNE _0x2E0053
                 ; 0017 015C         iGetSensorValue();
009de4 dd13      	RCALL _iGetSensorValue
                 ; 0017 015D     }
                 ; 0017 015E 
                 ; 0017 015F     return;
                 _0x2E0053:
                 _0x2E0052:
                 _0x2E0050:
                 _0x2E004E:
                 _0x2E004C:
                 _0x2E004A:
                 _0x2E0048:
                 _0x2E0046:
                 _0x2E0044:
                 _0x2E0042:
009de5 9508      	RET
                 ; 0017 0160 }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 0163 {
                 _printDebug:
009de6 92ff      	PUSH R15
009de7 2ef8      	MOV  R15,R24
                 ; 0017 0164     char textBuffer[256];
                 ; 0017 0165     va_list argptr;
                 ; 0017 0166 
                 ; 0017 0167     va_start(argptr, fmtstr);
009de8 50d1      	SUBI R29,1
009de9 931a      	ST   -Y,R17
009dea 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
009deb 01de      	MOVW R26,R28
009dec 50a2      	SUBI R26,LOW(-(254))
009ded 4fbf      	SBCI R27,HIGH(-(254))
009dee 940e deb2 	CALL __ADDW2R15
009df0 018d      	MOVW R16,R26
                 ; 0017 0168     vsprintf(textBuffer,fmtstr,argptr);
009df1 940e cc62 	CALL SUBOPT_0x1F1
009df3 01de      	MOVW R26,R28
009df4 5fac      	SUBI R26,LOW(-(260))
009df5 4fbe      	SBCI R27,HIGH(-(260))
009df6 940e d0a9 	CALL SUBOPT_0x28C
                 ; 0017 0169     send_uart(3,textBuffer);
009df8 e0e3      	LDI  R30,LOW(3)
009df9 93ea      	ST   -Y,R30
009dfa 01de      	MOVW R26,R28
009dfb 9613      	ADIW R26,3
009dfc 940e 40c0 	CALL _send_uart
                 ; 0017 016A     va_end(argptr);
                 ; 0017 016B 
                 ; 0017 016C     return;
009dfe 8119      	LDD  R17,Y+1
009dff 8108      	LDD  R16,Y+0
009e00 9622      	ADIW R28,2
009e01 5fdf      	SUBI R29,-1
009e02 90ff      	POP  R15
009e03 9508      	RET
                 ; 0017 016D }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 0170 {
                 _print_hex_ascii_line:
                 ; 0017 0171 
                 ; 0017 0172     int i;
                 ; 0017 0173     int gap;
                 ; 0017 0174     const unsigned char *ch;
                 ; 0017 0175 
                 ; 0017 0176     // offset //
                 ; 0017 0177     printDebug("%05d   ", offset);
009e04 940e ca96 	CALL SUBOPT_0x1A6
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
009e06 eeed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 865 ) )
009e07 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 865 ) )
009e08 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 865 ) )
009e09 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 865 ) )
                 	__POINTD1FN _0x2E0000,865
009e0a 940e c79d 	CALL SUBOPT_0x127
009e0c 940e c637 	CALL SUBOPT_0xE8
                 ; 0017 0178 
                 ; 0017 0179 
                 ; 0017 017A     // hex //
                 ; 0017 017B     ch = payload;
                +
009e0e 854a     +LDD R20 , Y + 10
009e0f 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 017C     for(i = 0; i < len; i++) {
                +
009e10 e000     +LDI R16 , LOW ( 0 )
009e11 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0055:
009e12 85e8      	LDD  R30,Y+8
009e13 85f9      	LDD  R31,Y+8+1
009e14 170e      	CP   R16,R30
009e15 071f      	CPC  R17,R31
009e16 f494      	BRGE _0x2E0056
                 ; 0017 017D         printDebug("%02x ", *ch);
                +
009e17 efe5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 873 ) )
009e18 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 873 ) )
009e19 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 873 ) )
009e1a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 873 ) )
                 	__POINTD1FN _0x2E0000,873
009e1b 940e d7e3 	CALL SUBOPT_0x36C
                 ; 0017 017E 
                 ; 0017 017F         ch++;
                +
009e1d 5f4f     +SUBI R20 , LOW ( - 1 )
009e1e 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 0180         // print extra space after 8th byte for visual aid //
                 ; 0017 0181         if (i == 7){
009e1f e0e7      	LDI  R30,LOW(7)
009e20 e0f0      	LDI  R31,HIGH(7)
009e21 17e0      	CP   R30,R16
009e22 07f1      	CPC  R31,R17
009e23 f411      	BRNE _0x2E0057
                 ; 0017 0182             printDebug(" ");
009e24 940e d7e9 	CALL SUBOPT_0x36D
                 ; 0017 0183 
                 ; 0017 0184         }
                 ; 0017 0185     }
                 _0x2E0057:
                +
009e26 5f0f     +SUBI R16 , LOW ( - 1 )
009e27 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009e28 cfe9      	RJMP _0x2E0055
                 _0x2E0056:
                 ; 0017 0186     // print space to handle line less than 8 bytes //
                 ; 0017 0187     if (len < 8){
009e29 85a8      	LDD  R26,Y+8
009e2a 85b9      	LDD  R27,Y+8+1
009e2b 9718      	SBIW R26,8
009e2c f414      	BRGE _0x2E0058
                 ; 0017 0188         printDebug(" ");
009e2d 940e d7e9 	CALL SUBOPT_0x36D
                 ; 0017 0189 
                 ; 0017 018A     }
                 ; 0017 018B 
                 ; 0017 018C     // fill hex gap with spaces if not full line //
                 ; 0017 018D     if (len < 16) {
                 _0x2E0058:
009e2f 85a8      	LDD  R26,Y+8
009e30 85b9      	LDD  R27,Y+8+1
009e31 9750      	SBIW R26,16
009e32 f48c      	BRGE _0x2E0059
                 ; 0017 018E         gap = 16 - len;
009e33 85a8      	LDD  R26,Y+8
009e34 85b9      	LDD  R27,Y+8+1
009e35 e1e0      	LDI  R30,LOW(16)
009e36 e0f0      	LDI  R31,HIGH(16)
009e37 1bea      	SUB  R30,R26
009e38 0bfb      	SBC  R31,R27
009e39 019f      	MOVW R18,R30
                 ; 0017 018F         for (i = 0; i < gap; i++) {
                +
009e3a e000     +LDI R16 , LOW ( 0 )
009e3b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005B:
                +
009e3c 1702     +CP R16 , R18
009e3d 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
009e3e f42c      	BRGE _0x2E005C
                 ; 0017 0190             printDebug("   ");
009e3f 940e d7ef 	CALL SUBOPT_0x36E
                 ; 0017 0191 
                 ; 0017 0192         }
                +
009e41 5f0f     +SUBI R16 , LOW ( - 1 )
009e42 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009e43 cff8      	RJMP _0x2E005B
                 _0x2E005C:
                 ; 0017 0193     }
                 ; 0017 0194     printDebug("   ");
                 _0x2E0059:
009e44 940e d7ef 	CALL SUBOPT_0x36E
                 ; 0017 0195 
                 ; 0017 0196 
                 ; 0017 0197     // ascii (if printable) //
                 ; 0017 0198     ch = payload;
                +
009e46 854a     +LDD R20 , Y + 10
009e47 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0199     for(i = 0; i < len; i++) {
                +
009e48 e000     +LDI R16 , LOW ( 0 )
009e49 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E005E:
009e4a 85e8      	LDD  R30,Y+8
009e4b 85f9      	LDD  R31,Y+8+1
009e4c 170e      	CP   R16,R30
009e4d 071f      	CPC  R17,R31
009e4e f4c4      	BRGE _0x2E005F
                 ; 0017 019A         if (isprint(*ch)){
009e4f 01da      	MOVW R26,R20
009e50 91ac      	LD   R26,X
009e51 940e bfa8 	CALL _isprint
009e53 30e0      	CPI  R30,0
009e54 f039      	BREQ _0x2E0060
                 ; 0017 019B             printDebug("%c", *ch);
                +
009e55 e7e4     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 744 ) )
009e56 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 744 ) )
009e57 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 744 ) )
009e58 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 744 ) )
                 	__POINTD1FN _0x2E0000,744
009e59 940e d7e3 	CALL SUBOPT_0x36C
                 ; 0017 019C 
                 ; 0017 019D         }
                 ; 0017 019E         else{
009e5b c006      	RJMP _0x2E0061
                 _0x2E0060:
                 ; 0017 019F             printDebug(".");
                +
009e5c efeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 879 ) )
009e5d e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 879 ) )
009e5e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 879 ) )
009e5f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 879 ) )
                 	__POINTD1FN _0x2E0000,879
009e60 940e c02f 	CALL SUBOPT_0x3
                 ; 0017 01A0 
                 ; 0017 01A1         }
                 _0x2E0061:
                 ; 0017 01A2         ch++;
                +
009e62 5f4f     +SUBI R20 , LOW ( - 1 )
009e63 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 01A3     }
                +
009e64 5f0f     +SUBI R16 , LOW ( - 1 )
009e65 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009e66 cfe3      	RJMP _0x2E005E
                 _0x2E005F:
                 ; 0017 01A4 
                 ; 0017 01A5     printDebug("\r\n");
009e67 940e d7d1 	CALL SUBOPT_0x369
                 ; 0017 01A6 
                 ; 0017 01A7 
                 ; 0017 01A8 return;
009e69 c0ee      	RJMP _0x20E002D
                 ; 0017 01A9 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 01AC {
                 _print_payload:
                 ; 0017 01AD 
                 ; 0017 01AE     int len_rem = len;
                 ; 0017 01AF     int line_width = 16;            // number of bytes per line //
                 ; 0017 01B0     int line_len;
                 ; 0017 01B1     int offset = 0;                    // zero-based offset counter //
                 ; 0017 01B2     const unsigned char *ch = payload;
                 ; 0017 01B3 
                 ; 0017 01B4     if (len <= 0)
009e6a 93ba      	ST   -Y,R27
009e6b 93aa      	ST   -Y,R26
009e6c 9724      	SBIW R28,4
009e6d e0e0      	LDI  R30,LOW(0)
009e6e 83ea      	STD  Y+2,R30
009e6f 83eb      	STD  Y+3,R30
009e70 940e e0ce 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
009e72 850a     +LDD R16 , Y + 10
009e73 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
009e74 e120     +LDI R18 , LOW ( 16 )
009e75 e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
009e76 85ec      	LDD  R30,Y+12
009e77 85fd      	LDD  R31,Y+12+1
009e78 83ee      	STD  Y+6,R30
009e79 83ff      	STD  Y+6+1,R31
009e7a 85aa      	LDD  R26,Y+10
009e7b 85bb      	LDD  R27,Y+10+1
009e7c 940e e0b6 	CALL __CPW02
009e7e f574      	BRGE _0x20E002E
                 ; 0017 01B5         return;
                 ; 0017 01B6 
                 ; 0017 01B7     // data fits on one line //
                 ; 0017 01B8     if (len <= line_width) {
009e7f 172a      	CP   R18,R26
009e80 073b      	CPC  R19,R27
009e81 f03c      	BRLT _0x2E0063
                 ; 0017 01B9         print_hex_ascii_line(ch, len, offset);
009e82 940e c8ce 	CALL SUBOPT_0x15A
009e84 940e cac1 	CALL SUBOPT_0x1AD
009e86 940e d7f5 	CALL SUBOPT_0x36F
                 ; 0017 01BA         return;
009e88 c024      	RJMP _0x20E002E
                 ; 0017 01BB     }
                 ; 0017 01BC     // data spans multiple lines //
                 ; 0017 01BD     for ( ;; ) {
                 _0x2E0063:
                 _0x2E0065:
                 ; 0017 01BE         // compute current line length //
                 ; 0017 01BF         line_len = line_width % len_rem;
009e89 01f8      	MOVW R30,R16
009e8a 01d9      	MOVW R26,R18
009e8b 940e dfeb 	CALL __MODW21
009e8d 01af      	MOVW R20,R30
                 ; 0017 01C0         // print line //
                 ; 0017 01C1         print_hex_ascii_line(ch, line_len, offset);
009e8e 940e c8ce 	CALL SUBOPT_0x15A
009e90 935a      	ST   -Y,R21
009e91 934a      	ST   -Y,R20
009e92 940e d7f5 	CALL SUBOPT_0x36F
                 ; 0017 01C2         // compute total remaining //
                 ; 0017 01C3         len_rem = len_rem - line_len;
                +
009e94 1b04     +SUB R16 , R20
009e95 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 01C4         // shift pointer to remaining bytes to print //
                 ; 0017 01C5         ch = ch + line_len;
009e96 01fa      	MOVW R30,R20
009e97 940e ca8c 	CALL SUBOPT_0x1A4
009e99 83ee      	STD  Y+6,R30
009e9a 83ff      	STD  Y+6+1,R31
                 ; 0017 01C6         // add offset //
                 ; 0017 01C7         offset = offset + line_width;
009e9b 01f9      	MOVW R30,R18
009e9c 85a8      	LDD  R26,Y+8
009e9d 85b9      	LDD  R27,Y+8+1
009e9e 0fea      	ADD  R30,R26
009e9f 1ffb      	ADC  R31,R27
009ea0 87e8      	STD  Y+8,R30
009ea1 87f9      	STD  Y+8+1,R31
                 ; 0017 01C8         // check if we have line width chars or less //
                 ; 0017 01C9         if (len_rem <= line_width) {
                +
009ea2 1720     +CP R18 , R16
009ea3 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009ea4 f03c      	BRLT _0x2E0067
                 ; 0017 01CA             // print last line and get out //
                 ; 0017 01CB             print_hex_ascii_line(ch, len_rem, offset);
009ea5 940e c8ce 	CALL SUBOPT_0x15A
009ea7 931a      	ST   -Y,R17
009ea8 930a      	ST   -Y,R16
009ea9 940e d7f5 	CALL SUBOPT_0x36F
                 ; 0017 01CC             break;
009eab c001      	RJMP _0x2E0066
                 ; 0017 01CD         }
                 ; 0017 01CE     }
                 _0x2E0067:
009eac cfdc      	RJMP _0x2E0065
                 _0x2E0066:
                 ; 0017 01CF 
                 ; 0017 01D0     return;
                 _0x20E002E:
009ead 940e e0d5 	CALL __LOADLOCR6
009eaf 962e      	ADIW R28,14
009eb0 9508      	RET
                 ; 0017 01D1 }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 _forwardSubstitution:
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
009eb1 9726      	SBIW R28,6
009eb2 940e c218 	CALL SUBOPT_0x46
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 _0x300005:
009eb4 940e d7f9 	CALL SUBOPT_0x370
009eb6 170e      	CP   R16,R30
009eb7 071f      	CPC  R17,R31
009eb8 f014      	BRLT PC+3
009eb9 940c 9f58 	JMP _0x300006
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                +
009ebb 870a     +STD Y + 10 , R16
009ebc 871b     +STD Y + 10 + 1 , R17
                 	__PUTWSR 16,17,10
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
009ebd 01f8      	MOVW R30,R16
009ebe 9631      	ADIW R30,1
009ebf 019f      	MOVW R18,R30
                 _0x300008:
009ec0 940e d7f9 	CALL SUBOPT_0x370
009ec2 172e      	CP   R18,R30
009ec3 073f      	CPC  R19,R31
009ec4 f4dc      	BRGE _0x300009
                 ; 0018 0011             if (a[j][i] > a[max][i])
009ec5 940e d7fe 	CALL SUBOPT_0x371
009ec7 940e d804 	CALL SUBOPT_0x372
009ec9 937f      	PUSH R23
009eca 936f      	PUSH R22
009ecb 93ff      	PUSH R31
009ecc 93ef      	PUSH R30
009ecd 940e d808 	CALL SUBOPT_0x373
009ecf 940e d804 	CALL SUBOPT_0x372
009ed1 91af      	POP  R26
009ed2 91bf      	POP  R27
009ed3 918f      	POP  R24
009ed4 919f      	POP  R25
009ed5 940e de92 	CALL __CMPF12
009ed7 f009      	BREQ PC+2
009ed8 f410      	BRCC PC+3
009ed9 940c 9edd 	JMP  _0x30000A
                 ; 0018 0012                 max = j;
                +
009edb 872a     +STD Y + 10 , R18
009edc 873b     +STD Y + 10 + 1 , R19
                 	__PUTWSR 18,19,10
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 _0x30000A:
                +
009edd 5f2f     +SUBI R18 , LOW ( - 1 )
009ede 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009edf cfe0      	RJMP _0x300008
                 _0x300009:
                +
009ee0 e020     +LDI R18 , LOW ( 0 )
009ee1 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30000C:
009ee2 940e d7f9 	CALL SUBOPT_0x370
009ee4 9631      	ADIW R30,1
009ee5 172e      	CP   R18,R30
009ee6 073f      	CPC  R19,R31
009ee7 f4dc      	BRGE _0x30000D
                 ; 0018 0015             t = a[max][j];
009ee8 940e d808 	CALL SUBOPT_0x373
009eea 940e d80f 	CALL SUBOPT_0x374
009eec 940e c4f2 	CALL SUBOPT_0xB5
                 ; 0018 0016             a[max][j] = a[i][j];
009eee 940e d808 	CALL SUBOPT_0x373
009ef0 940e d813 	CALL SUBOPT_0x375
009ef2 010f      	MOVW R0,R30
009ef3 940e d81a 	CALL SUBOPT_0x376
009ef5 940e d80f 	CALL SUBOPT_0x374
009ef7 01d0      	MOVW R26,R0
009ef8 940e e039 	CALL __PUTDP1
                 ; 0018 0017             a[i][j] = t;
009efa 940e d81a 	CALL SUBOPT_0x376
009efc 940e d813 	CALL SUBOPT_0x375
009efe 940e cf6d 	CALL SUBOPT_0x25B
                 ; 0018 0018         }
                +
009f00 5f2f     +SUBI R18 , LOW ( - 1 )
009f01 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009f02 cfdf      	RJMP _0x30000C
                 _0x30000D:
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                +
009f03 9120 1a71+LDS R18 , 0 + ( _n )
009f05 9130 1a72+LDS R19 , 0 + ( _n ) + 1
                 	__GETWRMN 18,19,0,_n
                 _0x30000F:
                +
009f07 1720     +CP R18 , R16
009f08 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009f09 f414      	BRGE PC+3
009f0a 940c 9f55 	JMP _0x300010
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
009f0c 01f8      	MOVW R30,R16
009f0d 9631      	ADIW R30,1
009f0e 01af      	MOVW R20,R30
                 _0x300012:
009f0f 940e d7f9 	CALL SUBOPT_0x370
009f11 174e      	CP   R20,R30
009f12 075f      	CPC  R21,R31
009f13 f5f4      	BRGE _0x300013
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
009f14 01fa      	MOVW R30,R20
009f15 940e df01 	CALL __LSLW4
009f17 58ed      	SUBI R30,LOW(-_a)
009f18 4ef5      	SBCI R31,HIGH(-_a)
009f19 010f      	MOVW R0,R30
009f1a 940e d813 	CALL SUBOPT_0x375
009f1c 93ff      	PUSH R31
009f1d 93ef      	PUSH R30
009f1e 01df      	MOVW R26,R30
009f1f 940e e02e 	CALL __GETD1P
009f21 937f      	PUSH R23
009f22 936f      	PUSH R22
009f23 93ff      	PUSH R31
009f24 93ef      	PUSH R30
009f25 01d0      	MOVW R26,R0
009f26 01f8      	MOVW R30,R16
009f27 940e cfda 	CALL SUBOPT_0x26C
009f29 937f      	PUSH R23
009f2a 936f      	PUSH R22
009f2b 93ff      	PUSH R31
009f2c 93ef      	PUSH R30
009f2d 940e d81a 	CALL SUBOPT_0x376
009f2f 940e d804 	CALL SUBOPT_0x372
009f31 91af      	POP  R26
009f32 91bf      	POP  R27
009f33 918f      	POP  R24
009f34 919f      	POP  R25
009f35 940e de4d 	CALL __DIVF21
009f37 937f      	PUSH R23
009f38 936f      	PUSH R22
009f39 93ff      	PUSH R31
009f3a 93ef      	PUSH R30
009f3b 940e d81a 	CALL SUBOPT_0x376
009f3d 940e d80f 	CALL SUBOPT_0x374
009f3f 91af      	POP  R26
009f40 91bf      	POP  R27
009f41 918f      	POP  R24
009f42 919f      	POP  R25
009f43 940e ddff 	CALL __MULF12
009f45 91af      	POP  R26
009f46 91bf      	POP  R27
009f47 918f      	POP  R24
009f48 919f      	POP  R25
009f49 940e cd89 	CALL SUBOPT_0x218
009f4b 91af      	POP  R26
009f4c 91bf      	POP  R27
009f4d 940e e039 	CALL __PUTDP1
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                +
009f4f 5f4f     +SUBI R20 , LOW ( - 1 )
009f50 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
009f51 cfbd      	RJMP _0x300012
                 _0x300013:
                 ; 0018 002B         }
                +
009f52 5021     +SUBI R18 , LOW ( 1 )
009f53 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009f54 cfb2      	RJMP _0x30000F
                 _0x300010:
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                +
009f55 5f0f     +SUBI R16 , LOW ( - 1 )
009f56 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009f57 cf5c      	RJMP _0x300005
                 _0x300006:
                 ; 0018 003A }
                 _0x20E002D:
009f58 940e e0d5 	CALL __LOADLOCR6
009f5a 962c      	ADIW R28,12
009f5b 9508      	RET
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 _reverseElimination:
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
009f5c 940e e0ce 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
009f5e 940e d7f9 	CALL SUBOPT_0x370
009f60 9731      	SBIW R30,1
009f61 018f      	MOVW R16,R30
                 _0x300015:
009f62 2311      	TST  R17
009f63 f412      	BRPL PC+3
009f64 940c 9fcf 	JMP _0x300016
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
009f66 940e d81a 	CALL SUBOPT_0x376
009f68 940e d820 	CALL SUBOPT_0x377
009f6a 93ff      	PUSH R31
009f6b 93ef      	PUSH R30
009f6c 940e d81a 	CALL SUBOPT_0x376
009f6e 01df      	MOVW R26,R30
009f6f 940e d7f9 	CALL SUBOPT_0x370
009f71 940e cfda 	CALL SUBOPT_0x26C
009f73 937f      	PUSH R23
009f74 936f      	PUSH R22
009f75 93ff      	PUSH R31
009f76 93ef      	PUSH R30
009f77 940e d81a 	CALL SUBOPT_0x376
009f79 940e d804 	CALL SUBOPT_0x372
009f7b 91af      	POP  R26
009f7c 91bf      	POP  R27
009f7d 918f      	POP  R24
009f7e 919f      	POP  R25
009f7f 940e de4d 	CALL __DIVF21
009f81 91af      	POP  R26
009f82 91bf      	POP  R27
009f83 940e e039 	CALL __PUTDP1
                 ; 0018 0041         a[i][i] = 1;
009f85 940e d81a 	CALL SUBOPT_0x376
009f87 01df      	MOVW R26,R30
009f88 01f8      	MOVW R30,R16
009f89 940e cead 	CALL SUBOPT_0x240
009f8b 940e d827 	CALL SUBOPT_0x378
009f8d 940e e039 	CALL __PUTDP1
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
009f8f 01f8      	MOVW R30,R16
009f90 9731      	SBIW R30,1
009f91 019f      	MOVW R18,R30
                 _0x300018:
009f92 2333      	TST  R19
009f93 f1c2      	BRMI _0x300019
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
009f94 940e d7fe 	CALL SUBOPT_0x371
009f96 010f      	MOVW R0,R30
009f97 940e d820 	CALL SUBOPT_0x377
009f99 93ff      	PUSH R31
009f9a 93ef      	PUSH R30
009f9b 01df      	MOVW R26,R30
009f9c 940e e02e 	CALL __GETD1P
009f9e 937f      	PUSH R23
009f9f 936f      	PUSH R22
009fa0 93ff      	PUSH R31
009fa1 93ef      	PUSH R30
009fa2 01d0      	MOVW R26,R0
009fa3 01f8      	MOVW R30,R16
009fa4 940e cfda 	CALL SUBOPT_0x26C
009fa6 937f      	PUSH R23
009fa7 936f      	PUSH R22
009fa8 93ff      	PUSH R31
009fa9 93ef      	PUSH R30
009faa 940e d81a 	CALL SUBOPT_0x376
009fac 01df      	MOVW R26,R30
009fad 940e d7f9 	CALL SUBOPT_0x370
009faf 940e cfda 	CALL SUBOPT_0x26C
009fb1 91af      	POP  R26
009fb2 91bf      	POP  R27
009fb3 918f      	POP  R24
009fb4 919f      	POP  R25
009fb5 940e ddff 	CALL __MULF12
009fb7 91af      	POP  R26
009fb8 91bf      	POP  R27
009fb9 918f      	POP  R24
009fba 919f      	POP  R25
009fbb 940e cd89 	CALL SUBOPT_0x218
009fbd 91af      	POP  R26
009fbe 91bf      	POP  R27
009fbf 940e e039 	CALL __PUTDP1
                 ; 0018 0044             a[j][i] = 0;
009fc1 940e d7fe 	CALL SUBOPT_0x371
009fc3 01df      	MOVW R26,R30
009fc4 01f8      	MOVW R30,R16
009fc5 940e cead 	CALL SUBOPT_0x240
009fc7 940e c3ef 	CALL SUBOPT_0x8E
                 ; 0018 0045         }
                +
009fc9 5021     +SUBI R18 , LOW ( 1 )
009fca 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009fcb cfc6      	RJMP _0x300018
                 _0x300019:
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                +
009fcc 5001     +SUBI R16 , LOW ( 1 )
009fcd 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
009fce cf93      	RJMP _0x300015
                 _0x300016:
                 ; 0018 0052 }
009fcf 940e e0d5 	CALL __LOADLOCR6
009fd1 9626      	ADIW R28,6
009fd2 9508      	RET
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 _gaussian:
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
009fd3 940e c394 	CALL SUBOPT_0x7F
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
009fd5 940e d827 	CALL SUBOPT_0x378
009fd7 93e0 1a73 	STS  _a,R30
009fd9 93f0 1a74 	STS  _a+1,R31
009fdb 9360 1a75 	STS  _a+2,R22
009fdd 9370 1a76 	STS  _a+3,R23
009fdf 940e c50f 	CALL SUBOPT_0xBA
                +
009fe1 93e0 1a77+STS _a + ( 4 ) , R30
009fe3 93f0 1a78+STS _a + ( 4 ) + 1 , R31
009fe5 9360 1a79+STS _a + ( 4 ) + 2 , R22
009fe7 9370 1a7a+STS _a + ( 4 ) + 3 , R23
                 	__PUTD1MN _a,4
009fe9 940e c50f 	CALL SUBOPT_0xBA
009feb 940e c519 	CALL SUBOPT_0xBC
009fed 940e ddff 	CALL __MULF12
                +
009fef 93e0 1a7b+STS _a + ( 8 ) , R30
009ff1 93f0 1a7c+STS _a + ( 8 ) + 1 , R31
009ff3 9360 1a7d+STS _a + ( 8 ) + 2 , R22
009ff5 9370 1a7e+STS _a + ( 8 ) + 3 , R23
                 	__PUTD1MN _a,8
009ff7 940e c5b5 	CALL SUBOPT_0xD3
                +
009ff9 93e0 1a7f+STS _a + ( 12 ) , R30
009ffb 93f0 1a80+STS _a + ( 12 ) + 1 , R31
009ffd 9360 1a81+STS _a + ( 12 ) + 2 , R22
009fff 9370 1a82+STS _a + ( 12 ) + 3 , R23
                 	__PUTD1MN _a,12
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                +
00a001 e8e3     +LDI R30 , LOW ( _a + ( 16 ) )
00a002 e1fa     +LDI R31 , HIGH ( _a + ( 16 ) )
                 	__POINTW1MN _a,16
00a003 940e d82c 	CALL SUBOPT_0x379
00a005 940e c5a6 	CALL SUBOPT_0xD0
                +
00a007 93e0 1a87+STS _a + ( 20 ) , R30
00a009 93f0 1a88+STS _a + ( 20 ) + 1 , R31
00a00b 9360 1a89+STS _a + ( 20 ) + 2 , R22
00a00d 9370 1a8a+STS _a + ( 20 ) + 3 , R23
                 	__PUTD1MN _a,20
00a00f 940e c5a6 	CALL SUBOPT_0xD0
00a011 940e c502 	CALL SUBOPT_0xB8
00a013 940e ddff 	CALL __MULF12
                +
00a015 93e0 1a8b+STS _a + ( 24 ) , R30
00a017 93f0 1a8c+STS _a + ( 24 ) + 1 , R31
00a019 9360 1a8d+STS _a + ( 24 ) + 2 , R22
00a01b 9370 1a8e+STS _a + ( 24 ) + 3 , R23
                 	__PUTD1MN _a,24
00a01d 940e c2be 	CALL SUBOPT_0x60
                +
00a01f 93e0 1a8f+STS _a + ( 28 ) , R30
00a021 93f0 1a90+STS _a + ( 28 ) + 1 , R31
00a023 9360 1a91+STS _a + ( 28 ) + 2 , R22
00a025 9370 1a92+STS _a + ( 28 ) + 3 , R23
                 	__PUTD1MN _a,28
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                +
00a027 e9e3     +LDI R30 , LOW ( _a + ( 32 ) )
00a028 e1fa     +LDI R31 , HIGH ( _a + ( 32 ) )
                 	__POINTW1MN _a,32
00a029 940e d82c 	CALL SUBOPT_0x379
00a02b 940e c534 	CALL SUBOPT_0xC1
                +
00a02d 93e0 1a97+STS _a + ( 36 ) , R30
00a02f 93f0 1a98+STS _a + ( 36 ) + 1 , R31
00a031 9360 1a99+STS _a + ( 36 ) + 2 , R22
00a033 9370 1a9a+STS _a + ( 36 ) + 3 , R23
                 	__PUTD1MN _a,36
00a035 940e c534 	CALL SUBOPT_0xC1
00a037 940e c5ab 	CALL SUBOPT_0xD1
00a039 940e ddff 	CALL __MULF12
                +
00a03b 93e0 1a9b+STS _a + ( 40 ) , R30
00a03d 93f0 1a9c+STS _a + ( 40 ) + 1 , R31
00a03f 9360 1a9d+STS _a + ( 40 ) + 2 , R22
00a041 9370 1a9e+STS _a + ( 40 ) + 3 , R23
                 	__PUTD1MN _a,40
00a043 940e c5ba 	CALL SUBOPT_0xD4
                +
00a045 93e0 1a9f+STS _a + ( 44 ) , R30
00a047 93f0 1aa0+STS _a + ( 44 ) + 1 , R31
00a049 9360 1aa1+STS _a + ( 44 ) + 2 , R22
00a04b 9370 1aa2+STS _a + ( 44 ) + 3 , R23
                 	__PUTD1MN _a,44
                 ; 0018 005C 
                 ; 0018 005D /*  bongkot printDebug disable
                 ; 0018 005E     printDebug("\r\n<gaussian> --- start ---\r\n");
                 ; 0018 005F     for (i = 0; i < n; ++i) {
                 ; 0018 0060         printDebug("\t\t");
                 ; 0018 0061         for (j = 0; j < n + 1; ++j)
                 ; 0018 0062             printDebug("%.2f\t", a[i][j]);
                 ; 0018 0063         printDebug("\r\n");
                 ; 0018 0064     }
                 ; 0018 0065 */
                 ; 0018 0066     forwardSubstitution();
00a04d de63      	RCALL _forwardSubstitution
                 ; 0018 0067     reverseElimination();
00a04e df0d      	RCALL _reverseElimination
                 ; 0018 0068 /*  bongkot printDebug disable
                 ; 0018 0069     printDebug("\r\n<gaussian> --- finish ---\r\n");
                 ; 0018 006A     for (i = 0; i < n; ++i) {
                 ; 0018 006B         printDebug("\t\t");
                 ; 0018 006C         for (j = 0; j < n + 1; ++j)
                 ; 0018 006D             printDebug("%.2f\t", a[i][j]);
                 ; 0018 006E         printDebug("\r\n");
                 ; 0018 006F     }
                 ; 0018 0070 */
                 ; 0018 0071     *resA = a[2][3];
                +
00a04f 91e0 1a9f+LDS R30 , _a + ( 44 )
00a051 91f0 1aa0+LDS R31 , _a + ( 44 ) + 1
00a053 9160 1aa1+LDS R22 , _a + ( 44 ) + 2
00a055 9170 1aa2+LDS R23 , _a + ( 44 ) + 3
                 	__GETD1MN _a,44
00a057 85a8      	LDD  R26,Y+8
00a058 85b9      	LDD  R27,Y+8+1
00a059 940e e039 	CALL __PUTDP1
                 ; 0018 0072     *resB = a[1][3];
                +
00a05b 91e0 1a8f+LDS R30 , _a + ( 28 )
00a05d 91f0 1a90+LDS R31 , _a + ( 28 ) + 1
00a05f 9160 1a91+LDS R22 , _a + ( 28 ) + 2
00a061 9170 1a92+LDS R23 , _a + ( 28 ) + 3
                 	__GETD1MN _a,28
00a063 81ae      	LDD  R26,Y+6
00a064 81bf      	LDD  R27,Y+6+1
00a065 940e e039 	CALL __PUTDP1
                 ; 0018 0073     *resC = a[0][3];
                +
00a067 91e0 1a7f+LDS R30 , _a + ( 12 )
00a069 91f0 1a80+LDS R31 , _a + ( 12 ) + 1
00a06b 9160 1a81+LDS R22 , _a + ( 12 ) + 2
00a06d 9170 1a82+LDS R23 , _a + ( 12 ) + 3
                 	__GETD1MN _a,12
00a06f 81ac      	LDD  R26,Y+4
00a070 81bd      	LDD  R27,Y+4+1
00a071 940e e039 	CALL __PUTDP1
                 ; 0018 0074 
                 ; 0018 0075 /*  bongkot printDebug disable  */
                 ; 0018 0076 //    printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                 ; 0018 0077 
                 ; 0018 0078     return;
00a073 940e e0d7 	CALL __LOADLOCR4
00a075 96a2      	ADIW R28,34
00a076 9508      	RET
                 ; 0018 0079 }
                 ;#include "smoothFilter.h"
                 ;
                 ;int indexWrite = 0;
                 ;int gItemSize = 0;
                 ;unsigned int * smoothBuffer;
                 ;iSmoothData_t iSmoothData;
                 ;
                 ;pviSmoothHandle_t pviSmoothSensorHandle;
                 ;
                 ;iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 ; 0019 000A iSmoothData_t smoothFilter(pviSmoothHandle_t pviSmoothHandle_p,int adcValue_p){
                 
                 	.CSEG
                 ; 0019 000B     int * ptrSmoothBuffer;
                 ; 0019 000C     iSmoothData_t iSmoothData;
                 ; 0019 000D     iSmoothData.status = 0;
                 ;	*pviSmoothHandle_p -> Y+12
                 ;	adcValue_p -> Y+10
                 ;	*ptrSmoothBuffer -> R16,R17
                 ;	iSmoothData -> Y+2
                 ; 0019 000E     if(indexWrite<gItemSize){
                 ; 0019 000F         iSmoothData.status = 0;
                 ; 0019 0010         ptrSmoothBuffer = pviSmoothHandle_p;
                 ; 0019 0011         *ptrSmoothBuffer = adcValue_p;
                 ; 0019 0012         indexWrite++;
                 ; 0019 0013     }else if(indexWrite==gItemSize){
                 ; 0019 0014        iSmoothData.status = 1;
                 ; 0019 0015        indexWrite = 0;
                 ; 0019 0016        gItemSize = 0;
                 ; 0019 0017        free(smoothBuffer);
                 ; 0019 0018     }
                 ; 0019 0019 
                 ; 0019 001A 
                 ; 0019 001B     return iSmoothData;
                 ; 0019 001C }
                 ;
                 ;pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001E pviSmoothHandle_t smoothAllocateMem(int itemSize){
                 ; 0019 001F    pviSmoothHandle_t  pviSmoothHandle;
                 ; 0019 0020    smoothBuffer = (int *)malloc(itemSize);
                 ;	itemSize -> Y+2
                 ;	*pviSmoothHandle -> R16,R17
                 ; 0019 0021    if(smoothBuffer!=NULL){
                 ; 0019 0022      pviSmoothHandle = smoothBuffer;
                 ; 0019 0023      gItemSize = itemSize;
                 ; 0019 0024    }else{
                 ; 0019 0025      return   pviSmoothHandle = (int *)0;
                 ; 0019 0026    }
                 ; 0019 0027    return  pviSmoothHandle;
                 ; 0019 0028 }
                 ;#include "ad595.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;
                 ;float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 ; 001A 0005 float iAD595ADCToTemp(long viADC_p,int viADCLoop_p){
                 
                 	.CSEG
                 _iAD595ADCToTemp:
                 ; 001A 0006      int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 0007      float  viADCToVolt = 0.0;
                 ; 001A 0008      //const float  viZeroSet   = 1.68;
                 ; 001A 0009      const float  viZeroSet   = 1.667;
                 ; 001A 000A      float viVoltUpLevel = 0.0;
                 ; 001A 000B      float ivTempValue = 0.0;
                 ; 001A 000C      float factorA = 0.0;
                 ; 001A 000D      float factorB = 0.0;
                 ; 001A 000E      float factorC = 0.0;
                 ; 001A 000F 
                 ; 001A 0010      /////////range 1 Temp C(-10 to -100)
                 ; 001A 0011      float viVoltPoint1_1 = -0.094;
                 ; 001A 0012      float viVoltPoint2_1 = -0.552;
                 ; 001A 0013      float viVoltPoint3_1 = -0.876;
                 ; 001A 0014      float viTempOutPoint1_1 = -10.0;
                 ; 001A 0015      float viTempOutPoint2_1 = -60.0;
                 ; 001A 0016      float viTempOutPoint3_1 = -100.0;
                 ; 001A 0017 
                 ; 001A 0018      /////////range 2 Temp C(-100 to -200)
                 ; 001A 0019      float viVoltPoint1_2 = -0.876;
                 ; 001A 001A      float viVoltPoint2_2 = -1.269;
                 ; 001A 001B      float viVoltPoint3_2 = -1.454;
                 ; 001A 001C      float viTempOutPoint1_2 = -100.0;
                 ; 001A 001D      float viTempOutPoint2_2 = -160.0;
                 ; 001A 001E      float viTempOutPoint3_2 = -200.0;
                 ; 001A 001F 
                 ; 001A 0020      const float viVoltPointTable[5][3]  = {
                 ; 001A 0021             {-0.094,-0.189,-0.375},           //-10 to -40
                 ; 001A 0022             {-0.375,-0.552,-0.719},           //-40 to -80
                 ; 001A 0023             {-0.719,-0.876,-1.021},           //-80 to -120
                 ; 001A 0024             {-1.021,-1.152,-1.269},           //-120 to -160
                 ; 001A 0025             {-1.269,-1.370,-1.454}            //-160 to -200
                 ; 001A 0026      };
                 ; 001A 0027 
                 ; 001A 0028      const float viTempOutPointTable[5][3]  = {
                 ; 001A 0029             {-10.0,-20.0,-40.0},           //-10 to -40
                 ; 001A 002A             {-40.0,-60.0,-80.0},           //-40 to -80
                 ; 001A 002B             {-80.0,-100.0,-120.0},           //-80 to -120
                 ; 001A 002C             {-120.0,-140.0,-160.0},           //-120 to -160
                 ; 001A 002D             {-160.0,-180.0,-200.0}            //-160 to -200
                 ; 001A 002E      };
                 ; 001A 002F 
                 ; 001A 0030      viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
00a077 93ba      	ST   -Y,R27
00a078 93aa      	ST   -Y,R26
00a079 97ef      	SBIW R28,63
00a07a 97ef      	SBIW R28,63
00a07b 97ef      	SBIW R28,63
00a07c 9727      	SBIW R28,7
00a07d ec84      	LDI  R24,196
00a07e e0a0      	LDI  R26,LOW(0)
00a07f e0b0      	LDI  R27,HIGH(0)
00a080 e0e0      	LDI  R30,LOW(_0x340003*2)
00a081 e6f8      	LDI  R31,HIGH(_0x340003*2)
00a082 e060      	LDI  R22,BYTE3(_0x340003*2)
00a083 940e e0dc 	CALL __INITLOCB
00a085 931a      	ST   -Y,R17
00a086 930a      	ST   -Y,R16
                 ;	viADC_p -> Y+200
                 ;	viADCLoop_p -> Y+198
                 ;	viADCSmooth -> R16,R17
                 ;	viADCToVolt -> Y+194
                 ;	viZeroSet -> Y+190
                 ;	viVoltUpLevel -> Y+186
                 ;	ivTempValue -> Y+182
                 ;	factorA -> Y+178
                 ;	factorB -> Y+174
                 ;	factorC -> Y+170
                 ;	viVoltPoint1_1 -> Y+166
                 ;	viVoltPoint2_1 -> Y+162
                 ;	viVoltPoint3_1 -> Y+158
                 ;	viTempOutPoint1_1 -> Y+154
                 ;	viTempOutPoint2_1 -> Y+150
                 ;	viTempOutPoint3_1 -> Y+146
                 ;	viVoltPoint1_2 -> Y+142
                 ;	viVoltPoint2_2 -> Y+138
                 ;	viVoltPoint3_2 -> Y+134
                 ;	viTempOutPoint1_2 -> Y+130
                 ;	viTempOutPoint2_2 -> Y+126
                 ;	viTempOutPoint3_2 -> Y+122
                 ;	viVoltPointTable -> Y+62
                 ;	viTempOutPointTable -> Y+2
                +
00a087 01fe     +MOVW R30 , R28
00a088 53ea     +SUBI R30 , LOW ( - 198 )
00a089 4fff     +SBCI R31 , HIGH ( - 198 )
00a08a 9001     +LD R0 , Z +
00a08b 81f0     +LD R31 , Z
00a08c 2de0     +MOV R30 , R0
                 	__GETW1SX 198
                +
00a08d 01de     +MOVW R26 , R28
00a08e 53a8     +SUBI R26 , LOW ( - 200 )
00a08f 4fbf     +SBCI R27 , HIGH ( - 200 )
00a090 900d     +LD R0 , X +
00a091 901d     +LD R1 , X +
00a092 918d     +LD R24 , X +
00a093 919c     +LD R25 , X
00a094 01d0     +MOVW R26 , R0
                 	__GETD2SX 200
00a095 940e d832 	CALL SUBOPT_0x37A
00a097 940e d839 	CALL SUBOPT_0x37B
                +
00a099 01de     +MOVW R26 , R28
00a09a 53ae     +SUBI R26 , LOW ( - 194 )
00a09b 4fbf     +SBCI R27 , HIGH ( - 194 )
00a09c 93ed     +ST X + , R30
00a09d 93fd     +ST X + , R31
00a09e 936d     +ST X + , R22
00a09f 937c     +ST X , R23
                 	__PUTD1SX 194
                 ; 001A 0031      viVoltUpLevel = viADCToVolt - viZeroSet;
                +
00a0a0 e4a2     +LDI R26 , LOW ( 0x3FD56042 )
00a0a1 e6b0     +LDI R27 , HIGH ( 0x3FD56042 )
00a0a2 ed85     +LDI R24 , BYTE3 ( 0x3FD56042 )
00a0a3 e39f     +LDI R25 , BYTE4 ( 0x3FD56042 )
                 	__GETD2N 0x3FD56042
00a0a4 940e dda8 	CALL __SUBF12
                +
00a0a6 01de     +MOVW R26 , R28
00a0a7 54a6     +SUBI R26 , LOW ( - 186 )
00a0a8 4fbf     +SBCI R27 , HIGH ( - 186 )
00a0a9 93ed     +ST X + , R30
00a0aa 93fd     +ST X + , R31
00a0ab 936d     +ST X + , R22
00a0ac 937c     +ST X , R23
                 	__PUTD1SX 186
                 ; 001A 0032 
                 ; 001A 0033 
                 ; 001A 0034 //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 0035 //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0036 //          printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0037 //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.876)) ){
                 ; 001A 0038 //
                 ; 001A 0039 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 003A //        gaussian(viVoltPoint1_1,  viVoltPoint2_1,  viVoltPoint3_1, viTempOutPoint1_1, viTempOutPoint2_1, viTempOutPoint3_1, &factorA, &factorB, &factorC);
                 ; 001A 003B //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 003C //
                 ; 001A 003D //         printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 003E //     }else if((viVoltUpLevel < (-0.876)) && (viVoltUpLevel >= (-1.454)) ){
                 ; 001A 003F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0040 //        gaussian(viVoltPoint1_2,  viVoltPoint2_2,  viVoltPoint3_2, viTempOutPoint1_2, viTempOutPoint2_2, viTempOutPoint3_2, &factorA, &factorB, &factorC);
                 ; 001A 0041 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0042 //
                 ; 001A 0043 //         printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0044 //     }else if(viVoltUpLevel < ((-1.454)+10.0)){
                 ; 001A 0045 //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0046 //         printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0047 //     }
                 ; 001A 0048 
                 ; 001A 0049 
                 ; 001A 004A //     if(viVoltUpLevel >= (-0.094)){
                 ; 001A 004B //          ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 004C //        //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 004D //     }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 ; 001A 004E //
                 ; 001A 004F //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0050 //        gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
                 ; 001A 0051 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0052 //
                 ; 001A 0053 //        // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0054 //     }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 ; 001A 0055 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0056 //        gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                 ; 001A 0057 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0058 //
                 ; 001A 0059 //        // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 005A //     }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 ; 001A 005B //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 005C //        gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                 ; 001A 005D //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 005E //
                 ; 001A 005F //        // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0060 //     }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 ; 001A 0061 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0062 //        gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                 ; 001A 0063 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 0064 //
                 ; 001A 0065 //        // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0066 //     }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.464)) ){        //-1.454 + 20.0   | 20 = +compencess
                 ; 001A 0067 //        //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0068 //        gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                 ; 001A 0069 //        ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
                 ; 001A 006A //
                 ; 001A 006B //         //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 006C //     }
                 ; 001A 006D //     else if(viVoltUpLevel < (-1.464)){
                 ; 001A 006E //        ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 006F //         //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 0070 //     }
                 ; 001A 0071 //     //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 0072 
                 ; 001A 0073 
                 ; 001A 0074      if(viVoltUpLevel >= (-0.094)){
00a0ad 940e d848 	CALL SUBOPT_0x37C
00a0af f008      	BRLO _0x340004
                 ; 001A 0075           ivTempValue = (viVoltUpLevel*1000) / 10.0;
00a0b0 c118      	RJMP _0x34001C
                 ; 001A 0076         //  printDebug("ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0077      }else if((viVoltUpLevel < (-0.094)) && (viVoltUpLevel >= (-0.375)) ){
                 _0x340004:
00a0b1 940e d848 	CALL SUBOPT_0x37C
00a0b3 f428      	BRSH _0x340007
00a0b4 940e d857 	CALL SUBOPT_0x37D
00a0b6 940e d860 	CALL SUBOPT_0x37E
00a0b8 f408      	BRSH _0x340008
                 _0x340007:
00a0b9 c02d      	RJMP _0x340006
                 _0x340008:
                 ; 001A 0078 
                 ; 001A 0079         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 007A         gaussian(viVoltPointTable[0][0],  viVoltPointTable[0][1],  viVoltPointTable[0][2], viTempOutPointTable[0][0], viTempOutPointTable[0][1], viTempOutPointTable[0][2], &factorA, &factorB, &factorC);
00a0ba 940e d867 	CALL SUBOPT_0x37F
                +
00a0bc 01fe     +MOVW R30 , R28
00a0bd 5bea     +SUBI R30 , LOW ( - 70 )
00a0be 4fff     +SBCI R31 , HIGH ( - 70 )
00a0bf 9001     +LD R0 , Z +
00a0c0 9011     +LD R1 , Z +
00a0c1 9161     +LD R22 , Z +
00a0c2 8170     +LD R23 , Z
00a0c3 01f0     +MOVW R30 , R0
                 	__GETD1SX 70
00a0c4 940e e05e 	CALL __PUTPARD1
                +
00a0c6 01fe     +MOVW R30 , R28
00a0c7 5be2     +SUBI R30 , LOW ( - 78 )
00a0c8 4fff     +SBCI R31 , HIGH ( - 78 )
00a0c9 9001     +LD R0 , Z +
00a0ca 9011     +LD R1 , Z +
00a0cb 9161     +LD R22 , Z +
00a0cc 8170     +LD R23 , Z
00a0cd 01f0     +MOVW R30 , R0
                 	__GETD1SX 78
00a0ce 940e c251 	CALL SUBOPT_0x50
00a0d0 940e c534 	CALL SUBOPT_0xC1
00a0d2 940e e05e 	CALL __PUTPARD1
00a0d4 940e c50f 	CALL SUBOPT_0xBA
00a0d6 940e d872 	CALL SUBOPT_0x380
                 ; 001A 007B         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a0d8 937f      	PUSH R23
00a0d9 936f      	PUSH R22
00a0da 93ff      	PUSH R31
00a0db 93ef      	PUSH R30
00a0dc 940e d899 	CALL SUBOPT_0x381
00a0de 940e d8a2 	CALL SUBOPT_0x382
00a0e0 91af      	POP  R26
00a0e1 91bf      	POP  R27
00a0e2 918f      	POP  R24
00a0e3 919f      	POP  R25
00a0e4 940e d8ad 	CALL SUBOPT_0x383
00a0e6 c0f6      	RJMP _0x34001D
                 ; 001A 007C 
                 ; 001A 007D         // printDebug("-L1 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 007E      }else if((viVoltUpLevel < (-0.375)) && (viVoltUpLevel >= (-0.719)) ){
                 _0x340006:
00a0e7 940e d857 	CALL SUBOPT_0x37D
00a0e9 940e d860 	CALL SUBOPT_0x37E
00a0eb f418      	BRSH _0x34000B
00a0ec 940e d8ba 	CALL SUBOPT_0x384
00a0ee f408      	BRSH _0x34000C
                 _0x34000B:
00a0ef c02c      	RJMP _0x34000A
                 _0x34000C:
                 ; 001A 007F         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0080         gaussian(viVoltPointTable[1][0],  viVoltPointTable[1][1],  viVoltPointTable[1][2], viTempOutPointTable[1][0], viTempOutPointTable[1][1], viTempOutPointTable[1][2], &factorA, &factorB, &factorC);
                +
00a0f0 01fe     +MOVW R30 , R28
00a0f1 5be6     +SUBI R30 , LOW ( - 74 )
00a0f2 4fff     +SBCI R31 , HIGH ( - 74 )
00a0f3 9001     +LD R0 , Z +
00a0f4 9011     +LD R1 , Z +
00a0f5 9161     +LD R22 , Z +
00a0f6 8170     +LD R23 , Z
00a0f7 01f0     +MOVW R30 , R0
                 	__GETD1SX 74
00a0f8 940e d8c2 	CALL SUBOPT_0x385
00a0fa 9670      	ADIW R30,16
00a0fb 940e c362 	CALL SUBOPT_0x78
00a0fd 01fe      	MOVW R30,R28
00a0fe 5bea      	SUBI R30,LOW(-(70))
00a0ff 4fff      	SBCI R31,HIGH(-(70))
00a100 9674      	ADIW R30,20
00a101 940e c362 	CALL SUBOPT_0x78
00a103 940e c5a6 	CALL SUBOPT_0xD0
00a105 940e e05e 	CALL __PUTPARD1
00a107 940e c539 	CALL SUBOPT_0xC2
00a109 940e e05e 	CALL __PUTPARD1
00a10b 940e c903 	CALL SUBOPT_0x163
00a10d 940e d8c8 	CALL SUBOPT_0x386
                 ; 001A 0081         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a10f 937f      	PUSH R23
00a110 936f      	PUSH R22
00a111 93ff      	PUSH R31
00a112 93ef      	PUSH R30
00a113 940e d8e6 	CALL SUBOPT_0x387
00a115 91af      	POP  R26
00a116 91bf      	POP  R27
00a117 918f      	POP  R24
00a118 919f      	POP  R25
00a119 940e d8ad 	CALL SUBOPT_0x383
00a11b c0c1      	RJMP _0x34001D
                 ; 001A 0082 
                 ; 001A 0083         // printDebug("-L2 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0084      }else if((viVoltUpLevel < (-0.719)) && (viVoltUpLevel >= (-1.021)) ){
                 _0x34000A:
00a11c 940e d8ba 	CALL SUBOPT_0x384
00a11e f418      	BRSH _0x34000F
00a11f 940e d8e8 	CALL SUBOPT_0x388
00a121 f408      	BRSH _0x340010
                 _0x34000F:
00a122 c030      	RJMP _0x34000E
                 _0x340010:
                 ; 001A 0085         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0086         gaussian(viVoltPointTable[2][0],  viVoltPointTable[2][1],  viVoltPointTable[2][2], viTempOutPointTable[2][0], viTempOutPointTable[2][1], viTempOutPointTable[2][2], &factorA, &factorB, &factorC);
                +
00a123 01fe     +MOVW R30 , R28
00a124 5aea     +SUBI R30 , LOW ( - 86 )
00a125 4fff     +SBCI R31 , HIGH ( - 86 )
00a126 9001     +LD R0 , Z +
00a127 9011     +LD R1 , Z +
00a128 9161     +LD R22 , Z +
00a129 8170     +LD R23 , Z
00a12a 01f0     +MOVW R30 , R0
                 	__GETD1SX 86
00a12b 940e d8c2 	CALL SUBOPT_0x385
00a12d 967c      	ADIW R30,28
00a12e 940e c362 	CALL SUBOPT_0x78
00a130 01fe      	MOVW R30,R28
00a131 5bea      	SUBI R30,LOW(-(70))
00a132 4fff      	SBCI R31,HIGH(-(70))
00a133 96b0      	ADIW R30,32
00a134 940e c362 	CALL SUBOPT_0x78
00a136 940e c51e 	CALL SUBOPT_0xBD
00a138 940e e05e 	CALL __PUTPARD1
                +
00a13a a5ee     +LDD R30 , Y + 46
00a13b a5ff     +LDD R31 , Y + 46 + 1
00a13c a968     +LDD R22 , Y + 46 + 2
00a13d a979     +LDD R23 , Y + 46 + 3
                 	__GETD1S 46
00a13e 940e e05e 	CALL __PUTPARD1
                +
00a140 a9ee     +LDD R30 , Y + 54
00a141 a9ff     +LDD R31 , Y + 54 + 1
00a142 ad68     +LDD R22 , Y + 54 + 2
00a143 ad79     +LDD R23 , Y + 54 + 3
                 	__GETD1S 54
00a144 940e d872 	CALL SUBOPT_0x380
                 ; 001A 0087         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a146 937f      	PUSH R23
00a147 936f      	PUSH R22
00a148 93ff      	PUSH R31
00a149 93ef      	PUSH R30
00a14a 940e d8e6 	CALL SUBOPT_0x387
00a14c 91af      	POP  R26
00a14d 91bf      	POP  R27
00a14e 918f      	POP  R24
00a14f 919f      	POP  R25
00a150 940e d8ad 	CALL SUBOPT_0x383
00a152 c08a      	RJMP _0x34001D
                 ; 001A 0088 
                 ; 001A 0089         // printDebug("-L3 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 008A      }else if((viVoltUpLevel < (-1.021)) && (viVoltUpLevel >= (-1.269)) ){
                 _0x34000E:
00a153 940e d8e8 	CALL SUBOPT_0x388
00a155 f418      	BRSH _0x340013
00a156 940e d8f0 	CALL SUBOPT_0x389
00a158 f408      	BRSH _0x340014
                 _0x340013:
00a159 c033      	RJMP _0x340012
                 _0x340014:
                 ; 001A 008B         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 008C         gaussian(viVoltPointTable[3][0],  viVoltPointTable[3][1],  viVoltPointTable[3][2], viTempOutPointTable[3][0], viTempOutPointTable[3][1], viTempOutPointTable[3][2], &factorA, &factorB, &factorC);
                +
00a15a 01fe     +MOVW R30 , R28
00a15b 59ee     +SUBI R30 , LOW ( - 98 )
00a15c 4fff     +SBCI R31 , HIGH ( - 98 )
00a15d 9001     +LD R0 , Z +
00a15e 9011     +LD R1 , Z +
00a15f 9161     +LD R22 , Z +
00a160 8170     +LD R23 , Z
00a161 01f0     +MOVW R30 , R0
                 	__GETD1SX 98
00a162 940e d8c2 	CALL SUBOPT_0x385
00a164 96b8      	ADIW R30,40
00a165 940e c362 	CALL SUBOPT_0x78
00a167 01fe      	MOVW R30,R28
00a168 5bea      	SUBI R30,LOW(-(70))
00a169 4fff      	SBCI R31,HIGH(-(70))
00a16a 96bc      	ADIW R30,44
00a16b 940e c362 	CALL SUBOPT_0x78
                +
00a16d a9ea     +LDD R30 , Y + 50
00a16e a9fb     +LDD R31 , Y + 50 + 1
00a16f a96c     +LDD R22 , Y + 50 + 2
00a170 a97d     +LDD R23 , Y + 50 + 3
                 	__GETD1S 50
00a171 940e e05e 	CALL __PUTPARD1
                +
00a173 adea     +LDD R30 , Y + 58
00a174 adfb     +LDD R31 , Y + 58 + 1
00a175 ad6c     +LDD R22 , Y + 58 + 2
00a176 ad7d     +LDD R23 , Y + 58 + 3
                 	__GETD1S 58
00a177 940e e05e 	CALL __PUTPARD1
00a179 01fe      	MOVW R30,R28
00a17a 96fa      	ADIW R30,58
00a17b 9638      	ADIW R30,8
00a17c 940e c362 	CALL SUBOPT_0x78
00a17e 940e d8c8 	CALL SUBOPT_0x386
                 ; 001A 008D         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a180 937f      	PUSH R23
00a181 936f      	PUSH R22
00a182 93ff      	PUSH R31
00a183 93ef      	PUSH R30
00a184 940e d8e6 	CALL SUBOPT_0x387
00a186 91af      	POP  R26
00a187 91bf      	POP  R27
00a188 918f      	POP  R24
00a189 919f      	POP  R25
00a18a 940e d8ad 	CALL SUBOPT_0x383
00a18c c050      	RJMP _0x34001D
                 ; 001A 008E 
                 ; 001A 008F         // printDebug("-L4 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0090      }else if((viVoltUpLevel < (-1.269)) && (viVoltUpLevel >= (-1.504)) ){        //-1.454 + 50.0   | 50 = +compencess
                 _0x340012:
00a18d 940e d8f0 	CALL SUBOPT_0x389
00a18f f428      	BRSH _0x340017
00a190 940e d857 	CALL SUBOPT_0x37D
00a192 940e cd2a 	CALL SUBOPT_0x20B
00a194 f408      	BRSH _0x340018
                 _0x340017:
00a195 c02e      	RJMP _0x340016
                 _0x340018:
                 ; 001A 0091         //ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 ; 001A 0092         gaussian(viVoltPointTable[4][0],  viVoltPointTable[4][1],  viVoltPointTable[4][2], viTempOutPointTable[4][0], viTempOutPointTable[4][1], viTempOutPointTable[4][2], &factorA, &factorB, &factorC);
                +
00a196 01fe     +MOVW R30 , R28
00a197 59e2     +SUBI R30 , LOW ( - 110 )
00a198 4fff     +SBCI R31 , HIGH ( - 110 )
00a199 9001     +LD R0 , Z +
00a19a 9011     +LD R1 , Z +
00a19b 9161     +LD R22 , Z +
00a19c 8170     +LD R23 , Z
00a19d 01f0     +MOVW R30 , R0
                 	__GETD1SX 110
00a19e 940e d8c2 	CALL SUBOPT_0x385
00a1a0 96f4      	ADIW R30,52
00a1a1 940e c362 	CALL SUBOPT_0x78
00a1a3 01fe      	MOVW R30,R28
00a1a4 5bea      	SUBI R30,LOW(-(70))
00a1a5 4fff      	SBCI R31,HIGH(-(70))
00a1a6 96f8      	ADIW R30,56
00a1a7 940e c362 	CALL SUBOPT_0x78
00a1a9 940e d867 	CALL SUBOPT_0x37F
00a1ab 01fe      	MOVW R30,R28
00a1ac 9672      	ADIW R30,18
00a1ad 96f4      	ADIW R30,52
00a1ae 940e c362 	CALL SUBOPT_0x78
00a1b0 01fe      	MOVW R30,R28
00a1b1 9676      	ADIW R30,22
00a1b2 96f8      	ADIW R30,56
00a1b3 940e c362 	CALL SUBOPT_0x78
00a1b5 940e d8c8 	CALL SUBOPT_0x386
                 ; 001A 0093         ivTempValue = (factorA*viVoltUpLevel*viVoltUpLevel) + (factorB*viVoltUpLevel) + factorC;      //polynomail formular
00a1b7 937f      	PUSH R23
00a1b8 936f      	PUSH R22
00a1b9 93ff      	PUSH R31
00a1ba 93ef      	PUSH R30
00a1bb 940e d8e6 	CALL SUBOPT_0x387
00a1bd 91af      	POP  R26
00a1be 91bf      	POP  R27
00a1bf 918f      	POP  R24
00a1c0 919f      	POP  R25
00a1c1 940e d8ad 	CALL SUBOPT_0x383
00a1c3 c019      	RJMP _0x34001D
                 ; 001A 0094 
                 ; 001A 0095          //printDebug("-L5 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp(%f)\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel,ivTempValue);
                 ; 001A 0096      }
                 ; 001A 0097      else if(viVoltUpLevel < (-1.504)){
                 _0x340016:
00a1c4 940e d857 	CALL SUBOPT_0x37D
00a1c6 940e cd2a 	CALL SUBOPT_0x20B
00a1c8 f4d8      	BRSH _0x34001A
                 ; 001A 0098         ivTempValue = (viVoltUpLevel*1000) / 10.0;
                 _0x34001C:
                +
00a1c9 01de     +MOVW R26 , R28
00a1ca 54a6     +SUBI R26 , LOW ( - 186 )
00a1cb 4fbf     +SBCI R27 , HIGH ( - 186 )
00a1cc 900d     +LD R0 , X +
00a1cd 901d     +LD R1 , X +
00a1ce 918d     +LD R24 , X +
00a1cf 919c     +LD R25 , X
00a1d0 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
                +
00a1d1 e0e0     +LDI R30 , LOW ( 0x447A0000 )
00a1d2 e0f0     +LDI R31 , HIGH ( 0x447A0000 )
00a1d3 e76a     +LDI R22 , BYTE3 ( 0x447A0000 )
00a1d4 e474     +LDI R23 , BYTE4 ( 0x447A0000 )
                 	__GETD1N 0x447A0000
00a1d5 940e ddff 	CALL __MULF12
00a1d7 01df      	MOVW R26,R30
00a1d8 01cb      	MOVW R24,R22
00a1d9 940e c6f1 	CALL SUBOPT_0x10A
00a1db 940e de4d 	CALL __DIVF21
                 _0x34001D:
                +
00a1dd 01de     +MOVW R26 , R28
00a1de 54aa     +SUBI R26 , LOW ( - 182 )
00a1df 4fbf     +SBCI R27 , HIGH ( - 182 )
00a1e0 93ed     +ST X + , R30
00a1e1 93fd     +ST X + , R31
00a1e2 936d     +ST X + , R22
00a1e3 937c     +ST X , R23
                 	__PUTD1SX 182
                 ; 001A 0099          //printDebug("-L6 ADC(%d), V(%f) ,V(offset+(-range))(%f) ,Temp Error\r\n",viADCSmooth,viADCToVolt,viVoltUpLevel);
                 ; 001A 009A      }
                 ; 001A 009B      //printDebug("%f,%f\r\n",viVoltUpLevel,ivTempValue);
                 ; 001A 009C      return ivTempValue;
                 _0x34001A:
                +
00a1e4 01fe     +MOVW R30 , R28
00a1e5 54ea     +SUBI R30 , LOW ( - 182 )
00a1e6 4fff     +SBCI R31 , HIGH ( - 182 )
00a1e7 9001     +LD R0 , Z +
00a1e8 9011     +LD R1 , Z +
00a1e9 9161     +LD R22 , Z +
00a1ea 8170     +LD R23 , Z
00a1eb 01f0     +MOVW R30 , R0
                 	__GETD1SX 182
00a1ec 8119      	LDD  R17,Y+1
00a1ed 8108      	LDD  R16,Y+0
00a1ee 96ef      	ADIW R28,63
00a1ef 96ef      	ADIW R28,63
00a1f0 96ef      	ADIW R28,63
00a1f1 962f      	ADIW R28,15
00a1f2 9508      	RET
                 ; 001A 009D }
                 ;
                 ;float iAD595ADCToVolt(long viADC_p,int viADCLoop_p){            //Volt Uplevel
                 ; 001A 009F float iAD595ADCToVolt(long viADC_p,int viADCLoop_p){
                 _iAD595ADCToVolt:
                 ; 001A 00A0      int    viADCSmooth =  (int)(viADC_p/viADCLoop_p);           ////(float)(viADCbuffer/30.0);
                 ; 001A 00A1      float  viADCToVolt = 0.0;
                 ; 001A 00A2      const float  viZeroSet   = 1.68;
                 ; 001A 00A3      float viVoltUpLevel = 0.0;
                 ; 001A 00A4      float ivVoltValue = 0.0;
                 ; 001A 00A5 
                 ; 001A 00A6      viADCToVolt = (float)(viADCSmooth/1024.0)*3.30;          //- 0  +
00a1f3 93ba      	ST   -Y,R27
00a1f4 93aa      	ST   -Y,R26
00a1f5 9760      	SBIW R28,16
00a1f6 e180      	LDI  R24,16
00a1f7 e0a0      	LDI  R26,LOW(0)
00a1f8 e0b0      	LDI  R27,HIGH(0)
00a1f9 ece4      	LDI  R30,LOW(_0x34001B*2)
00a1fa e6f8      	LDI  R31,HIGH(_0x34001B*2)
00a1fb e060      	LDI  R22,BYTE3(_0x34001B*2)
00a1fc 940e e0dc 	CALL __INITLOCB
00a1fe 931a      	ST   -Y,R17
00a1ff 930a      	ST   -Y,R16
                 ;	viADC_p -> Y+20
                 ;	viADCLoop_p -> Y+18
                 ;	viADCSmooth -> R16,R17
                 ;	viADCToVolt -> Y+14
                 ;	viZeroSet -> Y+10
                 ;	viVoltUpLevel -> Y+6
                 ;	ivVoltValue -> Y+2
00a200 89ea      	LDD  R30,Y+18
00a201 89fb      	LDD  R31,Y+18+1
00a202 940e cdf3 	CALL SUBOPT_0x225
00a204 940e d832 	CALL SUBOPT_0x37A
00a206 940e d839 	CALL SUBOPT_0x37B
00a208 940e d8f8 	CALL SUBOPT_0x38A
                 ; 001A 00A7      viVoltUpLevel = viADCToVolt - viZeroSet;
                +
00a20a e3ad     +LDI R26 , LOW ( 0x3FD70A3D )
00a20b e0ba     +LDI R27 , HIGH ( 0x3FD70A3D )
00a20c ed87     +LDI R24 , BYTE3 ( 0x3FD70A3D )
00a20d e39f     +LDI R25 , BYTE4 ( 0x3FD70A3D )
                 	__GETD2N 0x3FD70A3D
00a20e 940e dda8 	CALL __SUBF12
00a210 940e c4d2 	CALL SUBOPT_0xAF
                 ; 001A 00A8 
                 ; 001A 00A9 
                 ; 001A 00AA      return viVoltUpLevel;
00a212 8119      	LDD  R17,Y+1
00a213 8108      	LDD  R16,Y+0
00a214 9668      	ADIW R28,24
00a215 9508      	RET
                 ; 001A 00AB }
                 ;#include <stdlib.h>
                 ;#include "gaussianAD595.h"
                 ;#include "debug.h"
                 ;
                 
                 	.CSEG
                 _fabs:
00a216 940e e063 	CALL __PUTPARD2
00a218 91e9          ld   r30,y+
00a219 91f9          ld   r31,y+
00a21a 9169          ld   r22,y+
00a21b 9179          ld   r23,y+
00a21c 777f          cbr  r23,0x80
00a21d 9508          ret
                 _atoi:
00a21e 93ba      	ST   -Y,R27
00a21f 93aa      	ST   -Y,R26
00a220 81b9         	ldd  r27,y+1
00a221 81a8         	ld   r26,y
                 __atoi0:
00a222 91ec         	ld   r30,x
00a223 2f8a              mov  r24,r26
00a224 2fae      	MOV  R26,R30
00a225 940e bfb1 	CALL _isspace
00a227 2fa8              mov  r26,r24
00a228 23ee         	tst  r30
00a229 f011         	breq __atoi1
00a22a 9611         	adiw r26,1
00a22b cff6         	rjmp __atoi0
                 __atoi1:
00a22c 94e8         	clt
00a22d 91ec         	ld   r30,x
00a22e 32ed         	cpi  r30,'-'
00a22f f411         	brne __atoi2
00a230 9468         	set
00a231 c002         	rjmp __atoi3
                 __atoi2:
00a232 32eb         	cpi  r30,'+'
00a233 f409         	brne __atoi4
                 __atoi3:
00a234 9611         	adiw r26,1
                 __atoi4:
00a235 2766         	clr  r22
00a236 2777         	clr  r23
                 __atoi5:
00a237 91ec         	ld   r30,x
00a238 2f8a              mov  r24,r26
00a239 2fae      	MOV  R26,R30
00a23a 940e bf9f 	CALL _isdigit
00a23c 2fa8              mov  r26,r24
00a23d 23ee         	tst  r30
00a23e f079         	breq __atoi6
00a23f 01fb         	movw r30,r22
00a240 0f66         	lsl  r22
00a241 1f77         	rol  r23
00a242 0f66         	lsl  r22
00a243 1f77         	rol  r23
00a244 0f6e         	add  r22,r30
00a245 1f7f         	adc  r23,r31
00a246 0f66         	lsl  r22
00a247 1f77         	rol  r23
00a248 91ed         	ld   r30,x+
00a249 27ff         	clr  r31
00a24a 53e0         	subi r30,'0'
00a24b 0f6e         	add  r22,r30
00a24c 1f7f         	adc  r23,r31
00a24d cfe9         	rjmp __atoi5
                 __atoi6:
00a24e 01fb         	movw r30,r22
00a24f f41e         	brtc __atoi7
00a250 95e0         	com  r30
00a251 95f0         	com  r31
00a252 9631         	adiw r30,1
                 __atoi7:
00a253 9622         	adiw r28,2
00a254 9508         	ret
                 _atol:
00a255 93ba      	ST   -Y,R27
00a256 93aa      	ST   -Y,R26
00a257 81b9          ldd  r27,y+1
00a258 81a8          ld   r26,y
                 __atol0:
00a259 91ec          ld   r30,x
00a25a 93af          push r26
00a25b 2fae      	MOV  R26,R30
00a25c 940e bfb1 	CALL _isspace
00a25e 91af          pop  r26
00a25f 23ee          tst  r30
00a260 f011          breq __atol1
00a261 9611          adiw r26,1
00a262 cff6          rjmp __atol0
                 __atol1:
00a263 94e8          clt
00a264 91ec          ld   r30,x
00a265 32ed          cpi  r30,'-'
00a266 f411          brne __atol2
00a267 9468          set
00a268 c002          rjmp __atol3
                 __atol2:
00a269 32eb          cpi  r30,'+'
00a26a f409          brne __atol4
                 __atol3:
00a26b 9611          adiw r26,1
                 __atol4:
00a26c 2400          clr  r0
00a26d 2411          clr  r1
00a26e 2788          clr  r24
00a26f 2799          clr  r25
                 __atol5:
00a270 91ec          ld   r30,x
00a271 93af          push r26
00a272 2fae      	MOV  R26,R30
00a273 940e bf9f 	CALL _isdigit
00a275 91af          pop  r26
00a276 23ee          tst  r30
00a277 f089          breq __atol6
00a278 01f0          movw r30,r0
00a279 01bc          movw r22,r24
00a27a d01b          rcall __atol8
00a27b d01a          rcall __atol8
00a27c 0e0e          add  r0,r30
00a27d 1e1f          adc  r1,r31
00a27e 1f86          adc  r24,r22
00a27f 1f97          adc  r25,r23
00a280 d015          rcall __atol8
00a281 91ed          ld   r30,x+
00a282 27ff          clr  r31
00a283 53e0          subi r30,'0'
00a284 0e0e          add  r0,r30
00a285 1e1f          adc  r1,r31
00a286 1f8f          adc  r24,r31
00a287 1f9f          adc  r25,r31
00a288 cfe7          rjmp __atol5
                 __atol6:
00a289 01f0          movw r30,r0
00a28a 01bc          movw r22,r24
00a28b f446          brtc __atol7
00a28c 95e0          com  r30
00a28d 95f0          com  r31
00a28e 9560          com  r22
00a28f 9570          com  r23
00a290 2788          clr  r24
00a291 9631          adiw r30,1
00a292 1f68          adc  r22,r24
00a293 1f78          adc  r23,r24
                 __atol7:
00a294 9622          adiw r28,2
00a295 9508          ret
                 
                 __atol8:
00a296 0c00          lsl  r0
00a297 1c11          rol  r1
00a298 1f88          rol  r24
00a299 1f99          rol  r25
00a29a 9508          ret
                 _ftoa:
00a29b 93ba      	ST   -Y,R27
00a29c 93aa      	ST   -Y,R26
00a29d 9724      	SBIW R28,4
00a29e 940e cefb 	CALL SUBOPT_0x24C
00a2a0 e3ef      	LDI  R30,LOW(63)
00a2a1 83eb      	STD  Y+3,R30
00a2a2 931a      	ST   -Y,R17
00a2a3 930a      	ST   -Y,R16
00a2a4 85eb      	LDD  R30,Y+11
00a2a5 85fc      	LDD  R31,Y+11+1
00a2a6 3fef      	CPI  R30,LOW(0xFFFF)
00a2a7 efaf      	LDI  R26,HIGH(0xFFFF)
00a2a8 07fa      	CPC  R31,R26
00a2a9 f449      	BRNE _0x200000D
00a2aa 940e c8ce 	CALL SUBOPT_0x15A
                +
00a2ac eda6     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
00a2ad e6b8     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
00a2ae e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
00a2af e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
00a2b0 940e a5a1 	CALL _strcpyf
00a2b2 c0a1      	RJMP _0x20E002C
                 _0x200000D:
00a2b3 3fef      	CPI  R30,LOW(0x7FFF)
00a2b4 e7af      	LDI  R26,HIGH(0x7FFF)
00a2b5 07fa      	CPC  R31,R26
00a2b6 f449      	BRNE _0x200000C
00a2b7 940e c8ce 	CALL SUBOPT_0x15A
                +
00a2b9 eda7     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
00a2ba e6b8     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
00a2bb e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
00a2bc e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
00a2bd 940e a5a1 	CALL _strcpyf
00a2bf c094      	RJMP _0x20E002C
                 _0x200000C:
00a2c0 85ac      	LDD  R26,Y+12
00a2c1 23aa      	TST  R26
00a2c2 f452      	BRPL _0x200000F
00a2c3 940e c305 	CALL SUBOPT_0x6B
00a2c5 940e dd09 	CALL __ANEGF1
00a2c7 940e d8fe 	CALL SUBOPT_0x38B
00a2c9 940e d903 	CALL SUBOPT_0x38C
00a2cb e2ed      	LDI  R30,LOW(45)
00a2cc 93ec      	ST   X,R30
                 _0x200000F:
00a2cd 85a8      	LDD  R26,Y+8
00a2ce 30a7      	CPI  R26,LOW(0x7)
00a2cf f010      	BRLO _0x2000010
00a2d0 e0e6      	LDI  R30,LOW(6)
00a2d1 87e8      	STD  Y+8,R30
                 _0x2000010:
00a2d2 8518      	LDD  R17,Y+8
                 _0x2000011:
00a2d3 2fe1      	MOV  R30,R17
00a2d4 5011      	SUBI R17,1
00a2d5 30e0      	CPI  R30,0
00a2d6 f029      	BREQ _0x2000013
00a2d7 940e d90a 	CALL SUBOPT_0x38D
00a2d9 940e c4de 	CALL SUBOPT_0xB1
00a2db cff7      	RJMP _0x2000011
                 _0x2000013:
00a2dc 940e d913 	CALL SUBOPT_0x38E
00a2de 940e ddaf 	CALL __ADDF12
00a2e0 940e d8fe 	CALL SUBOPT_0x38B
00a2e2 e010      	LDI  R17,LOW(0)
00a2e3 940e d827 	CALL SUBOPT_0x378
00a2e5 940e c4de 	CALL SUBOPT_0xB1
                 _0x2000014:
00a2e7 940e d913 	CALL SUBOPT_0x38E
00a2e9 940e de92 	CALL __CMPF12
00a2eb f098      	BRLO _0x2000016
00a2ec 940e c4e8 	CALL SUBOPT_0xB3
00a2ee 940e d91a 	CALL SUBOPT_0x38F
00a2f0 940e c4de 	CALL SUBOPT_0xB1
00a2f2 5f1f      	SUBI R17,-LOW(1)
00a2f3 3217      	CPI  R17,39
00a2f4 f048      	BRLO _0x2000017
00a2f5 940e c8ce 	CALL SUBOPT_0x15A
                +
00a2f7 edab     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
00a2f8 e6b8     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
00a2f9 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
00a2fa e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
00a2fb 940e a5a1 	CALL _strcpyf
00a2fd c056      	RJMP _0x20E002C
                 _0x2000017:
00a2fe cfe8      	RJMP _0x2000014
                 _0x2000016:
00a2ff 3010      	CPI  R17,0
00a300 f429      	BRNE _0x2000018
00a301 940e d903 	CALL SUBOPT_0x38C
00a303 e3e0      	LDI  R30,LOW(48)
00a304 93ec      	ST   X,R30
00a305 c026      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
00a306 2fe1      	MOV  R30,R17
00a307 5011      	SUBI R17,1
00a308 30e0      	CPI  R30,0
00a309 f111      	BREQ _0x200001C
00a30a 940e d90a 	CALL SUBOPT_0x38D
00a30c 940e d91f 	CALL SUBOPT_0x390
00a30e 01df      	MOVW R26,R30
00a30f 01cb      	MOVW R24,R22
00a310 940e c004 	CALL _floor
00a312 940e c4de 	CALL SUBOPT_0xB1
00a314 940e d913 	CALL SUBOPT_0x38E
00a316 940e de4d 	CALL __DIVF21
00a318 940e dd3c 	CALL __CFD1U
00a31a 2f0e      	MOV  R16,R30
00a31b 940e d903 	CALL SUBOPT_0x38C
00a31d 940e d924 	CALL SUBOPT_0x391
00a31f 940e c4e8 	CALL SUBOPT_0xB3
00a321 940e d92a 	CALL SUBOPT_0x392
00a323 940e ddff 	CALL __MULF12
00a325 940e d92f 	CALL SUBOPT_0x393
00a327 940e cd89 	CALL SUBOPT_0x218
00a329 940e d8fe 	CALL SUBOPT_0x38B
00a32b cfda      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
00a32c 85e8      	LDD  R30,Y+8
00a32d 30e0      	CPI  R30,0
00a32e f109      	BREQ _0x20E002B
00a32f 940e d903 	CALL SUBOPT_0x38C
00a331 e2ee      	LDI  R30,LOW(46)
00a332 93ec      	ST   X,R30
                 _0x200001E:
00a333 85e8      	LDD  R30,Y+8
00a334 50e1      	SUBI R30,LOW(1)
00a335 87e8      	STD  Y+8,R30
00a336 5fef      	SUBI R30,-LOW(1)
00a337 f0c1      	BREQ _0x2000020
00a338 940e d92f 	CALL SUBOPT_0x393
00a33a 940e d91a 	CALL SUBOPT_0x38F
00a33c 940e d8fe 	CALL SUBOPT_0x38B
00a33e 940e c305 	CALL SUBOPT_0x6B
00a340 940e dd3c 	CALL __CFD1U
00a342 2f0e      	MOV  R16,R30
00a343 940e d903 	CALL SUBOPT_0x38C
00a345 940e d924 	CALL SUBOPT_0x391
00a347 940e d92f 	CALL SUBOPT_0x393
00a349 940e d92a 	CALL SUBOPT_0x392
00a34b 940e cd89 	CALL SUBOPT_0x218
00a34d 940e d8fe 	CALL SUBOPT_0x38B
00a34f cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002B:
00a350 81ae      	LDD  R26,Y+6
00a351 81bf      	LDD  R27,Y+6+1
00a352 e0e0      	LDI  R30,LOW(0)
00a353 93ec      	ST   X,R30
                 _0x20E002C:
00a354 8119      	LDD  R17,Y+1
00a355 8108      	LDD  R16,Y+0
00a356 962d      	ADIW R28,13
00a357 9508      	RET
                 _atof:
00a358 93ba      	ST   -Y,R27
00a359 93aa      	ST   -Y,R26
00a35a 972a      	SBIW R28,10
00a35b 940e e0ce 	CALL __SAVELOCR6
00a35d e0e0      	LDI  R30,LOW(0)
                +
00a35e 87e8     +STD Y + 8 , R30
00a35f 87e9     +STD Y + 8 + 1 , R30
00a360 87ea     +STD Y + 8 + 2 , R30
00a361 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
00a362 89a8      	LDD  R26,Y+16
00a363 89b9      	LDD  R27,Y+16+1
00a364 91ec      	LD   R30,X
00a365 2f5e      	MOV  R21,R30
00a366 2fae      	MOV  R26,R30
00a367 940e bfb1 	CALL _isspace
00a369 30e0      	CPI  R30,0
00a36a f019      	BREQ _0x200003E
00a36b 940e d934 	CALL SUBOPT_0x394
00a36d cff4      	RJMP _0x200003C
                 _0x200003E:
00a36e e0e0      	LDI  R30,LOW(0)
00a36f 83ef      	STD  Y+7,R30
00a370 325b      	CPI  R21,43
00a371 f021      	BREQ _0x2000073
00a372 325d      	CPI  R21,45
00a373 f439      	BRNE _0x2000041
00a374 e0e1      	LDI  R30,LOW(1)
00a375 83ef      	STD  Y+7,R30
                 _0x2000073:
00a376 89e8      	LDD  R30,Y+16
00a377 89f9      	LDD  R31,Y+16+1
00a378 9631      	ADIW R30,1
00a379 8be8      	STD  Y+16,R30
00a37a 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
00a37b e0e0      	LDI  R30,LOW(0)
00a37c 2f4e      	MOV  R20,R30
00a37d 2f5e      	MOV  R21,R30
                +
00a37e 8908     +LDD R16 , Y + 16
00a37f 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
00a380 89a8      	LDD  R26,Y+16
00a381 89b9      	LDD  R27,Y+16+1
00a382 940e d7b9 	CALL SUBOPT_0x366
00a384 f449      	BRNE _0x2000045
00a385 89a8      	LDD  R26,Y+16
00a386 89b9      	LDD  R27,Y+16+1
00a387 91ac      	LD   R26,X
00a388 e2ee      	LDI  R30,LOW(46)
00a389 940e df45 	CALL __EQB12
00a38b 2f5e      	MOV  R21,R30
00a38c 30e0      	CPI  R30,0
00a38d f021      	BREQ _0x2000044
                 _0x2000045:
00a38e 2b45      	OR   R20,R21
00a38f 940e d934 	CALL SUBOPT_0x394
00a391 cfee      	RJMP _0x2000042
                 _0x2000044:
                +
00a392 8928     +LDD R18 , Y + 16
00a393 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
00a394 3040      	CPI  R20,0
00a395 f0e9      	BREQ _0x2000047
00a396 89e8      	LDD  R30,Y+16
00a397 89f9      	LDD  R31,Y+16+1
00a398 9731      	SBIW R30,1
00a399 8be8      	STD  Y+16,R30
00a39a 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
00a39b 89a8      	LDD  R26,Y+16
00a39c 89b9      	LDD  R27,Y+16+1
00a39d 91ac      	LD   R26,X
00a39e 32ae      	CPI  R26,LOW(0x2E)
00a39f f099      	BREQ _0x200004A
00a3a0 89a8      	LDD  R26,Y+16
00a3a1 89b9      	LDD  R27,Y+16+1
00a3a2 940e d773 	CALL SUBOPT_0x359
00a3a4 97f0      	SBIW R30,48
00a3a5 940e c5c6 	CALL SUBOPT_0xD7
00a3a7 940e d92a 	CALL SUBOPT_0x392
00a3a9 940e c476 	CALL SUBOPT_0x9F
00a3ab 940e d78a 	CALL SUBOPT_0x35E
00a3ad 89e8      	LDD  R30,Y+16
00a3ae 89f9      	LDD  R31,Y+16+1
00a3af 9731      	SBIW R30,1
00a3b0 8be8      	STD  Y+16,R30
00a3b1 8bf9      	STD  Y+16+1,R31
00a3b2 cfe8      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
00a3b3 940e d827 	CALL SUBOPT_0x378
00a3b5 940e c63c 	CALL SUBOPT_0xE9
                 _0x200004B:
00a3b7 89a8      	LDD  R26,Y+16
00a3b8 89b9      	LDD  R27,Y+16+1
00a3b9 9711      	SBIW R26,1
00a3ba 8ba8      	STD  Y+16,R26
00a3bb 8bb9      	STD  Y+16+1,R27
00a3bc 17a0      	CP   R26,R16
00a3bd 07b1      	CPC  R27,R17
00a3be f0a0      	BRLO _0x200004D
00a3bf 940e d773 	CALL SUBOPT_0x359
00a3c1 97f0      	SBIW R30,48
00a3c2 940e c075 	CALL SUBOPT_0xB
00a3c4 940e d92a 	CALL SUBOPT_0x392
00a3c6 940e ddff 	CALL __MULF12
00a3c8 940e c5c6 	CALL SUBOPT_0xD7
00a3ca 940e ddaf 	CALL __ADDF12
00a3cc 940e d78a 	CALL SUBOPT_0x35E
00a3ce 940e d93a 	CALL SUBOPT_0x395
00a3d0 940e c63c 	CALL SUBOPT_0xE9
00a3d2 cfe4      	RJMP _0x200004B
                 _0x200004D:
00a3d3 01d9      	MOVW R26,R18
                +
00a3d4 5f2f     +SUBI R18 , LOW ( - 1 )
00a3d5 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a3d6 915c      	LD   R21,X
00a3d7 3655      	CPI  R21,101
00a3d8 f019      	BREQ _0x200004F
00a3d9 3455      	CPI  R21,69
00a3da f009      	BREQ _0x200004F
00a3db c057      	RJMP _0x200004E
                 _0x200004F:
00a3dc e0e0      	LDI  R30,LOW(0)
00a3dd 2f4e      	MOV  R20,R30
00a3de 83ee      	STD  Y+6,R30
00a3df 01d9      	MOVW R26,R18
00a3e0 915c      	LD   R21,X
00a3e1 325b      	CPI  R21,43
00a3e2 f021      	BREQ _0x2000074
00a3e3 325d      	CPI  R21,45
00a3e4 f421      	BRNE _0x2000053
00a3e5 e0e1      	LDI  R30,LOW(1)
00a3e6 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
00a3e7 5f2f     +SUBI R18 , LOW ( - 1 )
00a3e8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
00a3e9 01d9      	MOVW R26,R18
                +
00a3ea 5f2f     +SUBI R18 , LOW ( - 1 )
00a3eb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a3ec 91ec      	LD   R30,X
00a3ed 2f5e      	MOV  R21,R30
00a3ee 2fae      	MOV  R26,R30
00a3ef 940e bf9f 	CALL _isdigit
00a3f1 30e0      	CPI  R30,0
00a3f2 f039      	BREQ _0x2000056
00a3f3 e0aa      	LDI  R26,LOW(10)
00a3f4 024a      	MULS R20,R26
00a3f5 01f0      	MOVW R30,R0
00a3f6 0fe5      	ADD  R30,R21
00a3f7 53e0      	SUBI R30,LOW(48)
00a3f8 2f4e      	MOV  R20,R30
00a3f9 cfef      	RJMP _0x2000054
                 _0x2000056:
00a3fa 3247      	CPI  R20,39
00a3fb f068      	BRLO _0x2000057
00a3fc 81ef      	LDD  R30,Y+7
00a3fd 30e0      	CPI  R30,0
00a3fe f029      	BREQ _0x2000058
                +
00a3ff efef     +LDI R30 , LOW ( 0xFF7FFFFF )
00a400 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
00a401 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
00a402 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
00a403 c03a      	RJMP _0x20E002A
                 _0x2000058:
                +
00a404 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
00a405 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
00a406 e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
00a407 e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
00a408 c035      	RJMP _0x20E002A
                 _0x2000057:
00a409 e250      	LDI  R21,LOW(32)
00a40a 940e d827 	CALL SUBOPT_0x378
00a40c 940e c63c 	CALL SUBOPT_0xE9
                 _0x2000059:
00a40e 3050      	CPI  R21,0
00a40f f079      	BREQ _0x200005B
00a410 940e c5cb 	CALL SUBOPT_0xD8
00a412 940e c075 	CALL SUBOPT_0xB
00a414 940e d93d 	CALL SUBOPT_0x396
00a416 2fe4      	MOV  R30,R20
00a417 23e5      	AND  R30,R21
00a418 f021      	BREQ _0x200005C
00a419 940e d93a 	CALL SUBOPT_0x395
00a41b 940e c63c 	CALL SUBOPT_0xE9
                 _0x200005C:
00a41d 9556      	LSR  R21
00a41e cfef      	RJMP _0x2000059
                 _0x200005B:
00a41f 81ee      	LDD  R30,Y+6
00a420 30e0      	CPI  R30,0
00a421 f039      	BREQ _0x200005D
00a422 940e c5cb 	CALL SUBOPT_0xD8
00a424 940e c5c6 	CALL SUBOPT_0xD7
00a426 940e de4d 	CALL __DIVF21
00a428 c006      	RJMP _0x2000075
                 _0x200005D:
00a429 940e c5cb 	CALL SUBOPT_0xD8
00a42b 940e c5c6 	CALL SUBOPT_0xD7
00a42d 940e ddff 	CALL __MULF12
                 _0x2000075:
                +
00a42f 87e8     +STD Y + 8 , R30
00a430 87f9     +STD Y + 8 + 1 , R31
00a431 876a     +STD Y + 8 + 2 , R22
00a432 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
00a433 81ef      	LDD  R30,Y+7
00a434 30e0      	CPI  R30,0
00a435 f031      	BREQ _0x200005F
00a436 940e c24c 	CALL SUBOPT_0x4F
00a438 940e dd09 	CALL __ANEGF1
00a43a 940e d78a 	CALL SUBOPT_0x35E
                 _0x200005F:
00a43c 940e c24c 	CALL SUBOPT_0x4F
                 _0x20E002A:
00a43e 940e e0d5 	CALL __LOADLOCR6
00a440 9662      	ADIW R28,18
00a441 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
00a442 940e c426 	CALL SUBOPT_0x94
00a444 940e df3b 	CALL __CWD1
00a446 940e d941 	CALL SUBOPT_0x397
00a448 c0d7      	RJMP _0x20E0027
                 _rand:
00a449 91e0 1aa9 	LDS  R30,__seed_G100
00a44b 91f0 1aaa 	LDS  R31,__seed_G100+1
00a44d 9160 1aab 	LDS  R22,__seed_G100+2
00a44f 9170 1aac 	LDS  R23,__seed_G100+3
                +
00a451 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
00a452 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
00a453 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
00a454 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
00a455 940e df5c 	CALL __MULD12U
                +
00a457 59ee     +SUBI R30 , LOW ( - 30562 )
00a458 48f8     +SBCI R31 , HIGH ( - 30562 )
00a459 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
00a45a 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
00a45b 940e d941 	CALL SUBOPT_0x397
00a45d 01fb      	movw r30,r22
00a45e 77ff      	andi r31,0x7F
00a45f 9508      	RET
                 _allocate_block_G100:
00a460 940e d68b 	CALL SUBOPT_0x342
                +
00a462 e80a     +LDI R16 , LOW ( 7562 )
00a463 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
00a464 01d8      	MOVW R26,R16
00a465 940e c720 	CALL SUBOPT_0x112
                 _0x2000061:
00a467 2e00      	MOV  R0,R16
00a468 2a01      	OR   R0,R17
00a469 f199      	BREQ _0x2000063
00a46a 01d8      	MOVW R26,R16
00a46b 940e e02a 	CALL __GETW1P
00a46d 0fe0      	ADD  R30,R16
00a46e 1ff1      	ADC  R31,R17
00a46f 9634      	ADIW R30,4
00a470 01af      	MOVW R20,R30
00a471 9612      	ADIW R26,2
00a472 940e e02a 	CALL __GETW1P
00a474 019f      	MOVW R18,R30
00a475 9730      	SBIW R30,0
00a476 f019      	BREQ _0x2000064
                +
00a477 832e     +STD Y + 6 , R18
00a478 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
00a479 c004      	RJMP _0x2000065
                 _0x2000064:
00a47a e0e0      	LDI  R30,LOW(8704)
00a47b e2f2      	LDI  R31,HIGH(8704)
00a47c 83ee      	STD  Y+6,R30
00a47d 83ff      	STD  Y+6+1,R31
                 _0x2000065:
00a47e 81ae      	LDD  R26,Y+6
00a47f 81bf      	LDD  R27,Y+6+1
00a480 1ba4      	SUB  R26,R20
00a481 0bb5      	SBC  R27,R21
00a482 85e8      	LDD  R30,Y+8
00a483 85f9      	LDD  R31,Y+8+1
00a484 9634      	ADIW R30,4
00a485 17ae      	CP   R26,R30
00a486 07bf      	CPC  R27,R31
00a487 f098      	BRLO _0x2000066
00a488 01fa      	MOVW R30,R20
                +
00a489 01d8     +MOVW R26 , R16
00a48a 9612     +ADIW R26 , 2
00a48b 93ed     +ST X + , R30
00a48c 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
00a48d 01f9      	MOVW R30,R18
                +
00a48e 01da     +MOVW R26 , R20
00a48f 9612     +ADIW R26 , 2
00a490 93ed     +ST X + , R30
00a491 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
00a492 85e8      	LDD  R30,Y+8
00a493 85f9      	LDD  R31,Y+8+1
00a494 01da      	MOVW R26,R20
00a495 93ed      	ST   X+,R30
00a496 93fc      	ST   X,R31
                +
00a497 5f4c     +SUBI R20 , LOW ( - 4 )
00a498 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
00a499 01fa      	MOVW R30,R20
00a49a c004      	RJMP _0x20E0029
                 _0x2000066:
00a49b 0189      	MOVW R16,R18
00a49c cfca      	RJMP _0x2000061
                 _0x2000063:
00a49d e0e0      	LDI  R30,LOW(0)
00a49e e0f0      	LDI  R31,HIGH(0)
                 _0x20E0029:
00a49f 940e e0d5 	CALL __LOADLOCR6
00a4a1 962a      	ADIW R28,10
00a4a2 9508      	RET
                 _find_prev_block_G100:
00a4a3 940e c394 	CALL SUBOPT_0x7F
                +
00a4a5 e80a     +LDI R16 , LOW ( 7562 )
00a4a6 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
00a4a7 2e00      	MOV  R0,R16
00a4a8 2a01      	OR   R0,R17
00a4a9 f079      	BREQ _0x2000069
00a4aa 01d8      	MOVW R26,R16
00a4ab 9612      	ADIW R26,2
00a4ac 940e e02a 	CALL __GETW1P
00a4ae 019f      	MOVW R18,R30
00a4af 01df      	MOVW R26,R30
00a4b0 81ec      	LDD  R30,Y+4
00a4b1 81fd      	LDD  R31,Y+4+1
00a4b2 17ea      	CP   R30,R26
00a4b3 07fb      	CPC  R31,R27
00a4b4 f411      	BRNE _0x200006A
00a4b5 01f8      	MOVW R30,R16
00a4b6 c004      	RJMP _0x20E0028
                 _0x200006A:
00a4b7 0189      	MOVW R16,R18
00a4b8 cfee      	RJMP _0x2000067
                 _0x2000069:
00a4b9 e0e0      	LDI  R30,LOW(0)
00a4ba e0f0      	LDI  R31,HIGH(0)
                 _0x20E0028:
00a4bb 940e e0d7 	CALL __LOADLOCR4
00a4bd 9626      	ADIW R28,6
00a4be 9508      	RET
                 _realloc:
00a4bf 940e d68b 	CALL SUBOPT_0x342
00a4c1 85ea      	LDD  R30,Y+10
00a4c2 85fb      	LDD  R31,Y+10+1
00a4c3 9730      	SBIW R30,0
00a4c4 f1a9      	BREQ _0x200006B
00a4c5 9734      	SBIW R30,4
00a4c6 018f      	MOVW R16,R30
00a4c7 01d8      	MOVW R26,R16
00a4c8 dfda      	RCALL _find_prev_block_G100
00a4c9 019f      	MOVW R18,R30
00a4ca 9730      	SBIW R30,0
00a4cb f171      	BREQ _0x200006C
00a4cc 01d8      	MOVW R26,R16
00a4cd 9612      	ADIW R26,2
00a4ce 940e e02a 	CALL __GETW1P
                +
00a4d0 01d9     +MOVW R26 , R18
00a4d1 9612     +ADIW R26 , 2
00a4d2 93ed     +ST X + , R30
00a4d3 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
00a4d4 85e8      	LDD  R30,Y+8
00a4d5 85f9      	LDD  R31,Y+8+1
00a4d6 9730      	SBIW R30,0
00a4d7 f111      	BREQ _0x200006D
00a4d8 85a8      	LDD  R26,Y+8
00a4d9 85b9      	LDD  R27,Y+8+1
00a4da df85      	RCALL _allocate_block_G100
00a4db 01af      	MOVW R20,R30
00a4dc 9730      	SBIW R30,0
00a4dd f0b9      	BREQ _0x200006E
00a4de 01d8      	MOVW R26,R16
00a4df 940e d94a 	CALL SUBOPT_0x398
00a4e1 01df      	MOVW R26,R30
00a4e2 85e8      	LDD  R30,Y+8
00a4e3 85f9      	LDD  R31,Y+8+1
00a4e4 17ae      	CP   R26,R30
00a4e5 07bf      	CPC  R27,R31
00a4e6 f420      	BRSH _0x200006F
00a4e7 81ee      	LDD  R30,Y+6
00a4e8 81ff      	LDD  R31,Y+6+1
00a4e9 87e8      	STD  Y+8,R30
00a4ea 87f9      	STD  Y+8+1,R31
                 _0x200006F:
00a4eb 935a      	ST   -Y,R21
00a4ec 934a      	ST   -Y,R20
00a4ed 940e cac1 	CALL SUBOPT_0x1AD
00a4ef 85ac      	LDD  R26,Y+12
00a4f0 85bd      	LDD  R27,Y+12+1
00a4f1 940e a561 	CALL _memmove
00a4f3 940c ab99 	JMP  _0x20E001F
                 _0x200006E:
00a4f5 01f8      	MOVW R30,R16
                +
00a4f6 01d9     +MOVW R26 , R18
00a4f7 9612     +ADIW R26 , 2
00a4f8 93ed     +ST X + , R30
00a4f9 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
00a4fa e0e0      	LDI  R30,LOW(0)
00a4fb e0f0      	LDI  R31,HIGH(0)
00a4fc 940c ab9a 	JMP  _0x20E001E
                 _malloc:
00a4fe 940e c3a0 	CALL SUBOPT_0x81
                +
00a500 e000     +LDI R16 , LOW ( 0 )
00a501 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a502 81ea      	LDD  R30,Y+2
00a503 81fb      	LDD  R31,Y+2+1
00a504 9730      	SBIW R30,0
00a505 f071      	BREQ _0x2000070
00a506 81aa      	LDD  R26,Y+2
00a507 81bb      	LDD  R27,Y+2+1
00a508 df57      	RCALL _allocate_block_G100
00a509 018f      	MOVW R16,R30
00a50a 9730      	SBIW R30,0
00a50b f041      	BREQ _0x2000071
00a50c 931a      	ST   -Y,R17
00a50d 930a      	ST   -Y,R16
00a50e e0e0      	LDI  R30,LOW(0)
00a50f 93ea      	ST   -Y,R30
00a510 81ad      	LDD  R26,Y+5
00a511 81be      	LDD  R27,Y+5+1
00a512 940e a580 	CALL _memset
                 _0x2000071:
                 _0x2000070:
00a514 01f8      	MOVW R30,R16
00a515 8119      	LDD  R17,Y+1
00a516 8108      	LDD  R16,Y+0
00a517 940c a5c5 	JMP  _0x20E0026
                 _free:
00a519 940e c426 	CALL SUBOPT_0x94
00a51b 93fa      	ST   -Y,R31
00a51c 93ea      	ST   -Y,R30
00a51d 940e c673 	CALL SUBOPT_0xF4
00a51f df9f      	RCALL _realloc
                 _0x20E0027:
00a520 9622      	ADIW R28,2
00a521 9508      	RET
                 
                 	.CSEG
                 _memcmp:
00a522 93ba      	ST   -Y,R27
00a523 93aa      	ST   -Y,R26
00a524 2766          clr  r22
00a525 2777          clr  r23
00a526 9189          ld   r24,y+
00a527 9199          ld   r25,y+
00a528 91e9          ld   r30,y+
00a529 91f9          ld   r31,y+
00a52a 91a9          ld   r26,y+
00a52b 91b9          ld   r27,y+
                 memcmp0:
00a52c 9600          adiw r24,0
00a52d f029          breq memcmp1
00a52e 9701          sbiw r24,1
00a52f 916d          ld   r22,x+
00a530 9171          ld   r23,z+
00a531 1767          cp   r22,r23
00a532 f3c9          breq memcmp0
                 memcmp1:
00a533 1b67          sub  r22,r23
00a534 f410          brcc memcmp2
00a535 efef          ldi  r30,-1
00a536 9508          ret
                 memcmp2:
00a537 e0e0          ldi  r30,0
00a538 f009          breq memcmp3
00a539 95e3          inc  r30
                 memcmp3:
00a53a 9508          ret
                 _memcpy:
00a53b 93ba      	ST   -Y,R27
00a53c 93aa      	ST   -Y,R26
00a53d 8199          ldd  r25,y+1
00a53e 8188          ld   r24,y
00a53f 9600          adiw r24,0
00a540 f041          breq memcpy1
00a541 81bd          ldd  r27,y+5
00a542 81ac          ldd  r26,y+4
00a543 81fb          ldd  r31,y+3
00a544 81ea          ldd  r30,y+2
                 memcpy0:
00a545 9161          ld   r22,z+
00a546 936d          st   x+,r22
00a547 9701          sbiw r24,1
00a548 f7e1          brne memcpy0
                 memcpy1:
00a549 81fd          ldd  r31,y+5
00a54a 81ec          ldd  r30,y+4
00a54b 940c abbb 	JMP  _0x20E001D
                 _memcpyf:
00a54d 93ba      	ST   -Y,R27
00a54e 93aa      	ST   -Y,R26
00a54f 8199          ldd  r25,y+1
00a550 8188          ld   r24,y
00a551 9600          adiw r24,0
00a552 f051          breq memcpyf1
00a553 81bf          ldd  r27,y+7
00a554 81ae          ldd  r26,y+6
00a555 816c          ldd  r22,y+4
00a556 81fb          ldd  r31,y+3
00a557 81ea          ldd  r30,y+2
00a558 bf6b          out  rampz,r22
                 memcpyf0:
00a559 9007          elpm r0,z+
00a55a 920d          st   x+,r0
00a55b 9701          sbiw r24,1
00a55c f7e1          brne memcpyf0
                 memcpyf1:
00a55d 81ff          ldd  r31,y+7
00a55e 81ee          ldd  r30,y+6
00a55f 940c ab76 	JMP  _0x20E0020
                 _memmove:
00a561 93ba      	ST   -Y,R27
00a562 93aa      	ST   -Y,R26
00a563 8199          ldd  r25,y+1
00a564 8188          ld   r24,y
00a565 9600          adiw r24,0
00a566 f0a9          breq memmove3
00a567 81bd          ldd  r27,y+5
00a568 81ac          ldd  r26,y+4
00a569 81fb          ldd  r31,y+3
00a56a 81ea          ldd  r30,y+2
00a56b 17ea          cp   r30,r26
00a56c 07fb          cpc  r31,r27
00a56d f071          breq memmove3
00a56e f02c          brlt memmove1
                 memmove0:
00a56f 9161          ld   r22,z+
00a570 936d          st   x+,r22
00a571 9701          sbiw r24,1
00a572 f7e1          brne memmove0
00a573 c008          rjmp memmove3
                 memmove1:
00a574 0fa8          add  r26,r24
00a575 1fb9          adc  r27,r25
00a576 0fe8          add  r30,r24
00a577 1ff9          adc  r31,r25
                 memmove2:
00a578 9162          ld   r22,-z
00a579 936e          st   -x,r22
00a57a 9701          sbiw r24,1
00a57b f7e1          brne memmove2
                 memmove3:
00a57c 81fd          ldd  r31,y+5
00a57d 81ec          ldd  r30,y+4
00a57e 940c abbb 	JMP  _0x20E001D
                 _memset:
00a580 93ba      	ST   -Y,R27
00a581 93aa      	ST   -Y,R26
00a582 81b9          ldd  r27,y+1
00a583 81a8          ld   r26,y
00a584 9610          adiw r26,0
00a585 f031          breq memset1
00a586 81fc          ldd  r31,y+4
00a587 81eb          ldd  r30,y+3
00a588 816a          ldd  r22,y+2
                 memset0:
00a589 9361          st   z+,r22
00a58a 9711          sbiw r26,1
00a58b f7e9          brne memset0
                 memset1:
00a58c 81eb          ldd  r30,y+3
00a58d 81fc          ldd  r31,y+4
00a58e 9625      	ADIW R28,5
00a58f 9508      	RET
                 _strcat:
00a590 93ba      	ST   -Y,R27
00a591 93aa      	ST   -Y,R26
00a592 91e9          ld   r30,y+
00a593 91f9          ld   r31,y+
00a594 91a9          ld   r26,y+
00a595 91b9          ld   r27,y+
00a596 01cd          movw r24,r26
                 strcat0:
00a597 916d          ld   r22,x+
00a598 2366          tst  r22
00a599 f7e9          brne strcat0
00a59a 9711          sbiw r26,1
                 strcat1:
00a59b 9161          ld   r22,z+
00a59c 936d          st   x+,r22
00a59d 2366          tst  r22
00a59e f7e1          brne strcat1
00a59f 01fc          movw r30,r24
00a5a0 9508          ret
                 _strcpyf:
00a5a1 940e e063 	CALL __PUTPARD2
00a5a3 91e9          ld   r30,y+
00a5a4 91f9          ld   r31,y+
00a5a5 9169          ld   r22,y+
00a5a6 9179          ld   r23,y+
00a5a7 91a9          ld   r26,y+
00a5a8 91b9          ld   r27,y+
00a5a9 01cd          movw r24,r26
00a5aa bf6b          out  rampz,r22
                 strcpyf0:
00a5ab 9007          elpm r0,z+
00a5ac 920d          st   x+,r0
00a5ad 2000          tst  r0
00a5ae f7e1          brne strcpyf0
00a5af 01fc          movw r30,r24
00a5b0 9508          ret
                 _strcspn:
00a5b1 93ba      	ST   -Y,R27
00a5b2 93aa      	ST   -Y,R26
00a5b3 81bb          ldd  r27,y+3
00a5b4 81aa          ldd  r26,y+2
00a5b5 2788          clr  r24
00a5b6 2799          clr  r25
                 strcspn0:
00a5b7 916d          ld   r22,x+
00a5b8 2366          tst  r22
00a5b9 f051          breq strcspn2
00a5ba 81f9          ldd  r31,y+1
00a5bb 81e8          ld   r30,y
                 strcspn1:
00a5bc 9171          ld   r23,z+
00a5bd 2377          tst  r23
00a5be f019          breq strcspn3
00a5bf 1767          cp   r22,r23
00a5c0 f019          breq strcspn2
00a5c1 cffa          rjmp strcspn1
                 strcspn3:
00a5c2 9601          adiw r24,1
00a5c3 cff3          rjmp strcspn0
                 strcspn2:
00a5c4 01fc          movw r30,r24
                 _0x20E0026:
00a5c5 9624      	ADIW R28,4
00a5c6 9508      	RET
                 _strlen:
00a5c7 93ba      	ST   -Y,R27
00a5c8 93aa      	ST   -Y,R26
00a5c9 91a9          ld   r26,y+
00a5ca 91b9          ld   r27,y+
00a5cb 27ee          clr  r30
00a5cc 27ff          clr  r31
                 strlen0:
00a5cd 916d          ld   r22,x+
00a5ce 2366          tst  r22
00a5cf f011          breq strlen1
00a5d0 9631          adiw r30,1
00a5d1 cffb          rjmp strlen0
                 strlen1:
00a5d2 9508          ret
                 _strlenf:
00a5d3 940e e063 	CALL __PUTPARD2
00a5d5 27aa          clr  r26
00a5d6 27bb          clr  r27
00a5d7 91e9          ld   r30,y+
00a5d8 91f9          ld   r31,y+
00a5d9 9169          ld   r22,y+
00a5da 9179          ld   r23,y+
00a5db bf6b          out  rampz,r22
                 strlenf0:
00a5dc 9007          elpm r0,z+
00a5dd 2000          tst  r0
00a5de f011          breq strlenf1
00a5df 9611          adiw r26,1
00a5e0 cffb          rjmp strlenf0
                 strlenf1:
00a5e1 01fd          movw r30,r26
00a5e2 9508          ret
                 _strncmpf:
00a5e3 93aa      	ST   -Y,R26
00a5e4 9179          ld   r23,y+
00a5e5 91e9          ld   r30,y+
00a5e6 91f9          ld   r31,y+
00a5e7 9169          ld   r22,y+
00a5e8 9009          ld   r0,y+
00a5e9 91a9          ld   r26,y+
00a5ea 91b9          ld   r27,y+
00a5eb 2400          clr  r0
00a5ec 2411          clr  r1
00a5ed bf6b          out  rampz,r22
                 strncmpf0:
00a5ee 2377          tst  r23
00a5ef f049          breq strncmpf1
00a5f0 957a          dec  r23
00a5f1 901d          ld   r1,x+
00a5f2 9007          elpm r0,z+
00a5f3 1401          cp   r0,r1
00a5f4 f421          brne strncmpf1
00a5f5 2000          tst  r0
00a5f6 f7b9          brne strncmpf0
                 strncmpf3:
00a5f7 27ee          clr  r30
00a5f8 c005          rjmp strncmpf2
                 strncmpf1:
00a5f9 1810          sub  r1,r0
00a5fa f3e1          breq strncmpf3
00a5fb e0e1          ldi  r30,1
00a5fc f408          brcc strncmpf2
00a5fd 50e2          subi r30,2
                 strncmpf2:
00a5fe 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
00a5ff 931a      	ST   -Y,R17
00a600 e3e2      	LDI  R30,LOW(50)
00a601 93e0 1aaf 	STS  _timer2_G102,R30
00a603 efef      	LDI  R30,LOW(255)
00a604 bdee      	OUT  0x2E,R30
                 _0x2040004:
00a605 b5ed      	IN   R30,0x2D
00a606 ffe7      	SBRS R30,7
00a607 cffd      	RJMP _0x2040004
                 _0x2040008:
00a608 efef      	LDI  R30,LOW(255)
00a609 bdee      	OUT  0x2E,R30
                 _0x204000A:
00a60a b5ed      	IN   R30,0x2D
00a60b ffe7      	SBRS R30,7
00a60c cffd      	RJMP _0x204000A
00a60d b51e      	IN   R17,46
00a60e 3f1f      	CPI  R17,255
00a60f f021      	BREQ _0x204000D
00a610 91e0 1aaf 	LDS  R30,_timer2_G102
00a612 30e0      	CPI  R30,0
00a613 f409      	BRNE _0x204000E
                 _0x204000D:
00a614 c001      	RJMP _0x2040009
                 _0x204000E:
00a615 cff2      	RJMP _0x2040008
                 _0x2040009:
00a616 2fe1      	MOV  R30,R17
00a617 9119      	LD   R17,Y+
00a618 9508      	RET
                 _release_spi_G102:
00a619 9a28      	SBI  0x5,0
00a61a efef      	LDI  R30,LOW(255)
00a61b bdee      	OUT  0x2E,R30
                 _0x204000F:
00a61c b5ed      	IN   R30,0x2D
00a61d ffe7      	SBRS R30,7
00a61e cffd      	RJMP _0x204000F
00a61f 9508      	RET
                 _rx_datablock_G102:
00a620 93ba      	ST   -Y,R27
00a621 93aa      	ST   -Y,R26
00a622 940e e0d0 	CALL __SAVELOCR4
00a624 e0ea      	LDI  R30,LOW(10)
00a625 93e0 1aae 	STS  _timer1_G102,R30
                 _0x2040013:
00a627 efef      	LDI  R30,LOW(255)
00a628 bdee      	OUT  0x2E,R30
                 _0x2040015:
00a629 b5ed      	IN   R30,0x2D
00a62a ffe7      	SBRS R30,7
00a62b cffd      	RJMP _0x2040015
00a62c b51e      	IN   R17,46
00a62d 3f1f      	CPI  R17,255
00a62e f421      	BRNE _0x2040018
00a62f 91e0 1aae 	LDS  R30,_timer1_G102
00a631 30e0      	CPI  R30,0
00a632 f409      	BRNE _0x2040019
                 _0x2040018:
00a633 c001      	RJMP _0x2040014
                 _0x2040019:
00a634 cff2      	RJMP _0x2040013
                 _0x2040014:
00a635 3f1e      	CPI  R17,254
00a636 f021      	BREQ _0x204001A
00a637 e0e0      	LDI  R30,LOW(0)
00a638 940e e0d7 	CALL __LOADLOCR4
00a63a c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
00a63b 812e     +LDD R18 , Y + 6
00a63c 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
00a63d efef      	LDI  R30,LOW(255)
00a63e bdee      	OUT  0x2E,R30
                 _0x204001E:
00a63f b5ed      	IN   R30,0x2D
00a640 ffe7      	SBRS R30,7
00a641 cffd      	RJMP _0x204001E
00a642 933f      	PUSH R19
00a643 932f      	PUSH R18
                +
00a644 5f2f     +SUBI R18 , LOW ( - 1 )
00a645 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a646 b5ee      	IN   R30,0x2E
00a647 91af      	POP  R26
00a648 91bf      	POP  R27
00a649 93ec      	ST   X,R30
00a64a efef      	LDI  R30,LOW(255)
00a64b bdee      	OUT  0x2E,R30
                 _0x2040021:
00a64c b5ed      	IN   R30,0x2D
00a64d ffe7      	SBRS R30,7
00a64e cffd      	RJMP _0x2040021
00a64f 933f      	PUSH R19
00a650 932f      	PUSH R18
                +
00a651 5f2f     +SUBI R18 , LOW ( - 1 )
00a652 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a653 b5ee      	IN   R30,0x2E
00a654 91af      	POP  R26
00a655 91bf      	POP  R27
00a656 93ec      	ST   X,R30
00a657 efef      	LDI  R30,LOW(255)
00a658 bdee      	OUT  0x2E,R30
                 _0x2040024:
00a659 b5ed      	IN   R30,0x2D
00a65a ffe7      	SBRS R30,7
00a65b cffd      	RJMP _0x2040024
00a65c 933f      	PUSH R19
00a65d 932f      	PUSH R18
                +
00a65e 5f2f     +SUBI R18 , LOW ( - 1 )
00a65f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a660 b5ee      	IN   R30,0x2E
00a661 91af      	POP  R26
00a662 91bf      	POP  R27
00a663 93ec      	ST   X,R30
00a664 efef      	LDI  R30,LOW(255)
00a665 bdee      	OUT  0x2E,R30
                 _0x2040027:
00a666 b5ed      	IN   R30,0x2D
00a667 ffe7      	SBRS R30,7
00a668 cffd      	RJMP _0x2040027
00a669 933f      	PUSH R19
00a66a 932f      	PUSH R18
                +
00a66b 5f2f     +SUBI R18 , LOW ( - 1 )
00a66c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a66d b5ee      	IN   R30,0x2E
00a66e 91af      	POP  R26
00a66f 91bf      	POP  R27
00a670 93ec      	ST   X,R30
00a671 81ec      	LDD  R30,Y+4
00a672 81fd      	LDD  R31,Y+4+1
00a673 9734      	SBIW R30,4
00a674 83ec      	STD  Y+4,R30
00a675 83fd      	STD  Y+4+1,R31
00a676 f631      	BRNE _0x204001C
00a677 efef      	LDI  R30,LOW(255)
00a678 bdee      	OUT  0x2E,R30
                 _0x204002A:
00a679 b5ed      	IN   R30,0x2D
00a67a ffe7      	SBRS R30,7
00a67b cffd      	RJMP _0x204002A
00a67c efef      	LDI  R30,LOW(255)
00a67d bdee      	OUT  0x2E,R30
                 _0x204002D:
00a67e b5ed      	IN   R30,0x2D
00a67f ffe7      	SBRS R30,7
00a680 cffd      	RJMP _0x204002D
00a681 e0e1      	LDI  R30,LOW(1)
00a682 940e e0d7 	CALL __LOADLOCR4
00a684 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
00a685 93aa      	ST   -Y,R26
00a686 940e e0d0 	CALL __SAVELOCR4
00a688 df76      	RCALL _wait_ready_G102
00a689 3fef      	CPI  R30,LOW(0xFF)
00a68a f021      	BREQ _0x2040030
00a68b e0e0      	LDI  R30,LOW(0)
00a68c 940e e0d7 	CALL __LOADLOCR4
00a68e c4b3      	RJMP _0x20E0021
                 _0x2040030:
00a68f 81ec      	LDD  R30,Y+4
00a690 bdee      	OUT  0x2E,R30
                 _0x2040031:
00a691 b5ed      	IN   R30,0x2D
00a692 ffe7      	SBRS R30,7
00a693 cffd      	RJMP _0x2040031
00a694 81ac      	LDD  R26,Y+4
00a695 3fad      	CPI  R26,LOW(0xFD)
00a696 f171      	BREQ _0x2040034
00a697 e000      	LDI  R16,LOW(0)
                +
00a698 812d     +LDD R18 , Y + 5
00a699 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
00a69a 01d9      	MOVW R26,R18
                +
00a69b 5f2f     +SUBI R18 , LOW ( - 1 )
00a69c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a69d 91ec      	LD   R30,X
00a69e bdee      	OUT  0x2E,R30
                 _0x2040038:
00a69f b5ed      	IN   R30,0x2D
00a6a0 ffe7      	SBRS R30,7
00a6a1 cffd      	RJMP _0x2040038
00a6a2 01d9      	MOVW R26,R18
                +
00a6a3 5f2f     +SUBI R18 , LOW ( - 1 )
00a6a4 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a6a5 91ec      	LD   R30,X
00a6a6 bdee      	OUT  0x2E,R30
                 _0x204003B:
00a6a7 b5ed      	IN   R30,0x2D
00a6a8 ffe7      	SBRS R30,7
00a6a9 cffd      	RJMP _0x204003B
00a6aa 5001      	SUBI R16,LOW(1)
00a6ab 3000      	CPI  R16,0
00a6ac f769      	BRNE _0x2040036
00a6ad efef      	LDI  R30,LOW(255)
00a6ae bdee      	OUT  0x2E,R30
                 _0x204003E:
00a6af b5ed      	IN   R30,0x2D
00a6b0 ffe7      	SBRS R30,7
00a6b1 cffd      	RJMP _0x204003E
00a6b2 efef      	LDI  R30,LOW(255)
00a6b3 bdee      	OUT  0x2E,R30
                 _0x2040041:
00a6b4 b5ed      	IN   R30,0x2D
00a6b5 ffe7      	SBRS R30,7
00a6b6 cffd      	RJMP _0x2040041
00a6b7 efef      	LDI  R30,LOW(255)
00a6b8 bdee      	OUT  0x2E,R30
                 _0x2040044:
00a6b9 b5ed      	IN   R30,0x2D
00a6ba ffe7      	SBRS R30,7
00a6bb cffd      	RJMP _0x2040044
00a6bc b51e      	IN   R17,46
00a6bd 2fe1      	MOV  R30,R17
00a6be 71ef      	ANDI R30,LOW(0x1F)
00a6bf 30e5      	CPI  R30,LOW(0x5)
00a6c0 f021      	BREQ _0x2040047
00a6c1 e0e0      	LDI  R30,LOW(0)
00a6c2 940e e0d7 	CALL __LOADLOCR4
00a6c4 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
00a6c5 e0e1      	LDI  R30,LOW(1)
00a6c6 940e e0d7 	CALL __LOADLOCR4
00a6c8 c479      	RJMP _0x20E0021
                 _send_cmd_G102:
00a6c9 940e e063 	CALL __PUTPARD2
00a6cb 931a      	ST   -Y,R17
00a6cc 930a      	ST   -Y,R16
00a6cd 81ee      	LDD  R30,Y+6
00a6ce 78e0      	ANDI R30,LOW(0x80)
00a6cf f089      	BREQ _0x2040048
00a6d0 81ee      	LDD  R30,Y+6
00a6d1 77ef      	ANDI R30,0x7F
00a6d2 83ee      	STD  Y+6,R30
00a6d3 e7e7      	LDI  R30,LOW(119)
00a6d4 93ea      	ST   -Y,R30
                +
00a6d5 e0a0     +LDI R26 , LOW ( 0x0 )
00a6d6 e0b0     +LDI R27 , HIGH ( 0x0 )
00a6d7 e080     +LDI R24 , BYTE3 ( 0x0 )
00a6d8 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a6d9 dfef      	RCALL _send_cmd_G102
00a6da 2f0e      	MOV  R16,R30
00a6db 3002      	CPI  R16,2
00a6dc f020      	BRLO _0x2040049
00a6dd 2fe0      	MOV  R30,R16
00a6de 8119      	LDD  R17,Y+1
00a6df 8108      	LDD  R16,Y+0
00a6e0 c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
00a6e1 9a28      	SBI  0x5,0
00a6e2 9828      	CBI  0x5,0
00a6e3 df1b      	RCALL _wait_ready_G102
00a6e4 3fef      	CPI  R30,LOW(0xFF)
00a6e5 f021      	BREQ _0x204004A
00a6e6 efef      	LDI  R30,LOW(255)
00a6e7 8119      	LDD  R17,Y+1
00a6e8 8108      	LDD  R16,Y+0
00a6e9 c458      	RJMP _0x20E0021
                 _0x204004A:
00a6ea 81ee      	LDD  R30,Y+6
00a6eb bdee      	OUT  0x2E,R30
                 _0x204004B:
00a6ec b5ed      	IN   R30,0x2D
00a6ed ffe7      	SBRS R30,7
00a6ee cffd      	RJMP _0x204004B
00a6ef 81ed      	LDD  R30,Y+5
00a6f0 bdee      	OUT  0x2E,R30
                 _0x204004E:
00a6f1 b5ed      	IN   R30,0x2D
00a6f2 ffe7      	SBRS R30,7
00a6f3 cffd      	RJMP _0x204004E
00a6f4 81ec      	LDD  R30,Y+4
00a6f5 bdee      	OUT  0x2E,R30
                 _0x2040051:
00a6f6 b5ed      	IN   R30,0x2D
00a6f7 ffe7      	SBRS R30,7
00a6f8 cffd      	RJMP _0x2040051
00a6f9 81eb      	LDD  R30,Y+3
00a6fa bdee      	OUT  0x2E,R30
                 _0x2040054:
00a6fb b5ed      	IN   R30,0x2D
00a6fc ffe7      	SBRS R30,7
00a6fd cffd      	RJMP _0x2040054
00a6fe 81ea      	LDD  R30,Y+2
00a6ff bdee      	OUT  0x2E,R30
                 _0x2040057:
00a700 b5ed      	IN   R30,0x2D
00a701 ffe7      	SBRS R30,7
00a702 cffd      	RJMP _0x2040057
00a703 e011      	LDI  R17,LOW(1)
00a704 81ae      	LDD  R26,Y+6
00a705 34a0      	CPI  R26,LOW(0x40)
00a706 f411      	BRNE _0x204005A
00a707 e915      	LDI  R17,LOW(149)
00a708 c004      	RJMP _0x204005B
                 _0x204005A:
00a709 81ae      	LDD  R26,Y+6
00a70a 34a8      	CPI  R26,LOW(0x48)
00a70b f409      	BRNE _0x204005C
00a70c e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
00a70d bd1e      	OUT  0x2E,R17
                 _0x204005D:
00a70e b5ed      	IN   R30,0x2D
00a70f ffe7      	SBRS R30,7
00a710 cffd      	RJMP _0x204005D
00a711 81ae      	LDD  R26,Y+6
00a712 34ac      	CPI  R26,LOW(0x4C)
00a713 f429      	BRNE _0x2040060
00a714 efef      	LDI  R30,LOW(255)
00a715 bdee      	OUT  0x2E,R30
                 _0x2040061:
00a716 b5ed      	IN   R30,0x2D
00a717 ffe7      	SBRS R30,7
00a718 cffd      	RJMP _0x2040061
                 _0x2040060:
00a719 ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
00a71a efef      	LDI  R30,LOW(255)
00a71b bdee      	OUT  0x2E,R30
                 _0x2040067:
00a71c b5ed      	IN   R30,0x2D
00a71d ffe7      	SBRS R30,7
00a71e cffd      	RJMP _0x2040067
00a71f b50e      	IN   R16,46
00a720 ff07      	SBRS R16,7
00a721 c003      	RJMP _0x204006A
00a722 5011      	SUBI R17,LOW(1)
00a723 3010      	CPI  R17,0
00a724 f409      	BRNE _0x204006B
                 _0x204006A:
00a725 c001      	RJMP _0x2040066
                 _0x204006B:
00a726 cff3      	RJMP _0x2040065
                 _0x2040066:
00a727 2fe0      	MOV  R30,R16
00a728 8119      	LDD  R17,Y+1
00a729 8108      	LDD  R16,Y+0
00a72a c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
00a72b 93ba      	ST   -Y,R27
00a72c 93aa      	ST   -Y,R26
00a72d 931a      	ST   -Y,R17
00a72e e014      	LDI  R17,4
                 _0x204006D:
00a72f efef      	LDI  R30,LOW(255)
00a730 bdee      	OUT  0x2E,R30
                 _0x204006F:
00a731 b5ed      	IN   R30,0x2D
00a732 ffe7      	SBRS R30,7
00a733 cffd      	RJMP _0x204006F
00a734 81a9      	LDD  R26,Y+1
00a735 81ba      	LDD  R27,Y+1+1
00a736 9611      	ADIW R26,1
00a737 83a9      	STD  Y+1,R26
00a738 83ba      	STD  Y+1+1,R27
00a739 9711      	SBIW R26,1
00a73a b5ee      	IN   R30,0x2E
00a73b 93ec      	ST   X,R30
00a73c 5011      	SUBI R17,LOW(1)
00a73d 3010      	CPI  R17,0
00a73e f781      	BRNE _0x204006D
00a73f c554      	RJMP _0x20E001B
                 _disk_initialize:
00a740 93aa      	ST   -Y,R26
00a741 9724      	SBIW R28,4
00a742 940e e0d0 	CALL __SAVELOCR4
00a744 85e8      	LDD  R30,Y+8
00a745 30e0      	CPI  R30,0
00a746 f011      	BREQ _0x2040072
00a747 e0e1      	LDI  R30,LOW(1)
00a748 c0c4      	RJMP _0x20E0025
                 _0x2040072:
00a749 9808      	CBI  0x1,0
00a74a 9809      	CBI  0x1,1
00a74b e0ea      	LDI  R30,LOW(10)
00a74c 93e0 1aae 	STS  _timer1_G102,R30
                 _0x2040073:
00a74e 91e0 1aae 	LDS  R30,_timer1_G102
00a750 30e0      	CPI  R30,0
00a751 f7e1      	BRNE _0x2040073
00a752 91e0 1aad 	LDS  R30,_status_G102
00a754 70e2      	ANDI R30,LOW(0x2)
00a755 f009      	BREQ _0x2040076
00a756 c0b4      	RJMP _0x20E0024
                 _0x2040076:
00a757 9a20      	SBI  0x4,0
00a758 9a28      	SBI  0x5,0
00a759 b1e5      	IN   R30,0x5
00a75a 7fe9      	ANDI R30,LOW(0xF9)
00a75b b9e5      	OUT  0x5,R30
00a75c 9a2b      	SBI  0x5,3
00a75d 9823      	CBI  0x4,3
00a75e b1e4      	IN   R30,0x4
00a75f 60e7      	ORI  R30,LOW(0x7)
00a760 b9e4      	OUT  0x4,R30
00a761 e5e2      	LDI  R30,LOW(82)
00a762 bdec      	OUT  0x2C,R30
00a763 e0e0      	LDI  R30,LOW(0)
00a764 bded      	OUT  0x2D,R30
00a765 ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
00a766 e01a      	LDI  R17,LOW(10)
                 _0x204007B:
00a767 efef      	LDI  R30,LOW(255)
00a768 bdee      	OUT  0x2E,R30
                 _0x204007D:
00a769 b5ed      	IN   R30,0x2D
00a76a ffe7      	SBRS R30,7
00a76b cffd      	RJMP _0x204007D
00a76c 5011      	SUBI R17,LOW(1)
00a76d 3010      	CPI  R17,0
00a76e f7c1      	BRNE _0x204007B
00a76f e4e0      	LDI  R30,LOW(64)
00a770 93ea      	ST   -Y,R30
                +
00a771 e0a0     +LDI R26 , LOW ( 0x0 )
00a772 e0b0     +LDI R27 , HIGH ( 0x0 )
00a773 e080     +LDI R24 , BYTE3 ( 0x0 )
00a774 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a775 df53      	RCALL _send_cmd_G102
00a776 2f0e      	MOV  R16,R30
00a777 5031      	SUBI R19,LOW(1)
00a778 3001      	CPI  R16,1
00a779 f011      	BREQ _0x2040080
00a77a 3030      	CPI  R19,0
00a77b f409      	BRNE _0x2040081
                 _0x2040080:
00a77c c001      	RJMP _0x2040079
                 _0x2040081:
00a77d cfe8      	RJMP _0x2040078
                 _0x2040079:
00a77e e030      	LDI  R19,LOW(0)
00a77f 3001      	CPI  R16,1
00a780 f011      	BREQ PC+3
00a781 940c a7eb 	JMP _0x2040082
00a783 e6e4      	LDI  R30,LOW(100)
00a784 93e0 1aae 	STS  _timer1_G102,R30
00a786 e4e8      	LDI  R30,LOW(72)
00a787 93ea      	ST   -Y,R30
                +
00a788 eaaa     +LDI R26 , LOW ( 0x1AA )
00a789 e0b1     +LDI R27 , HIGH ( 0x1AA )
00a78a e080     +LDI R24 , BYTE3 ( 0x1AA )
00a78b e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
00a78c df3c      	RCALL _send_cmd_G102
00a78d 30e1      	CPI  R30,LOW(0x1)
00a78e f591      	BRNE _0x2040083
00a78f 01de      	MOVW R26,R28
00a790 9614      	ADIW R26,4
00a791 df99      	RCALL _rx_spi4_G102
00a792 81ae      	LDD  R26,Y+6
00a793 30a1      	CPI  R26,LOW(0x1)
00a794 f419      	BRNE _0x2040085
00a795 81af      	LDD  R26,Y+7
00a796 3aaa      	CPI  R26,LOW(0xAA)
00a797 f009      	BREQ _0x2040086
                 _0x2040085:
00a798 c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
00a799 91e0 1aae 	LDS  R30,_timer1_G102
00a79b 30e0      	CPI  R30,0
00a79c f049      	BREQ _0x204008A
00a79d eee9      	LDI  R30,LOW(233)
00a79e 93ea      	ST   -Y,R30
                +
00a79f e0a0     +LDI R26 , LOW ( 0x40000000 )
00a7a0 e0b0     +LDI R27 , HIGH ( 0x40000000 )
00a7a1 e080     +LDI R24 , BYTE3 ( 0x40000000 )
00a7a2 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00a7a3 df25      	RCALL _send_cmd_G102
00a7a4 30e0      	CPI  R30,0
00a7a5 f409      	BRNE _0x204008B
                 _0x204008A:
00a7a6 c001      	RJMP _0x2040089
                 _0x204008B:
00a7a7 cff1      	RJMP _0x2040087
                 _0x2040089:
00a7a8 91e0 1aae 	LDS  R30,_timer1_G102
00a7aa 30e0      	CPI  R30,0
00a7ab f049      	BREQ _0x204008D
00a7ac e7ea      	LDI  R30,LOW(122)
00a7ad 93ea      	ST   -Y,R30
                +
00a7ae e0a0     +LDI R26 , LOW ( 0x0 )
00a7af e0b0     +LDI R27 , HIGH ( 0x0 )
00a7b0 e080     +LDI R24 , BYTE3 ( 0x0 )
00a7b1 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a7b2 df16      	RCALL _send_cmd_G102
00a7b3 30e0      	CPI  R30,0
00a7b4 f009      	BREQ _0x204008E
                 _0x204008D:
00a7b5 c00a      	RJMP _0x204008C
                 _0x204008E:
00a7b6 01de      	MOVW R26,R28
00a7b7 9614      	ADIW R26,4
00a7b8 df72      	RCALL _rx_spi4_G102
00a7b9 81ec      	LDD  R30,Y+4
00a7ba 74e0      	ANDI R30,LOW(0x40)
00a7bb f011      	BREQ _0x204008F
00a7bc e0ec      	LDI  R30,LOW(12)
00a7bd c001      	RJMP _0x2040090
                 _0x204008F:
00a7be e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
00a7bf 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
00a7c0 c02a      	RJMP _0x2040092
                 _0x2040083:
00a7c1 eee9      	LDI  R30,LOW(233)
00a7c2 93ea      	ST   -Y,R30
                +
00a7c3 e0a0     +LDI R26 , LOW ( 0x0 )
00a7c4 e0b0     +LDI R27 , HIGH ( 0x0 )
00a7c5 e080     +LDI R24 , BYTE3 ( 0x0 )
00a7c6 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a7c7 df01      	RCALL _send_cmd_G102
00a7c8 30e2      	CPI  R30,LOW(0x2)
00a7c9 f418      	BRSH _0x2040093
00a7ca e032      	LDI  R19,LOW(2)
00a7cb ee09      	LDI  R16,LOW(233)
00a7cc c002      	RJMP _0x2040094
                 _0x2040093:
00a7cd e031      	LDI  R19,LOW(1)
00a7ce e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
00a7cf 91e0 1aae 	LDS  R30,_timer1_G102
00a7d1 30e0      	CPI  R30,0
00a7d2 f041      	BREQ _0x2040098
00a7d3 930a      	ST   -Y,R16
                +
00a7d4 e0a0     +LDI R26 , LOW ( 0x0 )
00a7d5 e0b0     +LDI R27 , HIGH ( 0x0 )
00a7d6 e080     +LDI R24 , BYTE3 ( 0x0 )
00a7d7 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a7d8 def0      	RCALL _send_cmd_G102
00a7d9 30e0      	CPI  R30,0
00a7da f409      	BRNE _0x2040099
                 _0x2040098:
00a7db c001      	RJMP _0x2040097
                 _0x2040099:
00a7dc cff2      	RJMP _0x2040095
                 _0x2040097:
00a7dd 91e0 1aae 	LDS  R30,_timer1_G102
00a7df 30e0      	CPI  R30,0
00a7e0 f049      	BREQ _0x204009B
00a7e1 e5e0      	LDI  R30,LOW(80)
00a7e2 93ea      	ST   -Y,R30
                +
00a7e3 e0a0     +LDI R26 , LOW ( 0x200 )
00a7e4 e0b2     +LDI R27 , HIGH ( 0x200 )
00a7e5 e080     +LDI R24 , BYTE3 ( 0x200 )
00a7e6 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a7e7 dee1      	RCALL _send_cmd_G102
00a7e8 30e0      	CPI  R30,0
00a7e9 f009      	BREQ _0x204009A
                 _0x204009B:
00a7ea e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
00a7eb 9330 1ab0 	STS  _card_type_G102,R19
00a7ed de2b      	RCALL _release_spi_G102
00a7ee 3030      	CPI  R19,0
00a7ef f051      	BREQ _0x204009D
00a7f0 91e0 1aad 	LDS  R30,_status_G102
00a7f2 7fee      	ANDI R30,0xFE
00a7f3 93e0 1aad 	STS  _status_G102,R30
00a7f5 e5e0      	LDI  R30,LOW(80)
00a7f6 bdec      	OUT  0x2C,R30
00a7f7 e0e1      	LDI  R30,LOW(1)
00a7f8 bded      	OUT  0x2D,R30
00a7f9 c011      	RJMP _0x204009E
                 _0x204009D:
00a7fa 9828      	CBI  0x5,0
00a7fb de03      	RCALL _wait_ready_G102
00a7fc de1c      	RCALL _release_spi_G102
00a7fd e0e0      	LDI  R30,LOW(0)
00a7fe bdec      	OUT  0x2C,R30
00a7ff b1e4      	IN   R30,0x4
00a800 7fe0      	ANDI R30,LOW(0xF0)
00a801 b9e4      	OUT  0x4,R30
00a802 b1e5      	IN   R30,0x5
00a803 7fe0      	ANDI R30,LOW(0xF0)
00a804 b9e5      	OUT  0x5,R30
00a805 9820      	CBI  0x4,0
00a806 91e0 1aad 	LDS  R30,_status_G102
00a808 60e1      	ORI  R30,1
00a809 93e0 1aad 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
00a80b 91e0 1aad 	LDS  R30,_status_G102
                 _0x20E0025:
00a80d 940e e0d7 	CALL __LOADLOCR4
00a80f 9629      	ADIW R28,9
00a810 9508      	RET
                 _disk_status:
00a811 93aa      	ST   -Y,R26
00a812 81e8      	LD   R30,Y
00a813 30e0      	CPI  R30,0
00a814 f011      	BREQ _0x204009F
00a815 e0e1      	LDI  R30,LOW(1)
00a816 c002      	RJMP _0x20E0023
                 _0x204009F:
00a817 91e0 1aad 	LDS  R30,_status_G102
                 _0x20E0023:
00a819 9621      	ADIW R28,1
00a81a 9508      	RET
                 _disk_read:
00a81b 93aa      	ST   -Y,R26
00a81c 81ef      	LDD  R30,Y+7
00a81d 30e0      	CPI  R30,0
00a81e f419      	BRNE _0x20400A1
00a81f 81e8      	LD   R30,Y
00a820 30e0      	CPI  R30,0
00a821 f411      	BRNE _0x20400A0
                 _0x20400A1:
00a822 e0e4      	LDI  R30,LOW(4)
00a823 c352      	RJMP _0x20E0020
                 _0x20400A0:
00a824 91e0 1aad 	LDS  R30,_status_G102
00a826 70e1      	ANDI R30,LOW(0x1)
00a827 f011      	BREQ _0x20400A3
00a828 e0e3      	LDI  R30,LOW(3)
00a829 c34c      	RJMP _0x20E0020
                 _0x20400A3:
00a82a 91e0 1ab0 	LDS  R30,_card_type_G102
00a82c 70e8      	ANDI R30,LOW(0x8)
00a82d f471      	BRNE _0x20400A4
                +
00a82e 81e9     +LDD R30 , Y + 1
00a82f 81fa     +LDD R31 , Y + 1 + 1
00a830 816b     +LDD R22 , Y + 1 + 2
00a831 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a832 e0a0     +LDI R26 , LOW ( 0x200 )
00a833 e0b2     +LDI R27 , HIGH ( 0x200 )
00a834 e080     +LDI R24 , BYTE3 ( 0x200 )
00a835 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a836 940e df5c 	CALL __MULD12U
                +
00a838 83e9     +STD Y + 1 , R30
00a839 83fa     +STD Y + 1 + 1 , R31
00a83a 836b     +STD Y + 1 + 2 , R22
00a83b 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
00a83c 81a8      	LD   R26,Y
00a83d 30a1      	CPI  R26,LOW(0x1)
00a83e f4b1      	BRNE _0x20400A5
00a83f e5e1      	LDI  R30,LOW(81)
00a840 93ea      	ST   -Y,R30
                +
00a841 81aa     +LDD R26 , Y + 2
00a842 81bb     +LDD R27 , Y + 2 + 1
00a843 818c     +LDD R24 , Y + 2 + 2
00a844 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a845 de83      	RCALL _send_cmd_G102
00a846 30e0      	CPI  R30,0
00a847 f449      	BRNE _0x20400A7
00a848 81ed      	LDD  R30,Y+5
00a849 81fe      	LDD  R31,Y+5+1
00a84a 93fa      	ST   -Y,R31
00a84b 93ea      	ST   -Y,R30
00a84c e0a0      	LDI  R26,LOW(512)
00a84d e0b2      	LDI  R27,HIGH(512)
00a84e ddd1      	RCALL _rx_datablock_G102
00a84f 30e0      	CPI  R30,0
00a850 f409      	BRNE _0x20400A8
                 _0x20400A7:
00a851 c002      	RJMP _0x20400A6
                 _0x20400A8:
00a852 e0e0      	LDI  R30,LOW(0)
00a853 83e8      	ST   Y,R30
                 _0x20400A6:
00a854 c023      	RJMP _0x20400A9
                 _0x20400A5:
00a855 e5e2      	LDI  R30,LOW(82)
00a856 93ea      	ST   -Y,R30
                +
00a857 81aa     +LDD R26 , Y + 2
00a858 81bb     +LDD R27 , Y + 2 + 1
00a859 818c     +LDD R24 , Y + 2 + 2
00a85a 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a85b de6d      	RCALL _send_cmd_G102
00a85c 30e0      	CPI  R30,0
00a85d f4d1      	BRNE _0x20400AA
                 _0x20400AC:
00a85e 81ed      	LDD  R30,Y+5
00a85f 81fe      	LDD  R31,Y+5+1
00a860 93fa      	ST   -Y,R31
00a861 93ea      	ST   -Y,R30
00a862 e0a0      	LDI  R26,LOW(512)
00a863 e0b2      	LDI  R27,HIGH(512)
00a864 ddbb      	RCALL _rx_datablock_G102
00a865 30e0      	CPI  R30,0
00a866 f051      	BREQ _0x20400AD
00a867 81ed      	LDD  R30,Y+5
00a868 81fe      	LDD  R31,Y+5+1
00a869 50e0      	SUBI R30,LOW(-512)
00a86a 4ffe      	SBCI R31,HIGH(-512)
00a86b 83ed      	STD  Y+5,R30
00a86c 83fe      	STD  Y+5+1,R31
00a86d 81e8      	LD   R30,Y
00a86e 50e1      	SUBI R30,LOW(1)
00a86f 83e8      	ST   Y,R30
00a870 f769      	BRNE _0x20400AC
                 _0x20400AD:
00a871 e4ec      	LDI  R30,LOW(76)
00a872 93ea      	ST   -Y,R30
                +
00a873 e0a0     +LDI R26 , LOW ( 0x0 )
00a874 e0b0     +LDI R27 , HIGH ( 0x0 )
00a875 e080     +LDI R24 , BYTE3 ( 0x0 )
00a876 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a877 de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
00a878 dda0      	RCALL _release_spi_G102
00a879 81e8      	LD   R30,Y
00a87a 30e0      	CPI  R30,0
00a87b f011      	BREQ _0x20400AF
00a87c e0e1      	LDI  R30,LOW(1)
00a87d c001      	RJMP _0x20400B0
                 _0x20400AF:
00a87e e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
00a87f c2f6      	RJMP _0x20E0020
                 _disk_write:
00a880 93aa      	ST   -Y,R26
00a881 81ef      	LDD  R30,Y+7
00a882 30e0      	CPI  R30,0
00a883 f419      	BRNE _0x20400B3
00a884 81e8      	LD   R30,Y
00a885 30e0      	CPI  R30,0
00a886 f411      	BRNE _0x20400B2
                 _0x20400B3:
00a887 e0e4      	LDI  R30,LOW(4)
00a888 c2ed      	RJMP _0x20E0020
                 _0x20400B2:
00a889 91e0 1aad 	LDS  R30,_status_G102
00a88b 70e1      	ANDI R30,LOW(0x1)
00a88c f011      	BREQ _0x20400B5
00a88d e0e3      	LDI  R30,LOW(3)
00a88e c2e7      	RJMP _0x20E0020
                 _0x20400B5:
00a88f 91e0 1aad 	LDS  R30,_status_G102
00a891 70e4      	ANDI R30,LOW(0x4)
00a892 f011      	BREQ _0x20400B6
00a893 e0e2      	LDI  R30,LOW(2)
00a894 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
00a895 91e0 1ab0 	LDS  R30,_card_type_G102
00a897 70e8      	ANDI R30,LOW(0x8)
00a898 f471      	BRNE _0x20400B7
                +
00a899 81e9     +LDD R30 , Y + 1
00a89a 81fa     +LDD R31 , Y + 1 + 1
00a89b 816b     +LDD R22 , Y + 1 + 2
00a89c 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a89d e0a0     +LDI R26 , LOW ( 0x200 )
00a89e e0b2     +LDI R27 , HIGH ( 0x200 )
00a89f e080     +LDI R24 , BYTE3 ( 0x200 )
00a8a0 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a8a1 940e df5c 	CALL __MULD12U
                +
00a8a3 83e9     +STD Y + 1 , R30
00a8a4 83fa     +STD Y + 1 + 1 , R31
00a8a5 836b     +STD Y + 1 + 2 , R22
00a8a6 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
00a8a7 81a8      	LD   R26,Y
00a8a8 30a1      	CPI  R26,LOW(0x1)
00a8a9 f4a9      	BRNE _0x20400B8
00a8aa e5e8      	LDI  R30,LOW(88)
00a8ab 93ea      	ST   -Y,R30
                +
00a8ac 81aa     +LDD R26 , Y + 2
00a8ad 81bb     +LDD R27 , Y + 2 + 1
00a8ae 818c     +LDD R24 , Y + 2 + 2
00a8af 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a8b0 de18      	RCALL _send_cmd_G102
00a8b1 30e0      	CPI  R30,0
00a8b2 f441      	BRNE _0x20400BA
00a8b3 81ed      	LDD  R30,Y+5
00a8b4 81fe      	LDD  R31,Y+5+1
00a8b5 93fa      	ST   -Y,R31
00a8b6 93ea      	ST   -Y,R30
00a8b7 efae      	LDI  R26,LOW(254)
00a8b8 ddcc      	RCALL _tx_datablock_G102
00a8b9 30e0      	CPI  R30,0
00a8ba f409      	BRNE _0x20400BB
                 _0x20400BA:
00a8bb c002      	RJMP _0x20400B9
                 _0x20400BB:
00a8bc e0e0      	LDI  R30,LOW(0)
00a8bd 83e8      	ST   Y,R30
                 _0x20400B9:
00a8be c030      	RJMP _0x20400BC
                 _0x20400B8:
00a8bf 91e0 1ab0 	LDS  R30,_card_type_G102
00a8c1 70e6      	ANDI R30,LOW(0x6)
00a8c2 f039      	BREQ _0x20400BD
00a8c3 ede7      	LDI  R30,LOW(215)
00a8c4 93ea      	ST   -Y,R30
00a8c5 81a9      	LDD  R26,Y+1
00a8c6 27bb      	CLR  R27
00a8c7 2788      	CLR  R24
00a8c8 2799      	CLR  R25
00a8c9 ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
00a8ca e5e9      	LDI  R30,LOW(89)
00a8cb 93ea      	ST   -Y,R30
                +
00a8cc 81aa     +LDD R26 , Y + 2
00a8cd 81bb     +LDD R27 , Y + 2 + 1
00a8ce 818c     +LDD R24 , Y + 2 + 2
00a8cf 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a8d0 ddf8      	RCALL _send_cmd_G102
00a8d1 30e0      	CPI  R30,0
00a8d2 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
00a8d3 81ed      	LDD  R30,Y+5
00a8d4 81fe      	LDD  R31,Y+5+1
00a8d5 93fa      	ST   -Y,R31
00a8d6 93ea      	ST   -Y,R30
00a8d7 efac      	LDI  R26,LOW(252)
00a8d8 ddac      	RCALL _tx_datablock_G102
00a8d9 30e0      	CPI  R30,0
00a8da f051      	BREQ _0x20400C1
00a8db 81ed      	LDD  R30,Y+5
00a8dc 81fe      	LDD  R31,Y+5+1
00a8dd 50e0      	SUBI R30,LOW(-512)
00a8de 4ffe      	SBCI R31,HIGH(-512)
00a8df 83ed      	STD  Y+5,R30
00a8e0 83fe      	STD  Y+5+1,R31
00a8e1 81e8      	LD   R30,Y
00a8e2 50e1      	SUBI R30,LOW(1)
00a8e3 83e8      	ST   Y,R30
00a8e4 f771      	BRNE _0x20400C0
                 _0x20400C1:
00a8e5 e0e0      	LDI  R30,LOW(0)
00a8e6 e0f0      	LDI  R31,HIGH(0)
00a8e7 93fa      	ST   -Y,R31
00a8e8 93ea      	ST   -Y,R30
00a8e9 efad      	LDI  R26,LOW(253)
00a8ea dd9a      	RCALL _tx_datablock_G102
00a8eb 30e0      	CPI  R30,0
00a8ec f411      	BRNE _0x20400C3
00a8ed e0e1      	LDI  R30,LOW(1)
00a8ee 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
00a8ef dd29      	RCALL _release_spi_G102
00a8f0 81e8      	LD   R30,Y
00a8f1 30e0      	CPI  R30,0
00a8f2 f011      	BREQ _0x20400C4
00a8f3 e0e1      	LDI  R30,LOW(1)
00a8f4 c001      	RJMP _0x20400C5
                 _0x20400C4:
00a8f5 e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
00a8f6 c27f      	RJMP _0x20E0020
                 _disk_ioctl:
00a8f7 93ba      	ST   -Y,R27
00a8f8 93aa      	ST   -Y,R26
00a8f9 9760      	SBIW R28,16
00a8fa 940e e0ce 	CALL __SAVELOCR6
00a8fc 8de9      	LDD  R30,Y+25
00a8fd 30e0      	CPI  R30,0
00a8fe f011      	BREQ _0x20400C7
00a8ff e0e4      	LDI  R30,LOW(4)
00a900 c182      	RJMP _0x20E0022
                 _0x20400C7:
00a901 e011      	LDI  R17,LOW(1)
00a902 91e0 1aad 	LDS  R30,_status_G102
00a904 70e1      	ANDI R30,LOW(0x1)
00a905 f011      	BREQ _0x20400C8
00a906 e0e3      	LDI  R30,LOW(3)
00a907 c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
00a908 894e     +LDD R20 , Y + 22
00a909 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
00a90a 8de8      	LDD  R30,Y+24
00a90b 30e0      	CPI  R30,0
00a90c f431      	BRNE _0x20400CC
00a90d 9828      	CBI  0x5,0
00a90e dcf0      	RCALL _wait_ready_G102
00a90f 3fef      	CPI  R30,LOW(0xFF)
00a910 f409      	BRNE _0x20400CD
00a911 e010      	LDI  R17,LOW(0)
                 _0x20400CD:
00a912 c16e      	RJMP _0x20400CB
                 _0x20400CC:
00a913 30e1      	CPI  R30,LOW(0x1)
00a914 f011      	BREQ PC+3
00a915 940c a971 	JMP _0x20400CE
00a917 e4e9      	LDI  R30,LOW(73)
00a918 93ea      	ST   -Y,R30
                +
00a919 e0a0     +LDI R26 , LOW ( 0x0 )
00a91a e0b0     +LDI R27 , HIGH ( 0x0 )
00a91b e080     +LDI R24 , BYTE3 ( 0x0 )
00a91c e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a91d ddab      	RCALL _send_cmd_G102
00a91e 30e0      	CPI  R30,0
00a91f f449      	BRNE _0x20400D0
00a920 01fe      	MOVW R30,R28
00a921 9636      	ADIW R30,6
00a922 93fa      	ST   -Y,R31
00a923 93ea      	ST   -Y,R30
00a924 e1a0      	LDI  R26,LOW(16)
00a925 e0b0      	LDI  R27,0
00a926 dcf9      	RCALL _rx_datablock_G102
00a927 30e0      	CPI  R30,0
00a928 f409      	BRNE _0x20400D1
                 _0x20400D0:
00a929 c046      	RJMP _0x20400CF
                 _0x20400D1:
00a92a 81ee      	LDD  R30,Y+6
00a92b 95e2      	SWAP R30
00a92c 70ef      	ANDI R30,0xF
00a92d 95e6      	LSR  R30
00a92e 95e6      	LSR  R30
00a92f 30e1      	CPI  R30,LOW(0x1)
00a930 f469      	BRNE _0x20400D2
00a931 e0e0      	LDI  R30,0
00a932 85fe      	LDD  R31,Y+14
00a933 85af      	LDD  R26,Y+15
00a934 e0b0      	LDI  R27,0
00a935 0fea      	ADD  R30,R26
00a936 1ffb      	ADC  R31,R27
00a937 9631      	ADIW R30,1
00a938 019f      	MOVW R18,R30
00a939 01d9      	MOVW R26,R18
00a93a 2788      	CLR  R24
00a93b 2799      	CLR  R25
00a93c e0ea      	LDI  R30,LOW(10)
00a93d c02c      	RJMP _0x2040101
                 _0x20400D2:
00a93e 85eb      	LDD  R30,Y+11
00a93f 70ef      	ANDI R30,LOW(0xF)
00a940 2fae      	MOV  R26,R30
00a941 89e8      	LDD  R30,Y+16
00a942 78e0      	ANDI R30,LOW(0x80)
00a943 1fee      	ROL  R30
00a944 e0e0      	LDI  R30,0
00a945 1fee      	ROL  R30
00a946 0fae      	ADD  R26,R30
00a947 85ef      	LDD  R30,Y+15
00a948 70e3      	ANDI R30,LOW(0x3)
00a949 0fee      	LSL  R30
00a94a 0fea      	ADD  R30,R26
00a94b 5fee      	SUBI R30,-LOW(2)
00a94c 2f0e      	MOV  R16,R30
00a94d 85ee      	LDD  R30,Y+14
00a94e 95e2      	SWAP R30
00a94f 70ef      	ANDI R30,0xF
00a950 95e6      	LSR  R30
00a951 95e6      	LSR  R30
00a952 2fae      	MOV  R26,R30
00a953 85ed      	LDD  R30,Y+13
00a954 e0f0      	LDI  R31,0
00a955 940e df05 	CALL __LSLW2
00a957 e0b0      	LDI  R27,0
00a958 0fae      	ADD  R26,R30
00a959 1fbf      	ADC  R27,R31
00a95a 85ec      	LDD  R30,Y+12
00a95b 70e3      	ANDI R30,LOW(0x3)
00a95c e0f0      	LDI  R31,0
00a95d 940e df05 	CALL __LSLW2
00a95f 2ffe      	MOV  R31,R30
00a960 e0e0      	LDI  R30,0
00a961 0fea      	ADD  R30,R26
00a962 1ffb      	ADC  R31,R27
00a963 9631      	ADIW R30,1
00a964 019f      	MOVW R18,R30
00a965 01d9      	MOVW R26,R18
00a966 2788      	CLR  R24
00a967 2799      	CLR  R25
00a968 2fe0      	MOV  R30,R16
00a969 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
00a96a 940e dee9 	CALL __LSLD12
00a96c 01da      	MOVW R26,R20
00a96d 940e e039 	CALL __PUTDP1
00a96f e010      	LDI  R17,LOW(0)
                 _0x20400CF:
00a970 c110      	RJMP _0x20400CB
                 _0x20400CE:
00a971 30e2      	CPI  R30,LOW(0x2)
00a972 f439      	BRNE _0x20400D4
00a973 01da      	MOVW R26,R20
00a974 e0e0      	LDI  R30,LOW(512)
00a975 e0f2      	LDI  R31,HIGH(512)
00a976 93ed      	ST   X+,R30
00a977 93fc      	ST   X,R31
00a978 e010      	LDI  R17,LOW(0)
00a979 c107      	RJMP _0x20400CB
                 _0x20400D4:
00a97a 30e3      	CPI  R30,LOW(0x3)
00a97b f011      	BREQ PC+3
00a97c 940c aa26 	JMP _0x20400D5
00a97e 91e0 1ab0 	LDS  R30,_card_type_G102
00a980 70e4      	ANDI R30,LOW(0x4)
00a981 f179      	BREQ _0x20400D6
00a982 eced      	LDI  R30,LOW(205)
00a983 93ea      	ST   -Y,R30
                +
00a984 e0a0     +LDI R26 , LOW ( 0x0 )
00a985 e0b0     +LDI R27 , HIGH ( 0x0 )
00a986 e080     +LDI R24 , BYTE3 ( 0x0 )
00a987 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a988 dd40      	RCALL _send_cmd_G102
00a989 30e0      	CPI  R30,0
00a98a f529      	BRNE _0x20400D7
00a98b efef      	LDI  R30,LOW(255)
00a98c bdee      	OUT  0x2E,R30
                 _0x20400D8:
00a98d b5ed      	IN   R30,0x2D
00a98e ffe7      	SBRS R30,7
00a98f cffd      	RJMP _0x20400D8
00a990 01fe      	MOVW R30,R28
00a991 9636      	ADIW R30,6
00a992 93fa      	ST   -Y,R31
00a993 93ea      	ST   -Y,R30
00a994 e1a0      	LDI  R26,LOW(16)
00a995 e0b0      	LDI  R27,0
00a996 dc89      	RCALL _rx_datablock_G102
00a997 30e0      	CPI  R30,0
00a998 f0b9      	BREQ _0x20400DB
00a999 e300      	LDI  R16,LOW(48)
                 _0x20400DD:
00a99a 3000      	CPI  R16,0
00a99b f039      	BREQ _0x20400DE
00a99c efef      	LDI  R30,LOW(255)
00a99d bdee      	OUT  0x2E,R30
                 _0x20400DF:
00a99e b5ed      	IN   R30,0x2D
00a99f ffe7      	SBRS R30,7
00a9a0 cffd      	RJMP _0x20400DF
00a9a1 5001      	SUBI R16,1
00a9a2 cff7      	RJMP _0x20400DD
                 _0x20400DE:
00a9a3 89e8      	LDD  R30,Y+16
00a9a4 95e2      	SWAP R30
00a9a5 70ef      	ANDI R30,0xF
                +
00a9a6 e1a0     +LDI R26 , LOW ( 0x10 )
00a9a7 e0b0     +LDI R27 , HIGH ( 0x10 )
00a9a8 e080     +LDI R24 , BYTE3 ( 0x10 )
00a9a9 e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
00a9aa 940e dee9 	CALL __LSLD12
00a9ac 01da      	MOVW R26,R20
00a9ad 940e e039 	CALL __PUTDP1
00a9af e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
00a9b0 c074      	RJMP _0x20400E2
                 _0x20400D6:
00a9b1 e4e9      	LDI  R30,LOW(73)
00a9b2 93ea      	ST   -Y,R30
                +
00a9b3 e0a0     +LDI R26 , LOW ( 0x0 )
00a9b4 e0b0     +LDI R27 , HIGH ( 0x0 )
00a9b5 e080     +LDI R24 , BYTE3 ( 0x0 )
00a9b6 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a9b7 dd11      	RCALL _send_cmd_G102
00a9b8 30e0      	CPI  R30,0
00a9b9 f449      	BRNE _0x20400E4
00a9ba 01fe      	MOVW R30,R28
00a9bb 9636      	ADIW R30,6
00a9bc 93fa      	ST   -Y,R31
00a9bd 93ea      	ST   -Y,R30
00a9be e1a0      	LDI  R26,LOW(16)
00a9bf e0b0      	LDI  R27,0
00a9c0 dc5f      	RCALL _rx_datablock_G102
00a9c1 30e0      	CPI  R30,0
00a9c2 f409      	BRNE _0x20400E5
                 _0x20400E4:
00a9c3 c061      	RJMP _0x20400E3
                 _0x20400E5:
00a9c4 91e0 1ab0 	LDS  R30,_card_type_G102
00a9c6 70e2      	ANDI R30,LOW(0x2)
00a9c7 f151      	BREQ _0x20400E6
00a9c8 89e8      	LDD  R30,Y+16
00a9c9 73ef      	ANDI R30,LOW(0x3F)
00a9ca 27ff      	CLR  R31
00a9cb 2766      	CLR  R22
00a9cc 2777      	CLR  R23
00a9cd 940e df21 	CALL __LSLD1
00a9cf 937f      	PUSH R23
00a9d0 936f      	PUSH R22
00a9d1 93ff      	PUSH R31
00a9d2 93ef      	PUSH R30
00a9d3 89e9      	LDD  R30,Y+17
00a9d4 78e0      	ANDI R30,LOW(0x80)
00a9d5 27ff      	CLR  R31
00a9d6 2766      	CLR  R22
00a9d7 2777      	CLR  R23
00a9d8 01df      	MOVW R26,R30
00a9d9 01cb      	MOVW R24,R22
00a9da e0e7      	LDI  R30,LOW(7)
00a9db 940e def5 	CALL __LSRD12
00a9dd 91af      	POP  R26
00a9de 91bf      	POP  R27
00a9df 918f      	POP  R24
00a9e0 919f      	POP  R25
00a9e1 940e deb6 	CALL __ADDD12
                +
00a9e3 5fef     +SUBI R30 , LOW ( - 1 )
00a9e4 4fff     +SBCI R31 , HIGH ( - 1 )
00a9e5 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a9e6 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a9e7 01df      	MOVW R26,R30
00a9e8 01cb      	MOVW R24,R22
00a9e9 89eb      	LDD  R30,Y+19
00a9ea 95e2      	SWAP R30
00a9eb 70ef      	ANDI R30,0xF
00a9ec 95e6      	LSR  R30
00a9ed 95e6      	LSR  R30
00a9ee 50e1      	SUBI R30,LOW(1)
00a9ef 940e dee9 	CALL __LSLD12
00a9f1 c02f      	RJMP _0x2040102
                 _0x20400E6:
00a9f2 89e8      	LDD  R30,Y+16
00a9f3 77ec      	ANDI R30,LOW(0x7C)
00a9f4 95e6      	LSR  R30
00a9f5 95e6      	LSR  R30
00a9f6 27ff      	CLR  R31
00a9f7 2766      	CLR  R22
00a9f8 2777      	CLR  R23
                +
00a9f9 5fef     +SUBI R30 , LOW ( - 1 )
00a9fa 4fff     +SBCI R31 , HIGH ( - 1 )
00a9fb 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a9fc 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a9fd 937f      	PUSH R23
00a9fe 936f      	PUSH R22
00a9ff 93ff      	PUSH R31
00aa00 93ef      	PUSH R30
00aa01 89e9      	LDD  R30,Y+17
00aa02 70e3      	ANDI R30,LOW(0x3)
00aa03 27ff      	CLR  R31
00aa04 2766      	CLR  R22
00aa05 2777      	CLR  R23
00aa06 01df      	MOVW R26,R30
00aa07 01cb      	MOVW R24,R22
00aa08 e0e3      	LDI  R30,LOW(3)
00aa09 940e dee9 	CALL __LSLD12
00aa0b 01df      	MOVW R26,R30
00aa0c 01cb      	MOVW R24,R22
00aa0d 89e9      	LDD  R30,Y+17
00aa0e 7ee0      	ANDI R30,LOW(0xE0)
00aa0f 95e2      	SWAP R30
00aa10 70ef      	ANDI R30,0xF
00aa11 95e6      	LSR  R30
00aa12 27ff      	CLR  R31
00aa13 2766      	CLR  R22
00aa14 2777      	CLR  R23
00aa15 940e deb6 	CALL __ADDD12
                +
00aa17 5fef     +SUBI R30 , LOW ( - 1 )
00aa18 4fff     +SBCI R31 , HIGH ( - 1 )
00aa19 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00aa1a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00aa1b 91af      	POP  R26
00aa1c 91bf      	POP  R27
00aa1d 918f      	POP  R24
00aa1e 919f      	POP  R25
00aa1f 940e df5c 	CALL __MULD12U
                 _0x2040102:
00aa21 01da      	MOVW R26,R20
00aa22 940e e039 	CALL __PUTDP1
00aa24 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
00aa25 c05b      	RJMP _0x20400CB
                 _0x20400D5:
00aa26 30ea      	CPI  R30,LOW(0xA)
00aa27 f431      	BRNE _0x20400E8
00aa28 91e0 1ab0 	LDS  R30,_card_type_G102
00aa2a 01da      	MOVW R26,R20
00aa2b 93ec      	ST   X,R30
00aa2c e010      	LDI  R17,LOW(0)
00aa2d c053      	RJMP _0x20400CB
                 _0x20400E8:
00aa2e 30eb      	CPI  R30,LOW(0xB)
00aa2f f499      	BRNE _0x20400E9
00aa30 e4e9      	LDI  R30,LOW(73)
00aa31 93ea      	ST   -Y,R30
                +
00aa32 e0a0     +LDI R26 , LOW ( 0x0 )
00aa33 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa34 e080     +LDI R24 , BYTE3 ( 0x0 )
00aa35 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa36 dc92      	RCALL _send_cmd_G102
00aa37 30e0      	CPI  R30,0
00aa38 f439      	BRNE _0x20400EB
00aa39 935a      	ST   -Y,R21
00aa3a 934a      	ST   -Y,R20
00aa3b e1a0      	LDI  R26,LOW(16)
00aa3c e0b0      	LDI  R27,0
00aa3d dbe2      	RCALL _rx_datablock_G102
00aa3e 30e0      	CPI  R30,0
00aa3f f409      	BRNE _0x20400EC
                 _0x20400EB:
00aa40 c001      	RJMP _0x20400EA
                 _0x20400EC:
00aa41 e010      	LDI  R17,LOW(0)
                 _0x20400EA:
00aa42 c03e      	RJMP _0x20400CB
                 _0x20400E9:
00aa43 30ec      	CPI  R30,LOW(0xC)
00aa44 f499      	BRNE _0x20400ED
00aa45 e4ea      	LDI  R30,LOW(74)
00aa46 93ea      	ST   -Y,R30
                +
00aa47 e0a0     +LDI R26 , LOW ( 0x0 )
00aa48 e0b0     +LDI R27 , HIGH ( 0x0 )
00aa49 e080     +LDI R24 , BYTE3 ( 0x0 )
00aa4a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa4b dc7d      	RCALL _send_cmd_G102
00aa4c 30e0      	CPI  R30,0
00aa4d f439      	BRNE _0x20400EF
00aa4e 935a      	ST   -Y,R21
00aa4f 934a      	ST   -Y,R20
00aa50 e1a0      	LDI  R26,LOW(16)
00aa51 e0b0      	LDI  R27,0
00aa52 dbcd      	RCALL _rx_datablock_G102
00aa53 30e0      	CPI  R30,0
00aa54 f409      	BRNE _0x20400F0
                 _0x20400EF:
00aa55 c001      	RJMP _0x20400EE
                 _0x20400F0:
00aa56 e010      	LDI  R17,LOW(0)
                 _0x20400EE:
00aa57 c029      	RJMP _0x20400CB
                 _0x20400ED:
00aa58 30ed      	CPI  R30,LOW(0xD)
00aa59 f469      	BRNE _0x20400F1
00aa5a e7ea      	LDI  R30,LOW(122)
00aa5b 93ea      	ST   -Y,R30
                +
00aa5c e0a0     +LDI R26 , LOW ( 0x0 )
00aa5d e0b0     +LDI R27 , HIGH ( 0x0 )
00aa5e e080     +LDI R24 , BYTE3 ( 0x0 )
00aa5f e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa60 dc68      	RCALL _send_cmd_G102
00aa61 30e0      	CPI  R30,0
00aa62 f419      	BRNE _0x20400F2
00aa63 01da      	MOVW R26,R20
00aa64 dcc6      	RCALL _rx_spi4_G102
00aa65 e010      	LDI  R17,LOW(0)
                 _0x20400F2:
00aa66 c01a      	RJMP _0x20400CB
                 _0x20400F1:
00aa67 30ee      	CPI  R30,LOW(0xE)
00aa68 f4b9      	BRNE _0x20400F9
00aa69 eced      	LDI  R30,LOW(205)
00aa6a 93ea      	ST   -Y,R30
                +
00aa6b e0a0     +LDI R26 , LOW ( 0x0 )
00aa6c e0b0     +LDI R27 , HIGH ( 0x0 )
00aa6d e080     +LDI R24 , BYTE3 ( 0x0 )
00aa6e e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00aa6f dc59      	RCALL _send_cmd_G102
00aa70 30e0      	CPI  R30,0
00aa71 f469      	BRNE _0x20400F4
00aa72 efef      	LDI  R30,LOW(255)
00aa73 bdee      	OUT  0x2E,R30
                 _0x20400F5:
00aa74 b5ed      	IN   R30,0x2D
00aa75 ffe7      	SBRS R30,7
00aa76 cffd      	RJMP _0x20400F5
00aa77 935a      	ST   -Y,R21
00aa78 934a      	ST   -Y,R20
00aa79 e4a0      	LDI  R26,LOW(64)
00aa7a e0b0      	LDI  R27,0
00aa7b dba4      	RCALL _rx_datablock_G102
00aa7c 30e0      	CPI  R30,0
00aa7d f009      	BREQ _0x20400F8
00aa7e e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
00aa7f c001      	RJMP _0x20400CB
                 _0x20400F9:
00aa80 e014      	LDI  R17,LOW(4)
                 _0x20400CB:
00aa81 db97      	RCALL _release_spi_G102
00aa82 2fe1      	MOV  R30,R17
                 _0x20E0022:
00aa83 940e e0d5 	CALL __LOADLOCR6
00aa85 966a      	ADIW R28,26
00aa86 9508      	RET
                 _disk_timerproc:
00aa87 931a      	ST   -Y,R17
00aa88 930a      	ST   -Y,R16
00aa89 9110 1aae 	LDS  R17,_timer1_G102
00aa8b 3010      	CPI  R17,0
00aa8c f019      	BREQ _0x20400FA
00aa8d 5011      	SUBI R17,LOW(1)
00aa8e 9310 1aae 	STS  _timer1_G102,R17
                 _0x20400FA:
00aa90 9110 1aaf 	LDS  R17,_timer2_G102
00aa92 3010      	CPI  R17,0
00aa93 f019      	BREQ _0x20400FB
00aa94 5011      	SUBI R17,LOW(1)
00aa95 9310 1aaf 	STS  _timer2_G102,R17
                 _0x20400FB:
00aa97 9110 1ab1 	LDS  R17,_pv_S102000B000
00aa99 b1e0      	IN   R30,0x0
00aa9a 70e2      	ANDI R30,LOW(0x2)
00aa9b 2fae      	MOV  R26,R30
00aa9c b1e0      	IN   R30,0x0
00aa9d 70e1      	ANDI R30,LOW(0x1)
00aa9e 2bea      	OR   R30,R26
00aa9f 93e0 1ab1 	STS  _pv_S102000B000,R30
00aaa1 17e1      	CP   R30,R17
00aaa2 f481      	BRNE _0x20400FC
00aaa3 9100 1aad 	LDS  R16,_status_G102
00aaa5 70e2      	ANDI R30,LOW(0x2)
00aaa6 f011      	BREQ _0x20400FD
00aaa7 6004      	ORI  R16,LOW(4)
00aaa8 c001      	RJMP _0x20400FE
                 _0x20400FD:
00aaa9 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
00aaaa 91e0 1ab1 	LDS  R30,_pv_S102000B000
00aaac 70e1      	ANDI R30,LOW(0x1)
00aaad f011      	BREQ _0x20400FF
00aaae 6003      	ORI  R16,LOW(3)
00aaaf c001      	RJMP _0x2040100
                 _0x20400FF:
00aab0 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
00aab1 9300 1aad 	STS  _status_G102,R16
                 _0x20400FC:
00aab3 9109      	LD   R16,Y+
00aab4 9119      	LD   R17,Y+
00aab5 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
00aab6 9727      	SBIW R28,7
00aab7 91a0 1463 	LDS  R26,_prtc_get_time
00aab9 91b0 1464 	LDS  R27,_prtc_get_time+1
00aabb 9180 1465 	LDS  R24,_prtc_get_time+2
00aabd 9190 1466 	LDS  R25,_prtc_get_time+3
00aabf 940e e0be 	CALL __CPD02
00aac1 f059      	BREQ _0x2060004
00aac2 91a0 1467 	LDS  R26,_prtc_get_date
00aac4 91b0 1468 	LDS  R27,_prtc_get_date+1
00aac6 9180 1469 	LDS  R24,_prtc_get_date+2
00aac8 9190 146a 	LDS  R25,_prtc_get_date+3
00aaca 940e e0be 	CALL __CPD02
00aacc f429      	BRNE _0x2060003
                 _0x2060004:
                +
00aacd e0e0     +LDI R30 , LOW ( 0x3A210000 )
00aace e0f0     +LDI R31 , HIGH ( 0x3A210000 )
00aacf e261     +LDI R22 , BYTE3 ( 0x3A210000 )
00aad0 e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
00aad1 c070      	RJMP _0x20E0021
                 _0x2060003:
00aad2 940e c27a 	CALL SUBOPT_0x56
00aad4 940e c2d4 	CALL SUBOPT_0x63
00aad6 01de      	MOVW R26,R28
00aad7 9618      	ADIW R26,8
                +
00aad8 91e0 1463+LDS R30 , _prtc_get_time + ( 0 )
00aada 91f0 1464+LDS R31 , _prtc_get_time + ( 0 ) + 1
00aadc 9160 1465+LDS R22 , _prtc_get_time + ( 0 ) + 2
00aade bf6c     +OUT EIND , R22
00aadf 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
00aae0 01fe      	MOVW R30,R28
00aae1 9633      	ADIW R30,3
00aae2 940e d0ec 	CALL SUBOPT_0x296
00aae4 01de      	MOVW R26,R28
00aae5 9614      	ADIW R26,4
                +
00aae6 91e0 1467+LDS R30 , _prtc_get_date + ( 0 )
00aae8 91f0 1468+LDS R31 , _prtc_get_date + ( 0 ) + 1
00aaea 9160 1469+LDS R22 , _prtc_get_date + ( 0 ) + 2
00aaec bf6c     +OUT EIND , R22
00aaed 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
00aaee 81e8      	LD   R30,Y
00aaef 81f9      	LDD  R31,Y+1
00aaf0 5bec      	SUBI R30,LOW(1980)
00aaf1 40f7      	SBCI R31,HIGH(1980)
00aaf2 2766      	CLR  R22
00aaf3 2777      	CLR  R23
00aaf4 01df      	MOVW R26,R30
00aaf5 01cb      	MOVW R24,R22
00aaf6 e1e9      	LDI  R30,LOW(25)
00aaf7 940e dee9 	CALL __LSLD12
00aaf9 937f      	PUSH R23
00aafa 936f      	PUSH R22
00aafb 93ff      	PUSH R31
00aafc 93ef      	PUSH R30
00aafd 81ea      	LDD  R30,Y+2
00aafe 940e d94f 	CALL SUBOPT_0x399
00ab00 01df      	MOVW R26,R30
00ab01 01cb      	MOVW R24,R22
00ab02 e1e5      	LDI  R30,LOW(21)
00ab03 940e dee9 	CALL __LSLD12
00ab05 91af      	POP  R26
00ab06 91bf      	POP  R27
00ab07 918f      	POP  R24
00ab08 919f      	POP  R25
00ab09 940e decf 	CALL __ORD12
00ab0b 01df      	MOVW R26,R30
00ab0c 01cb      	MOVW R24,R22
00ab0d 81eb      	LDD  R30,Y+3
00ab0e 940e d94f 	CALL SUBOPT_0x399
00ab10 940e df30 	CALL __LSLD16
00ab12 940e decf 	CALL __ORD12
00ab14 937f      	PUSH R23
00ab15 936f      	PUSH R22
00ab16 93ff      	PUSH R31
00ab17 93ef      	PUSH R30
00ab18 81ee      	LDD  R30,Y+6
00ab19 940e d94f 	CALL SUBOPT_0x399
00ab1b 01df      	MOVW R26,R30
00ab1c 01cb      	MOVW R24,R22
00ab1d e0eb      	LDI  R30,LOW(11)
00ab1e 940e dee9 	CALL __LSLD12
00ab20 91af      	POP  R26
00ab21 91bf      	POP  R27
00ab22 918f      	POP  R24
00ab23 919f      	POP  R25
00ab24 940e decf 	CALL __ORD12
00ab26 937f      	PUSH R23
00ab27 936f      	PUSH R22
00ab28 93ff      	PUSH R31
00ab29 93ef      	PUSH R30
00ab2a 81ed      	LDD  R30,Y+5
00ab2b 940e d94f 	CALL SUBOPT_0x399
00ab2d 01df      	MOVW R26,R30
00ab2e 01cb      	MOVW R24,R22
00ab2f e0e5      	LDI  R30,LOW(5)
00ab30 940e dee9 	CALL __LSLD12
00ab32 91af      	POP  R26
00ab33 91bf      	POP  R27
00ab34 918f      	POP  R24
00ab35 919f      	POP  R25
00ab36 940e decf 	CALL __ORD12
00ab38 01df      	MOVW R26,R30
00ab39 01cb      	MOVW R24,R22
00ab3a 81ec      	LDD  R30,Y+4
00ab3b e0f0      	LDI  R31,0
00ab3c 95f5      	ASR  R31
00ab3d 95e7      	ROR  R30
00ab3e 940e df3b 	CALL __CWD1
00ab40 940e decf 	CALL __ORD12
                 _0x20E0021:
00ab42 9627      	ADIW R28,7
00ab43 9508      	RET
                 _mem_cpy_G103:
00ab44 940e c394 	CALL SUBOPT_0x7F
                +
00ab46 8508     +LDD R16 , Y + 8
00ab47 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
00ab48 812e     +LDD R18 , Y + 6
00ab49 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
00ab4a 81ec      	LDD  R30,Y+4
00ab4b 81fd      	LDD  R31,Y+4+1
00ab4c 9731      	SBIW R30,1
00ab4d 83ec      	STD  Y+4,R30
00ab4e 83fd      	STD  Y+4+1,R31
00ab4f 9631      	ADIW R30,1
00ab50 f061      	BREQ _0x2060008
00ab51 931f      	PUSH R17
00ab52 930f      	PUSH R16
                +
00ab53 5f0f     +SUBI R16 , LOW ( - 1 )
00ab54 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ab55 01d9      	MOVW R26,R18
                +
00ab56 5f2f     +SUBI R18 , LOW ( - 1 )
00ab57 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00ab58 91ec      	LD   R30,X
00ab59 91af      	POP  R26
00ab5a 91bf      	POP  R27
00ab5b 93ec      	ST   X,R30
00ab5c cfed      	RJMP _0x2060006
                 _0x2060008:
00ab5d 940e e0d7 	CALL __LOADLOCR4
00ab5f c435      	RJMP _0x20E0018
                 _mem_set_G103:
00ab60 940e c3a0 	CALL SUBOPT_0x81
                +
00ab62 810e     +LDD R16 , Y + 6
00ab63 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
00ab64 81ea      	LDD  R30,Y+2
00ab65 81fb      	LDD  R31,Y+2+1
00ab66 9731      	SBIW R30,1
00ab67 83ea      	STD  Y+2,R30
00ab68 83fb      	STD  Y+2+1,R31
00ab69 9631      	ADIW R30,1
00ab6a f049      	BREQ _0x206000E
00ab6b 931f      	PUSH R17
00ab6c 930f      	PUSH R16
                +
00ab6d 5f0f     +SUBI R16 , LOW ( - 1 )
00ab6e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ab6f 81ec      	LDD  R30,Y+4
00ab70 91af      	POP  R26
00ab71 91bf      	POP  R27
00ab72 93ec      	ST   X,R30
00ab73 cff0      	RJMP _0x206000C
                 _0x206000E:
00ab74 8119      	LDD  R17,Y+1
00ab75 8108      	LDD  R16,Y+0
                 _0x20E0020:
00ab76 9628      	ADIW R28,8
00ab77 9508      	RET
                 _mem_cmp_G103:
00ab78 940e ca96 	CALL SUBOPT_0x1A6
                +
00ab7a 850a     +LDD R16 , Y + 10
00ab7b 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
00ab7c 8528     +LDD R18 , Y + 8
00ab7d 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
00ab7e e040     +LDI R20 , LOW ( 0 )
00ab7f e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
00ab80 81ee      	LDD  R30,Y+6
00ab81 81ff      	LDD  R31,Y+6+1
00ab82 9731      	SBIW R30,1
00ab83 83ee      	STD  Y+6,R30
00ab84 83ff      	STD  Y+6+1,R31
00ab85 9631      	ADIW R30,1
00ab86 f081      	BREQ _0x2060012
00ab87 01d8      	MOVW R26,R16
                +
00ab88 5f0f     +SUBI R16 , LOW ( - 1 )
00ab89 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ab8a 900c      	LD   R0,X
00ab8b 2411      	CLR  R1
00ab8c 01d9      	MOVW R26,R18
                +
00ab8d 5f2f     +SUBI R18 , LOW ( - 1 )
00ab8e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00ab8f 91ac      	LD   R26,X
00ab90 27bb      	CLR  R27
00ab91 01f0      	MOVW R30,R0
00ab92 1bea      	SUB  R30,R26
00ab93 0bfb      	SBC  R31,R27
00ab94 01af      	MOVW R20,R30
00ab95 9730      	SBIW R30,0
00ab96 f009      	BREQ _0x2060013
                 _0x2060012:
00ab97 c001      	RJMP _0x2060011
                 _0x2060013:
00ab98 cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
00ab99 01fa      	MOVW R30,R20
                 _0x20E001E:
00ab9a 940e e0d5 	CALL __LOADLOCR6
00ab9c 962c      	ADIW R28,12
00ab9d 9508      	RET
                 _chk_chrf_G103:
00ab9e 93ba      	ST   -Y,R27
00ab9f 93aa      	ST   -Y,R26
                 _0x2060014:
00aba0 940e c4e3 	CALL SUBOPT_0xB2
                +
00aba2 bf6b     +OUT RAMPZ , R22
00aba3 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00aba4 30e0      	CPI  R30,0
00aba5 f051      	BREQ _0x2060017
00aba6 940e c4e3 	CALL SUBOPT_0xB2
                +
00aba8 bf6b     +OUT RAMPZ , R22
00aba9 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00abaa 81e8      	LD   R30,Y
00abab 81f9      	LDD  R31,Y+1
00abac e0b0      	LDI  R27,0
00abad 17ea      	CP   R30,R26
00abae 07fb      	CPC  R31,R27
00abaf f409      	BRNE _0x2060018
                 _0x2060017:
00abb0 c005      	RJMP _0x2060016
                 _0x2060018:
00abb1 01de      	MOVW R26,R28
00abb2 9612      	ADIW R26,2
00abb3 940e d953 	CALL SUBOPT_0x39A
00abb5 cfea      	RJMP _0x2060014
                 _0x2060016:
00abb6 940e c4e3 	CALL SUBOPT_0xB2
                +
00abb8 bf6b     +OUT RAMPZ , R22
00abb9 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00abba e0f0      	LDI  R31,0
                 _0x20E001D:
00abbb 9626      	ADIW R28,6
00abbc 9508      	RET
                 _move_window_G103:
00abbd 940e e063 	CALL __PUTPARD2
00abbf 9724      	SBIW R28,4
00abc0 931a      	ST   -Y,R17
00abc1 85a9      	LDD  R26,Y+9
00abc2 85ba      	LDD  R27,Y+9+1
00abc3 969e      	ADIW R26,46
00abc4 940e d95b 	CALL SUBOPT_0x39B
00abc6 940e d962 	CALL SUBOPT_0x39C
00abc8 940e d0dd 	CALL SUBOPT_0x293
00abca 940e e0c4 	CALL __CPD12
00abcc f411      	BRNE PC+3
00abcd 940c ac1f 	JMP _0x2060019
00abcf 85e9      	LDD  R30,Y+9
00abd0 85fa      	LDD  R31,Y+9+1
00abd1 81e4      	LDD  R30,Z+4
00abd2 30e0      	CPI  R30,0
00abd3 f199      	BREQ _0x206001A
00abd4 940e d967 	CALL SUBOPT_0x39D
00abd6 30e0      	CPI  R30,0
00abd7 f011      	BREQ _0x206001B
00abd8 e0e1      	LDI  R30,LOW(1)
00abd9 c046      	RJMP _0x20E001C
                 _0x206001B:
00abda 85a9      	LDD  R26,Y+9
00abdb 85ba      	LDD  R27,Y+9+1
00abdc 9614      	ADIW R26,4
00abdd e0e0      	LDI  R30,LOW(0)
00abde 93ec      	ST   X,R30
00abdf 85e9      	LDD  R30,Y+9
00abe0 85fa      	LDD  R31,Y+9+1
00abe1 940e d977 	CALL SUBOPT_0x39E
00abe3 010d      	MOVW R0,R26
00abe4 85a9      	LDD  R26,Y+9
00abe5 85ba      	LDD  R27,Y+9+1
00abe6 965a      	ADIW R26,26
00abe7 940e e02e 	CALL __GETD1P
00abe9 01d0      	MOVW R26,R0
00abea 940e deb6 	CALL __ADDD12
00abec 940e d0dd 	CALL SUBOPT_0x293
00abee 940e e0c9 	CALL __CPD21
00abf0 f4b0      	BRSH _0x206001C
00abf1 85e9      	LDD  R30,Y+9
00abf2 85fa      	LDD  R31,Y+9+1
00abf3 8113      	LDD  R17,Z+3
                 _0x206001E:
00abf4 3012      	CPI  R17,2
00abf5 f088      	BRLO _0x206001F
00abf6 85a9      	LDD  R26,Y+9
00abf7 85ba      	LDD  R27,Y+9+1
00abf8 965a      	ADIW R26,26
00abf9 940e e02e 	CALL __GETD1P
00abfb 940e d0dd 	CALL SUBOPT_0x293
00abfd 940e deb6 	CALL __ADDD12
                +
00abff 83e9     +STD Y + 1 , R30
00ac00 83fa     +STD Y + 1 + 1 , R31
00ac01 836b     +STD Y + 1 + 2 , R22
00ac02 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00ac03 940e d967 	CALL SUBOPT_0x39D
00ac05 5011      	SUBI R17,1
00ac06 cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
00ac07 940e d962 	CALL SUBOPT_0x39C
00ac09 940e e0b2 	CALL __CPD10
00ac0b f099      	BREQ _0x2060020
00ac0c 85e9      	LDD  R30,Y+9
00ac0d 85fa      	LDD  R31,Y+9+1
00ac0e 81a1      	LDD  R26,Z+1
00ac0f 93aa      	ST   -Y,R26
00ac10 85ea      	LDD  R30,Y+10
00ac11 85fb      	LDD  R31,Y+10+1
00ac12 96f2      	ADIW R30,50
00ac13 940e d97c 	CALL SUBOPT_0x39F
00ac15 f011      	BREQ _0x2060021
00ac16 e0e1      	LDI  R30,LOW(1)
00ac17 c008      	RJMP _0x20E001C
                 _0x2060021:
00ac18 940e d962 	CALL SUBOPT_0x39C
                +
00ac1a 85a9     +LDD R26 , Y + 9
00ac1b 85ba     +LDD R27 , Y + 9 + 1
00ac1c 969e     +ADIW R26 , 46
00ac1d 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
00ac1f e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
00ac20 8118      	LDD  R17,Y+0
00ac21 962b      	ADIW R28,11
00ac22 9508      	RET
                 _sync_G103:
00ac23 93ba      	ST   -Y,R27
00ac24 93aa      	ST   -Y,R26
00ac25 931a      	ST   -Y,R17
00ac26 81e9      	LDD  R30,Y+1
00ac27 81fa      	LDD  R31,Y+1+1
00ac28 93fa      	ST   -Y,R31
00ac29 93ea      	ST   -Y,R30
00ac2a 940e d987 	CALL SUBOPT_0x3A0
00ac2c 2f1e      	MOV  R17,R30
00ac2d 3010      	CPI  R17,0
00ac2e f011      	BREQ PC+3
00ac2f 940c ac93 	JMP _0x2060022
00ac31 81a9      	LDD  R26,Y+1
00ac32 81ba      	LDD  R27,Y+1+1
00ac33 91ac      	LD   R26,X
00ac34 30a3      	CPI  R26,LOW(0x3)
00ac35 f429      	BRNE _0x2060024
00ac36 81e9      	LDD  R30,Y+1
00ac37 81fa      	LDD  R31,Y+1+1
00ac38 81e5      	LDD  R30,Z+5
00ac39 30e0      	CPI  R30,0
00ac3a f409      	BRNE _0x2060025
                 _0x2060024:
00ac3b c04b      	RJMP _0x2060023
                 _0x2060025:
00ac3c 81a9      	LDD  R26,Y+1
00ac3d 81ba      	LDD  R27,Y+1+1
00ac3e 969e      	ADIW R26,46
00ac3f 940e c3ef 	CALL SUBOPT_0x8E
00ac41 81e9      	LDD  R30,Y+1
00ac42 81fa      	LDD  R31,Y+1+1
00ac43 940e d98b 	CALL SUBOPT_0x3A1
00ac45 81e9      	LDD  R30,Y+1
00ac46 81fa      	LDD  R31,Y+1+1
00ac47 96f2      	ADIW R30,50
00ac48 50e2      	SUBI R30,LOW(-510)
00ac49 4ffe      	SBCI R31,HIGH(-510)
00ac4a e5a5      	LDI  R26,LOW(43605)
00ac4b eaba      	LDI  R27,HIGH(43605)
00ac4c 83a0      	STD  Z+0,R26
00ac4d 83b1      	STD  Z+1,R27
00ac4e 81e9      	LDD  R30,Y+1
00ac4f 81fa      	LDD  R31,Y+1+1
00ac50 96f2      	ADIW R30,50
                +
00ac51 e5a2     +LDI R26 , LOW ( 0x41615252 )
00ac52 e5b2     +LDI R27 , HIGH ( 0x41615252 )
00ac53 e681     +LDI R24 , BYTE3 ( 0x41615252 )
00ac54 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
00ac55 940e cf72 	CALL SUBOPT_0x25C
00ac57 81e9      	LDD  R30,Y+1
00ac58 81fa      	LDD  R31,Y+1+1
00ac59 96f2      	ADIW R30,50
00ac5a 51ec      	SUBI R30,LOW(-484)
00ac5b 4ffe      	SBCI R31,HIGH(-484)
                +
00ac5c e7a2     +LDI R26 , LOW ( 0x61417272 )
00ac5d e7b2     +LDI R27 , HIGH ( 0x61417272 )
00ac5e e481     +LDI R24 , BYTE3 ( 0x61417272 )
00ac5f e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
00ac60 940e cf72 	CALL SUBOPT_0x25C
00ac62 81e9      	LDD  R30,Y+1
00ac63 81fa      	LDD  R31,Y+1+1
00ac64 96f2      	ADIW R30,50
00ac65 51e8      	SUBI R30,LOW(-488)
00ac66 4ffe      	SBCI R31,HIGH(-488)
00ac67 010f      	MOVW R0,R30
00ac68 81a9      	LDD  R26,Y+1
00ac69 81ba      	LDD  R27,Y+1+1
00ac6a 961e      	ADIW R26,14
00ac6b 940e d996 	CALL SUBOPT_0x3A2
00ac6d 96f2      	ADIW R30,50
00ac6e 51e4      	SUBI R30,LOW(-492)
00ac6f 4ffe      	SBCI R31,HIGH(-492)
00ac70 010f      	MOVW R0,R30
00ac71 81a9      	LDD  R26,Y+1
00ac72 81ba      	LDD  R27,Y+1+1
00ac73 961a      	ADIW R26,10
00ac74 940e d996 	CALL SUBOPT_0x3A2
00ac76 81a1      	LDD  R26,Z+1
00ac77 93aa      	ST   -Y,R26
00ac78 81ea      	LDD  R30,Y+2
00ac79 81fb      	LDD  R31,Y+2+1
00ac7a 96f2      	ADIW R30,50
00ac7b 93fa      	ST   -Y,R31
00ac7c 93ea      	ST   -Y,R30
00ac7d 81ec      	LDD  R30,Y+4
00ac7e 81fd      	LDD  R31,Y+4+1
00ac7f 940e d99e 	CALL SUBOPT_0x3A3
00ac81 dbfe      	RCALL _disk_write
00ac82 81a9      	LDD  R26,Y+1
00ac83 81ba      	LDD  R27,Y+1+1
00ac84 9615      	ADIW R26,5
00ac85 e0e0      	LDI  R30,LOW(0)
00ac86 93ec      	ST   X,R30
                 _0x2060023:
00ac87 81e9      	LDD  R30,Y+1
00ac88 81fa      	LDD  R31,Y+1+1
00ac89 81a1      	LDD  R26,Z+1
00ac8a 93aa      	ST   -Y,R26
00ac8b e0e0      	LDI  R30,LOW(0)
00ac8c 93ea      	ST   -Y,R30
00ac8d e0a0      	LDI  R26,LOW(0)
00ac8e e0b0      	LDI  R27,HIGH(0)
00ac8f dc67      	RCALL _disk_ioctl
00ac90 30e0      	CPI  R30,0
00ac91 f009      	BREQ _0x2060026
00ac92 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
00ac93 2fe1      	MOV  R30,R17
                 _0x20E001B:
00ac94 8118      	LDD  R17,Y+0
00ac95 9623      	ADIW R28,3
00ac96 9508      	RET
                 _get_fat:
00ac97 940e e063 	CALL __PUTPARD2
00ac99 9724      	SBIW R28,4
00ac9a 940e e0d0 	CALL __SAVELOCR4
00ac9c 940e c5c6 	CALL SUBOPT_0xD7
00ac9e 940e d9a6 	CALL SUBOPT_0x3A4
00aca0 f050      	BRLO _0x2060028
00aca1 85ac      	LDD  R26,Y+12
00aca2 85bd      	LDD  R27,Y+12+1
00aca3 965e      	ADIW R26,30
00aca4 940e e02e 	CALL __GETD1P
00aca6 940e c5c6 	CALL SUBOPT_0xD7
00aca8 940e e0c9 	CALL __CPD21
00acaa f018      	BRLO _0x2060027
                 _0x2060028:
00acab 940e d9ae 	CALL SUBOPT_0x3A5
00acad c073      	RJMP _0x20E001A
                 _0x2060027:
00acae 85ac      	LDD  R26,Y+12
00acaf 85bd      	LDD  R27,Y+12+1
00acb0 9692      	ADIW R26,34
00acb1 940e e02e 	CALL __GETD1P
00acb3 940e c4aa 	CALL SUBOPT_0xA7
00acb5 85ac      	LDD  R26,Y+12
00acb6 85bd      	LDD  R27,Y+12+1
00acb7 91ec      	LD   R30,X
00acb8 940e cd6c 	CALL SUBOPT_0x214
00acba f581      	BRNE _0x206002D
                +
00acbb 8528     +LDD R18 , Y + 8
00acbc 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
00acbd 01f9      	MOVW R30,R18
00acbe 95f6      	LSR  R31
00acbf 95e7      	ROR  R30
                +
00acc0 0f2e     +ADD R18 , R30
00acc1 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
00acc2 940e cac1 	CALL SUBOPT_0x1AD
00acc4 940e d9b3 	CALL SUBOPT_0x3A6
00acc6 940e d9ba 	CALL SUBOPT_0x3A7
00acc8 f009      	BREQ _0x206002E
00acc9 c055      	RJMP _0x206002C
                 _0x206002E:
00acca 940e d9c0 	CALL SUBOPT_0x3A8
00accc 910c      	LD   R16,X
00accd 2711      	CLR  R17
                +
00acce 5f2f     +SUBI R18 , LOW ( - 1 )
00accf 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00acd0 940e cac1 	CALL SUBOPT_0x1AD
00acd2 940e d9b3 	CALL SUBOPT_0x3A6
00acd4 940e d9ba 	CALL SUBOPT_0x3A7
00acd6 f009      	BREQ _0x206002F
00acd7 c047      	RJMP _0x206002C
                 _0x206002F:
00acd8 940e d9c0 	CALL SUBOPT_0x3A8
00acda 91ec      	LD   R30,X
00acdb 2ffe      	MOV  R31,R30
00acdc e0e0      	LDI  R30,0
                +
00acdd 2b0e     +OR R16 , R30
00acde 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
00acdf 85e8      	LDD  R30,Y+8
00ace0 70e1      	ANDI R30,LOW(0x1)
00ace1 f021      	BREQ _0x2060030
00ace2 01f8      	MOVW R30,R16
00ace3 940e df13 	CALL __LSRW4
00ace5 c002      	RJMP _0x206022B
                 _0x2060030:
00ace6 01f8      	MOVW R30,R16
00ace7 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
00ace8 2766      	CLR  R22
00ace9 2777      	CLR  R23
00acea c036      	RJMP _0x20E001A
                 _0x206002D:
00aceb 30e2      	CPI  R30,LOW(0x2)
00acec e0a0      	LDI  R26,HIGH(0x2)
00aced 07fa      	CPC  R31,R26
00acee f4a9      	BRNE _0x2060033
00acef 940e cac1 	CALL SUBOPT_0x1AD
00acf1 940e c265 	CALL SUBOPT_0x52
00acf3 940e d9c8 	CALL SUBOPT_0x3A9
00acf5 940e c297 	CALL SUBOPT_0x59
00acf7 940e d9ba 	CALL SUBOPT_0x3A7
00acf9 f529      	BRNE _0x206002C
00acfa 85a8      	LDD  R26,Y+8
00acfb 85b9      	LDD  R27,Y+8+1
00acfc e0e2      	LDI  R30,LOW(2)
00acfd 940e d9cf 	CALL SUBOPT_0x3AA
00acff 0fae      	ADD  R26,R30
00ad00 1fbf      	ADC  R27,R31
00ad01 940e c0f9 	CALL SUBOPT_0x1E
00ad03 c01d      	RJMP _0x20E001A
                 _0x2060033:
00ad04 30e3      	CPI  R30,LOW(0x3)
00ad05 e0a0      	LDI  R26,HIGH(0x3)
00ad06 07fa      	CPC  R31,R26
00ad07 f4b9      	BRNE _0x206002C
00ad08 940e cac1 	CALL SUBOPT_0x1AD
00ad0a 940e c265 	CALL SUBOPT_0x52
00ad0c 940e d9d6 	CALL SUBOPT_0x3AB
00ad0e 940e c297 	CALL SUBOPT_0x59
00ad10 940e d9ba 	CALL SUBOPT_0x3A7
00ad12 f461      	BRNE _0x206002C
00ad13 85a8      	LDD  R26,Y+8
00ad14 85b9      	LDD  R27,Y+8+1
00ad15 e0e4      	LDI  R30,LOW(4)
00ad16 940e d9cf 	CALL SUBOPT_0x3AA
00ad18 940e c0e9 	CALL SUBOPT_0x1B
                +
00ad1a 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00ad1b 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00ad1c 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00ad1d 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00ad1e c002      	RJMP _0x20E001A
                 _0x206002C:
00ad1f 940e c124 	CALL SUBOPT_0x25
                 _0x20E001A:
00ad21 940e e0d7 	CALL __LOADLOCR4
00ad23 962e      	ADIW R28,14
00ad24 9508      	RET
                 _put_fat:
00ad25 940e e063 	CALL __PUTPARD2
00ad27 9724      	SBIW R28,4
00ad28 940e e0ce 	CALL __SAVELOCR6
00ad2a 940e d9dd 	CALL SUBOPT_0x3AC
00ad2c 940e d9a6 	CALL SUBOPT_0x3A4
00ad2e f050      	BRLO _0x2060038
00ad2f 89aa      	LDD  R26,Y+18
00ad30 89bb      	LDD  R27,Y+18+1
00ad31 965e      	ADIW R26,30
00ad32 940e e02e 	CALL __GETD1P
00ad34 940e d9dd 	CALL SUBOPT_0x3AC
00ad36 940e e0c9 	CALL __CPD21
00ad38 f010      	BRLO _0x2060037
                 _0x2060038:
00ad39 e052      	LDI  R21,LOW(2)
00ad3a c08a      	RJMP _0x206003A
                 _0x2060037:
00ad3b 89aa      	LDD  R26,Y+18
00ad3c 89bb      	LDD  R27,Y+18+1
00ad3d 9692      	ADIW R26,34
00ad3e 940e e02e 	CALL __GETD1P
00ad40 940e c4f2 	CALL SUBOPT_0xB5
00ad42 89aa      	LDD  R26,Y+18
00ad43 89bb      	LDD  R27,Y+18+1
00ad44 91ec      	LD   R30,X
00ad45 940e cd6c 	CALL SUBOPT_0x214
00ad47 f011      	BREQ PC+3
00ad48 940c ad91 	JMP _0x206003E
                +
00ad4a 850e     +LDD R16 , Y + 14
00ad4b 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
00ad4c 01f8      	MOVW R30,R16
00ad4d 95f6      	LSR  R31
00ad4e 95e7      	ROR  R30
                +
00ad4f 0f0e     +ADD R16 , R30
00ad50 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00ad51 940e d176 	CALL SUBOPT_0x2AA
00ad53 940e d9e2 	CALL SUBOPT_0x3AD
00ad55 f009      	BREQ _0x206003F
00ad56 c069      	RJMP _0x206003D
                 _0x206003F:
00ad57 940e d9f2 	CALL SUBOPT_0x3AE
00ad59 f051      	BREQ _0x2060040
00ad5a 01d9      	MOVW R26,R18
00ad5b 91ec      	LD   R30,X
00ad5c 70ef      	ANDI R30,LOW(0xF)
00ad5d 2fae      	MOV  R26,R30
00ad5e 85ea      	LDD  R30,Y+10
00ad5f e0f0      	LDI  R31,0
00ad60 940e df01 	CALL __LSLW4
00ad62 2bea      	OR   R30,R26
00ad63 c001      	RJMP _0x2060041
                 _0x2060040:
00ad64 85ea      	LDD  R30,Y+10
                 _0x2060041:
00ad65 01d9      	MOVW R26,R18
00ad66 93ec      	ST   X,R30
                +
00ad67 5f0f     +SUBI R16 , LOW ( - 1 )
00ad68 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00ad69 89aa      	LDD  R26,Y+18
00ad6a 89bb      	LDD  R27,Y+18+1
00ad6b 9614      	ADIW R26,4
00ad6c e0e1      	LDI  R30,LOW(1)
00ad6d 93ec      	ST   X,R30
00ad6e 940e d176 	CALL SUBOPT_0x2AA
00ad70 940e d9e2 	CALL SUBOPT_0x3AD
00ad72 f009      	BREQ _0x2060043
00ad73 c04c      	RJMP _0x206003D
                 _0x2060043:
00ad74 940e d9f2 	CALL SUBOPT_0x3AE
00ad76 f049      	BREQ _0x2060044
00ad77 940e c265 	CALL SUBOPT_0x52
00ad79 e0e4      	LDI  R30,LOW(4)
00ad7a 940e def5 	CALL __LSRD12
00ad7c 27ff      	CLR  R31
00ad7d 2766      	CLR  R22
00ad7e 2777      	CLR  R23
00ad7f c00e      	RJMP _0x2060045
                 _0x2060044:
00ad80 01d9      	MOVW R26,R18
00ad81 91ec      	LD   R30,X
00ad82 7fe0      	ANDI R30,LOW(0xF0)
00ad83 2e1e      	MOV  R1,R30
00ad84 940e c265 	CALL SUBOPT_0x52
00ad86 e0e8      	LDI  R30,LOW(8)
00ad87 940e def5 	CALL __LSRD12
00ad89 27ff      	CLR  R31
00ad8a 2766      	CLR  R22
00ad8b 2777      	CLR  R23
00ad8c 70ef      	ANDI R30,LOW(0xF)
00ad8d 29e1      	OR   R30,R1
                 _0x2060045:
00ad8e 01d9      	MOVW R26,R18
00ad8f 93ec      	ST   X,R30
00ad90 c02f      	RJMP _0x206003D
                 _0x206003E:
00ad91 30e2      	CPI  R30,LOW(0x2)
00ad92 e0a0      	LDI  R26,HIGH(0x2)
00ad93 07fa      	CPC  R31,R26
00ad94 f499      	BRNE _0x2060047
00ad95 940e d176 	CALL SUBOPT_0x2AA
00ad97 940e ce14 	CALL SUBOPT_0x229
00ad99 940e d9c8 	CALL SUBOPT_0x3A9
00ad9b 940e d9fd 	CALL SUBOPT_0x3AF
00ad9d f511      	BRNE _0x206003D
00ad9e 85ae      	LDD  R26,Y+14
00ad9f 85bf      	LDD  R27,Y+14+1
00ada0 e0e2      	LDI  R30,LOW(2)
00ada1 940e da06 	CALL SUBOPT_0x3B0
00ada3 85aa      	LDD  R26,Y+10
00ada4 85bb      	LDD  R27,Y+10+1
00ada5 83a0      	STD  Z+0,R26
00ada6 83b1      	STD  Z+1,R27
00ada7 c018      	RJMP _0x206003D
                 _0x2060047:
00ada8 30e3      	CPI  R30,LOW(0x3)
00ada9 e0a0      	LDI  R26,HIGH(0x3)
00adaa 07fa      	CPC  R31,R26
00adab f499      	BRNE _0x206004B
00adac 940e d176 	CALL SUBOPT_0x2AA
00adae 940e ce14 	CALL SUBOPT_0x229
00adb0 940e d9d6 	CALL SUBOPT_0x3AB
00adb2 940e d9fd 	CALL SUBOPT_0x3AF
00adb4 f459      	BRNE _0x206003D
00adb5 85ae      	LDD  R26,Y+14
00adb6 85bf      	LDD  R27,Y+14+1
00adb7 e0e4      	LDI  R30,LOW(4)
00adb8 940e da06 	CALL SUBOPT_0x3B0
00adba 940e c265 	CALL SUBOPT_0x52
00adbc 940e cf72 	CALL SUBOPT_0x25C
00adbe c001      	RJMP _0x206003D
                 _0x206004B:
00adbf e052      	LDI  R21,LOW(2)
                 _0x206003D:
00adc0 89aa      	LDD  R26,Y+18
00adc1 89bb      	LDD  R27,Y+18+1
00adc2 9614      	ADIW R26,4
00adc3 e0e1      	LDI  R30,LOW(1)
00adc4 93ec      	ST   X,R30
                 _0x206003A:
00adc5 2fe5      	MOV  R30,R21
00adc6 940e e0d5 	CALL __LOADLOCR6
00adc8 9664      	ADIW R28,20
00adc9 9508      	RET
                 _remove_chain_G103:
00adca 940e e063 	CALL __PUTPARD2
00adcc 9724      	SBIW R28,4
00adcd 931a      	ST   -Y,R17
00adce 940e da0f 	CALL SUBOPT_0x3B1
00add0 940e d9a6 	CALL SUBOPT_0x3A4
00add2 f018      	BRLO _0x206004D
00add3 940e da14 	CALL SUBOPT_0x3B2
00add5 f010      	BRLO _0x206004C
                 _0x206004D:
00add6 e012      	LDI  R17,LOW(2)
00add7 c03e      	RJMP _0x206004F
                 _0x206004C:
00add8 e010      	LDI  R17,LOW(0)
                 _0x2060050:
00add9 940e da14 	CALL SUBOPT_0x3B2
00addb f5d0      	BRSH _0x2060052
00addc 940e ca30 	CALL SUBOPT_0x193
00adde 940e c2eb 	CALL SUBOPT_0x67
00ade0 deb6      	RCALL _get_fat
                +
00ade1 83e9     +STD Y + 1 , R30
00ade2 83fa     +STD Y + 1 + 1 , R31
00ade3 836b     +STD Y + 1 + 2 , R22
00ade4 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00ade5 940e da1d 	CALL SUBOPT_0x3B3
00ade7 940e e0b2 	CALL __CPD10
00ade9 f161      	BREQ _0x2060052
00adea 940e d0dd 	CALL SUBOPT_0x293
00adec 940e da22 	CALL SUBOPT_0x3B4
00adee f411      	BRNE _0x2060054
00adef e012      	LDI  R17,LOW(2)
00adf0 c025      	RJMP _0x2060052
                 _0x2060054:
00adf1 940e d0dd 	CALL SUBOPT_0x293
00adf3 940e c1b7 	CALL SUBOPT_0x3A
00adf5 f411      	BRNE _0x2060055
00adf6 e011      	LDI  R17,LOW(1)
00adf7 c01e      	RJMP _0x2060052
                 _0x2060055:
00adf8 940e ca30 	CALL SUBOPT_0x193
00adfa 940e c1eb 	CALL SUBOPT_0x3F
00adfc 940e c151 	CALL SUBOPT_0x2C
00adfe df26      	RCALL _put_fat
00adff 2f1e      	MOV  R17,R30
00ae00 3010      	CPI  R17,0
00ae01 f4a1      	BRNE _0x2060052
00ae02 85e9      	LDD  R30,Y+9
00ae03 85fa      	LDD  R31,Y+9+1
00ae04 940e da2a 	CALL SUBOPT_0x3B5
00ae06 f051      	BREQ _0x2060057
00ae07 85a9      	LDD  R26,Y+9
00ae08 85ba      	LDD  R27,Y+9+1
00ae09 961e      	ADIW R26,14
00ae0a 940e c416 	CALL SUBOPT_0x92
00ae0c 85a9      	LDD  R26,Y+9
00ae0d 85ba      	LDD  R27,Y+9+1
00ae0e 9615      	ADIW R26,5
00ae0f e0e1      	LDI  R30,LOW(1)
00ae10 93ec      	ST   X,R30
                 _0x2060057:
00ae11 940e da1d 	CALL SUBOPT_0x3B3
00ae13 940e da30 	CALL SUBOPT_0x3B6
00ae15 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
00ae16 2fe1      	MOV  R30,R17
00ae17 8118      	LDD  R17,Y+0
00ae18 c26d      	RJMP _0x20E0016
                 _create_chain_G103:
00ae19 940e e063 	CALL __PUTPARD2
00ae1b 9760      	SBIW R28,16
00ae1c 89ac      	LDD  R26,Y+20
00ae1d 89bd      	LDD  R27,Y+20+1
00ae1e 965e      	ADIW R26,30
00ae1f 940e e02e 	CALL __GETD1P
00ae21 940e c481 	CALL SUBOPT_0xA0
00ae23 940e c07a 	CALL SUBOPT_0xC
00ae25 940e e0b2 	CALL __CPD10
00ae27 f4b1      	BRNE _0x2060058
00ae28 89ac      	LDD  R26,Y+20
00ae29 89bd      	LDD  R27,Y+20+1
00ae2a 961a      	ADIW R26,10
00ae2b 940e e02e 	CALL __GETD1P
00ae2d 940e cd26 	CALL SUBOPT_0x20A
00ae2f 940e e0be 	CALL __CPD02
00ae31 f039      	BREQ _0x206005A
00ae32 940e c3c6 	CALL SUBOPT_0x87
00ae34 940e c4af 	CALL SUBOPT_0xA8
00ae36 940e e0c9 	CALL __CPD21
00ae38 f020      	BRLO _0x2060059
                 _0x206005A:
00ae39 940e d9ae 	CALL SUBOPT_0x3A5
00ae3b 940e c4aa 	CALL SUBOPT_0xA7
                 _0x2060059:
00ae3d c01d      	RJMP _0x206005C
                 _0x2060058:
00ae3e 940e da35 	CALL SUBOPT_0x3B7
00ae40 940e da3a 	CALL SUBOPT_0x3B8
00ae42 de54      	RCALL _get_fat
00ae43 940e c63c 	CALL SUBOPT_0xE9
00ae45 940e c075 	CALL SUBOPT_0xB
00ae47 940e d9a6 	CALL SUBOPT_0x3A4
00ae49 f418      	BRSH _0x206005D
00ae4a 940e d9ae 	CALL SUBOPT_0x3A5
00ae4c c083      	RJMP _0x20E0019
                 _0x206005D:
00ae4d 940e c3c6 	CALL SUBOPT_0x87
00ae4f 940e c075 	CALL SUBOPT_0xB
00ae51 940e e0c9 	CALL __CPD21
00ae53 f418      	BRSH _0x206005E
00ae54 940e c5cb 	CALL SUBOPT_0xD8
00ae56 c079      	RJMP _0x20E0019
                 _0x206005E:
00ae57 940e c07a 	CALL SUBOPT_0xC
00ae59 940e c4aa 	CALL SUBOPT_0xA7
                 _0x206005C:
00ae5b 940e c3d2 	CALL SUBOPT_0x89
00ae5d 940e d78a 	CALL SUBOPT_0x35E
                 _0x2060060:
00ae5f 940e c24c 	CALL SUBOPT_0x4F
00ae61 940e c514 	CALL SUBOPT_0xBB
00ae63 940e d78a 	CALL SUBOPT_0x35E
00ae65 940e c3c6 	CALL SUBOPT_0x87
00ae67 940e c5c6 	CALL SUBOPT_0xD7
00ae69 940e e0c9 	CALL __CPD21
00ae6b f050      	BRLO _0x2060062
00ae6c 940e da3f 	CALL SUBOPT_0x3B9
00ae6e 940e d78a 	CALL SUBOPT_0x35E
00ae70 940e da44 	CALL SUBOPT_0x3BA
00ae72 f418      	BRSH _0x2060063
00ae73 940e da4b 	CALL SUBOPT_0x3BB
00ae75 c05a      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
00ae76 940e da35 	CALL SUBOPT_0x3B7
00ae78 940e c265 	CALL SUBOPT_0x52
00ae7a de1c      	RCALL _get_fat
00ae7b 940e c646 	CALL SUBOPT_0xEB
00ae7d 940e e0b2 	CALL __CPD10
00ae7f f091      	BREQ _0x2060061
00ae80 940e c2a7 	CALL SUBOPT_0x5C
00ae82 f029      	BREQ _0x2060066
00ae83 940e c075 	CALL SUBOPT_0xB
00ae85 940e da22 	CALL SUBOPT_0x3B4
00ae87 f419      	BRNE _0x2060065
                 _0x2060066:
00ae88 940e c5cb 	CALL SUBOPT_0xD8
00ae8a c045      	RJMP _0x20E0019
                 _0x2060065:
00ae8b 940e da44 	CALL SUBOPT_0x3BA
00ae8d f419      	BRNE _0x2060068
00ae8e 940e da4b 	CALL SUBOPT_0x3BB
00ae90 c03f      	RJMP _0x20E0019
                 _0x2060068:
00ae91 cfcd      	RJMP _0x2060060
                 _0x2060061:
00ae92 940e da35 	CALL SUBOPT_0x3B7
00ae94 940e d702 	CALL SUBOPT_0x34A
                +
00ae96 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
00ae97 efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
00ae98 ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
00ae99 e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
00ae9a de8a      	RCALL _put_fat
00ae9b 30e0      	CPI  R30,0
00ae9c f019      	BREQ _0x2060069
00ae9d 940e c124 	CALL SUBOPT_0x25
00ae9f c030      	RJMP _0x20E0019
                 _0x2060069:
00aea0 940e c07a 	CALL SUBOPT_0xC
00aea2 940e e0b2 	CALL __CPD10
00aea4 f071      	BREQ _0x206006A
00aea5 940e da35 	CALL SUBOPT_0x3B7
00aea7 940e c5b5 	CALL SUBOPT_0xD3
00aea9 940e e05e 	CALL __PUTPARD1
00aeab 940e d9dd 	CALL SUBOPT_0x3AC
00aead de77      	RCALL _put_fat
00aeae 30e0      	CPI  R30,0
00aeaf f019      	BREQ _0x206006B
00aeb0 940e c124 	CALL SUBOPT_0x25
00aeb2 c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
00aeb3 940e c24c 	CALL SUBOPT_0x4F
                +
00aeb5 89ac     +LDD R26 , Y + 20
00aeb6 89bd     +LDD R27 , Y + 20 + 1
00aeb7 961a     +ADIW R26 , 10
00aeb8 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 20,10
00aeba 89ec      	LDD  R30,Y+20
00aebb 89fd      	LDD  R31,Y+20+1
00aebc 940e da2a 	CALL SUBOPT_0x3B5
00aebe f079      	BREQ _0x206006C
00aebf 89ac      	LDD  R26,Y+20
00aec0 89bd      	LDD  R27,Y+20+1
00aec1 961e      	ADIW R26,14
00aec2 940e e034 	CALL __GETD1P_INC
00aec4 9731      	SBIW R30,1
00aec5 4060      	SBCI R22,0
00aec6 4070      	SBCI R23,0
00aec7 940e e03e 	CALL __PUTDP1_DEC
00aec9 89ac      	LDD  R26,Y+20
00aeca 89bd      	LDD  R27,Y+20+1
00aecb 9615      	ADIW R26,5
00aecc e0e1      	LDI  R30,LOW(1)
00aecd 93ec      	ST   X,R30
                 _0x206006C:
00aece 940e c24c 	CALL SUBOPT_0x4F
                 _0x20E0019:
00aed0 9666      	ADIW R28,22
00aed1 9508      	RET
                 _clust2sect:
00aed2 940e e063 	CALL __PUTPARD2
00aed4 940e c3c6 	CALL SUBOPT_0x87
                +
00aed6 50e2     +SUBI R30 , LOW ( 2 )
00aed7 40f0     +SBCI R31 , HIGH ( 2 )
00aed8 4060     +SBCI R22 , BYTE3 ( 2 )
00aed9 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00aeda 940e c481 	CALL SUBOPT_0xA0
00aedc 81ec      	LDD  R30,Y+4
00aedd 81fd      	LDD  R31,Y+4+1
                +
00aede 8da6     +LDD R26 , Z + 30
00aedf 8db7     +LDD R27 , Z + 30 + 1
00aee0 a180     +LDD R24 , Z + 30 + 2
00aee1 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
00aee2 940e da3f 	CALL SUBOPT_0x3B9
00aee4 940e c52a 	CALL SUBOPT_0xBF
00aee6 940e c3e5 	CALL SUBOPT_0x8C
00aee8 940e e0c9 	CALL __CPD21
00aeea f018      	BRLO _0x206006D
00aeeb 940e da4b 	CALL SUBOPT_0x3BB
00aeed c38d      	RJMP _0x20E0012
                 _0x206006D:
00aeee 81ec      	LDD  R30,Y+4
00aeef 81fd      	LDD  R31,Y+4+1
00aef0 940e d0da 	CALL SUBOPT_0x292
00aef2 940e c3e5 	CALL SUBOPT_0x8C
00aef4 940e d0e2 	CALL SUBOPT_0x294
00aef6 937f      	PUSH R23
00aef7 936f      	PUSH R22
00aef8 93ff      	PUSH R31
00aef9 93ef      	PUSH R30
00aefa 81ac      	LDD  R26,Y+4
00aefb 81bd      	LDD  R27,Y+4+1
00aefc 969a      	ADIW R26,42
00aefd 940e e02e 	CALL __GETD1P
00aeff 91af      	POP  R26
00af00 91bf      	POP  R27
00af01 918f      	POP  R24
00af02 919f      	POP  R25
00af03 940e deb6 	CALL __ADDD12
00af05 c375      	RJMP _0x20E0012
                 _dir_seek_G103:
00af06 940e c651 	CALL SUBOPT_0xED
00af08 930a      	ST   -Y,R16
00af09 81ee      	LDD  R30,Y+6
00af0a 81ff      	LDD  R31,Y+6+1
                +
00af0b 85a8     +LDD R26 , Y + 8
00af0c 85b9     +LDD R27 , Y + 8 + 1
00af0d 9614     +ADIW R26 , 4
00af0e 93ed     +ST X + , R30
00af0f 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00af10 85a8      	LDD  R26,Y+8
00af11 85b9      	LDD  R27,Y+8+1
00af12 9616      	ADIW R26,6
00af13 940e e02e 	CALL __GETD1P
00af15 940e c656 	CALL SUBOPT_0xEE
00af17 940e da22 	CALL SUBOPT_0x3B4
00af19 f029      	BREQ _0x206006F
00af1a 940e da50 	CALL SUBOPT_0x3BC
00af1c 940e da55 	CALL SUBOPT_0x3BD
00af1e f010      	BRLO _0x206006E
                 _0x206006F:
00af1f e0e2      	LDI  R30,LOW(2)
00af20 c072      	RJMP _0x20E0017
                 _0x206006E:
00af21 940e cc67 	CALL SUBOPT_0x1F2
00af23 f429      	BRNE _0x2060072
00af24 940e da50 	CALL SUBOPT_0x3BC
00af26 81a0      	LD   R26,Z
00af27 30a3      	CPI  R26,LOW(0x3)
00af28 f009      	BREQ _0x2060073
                 _0x2060072:
00af29 c008      	RJMP _0x2060071
                 _0x2060073:
00af2a 940e da50 	CALL SUBOPT_0x3BC
00af2c 96b6      	ADIW R30,38
00af2d 01df      	MOVW R26,R30
00af2e 940e e02e 	CALL __GETD1P
00af30 940e c4de 	CALL SUBOPT_0xB1
                 _0x2060071:
00af32 940e cc67 	CALL SUBOPT_0x1F2
00af34 f491      	BRNE _0x2060074
00af35 940e da5e 	CALL SUBOPT_0x3BE
00af37 940e da50 	CALL SUBOPT_0x3BC
00af39 9638      	ADIW R30,8
00af3a 01df      	MOVW R26,R30
00af3b 940e c9cd 	CALL SUBOPT_0x181
00af3d f010      	BRLO _0x2060075
00af3e e0e2      	LDI  R30,LOW(2)
00af3f c053      	RJMP _0x20E0017
                 _0x2060075:
00af40 940e da50 	CALL SUBOPT_0x3BC
00af42 96b6      	ADIW R30,38
00af43 01df      	MOVW R26,R30
00af44 940e e02e 	CALL __GETD1P
00af46 c031      	RJMP _0x206022C
                 _0x2060074:
00af47 940e da50 	CALL SUBOPT_0x3BC
00af49 81e2      	LDD  R30,Z+2
00af4a e1a0      	LDI  R26,LOW(16)
00af4b 9fea      	MUL  R30,R26
00af4c 0180      	MOVW R16,R0
                 _0x2060077:
00af4d 81ae      	LDD  R26,Y+6
00af4e 81bf      	LDD  R27,Y+6+1
00af4f 17a0      	CP   R26,R16
00af50 07b1      	CPC  R27,R17
00af51 f0f8      	BRLO _0x2060079
00af52 940e da66 	CALL SUBOPT_0x3BF
00af54 940e c4af 	CALL SUBOPT_0xA8
00af56 dd40      	RCALL _get_fat
00af57 940e c656 	CALL SUBOPT_0xEE
00af59 940e c1b7 	CALL SUBOPT_0x3A
00af5b f411      	BRNE _0x206007A
00af5c e0e1      	LDI  R30,LOW(1)
00af5d c035      	RJMP _0x20E0017
                 _0x206007A:
00af5e 940e c4e8 	CALL SUBOPT_0xB3
00af60 940e d9a6 	CALL SUBOPT_0x3A4
00af62 f028      	BRLO _0x206007C
00af63 940e da50 	CALL SUBOPT_0x3BC
00af65 940e da55 	CALL SUBOPT_0x3BD
00af67 f010      	BRLO _0x206007B
                 _0x206007C:
00af68 e0e2      	LDI  R30,LOW(2)
00af69 c029      	RJMP _0x20E0017
                 _0x206007B:
00af6a 81ee      	LDD  R30,Y+6
00af6b 81ff      	LDD  R31,Y+6+1
00af6c 1be0      	SUB  R30,R16
00af6d 0bf1      	SBC  R31,R17
00af6e 83ee      	STD  Y+6,R30
00af6f 83ff      	STD  Y+6+1,R31
00af70 cfdc      	RJMP _0x2060077
                 _0x2060079:
00af71 940e da5e 	CALL SUBOPT_0x3BE
00af73 940e da66 	CALL SUBOPT_0x3BF
00af75 940e c4af 	CALL SUBOPT_0xA8
00af77 df5a      	RCALL _clust2sect
                 _0x206022C:
00af78 01df      	MOVW R26,R30
00af79 01cb      	MOVW R24,R22
00af7a 81ee      	LDD  R30,Y+6
00af7b 81ff      	LDD  R31,Y+6+1
00af7c 940e df13 	CALL __LSRW4
00af7e 940e da69 	CALL SUBOPT_0x3C0
                +
00af80 85a8     +LDD R26 , Y + 8
00af81 85b9     +LDD R27 , Y + 8 + 1
00af82 961e     +ADIW R26 , 14
00af83 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 8,14
00af85 940e da50 	CALL SUBOPT_0x3BC
00af87 96f2      	ADIW R30,50
00af88 01df      	MOVW R26,R30
00af89 81ee      	LDD  R30,Y+6
00af8a 81ff      	LDD  R31,Y+6+1
00af8b 940e da6e 	CALL SUBOPT_0x3C1
                +
00af8d 85a8     +LDD R26 , Y + 8
00af8e 85b9     +LDD R27 , Y + 8 + 1
00af8f 9652     +ADIW R26 , 18
00af90 93ed     +ST X + , R30
00af91 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
00af92 e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
00af93 8119      	LDD  R17,Y+1
00af94 8108      	LDD  R16,Y+0
                 _0x20E0018:
00af95 962a      	ADIW R28,10
00af96 9508      	RET
                 _dir_next_G103:
00af97 93aa      	ST   -Y,R26
00af98 9724      	SBIW R28,4
00af99 940e e0d0 	CALL __SAVELOCR4
00af9b 85a9      	LDD  R26,Y+9
00af9c 85ba      	LDD  R27,Y+9+1
00af9d 9614      	ADIW R26,4
00af9e 940e e02a 	CALL __GETW1P
00afa0 9631      	ADIW R30,1
00afa1 018f      	MOVW R16,R30
00afa2 2e00      	MOV  R0,R16
00afa3 2a01      	OR   R0,R17
00afa4 f031      	BREQ _0x206007F
00afa5 85a9      	LDD  R26,Y+9
00afa6 85ba      	LDD  R27,Y+9+1
00afa7 961e      	ADIW R26,14
00afa8 940e da76 	CALL SUBOPT_0x3C2
00afaa f411      	BRNE _0x206007E
                 _0x206007F:
00afab e0e4      	LDI  R30,LOW(4)
00afac c0d7      	RJMP _0x20E0015
                 _0x206007E:
00afad 01f8      	MOVW R30,R16
00afae 70ef      	ANDI R30,LOW(0xF)
00afaf f011      	BREQ PC+3
00afb0 940c b071 	JMP _0x2060081
00afb2 85a9      	LDD  R26,Y+9
00afb3 85ba      	LDD  R27,Y+9+1
00afb4 961e      	ADIW R26,14
00afb5 940e c416 	CALL SUBOPT_0x92
00afb7 85a9      	LDD  R26,Y+9
00afb8 85ba      	LDD  R27,Y+9+1
00afb9 961a      	ADIW R26,10
00afba 940e da76 	CALL SUBOPT_0x3C2
00afbc f451      	BRNE _0x2060082
00afbd 940e da7b 	CALL SUBOPT_0x3C3
00afbf 9638      	ADIW R30,8
00afc0 01df      	MOVW R26,R30
00afc1 940e cbb6 	CALL SUBOPT_0x1D1
00afc3 f010      	BRLO _0x2060083
00afc4 e0e4      	LDI  R30,LOW(4)
00afc5 c0be      	RJMP _0x20E0015
                 _0x2060083:
00afc6 c0aa      	RJMP _0x2060084
                 _0x2060082:
00afc7 01f8      	MOVW R30,R16
00afc8 940e df13 	CALL __LSRW4
00afca 010f      	MOVW R0,R30
00afcb 940e da7b 	CALL SUBOPT_0x3C3
00afcd 940e d0da 	CALL SUBOPT_0x292
00afcf 9731      	SBIW R30,1
00afd0 21e0      	AND  R30,R0
00afd1 21f1      	AND  R31,R1
00afd2 9730      	SBIW R30,0
00afd3 f011      	BREQ PC+3
00afd4 940c b071 	JMP _0x2060085
00afd6 940e da80 	CALL SUBOPT_0x3C4
00afd8 940e da83 	CALL SUBOPT_0x3C5
00afda dcbc      	RCALL _get_fat
00afdb 940e cd26 	CALL SUBOPT_0x20A
00afdd 940e d9a6 	CALL SUBOPT_0x3A4
00afdf f410      	BRSH _0x2060086
00afe0 e0e2      	LDI  R30,LOW(2)
00afe1 c0a2      	RJMP _0x20E0015
                 _0x2060086:
00afe2 940e c4af 	CALL SUBOPT_0xA8
00afe4 940e c1b7 	CALL SUBOPT_0x3A
00afe6 f411      	BRNE _0x2060087
00afe7 e0e1      	LDI  R30,LOW(1)
00afe8 c09b      	RJMP _0x20E0015
                 _0x2060087:
00afe9 940e da7b 	CALL SUBOPT_0x3C3
00afeb 940e da8a 	CALL SUBOPT_0x3C6
00afed 940e c4af 	CALL SUBOPT_0xA8
00afef 940e e0c9 	CALL __CPD21
00aff1 f410      	BRSH PC+3
00aff2 940c b060 	JMP _0x2060088
00aff4 85e8      	LDD  R30,Y+8
00aff5 30e0      	CPI  R30,0
00aff6 f411      	BRNE _0x2060089
00aff7 e0e4      	LDI  R30,LOW(4)
00aff8 c08b      	RJMP _0x20E0015
                 _0x2060089:
00aff9 940e da80 	CALL SUBOPT_0x3C4
00affb 940e da83 	CALL SUBOPT_0x3C5
00affd de1b      	RCALL _create_chain_G103
00affe 940e c4c9 	CALL SUBOPT_0xAD
00b000 940e e0b2 	CALL __CPD10
00b002 f411      	BRNE _0x206008A
00b003 e0e7      	LDI  R30,LOW(7)
00b004 c07f      	RJMP _0x20E0015
                 _0x206008A:
00b005 940e c4af 	CALL SUBOPT_0xA8
00b007 940e da22 	CALL SUBOPT_0x3B4
00b009 f411      	BRNE _0x206008B
00b00a e0e2      	LDI  R30,LOW(2)
00b00b c078      	RJMP _0x20E0015
                 _0x206008B:
00b00c 940e c4af 	CALL SUBOPT_0xA8
00b00e 940e c1b7 	CALL SUBOPT_0x3A
00b010 f411      	BRNE _0x206008C
00b011 e0e1      	LDI  R30,LOW(1)
00b012 c071      	RJMP _0x20E0015
                 _0x206008C:
00b013 940e da80 	CALL SUBOPT_0x3C4
00b015 940e d987 	CALL SUBOPT_0x3A0
00b017 30e0      	CPI  R30,0
00b018 f011      	BREQ _0x206008D
00b019 e0e1      	LDI  R30,LOW(1)
00b01a c069      	RJMP _0x20E0015
                 _0x206008D:
00b01b 940e da7b 	CALL SUBOPT_0x3C3
00b01d 940e d98b 	CALL SUBOPT_0x3A1
00b01f 940e da7b 	CALL SUBOPT_0x3C3
00b021 01df      	MOVW R26,R30
00b022 96be      	ADIW R30,46
00b023 93ff      	PUSH R31
00b024 93ef      	PUSH R30
00b025 01fd      	MOVW R30,R26
00b026 93fa      	ST   -Y,R31
00b027 93ea      	ST   -Y,R30
00b028 940e c297 	CALL SUBOPT_0x59
00b02a dea7      	RCALL _clust2sect
00b02b 91af      	POP  R26
00b02c 91bf      	POP  R27
00b02d 940e e039 	CALL __PUTDP1
00b02f e030      	LDI  R19,LOW(0)
                 _0x206008F:
00b030 940e da7b 	CALL SUBOPT_0x3C3
00b032 81e2      	LDD  R30,Z+2
00b033 173e      	CP   R19,R30
00b034 f4c0      	BRSH _0x2060090
00b035 940e da7b 	CALL SUBOPT_0x3C3
00b037 9634      	ADIW R30,4
00b038 e0a1      	LDI  R26,LOW(1)
00b039 83a0      	STD  Z+0,R26
00b03a 940e da80 	CALL SUBOPT_0x3C4
00b03c 940e d987 	CALL SUBOPT_0x3A0
00b03e 30e0      	CPI  R30,0
00b03f f011      	BREQ _0x2060091
00b040 e0e1      	LDI  R30,LOW(1)
00b041 c042      	RJMP _0x20E0015
                 _0x2060091:
00b042 940e da7b 	CALL SUBOPT_0x3C3
00b044 96be      	ADIW R30,46
00b045 01df      	MOVW R26,R30
00b046 940e c416 	CALL SUBOPT_0x92
00b048 9731      	SBIW R30,1
00b049 4060      	SBCI R22,0
00b04a 4070      	SBCI R23,0
00b04b 5f3f      	SUBI R19,-1
00b04c cfe3      	RJMP _0x206008F
                 _0x2060090:
00b04d 940e da7b 	CALL SUBOPT_0x3C3
00b04f 96be      	ADIW R30,46
00b050 93ff      	PUSH R31
00b051 93ef      	PUSH R30
00b052 01df      	MOVW R26,R30
00b053 940e e02e 	CALL __GETD1P
00b055 01df      	MOVW R26,R30
00b056 01cb      	MOVW R24,R22
00b057 2fe3      	MOV  R30,R19
00b058 940e d94f 	CALL SUBOPT_0x399
00b05a 940e c52a 	CALL SUBOPT_0xBF
00b05c 91af      	POP  R26
00b05d 91bf      	POP  R27
00b05e 940e e039 	CALL __PUTDP1
                 _0x2060088:
00b060 940e c3d2 	CALL SUBOPT_0x89
                +
00b062 85a9     +LDD R26 , Y + 9
00b063 85ba     +LDD R27 , Y + 9 + 1
00b064 961a     +ADIW R26 , 10
00b065 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00b067 940e da80 	CALL SUBOPT_0x3C4
00b069 940e c297 	CALL SUBOPT_0x59
00b06b de66      	RCALL _clust2sect
                +
00b06c 85a9     +LDD R26 , Y + 9
00b06d 85ba     +LDD R27 , Y + 9 + 1
00b06e 961e     +ADIW R26 , 14
00b06f 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
00b071 01f8      	MOVW R30,R16
                +
00b072 85a9     +LDD R26 , Y + 9
00b073 85ba     +LDD R27 , Y + 9 + 1
00b074 9614     +ADIW R26 , 4
00b075 93ed     +ST X + , R30
00b076 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00b077 940e da7b 	CALL SUBOPT_0x3C3
00b079 96f2      	ADIW R30,50
00b07a 01df      	MOVW R26,R30
00b07b 01f8      	MOVW R30,R16
00b07c 940e da6e 	CALL SUBOPT_0x3C1
                +
00b07e 85a9     +LDD R26 , Y + 9
00b07f 85ba     +LDD R27 , Y + 9 + 1
00b080 9652     +ADIW R26 , 18
00b081 93ed     +ST X + , R30
00b082 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
00b083 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
00b084 940e e0d7 	CALL __LOADLOCR4
                 _0x20E0016:
00b086 962b      	ADIW R28,11
00b087 9508      	RET
                 _dir_find_G103:
00b088 940e c394 	CALL SUBOPT_0x7F
00b08a 940e d19d 	CALL SUBOPT_0x2AF
00b08c 940e c673 	CALL SUBOPT_0xF4
00b08e de77      	RCALL _dir_seek_G103
00b08f 2f1e      	MOV  R17,R30
00b090 3010      	CPI  R17,0
00b091 f021      	BREQ _0x2060092
00b092 2fe1      	MOV  R30,R17
00b093 940e e0d7 	CALL __LOADLOCR4
00b095 c1e5      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
00b096 940e da8f 	CALL SUBOPT_0x3C7
00b098 940e da92 	CALL SUBOPT_0x3C8
00b09a f4e9      	BRNE _0x2060095
00b09b 81ac      	LDD  R26,Y+4
00b09c 81bd      	LDD  R27,Y+4+1
00b09d 9652      	ADIW R26,18
00b09e 912d      	LD   R18,X+
00b09f 913c      	LD   R19,X
00b0a0 01d9      	MOVW R26,R18
00b0a1 910c      	LD   R16,X
00b0a2 3000      	CPI  R16,0
00b0a3 f411      	BRNE _0x2060097
00b0a4 e014      	LDI  R17,LOW(4)
00b0a5 c012      	RJMP _0x2060095
                 _0x2060097:
00b0a6 01f9      	MOVW R30,R18
00b0a7 85e3      	LDD  R30,Z+11
00b0a8 70e8      	ANDI R30,LOW(0x8)
00b0a9 f429      	BRNE _0x2060099
00b0aa 940e da9d 	CALL SUBOPT_0x3C9
00b0ac dacb      	RCALL _mem_cmp_G103
00b0ad 9730      	SBIW R30,0
00b0ae f009      	BREQ _0x206009A
                 _0x2060099:
00b0af c001      	RJMP _0x2060098
                 _0x206009A:
00b0b0 c007      	RJMP _0x2060095
                 _0x2060098:
00b0b1 940e d19d 	CALL SUBOPT_0x2AF
00b0b3 e0a0      	LDI  R26,LOW(0)
00b0b4 dee2      	RCALL _dir_next_G103
00b0b5 2f1e      	MOV  R17,R30
00b0b6 3010      	CPI  R17,0
00b0b7 f2f1      	BREQ _0x2060094
                 _0x2060095:
00b0b8 2fe1      	MOV  R30,R17
00b0b9 940e e0d7 	CALL __LOADLOCR4
00b0bb c1bf      	RJMP _0x20E0012
                 _dir_register_G103:
00b0bc 940e c394 	CALL SUBOPT_0x7F
00b0be 940e d19d 	CALL SUBOPT_0x2AF
00b0c0 940e c673 	CALL SUBOPT_0xF4
00b0c2 de43      	RCALL _dir_seek_G103
00b0c3 2f1e      	MOV  R17,R30
00b0c4 3010      	CPI  R17,0
00b0c5 f4b1      	BRNE _0x20600A7
                 _0x20600A9:
00b0c6 940e da8f 	CALL SUBOPT_0x3C7
00b0c8 940e da92 	CALL SUBOPT_0x3C8
00b0ca f489      	BRNE _0x20600AA
00b0cb 81ec      	LDD  R30,Y+4
00b0cc 81fd      	LDD  R31,Y+4+1
00b0cd 89a2      	LDD  R26,Z+18
00b0ce 89b3      	LDD  R27,Z+19
00b0cf 910c      	LD   R16,X
00b0d0 3e05      	CPI  R16,229
00b0d1 f011      	BREQ _0x20600AD
00b0d2 3000      	CPI  R16,0
00b0d3 f409      	BRNE _0x20600AC
                 _0x20600AD:
00b0d4 c007      	RJMP _0x20600AA
                 _0x20600AC:
00b0d5 940e d19d 	CALL SUBOPT_0x2AF
00b0d7 e0a1      	LDI  R26,LOW(1)
00b0d8 debe      	RCALL _dir_next_G103
00b0d9 2f1e      	MOV  R17,R30
00b0da 3010      	CPI  R17,0
00b0db f351      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
00b0dc 3010      	CPI  R17,0
00b0dd f539      	BRNE _0x20600AF
00b0de 940e da8f 	CALL SUBOPT_0x3C7
00b0e0 940e da92 	CALL SUBOPT_0x3C8
00b0e2 f511      	BRNE _0x20600B0
00b0e3 81ac      	LDD  R26,Y+4
00b0e4 81bd      	LDD  R27,Y+4+1
00b0e5 9652      	ADIW R26,18
00b0e6 912d      	LD   R18,X+
00b0e7 913c      	LD   R19,X
00b0e8 933a      	ST   -Y,R19
00b0e9 932a      	ST   -Y,R18
00b0ea e0e0      	LDI  R30,LOW(0)
00b0eb e0f0      	LDI  R31,HIGH(0)
00b0ec 93fa      	ST   -Y,R31
00b0ed 93ea      	ST   -Y,R30
00b0ee e2a0      	LDI  R26,LOW(32)
00b0ef e0b0      	LDI  R27,0
00b0f0 da6f      	RCALL _mem_set_G103
00b0f1 940e da9d 	CALL SUBOPT_0x3C9
00b0f3 da50      	RCALL _mem_cpy_G103
00b0f4 81ac      	LDD  R26,Y+4
00b0f5 81bd      	LDD  R27,Y+4+1
00b0f6 9654      	ADIW R26,20
00b0f7 940e e02a 	CALL __GETW1P
00b0f9 85e3      	LDD  R30,Z+11
00b0fa 71e8      	ANDI R30,LOW(0x18)
                +
00b0fb 01d9     +MOVW R26 , R18
00b0fc 961c     +ADIW R26 , 12
00b0fd 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
00b0fe 81ac      	LDD  R26,Y+4
00b0ff 81bd      	LDD  R27,Y+4+1
00b100 940e e02a 	CALL __GETW1P
00b102 9634      	ADIW R30,4
00b103 e0a1      	LDI  R26,LOW(1)
00b104 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00b105 2fe1      	MOV  R30,R17
00b106 940e e0d7 	CALL __LOADLOCR4
00b108 c172      	RJMP _0x20E0012
                 _create_name_G103:
00b109 93ba      	ST   -Y,R27
00b10a 93aa      	ST   -Y,R26
00b10b 9725      	SBIW R28,5
00b10c 940e e0ce 	CALL __SAVELOCR6
00b10e 85ad      	LDD  R26,Y+13
00b10f 85be      	LDD  R27,Y+13+1
00b110 9654      	ADIW R26,20
00b111 914d      	LD   R20,X+
00b112 915c      	LD   R21,X
00b113 935a      	ST   -Y,R21
00b114 934a      	ST   -Y,R20
00b115 e2e0      	LDI  R30,LOW(32)
00b116 e0f0      	LDI  R31,HIGH(32)
00b117 93fa      	ST   -Y,R31
00b118 93ea      	ST   -Y,R30
00b119 940e c222 	CALL SUBOPT_0x48
00b11b da44      	RCALL _mem_set_G103
00b11c e0e0      	LDI  R30,LOW(0)
00b11d 87e8      	STD  Y+8,R30
00b11e 87e9      	STD  Y+8+1,R30
00b11f 2f1e      	MOV  R17,R30
00b120 2f2e      	MOV  R18,R30
00b121 e0e8      	LDI  R30,LOW(8)
00b122 87ea      	STD  Y+10,R30
00b123 85ab      	LDD  R26,Y+11
00b124 85bc      	LDD  R27,Y+11+1
00b125 940e d94a 	CALL SUBOPT_0x398
00b127 85e8      	LDD  R30,Y+8
00b128 85f9      	LDD  R31,Y+8+1
00b129 940e ce24 	CALL SUBOPT_0x22C
00b12b 91ac      	LD   R26,X
00b12c 32ae      	CPI  R26,LOW(0x2E)
00b12d f549      	BRNE _0x20600B3
                 _0x20600B5:
00b12e 940e c399 	CALL SUBOPT_0x80
00b130 940e ce24 	CALL SUBOPT_0x22C
00b132 910c      	LD   R16,X
00b133 320e      	CPI  R16,46
00b134 f421      	BRNE _0x20600B8
00b135 85a8      	LDD  R26,Y+8
00b136 85b9      	LDD  R27,Y+8+1
00b137 9713      	SBIW R26,3
00b138 f00c      	BRLT _0x20600B7
                 _0x20600B8:
00b139 c003      	RJMP _0x20600B6
                 _0x20600B7:
00b13a 940e daa7 	CALL SUBOPT_0x3CA
00b13c cff1      	RJMP _0x20600B5
                 _0x20600B6:
00b13d 320f      	CPI  R16,47
00b13e f021      	BREQ _0x20600BB
00b13f 350c      	CPI  R16,92
00b140 f011      	BREQ _0x20600BB
00b141 3201      	CPI  R16,33
00b142 f408      	BRSH _0x20600BC
                 _0x20600BB:
00b143 c002      	RJMP _0x20600BA
                 _0x20600BC:
00b144 e0e6      	LDI  R30,LOW(6)
00b145 c07d      	RJMP _0x20E0013
                 _0x20600BA:
00b146 85e8      	LDD  R30,Y+8
00b147 85f9      	LDD  R31,Y+8+1
00b148 940e ca8c 	CALL SUBOPT_0x1A4
00b14a 85ab      	LDD  R26,Y+11
00b14b 85bc      	LDD  R27,Y+11+1
00b14c 93ed      	ST   X+,R30
00b14d 93fc      	ST   X,R31
00b14e 3201      	CPI  R16,33
00b14f f410      	BRSH _0x20600BD
00b150 e2e4      	LDI  R30,LOW(36)
00b151 c001      	RJMP _0x20600BE
                 _0x20600BD:
00b152 e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00b153 01da     +MOVW R26 , R20
00b154 961b     +ADIW R26 , 11
00b155 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00b156 c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
00b157 940e c399 	CALL SUBOPT_0x80
00b159 940e ce24 	CALL SUBOPT_0x22C
00b15b 910c      	LD   R16,X
00b15c 3201      	CPI  R16,33
00b15d f020      	BRLO _0x20600C4
00b15e 320f      	CPI  R16,47
00b15f f011      	BREQ _0x20600C4
00b160 350c      	CPI  R16,92
00b161 f409      	BRNE _0x20600C3
                 _0x20600C4:
00b162 c035      	RJMP _0x20600C2
                 _0x20600C3:
00b163 320e      	CPI  R16,46
00b164 f019      	BREQ _0x20600C7
00b165 85ea      	LDD  R30,Y+10
00b166 172e      	CP   R18,R30
00b167 f068      	BRLO _0x20600C6
                 _0x20600C7:
00b168 85aa      	LDD  R26,Y+10
00b169 30a8      	CPI  R26,LOW(0x8)
00b16a f411      	BRNE _0x20600CA
00b16b 320e      	CPI  R16,46
00b16c f011      	BREQ _0x20600C9
                 _0x20600CA:
00b16d e0e6      	LDI  R30,LOW(6)
00b16e c054      	RJMP _0x20E0013
                 _0x20600C9:
00b16f e028      	LDI  R18,LOW(8)
00b170 e0eb      	LDI  R30,LOW(11)
00b171 87ea      	STD  Y+10,R30
00b172 0f11      	LSL  R17
00b173 0f11      	LSL  R17
00b174 c022      	RJMP _0x20600C0
                 _0x20600C6:
00b175 3800      	CPI  R16,128
00b176 f018      	BRLO _0x20600CC
00b177 6013      	ORI  R17,LOW(3)
00b178 e0e6      	LDI  R30,LOW(6)
00b179 c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
00b17a efea     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
00b17b e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
00b17c e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
00b17d e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
00b17e 940e e05e 	CALL __PUTPARD1
00b180 2fa0      	MOV  R26,R16
00b181 27bb      	CLR  R27
00b182 da1b      	RCALL _chk_chrf_G103
00b183 9730      	SBIW R30,0
00b184 f011      	BREQ _0x20600D2
00b185 e0e6      	LDI  R30,LOW(6)
00b186 c03c      	RJMP _0x20E0013
                 _0x20600D2:
00b187 3401      	CPI  R16,65
00b188 f010      	BRLO _0x20600D4
00b189 350b      	CPI  R16,91
00b18a f008      	BRLO _0x20600D5
                 _0x20600D4:
00b18b c002      	RJMP _0x20600D3
                 _0x20600D5:
00b18c 6012      	ORI  R17,LOW(2)
00b18d c007      	RJMP _0x20600D6
                 _0x20600D3:
00b18e 3601      	CPI  R16,97
00b18f f010      	BRLO _0x20600D8
00b190 370b      	CPI  R16,123
00b191 f008      	BRLO _0x20600D9
                 _0x20600D8:
00b192 c002      	RJMP _0x20600D7
                 _0x20600D9:
00b193 6011      	ORI  R17,LOW(1)
00b194 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
00b195 940e daa7 	CALL SUBOPT_0x3CA
                 _0x20600C0:
00b197 cfbf      	RJMP _0x20600C1
                 _0x20600C2:
00b198 85e8      	LDD  R30,Y+8
00b199 85f9      	LDD  R31,Y+8+1
00b19a 940e ca8c 	CALL SUBOPT_0x1A4
00b19c 85ab      	LDD  R26,Y+11
00b19d 85bc      	LDD  R27,Y+11+1
00b19e 93ed      	ST   X+,R30
00b19f 93fc      	ST   X,R31
00b1a0 3201      	CPI  R16,33
00b1a1 f410      	BRSH _0x20600DA
00b1a2 e0e4      	LDI  R30,LOW(4)
00b1a3 c001      	RJMP _0x20600DB
                 _0x20600DA:
00b1a4 e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
00b1a5 2f0e      	MOV  R16,R30
00b1a6 3020      	CPI  R18,0
00b1a7 f411      	BRNE _0x20600DD
00b1a8 e0e6      	LDI  R30,LOW(6)
00b1a9 c019      	RJMP _0x20E0013
                 _0x20600DD:
00b1aa 01da      	MOVW R26,R20
00b1ab 91ac      	LD   R26,X
00b1ac 3ea5      	CPI  R26,LOW(0xE5)
00b1ad f419      	BRNE _0x20600DE
00b1ae 01da      	MOVW R26,R20
00b1af e0e5      	LDI  R30,LOW(5)
00b1b0 93ec      	ST   X,R30
                 _0x20600DE:
00b1b1 85aa      	LDD  R26,Y+10
00b1b2 30a8      	CPI  R26,LOW(0x8)
00b1b3 f411      	BRNE _0x20600DF
00b1b4 0f11      	LSL  R17
00b1b5 0f11      	LSL  R17
                 _0x20600DF:
00b1b6 2fe1      	MOV  R30,R17
00b1b7 70e3      	ANDI R30,LOW(0x3)
00b1b8 30e1      	CPI  R30,LOW(0x1)
00b1b9 f409      	BRNE _0x20600E0
00b1ba 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
00b1bb 2fe1      	MOV  R30,R17
00b1bc 70ec      	ANDI R30,LOW(0xC)
00b1bd 30e4      	CPI  R30,LOW(0x4)
00b1be f409      	BRNE _0x20600E1
00b1bf 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
00b1c0 01fa      	MOVW R30,R20
                +
00b1c1 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
00b1c2 e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
00b1c3 940e e0d5 	CALL __LOADLOCR6
00b1c5 962f      	ADIW R28,15
00b1c6 9508      	RET
                 _follow_path_G103:
00b1c7 940e c394 	CALL SUBOPT_0x7F
                 _0x20600F7:
00b1c9 e0e1      	LDI  R30,LOW(1)
00b1ca 30e0      	CPI  R30,0
00b1cb f029      	BREQ _0x20600FA
00b1cc 81ac      	LDD  R26,Y+4
00b1cd 81bd      	LDD  R27,Y+4+1
00b1ce 91ac      	LD   R26,X
00b1cf 32a0      	CPI  R26,LOW(0x20)
00b1d0 f009      	BREQ _0x20600FB
                 _0x20600FA:
00b1d1 c006      	RJMP _0x20600F9
                 _0x20600FB:
00b1d2 81ec      	LDD  R30,Y+4
00b1d3 81fd      	LDD  R31,Y+4+1
00b1d4 9631      	ADIW R30,1
00b1d5 83ec      	STD  Y+4,R30
00b1d6 83fd      	STD  Y+4+1,R31
00b1d7 cff1      	RJMP _0x20600F7
                 _0x20600F9:
00b1d8 81ac      	LDD  R26,Y+4
00b1d9 81bd      	LDD  R27,Y+4+1
00b1da 91ac      	LD   R26,X
00b1db 32af      	CPI  R26,LOW(0x2F)
00b1dc f029      	BREQ _0x20600FD
00b1dd 81ac      	LDD  R26,Y+4
00b1de 81bd      	LDD  R27,Y+4+1
00b1df 91ac      	LD   R26,X
00b1e0 35ac      	CPI  R26,LOW(0x5C)
00b1e1 f459      	BRNE _0x20600FC
                 _0x20600FD:
00b1e2 81ec      	LDD  R30,Y+4
00b1e3 81fd      	LDD  R31,Y+4+1
00b1e4 9631      	ADIW R30,1
00b1e5 83ec      	STD  Y+4,R30
00b1e6 83fd      	STD  Y+4+1,R31
00b1e7 81ae      	LDD  R26,Y+6
00b1e8 81bf      	LDD  R27,Y+6+1
00b1e9 9616      	ADIW R26,6
00b1ea 940e c3ef 	CALL SUBOPT_0x8E
00b1ec c00a      	RJMP _0x20600FF
                 _0x20600FC:
00b1ed 81ae      	LDD  R26,Y+6
00b1ee 81bf      	LDD  R27,Y+6+1
00b1ef 940e e02a 	CALL __GETW1P
00b1f1 9676      	ADIW R30,22
00b1f2 01df      	MOVW R26,R30
00b1f3 940e e02e 	CALL __GETD1P
00b1f5 940e dab2 	CALL SUBOPT_0x3CC
                 _0x20600FF:
00b1f7 81ac      	LDD  R26,Y+4
00b1f8 81bd      	LDD  R27,Y+4+1
00b1f9 91ac      	LD   R26,X
00b1fa 27bb      	CLR  R27
00b1fb 9790      	SBIW R26,32
00b1fc f460      	BRSH _0x2060100
00b1fd 940e c8ce 	CALL SUBOPT_0x15A
00b1ff 940e c673 	CALL SUBOPT_0xF4
00b201 dd04      	RCALL _dir_seek_G103
00b202 2f1e      	MOV  R17,R30
00b203 81ae      	LDD  R26,Y+6
00b204 81bf      	LDD  R27,Y+6+1
00b205 9652      	ADIW R26,18
00b206 940e c720 	CALL SUBOPT_0x112
00b208 c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
00b209 940e c8ce 	CALL SUBOPT_0x15A
00b20b 01de      	MOVW R26,R28
00b20c 9616      	ADIW R26,6
00b20d defb      	RCALL _create_name_G103
00b20e 2f1e      	MOV  R17,R30
00b20f 3010      	CPI  R17,0
00b210 f5a9      	BRNE _0x2060104
00b211 81ae      	LDD  R26,Y+6
00b212 81bf      	LDD  R27,Y+6+1
00b213 de74      	RCALL _dir_find_G103
00b214 2f1e      	MOV  R17,R30
00b215 81ae      	LDD  R26,Y+6
00b216 81bf      	LDD  R27,Y+6+1
00b217 9654      	ADIW R26,20
00b218 940e e02a 	CALL __GETW1P
00b21a 85e3      	LDD  R30,Z+11
00b21b 70e4      	ANDI R30,LOW(0x4)
00b21c 2f0e      	MOV  R16,R30
00b21d 3010      	CPI  R17,0
00b21e f039      	BREQ _0x2060106
00b21f 3014      	CPI  R17,4
00b220 f411      	BRNE _0x2060108
00b221 3000      	CPI  R16,0
00b222 f009      	BREQ _0x2060109
                 _0x2060108:
00b223 c001      	RJMP _0x2060107
                 _0x2060109:
00b224 e015      	LDI  R17,LOW(5)
                 _0x2060107:
00b225 c020      	RJMP _0x2060104
                 _0x2060106:
00b226 3000      	CPI  R16,0
00b227 f4f1      	BRNE _0x2060104
00b228 81ae      	LDD  R26,Y+6
00b229 81bf      	LDD  R27,Y+6+1
00b22a 9652      	ADIW R26,18
00b22b 912d      	LD   R18,X+
00b22c 913c      	LD   R19,X
00b22d 01f9      	MOVW R30,R18
00b22e 85e3      	LDD  R30,Z+11
00b22f 71e0      	ANDI R30,LOW(0x10)
00b230 f411      	BRNE _0x206010B
00b231 e015      	LDI  R17,LOW(5)
00b232 c013      	RJMP _0x2060104
                 _0x206010B:
00b233 940e dab8 	CALL SUBOPT_0x3CD
00b235 940e df30 	CALL __LSLD16
00b237 937f      	PUSH R23
00b238 936f      	PUSH R22
00b239 93ff      	PUSH R31
00b23a 93ef      	PUSH R30
00b23b 940e dabc 	CALL SUBOPT_0x3CE
00b23d 91af      	POP  R26
00b23e 91bf      	POP  R27
00b23f 918f      	POP  R24
00b240 919f      	POP  R25
00b241 940e dac1 	CALL SUBOPT_0x3CF
00b243 940e dab2 	CALL SUBOPT_0x3CC
00b245 cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00b246 2fe1      	MOV  R30,R17
00b247 940e e0d7 	CALL __LOADLOCR4
00b249 9628      	ADIW R28,8
00b24a 9508      	RET
                 _check_fs_G103:
00b24b 940e e063 	CALL __PUTPARD2
00b24d 81ec      	LDD  R30,Y+4
00b24e 81fd      	LDD  R31,Y+4+1
00b24f 81a1      	LDD  R26,Z+1
00b250 93aa      	ST   -Y,R26
00b251 81ed      	LDD  R30,Y+5
00b252 81fe      	LDD  R31,Y+5+1
00b253 96f2      	ADIW R30,50
00b254 93fa      	ST   -Y,R31
00b255 93ea      	ST   -Y,R30
                +
00b256 81eb     +LDD R30 , Y + 3
00b257 81fc     +LDD R31 , Y + 3 + 1
00b258 816d     +LDD R22 , Y + 3 + 2
00b259 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00b25a 940e dac6 	CALL SUBOPT_0x3D0
00b25c f011      	BREQ _0x206010C
00b25d e0e3      	LDI  R30,LOW(3)
00b25e c01c      	RJMP _0x20E0012
                 _0x206010C:
00b25f 81ec      	LDD  R30,Y+4
00b260 81fd      	LDD  R31,Y+4+1
00b261 940e dacd 	CALL SUBOPT_0x3D1
00b263 f011      	BREQ _0x206010D
00b264 e0e2      	LDI  R30,LOW(2)
00b265 c015      	RJMP _0x20E0012
                 _0x206010D:
00b266 81ac      	LDD  R26,Y+4
00b267 81bd      	LDD  R27,Y+4+1
00b268 59a8      	SUBI R26,LOW(-104)
00b269 4fbf      	SBCI R27,HIGH(-104)
00b26a 940e dad7 	CALL SUBOPT_0x3D2
00b26c f411      	BRNE _0x206010E
00b26d e0e0      	LDI  R30,LOW(0)
00b26e c00c      	RJMP _0x20E0012
                 _0x206010E:
00b26f 81ec      	LDD  R30,Y+4
00b270 81fd      	LDD  R31,Y+4+1
00b271 96f2      	ADIW R30,50
00b272 5aee      	SUBI R30,LOW(-82)
00b273 4fff      	SBCI R31,HIGH(-82)
00b274 01df      	MOVW R26,R30
00b275 940e dad7 	CALL SUBOPT_0x3D2
00b277 f411      	BRNE _0x206010F
00b278 e0e0      	LDI  R30,LOW(0)
00b279 c001      	RJMP _0x20E0012
                 _0x206010F:
00b27a e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
00b27b 9626      	ADIW R28,6
00b27c 9508      	RET
                 _chk_mounted:
00b27d 93aa      	ST   -Y,R26
00b27e 9764      	SBIW R28,20
00b27f 940e e0ce 	CALL __SAVELOCR6
00b281 8dad      	LDD  R26,Y+29
00b282 8dbe      	LDD  R27,Y+29+1
00b283 940e e02a 	CALL __GETW1P
00b285 87e8      	STD  Y+8,R30
00b286 87f9      	STD  Y+8+1,R31
00b287 85a8      	LDD  R26,Y+8
00b288 85b9      	LDD  R27,Y+8+1
00b289 91ec      	LD   R30,X
00b28a 53e0      	SUBI R30,LOW(48)
00b28b 2f0e      	MOV  R16,R30
00b28c 300a      	CPI  R16,10
00b28d f420      	BRSH _0x2060111
00b28e 9611      	ADIW R26,1
00b28f 91ac      	LD   R26,X
00b290 33aa      	CPI  R26,LOW(0x3A)
00b291 f009      	BREQ _0x2060112
                 _0x2060111:
00b292 c00a      	RJMP _0x2060110
                 _0x2060112:
00b293 85e8      	LDD  R30,Y+8
00b294 85f9      	LDD  R31,Y+8+1
00b295 9632      	ADIW R30,2
00b296 940e ca28 	CALL SUBOPT_0x191
00b298 8dad      	LDD  R26,Y+29
00b299 8dbe      	LDD  R27,Y+29+1
00b29a 93ed      	ST   X+,R30
00b29b 93fc      	ST   X,R31
00b29c c002      	RJMP _0x2060113
                 _0x2060110:
00b29d 9100 1ab6 	LDS  R16,_Drive_G103
                 _0x2060113:
00b29f 3001      	CPI  R16,1
00b2a0 f010      	BRLO _0x2060114
00b2a1 e0eb      	LDI  R30,LOW(11)
00b2a2 c1c1      	RJMP _0x20E0010
                 _0x2060114:
00b2a3 2fe0      	MOV  R30,R16
00b2a4 940e dae5 	CALL SUBOPT_0x3D3
00b2a6 940e d94a 	CALL SUBOPT_0x398
00b2a8 8dab      	LDD  R26,Y+27
00b2a9 8dbc      	LDD  R27,Y+27+1
00b2aa 93ed      	ST   X+,R30
00b2ab 93fc      	ST   X,R31
00b2ac 81ee      	LDD  R30,Y+6
00b2ad 81ff      	LDD  R31,Y+6+1
00b2ae 9730      	SBIW R30,0
00b2af f411      	BRNE _0x2060115
00b2b0 e0ec      	LDI  R30,LOW(12)
00b2b1 c1b2      	RJMP _0x20E0010
                 _0x2060115:
00b2b2 81ae      	LDD  R26,Y+6
00b2b3 81bf      	LDD  R27,Y+6+1
00b2b4 91ec      	LD   R30,X
00b2b5 30e0      	CPI  R30,0
00b2b6 f089      	BREQ _0x2060116
00b2b7 81ee      	LDD  R30,Y+6
00b2b8 81ff      	LDD  R31,Y+6+1
00b2b9 81a1      	LDD  R26,Z+1
00b2ba 940e a811 	CALL _disk_status
00b2bc 2f5e      	MOV  R21,R30
00b2bd fd50      	SBRC R21,0
00b2be c009      	RJMP _0x2060117
00b2bf 8dea      	LDD  R30,Y+26
00b2c0 30e0      	CPI  R30,0
00b2c1 f011      	BREQ _0x2060119
00b2c2 fd52      	SBRC R21,2
00b2c3 c001      	RJMP _0x206011A
                 _0x2060119:
00b2c4 c002      	RJMP _0x2060118
                 _0x206011A:
00b2c5 e0ea      	LDI  R30,LOW(10)
00b2c6 c19d      	RJMP _0x20E0010
                 _0x2060118:
00b2c7 c19b      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
00b2c8 81ae      	LDD  R26,Y+6
00b2c9 81bf      	LDD  R27,Y+6+1
00b2ca e0e0      	LDI  R30,LOW(0)
00b2cb 93ec      	ST   X,R30
00b2cc 2fe0      	MOV  R30,R16
                +
00b2cd 81ae     +LDD R26 , Y + 6
00b2ce 81bf     +LDD R27 , Y + 6 + 1
00b2cf 9611     +ADIW R26 , 1
00b2d0 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
00b2d1 81ee      	LDD  R30,Y+6
00b2d2 81ff      	LDD  R31,Y+6+1
00b2d3 81a1      	LDD  R26,Z+1
00b2d4 940e a740 	CALL _disk_initialize
00b2d6 2f5e      	MOV  R21,R30
00b2d7 ff50      	SBRS R21,0
00b2d8 c002      	RJMP _0x206011B
00b2d9 e0e3      	LDI  R30,LOW(3)
00b2da c189      	RJMP _0x20E0010
                 _0x206011B:
00b2db 8dea      	LDD  R30,Y+26
00b2dc 30e0      	CPI  R30,0
00b2dd f011      	BREQ _0x206011D
00b2de fd52      	SBRC R21,2
00b2df c001      	RJMP _0x206011E
                 _0x206011D:
00b2e0 c002      	RJMP _0x206011C
                 _0x206011E:
00b2e1 e0ea      	LDI  R30,LOW(10)
00b2e2 c181      	RJMP _0x20E0010
                 _0x206011C:
00b2e3 940e c8ce 	CALL SUBOPT_0x15A
00b2e5 940e da4b 	CALL SUBOPT_0x3BB
00b2e7 940e cde9 	CALL SUBOPT_0x223
00b2e9 01df      	MOVW R26,R30
00b2ea 01cb      	MOVW R24,R22
00b2eb df5f      	RCALL _check_fs_G103
00b2ec 2f1e      	MOV  R17,R30
00b2ed 3011      	CPI  R17,1
00b2ee f4c1      	BRNE _0x206011F
00b2ef 81ee      	LDD  R30,Y+6
00b2f0 81ff      	LDD  R31,Y+6+1
00b2f1 96f2      	ADIW R30,50
00b2f2 54e2      	SUBI R30,LOW(-446)
00b2f3 4ffe      	SBCI R31,HIGH(-446)
00b2f4 019f      	MOVW R18,R30
00b2f5 01f9      	MOVW R30,R18
00b2f6 81e4      	LDD  R30,Z+4
00b2f7 30e0      	CPI  R30,0
00b2f8 f071      	BREQ _0x2060120
00b2f9 01d9      	MOVW R26,R18
00b2fa 9618      	ADIW R26,8
00b2fb 940e e02e 	CALL __GETD1P
00b2fd 940e c52f 	CALL SUBOPT_0xC0
00b2ff 940e c8ce 	CALL SUBOPT_0x15A
                +
00b301 8da8     +LDD R26 , Y + 24
00b302 8db9     +LDD R27 , Y + 24 + 1
00b303 8d8a     +LDD R24 , Y + 24 + 2
00b304 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00b305 df45      	RCALL _check_fs_G103
00b306 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
00b307 3013      	CPI  R17,3
00b308 f411      	BRNE _0x2060121
00b309 e0e1      	LDI  R30,LOW(1)
00b30a c159      	RJMP _0x20E0010
                 _0x2060121:
00b30b 3010      	CPI  R17,0
00b30c f449      	BRNE _0x2060123
00b30d 81ae      	LDD  R26,Y+6
00b30e 81bf      	LDD  R27,Y+6+1
00b30f 96dd      	ADIW R26,61
00b310 940e e02a 	CALL __GETW1P
00b312 30e0      	CPI  R30,LOW(0x200)
00b313 e0a2      	LDI  R26,HIGH(0x200)
00b314 07fa      	CPC  R31,R26
00b315 f011      	BREQ _0x2060122
                 _0x2060123:
00b316 e0ed      	LDI  R30,LOW(13)
00b317 c14c      	RJMP _0x20E0010
                 _0x2060122:
00b318 81ae      	LDD  R26,Y+6
00b319 81bf      	LDD  R27,Y+6+1
00b31a 5ba8      	SUBI R26,LOW(-72)
00b31b 4fbf      	SBCI R27,HIGH(-72)
00b31c 940e c0f9 	CALL SUBOPT_0x1E
00b31e 940e daed 	CALL SUBOPT_0x3D4
00b320 940e c5b5 	CALL SUBOPT_0xD3
00b322 940e e0b2 	CALL __CPD10
00b324 f441      	BRNE _0x2060125
00b325 81ae      	LDD  R26,Y+6
00b326 81bf      	LDD  R27,Y+6+1
00b327 5aaa      	SUBI R26,LOW(-86)
00b328 4fbf      	SBCI R27,HIGH(-86)
00b329 940e e02e 	CALL __GETD1P
00b32b 940e daed 	CALL SUBOPT_0x3D4
                 _0x2060125:
00b32d 940e c5b5 	CALL SUBOPT_0xD3
                +
00b32f 81ae     +LDD R26 , Y + 6
00b330 81bf     +LDD R27 , Y + 6 + 1
00b331 965a     +ADIW R26 , 26
00b332 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00b334 81ee      	LDD  R30,Y+6
00b335 81ff      	LDD  R31,Y+6+1
00b336 5bee      	SUBI R30,LOW(-66)
00b337 4fff      	SBCI R31,HIGH(-66)
00b338 81e0      	LD   R30,Z
                +
00b339 81ae     +LDD R26 , Y + 6
00b33a 81bf     +LDD R27 , Y + 6 + 1
00b33b 9613     +ADIW R26 , 3
00b33c 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00b33d 81ee      	LDD  R30,Y+6
00b33e 81ff      	LDD  R31,Y+6+1
00b33f 81e3      	LDD  R30,Z+3
00b340 e0f0      	LDI  R31,0
00b341 940e da3a 	CALL SUBOPT_0x3B8
00b343 940e d0e2 	CALL SUBOPT_0x294
00b345 940e daed 	CALL SUBOPT_0x3D4
00b347 940e daf2 	CALL SUBOPT_0x3D5
00b349 940e c5ab 	CALL SUBOPT_0xD1
00b34b 940e da69 	CALL SUBOPT_0x3C0
                +
00b34d 81ae     +LDD R26 , Y + 6
00b34e 81bf     +LDD R27 , Y + 6 + 1
00b34f 9692     +ADIW R26 , 34
00b350 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00b352 81ee      	LDD  R30,Y+6
00b353 81ff      	LDD  R31,Y+6+1
00b354 ade7      	LDD  R30,Z+63
                +
00b355 81ae     +LDD R26 , Y + 6
00b356 81bf     +LDD R27 , Y + 6 + 1
00b357 9612     +ADIW R26 , 2
00b358 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00b359 81ae      	LDD  R26,Y+6
00b35a 81bf      	LDD  R27,Y+6+1
00b35b 5bad      	SUBI R26,LOW(-67)
00b35c 4fbf      	SBCI R27,HIGH(-67)
00b35d 940e e02a 	CALL __GETW1P
                +
00b35f 81ae     +LDD R26 , Y + 6
00b360 81bf     +LDD R27 , Y + 6 + 1
00b361 9618     +ADIW R26 , 8
00b362 93ed     +ST X + , R30
00b363 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00b364 81ae      	LDD  R26,Y+6
00b365 81bf      	LDD  R27,Y+6+1
00b366 5bab      	SUBI R26,LOW(-69)
00b367 4fbf      	SBCI R27,HIGH(-69)
00b368 940e c0f9 	CALL SUBOPT_0x1E
00b36a 940e d8f8 	CALL SUBOPT_0x38A
00b36c 940e e0b2 	CALL __CPD10
00b36e f441      	BRNE _0x2060126
00b36f 81ae      	LDD  R26,Y+6
00b370 81bf      	LDD  R27,Y+6+1
00b371 5aae      	SUBI R26,LOW(-82)
00b372 4fbf      	SBCI R27,HIGH(-82)
00b373 940e e02e 	CALL __GETD1P
00b375 940e daf9 	CALL SUBOPT_0x3D6
                 _0x2060126:
00b377 940e daf2 	CALL SUBOPT_0x3D5
00b379 940e d9dd 	CALL SUBOPT_0x3AC
00b37b 2766      	CLR  R22
00b37c 2777      	CLR  R23
00b37d 940e c52a 	CALL SUBOPT_0xBF
00b37f 940e da3a 	CALL SUBOPT_0x3B8
00b381 940e dec0 	CALL __SUBD12
00b383 937f      	PUSH R23
00b384 936f      	PUSH R22
00b385 93ff      	PUSH R31
00b386 93ef      	PUSH R30
00b387 940e dafe 	CALL SUBOPT_0x3D7
00b389 91af      	POP  R26
00b38a 91bf      	POP  R27
00b38b 918f      	POP  R24
00b38c 919f      	POP  R25
00b38d 2766      	CLR  R22
00b38e 2777      	CLR  R23
00b38f 940e dec5 	CALL __SUBD21
00b391 81ee      	LDD  R30,Y+6
00b392 81ff      	LDD  R31,Y+6+1
00b393 940e d0da 	CALL SUBOPT_0x292
00b395 940e df3b 	CALL __CWD1
00b397 940e dfb2 	CALL __DIVD21U
                +
00b399 5fee     +SUBI R30 , LOW ( - 2 )
00b39a 4fff     +SBCI R31 , HIGH ( - 2 )
00b39b 4f6f     +SBCI R22 , BYTE3 ( - 2 )
00b39c 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
00b39d 940e d6fd 	CALL SUBOPT_0x349
                +
00b39f 81ae     +LDD R26 , Y + 6
00b3a0 81bf     +LDD R27 , Y + 6 + 1
00b3a1 965e     +ADIW R26 , 30
00b3a2 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,30
00b3a4 e011      	LDI  R17,LOW(1)
00b3a5 940e c265 	CALL SUBOPT_0x52
                +
00b3a7 3fa7     +CPI R26 , LOW ( 0xFF7 )
00b3a8 e0ef     +LDI R30 , HIGH ( 0xFF7 )
00b3a9 07be     +CPC R27 , R30
00b3aa e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
00b3ab 078e     +CPC R24 , R30
00b3ac e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
00b3ad 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
00b3ae f008      	BRLO _0x2060127
00b3af e012      	LDI  R17,LOW(2)
                 _0x2060127:
00b3b0 940e c265 	CALL SUBOPT_0x52
                +
00b3b2 3fa7     +CPI R26 , LOW ( 0xFFF7 )
00b3b3 efef     +LDI R30 , HIGH ( 0xFFF7 )
00b3b4 07be     +CPC R27 , R30
00b3b5 e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
00b3b6 078e     +CPC R24 , R30
00b3b7 e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
00b3b8 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
00b3b9 f008      	BRLO _0x2060128
00b3ba e013      	LDI  R17,LOW(3)
                 _0x2060128:
00b3bb 3013      	CPI  R17,3
00b3bc f439      	BRNE _0x2060129
00b3bd 81ae      	LDD  R26,Y+6
00b3be 81bf      	LDD  R27,Y+6+1
00b3bf 5aa2      	SUBI R26,LOW(-94)
00b3c0 4fbf      	SBCI R27,HIGH(-94)
00b3c1 940e e02e 	CALL __GETD1P
00b3c3 c002      	RJMP _0x206022D
                 _0x2060129:
00b3c4 940e db06 	CALL SUBOPT_0x3D8
                 _0x206022D:
                +
00b3c6 81ae     +LDD R26 , Y + 6
00b3c7 81bf     +LDD R27 , Y + 6 + 1
00b3c8 9696     +ADIW R26 , 38
00b3c9 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,38
00b3cb 940e db06 	CALL SUBOPT_0x3D8
00b3cd 937f      	PUSH R23
00b3ce 936f      	PUSH R22
00b3cf 93ff      	PUSH R31
00b3d0 93ef      	PUSH R30
00b3d1 940e dafe 	CALL SUBOPT_0x3D7
00b3d3 91af      	POP  R26
00b3d4 91bf      	POP  R27
00b3d5 918f      	POP  R24
00b3d6 919f      	POP  R25
00b3d7 940e da69 	CALL SUBOPT_0x3C0
                +
00b3d9 81ae     +LDD R26 , Y + 6
00b3da 81bf     +LDD R27 , Y + 6 + 1
00b3db 969a     +ADIW R26 , 42
00b3dc 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,42
00b3de 81ae      	LDD  R26,Y+6
00b3df 81bf      	LDD  R27,Y+6+1
00b3e0 961e      	ADIW R26,14
00b3e1 940e c124 	CALL SUBOPT_0x25
00b3e3 940e e039 	CALL __PUTDP1
00b3e5 81ae      	LDD  R26,Y+6
00b3e6 81bf      	LDD  R27,Y+6+1
00b3e7 9614      	ADIW R26,4
00b3e8 e0e0      	LDI  R30,LOW(0)
00b3e9 93ec      	ST   X,R30
00b3ea 3013      	CPI  R17,3
00b3eb f011      	BREQ PC+3
00b3ec 940c b44f 	JMP _0x206012B
00b3ee 81ae      	LDD  R26,Y+6
00b3ef 81bf      	LDD  R27,Y+6+1
00b3f0 9615      	ADIW R26,5
00b3f1 93ec      	ST   X,R30
00b3f2 81ae      	LDD  R26,Y+6
00b3f3 81bf      	LDD  R27,Y+6+1
00b3f4 59ae      	SUBI R26,LOW(-98)
00b3f5 4fbf      	SBCI R27,HIGH(-98)
00b3f6 940e e02a 	CALL __GETW1P
00b3f8 940e c5ab 	CALL SUBOPT_0xD1
00b3fa 940e da69 	CALL SUBOPT_0x3C0
                +
00b3fc 81ae     +LDD R26 , Y + 6
00b3fd 81bf     +LDD R27 , Y + 6 + 1
00b3fe 9652     +ADIW R26 , 18
00b3ff 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00b401 81ee      	LDD  R30,Y+6
00b402 81ff      	LDD  R31,Y+6+1
00b403 81a1      	LDD  R26,Z+1
00b404 93aa      	ST   -Y,R26
00b405 81ef      	LDD  R30,Y+7
00b406 85f8      	LDD  R31,Y+7+1
00b407 96f2      	ADIW R30,50
00b408 93fa      	ST   -Y,R31
00b409 93ea      	ST   -Y,R30
00b40a 85e9      	LDD  R30,Y+9
00b40b 85fa      	LDD  R31,Y+9+1
00b40c 940e d99e 	CALL SUBOPT_0x3A3
00b40e 940e a81b 	CALL _disk_read
00b410 30e0      	CPI  R30,0
00b411 f511      	BRNE _0x206012D
00b412 81ee      	LDD  R30,Y+6
00b413 81ff      	LDD  R31,Y+6+1
00b414 940e dacd 	CALL SUBOPT_0x3D1
00b416 f4e9      	BRNE _0x206012D
00b417 81ae      	LDD  R26,Y+6
00b418 81bf      	LDD  R27,Y+6+1
00b419 96d2      	ADIW R26,50
00b41a 940e e02e 	CALL __GETD1P
                +
00b41c 35e2     +CPI R30 , LOW ( 0x41615252 )
00b41d e5a2     +LDI R26 , HIGH ( 0x41615252 )
00b41e 07fa     +CPC R31 , R26
00b41f e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00b420 076a     +CPC R22 , R26
00b421 e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00b422 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00b423 f481      	BRNE _0x206012D
00b424 81ee      	LDD  R30,Y+6
00b425 81ff      	LDD  R31,Y+6+1
00b426 96f2      	ADIW R30,50
00b427 51ec      	SUBI R30,LOW(-484)
00b428 4ffe      	SBCI R31,HIGH(-484)
00b429 01df      	MOVW R26,R30
00b42a 940e e02e 	CALL __GETD1P
                +
00b42c 37e2     +CPI R30 , LOW ( 0x61417272 )
00b42d e7a2     +LDI R26 , HIGH ( 0x61417272 )
00b42e 07fa     +CPC R31 , R26
00b42f e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00b430 076a     +CPC R22 , R26
00b431 e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00b432 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00b433 f009      	BREQ _0x206012E
                 _0x206012D:
00b434 c01a      	RJMP _0x206012C
                 _0x206012E:
00b435 81ee      	LDD  R30,Y+6
00b436 81ff      	LDD  R31,Y+6+1
00b437 96f2      	ADIW R30,50
00b438 51e4      	SUBI R30,LOW(-492)
00b439 4ffe      	SBCI R31,HIGH(-492)
00b43a 01df      	MOVW R26,R30
00b43b 940e e02e 	CALL __GETD1P
                +
00b43d 81ae     +LDD R26 , Y + 6
00b43e 81bf     +LDD R27 , Y + 6 + 1
00b43f 961a     +ADIW R26 , 10
00b440 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00b442 81ee      	LDD  R30,Y+6
00b443 81ff      	LDD  R31,Y+6+1
00b444 96f2      	ADIW R30,50
00b445 51e8      	SUBI R30,LOW(-488)
00b446 4ffe      	SBCI R31,HIGH(-488)
00b447 01df      	MOVW R26,R30
00b448 940e e02e 	CALL __GETD1P
                +
00b44a 81ae     +LDD R26 , Y + 6
00b44b 81bf     +LDD R27 , Y + 6 + 1
00b44c 961e     +ADIW R26 , 14
00b44d 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00b44f 81ae      	LDD  R26,Y+6
00b450 81bf      	LDD  R27,Y+6+1
00b451 931c      	ST   X,R17
00b452 969e      	ADIW R26,46
00b453 940e c3ef 	CALL SUBOPT_0x8E
00b455 81ae      	LDD  R26,Y+6
00b456 81bf      	LDD  R27,Y+6+1
00b457 9656      	ADIW R26,22
00b458 940e c3ef 	CALL SUBOPT_0x8E
00b45a eba4      	LDI  R26,LOW(_Fsid_G103)
00b45b e1ba      	LDI  R27,HIGH(_Fsid_G103)
00b45c 940e c383 	CALL SUBOPT_0x7C
                +
00b45e 81ae     +LDD R26 , Y + 6
00b45f 81bf     +LDD R27 , Y + 6 + 1
00b460 9616     +ADIW R26 , 6
00b461 93ed     +ST X + , R30
00b462 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00b463 e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00b464 940e e0d5 	CALL __LOADLOCR6
00b466 966f      	ADIW R28,31
00b467 9508      	RET
                 _validate_G103:
00b468 940e d04b 	CALL SUBOPT_0x27C
00b46a 9730      	SBIW R30,0
00b46b f071      	BREQ _0x2060130
00b46c 81aa      	LDD  R26,Y+2
00b46d 81bb      	LDD  R27,Y+2+1
00b46e 91ec      	LD   R30,X
00b46f 30e0      	CPI  R30,0
00b470 f049      	BREQ _0x2060130
00b471 81ea      	LDD  R30,Y+2
00b472 81fb      	LDD  R31,Y+2+1
00b473 81a6      	LDD  R26,Z+6
00b474 81b7      	LDD  R27,Z+7
00b475 81e8      	LD   R30,Y
00b476 81f9      	LDD  R31,Y+1
00b477 17ea      	CP   R30,R26
00b478 07fb      	CPC  R31,R27
00b479 f011      	BREQ _0x206012F
                 _0x2060130:
00b47a e0e9      	LDI  R30,LOW(9)
00b47b c00a      	RJMP _0x20E000F
                 _0x206012F:
00b47c 81ea      	LDD  R30,Y+2
00b47d 81fb      	LDD  R31,Y+2+1
00b47e 81a1      	LDD  R26,Z+1
00b47f 940e a811 	CALL _disk_status
00b481 70e1      	ANDI R30,LOW(0x1)
00b482 f011      	BREQ _0x2060132
00b483 e0e3      	LDI  R30,LOW(3)
00b484 c001      	RJMP _0x20E000F
                 _0x2060132:
00b485 e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
00b486 9624      	ADIW R28,4
00b487 9508      	RET
                 _f_mount:
00b488 940e c3a0 	CALL SUBOPT_0x81
00b48a 81ac      	LDD  R26,Y+4
00b48b 30a1      	CPI  R26,LOW(0x1)
00b48c f010      	BRLO _0x2060133
00b48d e0eb      	LDI  R30,LOW(11)
00b48e c020      	RJMP _0x20E000E
                 _0x2060133:
00b48f 81ec      	LDD  R30,Y+4
00b490 940e dae5 	CALL SUBOPT_0x3D3
00b492 910d      	LD   R16,X+
00b493 911c      	LD   R17,X
00b494 2e00      	MOV  R0,R16
00b495 2a01      	OR   R0,R17
00b496 f019      	BREQ _0x2060134
00b497 01d8      	MOVW R26,R16
00b498 e0e0      	LDI  R30,LOW(0)
00b499 93ec      	ST   X,R30
                 _0x2060134:
00b49a 81ea      	LDD  R30,Y+2
00b49b 81fb      	LDD  R31,Y+2+1
00b49c 9730      	SBIW R30,0
00b49d f021      	BREQ _0x2060135
00b49e 81aa      	LDD  R26,Y+2
00b49f 81bb      	LDD  R27,Y+2+1
00b4a0 e0e0      	LDI  R30,LOW(0)
00b4a1 93ec      	ST   X,R30
                 _0x2060135:
00b4a2 81ec      	LDD  R30,Y+4
00b4a3 eba2      	LDI  R26,LOW(_FatFs_G103)
00b4a4 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00b4a5 e0f0      	LDI  R31,0
00b4a6 0fee      	LSL  R30
00b4a7 1fff      	ROL  R31
00b4a8 0fea      	ADD  R30,R26
00b4a9 1ffb      	ADC  R31,R27
00b4aa 81aa      	LDD  R26,Y+2
00b4ab 81bb      	LDD  R27,Y+2+1
00b4ac 83a0      	STD  Z+0,R26
00b4ad 83b1      	STD  Z+1,R27
00b4ae e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
00b4af 8119      	LDD  R17,Y+1
00b4b0 8108      	LDD  R16,Y+0
00b4b1 9625      	ADIW R28,5
00b4b2 9508      	RET
                 _f_open:
00b4b3 93aa      	ST   -Y,R26
00b4b4 97a2      	SBIW R28,34
00b4b5 940e e0d0 	CALL __SAVELOCR4
00b4b7 a5a9      	LDD  R26,Y+41
00b4b8 a5ba      	LDD  R27,Y+41+1
00b4b9 940e c720 	CALL SUBOPT_0x112
00b4bb a1ee      	LDD  R30,Y+38
00b4bc 71ef      	ANDI R30,LOW(0x1F)
00b4bd a3ee      	STD  Y+38,R30
00b4be 01fe      	MOVW R30,R28
00b4bf 96b7      	ADIW R30,39
00b4c0 93fa      	ST   -Y,R31
00b4c1 93ea      	ST   -Y,R30
00b4c2 940e c30a 	CALL SUBOPT_0x6C
00b4c4 a5ea      	LDD  R30,Y+42
00b4c5 71ee      	ANDI R30,LOW(0x1E)
00b4c6 2fae      	MOV  R26,R30
00b4c7 ddb5      	RCALL _chk_mounted
00b4c8 2f1e      	MOV  R17,R30
00b4c9 3010      	CPI  R17,0
00b4ca f011      	BREQ _0x2060136
00b4cb 2fe1      	MOV  R30,R17
00b4cc c111      	RJMP _0x20E000D
                 _0x2060136:
00b4cd 01fe      	MOVW R30,R28
00b4ce 9634      	ADIW R30,4
00b4cf a3ec      	STD  Y+36,R30
00b4d0 a3fd      	STD  Y+36+1,R31
00b4d1 940e c2a9 	CALL SUBOPT_0x5D
00b4d3 a5a9      	LDD  R26,Y+41
00b4d4 a5ba      	LDD  R27,Y+41+1
00b4d5 dcf1      	RCALL _follow_path_G103
00b4d6 2f1e      	MOV  R17,R30
00b4d7 a1ee      	LDD  R30,Y+38
00b4d8 71ec      	ANDI R30,LOW(0x1C)
00b4d9 f411      	BRNE PC+3
00b4da 940c b571 	JMP _0x2060137
00b4dc 9728      	SBIW R28,8
00b4dd 3010      	CPI  R17,0
00b4de f089      	BREQ _0x2060138
00b4df 3014      	CPI  R17,4
00b4e0 f421      	BRNE _0x2060139
00b4e1 01de      	MOVW R26,R28
00b4e2 9658      	ADIW R26,24
00b4e3 dbd8      	RCALL _dir_register_G103
00b4e4 2f1e      	MOV  R17,R30
                 _0x2060139:
00b4e5 3010      	CPI  R17,0
00b4e6 f019      	BREQ _0x206013A
00b4e7 2fe1      	MOV  R30,R17
00b4e8 9628      	ADIW R28,8
00b4e9 c0f4      	RJMP _0x20E000D
                 _0x206013A:
00b4ea a5ee      	LDD  R30,Y+46
00b4eb 60e8      	ORI  R30,8
00b4ec a7ee      	STD  Y+46,R30
                +
00b4ed a52a     +LDD R18 , Y + 42
00b4ee a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b4ef c068      	RJMP _0x206013B
                 _0x2060138:
00b4f0 a5ee      	LDD  R30,Y+46
00b4f1 70e4      	ANDI R30,LOW(0x4)
00b4f2 f019      	BREQ _0x206013C
00b4f3 e0e8      	LDI  R30,LOW(8)
00b4f4 9628      	ADIW R28,8
00b4f5 c0e8      	RJMP _0x20E000D
                 _0x206013C:
                +
00b4f6 a52a     +LDD R18 , Y + 42
00b4f7 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b4f8 2e02      	MOV  R0,R18
00b4f9 2a03      	OR   R0,R19
00b4fa f021      	BREQ _0x206013E
00b4fb 01f9      	MOVW R30,R18
00b4fc 85e3      	LDD  R30,Z+11
00b4fd 71e1      	ANDI R30,LOW(0x11)
00b4fe f019      	BREQ _0x206013D
                 _0x206013E:
00b4ff e0e7      	LDI  R30,LOW(7)
00b500 9628      	ADIW R28,8
00b501 c0dc      	RJMP _0x20E000D
                 _0x206013D:
00b502 a5ee      	LDD  R30,Y+46
00b503 70e8      	ANDI R30,LOW(0x8)
00b504 f411      	BRNE PC+3
00b505 940c b558 	JMP _0x2060140
00b507 940e dab8 	CALL SUBOPT_0x3CD
00b509 940e df30 	CALL __LSLD16
00b50b 937f      	PUSH R23
00b50c 936f      	PUSH R22
00b50d 93ff      	PUSH R31
00b50e 93ef      	PUSH R30
00b50f 940e dabc 	CALL SUBOPT_0x3CE
00b511 91af      	POP  R26
00b512 91bf      	POP  R27
00b513 918f      	POP  R24
00b514 919f      	POP  R25
00b515 940e dac1 	CALL SUBOPT_0x3CF
00b517 940e c481 	CALL SUBOPT_0xA0
00b519 01f9      	MOVW R30,R18
00b51a 9674      	ADIW R30,20
00b51b e0a0      	LDI  R26,LOW(0)
00b51c e0b0      	LDI  R27,HIGH(0)
00b51d 83a0      	STD  Z+0,R26
00b51e 83b1      	STD  Z+1,R27
00b51f 01f9      	MOVW R30,R18
00b520 967a      	ADIW R30,26
00b521 83a0      	STD  Z+0,R26
00b522 83b1      	STD  Z+1,R27
00b523 01f9      	MOVW R30,R18
00b524 967c      	ADIW R30,28
00b525 940e c151 	CALL SUBOPT_0x2C
00b527 940e cf72 	CALL SUBOPT_0x25C
00b529 8da8      	LDD  R26,Y+24
00b52a 8db9      	LDD  R27,Y+24+1
00b52b 9614      	ADIW R26,4
00b52c e0e1      	LDI  R30,LOW(1)
00b52d 93ec      	ST   X,R30
00b52e 8da8      	LDD  R26,Y+24
00b52f 8db9      	LDD  R27,Y+24+1
00b530 969e      	ADIW R26,46
00b531 940e e02e 	CALL __GETD1P
00b533 940e c4aa 	CALL SUBOPT_0xA7
00b535 940e c3c6 	CALL SUBOPT_0x87
00b537 940e e0b2 	CALL __CPD10
00b539 f0a1      	BREQ _0x2060141
00b53a 940e d13a 	CALL SUBOPT_0x2A2
00b53c 940e c4e8 	CALL SUBOPT_0xB3
00b53e d88b      	RCALL _remove_chain_G103
00b53f 2f1e      	MOV  R17,R30
00b540 3010      	CPI  R17,0
00b541 f019      	BREQ _0x2060142
00b542 2fe1      	MOV  R30,R17
00b543 9628      	ADIW R28,8
00b544 c099      	RJMP _0x20E000D
                 _0x2060142:
00b545 940e c3c6 	CALL SUBOPT_0x87
00b547 940e c5d0 	CALL SUBOPT_0xD9
                +
00b549 8da8     +LDD R26 , Y + 24
00b54a 8db9     +LDD R27 , Y + 24 + 1
00b54b 961a     +ADIW R26 , 10
00b54c 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
00b54e 940e d13a 	CALL SUBOPT_0x2A2
00b550 940e c297 	CALL SUBOPT_0x59
00b552 940e db0e 	CALL SUBOPT_0x3D9
00b554 f019      	BREQ _0x2060143
00b555 2fe1      	MOV  R30,R17
00b556 9628      	ADIW R28,8
00b557 c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
00b558 a5ee      	LDD  R30,Y+46
00b559 70e8      	ANDI R30,LOW(0x8)
00b55a f0a1      	BREQ _0x2060144
00b55b 01f9      	MOVW R30,R18
00b55c 963b      	ADIW R30,11
00b55d e0a0      	LDI  R26,LOW(0)
00b55e 83a0      	STD  Z+0,R26
00b55f 940e aab6 	CALL _get_fattime
00b561 940e c4c9 	CALL SUBOPT_0xAD
                +
00b563 01d9     +MOVW R26 , R18
00b564 961e     +ADIW R26 , 14
00b565 940e e039+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00b567 8da8      	LDD  R26,Y+24
00b568 8db9      	LDD  R27,Y+24+1
00b569 9614      	ADIW R26,4
00b56a e0e1      	LDI  R30,LOW(1)
00b56b 93ec      	ST   X,R30
00b56c a5ee      	LDD  R30,Y+46
00b56d 62e0      	ORI  R30,0x20
00b56e a7ee      	STD  Y+46,R30
                 _0x2060144:
00b56f 9628      	ADIW R28,8
00b570 c019      	RJMP _0x2060145
                 _0x2060137:
00b571 3010      	CPI  R17,0
00b572 f011      	BREQ _0x2060146
00b573 2fe1      	MOV  R30,R17
00b574 c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00b575 a12a     +LDD R18 , Y + 34
00b576 a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00b577 2e02      	MOV  R0,R18
00b578 2a03      	OR   R0,R19
00b579 f021      	BREQ _0x2060148
00b57a 01f9      	MOVW R30,R18
00b57b 85e3      	LDD  R30,Z+11
00b57c 71e0      	ANDI R30,LOW(0x10)
00b57d f011      	BREQ _0x2060147
                 _0x2060148:
00b57e e0e4      	LDI  R30,LOW(4)
00b57f c05e      	RJMP _0x20E000D
                 _0x2060147:
00b580 a1ee      	LDD  R30,Y+38
00b581 70e2      	ANDI R30,LOW(0x2)
00b582 f021      	BREQ _0x206014B
00b583 01f9      	MOVW R30,R18
00b584 85e3      	LDD  R30,Z+11
00b585 70e1      	ANDI R30,LOW(0x1)
00b586 f409      	BRNE _0x206014C
                 _0x206014B:
00b587 c002      	RJMP _0x206014A
                 _0x206014C:
00b588 e0e7      	LDI  R30,LOW(7)
00b589 c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
00b58a 89a8      	LDD  R26,Y+16
00b58b 89b9      	LDD  R27,Y+16+1
00b58c 969e      	ADIW R26,46
00b58d 940e e02e 	CALL __GETD1P
                +
00b58f a5a9     +LDD R26 , Y + 41
00b590 a5ba     +LDD R27 , Y + 41 + 1
00b591 965a     +ADIW R26 , 26
00b592 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 41,26
00b594 a1ea      	LDD  R30,Y+34
00b595 a1fb      	LDD  R31,Y+34+1
                +
00b596 a5a9     +LDD R26 , Y + 41
00b597 a5ba     +LDD R27 , Y + 41 + 1
00b598 965e     +ADIW R26 , 30
00b599 93ed     +ST X + , R30
00b59a 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
00b59b a1ee      	LDD  R30,Y+38
                +
00b59c a5a9     +LDD R26 , Y + 41
00b59d a5ba     +LDD R27 , Y + 41 + 1
00b59e 9614     +ADIW R26 , 4
00b59f 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
00b5a0 940e dab8 	CALL SUBOPT_0x3CD
00b5a2 940e df30 	CALL __LSLD16
00b5a4 937f      	PUSH R23
00b5a5 936f      	PUSH R22
00b5a6 93ff      	PUSH R31
00b5a7 93ef      	PUSH R30
00b5a8 940e dabc 	CALL SUBOPT_0x3CE
00b5aa 91af      	POP  R26
00b5ab 91bf      	POP  R27
00b5ac 918f      	POP  R24
00b5ad 919f      	POP  R25
00b5ae 940e dac1 	CALL SUBOPT_0x3CF
                +
00b5b0 a5a9     +LDD R26 , Y + 41
00b5b1 a5ba     +LDD R27 , Y + 41 + 1
00b5b2 961e     +ADIW R26 , 14
00b5b3 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 41,14
00b5b5 01d9      	MOVW R26,R18
00b5b6 965c      	ADIW R26,28
00b5b7 940e e02e 	CALL __GETD1P
                +
00b5b9 a5a9     +LDD R26 , Y + 41
00b5ba a5ba     +LDD R27 , Y + 41 + 1
00b5bb 961a     +ADIW R26 , 10
00b5bc 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 41,10
00b5be a5a9      	LDD  R26,Y+41
00b5bf a5ba      	LDD  R27,Y+41+1
00b5c0 9616      	ADIW R26,6
00b5c1 940e c3ef 	CALL SUBOPT_0x8E
00b5c3 a5a9      	LDD  R26,Y+41
00b5c4 a5ba      	LDD  R27,Y+41+1
00b5c5 9615      	ADIW R26,5
00b5c6 efef      	LDI  R30,LOW(255)
00b5c7 93ec      	ST   X,R30
00b5c8 a5a9      	LDD  R26,Y+41
00b5c9 a5ba      	LDD  R27,Y+41+1
00b5ca 9656      	ADIW R26,22
00b5cb 940e c3ef 	CALL SUBOPT_0x8E
00b5cd 89e8      	LDD  R30,Y+16
00b5ce 89f9      	LDD  R31,Y+16+1
00b5cf a5a9      	LDD  R26,Y+41
00b5d0 a5ba      	LDD  R27,Y+41+1
00b5d1 93ed      	ST   X+,R30
00b5d2 93fc      	ST   X,R31
00b5d3 89a8      	LDD  R26,Y+16
00b5d4 89b9      	LDD  R27,Y+16+1
00b5d5 9616      	ADIW R26,6
00b5d6 940e e02a 	CALL __GETW1P
                +
00b5d8 a5a9     +LDD R26 , Y + 41
00b5d9 a5ba     +LDD R27 , Y + 41 + 1
00b5da 9612     +ADIW R26 , 2
00b5db 93ed     +ST X + , R30
00b5dc 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
00b5dd e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
00b5de 940e e0d7 	CALL __LOADLOCR4
00b5e0 96ab      	ADIW R28,43
00b5e1 9508      	RET
                 _f_read:
00b5e2 93ba      	ST   -Y,R27
00b5e3 93aa      	ST   -Y,R26
00b5e4 972e      	SBIW R28,14
00b5e5 940e e0ce 	CALL __SAVELOCR6
00b5e7 8de8      	LDD  R30,Y+24
00b5e8 8df9      	LDD  R31,Y+24+1
00b5e9 83ee      	STD  Y+6,R30
00b5ea 83ff      	STD  Y+6+1,R31
00b5eb 89ac      	LDD  R26,Y+20
00b5ec 89bd      	LDD  R27,Y+20+1
00b5ed 940e c720 	CALL SUBOPT_0x112
00b5ef 940e db13 	CALL SUBOPT_0x3DA
00b5f1 8dec      	LDD  R30,Y+28
00b5f2 8dfd      	LDD  R31,Y+28+1
00b5f3 940e db16 	CALL SUBOPT_0x3DB
00b5f5 f011      	BREQ _0x206014D
00b5f6 2fe1      	MOV  R30,R17
00b5f7 c14b      	RJMP _0x20E000C
                 _0x206014D:
00b5f8 8dea      	LDD  R30,Y+26
00b5f9 8dfb      	LDD  R31,Y+26+1
00b5fa 81a4      	LDD  R26,Z+4
00b5fb 78a0      	ANDI R26,LOW(0x80)
00b5fc f011      	BREQ _0x206014E
00b5fd e0e2      	LDI  R30,LOW(2)
00b5fe c144      	RJMP _0x20E000C
                 _0x206014E:
00b5ff 8dea      	LDD  R30,Y+26
00b600 8dfb      	LDD  R31,Y+26+1
00b601 81a4      	LDD  R26,Z+4
00b602 70a1      	ANDI R26,LOW(0x1)
00b603 f411      	BRNE _0x206014F
00b604 e0e7      	LDI  R30,LOW(7)
00b605 c13d      	RJMP _0x20E000C
                 _0x206014F:
00b606 8dea      	LDD  R30,Y+26
00b607 8dfb      	LDD  R31,Y+26+1
                +
00b608 85a2     +LDD R26 , Z + 10
00b609 85b3     +LDD R27 , Z + 10 + 1
00b60a 8584     +LDD R24 , Z + 10 + 2
00b60b 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b60c 939f      	PUSH R25
00b60d 938f      	PUSH R24
00b60e 93bf      	PUSH R27
00b60f 93af      	PUSH R26
00b610 940e db1d 	CALL SUBOPT_0x3DC
00b612 91ef      	POP  R30
00b613 91ff      	POP  R31
00b614 916f      	POP  R22
00b615 917f      	POP  R23
00b616 940e dec0 	CALL __SUBD12
00b618 940e d78a 	CALL SUBOPT_0x35E
00b61a 940e c24c 	CALL SUBOPT_0x4F
00b61c 89ae      	LDD  R26,Y+22
00b61d 89bf      	LDD  R27,Y+22+1
00b61e 2788      	CLR  R24
00b61f 2799      	CLR  R25
00b620 940e e0c4 	CALL __CPD12
00b622 f420      	BRSH _0x2060150
00b623 85e8      	LDD  R30,Y+8
00b624 85f9      	LDD  R31,Y+8+1
00b625 8bee      	STD  Y+22,R30
00b626 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00b627 89ee      	LDD  R30,Y+22
00b628 89ff      	LDD  R31,Y+22+1
00b629 9730      	SBIW R30,0
00b62a f411      	BRNE PC+3
00b62b 940c b742 	JMP _0x2060153
00b62d 940e db1d 	CALL SUBOPT_0x3DC
00b62f 940e db24 	CALL SUBOPT_0x3DD
00b631 f011      	BREQ PC+3
00b632 940c b70d 	JMP _0x2060154
00b634 8dea      	LDD  R30,Y+26
00b635 8dfb      	LDD  R31,Y+26+1
00b636 8005      	LDD  R0,Z+5
00b637 8daa      	LDD  R26,Y+26
00b638 8dbb      	LDD  R27,Y+26+1
00b639 940e e02a 	CALL __GETW1P
00b63b 81e2      	LDD  R30,Z+2
00b63c 160e      	CP   R0,R30
00b63d f188      	BRLO _0x2060155
00b63e 940e db1d 	CALL SUBOPT_0x3DC
00b640 940e e0be 	CALL __CPD02
00b642 f431      	BRNE _0x2060156
00b643 8daa      	LDD  R26,Y+26
00b644 8dbb      	LDD  R27,Y+26+1
00b645 961e      	ADIW R26,14
00b646 940e e02e 	CALL __GETD1P
00b648 c006      	RJMP _0x2060157
                 _0x2060156:
00b649 940e db13 	CALL SUBOPT_0x3DA
00b64b 940e db29 	CALL SUBOPT_0x3DE
00b64d 940e ac97 	CALL _get_fat
                 _0x2060157:
00b64f 940e d78f 	CALL SUBOPT_0x35F
00b651 940e ce14 	CALL SUBOPT_0x229
00b653 940e d9a6 	CALL SUBOPT_0x3A4
00b655 f420      	BRSH _0x2060159
00b656 940e db30 	CALL SUBOPT_0x3DF
00b658 e0e2      	LDI  R30,LOW(2)
00b659 c0e9      	RJMP _0x20E000C
                 _0x2060159:
00b65a 940e ce14 	CALL SUBOPT_0x229
00b65c 940e c1b7 	CALL SUBOPT_0x3A
00b65e f421      	BRNE _0x206015A
00b65f 940e db30 	CALL SUBOPT_0x3DF
00b661 e0e1      	LDI  R30,LOW(1)
00b662 c0e0      	RJMP _0x20E000C
                 _0x206015A:
00b663 940e c07a 	CALL SUBOPT_0xC
                +
00b665 8daa     +LDD R26 , Y + 26
00b666 8dbb     +LDD R27 , Y + 26 + 1
00b667 9652     +ADIW R26 , 18
00b668 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 26,18
00b66a 8daa      	LDD  R26,Y+26
00b66b 8dbb      	LDD  R27,Y+26+1
00b66c 9615      	ADIW R26,5
00b66d e0e0      	LDI  R30,LOW(0)
00b66e 93ec      	ST   X,R30
                 _0x2060155:
00b66f 940e db13 	CALL SUBOPT_0x3DA
00b671 940e db29 	CALL SUBOPT_0x3DE
00b673 d85e      	RCALL _clust2sect
00b674 940e c646 	CALL SUBOPT_0xEB
00b676 940e e0b2 	CALL __CPD10
00b678 f421      	BRNE _0x206015B
00b679 940e db30 	CALL SUBOPT_0x3DF
00b67b e0e2      	LDI  R30,LOW(2)
00b67c c0c6      	RJMP _0x20E000C
                 _0x206015B:
00b67d 940e db37 	CALL SUBOPT_0x3E0
00b67f 940e c075 	CALL SUBOPT_0xB
00b681 940e c4c4 	CALL SUBOPT_0xAC
00b683 940e c63c 	CALL SUBOPT_0xE9
00b685 89ae      	LDD  R26,Y+22
00b686 89bf      	LDD  R27,Y+22+1
00b687 940e db3c 	CALL SUBOPT_0x3E1
00b689 f411      	BRNE PC+3
00b68a 940c b6d8 	JMP _0x206015C
00b68c 8dea      	LDD  R30,Y+26
00b68d 8dfb      	LDD  R31,Y+26+1
00b68e 81e5      	LDD  R30,Z+5
00b68f 940e daae 	CALL SUBOPT_0x3CB
00b691 010f      	MOVW R0,R30
00b692 940e db44 	CALL SUBOPT_0x3E2
00b694 81e2      	LDD  R30,Z+2
00b695 940e ca91 	CALL SUBOPT_0x1A5
00b697 f450      	BRSH _0x206015D
00b698 940e db44 	CALL SUBOPT_0x3E2
00b69a 940e d0da 	CALL SUBOPT_0x292
00b69c 01df      	MOVW R26,R30
00b69d 940e db37 	CALL SUBOPT_0x3E0
00b69f 1bae      	SUB  R26,R30
00b6a0 0bbf      	SBC  R27,R31
00b6a1 01ad      	MOVW R20,R26
                 _0x206015D:
00b6a2 940e db44 	CALL SUBOPT_0x3E2
00b6a4 940e db49 	CALL SUBOPT_0x3E3
                +
00b6a6 85ef     +LDD R30 , Y + 15
00b6a7 89f8     +LDD R31 , Y + 15 + 1
00b6a8 8969     +LDD R22 , Y + 15 + 2
00b6a9 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b6aa 940e e05e 	CALL __PUTPARD1
00b6ac 2fa4      	MOV  R26,R20
00b6ad 940e a81b 	CALL _disk_read
00b6af 30e0      	CPI  R30,0
00b6b0 f021      	BREQ _0x206015E
00b6b1 940e db30 	CALL SUBOPT_0x3DF
00b6b3 e0e1      	LDI  R30,LOW(1)
00b6b4 c08e      	RJMP _0x20E000C
                 _0x206015E:
00b6b5 8dea      	LDD  R30,Y+26
00b6b6 8dfb      	LDD  R31,Y+26+1
00b6b7 81a4      	LDD  R26,Z+4
00b6b8 74a0      	ANDI R26,LOW(0x40)
00b6b9 f029      	BREQ _0x2060160
00b6ba 940e db50 	CALL SUBOPT_0x3E4
00b6bc 940e db58 	CALL SUBOPT_0x3E5
00b6be f008      	BRLO _0x2060161
                 _0x2060160:
00b6bf c013      	RJMP _0x206015F
                 _0x2060161:
00b6c0 940e db50 	CALL SUBOPT_0x3E4
00b6c2 940e db60 	CALL SUBOPT_0x3E6
00b6c4 81ae      	LDD  R26,Y+6
00b6c5 81bf      	LDD  R27,Y+6+1
00b6c6 2788      	CLR  R24
00b6c7 2799      	CLR  R25
00b6c8 940e c0f4 	CALL SUBOPT_0x1D
00b6ca 8dec      	LDD  R30,Y+28
00b6cb 8dfd      	LDD  R31,Y+28+1
00b6cc 96b0      	ADIW R30,32
00b6cd 93fa      	ST   -Y,R31
00b6ce 93ea      	ST   -Y,R30
00b6cf e0a0      	LDI  R26,LOW(512)
00b6d0 e0b2      	LDI  R27,HIGH(512)
00b6d1 940e ab44 	CALL _mem_cpy_G103
                 _0x206015F:
00b6d3 8daa      	LDD  R26,Y+26
00b6d4 8dbb      	LDD  R27,Y+26+1
00b6d5 940e db69 	CALL SUBOPT_0x3E7
00b6d7 c053      	RJMP _0x2060151
                 _0x206015C:
00b6d8 8dea      	LDD  R30,Y+26
00b6d9 8dfb      	LDD  R31,Y+26+1
00b6da 81a4      	LDD  R26,Z+4
00b6db 74a0      	ANDI R26,LOW(0x40)
00b6dc f089      	BREQ _0x2060162
00b6dd 940e db44 	CALL SUBOPT_0x3E2
00b6df 940e db74 	CALL SUBOPT_0x3E8
00b6e1 8ded      	LDD  R30,Y+29
00b6e2 8dfe      	LDD  R31,Y+29+1
00b6e3 940e db7c 	CALL SUBOPT_0x3E9
00b6e5 f021      	BREQ _0x2060163
00b6e6 940e db30 	CALL SUBOPT_0x3DF
00b6e8 e0e1      	LDI  R30,LOW(1)
00b6e9 c059      	RJMP _0x20E000C
                 _0x2060163:
00b6ea 8daa      	LDD  R26,Y+26
00b6eb 8dbb      	LDD  R27,Y+26+1
00b6ec 940e db87 	CALL SUBOPT_0x3EA
                 _0x2060162:
00b6ee 940e db50 	CALL SUBOPT_0x3E4
00b6f0 940e e0c4 	CALL __CPD12
00b6f2 f079      	BREQ _0x2060164
00b6f3 940e db44 	CALL SUBOPT_0x3E2
00b6f5 940e db74 	CALL SUBOPT_0x3E8
                +
00b6f7 85ef     +LDD R30 , Y + 15
00b6f8 89f8     +LDD R31 , Y + 15 + 1
00b6f9 8969     +LDD R22 , Y + 15 + 2
00b6fa 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b6fb 940e dac6 	CALL SUBOPT_0x3D0
00b6fd f021      	BREQ _0x2060165
00b6fe 940e db30 	CALL SUBOPT_0x3DF
00b700 e0e1      	LDI  R30,LOW(1)
00b701 c041      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00b702 940e c5cb 	CALL SUBOPT_0xD8
                +
00b704 8daa     +LDD R26 , Y + 26
00b705 8dbb     +LDD R27 , Y + 26 + 1
00b706 9656     +ADIW R26 , 22
00b707 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 26,22
00b709 8daa      	LDD  R26,Y+26
00b70a 8dbb      	LDD  R27,Y+26+1
00b70b 940e db8c 	CALL SUBOPT_0x3EB
                 _0x2060154:
00b70d 8daa      	LDD  R26,Y+26
00b70e 8dbb      	LDD  R27,Y+26+1
00b70f 940e db91 	CALL SUBOPT_0x3EC
00b711 e0a0      	LDI  R26,LOW(512)
00b712 e0b2      	LDI  R27,HIGH(512)
00b713 1bae      	SUB  R26,R30
00b714 0bbf      	SBC  R27,R31
00b715 019d      	MOVW R18,R26
00b716 89ee      	LDD  R30,Y+22
00b717 89ff      	LDD  R31,Y+22+1
00b718 17e2      	CP   R30,R18
00b719 07f3      	CPC  R31,R19
00b71a f410      	BRSH _0x2060166
                +
00b71b 892e     +LDD R18 , Y + 22
00b71c 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
00b71d 940e c8ce 	CALL SUBOPT_0x15A
00b71f 8dac      	LDD  R26,Y+28
00b720 8dbd      	LDD  R27,Y+28+1
00b721 940e db91 	CALL SUBOPT_0x3EC
00b723 8dac      	LDD  R26,Y+28
00b724 8dbd      	LDD  R27,Y+28+1
00b725 9690      	ADIW R26,32
00b726 940e c0f4 	CALL SUBOPT_0x1D
00b728 01d9      	MOVW R26,R18
00b729 940e ab44 	CALL _mem_cpy_G103
                 _0x2060151:
00b72b 01f9      	MOVW R30,R18
00b72c 940e ca8c 	CALL SUBOPT_0x1A4
00b72e 83ee      	STD  Y+6,R30
00b72f 83ff      	STD  Y+6+1,R31
00b730 8dea      	LDD  R30,Y+26
00b731 8dfb      	LDD  R31,Y+26+1
00b732 940e db96 	CALL SUBOPT_0x3ED
00b734 01d0      	MOVW R26,R0
00b735 940e e039 	CALL __PUTDP1
00b737 89ac      	LDD  R26,Y+20
00b738 89bd      	LDD  R27,Y+20+1
00b739 940e db9f 	CALL SUBOPT_0x3EE
00b73b 89ee      	LDD  R30,Y+22
00b73c 89ff      	LDD  R31,Y+22+1
00b73d 1be2      	SUB  R30,R18
00b73e 0bf3      	SBC  R31,R19
00b73f 8bee      	STD  Y+22,R30
00b740 8bff      	STD  Y+22+1,R31
00b741 cee5      	RJMP _0x2060152
                 _0x2060153:
00b742 e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00b743 940e e0d5 	CALL __LOADLOCR6
00b745 966c      	ADIW R28,28
00b746 9508      	RET
                 _f_write:
00b747 93ba      	ST   -Y,R27
00b748 93aa      	ST   -Y,R26
00b749 972a      	SBIW R28,10
00b74a 940e e0ce 	CALL __SAVELOCR6
00b74c 89ec      	LDD  R30,Y+20
00b74d 89fd      	LDD  R31,Y+20+1
00b74e 83ee      	STD  Y+6,R30
00b74f 83ff      	STD  Y+6+1,R31
00b750 89a8      	LDD  R26,Y+16
00b751 89b9      	LDD  R27,Y+16+1
00b752 940e c720 	CALL SUBOPT_0x112
00b754 940e dba6 	CALL SUBOPT_0x3EF
00b756 8de8      	LDD  R30,Y+24
00b757 8df9      	LDD  R31,Y+24+1
00b758 940e db16 	CALL SUBOPT_0x3DB
00b75a f011      	BREQ _0x2060167
00b75b 2fe1      	MOV  R30,R17
00b75c c182      	RJMP _0x20E000B
                 _0x2060167:
00b75d 89ee      	LDD  R30,Y+22
00b75e 89ff      	LDD  R31,Y+22+1
00b75f 81a4      	LDD  R26,Z+4
00b760 78a0      	ANDI R26,LOW(0x80)
00b761 f011      	BREQ _0x2060168
00b762 e0e2      	LDI  R30,LOW(2)
00b763 c17b      	RJMP _0x20E000B
                 _0x2060168:
00b764 89ee      	LDD  R30,Y+22
00b765 89ff      	LDD  R31,Y+22+1
00b766 81a4      	LDD  R26,Z+4
00b767 70a2      	ANDI R26,LOW(0x2)
00b768 f411      	BRNE _0x2060169
00b769 e0e7      	LDI  R30,LOW(7)
00b76a c174      	RJMP _0x20E000B
                 _0x2060169:
00b76b 89ee      	LDD  R30,Y+22
00b76c 89ff      	LDD  R31,Y+22+1
                +
00b76d 85a2     +LDD R26 , Z + 10
00b76e 85b3     +LDD R27 , Z + 10 + 1
00b76f 8584     +LDD R24 , Z + 10 + 2
00b770 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b771 89ea      	LDD  R30,Y+18
00b772 89fb      	LDD  R31,Y+18+1
00b773 940e da69 	CALL SUBOPT_0x3C0
00b775 937f      	PUSH R23
00b776 936f      	PUSH R22
00b777 93ff      	PUSH R31
00b778 93ef      	PUSH R30
00b779 940e dba9 	CALL SUBOPT_0x3F0
00b77b 91af      	POP  R26
00b77c 91bf      	POP  R27
00b77d 918f      	POP  R24
00b77e 919f      	POP  R25
00b77f 940e e0c9 	CALL __CPD21
00b781 f418      	BRSH _0x206016A
00b782 e0e0      	LDI  R30,LOW(0)
00b783 8bea      	STD  Y+18,R30
00b784 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
00b785 89ea      	LDD  R30,Y+18
00b786 89fb      	LDD  R31,Y+18+1
00b787 9730      	SBIW R30,0
00b788 f411      	BRNE PC+3
00b789 940c b8c5 	JMP _0x206016D
00b78b 940e dbaf 	CALL SUBOPT_0x3F1
00b78d 940e db24 	CALL SUBOPT_0x3DD
00b78f f011      	BREQ PC+3
00b790 940c b88a 	JMP _0x206016E
00b792 89ee      	LDD  R30,Y+22
00b793 89ff      	LDD  R31,Y+22+1
00b794 8005      	LDD  R0,Z+5
00b795 940e dbb6 	CALL SUBOPT_0x3F2
00b797 81e2      	LDD  R30,Z+2
00b798 160e      	CP   R0,R30
00b799 f410      	BRSH PC+3
00b79a 940c b7e4 	JMP _0x206016F
00b79c 89ae      	LDD  R26,Y+22
00b79d 89bf      	LDD  R27,Y+22+1
00b79e 9616      	ADIW R26,6
00b79f 940e da76 	CALL SUBOPT_0x3C2
00b7a1 f4c1      	BRNE _0x2060170
00b7a2 89ae      	LDD  R26,Y+22
00b7a3 89bf      	LDD  R27,Y+22+1
00b7a4 961e      	ADIW R26,14
00b7a5 940e e02e 	CALL __GETD1P
00b7a7 940e c646 	CALL SUBOPT_0xEB
00b7a9 940e e0b2 	CALL __CPD10
00b7ab f469      	BRNE _0x2060171
00b7ac 940e dba6 	CALL SUBOPT_0x3EF
00b7ae 940e c151 	CALL SUBOPT_0x2C
00b7b0 940e ae19 	CALL _create_chain_G103
00b7b2 940e c63c 	CALL SUBOPT_0xE9
                +
00b7b4 89ae     +LDD R26 , Y + 22
00b7b5 89bf     +LDD R27 , Y + 22 + 1
00b7b6 961e     +ADIW R26 , 14
00b7b7 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
00b7b9 c008      	RJMP _0x2060172
                 _0x2060170:
00b7ba 940e dba6 	CALL SUBOPT_0x3EF
00b7bc 940e dbbb 	CALL SUBOPT_0x3F3
00b7be 940e ae19 	CALL _create_chain_G103
00b7c0 940e c63c 	CALL SUBOPT_0xE9
                 _0x2060172:
00b7c2 940e c5cb 	CALL SUBOPT_0xD8
00b7c4 940e e0b2 	CALL __CPD10
00b7c6 f409      	BRNE _0x2060173
00b7c7 c0fd      	RJMP _0x206016D
                 _0x2060173:
00b7c8 940e c075 	CALL SUBOPT_0xB
00b7ca 940e da22 	CALL SUBOPT_0x3B4
00b7cc f421      	BRNE _0x2060174
00b7cd 940e dbc2 	CALL SUBOPT_0x3F4
00b7cf e0e2      	LDI  R30,LOW(2)
00b7d0 c10e      	RJMP _0x20E000B
                 _0x2060174:
00b7d1 940e c2a7 	CALL SUBOPT_0x5C
00b7d3 f421      	BRNE _0x2060175
00b7d4 940e dbc2 	CALL SUBOPT_0x3F4
00b7d6 e0e1      	LDI  R30,LOW(1)
00b7d7 c107      	RJMP _0x20E000B
                 _0x2060175:
00b7d8 940e c5cb 	CALL SUBOPT_0xD8
                +
00b7da 89ae     +LDD R26 , Y + 22
00b7db 89bf     +LDD R27 , Y + 22 + 1
00b7dc 9652     +ADIW R26 , 18
00b7dd 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 22,18
00b7df 89ae      	LDD  R26,Y+22
00b7e0 89bf      	LDD  R27,Y+22+1
00b7e1 9615      	ADIW R26,5
00b7e2 e0e0      	LDI  R30,LOW(0)
00b7e3 93ec      	ST   X,R30
                 _0x206016F:
00b7e4 89ee      	LDD  R30,Y+22
00b7e5 89ff      	LDD  R31,Y+22+1
00b7e6 81a4      	LDD  R26,Z+4
00b7e7 74a0      	ANDI R26,LOW(0x40)
00b7e8 f089      	BREQ _0x2060176
00b7e9 940e dbb6 	CALL SUBOPT_0x3F2
00b7eb 940e dbc9 	CALL SUBOPT_0x3F5
00b7ed 8de9      	LDD  R30,Y+25
00b7ee 8dfa      	LDD  R31,Y+25+1
00b7ef 940e db7c 	CALL SUBOPT_0x3E9
00b7f1 f021      	BREQ _0x2060177
00b7f2 940e dbc2 	CALL SUBOPT_0x3F4
00b7f4 e0e1      	LDI  R30,LOW(1)
00b7f5 c0e9      	RJMP _0x20E000B
                 _0x2060177:
00b7f6 89ae      	LDD  R26,Y+22
00b7f7 89bf      	LDD  R27,Y+22+1
00b7f8 940e db87 	CALL SUBOPT_0x3EA
                 _0x2060176:
00b7fa 940e dba6 	CALL SUBOPT_0x3EF
00b7fc 940e dbbb 	CALL SUBOPT_0x3F3
00b7fe 940e aed2 	CALL _clust2sect
00b800 940e d78a 	CALL SUBOPT_0x35E
00b802 940e c24c 	CALL SUBOPT_0x4F
00b804 940e e0b2 	CALL __CPD10
00b806 f421      	BRNE _0x2060178
00b807 940e dbc2 	CALL SUBOPT_0x3F4
00b809 e0e2      	LDI  R30,LOW(2)
00b80a c0d4      	RJMP _0x20E000B
                 _0x2060178:
00b80b 940e dbd1 	CALL SUBOPT_0x3F6
00b80d 940e c5c6 	CALL SUBOPT_0xD7
00b80f 940e c4c4 	CALL SUBOPT_0xAC
00b811 940e d78a 	CALL SUBOPT_0x35E
00b813 89aa      	LDD  R26,Y+18
00b814 89bb      	LDD  R27,Y+18+1
00b815 940e db3c 	CALL SUBOPT_0x3E1
00b817 f411      	BRNE PC+3
00b818 940c b861 	JMP _0x2060179
00b81a 89ee      	LDD  R30,Y+22
00b81b 89ff      	LDD  R31,Y+22+1
00b81c 81e5      	LDD  R30,Z+5
00b81d 940e daae 	CALL SUBOPT_0x3CB
00b81f 010f      	MOVW R0,R30
00b820 940e dbb6 	CALL SUBOPT_0x3F2
00b822 81e2      	LDD  R30,Z+2
00b823 940e ca91 	CALL SUBOPT_0x1A5
00b825 f450      	BRSH _0x206017A
00b826 940e dbb6 	CALL SUBOPT_0x3F2
00b828 940e d0da 	CALL SUBOPT_0x292
00b82a 01df      	MOVW R26,R30
00b82b 940e dbd1 	CALL SUBOPT_0x3F6
00b82d 1bae      	SUB  R26,R30
00b82e 0bbf      	SBC  R27,R31
00b82f 01ad      	MOVW R20,R26
                 _0x206017A:
00b830 940e dbb6 	CALL SUBOPT_0x3F2
00b832 940e db49 	CALL SUBOPT_0x3E3
00b834 940e c2d9 	CALL SUBOPT_0x64
00b836 2fa4      	MOV  R26,R20
00b837 940e a880 	CALL _disk_write
00b839 30e0      	CPI  R30,0
00b83a f021      	BREQ _0x206017B
00b83b 940e dbc2 	CALL SUBOPT_0x3F4
00b83d e0e1      	LDI  R30,LOW(1)
00b83e c0a0      	RJMP _0x20E000B
                 _0x206017B:
00b83f 940e dbd6 	CALL SUBOPT_0x3F7
00b841 940e db58 	CALL SUBOPT_0x3E5
00b843 f4c0      	BRSH _0x206017C
00b844 940e dbde 	CALL SUBOPT_0x3F8
                +
00b846 89a6     +LDD R26 , Z + 22
00b847 89b7     +LDD R27 , Z + 22 + 1
00b848 8d80     +LDD R24 , Z + 22 + 2
00b849 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00b84a 940e c5ba 	CALL SUBOPT_0xD4
00b84c 940e db60 	CALL SUBOPT_0x3E6
00b84e 85a8      	LDD  R26,Y+8
00b84f 85b9      	LDD  R27,Y+8+1
00b850 2788      	CLR  R24
00b851 2799      	CLR  R25
00b852 940e c0f4 	CALL SUBOPT_0x1D
00b854 e0a0      	LDI  R26,LOW(512)
00b855 e0b2      	LDI  R27,HIGH(512)
00b856 940e ab44 	CALL _mem_cpy_G103
00b858 89ae      	LDD  R26,Y+22
00b859 89bf      	LDD  R27,Y+22+1
00b85a 940e db87 	CALL SUBOPT_0x3EA
                 _0x206017C:
00b85c 89ae      	LDD  R26,Y+22
00b85d 89bf      	LDD  R27,Y+22+1
00b85e 940e db69 	CALL SUBOPT_0x3E7
00b860 c04d      	RJMP _0x206016B
                 _0x2060179:
00b861 940e dbd6 	CALL SUBOPT_0x3F7
00b863 940e e0c4 	CALL __CPD12
00b865 f0c9      	BREQ _0x206017D
00b866 940e dbaf 	CALL SUBOPT_0x3F1
00b868 010d      	MOVW R0,R26
00b869 940e dba9 	CALL SUBOPT_0x3F0
00b86b 01d0      	MOVW R26,R0
00b86c 940e e0c9 	CALL __CPD21
00b86e f458      	BRSH _0x206017F
00b86f 940e dbb6 	CALL SUBOPT_0x3F2
00b871 940e dbc9 	CALL SUBOPT_0x3F5
00b873 940e c2d9 	CALL SUBOPT_0x64
00b875 e0a1      	LDI  R26,LOW(1)
00b876 940e a81b 	CALL _disk_read
00b878 30e0      	CPI  R30,0
00b879 f409      	BRNE _0x2060180
                 _0x206017F:
00b87a c004      	RJMP _0x206017E
                 _0x2060180:
00b87b 940e dbc2 	CALL SUBOPT_0x3F4
00b87d e0e1      	LDI  R30,LOW(1)
00b87e c060      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
00b87f 940e c24c 	CALL SUBOPT_0x4F
                +
00b881 89ae     +LDD R26 , Y + 22
00b882 89bf     +LDD R27 , Y + 22 + 1
00b883 9656     +ADIW R26 , 22
00b884 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 22,22
00b886 89ae      	LDD  R26,Y+22
00b887 89bf      	LDD  R27,Y+22+1
00b888 940e db8c 	CALL SUBOPT_0x3EB
                 _0x206016E:
00b88a 89ae      	LDD  R26,Y+22
00b88b 89bf      	LDD  R27,Y+22+1
00b88c 940e db91 	CALL SUBOPT_0x3EC
00b88e e0a0      	LDI  R26,LOW(512)
00b88f e0b2      	LDI  R27,HIGH(512)
00b890 1bae      	SUB  R26,R30
00b891 0bbf      	SBC  R27,R31
00b892 019d      	MOVW R18,R26
00b893 89ea      	LDD  R30,Y+18
00b894 89fb      	LDD  R31,Y+18+1
00b895 17e2      	CP   R30,R18
00b896 07f3      	CPC  R31,R19
00b897 f410      	BRSH _0x2060181
                +
00b898 892a     +LDD R18 , Y + 18
00b899 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
00b89a 89ae      	LDD  R26,Y+22
00b89b 89bf      	LDD  R27,Y+22+1
00b89c 940e db91 	CALL SUBOPT_0x3EC
00b89e 89ae      	LDD  R26,Y+22
00b89f 89bf      	LDD  R27,Y+22+1
00b8a0 9690      	ADIW R26,32
00b8a1 940e c0f4 	CALL SUBOPT_0x1D
00b8a3 940e ca2b 	CALL SUBOPT_0x192
00b8a5 01d9      	MOVW R26,R18
00b8a6 940e ab44 	CALL _mem_cpy_G103
00b8a8 89ae      	LDD  R26,Y+22
00b8a9 89bf      	LDD  R27,Y+22+1
00b8aa 9614      	ADIW R26,4
00b8ab 91ec      	LD   R30,X
00b8ac 64e0      	ORI  R30,0x40
00b8ad 93ec      	ST   X,R30
                 _0x206016B:
00b8ae 01f9      	MOVW R30,R18
00b8af 940e ca8c 	CALL SUBOPT_0x1A4
00b8b1 83ee      	STD  Y+6,R30
00b8b2 83ff      	STD  Y+6+1,R31
00b8b3 89ee      	LDD  R30,Y+22
00b8b4 89ff      	LDD  R31,Y+22+1
00b8b5 940e db96 	CALL SUBOPT_0x3ED
00b8b7 01d0      	MOVW R26,R0
00b8b8 940e e039 	CALL __PUTDP1
00b8ba 89a8      	LDD  R26,Y+16
00b8bb 89b9      	LDD  R27,Y+16+1
00b8bc 940e db9f 	CALL SUBOPT_0x3EE
00b8be 89ea      	LDD  R30,Y+18
00b8bf 89fb      	LDD  R31,Y+18+1
00b8c0 1be2      	SUB  R30,R18
00b8c1 0bf3      	SBC  R31,R19
00b8c2 8bea      	STD  Y+18,R30
00b8c3 8bfb      	STD  Y+18+1,R31
00b8c4 cec0      	RJMP _0x206016C
                 _0x206016D:
00b8c5 940e dbaf 	CALL SUBOPT_0x3F1
00b8c7 010d      	MOVW R0,R26
00b8c8 940e dba9 	CALL SUBOPT_0x3F0
00b8ca 01d0      	MOVW R26,R0
00b8cb 940e e0c4 	CALL __CPD12
00b8cd f450      	BRSH _0x2060182
00b8ce 89ae      	LDD  R26,Y+22
00b8cf 89bf      	LDD  R27,Y+22+1
00b8d0 9616      	ADIW R26,6
00b8d1 940e e02e 	CALL __GETD1P
                +
00b8d3 89ae     +LDD R26 , Y + 22
00b8d4 89bf     +LDD R27 , Y + 22 + 1
00b8d5 961a     +ADIW R26 , 10
00b8d6 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
00b8d8 89ae      	LDD  R26,Y+22
00b8d9 89bf      	LDD  R27,Y+22+1
00b8da 9614      	ADIW R26,4
00b8db 91ec      	LD   R30,X
00b8dc 62e0      	ORI  R30,0x20
00b8dd 93ec      	ST   X,R30
00b8de e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00b8df 940e e0d5 	CALL __LOADLOCR6
00b8e1 9668      	ADIW R28,24
00b8e2 9508      	RET
                 _f_sync:
00b8e3 93ba      	ST   -Y,R27
00b8e4 93aa      	ST   -Y,R26
00b8e5 9724      	SBIW R28,4
00b8e6 940e e0d0 	CALL __SAVELOCR4
00b8e8 940e da66 	CALL SUBOPT_0x3BF
00b8ea 85ea      	LDD  R30,Y+10
00b8eb 85fb      	LDD  R31,Y+10+1
00b8ec 940e db16 	CALL SUBOPT_0x3DB
00b8ee f011      	BREQ PC+3
00b8ef 940c b95f 	JMP _0x2060183
00b8f1 85e8      	LDD  R30,Y+8
00b8f2 85f9      	LDD  R31,Y+8+1
00b8f3 81a4      	LDD  R26,Z+4
00b8f4 72a0      	ANDI R26,LOW(0x20)
00b8f5 f411      	BRNE PC+3
00b8f6 940c b95f 	JMP _0x2060184
00b8f8 81a4      	LDD  R26,Z+4
00b8f9 74a0      	ANDI R26,LOW(0x40)
00b8fa f0a1      	BREQ _0x2060185
00b8fb 940e da50 	CALL SUBOPT_0x3BC
00b8fd 81e1      	LDD  R30,Z+1
00b8fe 93ea      	ST   -Y,R30
00b8ff 85e9      	LDD  R30,Y+9
00b900 85fa      	LDD  R31,Y+9+1
00b901 96b0      	ADIW R30,32
00b902 93fa      	ST   -Y,R31
00b903 93ea      	ST   -Y,R30
00b904 85eb      	LDD  R30,Y+11
00b905 85fc      	LDD  R31,Y+11+1
00b906 940e db7c 	CALL SUBOPT_0x3E9
00b908 f011      	BREQ _0x2060186
00b909 e0e1      	LDI  R30,LOW(1)
00b90a c055      	RJMP _0x20E000A
                 _0x2060186:
00b90b 85a8      	LDD  R26,Y+8
00b90c 85b9      	LDD  R27,Y+8+1
00b90d 940e db87 	CALL SUBOPT_0x3EA
                 _0x2060185:
00b90f 940e da66 	CALL SUBOPT_0x3BF
00b911 85ea      	LDD  R30,Y+10
00b912 85fb      	LDD  R31,Y+10+1
                +
00b913 8da2     +LDD R26 , Z + 26
00b914 8db3     +LDD R27 , Z + 26 + 1
00b915 8d84     +LDD R24 , Z + 26 + 2
00b916 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
00b917 940e db0e 	CALL SUBOPT_0x3D9
00b919 f011      	BREQ PC+3
00b91a 940c b95f 	JMP _0x2060187
00b91c 85a8      	LDD  R26,Y+8
00b91d 85b9      	LDD  R27,Y+8+1
00b91e 965e      	ADIW R26,30
00b91f 912d      	LD   R18,X+
00b920 913c      	LD   R19,X
00b921 01d9      	MOVW R26,R18
00b922 961b      	ADIW R26,11
00b923 91ec      	LD   R30,X
00b924 62e0      	ORI  R30,0x20
00b925 93ec      	ST   X,R30
00b926 85a8      	LDD  R26,Y+8
00b927 85b9      	LDD  R27,Y+8+1
00b928 961a      	ADIW R26,10
00b929 940e e02e 	CALL __GETD1P
                +
00b92b 01d9     +MOVW R26 , R18
00b92c 965c     +ADIW R26 , 28
00b92d 940e e039+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00b92f 85a8      	LDD  R26,Y+8
00b930 85b9      	LDD  R27,Y+8+1
00b931 961e      	ADIW R26,14
00b932 940e e02a 	CALL __GETW1P
                +
00b934 01d9     +MOVW R26 , R18
00b935 965a     +ADIW R26 , 26
00b936 93ed     +ST X + , R30
00b937 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
00b938 85e8      	LDD  R30,Y+8
00b939 85f9      	LDD  R31,Y+8+1
                +
00b93a 85a6     +LDD R26 , Z + 14
00b93b 85b7     +LDD R27 , Z + 14 + 1
00b93c 8980     +LDD R24 , Z + 14 + 2
00b93d 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00b93e 01fd      	MOVW R30,R26
00b93f 01bc      	MOVW R22,R24
00b940 940e df2b 	CALL __LSRD16
                +
00b942 01d9     +MOVW R26 , R18
00b943 9654     +ADIW R26 , 20
00b944 93ed     +ST X + , R30
00b945 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
00b946 940e aab6 	CALL _get_fattime
00b948 940e c4c9 	CALL SUBOPT_0xAD
                +
00b94a 01d9     +MOVW R26 , R18
00b94b 9656     +ADIW R26 , 22
00b94c 940e e039+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00b94e 85a8      	LDD  R26,Y+8
00b94f 85b9      	LDD  R27,Y+8+1
00b950 9614      	ADIW R26,4
00b951 91ec      	LD   R30,X
00b952 7def      	ANDI R30,0xDF
00b953 93ec      	ST   X,R30
00b954 940e da50 	CALL SUBOPT_0x3BC
00b956 9634      	ADIW R30,4
00b957 e0a1      	LDI  R26,LOW(1)
00b958 83a0      	STD  Z+0,R26
00b959 940e da50 	CALL SUBOPT_0x3BC
00b95b 01df      	MOVW R26,R30
00b95c 940e ac23 	CALL _sync_G103
00b95e 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00b95f 2fe1      	MOV  R30,R17
                 _0x20E000A:
00b960 940e e0d7 	CALL __LOADLOCR4
00b962 962a      	ADIW R28,10
00b963 9508      	RET
                 _f_close:
00b964 93ba      	ST   -Y,R27
00b965 93aa      	ST   -Y,R26
00b966 931a      	ST   -Y,R17
00b967 81a9      	LDD  R26,Y+1
00b968 81ba      	LDD  R27,Y+1+1
00b969 df79      	RCALL _f_sync
00b96a 2f1e      	MOV  R17,R30
00b96b 3010      	CPI  R17,0
00b96c f421      	BRNE _0x2060188
00b96d 81a9      	LDD  R26,Y+1
00b96e 81ba      	LDD  R27,Y+1+1
00b96f 940e c720 	CALL SUBOPT_0x112
                 _0x2060188:
00b971 2fe1      	MOV  R30,R17
00b972 c296      	RJMP _0x20E0005
                 _f_lseek:
00b973 940e e063 	CALL __PUTPARD2
00b975 9760      	SBIW R28,16
00b976 931a      	ST   -Y,R17
00b977 940e dbe6 	CALL SUBOPT_0x3F9
00b979 89ef      	LDD  R30,Y+23
00b97a 8df8      	LDD  R31,Y+23+1
00b97b 940e db16 	CALL SUBOPT_0x3DB
00b97d f009      	BREQ _0x2060191
00b97e c18c      	RJMP _0x20E0009
                 _0x2060191:
00b97f 89ed      	LDD  R30,Y+21
00b980 89fe      	LDD  R31,Y+21+1
00b981 81a4      	LDD  R26,Z+4
00b982 78a0      	ANDI R26,LOW(0x80)
00b983 f011      	BREQ _0x2060192
00b984 e0e2      	LDI  R30,LOW(2)
00b985 c186      	RJMP _0x20E0008
                 _0x2060192:
00b986 940e dbe9 	CALL SUBOPT_0x3FA
00b988 940e dbef 	CALL SUBOPT_0x3FB
00b98a 940e e0c4 	CALL __CPD12
00b98c f428      	BRSH _0x2060194
00b98d 89ed      	LDD  R30,Y+21
00b98e 89fe      	LDD  R31,Y+21+1
00b98f 81a4      	LDD  R26,Z+4
00b990 70a2      	ANDI R26,LOW(0x2)
00b991 f009      	BREQ _0x2060195
                 _0x2060194:
00b992 c004      	RJMP _0x2060193
                 _0x2060195:
00b993 940e dbe9 	CALL SUBOPT_0x3FA
00b995 940e dbf4 	CALL SUBOPT_0x3FC
                 _0x2060193:
00b997 89ad      	LDD  R26,Y+21
00b998 89be      	LDD  R27,Y+21+1
00b999 9616      	ADIW R26,6
00b99a 940e d95b 	CALL SUBOPT_0x39B
00b99c 940e da4b 	CALL SUBOPT_0x3BB
00b99e 940e da30 	CALL SUBOPT_0x3B6
00b9a0 940e dbf9 	CALL SUBOPT_0x3FD
00b9a2 9615      	ADIW R26,5
00b9a3 efef      	LDI  R30,LOW(255)
00b9a4 93ec      	ST   X,R30
00b9a5 940e dbef 	CALL SUBOPT_0x3FB
00b9a7 940e e0be 	CALL __CPD02
00b9a9 f010      	BRLO PC+3
00b9aa 940c bab7 	JMP _0x2060196
00b9ac 940e dc01 	CALL SUBOPT_0x3FE
00b9ae 940e d0da 	CALL SUBOPT_0x292
00b9b0 940e df3b 	CALL __CWD1
                +
00b9b2 e0a0     +LDI R26 , LOW ( 0x200 )
00b9b3 e0b2     +LDI R27 , HIGH ( 0x200 )
00b9b4 e080     +LDI R24 , BYTE3 ( 0x200 )
00b9b5 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00b9b6 940e df5c 	CALL __MULD12U
00b9b8 940e d8fe 	CALL SUBOPT_0x38B
00b9ba 940e d0dd 	CALL SUBOPT_0x293
00b9bc 940e e0be 	CALL __CPD02
00b9be f498      	BRSH _0x2060198
00b9bf 940e dc06 	CALL SUBOPT_0x3FF
00b9c1 940e dc0b 	CALL SUBOPT_0x400
00b9c3 937f      	PUSH R23
00b9c4 936f      	PUSH R22
00b9c5 93ff      	PUSH R31
00b9c6 93ef      	PUSH R30
00b9c7 940e da1d 	CALL SUBOPT_0x3B3
00b9c9 940e dc0b 	CALL SUBOPT_0x400
00b9cb 91af      	POP  R26
00b9cc 91bf      	POP  R27
00b9cd 918f      	POP  R24
00b9ce 919f      	POP  R25
00b9cf 940e e0c9 	CALL __CPD21
00b9d1 f408      	BRSH _0x2060199
                 _0x2060198:
00b9d2 c021      	RJMP _0x2060197
                 _0x2060199:
00b9d3 940e da1d 	CALL SUBOPT_0x3B3
00b9d5 940e c5d0 	CALL SUBOPT_0xD9
00b9d7 01df      	MOVW R26,R30
00b9d8 01cb      	MOVW R24,R22
00b9d9 940e c305 	CALL SUBOPT_0x6B
00b9db 940e c5d0 	CALL SUBOPT_0xD9
00b9dd 940e df40 	CALL __COMD1
00b9df 940e deca 	CALL __ANDD12
00b9e1 940e dbf9 	CALL SUBOPT_0x3FD
00b9e3 9616      	ADIW R26,6
00b9e4 940e e02e 	CALL __GETD1P
00b9e6 940e dbef 	CALL SUBOPT_0x3FB
00b9e8 940e dec5 	CALL __SUBD21
                +
00b9ea 8ba9     +STD Y + 17 , R26
00b9eb 8bba     +STD Y + 17 + 1 , R27
00b9ec 8b8b     +STD Y + 17 + 2 , R24
00b9ed 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00b9ee 89ad      	LDD  R26,Y+21
00b9ef 89be      	LDD  R27,Y+21+1
00b9f0 9652      	ADIW R26,18
00b9f1 940e dc14 	CALL SUBOPT_0x401
00b9f3 c02b      	RJMP _0x206019A
                 _0x2060197:
00b9f4 89ad      	LDD  R26,Y+21
00b9f5 89be      	LDD  R27,Y+21+1
00b9f6 961e      	ADIW R26,14
00b9f7 940e dc14 	CALL SUBOPT_0x401
00b9f9 940e dc1b 	CALL SUBOPT_0x402
00b9fb 940e e0b2 	CALL __CPD10
00b9fd f4f9      	BRNE _0x206019B
00b9fe 940e dbe6 	CALL SUBOPT_0x3F9
00ba00 940e c151 	CALL SUBOPT_0x2C
00ba02 940e dc20 	CALL SUBOPT_0x403
00ba04 940e dc27 	CALL SUBOPT_0x404
00ba06 940e da22 	CALL SUBOPT_0x3B4
00ba08 f421      	BRNE _0x206019C
00ba09 940e dc2c 	CALL SUBOPT_0x405
00ba0b e0e2      	LDI  R30,LOW(2)
00ba0c c0ff      	RJMP _0x20E0008
                 _0x206019C:
00ba0d 940e dc27 	CALL SUBOPT_0x404
00ba0f 940e c1b7 	CALL SUBOPT_0x3A
00ba11 f421      	BRNE _0x206019D
00ba12 940e dc2c 	CALL SUBOPT_0x405
00ba14 e0e1      	LDI  R30,LOW(1)
00ba15 c0f6      	RJMP _0x20E0008
                 _0x206019D:
00ba16 940e dc1b 	CALL SUBOPT_0x402
                +
00ba18 89ad     +LDD R26 , Y + 21
00ba19 89be     +LDD R27 , Y + 21 + 1
00ba1a 961e     +ADIW R26 , 14
00ba1b 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00ba1d 940e dc33 	CALL SUBOPT_0x406
                 _0x206019A:
00ba1f 940e dc1b 	CALL SUBOPT_0x402
00ba21 940e e0b2 	CALL __CPD10
00ba23 f411      	BRNE PC+3
00ba24 940c bab7 	JMP _0x206019E
                 _0x206019F:
00ba26 940e c305 	CALL SUBOPT_0x6B
00ba28 940e dbef 	CALL SUBOPT_0x3FB
00ba2a 940e e0c4 	CALL __CPD12
00ba2c f010      	BRLO PC+3
00ba2d 940c ba7e 	JMP _0x20601A1
00ba2f 89ed      	LDD  R30,Y+21
00ba30 89fe      	LDD  R31,Y+21+1
00ba31 81a4      	LDD  R26,Z+4
00ba32 70a2      	ANDI R26,LOW(0x2)
00ba33 f089      	BREQ _0x20601A2
00ba34 940e dbe6 	CALL SUBOPT_0x3F9
00ba36 940e dc3a 	CALL SUBOPT_0x407
00ba38 940e dc20 	CALL SUBOPT_0x403
00ba3a 940e dc1b 	CALL SUBOPT_0x402
00ba3c 940e e0b2 	CALL __CPD10
00ba3e f429      	BRNE _0x20601A3
00ba3f 940e c305 	CALL SUBOPT_0x6B
00ba41 940e dbf4 	CALL SUBOPT_0x3FC
00ba43 c03a      	RJMP _0x20601A1
                 _0x20601A3:
00ba44 c00a      	RJMP _0x20601A4
                 _0x20601A2:
00ba45 940e dbe6 	CALL SUBOPT_0x3F9
00ba47 940e dc3a 	CALL SUBOPT_0x407
00ba49 940e ac97 	CALL _get_fat
                +
00ba4b 87ed     +STD Y + 13 , R30
00ba4c 87fe     +STD Y + 13 + 1 , R31
00ba4d 876f     +STD Y + 13 + 2 , R22
00ba4e 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
                 _0x20601A4:
00ba4f 940e dc27 	CALL SUBOPT_0x404
00ba51 940e c1b7 	CALL SUBOPT_0x3A
00ba53 f421      	BRNE _0x20601A5
00ba54 940e dc2c 	CALL SUBOPT_0x405
00ba56 e0e1      	LDI  R30,LOW(1)
00ba57 c0b4      	RJMP _0x20E0008
                 _0x20601A5:
00ba58 940e dc27 	CALL SUBOPT_0x404
00ba5a 940e d9a6 	CALL SUBOPT_0x3A4
00ba5c f048      	BRLO _0x20601A7
00ba5d 940e dc01 	CALL SUBOPT_0x3FE
00ba5f 940e da8a 	CALL SUBOPT_0x3C6
00ba61 940e dc27 	CALL SUBOPT_0x404
00ba63 940e e0c9 	CALL __CPD21
00ba65 f020      	BRLO _0x20601A6
                 _0x20601A7:
00ba66 940e dc2c 	CALL SUBOPT_0x405
00ba68 e0e2      	LDI  R30,LOW(2)
00ba69 c0a2      	RJMP _0x20E0008
                 _0x20601A6:
00ba6a 940e dc33 	CALL SUBOPT_0x406
00ba6c 940e dc3f 	CALL SUBOPT_0x408
00ba6e 940e d92f 	CALL SUBOPT_0x393
00ba70 940e deb6 	CALL __ADDD12
00ba72 01d0      	MOVW R26,R0
00ba73 940e e039 	CALL __PUTDP1
00ba75 940e d92f 	CALL SUBOPT_0x393
00ba77 940e dc06 	CALL SUBOPT_0x3FF
00ba79 940e dec0 	CALL __SUBD12
00ba7b 940e dbf4 	CALL SUBOPT_0x3FC
00ba7d cfa8      	RJMP _0x206019F
                 _0x20601A1:
00ba7e 940e dc3f 	CALL SUBOPT_0x408
00ba80 940e dbef 	CALL SUBOPT_0x3FB
00ba82 940e deb6 	CALL __ADDD12
00ba84 01d0      	MOVW R26,R0
00ba85 940e e039 	CALL __PUTDP1
00ba87 940e dbef 	CALL SUBOPT_0x3FB
                +
00ba89 e0e0     +LDI R30 , LOW ( 0x200 )
00ba8a e0f2     +LDI R31 , HIGH ( 0x200 )
00ba8b e060     +LDI R22 , BYTE3 ( 0x200 )
00ba8c e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00ba8d 940e dfb2 	CALL __DIVD21U
                +
00ba8f 89ad     +LDD R26 , Y + 21
00ba90 89be     +LDD R27 , Y + 21 + 1
00ba91 9615     +ADIW R26 , 5
00ba92 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
00ba93 940e dc06 	CALL SUBOPT_0x3FF
00ba95 70f1      	ANDI R31,HIGH(0x1FF)
00ba96 9730      	SBIW R30,0
00ba97 f0f9      	BREQ _0x20601A9
00ba98 940e dbe6 	CALL SUBOPT_0x3F9
00ba9a 940e dc3a 	CALL SUBOPT_0x407
00ba9c 940e aed2 	CALL _clust2sect
00ba9e 940e da30 	CALL SUBOPT_0x3B6
00baa0 940e d962 	CALL SUBOPT_0x39C
00baa2 940e e0b2 	CALL __CPD10
00baa4 f421      	BRNE _0x20601AA
00baa5 940e dc2c 	CALL SUBOPT_0x405
00baa7 e0e2      	LDI  R30,LOW(2)
00baa8 c063      	RJMP _0x20E0008
                 _0x20601AA:
00baa9 89ed      	LDD  R30,Y+21
00baaa 89fe      	LDD  R31,Y+21+1
00baab 81e5      	LDD  R30,Z+5
00baac e0f0      	LDI  R31,0
00baad 940e da0f 	CALL SUBOPT_0x3B1
00baaf 940e c4c4 	CALL SUBOPT_0xAC
00bab1 940e da30 	CALL SUBOPT_0x3B6
00bab3 89ad      	LDD  R26,Y+21
00bab4 89be      	LDD  R27,Y+21+1
00bab5 940e db8c 	CALL SUBOPT_0x3EB
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
00bab7 940e dc47 	CALL SUBOPT_0x409
00bab9 940e db24 	CALL SUBOPT_0x3DD
00babb f051      	BREQ _0x20601AC
00babc 89ad      	LDD  R26,Y+21
00babd 89be      	LDD  R27,Y+21+1
00babe 9656      	ADIW R26,22
00babf 940e e02e 	CALL __GETD1P
00bac1 940e da0f 	CALL SUBOPT_0x3B1
00bac3 940e e0c4 	CALL __CPD12
00bac5 f409      	BRNE _0x20601AD
                 _0x20601AC:
00bac6 c02b      	RJMP _0x20601AB
                 _0x20601AD:
00bac7 89ed      	LDD  R30,Y+21
00bac8 89fe      	LDD  R31,Y+21+1
00bac9 81a4      	LDD  R26,Z+4
00baca 74a0      	ANDI R26,LOW(0x40)
00bacb f089      	BREQ _0x20601AE
00bacc 940e dc01 	CALL SUBOPT_0x3FE
00bace 81e1      	LDD  R30,Z+1
00bacf 93ea      	ST   -Y,R30
00bad0 940e dbde 	CALL SUBOPT_0x3F8
00bad2 940e db7c 	CALL SUBOPT_0x3E9
00bad4 f021      	BREQ _0x20601AF
00bad5 940e dc2c 	CALL SUBOPT_0x405
00bad7 e0e1      	LDI  R30,LOW(1)
00bad8 c033      	RJMP _0x20E0008
                 _0x20601AF:
00bad9 89ad      	LDD  R26,Y+21
00bada 89be      	LDD  R27,Y+21+1
00badb 940e db87 	CALL SUBOPT_0x3EA
                 _0x20601AE:
00badd 940e dc01 	CALL SUBOPT_0x3FE
00badf 81e1      	LDD  R30,Z+1
00bae0 93ea      	ST   -Y,R30
00bae1 89ee      	LDD  R30,Y+22
00bae2 89ff      	LDD  R31,Y+22+1
00bae3 96b0      	ADIW R30,32
00bae4 940e d97c 	CALL SUBOPT_0x39F
00bae6 f021      	BREQ _0x20601B0
00bae7 940e dc2c 	CALL SUBOPT_0x405
00bae9 e0e1      	LDI  R30,LOW(1)
00baea c021      	RJMP _0x20E0008
                 _0x20601B0:
00baeb 940e d962 	CALL SUBOPT_0x39C
                +
00baed 89ad     +LDD R26 , Y + 21
00baee 89be     +LDD R27 , Y + 21 + 1
00baef 9656     +ADIW R26 , 22
00baf0 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
00baf2 940e dc47 	CALL SUBOPT_0x409
00baf4 010d      	MOVW R0,R26
00baf5 940e dbe9 	CALL SUBOPT_0x3FA
00baf7 01d0      	MOVW R26,R0
00baf8 940e e0c4 	CALL __CPD12
00bafa f480      	BRSH _0x20601B1
00bafb 89ad      	LDD  R26,Y+21
00bafc 89be      	LDD  R27,Y+21+1
00bafd 9616      	ADIW R26,6
00bafe 940e e02e 	CALL __GETD1P
                +
00bb00 89ad     +LDD R26 , Y + 21
00bb01 89be     +LDD R27 , Y + 21 + 1
00bb02 961a     +ADIW R26 , 10
00bb03 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 21,10
00bb05 89ad      	LDD  R26,Y+21
00bb06 89be      	LDD  R27,Y+21+1
00bb07 9614      	ADIW R26,4
00bb08 91ec      	LD   R30,X
00bb09 62e0      	ORI  R30,0x20
00bb0a 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
00bb0b 2fe1      	MOV  R30,R17
                 _0x20E0008:
00bb0c 8118      	LDD  R17,Y+0
00bb0d 9667      	ADIW R28,23
00bb0e 9508      	RET
                 _f_getfree:
00bb0f 93ba      	ST   -Y,R27
00bb10 93aa      	ST   -Y,R26
00bb11 9760      	SBIW R28,16
00bb12 940e e0ce 	CALL __SAVELOCR6
00bb14 01fe      	MOVW R30,R28
00bb15 967a      	ADIW R30,26
00bb16 93fa      	ST   -Y,R31
00bb17 93ea      	ST   -Y,R30
00bb18 940e d13a 	CALL SUBOPT_0x2A2
00bb1a e0a0      	LDI  R26,LOW(0)
00bb1b 940e b27d 	CALL _chk_mounted
00bb1d 2f1e      	MOV  R17,R30
00bb1e 3010      	CPI  R17,0
00bb1f f011      	BREQ _0x20601C3
00bb20 2fe1      	MOV  R30,R17
00bb21 c0c9      	RJMP _0x20E0006
                 _0x20601C3:
00bb22 940e dbb6 	CALL SUBOPT_0x3F2
00bb24 010f      	MOVW R0,R30
00bb25 963e      	ADIW R30,14
00bb26 01df      	MOVW R26,R30
00bb27 940e e02e 	CALL __GETD1P
00bb29 937f      	PUSH R23
00bb2a 936f      	PUSH R22
00bb2b 93ff      	PUSH R31
00bb2c 93ef      	PUSH R30
00bb2d 01d0      	MOVW R26,R0
00bb2e 965e      	ADIW R26,30
00bb2f 940e e02e 	CALL __GETD1P
                +
00bb31 50e2     +SUBI R30 , LOW ( 2 )
00bb32 40f0     +SBCI R31 , HIGH ( 2 )
00bb33 4060     +SBCI R22 , BYTE3 ( 2 )
00bb34 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00bb35 91af      	POP  R26
00bb36 91bf      	POP  R27
00bb37 918f      	POP  R24
00bb38 919f      	POP  R25
00bb39 940e e0c4 	CALL __CPD12
00bb3b f038      	BRLO _0x20601C4
00bb3c 940e dbb6 	CALL SUBOPT_0x3F2
00bb3e 963e      	ADIW R30,14
00bb3f 01df      	MOVW R26,R30
00bb40 940e e02e 	CALL __GETD1P
00bb42 c0a3      	RJMP _0x20E0007
                 _0x20601C4:
00bb43 940e dbb6 	CALL SUBOPT_0x3F2
00bb45 8100      	LD   R16,Z
00bb46 e0e0      	LDI  R30,LOW(0)
                +
00bb47 8bea     +STD Y + 18 , R30
00bb48 8beb     +STD Y + 18 + 1 , R30
00bb49 8bec     +STD Y + 18 + 2 , R30
00bb4a 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
00bb4b 3001      	CPI  R16,1
00bb4c f5b9      	BRNE _0x20601C5
00bb4d 940e da3f 	CALL SUBOPT_0x3B9
00bb4f 940e daf9 	CALL SUBOPT_0x3D6
                 _0x20601C7:
00bb51 940e dba6 	CALL SUBOPT_0x3EF
00bb53 940e ce14 	CALL SUBOPT_0x229
00bb55 940e ac97 	CALL _get_fat
00bb57 940e c4f2 	CALL SUBOPT_0xB5
00bb59 940e c297 	CALL SUBOPT_0x59
00bb5b 940e c1b7 	CALL SUBOPT_0x3A
00bb5d f411      	BRNE _0x20601C9
00bb5e e0e1      	LDI  R30,LOW(1)
00bb5f c08b      	RJMP _0x20E0006
                 _0x20601C9:
00bb60 940e c297 	CALL SUBOPT_0x59
00bb62 940e da22 	CALL SUBOPT_0x3B4
00bb64 f411      	BRNE _0x20601CA
00bb65 e0e2      	LDI  R30,LOW(2)
00bb66 c084      	RJMP _0x20E0006
                 _0x20601CA:
00bb67 940e c4ed 	CALL SUBOPT_0xB4
00bb69 940e e0b2 	CALL __CPD10
00bb6b f411      	BRNE _0x20601CB
00bb6c 940e dc4e 	CALL SUBOPT_0x40A
                 _0x20601CB:
00bb6e 940e c2be 	CALL SUBOPT_0x60
00bb70 940e c514 	CALL SUBOPT_0xBB
00bb72 940e daf9 	CALL SUBOPT_0x3D6
00bb74 937f      	PUSH R23
00bb75 936f      	PUSH R22
00bb76 93ff      	PUSH R31
00bb77 93ef      	PUSH R30
00bb78 940e dbb6 	CALL SUBOPT_0x3F2
00bb7a 940e da8a 	CALL SUBOPT_0x3C6
00bb7c 91af      	POP  R26
00bb7d 91bf      	POP  R27
00bb7e 918f      	POP  R24
00bb7f 919f      	POP  R25
00bb80 940e e0c9 	CALL __CPD21
00bb82 f270      	BRLO _0x20601C7
00bb83 c052      	RJMP _0x20601CC
                 _0x20601C5:
00bb84 940e dbb6 	CALL SUBOPT_0x3F2
00bb86 940e da8a 	CALL SUBOPT_0x3C6
00bb88 940e daf9 	CALL SUBOPT_0x3D6
00bb8a 940e dbb6 	CALL SUBOPT_0x3F2
00bb8c 96b2      	ADIW R30,34
00bb8d 01df      	MOVW R26,R30
00bb8e 940e e02e 	CALL __GETD1P
00bb90 940e d6fd 	CALL SUBOPT_0x349
00bb92 940e c01b 	CALL SUBOPT_0x0
                 _0x20601CE:
00bb94 2e02      	MOV  R0,R18
00bb95 2a03      	OR   R0,R19
00bb96 f4c1      	BRNE _0x20601D0
00bb97 940e dba6 	CALL SUBOPT_0x3EF
00bb99 940e c5cb 	CALL SUBOPT_0xD8
00bb9b 940e c514 	CALL SUBOPT_0xBB
00bb9d 940e c63c 	CALL SUBOPT_0xE9
00bb9f 9731      	SBIW R30,1
00bba0 4060      	SBCI R22,0
00bba1 4070      	SBCI R23,0
00bba2 01df      	MOVW R26,R30
00bba3 01cb      	MOVW R24,R22
00bba4 940e db0e 	CALL SUBOPT_0x3D9
00bba6 f011      	BREQ _0x20601D1
00bba7 2fe1      	MOV  R30,R17
00bba8 c042      	RJMP _0x20E0006
                 _0x20601D1:
00bba9 940e dbb6 	CALL SUBOPT_0x3F2
00bbab 96f2      	ADIW R30,50
00bbac 01af      	MOVW R20,R30
                +
00bbad e020     +LDI R18 , LOW ( 512 )
00bbae e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
00bbaf 3002      	CPI  R16,2
00bbb0 f461      	BRNE _0x20601D2
00bbb1 01da      	MOVW R26,R20
00bbb2 940e e02a 	CALL __GETW1P
00bbb4 9730      	SBIW R30,0
00bbb5 f411      	BRNE _0x20601D3
00bbb6 940e dc4e 	CALL SUBOPT_0x40A
                 _0x20601D3:
                +
00bbb8 5f4e     +SUBI R20 , LOW ( - 2 )
00bbb9 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
00bbba 5022     +SUBI R18 , LOW ( 2 )
00bbbb 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
00bbbc c010      	RJMP _0x20601D4
                 _0x20601D2:
00bbbd 01da      	MOVW R26,R20
00bbbe 940e e02e 	CALL __GETD1P
                +
00bbc0 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00bbc1 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00bbc2 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00bbc3 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00bbc4 940e e0b2 	CALL __CPD10
00bbc6 f411      	BRNE _0x20601D5
00bbc7 940e dc4e 	CALL SUBOPT_0x40A
                 _0x20601D5:
                +
00bbc9 5f4c     +SUBI R20 , LOW ( - 4 )
00bbca 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
00bbcb 5024     +SUBI R18 , LOW ( 4 )
00bbcc 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
00bbcd 940e c2be 	CALL SUBOPT_0x60
00bbcf 9731      	SBIW R30,1
00bbd0 4060      	SBCI R22,0
00bbd1 4070      	SBCI R23,0
00bbd2 940e daf9 	CALL SUBOPT_0x3D6
00bbd4 f009      	BREQ _0x20601CF
00bbd5 cfbe      	RJMP _0x20601CE
                 _0x20601CF:
                 _0x20601CC:
00bbd6 940e dbb6 	CALL SUBOPT_0x3F2
00bbd8 963e      	ADIW R30,14
00bbd9 940e da3a 	CALL SUBOPT_0x3B8
00bbdb 940e cf72 	CALL SUBOPT_0x25C
00bbdd 3003      	CPI  R16,3
00bbde f429      	BRNE _0x20601D6
00bbdf 940e dbb6 	CALL SUBOPT_0x3F2
00bbe1 9635      	ADIW R30,5
00bbe2 e0a1      	LDI  R26,LOW(1)
00bbe3 83a0      	STD  Z+0,R26
                 _0x20601D6:
00bbe4 940e c5b5 	CALL SUBOPT_0xD3
                 _0x20E0007:
00bbe6 8da8      	LDD  R26,Y+24
00bbe7 8db9      	LDD  R27,Y+24+1
00bbe8 940e e039 	CALL __PUTDP1
00bbea e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
00bbeb 940e e0d5 	CALL __LOADLOCR6
00bbed 966c      	ADIW R28,28
00bbee 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00bbef 93aa      	ST   -Y,R26
                 _0x2080003:
00bbf0 91e0 00c0 	LDS  R30,192
00bbf2 72e0      	ANDI R30,LOW(0x20)
00bbf3 f3e1      	BREQ _0x2080003
00bbf4 81e8      	LD   R30,Y
00bbf5 93e0 00c6 	STS  198,R30
00bbf7 9621      	ADIW R28,1
00bbf8 9508      	RET
                 _puts:
00bbf9 93ba      	ST   -Y,R27
00bbfa 93aa      	ST   -Y,R26
00bbfb 931a      	ST   -Y,R17
                 _0x2080006:
00bbfc 81a9      	LDD  R26,Y+1
00bbfd 81ba      	LDD  R27,Y+1+1
00bbfe 91ed      	LD   R30,X+
00bbff 83a9      	STD  Y+1,R26
00bc00 83ba      	STD  Y+1+1,R27
00bc01 2f1e      	MOV  R17,R30
00bc02 30e0      	CPI  R30,0
00bc03 f019      	BREQ _0x2080008
00bc04 2fa1      	MOV  R26,R17
00bc05 dfe9      	RCALL _putchar
00bc06 cff5      	RJMP _0x2080006
                 _0x2080008:
00bc07 e0aa      	LDI  R26,LOW(10)
00bc08 dfe6      	RCALL _putchar
                 _0x20E0005:
00bc09 8118      	LDD  R17,Y+0
00bc0a 9623      	ADIW R28,3
00bc0b 9508      	RET
                 _put_buff_G104:
00bc0c 940e c3a0 	CALL SUBOPT_0x81
00bc0e 81aa      	LDD  R26,Y+2
00bc0f 81bb      	LDD  R27,Y+2+1
00bc10 9612      	ADIW R26,2
00bc11 940e e02a 	CALL __GETW1P
00bc13 9730      	SBIW R30,0
00bc14 f129      	BREQ _0x208002A
00bc15 81aa      	LDD  R26,Y+2
00bc16 81bb      	LDD  R27,Y+2+1
00bc17 9614      	ADIW R26,4
00bc18 940e e02a 	CALL __GETW1P
00bc1a 018f      	MOVW R16,R30
00bc1b 9730      	SBIW R30,0
00bc1c f061      	BREQ _0x208002C
                +
00bc1d 3002     +CPI R16 , LOW ( 2 )
00bc1e e0e0     +LDI R30 , HIGH ( 2 )
00bc1f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00bc20 f0c0      	BRLO _0x208002D
00bc21 01f8      	MOVW R30,R16
00bc22 9731      	SBIW R30,1
00bc23 018f      	MOVW R16,R30
                +
00bc24 81aa     +LDD R26 , Y + 2
00bc25 81bb     +LDD R27 , Y + 2 + 1
00bc26 9614     +ADIW R26 , 4
00bc27 93ed     +ST X + , R30
00bc28 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
00bc29 81aa      	LDD  R26,Y+2
00bc2a 81bb      	LDD  R27,Y+2+1
00bc2b 9612      	ADIW R26,2
00bc2c 940e c383 	CALL SUBOPT_0x7C
00bc2e 9731      	SBIW R30,1
00bc2f 81ac      	LDD  R26,Y+4
00bc30 83a0      	STD  Z+0,R26
00bc31 81aa      	LDD  R26,Y+2
00bc32 81bb      	LDD  R27,Y+2+1
00bc33 940e e02a 	CALL __GETW1P
00bc35 23ff      	TST  R31
00bc36 f012      	BRMI _0x208002E
00bc37 940e c383 	CALL SUBOPT_0x7C
                 _0x208002E:
                 _0x208002D:
00bc39 c006      	RJMP _0x208002F
                 _0x208002A:
00bc3a 81aa      	LDD  R26,Y+2
00bc3b 81bb      	LDD  R27,Y+2+1
00bc3c efef      	LDI  R30,LOW(65535)
00bc3d efff      	LDI  R31,HIGH(65535)
00bc3e 93ed      	ST   X+,R30
00bc3f 93fc      	ST   X,R31
                 _0x208002F:
00bc40 8119      	LDD  R17,Y+1
00bc41 8108      	LDD  R16,Y+0
00bc42 9625      	ADIW R28,5
00bc43 9508      	RET
                 __ftoe_G104:
00bc44 93ba      	ST   -Y,R27
00bc45 93aa      	ST   -Y,R26
00bc46 9724      	SBIW R28,4
00bc47 e0e0      	LDI  R30,LOW(0)
00bc48 83e8      	ST   Y,R30
00bc49 83e9      	STD  Y+1,R30
00bc4a e8e0      	LDI  R30,LOW(128)
00bc4b 83ea      	STD  Y+2,R30
00bc4c e3ef      	LDI  R30,LOW(63)
00bc4d 83eb      	STD  Y+3,R30
00bc4e 940e e0d0 	CALL __SAVELOCR4
00bc50 85ee      	LDD  R30,Y+14
00bc51 85ff      	LDD  R31,Y+14+1
00bc52 3fef      	CPI  R30,LOW(0xFFFF)
00bc53 efaf      	LDI  R26,HIGH(0xFFFF)
00bc54 07fa      	CPC  R31,R26
00bc55 f459      	BRNE _0x2080037
00bc56 940e ca2b 	CALL SUBOPT_0x192
                +
00bc58 eea2     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
00bc59 e6b8     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
00bc5a e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
00bc5b e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
00bc5c 940e a5a1 	CALL _strcpyf
00bc5e 940e e0d7 	CALL __LOADLOCR4
00bc60 c33c      	RJMP _0x20E0003
                 _0x2080037:
00bc61 3fef      	CPI  R30,LOW(0x7FFF)
00bc62 e7af      	LDI  R26,HIGH(0x7FFF)
00bc63 07fa      	CPC  R31,R26
00bc64 f459      	BRNE _0x2080036
00bc65 940e ca2b 	CALL SUBOPT_0x192
                +
00bc67 eea3     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
00bc68 e6b8     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
00bc69 e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
00bc6a e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
00bc6b 940e a5a1 	CALL _strcpyf
00bc6d 940e e0d7 	CALL __LOADLOCR4
00bc6f c32d      	RJMP _0x20E0003
                 _0x2080036:
00bc70 85ab      	LDD  R26,Y+11
00bc71 30a7      	CPI  R26,LOW(0x7)
00bc72 f010      	BRLO _0x2080039
00bc73 e0e6      	LDI  R30,LOW(6)
00bc74 87eb      	STD  Y+11,R30
                 _0x2080039:
00bc75 851b      	LDD  R17,Y+11
                 _0x208003A:
00bc76 2fe1      	MOV  R30,R17
00bc77 5011      	SUBI R17,1
00bc78 30e0      	CPI  R30,0
00bc79 f029      	BREQ _0x208003C
00bc7a 940e dc53 	CALL SUBOPT_0x40B
00bc7c 940e c4aa 	CALL SUBOPT_0xA7
00bc7e cff7      	RJMP _0x208003A
                 _0x208003C:
00bc7f 940e c5cb 	CALL SUBOPT_0xD8
00bc81 940e e0b2 	CALL __CPD10
00bc83 f431      	BRNE _0x208003D
00bc84 e030      	LDI  R19,LOW(0)
00bc85 940e dc53 	CALL SUBOPT_0x40B
00bc87 940e c4aa 	CALL SUBOPT_0xA7
00bc89 c034      	RJMP _0x208003E
                 _0x208003D:
00bc8a 853b      	LDD  R19,Y+11
00bc8b 940e ce19 	CALL SUBOPT_0x22A
00bc8d 940e de92 	CALL __CMPF12
00bc8f f009      	BREQ PC+2
00bc90 f410      	BRCC PC+3
00bc91 940c bca1 	JMP  _0x208003F
00bc93 940e dc53 	CALL SUBOPT_0x40B
00bc95 940e c4aa 	CALL SUBOPT_0xA7
                 _0x2080040:
00bc97 940e ce19 	CALL SUBOPT_0x22A
00bc99 940e de92 	CALL __CMPF12
00bc9b f020      	BRLO _0x2080042
00bc9c 940e dc56 	CALL SUBOPT_0x40C
00bc9e 5f3f      	SUBI R19,-LOW(1)
00bc9f cff7      	RJMP _0x2080040
                 _0x2080042:
00bca0 c00f      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
00bca1 940e ce19 	CALL SUBOPT_0x22A
00bca3 940e de92 	CALL __CMPF12
00bca5 f430      	BRSH _0x2080046
00bca6 940e d93a 	CALL SUBOPT_0x395
00bca8 940e c63c 	CALL SUBOPT_0xE9
00bcaa 5031      	SUBI R19,LOW(1)
00bcab cff5      	RJMP _0x2080044
                 _0x2080046:
00bcac 940e dc53 	CALL SUBOPT_0x40B
00bcae 940e c4aa 	CALL SUBOPT_0xA7
                 _0x2080043:
00bcb0 940e c5cb 	CALL SUBOPT_0xD8
00bcb2 940e d91f 	CALL SUBOPT_0x390
00bcb4 940e c63c 	CALL SUBOPT_0xE9
00bcb6 940e ce19 	CALL SUBOPT_0x22A
00bcb8 940e de92 	CALL __CMPF12
00bcba f018      	BRLO _0x2080047
00bcbb 940e dc56 	CALL SUBOPT_0x40C
00bcbd 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
00bcbe e010      	LDI  R17,LOW(0)
                 _0x2080048:
00bcbf 85eb      	LDD  R30,Y+11
00bcc0 17e1      	CP   R30,R17
00bcc1 f1a8      	BRLO _0x208004A
00bcc2 940e c4af 	CALL SUBOPT_0xA8
                +
00bcc4 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00bcc5 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00bcc6 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00bcc7 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00bcc8 940e ddff 	CALL __MULF12
00bcca 940e d91f 	CALL SUBOPT_0x390
00bccc 01df      	MOVW R26,R30
00bccd 01cb      	MOVW R24,R22
00bcce 940e c004 	CALL _floor
00bcd0 940e c4c9 	CALL SUBOPT_0xAD
00bcd2 940e c075 	CALL SUBOPT_0xB
00bcd4 940e de4d 	CALL __DIVF21
00bcd6 940e dd3c 	CALL __CFD1U
00bcd8 2f0e      	MOV  R16,R30
00bcd9 940e dc5d 	CALL SUBOPT_0x40D
00bcdb 2fe0      	MOV  R30,R16
00bcdc 5de0      	SUBI R30,-LOW(48)
00bcdd 93ec      	ST   X,R30
00bcde 2fe0      	MOV  R30,R16
00bcdf 27ff      	CLR  R31
00bce0 2766      	CLR  R22
00bce1 2777      	CLR  R23
00bce2 940e dd75 	CALL __CDF1
00bce4 940e c4af 	CALL SUBOPT_0xA8
00bce6 940e ddff 	CALL __MULF12
00bce8 940e c075 	CALL SUBOPT_0xB
00bcea 940e cd89 	CALL SUBOPT_0x218
00bcec 940e c63c 	CALL SUBOPT_0xE9
00bcee 2fe1      	MOV  R30,R17
00bcef 5f1f      	SUBI R17,-1
00bcf0 30e0      	CPI  R30,0
00bcf1 f669      	BRNE _0x2080048
00bcf2 940e dc5d 	CALL SUBOPT_0x40D
00bcf4 e2ee      	LDI  R30,LOW(46)
00bcf5 93ec      	ST   X,R30
00bcf6 cfc8      	RJMP _0x2080048
                 _0x208004A:
00bcf7 940e c399 	CALL SUBOPT_0x80
00bcf9 85aa      	LDD  R26,Y+10
00bcfa 83a0      	STD  Z+0,R26
00bcfb 3030      	CPI  R19,0
00bcfc f42c      	BRGE _0x208004C
00bcfd 9531      	NEG  R19
00bcfe 85a8      	LDD  R26,Y+8
00bcff 85b9      	LDD  R27,Y+8+1
00bd00 e2ed      	LDI  R30,LOW(45)
00bd01 c003      	RJMP _0x2080137
                 _0x208004C:
00bd02 85a8      	LDD  R26,Y+8
00bd03 85b9      	LDD  R27,Y+8+1
00bd04 e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
00bd05 93ec      	ST   X,R30
00bd06 85e8      	LDD  R30,Y+8
00bd07 85f9      	LDD  R31,Y+8+1
00bd08 9631      	ADIW R30,1
00bd09 940e ca28 	CALL SUBOPT_0x191
00bd0b 9631      	ADIW R30,1
00bd0c 87e8      	STD  Y+8,R30
00bd0d 87f9      	STD  Y+8+1,R31
00bd0e 9731      	SBIW R30,1
00bd0f 01bf      	MOVW R22,R30
00bd10 2fa3      	MOV  R26,R19
00bd11 e0ea      	LDI  R30,LOW(10)
00bd12 940e df95 	CALL __DIVB21
00bd14 5de0      	SUBI R30,-LOW(48)
00bd15 01db      	MOVW R26,R22
00bd16 93ec      	ST   X,R30
00bd17 940e c399 	CALL SUBOPT_0x80
00bd19 01bf      	MOVW R22,R30
00bd1a 2fa3      	MOV  R26,R19
00bd1b e0ea      	LDI  R30,LOW(10)
00bd1c 940e dfdc 	CALL __MODB21
00bd1e 5de0      	SUBI R30,-LOW(48)
00bd1f 01db      	MOVW R26,R22
00bd20 93ec      	ST   X,R30
00bd21 85a8      	LDD  R26,Y+8
00bd22 85b9      	LDD  R27,Y+8+1
00bd23 e0e0      	LDI  R30,LOW(0)
00bd24 93ec      	ST   X,R30
00bd25 940e e0d7 	CALL __LOADLOCR4
00bd27 c275      	RJMP _0x20E0003
                 __print_G104:
00bd28 93ba      	ST   -Y,R27
00bd29 93aa      	ST   -Y,R26
00bd2a 97ef      	SBIW R28,63
00bd2b 9765      	SBIW R28,21
00bd2c 940e e0ce 	CALL __SAVELOCR6
00bd2e e010      	LDI  R17,0
                +
00bd2f 01fe     +MOVW R30 , R28
00bd30 5ae4     +SUBI R30 , LOW ( - 92 )
00bd31 4fff     +SBCI R31 , HIGH ( - 92 )
00bd32 9001     +LD R0 , Z +
00bd33 9011     +LD R1 , Z +
00bd34 9161     +LD R22 , Z +
00bd35 8170     +LD R23 , Z
00bd36 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00bd37 940e d78a 	CALL SUBOPT_0x35E
                +
00bd39 01fe     +MOVW R30 , R28
00bd3a 5ae6     +SUBI R30 , LOW ( - 90 )
00bd3b 4fff     +SBCI R31 , HIGH ( - 90 )
00bd3c 9001     +LD R0 , Z +
00bd3d 81f0     +LD R31 , Z
00bd3e 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00bd3f 83ee      	STD  Y+6,R30
00bd40 83ff      	STD  Y+6+1,R31
00bd41 81ae      	LDD  R26,Y+6
00bd42 81bf      	LDD  R27,Y+6+1
00bd43 940e c720 	CALL SUBOPT_0x112
                 _0x208004E:
00bd45 01de      	MOVW R26,R28
00bd46 59ae      	SUBI R26,LOW(-(98))
00bd47 4fbf      	SBCI R27,HIGH(-(98))
00bd48 940e d953 	CALL SUBOPT_0x39A
                +
00bd4a bf6b     +OUT RAMPZ , R22
00bd4b 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00bd4c 2f2e      	MOV  R18,R30
00bd4d 30e0      	CPI  R30,0
00bd4e f411      	BRNE PC+3
00bd4f 940c bf38 	JMP _0x2080050
00bd51 2fe1      	MOV  R30,R17
00bd52 30e0      	CPI  R30,0
00bd53 f439      	BRNE _0x2080054
00bd54 3225      	CPI  R18,37
00bd55 f411      	BRNE _0x2080055
00bd56 e011      	LDI  R17,LOW(1)
00bd57 c002      	RJMP _0x2080056
                 _0x2080055:
00bd58 940e dc64 	CALL SUBOPT_0x40E
                 _0x2080056:
00bd5a c1dc      	RJMP _0x2080053
                 _0x2080054:
00bd5b 30e1      	CPI  R30,LOW(0x1)
00bd5c f4c1      	BRNE _0x2080057
00bd5d 3225      	CPI  R18,37
00bd5e f419      	BRNE _0x2080058
00bd5f 940e dc64 	CALL SUBOPT_0x40E
00bd61 c1d4      	RJMP _0x2080138
                 _0x2080058:
00bd62 e012      	LDI  R17,LOW(2)
00bd63 e0e0      	LDI  R30,LOW(0)
00bd64 8fe9      	STD  Y+25,R30
00bd65 e000      	LDI  R16,LOW(0)
00bd66 322d      	CPI  R18,45
00bd67 f411      	BRNE _0x2080059
00bd68 e001      	LDI  R16,LOW(1)
00bd69 c1cd      	RJMP _0x2080053
                 _0x2080059:
00bd6a 322b      	CPI  R18,43
00bd6b f419      	BRNE _0x208005A
00bd6c e2eb      	LDI  R30,LOW(43)
00bd6d 8fe9      	STD  Y+25,R30
00bd6e c1c8      	RJMP _0x2080053
                 _0x208005A:
00bd6f 3220      	CPI  R18,32
00bd70 f419      	BRNE _0x208005B
00bd71 e2e0      	LDI  R30,LOW(32)
00bd72 8fe9      	STD  Y+25,R30
00bd73 c1c3      	RJMP _0x2080053
                 _0x208005B:
00bd74 c002      	RJMP _0x208005C
                 _0x2080057:
00bd75 30e2      	CPI  R30,LOW(0x2)
00bd76 f439      	BRNE _0x208005D
                 _0x208005C:
00bd77 e050      	LDI  R21,LOW(0)
00bd78 e013      	LDI  R17,LOW(3)
00bd79 3320      	CPI  R18,48
00bd7a f411      	BRNE _0x208005E
00bd7b 6800      	ORI  R16,LOW(128)
00bd7c c1ba      	RJMP _0x2080053
                 _0x208005E:
00bd7d c002      	RJMP _0x208005F
                 _0x208005D:
00bd7e 30e3      	CPI  R30,LOW(0x3)
00bd7f f491      	BRNE _0x2080060
                 _0x208005F:
00bd80 3320      	CPI  R18,48
00bd81 f010      	BRLO _0x2080062
00bd82 332a      	CPI  R18,58
00bd83 f008      	BRLO _0x2080063
                 _0x2080062:
00bd84 c007      	RJMP _0x2080061
                 _0x2080063:
00bd85 e0aa      	LDI  R26,LOW(10)
00bd86 9f5a      	MUL  R21,R26
00bd87 2d50      	MOV  R21,R0
00bd88 2fe2      	MOV  R30,R18
00bd89 53e0      	SUBI R30,LOW(48)
00bd8a 0f5e      	ADD  R21,R30
00bd8b c1ab      	RJMP _0x2080053
                 _0x2080061:
00bd8c e040      	LDI  R20,LOW(0)
00bd8d 322e      	CPI  R18,46
00bd8e f411      	BRNE _0x2080064
00bd8f e014      	LDI  R17,LOW(4)
00bd90 c1a6      	RJMP _0x2080053
                 _0x2080064:
00bd91 c00f      	RJMP _0x2080065
                 _0x2080060:
00bd92 30e4      	CPI  R30,LOW(0x4)
00bd93 f499      	BRNE _0x2080067
00bd94 3320      	CPI  R18,48
00bd95 f010      	BRLO _0x2080069
00bd96 332a      	CPI  R18,58
00bd97 f008      	BRLO _0x208006A
                 _0x2080069:
00bd98 c008      	RJMP _0x2080068
                 _0x208006A:
00bd99 6200      	ORI  R16,LOW(32)
00bd9a e0aa      	LDI  R26,LOW(10)
00bd9b 9f4a      	MUL  R20,R26
00bd9c 2d40      	MOV  R20,R0
00bd9d 2fe2      	MOV  R30,R18
00bd9e 53e0      	SUBI R30,LOW(48)
00bd9f 0f4e      	ADD  R20,R30
00bda0 c196      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
00bda1 362c      	CPI  R18,108
00bda2 f419      	BRNE _0x208006B
00bda3 6002      	ORI  R16,LOW(2)
00bda4 e015      	LDI  R17,LOW(5)
00bda5 c191      	RJMP _0x2080053
                 _0x208006B:
00bda6 c004      	RJMP _0x208006C
                 _0x2080067:
00bda7 30e5      	CPI  R30,LOW(0x5)
00bda8 f011      	BREQ PC+3
00bda9 940c bf37 	JMP _0x2080053
                 _0x208006C:
00bdab 2fe2      	MOV  R30,R18
00bdac 36e3      	CPI  R30,LOW(0x63)
00bdad f459      	BRNE _0x2080071
00bdae 940e dc6c 	CALL SUBOPT_0x40F
00bdb0 940e dc73 	CALL SUBOPT_0x410
00bdb2 940e dc6c 	CALL SUBOPT_0x40F
00bdb4 81a4      	LDD  R26,Z+4
00bdb5 93aa      	ST   -Y,R26
00bdb6 940e dc7a 	CALL SUBOPT_0x411
00bdb8 c17d      	RJMP _0x2080072
                 _0x2080071:
00bdb9 34e5      	CPI  R30,LOW(0x45)
00bdba f011      	BREQ _0x2080075
00bdbb 36e5      	CPI  R30,LOW(0x65)
00bdbc f409      	BRNE _0x2080076
                 _0x2080075:
00bdbd c004      	RJMP _0x2080077
                 _0x2080076:
00bdbe 36e6      	CPI  R30,LOW(0x66)
00bdbf f011      	BREQ PC+3
00bdc0 940c be01 	JMP _0x2080078
                 _0x2080077:
00bdc2 01fe      	MOVW R30,R28
00bdc3 967a      	ADIW R30,26
00bdc4 8be8      	STD  Y+16,R30
00bdc5 8bf9      	STD  Y+16+1,R31
00bdc6 940e dc81 	CALL SUBOPT_0x412
00bdc8 940e e02e 	CALL __GETD1P
00bdca 940e c63c 	CALL SUBOPT_0xE9
00bdcc 940e dc88 	CALL SUBOPT_0x413
00bdce 85af      	LDD  R26,Y+15
00bdcf 23aa      	TST  R26
00bdd0 f022      	BRMI _0x2080079
00bdd1 8da9      	LDD  R26,Y+25
00bdd2 32ab      	CPI  R26,LOW(0x2B)
00bdd3 f049      	BREQ _0x208007B
00bdd4 c014      	RJMP _0x208007C
                 _0x2080079:
00bdd5 940e c5cb 	CALL SUBOPT_0xD8
00bdd7 940e dd09 	CALL __ANEGF1
00bdd9 940e c63c 	CALL SUBOPT_0xE9
00bddb e2ed      	LDI  R30,LOW(45)
00bddc 8fe9      	STD  Y+25,R30
                 _0x208007B:
00bddd ff07      	SBRS R16,7
00bdde c005      	RJMP _0x208007D
00bddf 8de9      	LDD  R30,Y+25
00bde0 93ea      	ST   -Y,R30
00bde1 940e dc7a 	CALL SUBOPT_0x411
00bde3 c005      	RJMP _0x208007E
                 _0x208007D:
00bde4 940e d934 	CALL SUBOPT_0x394
00bde6 9731      	SBIW R30,1
00bde7 8da9      	LDD  R26,Y+25
00bde8 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
00bde9 ff05      	SBRS R16,5
00bdea e046      	LDI  R20,LOW(6)
00bdeb 3626      	CPI  R18,102
00bdec f441      	BRNE _0x2080080
00bded 940e c920 	CALL SUBOPT_0x169
00bdef 934a      	ST   -Y,R20
00bdf0 89ad      	LDD  R26,Y+21
00bdf1 89be      	LDD  R27,Y+21+1
00bdf2 940e a29b 	CALL _ftoa
00bdf4 c007      	RJMP _0x2080081
                 _0x2080080:
00bdf5 940e c920 	CALL SUBOPT_0x169
00bdf7 934a      	ST   -Y,R20
00bdf8 932a      	ST   -Y,R18
00bdf9 89ae      	LDD  R26,Y+22
00bdfa 89bf      	LDD  R27,Y+22+1
00bdfb de48      	RCALL __ftoe_G104
                 _0x2080081:
00bdfc 01fe      	MOVW R30,R28
00bdfd 967a      	ADIW R30,26
00bdfe 940e dc8a 	CALL SUBOPT_0x414
00be00 c024      	RJMP _0x2080082
                 _0x2080078:
00be01 37e3      	CPI  R30,LOW(0x73)
00be02 f451      	BRNE _0x2080084
00be03 940e dc88 	CALL SUBOPT_0x413
00be05 940e dc81 	CALL SUBOPT_0x412
00be07 9614      	ADIW R26,4
00be08 940e e02a 	CALL __GETW1P
00be0a 940e dc8a 	CALL SUBOPT_0x414
00be0c c011      	RJMP _0x2080085
                 _0x2080084:
00be0d 37e0      	CPI  R30,LOW(0x70)
00be0e f4d9      	BRNE _0x2080087
00be0f 940e dc88 	CALL SUBOPT_0x413
00be11 940e dc81 	CALL SUBOPT_0x412
00be13 9614      	ADIW R26,4
00be14 940e e02e 	CALL __GETD1P
00be16 940e d78f 	CALL SUBOPT_0x35F
00be18 940e ce14 	CALL SUBOPT_0x229
00be1a 940e a5d3 	CALL _strlenf
00be1c 2f1e      	MOV  R17,R30
00be1d 6008      	ORI  R16,LOW(8)
                 _0x2080085:
00be1e 770f      	ANDI R16,LOW(127)
00be1f 3040      	CPI  R20,0
00be20 f011      	BREQ _0x2080089
00be21 1741      	CP   R20,R17
00be22 f008      	BRLO _0x208008A
                 _0x2080089:
00be23 c001      	RJMP _0x2080088
                 _0x208008A:
00be24 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
00be25 e040      	LDI  R20,LOW(0)
00be26 e0e0      	LDI  R30,LOW(0)
00be27 8fe8      	STD  Y+24,R30
00be28 e030      	LDI  R19,LOW(0)
00be29 c072      	RJMP _0x208008B
                 _0x2080087:
00be2a 36e4      	CPI  R30,LOW(0x64)
00be2b f011      	BREQ _0x208008E
00be2c 36e9      	CPI  R30,LOW(0x69)
00be2d f411      	BRNE _0x208008F
                 _0x208008E:
00be2e 6004      	ORI  R16,LOW(4)
00be2f c002      	RJMP _0x2080090
                 _0x208008F:
00be30 37e5      	CPI  R30,LOW(0x75)
00be31 f4a1      	BRNE _0x2080091
                 _0x2080090:
00be32 e0ea      	LDI  R30,LOW(10)
00be33 8fe8      	STD  Y+24,R30
00be34 ff01      	SBRS R16,1
00be35 c008      	RJMP _0x2080092
                +
00be36 e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00be37 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00be38 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00be39 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00be3a 940e cdee 	CALL SUBOPT_0x224
00be3c e01a      	LDI  R17,LOW(10)
00be3d c023      	RJMP _0x2080093
                 _0x2080092:
                +
00be3e e1e0     +LDI R30 , LOW ( 0x2710 )
00be3f e2f7     +LDI R31 , HIGH ( 0x2710 )
00be40 e060     +LDI R22 , BYTE3 ( 0x2710 )
00be41 e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00be42 940e cdee 	CALL SUBOPT_0x224
00be44 e015      	LDI  R17,LOW(5)
00be45 c01b      	RJMP _0x2080093
                 _0x2080091:
00be46 35e8      	CPI  R30,LOW(0x58)
00be47 f411      	BRNE _0x2080095
00be48 6008      	ORI  R16,LOW(8)
00be49 c004      	RJMP _0x2080096
                 _0x2080095:
00be4a 37e8      	CPI  R30,LOW(0x78)
00be4b f011      	BREQ PC+3
00be4c 940c bf36 	JMP _0x20800D4
                 _0x2080096:
00be4e e1e0      	LDI  R30,LOW(16)
00be4f 8fe8      	STD  Y+24,R30
00be50 ff01      	SBRS R16,1
00be51 c008      	RJMP _0x2080098
                +
00be52 e0e0     +LDI R30 , LOW ( 0x10000000 )
00be53 e0f0     +LDI R31 , HIGH ( 0x10000000 )
00be54 e060     +LDI R22 , BYTE3 ( 0x10000000 )
00be55 e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00be56 940e cdee 	CALL SUBOPT_0x224
00be58 e018      	LDI  R17,LOW(8)
00be59 c007      	RJMP _0x2080093
                 _0x2080098:
                +
00be5a e0e0     +LDI R30 , LOW ( 0x1000 )
00be5b e1f0     +LDI R31 , HIGH ( 0x1000 )
00be5c e060     +LDI R22 , BYTE3 ( 0x1000 )
00be5d e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00be5e 940e cdee 	CALL SUBOPT_0x224
00be60 e014      	LDI  R17,LOW(4)
                 _0x2080093:
00be61 3040      	CPI  R20,0
00be62 f011      	BREQ _0x2080099
00be63 770f      	ANDI R16,LOW(127)
00be64 c001      	RJMP _0x208009A
                 _0x2080099:
00be65 e041      	LDI  R20,LOW(1)
                 _0x208009A:
00be66 ff01      	SBRS R16,1
00be67 c008      	RJMP _0x208009B
00be68 940e dc88 	CALL SUBOPT_0x413
00be6a 940e dc81 	CALL SUBOPT_0x412
00be6c 9614      	ADIW R26,4
00be6d 940e e02e 	CALL __GETD1P
00be6f c013      	RJMP _0x2080139
                 _0x208009B:
00be70 ff02      	SBRS R16,2
00be71 c00a      	RJMP _0x208009D
00be72 940e dc88 	CALL SUBOPT_0x413
00be74 940e dc81 	CALL SUBOPT_0x412
00be76 9614      	ADIW R26,4
00be77 940e e02a 	CALL __GETW1P
00be79 940e df3b 	CALL __CWD1
00be7b c007      	RJMP _0x2080139
                 _0x208009D:
00be7c 940e dc88 	CALL SUBOPT_0x413
00be7e 940e dc81 	CALL SUBOPT_0x412
00be80 9614      	ADIW R26,4
00be81 940e c0f9 	CALL SUBOPT_0x1E
                 _0x2080139:
                +
00be83 87ec     +STD Y + 12 , R30
00be84 87fd     +STD Y + 12 + 1 , R31
00be85 876e     +STD Y + 12 + 2 , R22
00be86 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00be87 ff02      	SBRS R16,2
00be88 c012      	RJMP _0x208009F
00be89 85af      	LDD  R26,Y+15
00be8a 23aa      	TST  R26
00be8b f442      	BRPL _0x20800A0
00be8c 940e c5cb 	CALL SUBOPT_0xD8
00be8e 940e ded8 	CALL __ANEGD1
00be90 940e c63c 	CALL SUBOPT_0xE9
00be92 e2ed      	LDI  R30,LOW(45)
00be93 8fe9      	STD  Y+25,R30
                 _0x20800A0:
00be94 8de9      	LDD  R30,Y+25
00be95 30e0      	CPI  R30,0
00be96 f019      	BREQ _0x20800A1
00be97 5f1f      	SUBI R17,-LOW(1)
00be98 5f4f      	SUBI R20,-LOW(1)
00be99 c001      	RJMP _0x20800A2
                 _0x20800A1:
00be9a 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
00be9b 2f34      	MOV  R19,R20
                 _0x208008B:
00be9c fd00      	SBRC R16,0
00be9d c014      	RJMP _0x20800A3
                 _0x20800A4:
00be9e 1715      	CP   R17,R21
00be9f f410      	BRSH _0x20800A7
00bea0 1735      	CP   R19,R21
00bea1 f008      	BRLO _0x20800A8
                 _0x20800A7:
00bea2 c00f      	RJMP _0x20800A6
                 _0x20800A8:
00bea3 ff07      	SBRS R16,7
00bea4 c008      	RJMP _0x20800A9
00bea5 ff02      	SBRS R16,2
00bea6 c004      	RJMP _0x20800AA
00bea7 7f0b      	ANDI R16,LOW(251)
00bea8 8d29      	LDD  R18,Y+25
00bea9 5011      	SUBI R17,LOW(1)
00beaa c001      	RJMP _0x20800AB
                 _0x20800AA:
00beab e320      	LDI  R18,LOW(48)
                 _0x20800AB:
00beac c001      	RJMP _0x20800AC
                 _0x20800A9:
00bead e220      	LDI  R18,LOW(32)
                 _0x20800AC:
00beae 940e dc64 	CALL SUBOPT_0x40E
00beb0 5051      	SUBI R21,LOW(1)
00beb1 cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
00beb2 1714      	CP   R17,R20
00beb3 f490      	BRSH _0x20800AF
00beb4 6100      	ORI  R16,LOW(16)
00beb5 ff02      	SBRS R16,2
00beb6 c006      	RJMP _0x20800B0
00beb7 940e dc92 	CALL SUBOPT_0x415
00beb9 f009      	BREQ _0x20800B1
00beba 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
00bebb 5011      	SUBI R17,LOW(1)
00bebc 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
00bebd e3e0      	LDI  R30,LOW(48)
00bebe 93ea      	ST   -Y,R30
00bebf 940e dc7a 	CALL SUBOPT_0x411
00bec1 3050      	CPI  R21,0
00bec2 f009      	BREQ _0x20800B2
00bec3 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
00bec4 5041      	SUBI R20,LOW(1)
00bec5 cfec      	RJMP _0x20800AD
                 _0x20800AF:
00bec6 2f31      	MOV  R19,R17
00bec7 8de8      	LDD  R30,Y+24
00bec8 30e0      	CPI  R30,0
00bec9 f4c1      	BRNE _0x20800B3
                 _0x20800B4:
00beca 3030      	CPI  R19,0
00becb f0a9      	BREQ _0x20800B6
00becc ff03      	SBRS R16,3
00becd c007      	RJMP _0x20800B7
00bece 01de      	MOVW R26,R28
00becf 9650      	ADIW R26,16
00bed0 940e d953 	CALL SUBOPT_0x39A
                +
00bed2 bf6b     +OUT RAMPZ , R22
00bed3 9126     +ELPM R18 , Z
                 	__GETBRPF 18
00bed4 c005      	RJMP _0x20800B8
                 _0x20800B7:
00bed5 89a8      	LDD  R26,Y+16
00bed6 89b9      	LDD  R27,Y+16+1
00bed7 912d      	LD   R18,X+
00bed8 8ba8      	STD  Y+16,R26
00bed9 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
00beda 940e dc64 	CALL SUBOPT_0x40E
00bedc 3050      	CPI  R21,0
00bedd f009      	BREQ _0x20800B9
00bede 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
00bedf 5031      	SUBI R19,LOW(1)
00bee0 cfe9      	RJMP _0x20800B4
                 _0x20800B6:
00bee1 c04a      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
00bee2 940e c5dd 	CALL SUBOPT_0xDB
00bee4 940e c075 	CALL SUBOPT_0xB
00bee6 940e dfb2 	CALL __DIVD21U
00bee8 2f2e      	MOV  R18,R30
00bee9 302a      	CPI  R18,10
00beea f030      	BRLO _0x20800BE
00beeb ff03      	SBRS R16,3
00beec c002      	RJMP _0x20800BF
00beed 5c29      	SUBI R18,-LOW(55)
00beee c001      	RJMP _0x20800C0
                 _0x20800BF:
00beef 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
00bef0 c001      	RJMP _0x20800C1
                 _0x20800BE:
00bef1 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
00bef2 fd04      	SBRC R16,4
00bef3 c01a      	RJMP _0x20800C3
00bef4 3321      	CPI  R18,49
00bef5 f428      	BRSH _0x20800C5
00bef6 940e cdf3 	CALL SUBOPT_0x225
00bef8 940e da22 	CALL SUBOPT_0x3B4
00befa f409      	BRNE _0x20800C4
                 _0x20800C5:
00befb c00b      	RJMP _0x20800C7
                 _0x20800C4:
00befc 1743      	CP   R20,R19
00befd f440      	BRSH _0x208013A
00befe 1753      	CP   R21,R19
00beff f010      	BRLO _0x20800CA
00bf00 ff00      	SBRS R16,0
00bf01 c001      	RJMP _0x20800CB
                 _0x20800CA:
00bf02 c010      	RJMP _0x20800C9
                 _0x20800CB:
00bf03 e220      	LDI  R18,LOW(32)
00bf04 ff07      	SBRS R16,7
00bf05 c008      	RJMP _0x20800CC
                 _0x208013A:
00bf06 e320      	LDI  R18,LOW(48)
                 _0x20800C7:
00bf07 6100      	ORI  R16,LOW(16)
00bf08 ff02      	SBRS R16,2
00bf09 c004      	RJMP _0x20800CD
00bf0a 940e dc92 	CALL SUBOPT_0x415
00bf0c f009      	BREQ _0x20800CE
00bf0d 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
00bf0e 940e dc64 	CALL SUBOPT_0x40E
00bf10 3050      	CPI  R21,0
00bf11 f009      	BREQ _0x20800CF
00bf12 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
00bf13 5031      	SUBI R19,LOW(1)
00bf14 940e c5dd 	CALL SUBOPT_0xDB
00bf16 940e c075 	CALL SUBOPT_0xB
00bf18 940e dff9 	CALL __MODD21U
00bf1a 940e c63c 	CALL SUBOPT_0xE9
00bf1c 8de8      	LDD  R30,Y+24
00bf1d 940e cdf3 	CALL SUBOPT_0x225
00bf1f 27ff      	CLR  R31
00bf20 2766      	CLR  R22
00bf21 2777      	CLR  R23
00bf22 940e dfb2 	CALL __DIVD21U
00bf24 940e cdee 	CALL SUBOPT_0x224
00bf26 940e c5dd 	CALL SUBOPT_0xDB
00bf28 940e e0b2 	CALL __CPD10
00bf2a f009      	BREQ _0x20800BD
00bf2b cfb6      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
00bf2c ff00      	SBRS R16,0
00bf2d c008      	RJMP _0x20800D0
                 _0x20800D1:
00bf2e 3050      	CPI  R21,0
00bf2f f031      	BREQ _0x20800D3
00bf30 5051      	SUBI R21,LOW(1)
00bf31 e2e0      	LDI  R30,LOW(32)
00bf32 93ea      	ST   -Y,R30
00bf33 940e dc7a 	CALL SUBOPT_0x411
00bf35 cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
00bf36 e010      	LDI  R17,LOW(0)
                 _0x2080053:
00bf37 ce0d      	RJMP _0x208004E
                 _0x2080050:
00bf38 81ae      	LDD  R26,Y+6
00bf39 81bf      	LDD  R27,Y+6+1
00bf3a 940e e02a 	CALL __GETW1P
00bf3c 940e e0d5 	CALL __LOADLOCR6
00bf3e 96ef      	ADIW R28,63
00bf3f 96a7      	ADIW R28,39
00bf40 9508      	RET
                 _sprintf:
00bf41 92ff      	PUSH R15
00bf42 2ef8      	MOV  R15,R24
00bf43 9726      	SBIW R28,6
00bf44 940e e0d0 	CALL __SAVELOCR4
00bf46 01de      	MOVW R26,R28
00bf47 961e      	ADIW R26,14
00bf48 940e deb2 	CALL __ADDW2R15
00bf4a 940e e02a 	CALL __GETW1P
00bf4c 9730      	SBIW R30,0
00bf4d f419      	BRNE _0x20800D5
00bf4e efef      	LDI  R30,LOW(65535)
00bf4f efff      	LDI  R31,HIGH(65535)
00bf50 c023      	RJMP _0x20E0004
                 _0x20800D5:
00bf51 01de      	MOVW R26,R28
00bf52 9616      	ADIW R26,6
00bf53 940e deb2 	CALL __ADDW2R15
00bf55 018d      	MOVW R16,R26
00bf56 01de      	MOVW R26,R28
00bf57 961e      	ADIW R26,14
00bf58 940e deb2 	CALL __ADDW2R15
00bf5a 940e d94a 	CALL SUBOPT_0x398
00bf5c e0e0      	LDI  R30,LOW(0)
00bf5d 87e8      	STD  Y+8,R30
00bf5e 87e9      	STD  Y+8+1,R30
00bf5f 01de      	MOVW R26,R28
00bf60 961a      	ADIW R26,10
00bf61 940e deb2 	CALL __ADDW2R15
00bf63 940e e02e 	CALL __GETD1P
00bf65 940e e05e 	CALL __PUTPARD1
00bf67 931a      	ST   -Y,R17
00bf68 930a      	ST   -Y,R16
00bf69 940e dca7 	CALL SUBOPT_0x416
00bf6b 01de      	MOVW R26,R28
00bf6c 961e      	ADIW R26,14
00bf6d ddba      	RCALL __print_G104
00bf6e 019f      	MOVW R18,R30
00bf6f 81ae      	LDD  R26,Y+6
00bf70 81bf      	LDD  R27,Y+6+1
00bf71 e0e0      	LDI  R30,LOW(0)
00bf72 93ec      	ST   X,R30
00bf73 01f9      	MOVW R30,R18
                 _0x20E0004:
00bf74 940e e0d7 	CALL __LOADLOCR4
00bf76 962a      	ADIW R28,10
00bf77 90ff      	POP  R15
00bf78 9508      	RET
                 _vsprintf:
00bf79 93ba      	ST   -Y,R27
00bf7a 93aa      	ST   -Y,R26
00bf7b 9726      	SBIW R28,6
00bf7c 931a      	ST   -Y,R17
00bf7d 930a      	ST   -Y,R16
00bf7e 85ee      	LDD  R30,Y+14
00bf7f 85ff      	LDD  R31,Y+14+1
00bf80 9730      	SBIW R30,0
00bf81 f419      	BRNE _0x20800D8
00bf82 efef      	LDI  R30,LOW(65535)
00bf83 efff      	LDI  R31,HIGH(65535)
00bf84 c016      	RJMP _0x20E0002
                 _0x20800D8:
00bf85 85ee      	LDD  R30,Y+14
00bf86 85ff      	LDD  R31,Y+14+1
00bf87 83ec      	STD  Y+4,R30
00bf88 83fd      	STD  Y+4+1,R31
00bf89 e0e0      	LDI  R30,LOW(0)
00bf8a 83ee      	STD  Y+6,R30
00bf8b 83ef      	STD  Y+6+1,R30
00bf8c 940e d702 	CALL SUBOPT_0x34A
00bf8e 940e cac1 	CALL SUBOPT_0x1AD
00bf90 940e dca7 	CALL SUBOPT_0x416
00bf92 01de      	MOVW R26,R28
00bf93 961c      	ADIW R26,12
00bf94 dd93      	RCALL __print_G104
00bf95 018f      	MOVW R16,R30
00bf96 81ac      	LDD  R26,Y+4
00bf97 81bd      	LDD  R27,Y+4+1
00bf98 e0e0      	LDI  R30,LOW(0)
00bf99 93ec      	ST   X,R30
00bf9a 01f8      	MOVW R30,R16
                 _0x20E0002:
00bf9b 8119      	LDD  R17,Y+1
00bf9c 8108      	LDD  R16,Y+0
                 _0x20E0003:
00bf9d 9660      	ADIW R28,16
00bf9e 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00bf9f 93aa      	ST   -Y,R26
00bfa0 e0e1          ldi  r30,1
00bfa1 91f9          ld   r31,y+
00bfa2 33f0          cpi  r31,'0'
00bfa3 f010          brlo isdigit0
00bfa4 33fa          cpi  r31,'9'+1
00bfa5 f008          brlo isdigit1
                 isdigit0:
00bfa6 27ee          clr  r30
                 isdigit1:
00bfa7 9508          ret
                 _isprint:
00bfa8 93aa      	ST   -Y,R26
00bfa9 e0e1          ldi  r30,1
00bfaa 91f9          ld   r31,y+
00bfab 32f0          cpi  r31,32
00bfac f010          brlo isprint0
00bfad 38f0          cpi  r31,128
00bfae f008          brlo isprint1
                 isprint0:
00bfaf 27ee          clr  r30
                 isprint1:
00bfb0 9508          ret
                 _isspace:
00bfb1 93aa      	ST   -Y,R26
00bfb2 e0e1          ldi  r30,1
00bfb3 91f9          ld   r31,y+
00bfb4 32f0          cpi  r31,' '
00bfb5 f029          breq isspace1
00bfb6 30f9          cpi  r31,9
00bfb7 f010          brlo isspace0
00bfb8 30fe          cpi  r31,13+1
00bfb9 f008          brlo isspace1
                 isspace0:
00bfba 27ee          clr  r30
                 isspace1:
00bfbb 9508          ret
                 _isxdigit:
00bfbc 93aa      	ST   -Y,R26
00bfbd e0e1          ldi  r30,1
00bfbe 91f9          ld   r31,y+
00bfbf 53f0          subi r31,0x30
00bfc0 f040          brcs isxdigit0
00bfc1 30fa          cpi  r31,10
00bfc2 f038          brcs isxdigit1
00bfc3 75ff          andi r31,0x5f
00bfc4 50f7          subi r31,7
00bfc5 30fa          cpi  r31,10
00bfc6 f010          brcs isxdigit0
00bfc7 31f0          cpi  r31,16
00bfc8 f008          brcs isxdigit1
                 isxdigit0:
00bfc9 27ee          clr  r30
                 isxdigit1:
00bfca 9508          ret
                 _tolower:
00bfcb 93aa      	ST   -Y,R26
00bfcc 91e9          ld   r30,y+
00bfcd 34e1          cpi  r30,'A'
00bfce f018          brlo tolower1
00bfcf 35eb          cpi  r30,'Z'+1
00bfd0 f408          brcc tolower1
00bfd1 5ee0          subi r30,-32
                 tolower1:
00bfd2 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00bfd3 940e e063 	CALL __PUTPARD2
00bfd5 817b         ldd  r23,y+3
00bfd6 816a         ldd  r22,y+2
00bfd7 81f9         ldd  r31,y+1
00bfd8 81e8         ld   r30,y
00bfd9 fb77         bst  r23,7
00bfda 0f77         lsl  r23
00bfdb fd67         sbrc r22,7
00bfdc 6071         sbr  r23,1
00bfdd 2f97         mov  r25,r23
00bfde 579e         subi r25,0x7e
00bfdf f081         breq __ftrunc0
00bfe0 f078         brcs __ftrunc0
00bfe1 3198         cpi  r25,24
00bfe2 f490         brsh __ftrunc1
00bfe3 27aa         clr  r26
00bfe4 27bb         clr  r27
00bfe5 2788         clr  r24
                 __ftrunc2:
00bfe6 9408         sec
00bfe7 9587         ror  r24
00bfe8 95b7         ror  r27
00bfe9 95a7         ror  r26
00bfea 959a         dec  r25
00bfeb f7d1         brne __ftrunc2
00bfec 23ea         and  r30,r26
00bfed 23fb         and  r31,r27
00bfee 2368         and  r22,r24
00bfef c005         rjmp __ftrunc1
                 __ftrunc0:
00bff0 94e8         clt
00bff1 2777         clr  r23
00bff2 27ee         clr  r30
00bff3 27ff         clr  r31
00bff4 2766         clr  r22
                 __ftrunc1:
00bff5 776f         cbr  r22,0x80
00bff6 9576         lsr  r23
00bff7 f408         brcc __ftrunc3
00bff8 6860         sbr  r22,0x80
                 __ftrunc3:
00bff9 f977         bld  r23,7
00bffa 91a9         ld   r26,y+
00bffb 91b9         ld   r27,y+
00bffc 9189         ld   r24,y+
00bffd 9199         ld   r25,y+
00bffe 17ea         cp   r30,r26
00bfff 07fb         cpc  r31,r27
00c000 0768         cpc  r22,r24
00c001 0779         cpc  r23,r25
00c002 fb97         bst  r25,7
00c003 9508         ret
                 _floor:
00c004 940e e063 	CALL __PUTPARD2
00c006 940e c3e5 	CALL SUBOPT_0x8C
00c008 940e bfd3 	CALL _ftrunc
00c00a 940e c481 	CALL SUBOPT_0xA0
00c00c f419          brne __floor1
                 __floor0:
00c00d 940e c3c6 	CALL SUBOPT_0x87
00c00f c009      	RJMP _0x20E0001
                 __floor1:
00c010 f7e6          brtc __floor0
00c011 940e c3c6 	CALL SUBOPT_0x87
                +
00c013 e0a0     +LDI R26 , LOW ( 0x3F800000 )
00c014 e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00c015 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00c016 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00c017 940e dda8 	CALL __SUBF12
                 _0x20E0001:
00c019 9624      	ADIW R28,4
00c01a 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 00
000588 01        	.DB  0x0,0x0,0x0,0x1
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _d_out:
001434           	.BYTE 0x2
                 _adcData:
001436           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
00144a           	.BYTE 0x19
                 _prtc_get_time:
001463           	.BYTE 0x4
                 _prtc_get_date:
001467           	.BYTE 0x4
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000591 02
000592 04
000593 07
000594 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
0014df           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014e0           	.BYTE 0x4
                 _flag_hold_MODE_S0040002000:
0014e4           	.BYTE 0x1
                 _flag_hold_UP_S0040002000:
0014e5           	.BYTE 0x1
                 _flag_hold_DOWN_S0040002000:
0014e6           	.BYTE 0x1
                 _flag_hold_OK_S0040002000:
0014e7           	.BYTE 0x1
                 _adcBatt:
0014e8           	.BYTE 0x4
                 _sess_list:
0014ec           	.BYTE 0x64
                 
                 	.ESEG
                 _epFactor_A:
000595 00
000596 00
000597 00
000598 00        	.DB  0x0,0x0,0x0,0x0
000599 00
00059a 00
00059b 00
00059c 00        	.DB  0x0,0x0,0x0,0x0
00059d 00
00059e 00
00059f 00
0005a0 00        	.DB  0x0,0x0,0x0,0x0
0005a1 00
0005a2 00
0005a3 00
0005a4 00        	.DB  0x0,0x0,0x0,0x0
0005a5 00
0005a6 00
0005a7 00
0005a8 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_B:
0005a9 00
0005aa 00
0005ab 00
0005ac 00        	.DB  0x0,0x0,0x0,0x0
0005ad 00
0005ae 00
0005af 00
0005b0 00        	.DB  0x0,0x0,0x0,0x0
0005b1 00
0005b2 00
0005b3 00
0005b4 00        	.DB  0x0,0x0,0x0,0x0
0005b5 00
0005b6 00
0005b7 00
0005b8 00        	.DB  0x0,0x0,0x0,0x0
0005b9 00
0005ba 00
0005bb 00
0005bc 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_C:
0005bd 00
0005be 00
0005bf 00
0005c0 00        	.DB  0x0,0x0,0x0,0x0
0005c1 00
0005c2 00
0005c3 00
0005c4 00        	.DB  0x0,0x0,0x0,0x0
0005c5 00
0005c6 00
0005c7 00
0005c8 00        	.DB  0x0,0x0,0x0,0x0
0005c9 00
0005ca 00
0005cb 00
0005cc 00        	.DB  0x0,0x0,0x0,0x0
0005cd 00
0005ce 00
0005cf 00
0005d0 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet1:
0005d1 00
0005d2 00
0005d3 00
0005d4 00        	.DB  0x0,0x0,0x0,0x0
0005d5 00        	.DB  0x0
                 _epADCRef1:
0005d6 00
0005d7 00
0005d8 00
0005d9 00        	.DB  0x0,0x0,0x0,0x0
0005da 00
0005db 00
0005dc 00
0005dd 00        	.DB  0x0,0x0,0x0,0x0
0005de 00
0005df 00
0005e0 00
0005e1 00        	.DB  0x0,0x0,0x0,0x0
0005e2 00
0005e3 00
0005e4 00
0005e5 00        	.DB  0x0,0x0,0x0,0x0
0005e6 00
0005e7 00
0005e8 00
0005e9 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef1:
0005ea 00
0005eb 00
0005ec 00
0005ed 00        	.DB  0x0,0x0,0x0,0x0
0005ee 00
0005ef 00
0005f0 00
0005f1 00        	.DB  0x0,0x0,0x0,0x0
0005f2 00
0005f3 00
0005f4 00
0005f5 00        	.DB  0x0,0x0,0x0,0x0
0005f6 00
0005f7 00
0005f8 00
0005f9 00        	.DB  0x0,0x0,0x0,0x0
0005fa 00
0005fb 00
0005fc 00
0005fd 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet2:
0005fe 00
0005ff 00
000600 00
000601 00        	.DB  0x0,0x0,0x0,0x0
000602 00        	.DB  0x0
                 _epADCRef2:
000603 00
000604 00
000605 00
000606 00        	.DB  0x0,0x0,0x0,0x0
000607 00
000608 00
000609 00
00060a 00        	.DB  0x0,0x0,0x0,0x0
00060b 00
00060c 00
00060d 00
00060e 00        	.DB  0x0,0x0,0x0,0x0
00060f 00
000610 00
000611 00
000612 00        	.DB  0x0,0x0,0x0,0x0
000613 00
000614 00
000615 00
000616 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef2:
000617 00
000618 00
000619 00
00061a 00        	.DB  0x0,0x0,0x0,0x0
00061b 00
00061c 00
00061d 00
00061e 00        	.DB  0x0,0x0,0x0,0x0
00061f 00
000620 00
000621 00
000622 00        	.DB  0x0,0x0,0x0,0x0
000623 00
000624 00
000625 00
000626 00        	.DB  0x0,0x0,0x0,0x0
000627 00
000628 00
000629 00
00062a 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet3:
00062b 00
00062c 00
00062d 00
00062e 00        	.DB  0x0,0x0,0x0,0x0
00062f 00        	.DB  0x0
                 _epADCRef3:
000630 00
000631 00
000632 00
000633 00        	.DB  0x0,0x0,0x0,0x0
000634 00
000635 00
000636 00
000637 00        	.DB  0x0,0x0,0x0,0x0
000638 00
000639 00
00063a 00
00063b 00        	.DB  0x0,0x0,0x0,0x0
00063c 00
00063d 00
00063e 00
00063f 00        	.DB  0x0,0x0,0x0,0x0
000640 00
000641 00
000642 00
000643 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef3:
000644 00
000645 00
000646 00
000647 00        	.DB  0x0,0x0,0x0,0x0
000648 00
000649 00
00064a 00
00064b 00        	.DB  0x0,0x0,0x0,0x0
00064c 00
00064d 00
00064e 00
00064f 00        	.DB  0x0,0x0,0x0,0x0
000650 00
000651 00
000652 00
000653 00        	.DB  0x0,0x0,0x0,0x0
000654 00
000655 00
000656 00
000657 00        	.DB  0x0,0x0,0x0,0x0
                 _epCalType:
000658 00
000659 00
00065a 00
00065b 00        	.DB  0x0,0x0,0x0,0x0
00065c 00        	.DB  0x0
                 
                 	.DSEG
                 _t_S00D0002000:
001550           	.BYTE 0x14
                 _lastCheck_S00D0002000:
001564           	.BYTE 0x5
                 _steadyState_S00D0002000:
001569           	.BYTE 0x5
                 _dataQ:
00156e           	.BYTE 0x64
                 _dataQ_len:
0015d2           	.BYTE 0x2
                 _t_S00F0001000:
0015d4           	.BYTE 0x4
                 _t_flag_S00F0001000:
0015d8           	.BYTE 0x1
                 _lastCheck_S00F0001000:
0015d9           	.BYTE 0x1
                 _t_S00F0005000:
0015da           	.BYTE 0x14
                 _flag_lower_S00F0005000:
0015ee           	.BYTE 0x5
                 _flag_upper_S00F0005000:
0015f3           	.BYTE 0x5
                 _t_S00F0006000:
0015f8           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
001600           	.BYTE 0x2
                 _steadyState_S00F0006000:
001602           	.BYTE 0x2
                 _eventQ:
001604           	.BYTE 0x78
                 _last_wr_eventQ:
00167c           	.BYTE 0x2
                 _last_rd_eventQ:
00167e           	.BYTE 0x2
                 _eventQ_len:
001680           	.BYTE 0x2
                 _ainAlarm:
001682           	.BYTE 0x10
                 _mtncAlarm:
001692           	.BYTE 0x1
                 _powerSrcAlarm:
001693           	.BYTE 0x1
                 _communicationAlarm:
001694           	.BYTE 0x1
                 _gsmAlarm:
001695           	.BYTE 0x1
                 _gsmBalanceAlarm:
001696           	.BYTE 0x1
                 _t_S0110003000:
001697           	.BYTE 0x4
                 _t_flag_S0110003000:
00169b           	.BYTE 0x1
                 _lastCheck_S0110003000:
00169c           	.BYTE 0x1
                 _t_S0110004000:
00169d           	.BYTE 0x4
                 _t_flag_S0110004000:
0016a1           	.BYTE 0x1
                 _lastCheck_S0110004000:
0016a2           	.BYTE 0x1
                 _t_S0110005000:
0016a3           	.BYTE 0x4
                 _t_flag_S0110005000:
0016a7           	.BYTE 0x1
                 _t_S0110006000:
0016a8           	.BYTE 0x8
                 _t_flag_S0110006000:
0016b0           	.BYTE 0x2
                 _lastCheck_S0110006000:
0016b2           	.BYTE 0x2
                 _t_S0110007000:
0016b4           	.BYTE 0x14
                 _t_flag_S0110007000:
0016c8           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016cd           	.BYTE 0x5
                 _t_S0110008000:
0016d2           	.BYTE 0x14
                 _t_flag_S0110008000:
0016e6           	.BYTE 0x5
                 _fat:
0016eb           	.BYTE 0x232
                 _pfat:
00191d           	.BYTE 0x2
                 _root_path:
00191f           	.BYTE 0x4
                 _eventLogQueue:
001923           	.BYTE 0x8C
                 _eventLogQCount:
0019af           	.BYTE 0x1
                 _dataLogQueue:
0019b0           	.BYTE 0x6E
                 _dataLogQCount:
001a1e           	.BYTE 0x1
                 _cursor_S0160000000:
001a1f           	.BYTE 0x1
                 _tmpNextPage_S0160000000:
001a20           	.BYTE 0x1
                 _tmpPrevPage_S0160000000:
001a21           	.BYTE 0x1
                 _entPwd_S0160000000:
001a22           	.BYTE 0x4
                 _newPwd_S0160000000:
001a26           	.BYTE 0x4
                 _confPwd_S0160000000:
001a2a           	.BYTE 0x4
                 _setIp_S0160000000:
001a2e           	.BYTE 0xC
                 _setMask_S0160000000:
001a3a           	.BYTE 0xC
                 _setGw_S0160000000:
001a46           	.BYTE 0xC
                 _setServer_S0160000000:
001a52           	.BYTE 0xC
                 _devEn_S0160000000:
001a5e           	.BYTE 0x1
                 _almEn_S0160000000:
001a5f           	.BYTE 0x1
                 _prbEn_S0160000000:
001a60           	.BYTE 0x5
                 _mute_S0160000000:
001a65           	.BYTE 0x1
                 _vRef_S0160000000:
001a66           	.BYTE 0x3
                 _prb1_S0160000000:
001a69           	.BYTE 0x1
                 _prb2_S0160000000:
001a6a           	.BYTE 0x1
                 _calPnt_S0160000000:
001a6b           	.BYTE 0x6
                 _n:
001a71           	.BYTE 0x2
                 _a:
001a73           	.BYTE 0x30
                 _indexWrite:
001aa3           	.BYTE 0x2
                 _gItemSize:
001aa5           	.BYTE 0x2
                 _smoothBuffer:
001aa7           	.BYTE 0x2
                 __seed_G100:
001aa9           	.BYTE 0x4
                 _status_G102:
001aad           	.BYTE 0x1
                 _timer1_G102:
001aae           	.BYTE 0x1
                 _timer2_G102:
001aaf           	.BYTE 0x1
                 _card_type_G102:
001ab0           	.BYTE 0x1
                 _pv_S102000B000:
001ab1           	.BYTE 0x1
                 _FatFs_G103:
001ab2           	.BYTE 0x2
                 _Fsid_G103:
001ab4           	.BYTE 0x2
                 _Drive_G103:
001ab6           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x0:
                +
00c01b e020     +LDI R18 , LOW ( 0 )
00c01c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00c01d e040     +LDI R20 , LOW ( 0 )
00c01e e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00c01f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
00c020 935a      	ST   -Y,R21
00c021 934a      	ST   -Y,R20
                +
00c022 e2a6     +LDI R26 , 38
00c023 9fa4     +MUL R26 , R20
00c024 01f0     +MOVW R30 , R0
00c025 9fa5     +MUL R26 , R21
00c026 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
00c027 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
00c028 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
00c029 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00c02a 81e0      	LD   R30,Z
00c02b 940e df4a 	CALL __LNEGB1
00c02d 2fae      	MOV  R26,R30
00c02e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 286 TIMES, CODE SIZE REDUCTION:1137 WORDS
                 SUBOPT_0x3:
00c02f 940e e05e 	CALL __PUTPARD1
00c031 e080      	LDI  R24,0
00c032 940e 9de6 	CALL _printDebug
00c034 9624      	ADIW R28,4
00c035 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00c036 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00c037 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00c038 0fe2      	ADD  R30,R18
00c039 1ff3      	ADC  R31,R19
00c03a 81e0      	LD   R30,Z
00c03b 30e0      	CPI  R30,0
00c03c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x5:
00c03d 01f9      	MOVW R30,R18
00c03e 01de      	MOVW R26,R28
00c03f 59ad      	SUBI R26,LOW(-(99))
00c040 4fbf      	SBCI R27,HIGH(-(99))
00c041 940e df05 	CALL __LSLW2
00c043 0fea      	ADD  R30,R26
00c044 1ffb      	ADC  R31,R27
00c045 93fa      	ST   -Y,R31
00c046 93ea      	ST   -Y,R30
                +
00c047 e0a5     +LDI R26 , LOW ( 0x5 )
00c048 e0b0     +LDI R27 , HIGH ( 0x5 )
00c049 e080     +LDI R24 , BYTE3 ( 0x5 )
00c04a e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00c04b 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x6:
00c04d 01fe      	MOVW R30,R28
00c04e 5ae1      	SUBI R30,LOW(-(95))
00c04f 4fff      	SBCI R31,HIGH(-(95))
00c050 93fa      	ST   -Y,R31
00c051 93ea      	ST   -Y,R30
                +
00c052 e0a7     +LDI R26 , LOW ( 0x7 )
00c053 e0b0     +LDI R27 , HIGH ( 0x7 )
00c054 e080     +LDI R24 , BYTE3 ( 0x7 )
00c055 e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00c056 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7:
00c058 01fe      	MOVW R30,R28
00c059 5ae5      	SUBI R30,LOW(-(91))
00c05a 4fff      	SBCI R31,HIGH(-(91))
00c05b 93fa      	ST   -Y,R31
00c05c 93ea      	ST   -Y,R30
                +
00c05d e3ac     +LDI R26 , LOW ( 0x3C )
00c05e e0b0     +LDI R27 , HIGH ( 0x3C )
00c05f e080     +LDI R24 , BYTE3 ( 0x3C )
00c060 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c061 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x8:
00c063 01fe      	MOVW R30,R28
00c064 5ae9      	SUBI R30,LOW(-(87))
00c065 4fff      	SBCI R31,HIGH(-(87))
00c066 93fa      	ST   -Y,R31
00c067 93ea      	ST   -Y,R30
                +
00c068 e2ac     +LDI R26 , LOW ( 0x12C )
00c069 e0b1     +LDI R27 , HIGH ( 0x12C )
00c06a e080     +LDI R24 , BYTE3 ( 0x12C )
00c06b e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
00c06c 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00c06e 01fe      	MOVW R30,R28
00c06f 93fa      	ST   -Y,R31
00c070 93ea      	ST   -Y,R30
00c071 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00c072 e0a7      	LDI  R26,LOW(7)
00c073 e0b0      	LDI  R27,0
00c074 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0xB:
                +
00c075 85ac     +LDD R26 , Y + 12
00c076 85bd     +LDD R27 , Y + 12 + 1
00c077 858e     +LDD R24 , Y + 12 + 2
00c078 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00c079 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xC:
                +
00c07a 89e8     +LDD R30 , Y + 16
00c07b 89f9     +LDD R31 , Y + 16 + 1
00c07c 896a     +LDD R22 , Y + 16 + 2
00c07d 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00c07e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00c07f e1a5      	LDI  R26,LOW(_properties_config)
00c080 e1b1      	LDI  R27,HIGH(_properties_config)
00c081 940e 48a4 	CALL _getPropertiesConfig
00c083 e0e0      	LDI  R30,LOW(0)
00c084 93e0 10f6 	STS  _is_properties_config_update,R30
00c086 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00c087 eba6      	LDI  R26,LOW(_operating_config)
00c088 e1b1      	LDI  R27,HIGH(_operating_config)
00c089 940e 4939 	CALL _getOperatingConfig
00c08b e0e0      	LDI  R30,LOW(0)
00c08c 93e0 10f7 	STS  _is_operating_config_update,R30
00c08e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00c08f 0fa2      	ADD  R26,R18
00c090 1fb3      	ADC  R27,R19
00c091 91ec      	LD   R30,X
00c092 30e0      	CPI  R30,0
00c093 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
00c094 e1ad     +LDI R26 , 29
00c095 9fa2     +MUL R26 , R18
00c096 01f0     +MOVW R30 , R0
00c097 9fa3     +MUL R26 , R19
00c098 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
00c099 54e2      	SUBI R30,LOW(-_sensor_config)
00c09a 4efe      	SBCI R31,HIGH(-_sensor_config)
00c09b 01df      	MOVW R26,R30
00c09c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
00c09d 940e e05e 	CALL __PUTPARD1
00c09f 01f9      	MOVW R30,R18
00c0a0 940e df3b 	CALL __CWD1
00c0a2 940e e05e 	CALL __PUTPARD1
00c0a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 301 TIMES, CODE SIZE REDUCTION:597 WORDS
                 SUBOPT_0x12:
00c0a5 e084      	LDI  R24,4
00c0a6 940e 9de6 	CALL _printDebug
00c0a8 9628      	ADIW R28,8
00c0a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00c0aa 0fa2      	ADD  R26,R18
00c0ab 1fb3      	ADC  R27,R19
00c0ac e0e0      	LDI  R30,LOW(0)
00c0ad 93ec      	ST   X,R30
00c0ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00c0af e3ad      	LDI  R26,LOW(_buzz_config)
00c0b0 e1b3      	LDI  R27,HIGH(_buzz_config)
00c0b1 940e 4c1f 	CALL _getBuzzerConfig
00c0b3 e0e0      	LDI  R30,LOW(0)
00c0b4 93e0 1112 	STS  _is_buzzer_config_update,R30
00c0b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
                +
00c0b7 e0a3     +LDI R26 , 3
00c0b8 9fa2     +MUL R26 , R18
00c0b9 01f0     +MOVW R30 , R0
00c0ba 9fa3     +MUL R26 , R19
00c0bb 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
00c0bc 5be1      	SUBI R30,LOW(-_din_config)
00c0bd 4efd      	SBCI R31,HIGH(-_din_config)
00c0be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00c0bf 58e1      	SUBI R30,LOW(-_dout_config)
00c0c0 4efd      	SBCI R31,HIGH(-_dout_config)
00c0c1 01df      	MOVW R26,R30
00c0c2 940e 4ac5 	CALL _getAuxDoutConfig
00c0c4 e0ad      	LDI  R26,LOW(_is_dout_config_update)
00c0c5 e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00c0c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00c0c7 e6a2      	LDI  R26,LOW(_status_config)
00c0c8 e1b3      	LDI  R27,HIGH(_status_config)
00c0c9 940e 4d49 	CALL _getStatusReportConfig
00c0cb e0e0      	LDI  R30,LOW(0)
00c0cc 93e0 1113 	STS  _is_status_config_update,R30
00c0ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00c0cf e6a5      	LDI  R26,LOW(_env_config)
00c0d0 e1b3      	LDI  R27,HIGH(_env_config)
00c0d1 940e 4cb6 	CALL _getEnvAlarmConfig
00c0d3 e0e0      	LDI  R30,LOW(0)
00c0d4 93e0 1114 	STS  _is_env_config_update,R30
00c0d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00c0d7 933a      	ST   -Y,R19
00c0d8 932a      	ST   -Y,R18
                +
00c0d9 e0a5     +LDI R26 , 5
00c0da 9fa2     +MUL R26 , R18
00c0db 01f0     +MOVW R30 , R0
00c0dc 9fa3     +MUL R26 , R19
00c0dd 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00c0de 5be6      	SUBI R30,LOW(-_sensor)
00c0df 4efb      	SBCI R31,HIGH(-_sensor)
00c0e0 01df      	MOVW R26,R30
00c0e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A:
00c0e2 01f9      	MOVW R30,R18
00c0e3 01de      	MOVW R26,R28
00c0e4 59ad      	SUBI R26,LOW(-(99))
00c0e5 4fbf      	SBCI R27,HIGH(-(99))
00c0e6 940e df05 	CALL __LSLW2
00c0e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 54 TIMES, CODE SIZE REDUCTION:103 WORDS
                 SUBOPT_0x1B:
00c0e9 0fae      	ADD  R26,R30
00c0ea 1fbf      	ADC  R27,R31
00c0eb 940e e02e 	CALL __GETD1P
00c0ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1C:
00c0ee 01df      	MOVW R26,R30
00c0ef 01cb      	MOVW R24,R22
00c0f0 940e 4130 	CALL _TIMER_checkTimerExceed
00c0f2 9730      	SBIW R30,0
00c0f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1D:
00c0f4 0fea      	ADD  R30,R26
00c0f5 1ffb      	ADC  R31,R27
00c0f6 93fa      	ST   -Y,R31
00c0f7 93ea      	ST   -Y,R30
00c0f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x1E:
00c0f9 940e e02a 	CALL __GETW1P
00c0fb 2766      	CLR  R22
00c0fc 2777      	CLR  R23
00c0fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F:
00c0fe 01df      	MOVW R26,R30
00c0ff 01cb      	MOVW R24,R22
00c100 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x20:
00c102 5be6      	SUBI R30,LOW(-_sensor)
00c103 4efb      	SBCI R31,HIGH(-_sensor)
00c104 01df      	MOVW R26,R30
00c105 940e e02e 	CALL __GETD1P
00c107 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0x21:
00c108 940e e05e 	CALL __PUTPARD1
00c10a e088      	LDI  R24,8
00c10b 940e 9de6 	CALL _printDebug
00c10d 962c      	ADIW R28,12
00c10e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x22:
00c10f 940e 77e0 	CALL _checkAlarm
                +
00c111 01de     +MOVW R26 , R28
00c112 58a7     +SUBI R26 , LOW ( - 121 )
00c113 4fbf     +SBCI R27 , HIGH ( - 121 )
00c114 93ed     +ST X + , R30
00c115 93fc     +ST X , R31
                 	__PUTW1SX 121
00c116 9730      	SBIW R30,0
00c117 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00c118 e2a6     +LDI R26 , 38
00c119 9fa4     +MUL R26 , R20
00c11a 01f0     +MOVW R30 , R0
00c11b 9fa5     +MUL R26 , R21
00c11c 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00c11d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24:
                +
00c11e 01de     +MOVW R26 , R28
00c11f 58a7     +SUBI R26 , LOW ( - 121 )
00c120 4fbf     +SBCI R27 , HIGH ( - 121 )
00c121 93ed     +ST X + , R30
00c122 93fc     +ST X , R31
                 	__PUTW1SX 121
00c123 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x25:
                +
00c124 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00c125 efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00c126 ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00c127 ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00c128 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x26:
00c129 93e0 1487 	STS  _muteAlarmExpired,R30
00c12b 93f0 1488 	STS  _muteAlarmExpired+1,R31
00c12d 9360 1489 	STS  _muteAlarmExpired+2,R22
00c12f 9370 148a 	STS  _muteAlarmExpired+3,R23
00c131 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27:
00c132 93fa      	ST   -Y,R31
00c133 93ea      	ST   -Y,R30
                +
00c134 e0aa     +LDI R26 , LOW ( 0xA )
00c135 e0b0     +LDI R27 , HIGH ( 0xA )
00c136 e080     +LDI R24 , BYTE3 ( 0xA )
00c137 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00c138 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
00c13a 91a0 146b 	LDS  R26,_sdFreeSpace
00c13c 91b0 146c 	LDS  R27,_sdFreeSpace+1
00c13e 9180 146d 	LDS  R24,_sdFreeSpace+2
00c140 9190 146e 	LDS  R25,_sdFreeSpace+3
00c142 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x29:
00c143 27ff      	CLR  R31
00c144 2766      	CLR  R22
00c145 2777      	CLR  R23
00c146 940e e05e 	CALL __PUTPARD1
00c148 cf5c      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
00c149 e7ac      	LDI  R26,LOW(_dinStatus)
00c14a e1b4      	LDI  R27,HIGH(_dinStatus)
00c14b 0fa2      	ADD  R26,R18
00c14c 1fb3      	ADC  R27,R19
00c14d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B:
00c14e e0f0      	LDI  R31,0
00c14f 9730      	SBIW R30,0
00c150 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2C:
                +
00c151 e0a0     +LDI R26 , LOW ( 0x0 )
00c152 e0b0     +LDI R27 , HIGH ( 0x0 )
00c153 e080     +LDI R24 , BYTE3 ( 0x0 )
00c154 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00c155 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
00c156 91a0 1483 	LDS  R26,_batteryVolt
00c158 91b0 1484 	LDS  R27,_batteryVolt+1
00c15a 9180 1485 	LDS  R24,_batteryVolt+2
00c15c 9190 1486 	LDS  R25,_batteryVolt+3
00c15e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 52 TIMES, CODE SIZE REDUCTION:507 WORDS
                 SUBOPT_0x2E:
00c15f b1e6      	IN   R30,0x6
00c160 7ce0      	ANDI R30,LOW(0xC0)
00c161 e0f0      	LDI  R31,0
00c162 940e df0e 	CALL __ASRW2
00c164 940e df0a 	CALL __ASRW4
00c166 95e0      	COM  R30
00c167 95f0      	COM  R31
00c168 70e3      	ANDI R30,LOW(0x3)
00c169 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
00c16a 91e0 0106 	LDS  R30,262
00c16c 71e0      	ANDI R30,LOW(0x10)
00c16d e0f0      	LDI  R31,0
00c16e 940e df0a 	CALL __ASRW4
00c170 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
00c171 940e e05e 	CALL __PUTPARD1
00c173 91e0 10f4 	LDS  R30,_hwCalId
00c175 91f0 10f5 	LDS  R31,_hwCalId+1
00c177 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 40 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x31:
00c178 e3a6      	LDI  R26,LOW(_adcData)
00c179 e1b4      	LDI  R27,HIGH(_adcData)
00c17a 940e df05 	CALL __LSLW2
00c17c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x32:
00c17d e8a9      	LDI  R26,LOW(_eep_vref_val)
00c17e e0b5      	LDI  R27,HIGH(_eep_vref_val)
00c17f 940e e07d 	CALL __EEPROMRDD
00c181 01df      	MOVW R26,R30
00c182 01cb      	MOVW R24,R22
                +
00c183 e0e0     +LDI R30 , LOW ( 0x447FC000 )
00c184 ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00c185 e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00c186 e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00c187 940e de4d 	CALL __DIVF21
00c189 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x33:
                +
00c18a e0a0     +LDI R26 , LOW ( 0x42C80000 )
00c18b e0b0     +LDI R27 , HIGH ( 0x42C80000 )
00c18c ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
00c18d e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
00c18e 940e ddff 	CALL __MULF12
00c190 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 84 TIMES, CODE SIZE REDUCTION:163 WORDS
                 SUBOPT_0x34:
00c191 2766      	CLR  R22
00c192 2777      	CLR  R23
00c193 940e e05e 	CALL __PUTPARD1
00c195 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
00c196 eca8      	LDI  R26,LOW(200)
00c197 e0b0      	LDI  R27,0
00c198 940c dcff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x36:
00c19a e080      	LDI  R24,0
00c19b 940e 9de6 	CALL _printDebug
00c19d 9624      	ADIW R28,4
00c19e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x37:
00c19f 940e e0ce 	CALL __SAVELOCR6
                +
00c1a1 e000     +LDI R16 , LOW ( 0 )
00c1a2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c1a3 ce77      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
                +
00c1a4 e1ad     +LDI R26 , 29
00c1a5 9fa2     +MUL R26 , R18
00c1a6 01f0     +MOVW R30 , R0
00c1a7 9fa3     +MUL R26 , R19
00c1a8 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00c1a9 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00c1aa 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00c1ab 81e0      	LD   R30,Z
00c1ac 30e0      	CPI  R30,0
00c1ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39:
00c1ae 91a0 14e0 	LDS  R26,_ETH_rst_timer_S0000001000
00c1b0 91b0 14e1 	LDS  R27,_ETH_rst_timer_S0000001000+1
00c1b2 9180 14e2 	LDS  R24,_ETH_rst_timer_S0000001000+2
00c1b4 9190 14e3 	LDS  R25,_ETH_rst_timer_S0000001000+3
00c1b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x3A:
                +
00c1b7 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00c1b8 efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00c1b9 07be     +CPC R27 , R30
00c1ba efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00c1bb 078e     +CPC R24 , R30
00c1bc efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00c1bd 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00c1be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00c1bf 93fa      	ST   -Y,R31
00c1c0 93ea      	ST   -Y,R30
                +
00c1c1 e0af     +LDI R26 , LOW ( 0xF )
00c1c2 e0b0     +LDI R27 , HIGH ( 0xF )
00c1c3 e080     +LDI R24 , BYTE3 ( 0xF )
00c1c4 e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00c1c5 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C:
00c1c7 940e e05e 	CALL __PUTPARD1
00c1c9 91a0 1377 	LDS  R26,_baseCounter
00c1cb 91b0 1378 	LDS  R27,_baseCounter+1
00c1cd 9180 1379 	LDS  R24,_baseCounter+2
00c1cf 9190 137a 	LDS  R25,_baseCounter+3
00c1d1 91e0 14e0 	LDS  R30,_ETH_rst_timer_S0000001000
00c1d3 91f0 14e1 	LDS  R31,_ETH_rst_timer_S0000001000+1
00c1d5 9160 14e2 	LDS  R22,_ETH_rst_timer_S0000001000+2
00c1d7 9170 14e3 	LDS  R23,_ETH_rst_timer_S0000001000+3
00c1d9 940e dec0 	CALL __SUBD12
00c1db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D:
00c1dc 01af      	MOVW R20,R30
                +
00c1dd 2b04     +OR R16 , R20
00c1de 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00c1df 2e04      	MOV  R0,R20
00c1e0 2a05      	OR   R0,R21
00c1e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00c1e2 940e 44bd 	CALL _DS1672_read
                +
00c1e4 83ef     +STD Y + 7 , R30
00c1e5 87f8     +STD Y + 7 + 1 , R31
00c1e6 8769     +STD Y + 7 + 2 , R22
00c1e7 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00c1e8 81ee      	LDD  R30,Y+6
00c1e9 30e0      	CPI  R30,0
00c1ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3F:
                +
00c1eb 81ef     +LDD R30 , Y + 7
00c1ec 85f8     +LDD R31 , Y + 7 + 1
00c1ed 8569     +LDD R22 , Y + 7 + 2
00c1ee 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00c1ef 940e e05e 	CALL __PUTPARD1
00c1f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00c1f2 93ea      	ST   -Y,R30
00c1f3 85ab      	LDD  R26,Y+11
00c1f4 940e 7778 	CALL _addEventQueue
00c1f6 01af      	MOVW R20,R30
00c1f7 2355      	TST  R21
00c1f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41:
                +
00c1f9 e9ed     +LDI R30 , LOW ( 2 * _0x0 + ( 849 ) )
00c1fa e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 849 ) )
00c1fb e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 849 ) )
00c1fc e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 849 ) )
                 	__POINTD1FN _0x0,849
00c1fd ce31      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
00c1fe 933a      	ST   -Y,R19
00c1ff 932a      	ST   -Y,R18
00c200 01de      	MOVW R26,R28
00c201 9618      	ADIW R26,8
00c202 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
00c203 01f9      	MOVW R30,R18
00c204 9631      	ADIW R30,1
00c205 940e df3b 	CALL __CWD1
00c207 940e e05e 	CALL __PUTPARD1
00c209 ce9b      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
00c20a 940e e05e 	CALL __PUTPARD1
00c20c cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
00c20d 01f9      	MOVW R30,R18
00c20e 9631      	ADIW R30,1
00c20f 940e df3b 	CALL __CWD1
00c211 940e e05e 	CALL __PUTPARD1
00c213 e084      	LDI  R24,4
00c214 940e 7f67 	CALL _printOLED
00c216 9628      	ADIW R28,8
00c217 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x46:
00c218 940e e0ce 	CALL __SAVELOCR6
                +
00c21a e000     +LDI R16 , LOW ( 0 )
00c21b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c21c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
00c21d e0f0      	LDI  R31,0
00c21e 31e0      	CPI  R30,LOW(0x10)
00c21f e0a0      	LDI  R26,HIGH(0x10)
00c220 07fa      	CPC  R31,R26
00c221 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
00c222 e0ab      	LDI  R26,LOW(11)
00c223 e0b0      	LDI  R27,0
00c224 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x49:
00c225 940e e05e 	CALL __PUTPARD1
00c227 01fa      	MOVW R30,R20
00c228 940e df3b 	CALL __CWD1
00c22a 940e e05e 	CALL __PUTPARD1
00c22c ce78      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
00c22d 940e a519 	CALL _free
00c22f efef      	LDI  R30,LOW(65535)
00c230 efff      	LDI  R31,HIGH(65535)
00c231 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
00c232 01fa      	MOVW R30,R20
                +
00c233 5f4f     +SUBI R20 , LOW ( - 1 )
00c234 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c235 0fe2      	ADD  R30,R18
00c236 1ff3      	ADC  R31,R19
00c237 01df      	MOVW R26,R30
00c238 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
00c239 01fa      	MOVW R30,R20
                +
00c23a 5f4f     +SUBI R20 , LOW ( - 1 )
00c23b 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00c23c 0fe2      	ADD  R30,R18
00c23d 1ff3      	ADC  R31,R19
00c23e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x4D:
00c23f 93fa      	ST   -Y,R31
00c240 93ea      	ST   -Y,R30
00c241 e0a4      	LDI  R26,LOW(4)
00c242 e0b0      	LDI  R27,0
00c243 940c a53b 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4E:
00c245 940e 44bd 	CALL _DS1672_read
                +
00c247 87e8     +STD Y + 8 , R30
00c248 87f9     +STD Y + 8 + 1 , R31
00c249 876a     +STD Y + 8 + 2 , R22
00c24a 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00c24b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x4F:
                +
00c24c 85e8     +LDD R30 , Y + 8
00c24d 85f9     +LDD R31 , Y + 8 + 1
00c24e 856a     +LDD R22 , Y + 8 + 2
00c24f 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00c250 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x50:
00c251 940e e05e 	CALL __PUTPARD1
                +
00c253 85ee     +LDD R30 , Y + 14
00c254 85ff     +LDD R31 , Y + 14 + 1
00c255 8968     +LDD R22 , Y + 14 + 2
00c256 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c257 940e e05e 	CALL __PUTPARD1
00c259 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x51:
                +
00c25a 89ea     +LDD R30 , Y + 18
00c25b 89fb     +LDD R31 , Y + 18 + 1
00c25c 896c     +LDD R22 , Y + 18 + 2
00c25d 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c25e 940e e05e 	CALL __PUTPARD1
00c260 e08c      	LDI  R24,12
00c261 940e 9de6 	CALL _printDebug
00c263 9660      	ADIW R28,16
00c264 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x52:
                +
00c265 85aa     +LDD R26 , Y + 10
00c266 85bb     +LDD R27 , Y + 10 + 1
00c267 858c     +LDD R24 , Y + 10 + 2
00c268 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00c269 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
00c26a dffa      	RCALL SUBOPT_0x52
00c26b cf4b      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x54:
00c26c 93ea      	ST   -Y,R30
                +
00c26d 85eb     +LDD R30 , Y + 11
00c26e 85fc     +LDD R31 , Y + 11 + 1
00c26f 856d     +LDD R22 , Y + 11 + 2
00c270 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c271 940e e05e 	CALL __PUTPARD1
00c273 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
00c274 85ad     +LDD R26 , Y + 13
00c275 85be     +LDD R27 , Y + 13 + 1
00c276 858f     +LDD R24 , Y + 13 + 2
00c277 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00c278 940c 550c 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x56:
00c27a 01fe      	MOVW R30,R28
00c27b 9636      	ADIW R30,6
00c27c 93fa      	ST   -Y,R31
00c27d 93ea      	ST   -Y,R30
00c27e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x57:
00c27f 940e e05e 	CALL __PUTPARD1
                +
00c281 85ea     +LDD R30 , Y + 10
00c282 85fb     +LDD R31 , Y + 10 + 1
00c283 856c     +LDD R22 , Y + 10 + 2
00c284 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c285 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x58:
00c286 2fe5      	MOV  R30,R21
00c287 27ff      	CLR  R31
00c288 2766      	CLR  R22
00c289 2777      	CLR  R23
00c28a 940e e05e 	CALL __PUTPARD1
00c28c 2fe4      	MOV  R30,R20
00c28d 27ff      	CLR  R31
00c28e 2766      	CLR  R22
00c28f 2777      	CLR  R23
00c290 940e e05e 	CALL __PUTPARD1
00c292 e08c      	LDI  R24,12
00c293 940e 9de6 	CALL _printDebug
00c295 9660      	ADIW R28,16
00c296 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x59:
                +
00c297 81ae     +LDD R26 , Y + 6
00c298 81bf     +LDD R27 , Y + 6 + 1
00c299 8588     +LDD R24 , Y + 6 + 2
00c29a 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00c29b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5A:
00c29c 01fe      	MOVW R30,R28
00c29d 963c      	ADIW R30,12
00c29e 93fa      	ST   -Y,R31
00c29f 93ea      	ST   -Y,R30
00c2a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x5B:
00c2a1 940e e05e 	CALL __PUTPARD1
00c2a3 ddd6      	RCALL SUBOPT_0xC
00c2a4 940e e05e 	CALL __PUTPARD1
00c2a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
00c2a7 ddcd      	RCALL SUBOPT_0xB
00c2a8 cf0e      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
00c2a9 01fe      	MOVW R30,R28
00c2aa 9670      	ADIW R30,16
00c2ab 93fa      	ST   -Y,R31
00c2ac 93ea      	ST   -Y,R30
00c2ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5E:
00c2ae eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00c2af e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00c2b0 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c2b2 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c2b4 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c2b6 bf6c     +OUT EIND , R22
00c2b7 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c2b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5F:
00c2b9 940e e05e 	CALL __PUTPARD1
00c2bb eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00c2bc e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00c2bd ced3      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x60:
                +
00c2be 85ee     +LDD R30 , Y + 14
00c2bf 85ff     +LDD R31 , Y + 14 + 1
00c2c0 8968     +LDD R22 , Y + 14 + 2
00c2c1 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00c2c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
00c2c3 85ae     +LDD R26 , Y + 14
00c2c4 85bf     +LDD R27 , Y + 14 + 1
00c2c5 8988     +LDD R24 , Y + 14 + 2
00c2c6 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00c2c7 940c 81f7 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
00c2c9 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c2cb 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c2cd 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c2cf bf6c     +OUT EIND , R22
00c2d0 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c2d1 01af      	MOVW R20,R30
00c2d2 2355      	TST  R21
00c2d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x63:
00c2d4 01fe      	MOVW R30,R28
00c2d5 9637      	ADIW R30,7
00c2d6 93fa      	ST   -Y,R31
00c2d7 93ea      	ST   -Y,R30
00c2d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
00c2d9 85eb     +LDD R30 , Y + 11
00c2da 85fc     +LDD R31 , Y + 11 + 1
00c2db 856d     +LDD R22 , Y + 11 + 2
00c2dc 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00c2dd 940e e05e 	CALL __PUTPARD1
00c2df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 90 TIMES, CODE SIZE REDUCTION:264 WORDS
                 SUBOPT_0x65:
00c2e0 27ff      	CLR  R31
00c2e1 2766      	CLR  R22
00c2e2 2777      	CLR  R23
00c2e3 940e e05e 	CALL __PUTPARD1
00c2e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x66:
00c2e6 e08c      	LDI  R24,12
00c2e7 940e 9de6 	CALL _printDebug
00c2e9 9660      	ADIW R28,16
00c2ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
                +
00c2eb 81af     +LDD R26 , Y + 7
00c2ec 85b8     +LDD R27 , Y + 7 + 1
00c2ed 8589     +LDD R24 , Y + 7 + 2
00c2ee 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00c2ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
00c2f0 01fe      	MOVW R30,R28
00c2f1 963b      	ADIW R30,11
00c2f2 93fa      	ST   -Y,R31
00c2f3 93ea      	ST   -Y,R30
00c2f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
00c2f5 eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00c2f6 e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00c2f7 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00c2f9 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00c2fb 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00c2fd bf6c     +OUT EIND , R22
00c2fe 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00c2ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6A:
00c300 940e e05e 	CALL __PUTPARD1
00c302 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00c303 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00c304 ce8c      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
                +
00c305 85e9     +LDD R30 , Y + 9
00c306 85fa     +LDD R31 , Y + 9 + 1
00c307 856b     +LDD R22 , Y + 9 + 2
00c308 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00c309 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6C:
00c30a 01fe      	MOVW R30,R28
00c30b 9672      	ADIW R30,18
00c30c 93fa      	ST   -Y,R31
00c30d 93ea      	ST   -Y,R30
00c30e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
00c30f df55      	RCALL SUBOPT_0x52
00c310 940e e0be 	CALL __CPD02
00c312 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6E:
00c313 e0e0      	LDI  R30,LOW(0)
00c314 93e0 1426 	STS  _logDataWait,R30
                +
00c316 e0e0     +LDI R30 , LOW ( 0x0 )
00c317 e0f0     +LDI R31 , HIGH ( 0x0 )
00c318 e060     +LDI R22 , BYTE3 ( 0x0 )
00c319 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c31a 93e0 1427+STS _logDataWait + ( 1 ) , R30
00c31c 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00c31e 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00c320 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00c322 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6F:
                +
00c323 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00c325 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00c327 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00c329 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00c32b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x70:
00c32c 01de      	MOVW R26,R28
00c32d 9652      	ADIW R26,18
                +
00c32e 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c330 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c332 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c334 bf6c     +OUT EIND , R22
00c335 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c336 018f      	MOVW R16,R30
00c337 2311      	TST  R17
00c338 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x71:
00c339 e0e0      	LDI  R30,LOW(0)
00c33a 93e0 142b 	STS  _logEventWait,R30
                +
00c33c e0e0     +LDI R30 , LOW ( 0x0 )
00c33d e0f0     +LDI R31 , HIGH ( 0x0 )
00c33e e060     +LDI R22 , BYTE3 ( 0x0 )
00c33f e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00c340 93e0 142c+STS _logEventWait + ( 1 ) , R30
00c342 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00c344 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00c346 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00c348 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
00c349 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00c34b 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00c34d 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00c34f 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00c351 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
00c352 e0a2      	LDI  R26,LOW(2)
00c353 e0b0      	LDI  R27,0
00c354 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00c355 e6a4      	LDI  R26,LOW(100)
00c356 e0b0      	LDI  R27,0
00c357 940c dcff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x75:
00c359 e0a1      	LDI  R26,LOW(1)
00c35a e0b0      	LDI  R27,0
00c35b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
00c35c e0a3      	LDI  R26,LOW(3)
00c35d e0b0      	LDI  R27,0
00c35e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x77:
00c35f e0a4      	LDI  R26,LOW(4)
00c360 e0b0      	LDI  R27,0
00c361 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:66 WORDS
                 SUBOPT_0x78:
00c362 01df      	MOVW R26,R30
00c363 940e e02e 	CALL __GETD1P
00c365 940e e05e 	CALL __PUTPARD1
00c367 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x79:
00c368 93e0 0102 	STS  258,R30
00c36a ce2b      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7A:
00c36b e3a2      	LDI  R26,LOW(50)
00c36c e0b0      	LDI  R27,0
00c36d 940c dcff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7B:
00c36f 920a      	ST   -Y,R0
00c370 921a      	ST   -Y,R1
00c371 92fa      	ST   -Y,R15
00c372 936a      	ST   -Y,R22
00c373 937a      	ST   -Y,R23
00c374 938a      	ST   -Y,R24
00c375 939a      	ST   -Y,R25
00c376 93aa      	ST   -Y,R26
00c377 93ba      	ST   -Y,R27
00c378 93ea      	ST   -Y,R30
00c379 93fa      	ST   -Y,R31
00c37a b7eb      	IN   R30,RAMPZ
00c37b 93ea      	ST   -Y,R30
00c37c b7ec      	IN   R30,EIND
00c37d 93ea      	ST   -Y,R30
00c37e b7ef      	IN   R30,SREG
00c37f 93ea      	ST   -Y,R30
00c380 931a      	ST   -Y,R17
00c381 930a      	ST   -Y,R16
00c382 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7C:
00c383 91ed      	LD   R30,X+
00c384 91fd      	LD   R31,X+
00c385 9631      	ADIW R30,1
00c386 93fe      	ST   -X,R31
00c387 93ee      	ST   -X,R30
00c388 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
00c389 91a0 10ee 	LDS  R26,_configLen
00c38b 91b0 10ef 	LDS  R27,_configLen+1
00c38d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7E:
00c38e e0e0      	LDI  R30,LOW(0)
00c38f 93e0 10ee 	STS  _configLen,R30
00c391 93e0 10ef 	STS  _configLen+1,R30
00c393 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x7F:
00c394 93ba      	ST   -Y,R27
00c395 93aa      	ST   -Y,R26
00c396 940e e0d0 	CALL __SAVELOCR4
00c398 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x80:
00c399 85e8      	LDD  R30,Y+8
00c39a 85f9      	LDD  R31,Y+8+1
00c39b 9631      	ADIW R30,1
00c39c 87e8      	STD  Y+8,R30
00c39d 87f9      	STD  Y+8+1,R31
00c39e 9731      	SBIW R30,1
00c39f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x81:
00c3a0 93ba      	ST   -Y,R27
00c3a1 93aa      	ST   -Y,R26
00c3a2 931a      	ST   -Y,R17
00c3a3 930a      	ST   -Y,R16
00c3a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00c3a5 81ea      	LDD  R30,Y+2
00c3a6 81fb      	LDD  R31,Y+2+1
00c3a7 170e      	CP   R16,R30
00c3a8 071f      	CPC  R17,R31
00c3a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
00c3aa 01f8      	MOVW R30,R16
00c3ab 81ac      	LDD  R26,Y+4
00c3ac 81bd      	LDD  R27,Y+4+1
00c3ad 0fae      	ADD  R26,R30
00c3ae 1fbf      	ADC  R27,R31
00c3af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x84:
00c3b0 81a9      	LDD  R26,Y+1
00c3b1 81ba      	LDD  R27,Y+1+1
00c3b2 27ee      	CLR  R30
00c3b3 0fa1      	ADD  R26,R17
00c3b4 1fbe      	ADC  R27,R30
00c3b5 91ec      	LD   R30,X
00c3b6 30e0      	CPI  R30,0
00c3b7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00c3b8 81a9      	LDD  R26,Y+1
00c3b9 81ba      	LDD  R27,Y+1+1
00c3ba 27ee      	CLR  R30
00c3bb 0fa1      	ADD  R26,R17
00c3bc 1fbe      	ADC  R27,R30
00c3bd 91ac      	LD   R26,X
00c3be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
00c3bf 940e e063 	CALL __PUTPARD2
00c3c1 940e e04a 	CALL __GETD1S0
00c3c3 940e e0b2 	CALL __CPD10
00c3c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x87:
00c3c6 940e e04a 	CALL __GETD1S0
00c3c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x88:
00c3c9 91a0 1377 	LDS  R26,_baseCounter
00c3cb 91b0 1378 	LDS  R27,_baseCounter+1
00c3cd 9180 1379 	LDS  R24,_baseCounter+2
00c3cf 9190 137a 	LDS  R25,_baseCounter+3
00c3d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x89:
                +
00c3d2 81ec     +LDD R30 , Y + 4
00c3d3 81fd     +LDD R31 , Y + 4 + 1
00c3d4 816e     +LDD R22 , Y + 4 + 2
00c3d5 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00c3d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8A:
00c3d7 940e deb6 	CALL __ADDD12
00c3d9 940e e054 	CALL __PUTD1S0
00c3db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
00c3dc 91e0 1377 	LDS  R30,_baseCounter
00c3de 91f0 1378 	LDS  R31,_baseCounter+1
00c3e0 9160 1379 	LDS  R22,_baseCounter+2
00c3e2 9170 137a 	LDS  R23,_baseCounter+3
00c3e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x8C:
00c3e5 940e e04f 	CALL __GETD2S0
00c3e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8D:
00c3e8 940e e05e 	CALL __PUTPARD1
                +
00c3ea 85ec     +LDD R30 , Y + 12
00c3eb 85fd     +LDD R31 , Y + 12 + 1
00c3ec 856e     +LDD R22 , Y + 12 + 2
00c3ed 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c3ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8E:
                +
00c3ef e0e0     +LDI R30 , LOW ( 0x0 )
00c3f0 e0f0     +LDI R31 , HIGH ( 0x0 )
00c3f1 e060     +LDI R22 , BYTE3 ( 0x0 )
00c3f2 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c3f3 940e e039 	CALL __PUTDP1
00c3f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x8F:
00c3f6 920a      	ST   -Y,R0
00c3f7 921a      	ST   -Y,R1
00c3f8 92fa      	ST   -Y,R15
00c3f9 936a      	ST   -Y,R22
00c3fa 937a      	ST   -Y,R23
00c3fb 938a      	ST   -Y,R24
00c3fc 939a      	ST   -Y,R25
00c3fd 93aa      	ST   -Y,R26
00c3fe 93ba      	ST   -Y,R27
00c3ff 93ea      	ST   -Y,R30
00c400 93fa      	ST   -Y,R31
00c401 b7eb      	IN   R30,RAMPZ
00c402 93ea      	ST   -Y,R30
00c403 b7ec      	IN   R30,EIND
00c404 93ea      	ST   -Y,R30
00c405 b7ef      	IN   R30,SREG
00c406 93ea      	ST   -Y,R30
00c407 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x90:
00c408 efee      	LDI  R30,LOW(254)
00c409 93e0 0085 	STS  133,R30
00c40b e7e9      	LDI  R30,LOW(121)
00c40c 93e0 0084 	STS  132,R30
00c40e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
00c40f e8e5      	LDI  R30,LOW(133)
00c410 93e0 0095 	STS  149,R30
00c412 eeed      	LDI  R30,LOW(237)
00c413 93e0 0094 	STS  148,R30
00c415 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x92:
00c416 940e e034 	CALL __GETD1P_INC
                +
00c418 5fef     +SUBI R30 , LOW ( - 1 )
00c419 4fff     +SBCI R31 , HIGH ( - 1 )
00c41a 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c41b 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c41c 940e e03e 	CALL __PUTDP1_DEC
00c41e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x93:
00c41f e8e5      	LDI  R30,LOW(133)
00c420 93e0 00a5 	STS  165,R30
00c422 eeed      	LDI  R30,LOW(237)
00c423 93e0 00a4 	STS  164,R30
00c425 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x94:
00c426 93ba      	ST   -Y,R27
00c427 93aa      	ST   -Y,R26
00c428 81e8      	LD   R30,Y
00c429 81f9      	LDD  R31,Y+1
00c42a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x95:
00c42b b1e6      	IN   R30,0x6
00c42c 7ce0      	ANDI R30,LOW(0xC0)
00c42d e0f0      	LDI  R31,0
00c42e 940e df0e 	CALL __ASRW2
00c430 940e df0a 	CALL __ASRW4
00c432 95e0      	COM  R30
00c433 95f0      	COM  R31
00c434 70e3      	ANDI R30,LOW(0x3)
00c435 70f0      	ANDI R31,HIGH(0x3)
00c436 9731      	SBIW R30,1
00c437 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x96:
00c438 b1e3      	IN   R30,0x3
00c439 71e0      	ANDI R30,LOW(0x10)
00c43a e0f0      	LDI  R31,0
00c43b 940e df0a 	CALL __ASRW4
00c43d 9730      	SBIW R30,0
00c43e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x97:
00c43f e0a5      	LDI  R26,LOW(5)
00c440 e0b0      	LDI  R27,0
00c441 940c dcff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x98:
00c443 b1e3      	IN   R30,0x3
00c444 72e0      	ANDI R30,LOW(0x20)
00c445 e0f0      	LDI  R31,0
00c446 95f5      	ASR  R31
00c447 95e7      	ROR  R30
00c448 940e df0a 	CALL __ASRW4
00c44a 9730      	SBIW R30,0
00c44b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x99:
00c44c b1e3      	IN   R30,0x3
00c44d 74e0      	ANDI R30,LOW(0x40)
00c44e e0f0      	LDI  R31,0
00c44f 940e df0e 	CALL __ASRW2
00c451 940e df0a 	CALL __ASRW4
00c453 9730      	SBIW R30,0
00c454 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
00c455 b1e3      	IN   R30,0x3
00c456 78e0      	ANDI R30,LOW(0x80)
00c457 e0f0      	LDI  R31,0
00c458 940e df0c 	CALL __ASRW3
00c45a 940e df0a 	CALL __ASRW4
00c45c 9730      	SBIW R30,0
00c45d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9B:
00c45e e0f0      	LDI  R31,0
00c45f 70f0      	ANDI R31,HIGH(0xFF)
00c460 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9C:
00c461 91a0 14e8 	LDS  R26,_adcBatt
00c463 91b0 14e9 	LDS  R27,_adcBatt+1
00c465 9180 14ea 	LDS  R24,_adcBatt+2
00c467 9190 14eb 	LDS  R25,_adcBatt+3
00c469 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x9D:
00c46a 2766      	CLR  R22
00c46b 2777      	CLR  R23
00c46c 940e dd75 	CALL __CDF1
00c46e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x9E:
                +
00c46f ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00c470 ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00c471 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00c472 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00c473 940e ddff 	CALL __MULF12
00c475 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x9F:
00c476 940e ddaf 	CALL __ADDF12
00c478 01df      	MOVW R26,R30
00c479 01cb      	MOVW R24,R22
                +
00c47a e0e0     +LDI R30 , LOW ( 0x41200000 )
00c47b e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c47c e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c47d e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c47e 940e de4d 	CALL __DIVF21
00c480 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xA0:
00c481 940e e054 	CALL __PUTD1S0
00c483 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA1:
00c484 91e0 0108 	LDS  R30,264
00c486 7fe1      	ANDI R30,LOW(0xF1)
00c487 93e0 0108 	STS  264,R30
00c489 e0a8      	LDI  R26,LOW(264)
00c48a e0b1      	LDI  R27,HIGH(264)
00c48b 2e0a      	MOV  R0,R26
00c48c 91ac      	LD   R26,X
00c48d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA2:
00c48e 0fee      	LSL  R30
00c48f 2bea      	OR   R30,R26
00c490 2da0      	MOV  R26,R0
00c491 93ec      	ST   X,R30
00c492 e1a4      	LDI  R26,LOW(20)
00c493 e0b0      	LDI  R27,0
00c494 940c dcff 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA3:
00c496 dfd3      	RCALL SUBOPT_0x9D
00c497 940e e039 	CALL __PUTDP1
00c499 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA4:
00c49a 940e dcb3 	CALL _i2c_start
00c49c eda0      	LDI  R26,LOW(208)
00c49d 940c dce7 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA5:
00c49f 940e dce7 	CALL _i2c_write
00c4a1 940c dcc2 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA6:
00c4a3 e0aa      	LDI  R26,LOW(10)
00c4a4 e0b0      	LDI  R27,0
00c4a5 940e dcff 	CALL _delay_ms
00c4a7 e0e0      	LDI  R30,LOW(0)
00c4a8 e0f0      	LDI  R31,HIGH(0)
00c4a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 34 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0xA7:
                +
00c4aa 83ec     +STD Y + 4 , R30
00c4ab 83fd     +STD Y + 4 + 1 , R31
00c4ac 836e     +STD Y + 4 + 2 , R22
00c4ad 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00c4ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0xA8:
                +
00c4af 81ac     +LDD R26 , Y + 4
00c4b0 81bd     +LDD R27 , Y + 4 + 1
00c4b1 818e     +LDD R24 , Y + 4 + 2
00c4b2 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00c4b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA9:
00c4b4 e0e8      	LDI  R30,LOW(8)
00c4b5 940e dee9 	CALL __LSLD12
00c4b7 cff2      	RJMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xAA:
00c4b8 e0f0      	LDI  R31,0
00c4b9 dff5      	RCALL SUBOPT_0xA8
00c4ba 940e df3b 	CALL __CWD1
00c4bc 940e deb6 	CALL __ADDD12
00c4be dfeb      	RCALL SUBOPT_0xA7
00c4bf dfef      	RCALL SUBOPT_0xA8
00c4c0 cff3      	RJMP SUBOPT_0xA9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xAB:
00c4c1 2fe1      	MOV  R30,R17
00c4c2 e0f0      	LDI  R31,0
00c4c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAC:
00c4c4 940e df3b 	CALL __CWD1
00c4c6 940e deb6 	CALL __ADDD12
00c4c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xAD:
00c4c9 dfe0      	RCALL SUBOPT_0xA7
00c4ca cf07      	RJMP SUBOPT_0x89
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xAE:
                +
00c4cb e3ec     +LDI R30 , LOW ( 0x3C )
00c4cc e0f0     +LDI R31 , HIGH ( 0x3C )
00c4cd e060     +LDI R22 , BYTE3 ( 0x3C )
00c4ce e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00c4cf 940e dfb2 	CALL __DIVD21U
00c4d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xAF:
                +
00c4d2 83ee     +STD Y + 6 , R30
00c4d3 83ff     +STD Y + 6 + 1 , R31
00c4d4 8768     +STD Y + 6 + 2 , R22
00c4d5 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c4d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB0:
                +
00c4d7 e3ac     +LDI R26 , LOW ( 0x3C )
00c4d8 e0b0     +LDI R27 , HIGH ( 0x3C )
00c4d9 e080     +LDI R24 , BYTE3 ( 0x3C )
00c4da e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c4db 940e df5c 	CALL __MULD12U
00c4dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0xB1:
                +
00c4de 83ea     +STD Y + 2 , R30
00c4df 83fb     +STD Y + 2 + 1 , R31
00c4e0 836c     +STD Y + 2 + 2 , R22
00c4e1 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00c4e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xB2:
                +
00c4e3 81ea     +LDD R30 , Y + 2
00c4e4 81fb     +LDD R31 , Y + 2 + 1
00c4e5 816c     +LDD R22 , Y + 2 + 2
00c4e6 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00c4e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0xB3:
                +
00c4e8 81aa     +LDD R26 , Y + 2
00c4e9 81bb     +LDD R27 , Y + 2 + 1
00c4ea 818c     +LDD R24 , Y + 2 + 2
00c4eb 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00c4ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 29 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0xB4:
                +
00c4ed 81ee     +LDD R30 , Y + 6
00c4ee 81ff     +LDD R31 , Y + 6 + 1
00c4ef 8568     +LDD R22 , Y + 6 + 2
00c4f0 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00c4f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xB5:
                +
00c4f2 83ee     +STD Y + 6 , R30
00c4f3 83ff     +STD Y + 6 + 1 , R31
00c4f4 8768     +STD Y + 6 + 2 , R22
00c4f5 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c4f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB6:
00c4f7 dd9f      	RCALL SUBOPT_0x59
                +
00c4f8 ebe5     +LDI R30 , LOW ( 0x5B5 )
00c4f9 e0f5     +LDI R31 , HIGH ( 0x5B5 )
00c4fa e060     +LDI R22 , BYTE3 ( 0x5B5 )
00c4fb e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00c4fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB7:
                +
00c4fd 8fee     +STD Y + 30 , R30
00c4fe 8fff     +STD Y + 30 + 1 , R31
00c4ff a368     +STD Y + 30 + 2 , R22
00c500 a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00c501 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB8:
                +
00c502 8daa     +LDD R26 , Y + 26
00c503 8dbb     +LDD R27 , Y + 26 + 1
00c504 8d8c     +LDD R24 , Y + 26 + 2
00c505 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00c506 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xB9:
                +
00c507 33ac     +CPI R26 , LOW ( 0x3C )
00c508 e0e0     +LDI R30 , HIGH ( 0x3C )
00c509 07be     +CPC R27 , R30
00c50a e0e0     +LDI R30 , BYTE3 ( 0x3C )
00c50b 078e     +CPC R24 , R30
00c50c e0e0     +LDI R30 , BYTE4 ( 0x3C )
00c50d 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00c50e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBA:
                +
00c50f 8dee     +LDD R30 , Y + 30
00c510 8dff     +LDD R31 , Y + 30 + 1
00c511 a168     +LDD R22 , Y + 30 + 2
00c512 a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00c513 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xBB:
                +
00c514 5fef     +SUBI R30 , LOW ( - 1 )
00c515 4fff     +SBCI R31 , HIGH ( - 1 )
00c516 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c517 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c518 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBC:
                +
00c519 8dae     +LDD R26 , Y + 30
00c51a 8dbf     +LDD R27 , Y + 30 + 1
00c51b a188     +LDD R24 , Y + 30 + 2
00c51c a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
00c51d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBD:
                +
00c51e a1ee     +LDD R30 , Y + 38
00c51f a1ff     +LDD R31 , Y + 38 + 1
00c520 a568     +LDD R22 , Y + 38 + 2
00c521 a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00c522 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBE:
                +
00c523 e6ad     +LDI R26 , LOW ( 0x16D )
00c524 e0b1     +LDI R27 , HIGH ( 0x16D )
00c525 e080     +LDI R24 , BYTE3 ( 0x16D )
00c526 e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00c527 940e df5c 	CALL __MULD12U
00c529 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBF:
00c52a 940e e070 	CALL __SWAPD12
00c52c 940e dec0 	CALL __SUBD12
00c52e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC0:
                +
00c52f 8bee     +STD Y + 22 , R30
00c530 8bff     +STD Y + 22 + 1 , R31
00c531 8f68     +STD Y + 22 + 2 , R22
00c532 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00c533 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xC1:
                +
00c534 89ee     +LDD R30 , Y + 22
00c535 89ff     +LDD R31 , Y + 22 + 1
00c536 8d68     +LDD R22 , Y + 22 + 2
00c537 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00c538 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC2:
                +
00c539 a1ea     +LDD R30 , Y + 34
00c53a a1fb     +LDD R31 , Y + 34 + 1
00c53b a16c     +LDD R22 , Y + 34 + 2
00c53c a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00c53d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC3:
                +
00c53e 30e1     +CPI R30 , LOW ( 0x1 )
00c53f e0a0     +LDI R26 , HIGH ( 0x1 )
00c540 07fa     +CPC R31 , R26
00c541 e0a0     +LDI R26 , BYTE3 ( 0x1 )
00c542 076a     +CPC R22 , R26
00c543 e0a0     +LDI R26 , BYTE4 ( 0x1 )
00c544 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00c545 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC4:
                +
00c546 30e2     +CPI R30 , LOW ( 0x2 )
00c547 e0a0     +LDI R26 , HIGH ( 0x2 )
00c548 07fa     +CPC R31 , R26
00c549 e0a0     +LDI R26 , BYTE3 ( 0x2 )
00c54a 076a     +CPC R22 , R26
00c54b e0a0     +LDI R26 , BYTE4 ( 0x2 )
00c54c 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00c54d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC5:
                +
00c54e 30e3     +CPI R30 , LOW ( 0x3 )
00c54f e0a0     +LDI R26 , HIGH ( 0x3 )
00c550 07fa     +CPC R31 , R26
00c551 e0a0     +LDI R26 , BYTE3 ( 0x3 )
00c552 076a     +CPC R22 , R26
00c553 e0a0     +LDI R26 , BYTE4 ( 0x3 )
00c554 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00c555 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC6:
                +
00c556 30e4     +CPI R30 , LOW ( 0x4 )
00c557 e0a0     +LDI R26 , HIGH ( 0x4 )
00c558 07fa     +CPC R31 , R26
00c559 e0a0     +LDI R26 , BYTE3 ( 0x4 )
00c55a 076a     +CPC R22 , R26
00c55b e0a0     +LDI R26 , BYTE4 ( 0x4 )
00c55c 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00c55d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC7:
                +
00c55e 30e5     +CPI R30 , LOW ( 0x5 )
00c55f e0a0     +LDI R26 , HIGH ( 0x5 )
00c560 07fa     +CPC R31 , R26
00c561 e0a0     +LDI R26 , BYTE3 ( 0x5 )
00c562 076a     +CPC R22 , R26
00c563 e0a0     +LDI R26 , BYTE4 ( 0x5 )
00c564 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00c565 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC8:
                +
00c566 30e6     +CPI R30 , LOW ( 0x6 )
00c567 e0a0     +LDI R26 , HIGH ( 0x6 )
00c568 07fa     +CPC R31 , R26
00c569 e0a0     +LDI R26 , BYTE3 ( 0x6 )
00c56a 076a     +CPC R22 , R26
00c56b e0a0     +LDI R26 , BYTE4 ( 0x6 )
00c56c 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00c56d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC9:
                +
00c56e 30e7     +CPI R30 , LOW ( 0x7 )
00c56f e0a0     +LDI R26 , HIGH ( 0x7 )
00c570 07fa     +CPC R31 , R26
00c571 e0a0     +LDI R26 , BYTE3 ( 0x7 )
00c572 076a     +CPC R22 , R26
00c573 e0a0     +LDI R26 , BYTE4 ( 0x7 )
00c574 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00c575 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCA:
                +
00c576 30e8     +CPI R30 , LOW ( 0x8 )
00c577 e0a0     +LDI R26 , HIGH ( 0x8 )
00c578 07fa     +CPC R31 , R26
00c579 e0a0     +LDI R26 , BYTE3 ( 0x8 )
00c57a 076a     +CPC R22 , R26
00c57b e0a0     +LDI R26 , BYTE4 ( 0x8 )
00c57c 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00c57d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCB:
                +
00c57e 30e9     +CPI R30 , LOW ( 0x9 )
00c57f e0a0     +LDI R26 , HIGH ( 0x9 )
00c580 07fa     +CPC R31 , R26
00c581 e0a0     +LDI R26 , BYTE3 ( 0x9 )
00c582 076a     +CPC R22 , R26
00c583 e0a0     +LDI R26 , BYTE4 ( 0x9 )
00c584 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00c585 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCC:
                +
00c586 30ea     +CPI R30 , LOW ( 0xA )
00c587 e0a0     +LDI R26 , HIGH ( 0xA )
00c588 07fa     +CPC R31 , R26
00c589 e0a0     +LDI R26 , BYTE3 ( 0xA )
00c58a 076a     +CPC R22 , R26
00c58b e0a0     +LDI R26 , BYTE4 ( 0xA )
00c58c 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00c58d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCD:
                +
00c58e 30eb     +CPI R30 , LOW ( 0xB )
00c58f e0a0     +LDI R26 , HIGH ( 0xB )
00c590 07fa     +CPC R31 , R26
00c591 e0a0     +LDI R26 , BYTE3 ( 0xB )
00c592 076a     +CPC R22 , R26
00c593 e0a0     +LDI R26 , BYTE4 ( 0xB )
00c594 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00c595 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCE:
                +
00c596 30ec     +CPI R30 , LOW ( 0xC )
00c597 e0a0     +LDI R26 , HIGH ( 0xC )
00c598 07fa     +CPC R31 , R26
00c599 e0a0     +LDI R26 , BYTE3 ( 0xC )
00c59a 076a     +CPC R22 , R26
00c59b e0a0     +LDI R26 , BYTE4 ( 0xC )
00c59c 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00c59d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCF:
                +
00c59e 30a3     +CPI R26 , LOW ( 0x3 )
00c59f e0e0     +LDI R30 , HIGH ( 0x3 )
00c5a0 07be     +CPC R27 , R30
00c5a1 e0e0     +LDI R30 , BYTE3 ( 0x3 )
00c5a2 078e     +CPC R24 , R30
00c5a3 e0e0     +LDI R30 , BYTE4 ( 0x3 )
00c5a4 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00c5a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD0:
                +
00c5a6 8dea     +LDD R30 , Y + 26
00c5a7 8dfb     +LDD R31 , Y + 26 + 1
00c5a8 8d6c     +LDD R22 , Y + 26 + 2
00c5a9 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00c5aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD1:
                +
00c5ab 89ae     +LDD R26 , Y + 22
00c5ac 89bf     +LDD R27 , Y + 22 + 1
00c5ad 8d88     +LDD R24 , Y + 22 + 2
00c5ae 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00c5af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD2:
                +
00c5b0 5fef     +SUBI R30 , LOW ( - 1 )
00c5b1 4fff     +SBCI R31 , HIGH ( - 1 )
00c5b2 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c5b3 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00c5b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xD3:
                +
00c5b5 89ea     +LDD R30 , Y + 18
00c5b6 89fb     +LDD R31 , Y + 18 + 1
00c5b7 896c     +LDD R22 , Y + 18 + 2
00c5b8 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c5b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD4:
                +
00c5ba 85ea     +LDD R30 , Y + 10
00c5bb 85fb     +LDD R31 , Y + 10 + 1
00c5bc 856c     +LDD R22 , Y + 10 + 2
00c5bd 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c5be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD5:
00c5bf e0e0      	LDI  R30,LOW(0)
00c5c0 e0f0      	LDI  R31,HIGH(0)
00c5c1 8119      	LDD  R17,Y+1
00c5c2 8108      	LDD  R16,Y+0
00c5c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xD6:
00c5c4 de20      	RCALL SUBOPT_0x8C
00c5c5 ce11      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xD7:
                +
00c5c6 85a8     +LDD R26 , Y + 8
00c5c7 85b9     +LDD R27 , Y + 8 + 1
00c5c8 858a     +LDD R24 , Y + 8 + 2
00c5c9 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00c5ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 33 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0xD8:
                +
00c5cb 85ec     +LDD R30 , Y + 12
00c5cc 85fd     +LDD R31 , Y + 12 + 1
00c5cd 856e     +LDD R22 , Y + 12 + 2
00c5ce 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c5cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xD9:
                +
00c5d0 50e1     +SUBI R30 , LOW ( 1 )
00c5d1 40f0     +SBCI R31 , HIGH ( 1 )
00c5d2 4060     +SBCI R22 , BYTE3 ( 1 )
00c5d3 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00c5d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDA:
00c5d5 daa4      	RCALL SUBOPT_0xC
                +
00c5d6 e0a8     +LDI R26 , LOW ( 0x708 )
00c5d7 e0b7     +LDI R27 , HIGH ( 0x708 )
00c5d8 e080     +LDI R24 , BYTE3 ( 0x708 )
00c5d9 e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00c5da 940e df5c 	CALL __MULD12U
00c5dc cfe7      	RJMP SUBOPT_0xD6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDB:
                +
00c5dd 89ec     +LDD R30 , Y + 20
00c5de 89fd     +LDD R31 , Y + 20 + 1
00c5df 896e     +LDD R22 , Y + 20 + 2
00c5e0 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00c5e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDC:
                +
00c5e2 8de8     +LDD R30 , Y + 24
00c5e3 8df9     +LDD R31 , Y + 24 + 1
00c5e4 8d6a     +LDD R22 , Y + 24 + 2
00c5e5 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00c5e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDD:
00c5e7 dfe3      	RCALL SUBOPT_0xD8
00c5e8 dfdd      	RCALL SUBOPT_0xD7
00c5e9 940e e0c4 	CALL __CPD12
00c5eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xDE:
00c5ec da88      	RCALL SUBOPT_0xB
00c5ed dc5e      	RCALL SUBOPT_0x4F
00c5ee 940e dec0 	CALL __SUBD12
00c5f0 ceb9      	RJMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xDF:
00c5f1 dc5a      	RCALL SUBOPT_0x4F
00c5f2 da82      	RCALL SUBOPT_0xB
00c5f3 940e e0c4 	CALL __CPD12
00c5f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE0:
00c5f6 dfcf      	RCALL SUBOPT_0xD7
00c5f7 dfd3      	RCALL SUBOPT_0xD8
00c5f8 940e dec0 	CALL __SUBD12
00c5fa ceaf      	RJMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE1:
00c5fb deb3      	RCALL SUBOPT_0xA8
                +
00c5fc 30aa     +CPI R26 , LOW ( 0xA )
00c5fd e0e0     +LDI R30 , HIGH ( 0xA )
00c5fe 07be     +CPC R27 , R30
00c5ff e0e0     +LDI R30 , BYTE3 ( 0xA )
00c600 078e     +CPC R24 , R30
00c601 e0e0     +LDI R30 , BYTE4 ( 0xA )
00c602 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00c603 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE2:
                +
00c604 e1e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00c605 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00c606 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00c607 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00c608 cddf      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE3:
00c609 940e e05e 	CALL __PUTPARD1
00c60b dfd1      	RCALL SUBOPT_0xDB
00c60c cc94      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE4:
00c60d 85ec      	LDD  R30,Y+12
00c60e 2f1e      	MOV  R17,R30
00c60f da65      	RCALL SUBOPT_0xB
00c610 e0e8      	LDI  R30,LOW(8)
00c611 940e def5 	CALL __LSRD12
00c613 2f0e      	MOV  R16,R30
00c614 dfb6      	RCALL SUBOPT_0xD8
00c615 940e df2b 	CALL __LSRD16
00c617 2f3e      	MOV  R19,R30
00c618 da5c      	RCALL SUBOPT_0xB
00c619 e1e8      	LDI  R30,LOW(24)
00c61a 940e def5 	CALL __LSRD12
00c61c 2f2e      	MOV  R18,R30
00c61d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE5:
00c61e e0a0      	LDI  R26,LOW(0)
00c61f 940e dce7 	CALL _i2c_write
00c621 2fa1      	MOV  R26,R17
00c622 940e dce7 	CALL _i2c_write
00c624 2fa0      	MOV  R26,R16
00c625 940e dce7 	CALL _i2c_write
00c627 2fa3      	MOV  R26,R19
00c628 940e dce7 	CALL _i2c_write
00c62a 2fa2      	MOV  R26,R18
00c62b ce73      	RJMP SUBOPT_0xA5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE6:
00c62c 93ba      	ST   -Y,R27
00c62d 93aa      	ST   -Y,R26
00c62e 972c      	SBIW R28,12
00c62f 940e e0d0 	CALL __SAVELOCR4
00c631 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xE7:
00c632 940e e05e 	CALL __PUTPARD1
00c634 89ec      	LDD  R30,Y+20
00c635 89fd      	LDD  R31,Y+20+1
00c636 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0xE8:
00c637 940e df3b 	CALL __CWD1
00c639 940e e05e 	CALL __PUTPARD1
00c63b ca69      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xE9:
                +
00c63c 87ec     +STD Y + 12 , R30
00c63d 87fd     +STD Y + 12 + 1 , R31
00c63e 876e     +STD Y + 12 + 2 , R22
00c63f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEA:
00c641 e3ac      	LDI  R26,LOW(60)
00c642 e0b0      	LDI  R27,HIGH(60)
00c643 940e df82 	CALL __MULW12
00c645 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEB:
00c646 dff5      	RCALL SUBOPT_0xE9
00c647 cf83      	RJMP SUBOPT_0xD8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEC:
00c648 93e0 1430 	STS  _raw_rtc,R30
00c64a 93f0 1431 	STS  _raw_rtc+1,R31
00c64c 9360 1432 	STS  _raw_rtc+2,R22
00c64e 9370 1433 	STS  _raw_rtc+3,R23
00c650 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xED:
00c651 93ba      	ST   -Y,R27
00c652 93aa      	ST   -Y,R26
00c653 9724      	SBIW R28,4
00c654 931a      	ST   -Y,R17
00c655 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xEE:
00c656 de87      	RCALL SUBOPT_0xB1
00c657 ce90      	RJMP SUBOPT_0xB3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xEF:
00c658 de8a      	RCALL SUBOPT_0xB2
00c659 940e e05e 	CALL __PUTPARD1
00c65b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF0:
00c65c 940e e05e 	CALL __PUTPARD1
00c65e 8dec      	LDD  R30,Y+28
00c65f 8dfd      	LDD  R31,Y+28+1
00c660 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF1:
00c661 df80      	RCALL SUBOPT_0xDC
00c662 940e e05e 	CALL __PUTPARD1
00c664 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF2:
                +
00c665 a5e8     +LDD R30 , Y + 40
00c666 a5f9     +LDD R31 , Y + 40 + 1
00c667 a56a     +LDD R22 , Y + 40 + 2
00c668 a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00c669 940e e05e 	CALL __PUTPARD1
00c66b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF3:
                +
00c66c a9e8     +LDD R30 , Y + 48
00c66d a9f9     +LDD R31 , Y + 48 + 1
00c66e a96a     +LDD R22 , Y + 48 + 2
00c66f a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
00c670 940e e05e 	CALL __PUTPARD1
00c672 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF4:
00c673 e0a0      	LDI  R26,LOW(0)
00c674 e0b0      	LDI  R27,0
00c675 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF5:
00c676 93fa      	ST   -Y,R31
00c677 93ea      	ST   -Y,R30
00c678 e0e0      	LDI  R30,LOW(0)
00c679 93ea      	ST   -Y,R30
00c67a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF6:
00c67b eaa1      	LDI  R26,LOW(161)
00c67c e0b0      	LDI  R27,0
00c67d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF7:
00c67e 0fa0      	ADD  R26,R16
00c67f 1fb1      	ADC  R27,R17
00c680 940e e085 	CALL __EEPROMRDB
00c682 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xF8:
00c683 0fe0      	ADD  R30,R16
00c684 1ff1      	ADC  R31,R17
00c685 01df      	MOVW R26,R30
00c686 940e e085 	CALL __EEPROMRDB
00c688 01d0      	MOVW R26,R0
00c689 93ec      	ST   X,R30
00c68a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF9:
00c68b 81ea      	LDD  R30,Y+2
00c68c 81fb      	LDD  R31,Y+2+1
00c68d 5be0      	SUBI R30,LOW(-80)
00c68e 4fff      	SBCI R31,HIGH(-80)
00c68f 0fe0      	ADD  R30,R16
00c690 1ff1      	ADC  R31,R17
00c691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFA:
00c692 81ea      	LDD  R30,Y+2
00c693 81fb      	LDD  R31,Y+2+1
00c694 59ec      	SUBI R30,LOW(-100)
00c695 4fff      	SBCI R31,HIGH(-100)
00c696 0fe0      	ADD  R30,R16
00c697 1ff1      	ADC  R31,R17
00c698 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFB:
00c699 81ea      	LDD  R30,Y+2
00c69a 81fb      	LDD  R31,Y+2+1
00c69b 57e4      	SUBI R30,LOW(-140)
00c69c 4fff      	SBCI R31,HIGH(-140)
00c69d 0fe0      	ADD  R30,R16
00c69e 1ff1      	ADC  R31,R17
00c69f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFC:
00c6a0 93ec      	ST   X,R30
00c6a1 81aa      	LDD  R26,Y+2
00c6a2 81bb      	LDD  R27,Y+2+1
00c6a3 9611      	ADIW R26,1
00c6a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFD:
00c6a5 93ec      	ST   X,R30
00c6a6 81aa      	LDD  R26,Y+2
00c6a7 81bb      	LDD  R27,Y+2+1
00c6a8 9612      	ADIW R26,2
00c6a9 e0e0      	LDI  R30,LOW(0)
00c6aa 93ec      	ST   X,R30
                +
00c6ab e000     +LDI R16 , LOW ( 0 )
00c6ac e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c6ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0xFE:
00c6ae 81ea      	LDD  R30,Y+2
00c6af 81fb      	LDD  R31,Y+2+1
00c6b0 9633      	ADIW R30,3
00c6b1 0fe0      	ADD  R30,R16
00c6b2 1ff1      	ADC  R31,R17
00c6b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xFF:
00c6b4 940e e085 	CALL __EEPROMRDB
00c6b6 81aa      	LDD  R26,Y+2
00c6b7 81bb      	LDD  R27,Y+2+1
00c6b8 93ec      	ST   X,R30
00c6b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x100:
00c6ba 940e e085 	CALL __EEPROMRDB
                +
00c6bc 81aa     +LDD R26 , Y + 2
00c6bd 81bb     +LDD R27 , Y + 2 + 1
00c6be 9611     +ADIW R26 , 1
00c6bf 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00c6c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x101:
00c6c1 940e e085 	CALL __EEPROMRDB
                +
00c6c3 81aa     +LDD R26 , Y + 2
00c6c4 81bb     +LDD R27 , Y + 2 + 1
00c6c5 9612     +ADIW R26 , 2
00c6c6 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00c6c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x102:
00c6c8 940e e05e 	CALL __PUTPARD1
00c6ca 81ae      	LDD  R26,Y+6
00c6cb 81bf      	LDD  R27,Y+6+1
00c6cc 91ec      	LD   R30,X
00c6cd ca75      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x103:
00c6ce 940e e05e 	CALL __PUTPARD1
00c6d0 81ee      	LDD  R30,Y+6
00c6d1 81ff      	LDD  R31,Y+6+1
00c6d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x104:
                +
00c6d3 e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c6d4 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c6d5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c6d6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c6d7 cff6      	RJMP SUBOPT_0x103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x105:
00c6d8 9633      	ADIW R30,3
00c6d9 0fe0      	ADD  R30,R16
00c6da 1ff1      	ADC  R31,R17
00c6db 81e0      	LD   R30,Z
00c6dc ca66      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x106:
                +
00c6dd e4ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00c6de e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00c6df e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00c6e0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00c6e1 c94d      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x107:
00c6e2 93ba      	ST   -Y,R27
00c6e3 93aa      	ST   -Y,R26
00c6e4 81ab      	LDD  R26,Y+3
00c6e5 23aa      	TST  R26
00c6e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x108:
00c6e7 93ed      	ST   X+,R30
00c6e8 93fc      	ST   X,R31
00c6e9 81a8      	LD   R26,Y
00c6ea 81b9      	LDD  R27,Y+1
00c6eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x109:
00c6ec e0e0      	LDI  R30,LOW(0)
00c6ed 93ec      	ST   X,R30
00c6ee 81a8      	LD   R26,Y
00c6ef 81b9      	LDD  R27,Y+1
00c6f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x10A:
                +
00c6f1 e0e0     +LDI R30 , LOW ( 0x41200000 )
00c6f2 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c6f3 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c6f4 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c6f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x10B:
00c6f6 81aa      	LDD  R26,Y+2
00c6f7 81bb      	LDD  R27,Y+2+1
00c6f8 e1ed      	LDI  R30,LOW(29)
00c6f9 940e df7c 	CALL __MULB1W2U
00c6fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10C:
                +
00c6fc 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00c6fd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00c6fe 01df      	MOVW R26,R30
00c6ff 940e e07d 	CALL __EEPROMRDD
00c701 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10D:
                +
00c702 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00c703 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00c704 01df      	MOVW R26,R30
00c705 940e e081 	CALL __EEPROMRDW
00c707 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10E:
                +
00c708 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00c709 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00c70a 01df      	MOVW R26,R30
00c70b 940e e07d 	CALL __EEPROMRDD
00c70d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10F:
                +
00c70e 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00c70f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00c710 01df      	MOVW R26,R30
00c711 940e e07d 	CALL __EEPROMRDD
00c713 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x110:
                +
00c714 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00c715 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00c716 01df      	MOVW R26,R30
00c717 940e e081 	CALL __EEPROMRDW
00c719 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x111:
                +
00c71a 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00c71b 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00c71c 01df      	MOVW R26,R30
00c71d 940e e07d 	CALL __EEPROMRDD
00c71f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x112:
00c720 e0e0      	LDI  R30,LOW(0)
00c721 e0f0      	LDI  R31,HIGH(0)
00c722 93ed      	ST   X+,R30
00c723 93fc      	ST   X,R31
00c724 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x113:
00c725 81aa      	LDD  R26,Y+2
00c726 81bb      	LDD  R27,Y+2+1
00c727 e0e3      	LDI  R30,LOW(3)
00c728 940e df7c 	CALL __MULB1W2U
00c72a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x114:
00c72b 01df      	MOVW R26,R30
00c72c 940e e085 	CALL __EEPROMRDB
00c72e 81a8      	LD   R26,Y
00c72f 81b9      	LDD  R27,Y+1
00c730 93ec      	ST   X,R30
00c731 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x115:
00c732 940e e081 	CALL __EEPROMRDW
                +
00c734 81a8     +LDD R26 , Y + 0
00c735 81b9     +LDD R27 , Y + 0 + 1
00c736 9611     +ADIW R26 , 1
00c737 93ed     +ST X + , R30
00c738 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00c739 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x116:
00c73a 940e e05e 	CALL __PUTPARD1
00c73c 85e8      	LDD  R30,Y+8
00c73d 85f9      	LDD  R31,Y+8+1
00c73e cef8      	RJMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x117:
00c73f 81ac      	LDD  R26,Y+4
00c740 81bd      	LDD  R27,Y+4+1
00c741 e2e6      	LDI  R30,LOW(38)
00c742 940e df7c 	CALL __MULB1W2U
00c744 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x118:
00c745 940e e05e 	CALL __PUTPARD1
00c747 85a8      	LDD  R26,Y+8
00c748 85b9      	LDD  R27,Y+8+1
00c749 e2e6      	LDI  R30,LOW(38)
00c74a 940e df7c 	CALL __MULB1W2U
00c74c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x119:
00c74d 59e6      	SUBI R30,LOW(-_config_dout)
00c74e 4ffe      	SBCI R31,HIGH(-_config_dout)
00c74f 01df      	MOVW R26,R30
00c750 940e e085 	CALL __EEPROMRDB
00c752 c9f0      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11A:
                +
00c753 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00c754 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00c755 01df      	MOVW R26,R30
00c756 940e e085 	CALL __EEPROMRDB
00c758 c9ea      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11B:
                +
00c759 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00c75a 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00c75b 01df      	MOVW R26,R30
00c75c 940e e085 	CALL __EEPROMRDB
00c75e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x11C:
00c75f 01d8      	MOVW R26,R16
00c760 e0f0      	LDI  R31,0
00c761 17ae      	CP   R26,R30
00c762 07bf      	CPC  R27,R31
00c763 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11D:
                +
00c764 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00c765 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00c766 0fe0      	ADD  R30,R16
00c767 1ff1      	ADC  R31,R17
00c768 01df      	MOVW R26,R30
00c769 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x11E:
00c76a 81aa      	LDD  R26,Y+2
00c76b 81bb      	LDD  R27,Y+2+1
00c76c e0e5      	LDI  R30,LOW(5)
00c76d 940e df7c 	CALL __MULB1W2U
00c76f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x11F:
00c770 81ea      	LDD  R30,Y+2
00c771 81fb      	LDD  R31,Y+2+1
00c772 9636      	ADIW R30,6
00c773 0fe0      	ADD  R30,R16
00c774 1ff1      	ADC  R31,R17
00c775 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x120:
00c776 81ac      	LDD  R26,Y+4
00c777 81bd      	LDD  R27,Y+4+1
00c778 e2e9      	LDI  R30,LOW(41)
00c779 940e df7c 	CALL __MULB1W2U
00c77b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x121:
                +
00c77c 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00c77d 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00c77e 01df      	MOVW R26,R30
00c77f 940e e085 	CALL __EEPROMRDB
00c781 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x122:
                +
00c782 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00c783 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00c784 0fe0      	ADD  R30,R16
00c785 1ff1      	ADC  R31,R17
00c786 01df      	MOVW R26,R30
00c787 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x123:
00c788 81ee      	LDD  R30,Y+6
00c789 81ff      	LDD  R31,Y+6+1
00c78a 9632      	ADIW R30,2
00c78b 0fe0      	ADD  R30,R16
00c78c 1ff1      	ADC  R31,R17
00c78d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x124:
00c78e 01de      	MOVW R26,R28
00c78f 9612      	ADIW R26,2
00c790 0fa0      	ADD  R26,R16
00c791 1fb1      	ADC  R27,R17
00c792 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x125:
                +
00c793 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00c794 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00c795 940e e085 	CALL __EEPROMRDB
00c797 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x126:
00c798 940e e05e 	CALL __PUTPARD1
00c79a 85aa      	LDD  R26,Y+10
00c79b 85bb      	LDD  R27,Y+10+1
00c79c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x127:
00c79d 940e e05e 	CALL __PUTPARD1
00c79f 85ea      	LDD  R30,Y+10
00c7a0 85fb      	LDD  R31,Y+10+1
00c7a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x128:
                +
00c7a2 e4e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c7a3 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c7a4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c7a5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c7a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x129:
00c7a7 9632      	ADIW R30,2
00c7a8 0fe0      	ADD  R30,R16
00c7a9 1ff1      	ADC  R31,R17
00c7aa 81e0      	LD   R30,Z
00c7ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12A:
00c7ac 940e e05e 	CALL __PUTPARD1
00c7ae 81ac      	LDD  R26,Y+4
00c7af 81bd      	LDD  R27,Y+4+1
00c7b0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12B:
00c7b1 940e e02e 	CALL __GETD1P
00c7b3 940e e05e 	CALL __PUTPARD1
00c7b5 c8ef      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12C:
00c7b6 940e e02a 	CALL __GETW1P
00c7b8 ce7e      	RJMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x12D:
00c7b9 940e e05e 	CALL __PUTPARD1
00c7bb 81ec      	LDD  R30,Y+4
00c7bc 81fd      	LDD  R31,Y+4+1
00c7bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12E:
                +
00c7be 81a6     +LDD R26 , Z + 6
00c7bf 81b7     +LDD R27 , Z + 6 + 1
00c7c0 8580     +LDD R24 , Z + 6 + 2
00c7c1 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00c7c2 940e e063 	CALL __PUTPARD2
00c7c4 c8e0      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12F:
                +
00c7c5 85a2     +LDD R26 , Z + 10
00c7c6 85b3     +LDD R27 , Z + 10 + 1
00c7c7 8584     +LDD R24 , Z + 10 + 2
00c7c8 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00c7c9 940e e063 	CALL __PUTPARD2
00c7cb c8d9      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x130:
00c7cc 0fae      	ADD  R26,R30
00c7cd 1fbf      	ADC  R27,R31
00c7ce 91ec      	LD   R30,X
00c7cf 01d0      	MOVW R26,R0
00c7d0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x131:
00c7d1 91ec      	LD   R30,X
00c7d2 01d0      	MOVW R26,R0
00c7d3 940e e0a1 	CALL __EEPROMWRB
00c7d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x132:
00c7d6 e0e1      	LDI  R30,LOW(1)
00c7d7 940e e0a1 	CALL __EEPROMWRB
00c7d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x133:
00c7da 940e e085 	CALL __EEPROMRDB
00c7dc c966      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x134:
                +
00c7dd e2e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00c7de e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00c7df e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00c7e0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00c7e1 940e e05e 	CALL __PUTPARD1
00c7e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x135:
00c7e4 81a8      	LD   R26,Y
00c7e5 81b9      	LDD  R27,Y+1
00c7e6 940e e02a 	CALL __GETW1P
00c7e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x136:
00c7e9 01d0      	MOVW R26,R0
00c7ea 940e e099 	CALL __EEPROMWRW
00c7ec cf09      	RJMP SUBOPT_0x10B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x137:
00c7ed 940e e02a 	CALL __GETW1P
00c7ef cff9      	RJMP SUBOPT_0x136
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x138:
00c7f0 940e e0a1 	CALL __EEPROMWRB
00c7f2 cf03      	RJMP SUBOPT_0x10B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x139:
00c7f3 940e e02e 	CALL __GETD1P
00c7f5 01d0      	MOVW R26,R0
00c7f6 940e e091 	CALL __EEPROMWRD
00c7f8 cefd      	RJMP SUBOPT_0x10B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13A:
00c7f9 940e e02e 	CALL __GETD1P
00c7fb 01d0      	MOVW R26,R0
00c7fc 940e e091 	CALL __EEPROMWRD
00c7fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x13B:
00c7ff 940e e05e 	CALL __PUTPARD1
00c801 81ae      	LDD  R26,Y+6
00c802 81bf      	LDD  R27,Y+6+1
00c803 e1ed      	LDI  R30,LOW(29)
00c804 940e df7c 	CALL __MULB1W2U
00c806 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13C:
00c807 01df      	MOVW R26,R30
00c808 940e e081 	CALL __EEPROMRDW
00c80a c986      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x13D:
00c80b 2766      	CLR  R22
00c80c 2777      	CLR  R23
00c80d c8fa      	RJMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13E:
00c80e 010f      	MOVW R0,R30
00c80f 81a8      	LD   R26,Y
00c810 81b9      	LDD  R27,Y+1
00c811 9611      	ADIW R26,1
00c812 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13F:
00c813 940e e02a 	CALL __GETW1P
00c815 01d0      	MOVW R26,R0
00c816 940e e099 	CALL __EEPROMWRW
00c818 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x140:
                +
00c819 e3e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00c81a e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00c81b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00c81c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00c81d ceb0      	RJMP SUBOPT_0x103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x141:
                +
00c81e e5e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00c81f e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00c820 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00c821 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00c822 940e e05e 	CALL __PUTPARD1
00c824 81ae      	LDD  R26,Y+6
00c825 81bf      	LDD  R27,Y+6+1
00c826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x142:
00c827 940e e05e 	CALL __PUTPARD1
00c829 81ae      	LDD  R26,Y+6
00c82a 81bf      	LDD  R27,Y+6+1
00c82b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x143:
00c82c 940e e0a1 	CALL __EEPROMWRB
00c82e cf10      	RJMP SUBOPT_0x117
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x144:
00c82f 940e e0a1 	CALL __EEPROMWRB
                +
00c831 eeea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00c832 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00c833 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00c834 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00c835 cf04      	RJMP SUBOPT_0x116
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x145:
                +
00c836 e4e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00c837 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00c838 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00c839 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00c83a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x146:
                +
00c83b e6e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00c83c e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00c83d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00c83e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00c83f 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x147:
00c841 01df      	MOVW R26,R30
00c842 940e e07d 	CALL __EEPROMRDD
00c844 940e e05e 	CALL __PUTPARD1
00c846 940c c0a5 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x148:
00c848 940e e05e 	CALL __PUTPARD1
00c84a 85a8      	LDD  R26,Y+8
00c84b 85b9      	LDD  R27,Y+8+1
00c84c e2e9      	LDI  R30,LOW(41)
00c84d 940e df7c 	CALL __MULB1W2U
00c84f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x149:
                +
00c850 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00c851 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00c852 0fe0      	ADD  R30,R16
00c853 1ff1      	ADC  R31,R17
00c854 01df      	MOVW R26,R30
00c855 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x14A:
00c856 940e e07d 	CALL __EEPROMRDD
00c858 940e e05e 	CALL __PUTPARD1
00c85a 940c c0a5 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x14B:
00c85c 931a      	ST   -Y,R17
00c85d 930a      	ST   -Y,R16
                +
00c85e e000     +LDI R16 , LOW ( 0 )
00c85f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c860 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x14C:
00c861 0fa0      	ADD  R26,R16
00c862 1fb1      	ADC  R27,R17
00c863 e0e0      	LDI  R30,LOW(0)
00c864 93ec      	ST   X,R30
00c865 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x14D:
00c866 e0e0      	LDI  R30,LOW(0)
00c867 e0f0      	LDI  R31,HIGH(0)
00c868 940e e0d7 	CALL __LOADLOCR4
00c86a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x14E:
00c86b 972a      	SBIW R28,10
00c86c 940e e0d0 	CALL __SAVELOCR4
                +
00c86e e000     +LDI R16 , LOW ( 0 )
00c86f e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c870 e020     +LDI R18 , LOW ( 0 )
00c871 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c872 01f8      	MOVW R30,R16
                +
00c873 5f0f     +SUBI R16 , LOW ( - 1 )
00c874 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c875 01de      	MOVW R26,R28
00c876 9614      	ADIW R26,4
00c877 0fae      	ADD  R26,R30
00c878 1fbf      	ADC  R27,R31
00c879 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x14F:
00c87a 01f8      	MOVW R30,R16
                +
00c87b 5f0f     +SUBI R16 , LOW ( - 1 )
00c87c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c87d 01de      	MOVW R26,R28
00c87e 9614      	ADIW R26,4
00c87f 0fea      	ADD  R30,R26
00c880 1ffb      	ADC  R31,R27
00c881 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x150:
00c882 010f      	MOVW R0,R30
00c883 e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00c884 e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00c885 0fa2      	ADD  R26,R18
00c886 1fb3      	ADC  R27,R19
00c887 940e e085 	CALL __EEPROMRDB
00c889 01d0      	MOVW R26,R0
00c88a 93ec      	ST   X,R30
00c88b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x151:
00c88c 01fe      	MOVW R30,R28
00c88d 9634      	ADIW R30,4
00c88e 93fa      	ST   -Y,R31
00c88f 93ea      	ST   -Y,R30
00c890 931a      	ST   -Y,R17
00c891 930a      	ST   -Y,R16
00c892 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x152:
00c893 940e 5d45 	CALL _ETH_send
00c895 cfd0      	RJMP SUBOPT_0x14D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x153:
00c896 940e e0d0 	CALL __SAVELOCR4
                +
00c898 e000     +LDI R16 , LOW ( 0 )
00c899 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c89a e020     +LDI R18 , LOW ( 0 )
00c89b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c89c 01f8      	MOVW R30,R16
                +
00c89d 5f0f     +SUBI R16 , LOW ( - 1 )
00c89e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c89f 01de      	MOVW R26,R28
00c8a0 9614      	ADIW R26,4
00c8a1 0fae      	ADD  R26,R30
00c8a2 1fbf      	ADC  R27,R31
00c8a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x154:
00c8a4 85e8      	LDD  R30,Y+8
00c8a5 85f9      	LDD  R31,Y+8+1
00c8a6 963f      	ADIW R30,15
00c8a7 01af      	MOVW R20,R30
                +
00c8a8 3f4b     +CPI R20 , LOW ( 251 )
00c8a9 e0e0     +LDI R30 , HIGH ( 251 )
00c8aa 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00c8ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x155:
00c8ac 01da      	MOVW R26,R20
00c8ad 940e a4fe 	CALL _malloc
00c8af 83ee      	STD  Y+6,R30
00c8b0 83ff      	STD  Y+6+1,R31
00c8b1 9730      	SBIW R30,0
00c8b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x156:
00c8b3 01f8      	MOVW R30,R16
                +
00c8b4 5f0f     +SUBI R16 , LOW ( - 1 )
00c8b5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c8b6 81ae      	LDD  R26,Y+6
00c8b7 81bf      	LDD  R27,Y+6+1
00c8b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x157:
00c8b9 0fea      	ADD  R30,R26
00c8ba 1ffb      	ADC  R31,R27
00c8bb cfc6      	RJMP SUBOPT_0x150
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x158:
00c8bc 01f8      	MOVW R30,R16
00c8bd 81ae      	LDD  R26,Y+6
00c8be 81bf      	LDD  R27,Y+6+1
00c8bf 940c c0f4 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x159:
00c8c1 85ec      	LDD  R30,Y+12
00c8c2 85fd      	LDD  R31,Y+12+1
00c8c3 93fa      	ST   -Y,R31
00c8c4 93ea      	ST   -Y,R30
00c8c5 85ac      	LDD  R26,Y+12
00c8c6 85bd      	LDD  R27,Y+12+1
00c8c7 940e a53b 	CALL _memcpy
00c8c9 85e8      	LDD  R30,Y+8
00c8ca 85f9      	LDD  R31,Y+8+1
                +
00c8cb 0f0e     +ADD R16 , R30
00c8cc 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00c8cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x15A:
00c8ce 81ee      	LDD  R30,Y+6
00c8cf 81ff      	LDD  R31,Y+6+1
00c8d0 93fa      	ST   -Y,R31
00c8d1 93ea      	ST   -Y,R30
00c8d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15B:
00c8d3 93ea      	ST   -Y,R30
00c8d4 e0ac      	LDI  R26,LOW(12)
00c8d5 e0b0      	LDI  R27,0
00c8d6 940c 5d45 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x15C:
00c8d8 81ae      	LDD  R26,Y+6
00c8d9 81bf      	LDD  R27,Y+6+1
00c8da 940c a519 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15D:
00c8dc 01f8      	MOVW R30,R16
                +
00c8dd 5f0f     +SUBI R16 , LOW ( - 1 )
00c8de 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c8df 01de      	MOVW R26,R28
00c8e0 9616      	ADIW R26,6
00c8e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x15E:
                +
00c8e2 a1e9     +LDD R30 , Y + 33
00c8e3 a1fa     +LDD R31 , Y + 33 + 1
00c8e4 a16b     +LDD R22 , Y + 33 + 2
00c8e5 a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00c8e6 940e e05e 	CALL __PUTPARD1
00c8e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x15F:
00c8e9 e180      	LDI  R24,16
00c8ea 940e 9de6 	CALL _printDebug
00c8ec 9664      	ADIW R28,20
00c8ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x160:
00c8ee 85ef      	LDD  R30,Y+15
00c8ef 93ea      	ST   -Y,R30
00c8f0 85ef      	LDD  R30,Y+15
00c8f1 93ea      	ST   -Y,R30
00c8f2 85ef      	LDD  R30,Y+15
00c8f3 93ea      	ST   -Y,R30
00c8f4 e0a1      	LDI  R26,LOW(1)
00c8f5 940e 5477 	CALL _ETH_sendConfigManageNack
00c8f7 efef      	LDI  R30,LOW(65535)
00c8f8 efff      	LDI  R31,HIGH(65535)
00c8f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x161:
00c8fa 940e 9e6a 	CALL _print_payload
00c8fc cfd1      	RJMP SUBOPT_0x15A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x162:
00c8fd 01f8      	MOVW R30,R16
                +
00c8fe 5f0f     +SUBI R16 , LOW ( - 1 )
00c8ff 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c900 01de      	MOVW R26,R28
00c901 9617      	ADIW R26,7
00c902 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x163:
                +
00c903 a5ea     +LDD R30 , Y + 42
00c904 a5fb     +LDD R31 , Y + 42 + 1
00c905 a56c     +LDD R22 , Y + 42 + 2
00c906 a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
00c907 940e e05e 	CALL __PUTPARD1
00c909 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x164:
00c90a 93aa      	ST   -Y,R26
00c90b 972b      	SBIW R28,11
00c90c cf89      	RJMP SUBOPT_0x153
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x165:
00c90d 89a8      	LDD  R26,Y+16
00c90e 83a0      	STD  Z+0,R26
00c90f cf6a      	RJMP SUBOPT_0x14F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x166:
00c910 01de      	MOVW R26,R28
00c911 9614      	ADIW R26,4
00c912 0fae      	ADD  R26,R30
00c913 1fbf      	ADC  R27,R31
00c914 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x167:
                +
00c915 01fe     +MOVW R30 , R28
00c916 5de2     +SUBI R30 , LOW ( - 558 )
00c917 4ffd     +SBCI R31 , HIGH ( - 558 )
00c918 81e0     +LD R30 , Z
                 	__GETB1SX 558
00c919 93ea      	ST   -Y,R30
00c91a c9d5      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x168:
00c91b 01fe      	MOVW R30,R28
00c91c 963e      	ADIW R30,14
00c91d 93fa      	ST   -Y,R31
00c91e 93ea      	ST   -Y,R30
00c91f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x169:
00c920 dcaa      	RCALL SUBOPT_0xD8
00c921 940e e05e 	CALL __PUTPARD1
00c923 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16A:
                +
00c924 e9e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00c925 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00c926 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00c927 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00c928 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16B:
00c92a 01de      	MOVW R26,R28
00c92b 961e      	ADIW R26,14
                +
00c92c 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c92e 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c930 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c932 bf6c     +OUT EIND , R22
00c933 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c934 018f      	MOVW R16,R30
00c935 2311      	TST  R17
00c936 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16C:
                +
00c937 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00c938 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00c939 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00c93a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00c93b 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x16D:
                +
00c93d e0ab     +LDI R26 , 11
00c93e 9fa0     +MUL R26 , R16
00c93f 01f0     +MOVW R30 , R0
00c940 9fa1     +MUL R26 , R17
00c941 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00c942 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x16E:
00c943 940e e05e 	CALL __PUTPARD1
00c945 91e0 1421 	LDS  R30,_commLostTimer
00c947 91f0 1422 	LDS  R31,_commLostTimer+1
00c949 9160 1423 	LDS  R22,_commLostTimer+2
00c94b 9170 1424 	LDS  R23,_commLostTimer+3
00c94d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x16F:
00c94e 91a0 1421 	LDS  R26,_commLostTimer
00c950 91b0 1422 	LDS  R27,_commLostTimer+1
00c952 9180 1423 	LDS  R24,_commLostTimer+2
00c954 9190 1424 	LDS  R25,_commLostTimer+3
00c956 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x170:
00c957 93fa      	ST   -Y,R31
00c958 93ea      	ST   -Y,R30
                +
00c959 e1ae     +LDI R26 , LOW ( 0x1E )
00c95a e0b0     +LDI R27 , HIGH ( 0x1E )
00c95b e080     +LDI R24 , BYTE3 ( 0x1E )
00c95c e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00c95d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x171:
00c95e 940e e05e 	CALL __PUTPARD1
00c960 da68      	RCALL SUBOPT_0x88
00c961 91e0 1421 	LDS  R30,_commLostTimer
00c963 91f0 1422 	LDS  R31,_commLostTimer+1
00c965 9160 1423 	LDS  R22,_commLostTimer+2
00c967 9170 1424 	LDS  R23,_commLostTimer+3
00c969 940e dec0 	CALL __SUBD12
00c96b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x172:
                +
00c96c 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00c96d 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00c96e 93fa      	ST   -Y,R31
00c96f 93ea      	ST   -Y,R30
00c970 cfcc      	RJMP SUBOPT_0x16D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x173:
                +
00c971 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00c972 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00c973 01df      	MOVW R26,R30
00c974 940e e02a 	CALL __GETW1P
00c976 940e df3b 	CALL __CWD1
00c978 940c c0fe 	JMP SUBOPT_0x1F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x174:
                +
00c97a 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00c97b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00c97c 01df      	MOVW R26,R30
00c97d 940e e02a 	CALL __GETW1P
00c97f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x175:
                +
00c980 01de     +MOVW R26 , R28
00c981 5da2     +SUBI R26 , LOW ( - 558 )
00c982 4fbd     +SBCI R27 , HIGH ( - 558 )
00c983 900d     +LD R0 , X +
00c984 91bc     +LD R27 , X
00c985 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00c986 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x176:
                +
00c987 01de     +MOVW R26 , R28
00c988 5da4     +SUBI R26 , LOW ( - 556 )
00c989 4fbd     +SBCI R27 , HIGH ( - 556 )
00c98a 900d     +LD R0 , X +
00c98b 91bc     +LD R27 , X
00c98c 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00c98d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x177:
00c98e 940e e05e 	CALL __PUTPARD1
                +
00c990 01fe     +MOVW R30 , R28
00c991 5de0     +SUBI R30 , LOW ( - 560 )
00c992 4ffd     +SBCI R31 , HIGH ( - 560 )
00c993 9001     +LD R0 , Z +
00c994 81f0     +LD R31 , Z
00c995 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00c996 cca0      	RJMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x178:
00c997 930a      	ST   -Y,R16
00c998 e1a0      	LDI  R26,LOW(16)
00c999 940c 5344 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x179:
00c99b 940e a4fe 	CALL _malloc
00c99d 01af      	MOVW R20,R30
00c99e 2e04      	MOV  R0,R20
00c99f 2a05      	OR   R0,R21
00c9a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17A:
00c9a1 930a      	ST   -Y,R16
00c9a2 e5a0      	LDI  R26,LOW(80)
00c9a3 940c 5344 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x17B:
                +
00c9a5 01fe     +MOVW R30 , R28
00c9a6 5de2     +SUBI R30 , LOW ( - 558 )
00c9a7 4ffd     +SBCI R31 , HIGH ( - 558 )
00c9a8 9001     +LD R0 , Z +
00c9a9 81f0     +LD R31 , Z
00c9aa 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00c9ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17C:
00c9ac 9632      	ADIW R30,2
00c9ad 93fa      	ST   -Y,R31
00c9ae 93ea      	ST   -Y,R30
00c9af dff5      	RCALL SUBOPT_0x17B
00c9b0 9732      	SBIW R30,2
00c9b1 93fa      	ST   -Y,R31
00c9b2 93ea      	ST   -Y,R30
00c9b3 01da      	MOVW R26,R20
00c9b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17D:
00c9b5 01da      	MOVW R26,R20
00c9b6 940e a519 	CALL _free
00c9b8 930a      	ST   -Y,R16
00c9b9 e3a0      	LDI  R26,LOW(48)
00c9ba 940c 5344 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x17E:
00c9bc 940e e05e 	CALL __PUTPARD1
00c9be 2fe0      	MOV  R30,R16
00c9bf 940c c143 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x17F:
00c9c1 940e e05e 	CALL __PUTPARD1
00c9c3 01fa      	MOVW R30,R20
00c9c4 85e0      	LDD  R30,Z+8
00c9c5 940c c143 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x180:
00c9c7 940e e05e 	CALL __PUTPARD1
00c9c9 01da      	MOVW R26,R20
00c9ca 9619      	ADIW R26,9
00c9cb 940c c0f9 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x181:
00c9cd 940e e02a 	CALL __GETW1P
00c9cf 81ae      	LDD  R26,Y+6
00c9d0 81bf      	LDD  R27,Y+6+1
00c9d1 17ae      	CP   R26,R30
00c9d2 07bf      	CPC  R27,R31
00c9d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x182:
00c9d4 0fae      	ADD  R26,R30
00c9d5 1fbf      	ADC  R27,R31
00c9d6 91ec      	LD   R30,X
00c9d7 940c c143 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x183:
00c9d9 930a      	ST   -Y,R16
00c9da 01fa      	MOVW R30,R20
00c9db 85a0      	LDD  R26,Z+8
00c9dc 93aa      	ST   -Y,R26
00c9dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x184:
00c9de dbd1      	RCALL SUBOPT_0xD2
00c9df 01df      	MOVW R26,R30
00c9e0 01cb      	MOVW R24,R22
00c9e1 940e 84b5 	CALL _LOG_setLastSend
00c9e3 019f      	MOVW R18,R30
00c9e4 2333      	TST  R19
00c9e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x185:
                +
00c9e6 e3e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00c9e7 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00c9e8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00c9e9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00c9ea 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x186:
00c9ec 01de      	MOVW R26,R28
00c9ed 961c      	ADIW R26,12
                +
00c9ee 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c9f0 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c9f2 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c9f4 bf6c     +OUT EIND , R22
00c9f5 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c9f6 019f      	MOVW R18,R30
00c9f7 2333      	TST  R19
00c9f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x187:
00c9f9 e0b0      	LDI  R27,0
00c9fa cfa0      	RJMP SUBOPT_0x179
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x188:
                +
00c9fb e1e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00c9fc e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00c9fd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00c9fe e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00c9ff 940e e05e 	CALL __PUTPARD1
00ca01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:83 WORDS
                 SUBOPT_0x189:
00ca02 940e e05e 	CALL __PUTPARD1
00ca04 940c c0a5 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18A:
00ca06 df9e      	RCALL SUBOPT_0x17B
00ca07 cfa4      	RJMP SUBOPT_0x17C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18B:
                +
00ca08 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00ca09 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00ca0a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00ca0b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00ca0c cfb4      	RJMP SUBOPT_0x17F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18C:
00ca0d 940e e05e 	CALL __PUTPARD1
00ca0f 01fa      	MOVW R30,R20
00ca10 85e1      	LDD  R30,Z+9
00ca11 940c c143 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18D:
00ca13 01fa      	MOVW R30,R20
00ca14 85e0      	LDD  R30,Z+8
00ca15 940c c21d 	JMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18E:
00ca17 01fa      	MOVW R30,R20
00ca18 85a1      	LDD  R26,Z+9
00ca19 93aa      	ST   -Y,R26
00ca1a e0a1      	LDI  R26,LOW(1)
00ca1b 940c 5477 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x18F:
00ca1d 01fa      	MOVW R30,R20
00ca1e 85a1      	LDD  R26,Z+9
00ca1f 93aa      	ST   -Y,R26
00ca20 e0e0      	LDI  R30,LOW(0)
00ca21 93ea      	ST   -Y,R30
00ca22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x190:
00ca23 940e 54a6 	CALL _ETH_sendConfigManageAck
00ca25 019f      	MOVW R18,R30
00ca26 2333      	TST  R19
00ca27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x191:
00ca28 87e8      	STD  Y+8,R30
00ca29 87f9      	STD  Y+8+1,R31
00ca2a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x192:
00ca2b 85e8      	LDD  R30,Y+8
00ca2c 85f9      	LDD  R31,Y+8+1
00ca2d 93fa      	ST   -Y,R31
00ca2e 93ea      	ST   -Y,R30
00ca2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x193:
00ca30 85e9      	LDD  R30,Y+9
00ca31 85fa      	LDD  R31,Y+9+1
00ca32 93fa      	ST   -Y,R31
00ca33 93ea      	ST   -Y,R30
00ca34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x194:
00ca35 e0e0      	LDI  R30,LOW(0)
00ca36 e0f0      	LDI  R31,HIGH(0)
00ca37 93fa      	ST   -Y,R31
00ca38 93ea      	ST   -Y,R30
00ca39 cc39      	RJMP SUBOPT_0xF4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x195:
                +
00ca3a eeef     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00ca3b e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00ca3c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00ca3d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00ca3e 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x196:
                +
00ca40 e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00ca41 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00ca42 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00ca43 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00ca44 cf7c      	RJMP SUBOPT_0x17F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x197:
                +
00ca45 e6e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00ca46 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00ca47 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00ca48 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00ca49 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x198:
00ca4b 940e e05e 	CALL __PUTPARD1
00ca4d 01fa      	MOVW R30,R20
                +
00ca4e 85a1     +LDD R26 , Z + 9
00ca4f 85b2     +LDD R27 , Z + 9 + 1
00ca50 8583     +LDD R24 , Z + 9 + 2
00ca51 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00ca52 940e e063 	CALL __PUTPARD2
00ca54 940c c0a5 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x199:
00ca56 940e e063 	CALL __PUTPARD2
00ca58 940c c0a5 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19A:
                +
00ca5a 85a1     +LDD R26 , Z + 9
00ca5b 85b2     +LDD R27 , Z + 9 + 1
00ca5c 8583     +LDD R24 , Z + 9 + 2
00ca5d 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00ca5e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19B:
                +
00ca5f e0ea     +LDI R30 , LOW ( 0xA )
00ca60 e0f0     +LDI R31 , HIGH ( 0xA )
00ca61 e060     +LDI R22 , BYTE3 ( 0xA )
00ca62 e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00ca63 cf9e      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19C:
00ca64 df40      	RCALL SUBOPT_0x17B
00ca65 9632      	ADIW R30,2
00ca66 93fa      	ST   -Y,R31
00ca67 93ea      	ST   -Y,R30
00ca68 01da      	MOVW R26,R20
00ca69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19D:
                +
00ca6a e0ed     +LDI R30 , LOW ( 0xD )
00ca6b e0f0     +LDI R31 , HIGH ( 0xD )
00ca6c e060     +LDI R22 , BYTE3 ( 0xD )
00ca6d e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00ca6e cf93      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19E:
                +
00ca6f e5eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00ca70 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00ca71 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00ca72 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00ca73 cf4d      	RJMP SUBOPT_0x17F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19F:
00ca74 85a1      	LDD  R26,Z+9
00ca75 85b2      	LDD  R27,Z+10
00ca76 940e e0b6 	CALL __CPW02
00ca78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A0:
00ca79 930a      	ST   -Y,R16
00ca7a e3a0      	LDI  R26,LOW(48)
00ca7b 940c 5344 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A1:
00ca7d 85e0      	LDD  R30,Z+8
00ca7e e0f0      	LDI  R31,0
00ca7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1A2:
00ca80 9724      	SBIW R28,4
00ca81 e0e0      	LDI  R30,LOW(0)
00ca82 83e8      	ST   Y,R30
00ca83 83e9      	STD  Y+1,R30
00ca84 83ea      	STD  Y+2,R30
00ca85 83eb      	STD  Y+3,R30
00ca86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A3:
00ca87 0fe0      	ADD  R30,R16
00ca88 1ff1      	ADC  R31,R17
00ca89 93fa      	ST   -Y,R31
00ca8a 93ea      	ST   -Y,R30
00ca8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A4:
00ca8c 81ae      	LDD  R26,Y+6
00ca8d 81bf      	LDD  R27,Y+6+1
00ca8e 0fea      	ADD  R30,R26
00ca8f 1ffb      	ADC  R31,R27
00ca90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A5:
00ca91 01d0      	MOVW R26,R0
00ca92 e0f0      	LDI  R31,0
00ca93 17ea      	CP   R30,R26
00ca94 07fb      	CPC  R31,R27
00ca95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A6:
00ca96 93ba      	ST   -Y,R27
00ca97 93aa      	ST   -Y,R26
00ca98 940e e0ce 	CALL __SAVELOCR6
00ca9a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1A7:
00ca9b 81ae      	LDD  R26,Y+6
00ca9c 81bf      	LDD  R27,Y+6+1
00ca9d 0fae      	ADD  R26,R30
00ca9e 1fbf      	ADC  R27,R31
00ca9f 91ec      	LD   R30,X
00caa0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A8:
00caa1 eaa9      	LDI  R26,LOW(_configRd)
00caa2 e0bf      	LDI  R27,HIGH(_configRd)
00caa3 cdbd      	RJMP SUBOPT_0x14C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1A9:
00caa4 e0e0      	LDI  R30,LOW(0)
00caa5 93e0 10f0 	STS  _config_start,R30
00caa7 93e0 10f1 	STS  _config_ready,R30
00caa9 93e0 10f2 	STS  _config_end,R30
00caab 93e0 10f3 	STS  _config_response,R30
00caad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AA:
00caae 01de      	MOVW R26,R28
00caaf 9612      	ADIW R26,2
00cab0 940e a5c7 	CALL _strlen
00cab2 170e      	CP   R16,R30
00cab3 071f      	CPC  R17,R31
00cab4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AB:
                +
00cab5 e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 24 ) )
00cab6 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 24 ) )
00cab7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 24 ) )
00cab8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 24 ) )
                 	__POINTD1FN _0x120000,24
00cab9 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AC:
                +
00cabb e0a7     +LDI R26 , LOW ( 0x7 )
00cabc e0b0     +LDI R27 , HIGH ( 0x7 )
00cabd e080     +LDI R24 , BYTE3 ( 0x7 )
00cabe e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00cabf 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1AD:
00cac1 85ec      	LDD  R30,Y+12
00cac2 85fd      	LDD  R31,Y+12+1
00cac3 93fa      	ST   -Y,R31
00cac4 93ea      	ST   -Y,R30
00cac5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1AE:
00cac6 eae9      	LDI  R30,LOW(_configRd)
00cac7 e0ff      	LDI  R31,HIGH(_configRd)
00cac8 93fa      	ST   -Y,R31
00cac9 93ea      	ST   -Y,R30
00caca d8be      	RCALL SUBOPT_0x7D
00cacb 940c a53b 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AF:
00cacd 01de      	MOVW R26,R28
00cace 9697      	ADIW R26,39
00cacf 940e a5c7 	CALL _strlen
00cad1 170e      	CP   R16,R30
00cad2 071f      	CPC  R17,R31
00cad3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B0:
                +
00cad4 a5ab     +LDD R26 , Y + 43
00cad5 a5bc     +LDD R27 , Y + 43 + 1
00cad6 a58d     +LDD R24 , Y + 43 + 2
00cad7 a59e     +LDD R25 , Y + 43 + 3
                 	__GETD2S 43
00cad8 940e 4130 	CALL _TIMER_checkTimerExceed
00cada 9730      	SBIW R30,0
00cadb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B1:
00cadc 91ec      	LD   R30,X
00cadd e6a4      	LDI  R26,LOW(100)
00cade 9fea      	MUL  R30,R26
00cadf 01b0      	MOVW R22,R0
00cae0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1B2:
00cae1 81e1      	LDD  R30,Z+1
00cae2 e0aa      	LDI  R26,LOW(10)
00cae3 9fea      	MUL  R30,R26
00cae4 01f0      	MOVW R30,R0
00cae5 01db      	MOVW R26,R22
00cae6 0fae      	ADD  R26,R30
00cae7 1fbf      	ADC  R27,R31
00cae8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B3:
00cae9 81e2      	LDD  R30,Z+2
00caea e0f0      	LDI  R31,0
00caeb 0fea      	ADD  R30,R26
00caec 1ffb      	ADC  R31,R27
00caed 940e df3b 	CALL __CWD1
00caef 940e e05e 	CALL __PUTPARD1
00caf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B4:
                +
00caf2 01fe     +MOVW R30 , R28
00caf3 5ce1     +SUBI R30 , LOW ( - 63 )
00caf4 4fff     +SBCI R31 , HIGH ( - 63 )
00caf5 9001     +LD R0 , Z +
00caf6 81f0     +LD R31 , Z
00caf7 2de0     +MOV R30 , R0
                 	__GETW1SX 63
00caf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B5:
00caf9 81e3      	LDD  R30,Z+3
00cafa e6a4      	LDI  R26,LOW(100)
00cafb 9fea      	MUL  R30,R26
00cafc 01b0      	MOVW R22,R0
00cafd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B6:
00cafe 81e4      	LDD  R30,Z+4
00caff e0aa      	LDI  R26,LOW(10)
00cb00 9fea      	MUL  R30,R26
00cb01 01f0      	MOVW R30,R0
00cb02 01db      	MOVW R26,R22
00cb03 0fae      	ADD  R26,R30
00cb04 1fbf      	ADC  R27,R31
00cb05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B7:
00cb06 81e5      	LDD  R30,Z+5
00cb07 e0f0      	LDI  R31,0
00cb08 0fea      	ADD  R30,R26
00cb09 1ffb      	ADC  R31,R27
00cb0a 940e df3b 	CALL __CWD1
00cb0c 940e e05e 	CALL __PUTPARD1
00cb0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B8:
                +
00cb0f 01fe     +MOVW R30 , R28
00cb10 5bed     +SUBI R30 , LOW ( - 67 )
00cb11 4fff     +SBCI R31 , HIGH ( - 67 )
00cb12 9001     +LD R0 , Z +
00cb13 81f0     +LD R31 , Z
00cb14 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00cb15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B9:
00cb16 81e6      	LDD  R30,Z+6
00cb17 e6a4      	LDI  R26,LOW(100)
00cb18 9fea      	MUL  R30,R26
00cb19 01b0      	MOVW R22,R0
00cb1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BA:
00cb1b 81e7      	LDD  R30,Z+7
00cb1c e0aa      	LDI  R26,LOW(10)
00cb1d 9fea      	MUL  R30,R26
00cb1e 01f0      	MOVW R30,R0
00cb1f 01db      	MOVW R26,R22
00cb20 0fae      	ADD  R26,R30
00cb21 1fbf      	ADC  R27,R31
00cb22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 56 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x1BB:
00cb23 0fea      	ADD  R30,R26
00cb24 1ffb      	ADC  R31,R27
00cb25 940e df3b 	CALL __CWD1
00cb27 940e e05e 	CALL __PUTPARD1
00cb29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BC:
                +
00cb2a 01fe     +MOVW R30 , R28
00cb2b 5be9     +SUBI R30 , LOW ( - 71 )
00cb2c 4fff     +SBCI R31 , HIGH ( - 71 )
00cb2d 9001     +LD R0 , Z +
00cb2e 81f0     +LD R31 , Z
00cb2f 2de0     +MOV R30 , R0
                 	__GETW1SX 71
00cb30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BD:
00cb31 85e1      	LDD  R30,Z+9
00cb32 e6a4      	LDI  R26,LOW(100)
00cb33 9fea      	MUL  R30,R26
00cb34 01b0      	MOVW R22,R0
00cb35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BE:
00cb36 85e2      	LDD  R30,Z+10
00cb37 e0aa      	LDI  R26,LOW(10)
00cb38 9fea      	MUL  R30,R26
00cb39 01f0      	MOVW R30,R0
00cb3a 01db      	MOVW R26,R22
00cb3b 0fae      	ADD  R26,R30
00cb3c 1fbf      	ADC  R27,R31
00cb3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1BF:
00cb3e 85e3      	LDD  R30,Z+11
00cb3f e0f0      	LDI  R31,0
00cb40 cfe2      	RJMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C0:
                +
00cb41 01fe     +MOVW R30 , R28
00cb42 5be7     +SUBI R30 , LOW ( - 73 )
00cb43 4fff     +SBCI R31 , HIGH ( - 73 )
00cb44 9001     +LD R0 , Z +
00cb45 81f0     +LD R31 , Z
00cb46 2de0     +MOV R30 , R0
                 	__GETW1SX 73
00cb47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C1:
                +
00cb48 01fe     +MOVW R30 , R28
00cb49 5be3     +SUBI R30 , LOW ( - 77 )
00cb4a 4fff     +SBCI R31 , HIGH ( - 77 )
00cb4b 9001     +LD R0 , Z +
00cb4c 81f0     +LD R31 , Z
00cb4d 2de0     +MOV R30 , R0
                 	__GETW1SX 77
00cb4e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C2:
                +
00cb4f 01fe     +MOVW R30 , R28
00cb50 5aef     +SUBI R30 , LOW ( - 81 )
00cb51 4fff     +SBCI R31 , HIGH ( - 81 )
00cb52 9001     +LD R0 , Z +
00cb53 81f0     +LD R31 , Z
00cb54 2de0     +MOV R30 , R0
                 	__GETW1SX 81
00cb55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C3:
                +
00cb56 01fe     +MOVW R30 , R28
00cb57 5aeb     +SUBI R30 , LOW ( - 85 )
00cb58 4fff     +SBCI R31 , HIGH ( - 85 )
00cb59 9001     +LD R0 , Z +
00cb5a 81f0     +LD R31 , Z
00cb5b 2de0     +MOV R30 , R0
                 	__GETW1SX 85
00cb5c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C4:
                +
00cb5d 01fe     +MOVW R30 , R28
00cb5e 5ae9     +SUBI R30 , LOW ( - 87 )
00cb5f 4fff     +SBCI R31 , HIGH ( - 87 )
00cb60 9001     +LD R0 , Z +
00cb61 81f0     +LD R31 , Z
00cb62 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00cb63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C5:
                +
00cb64 01fe     +MOVW R30 , R28
00cb65 5ae5     +SUBI R30 , LOW ( - 91 )
00cb66 4fff     +SBCI R31 , HIGH ( - 91 )
00cb67 9001     +LD R0 , Z +
00cb68 81f0     +LD R31 , Z
00cb69 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00cb6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C6:
                +
00cb6b 01fe     +MOVW R30 , R28
00cb6c 5ae1     +SUBI R30 , LOW ( - 95 )
00cb6d 4fff     +SBCI R31 , HIGH ( - 95 )
00cb6e 9001     +LD R0 , Z +
00cb6f 81f0     +LD R31 , Z
00cb70 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00cb71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C7:
                +
00cb72 01fe     +MOVW R30 , R28
00cb73 59ed     +SUBI R30 , LOW ( - 99 )
00cb74 4fff     +SBCI R31 , HIGH ( - 99 )
00cb75 9001     +LD R0 , Z +
00cb76 81f0     +LD R31 , Z
00cb77 2de0     +MOV R30 , R0
                 	__GETW1SX 99
00cb78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C8:
                +
00cb79 e7e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5360 ) )
00cb7a e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5360 ) )
00cb7b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5360 ) )
00cb7c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5360 ) )
                 	__POINTD1FN _0x120000,5360
00cb7d 940e e05e 	CALL __PUTPARD1
00cb7f 01fe      	MOVW R30,R28
00cb80 963a      	ADIW R30,10
00cb81 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C9:
00cb83 93fa      	ST   -Y,R31
00cb84 93ea      	ST   -Y,R30
00cb85 01fe      	MOVW R30,R28
00cb86 9638      	ADIW R30,8
00cb87 93fa      	ST   -Y,R31
00cb88 93ea      	ST   -Y,R30
00cb89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1CA:
00cb8a e0b0      	LDI  R27,0
00cb8b 940c a53b 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CB:
                +
00cb8d 01fe     +MOVW R30 , R28
00cb8e 5bef     +SUBI R30 , LOW ( - 65 )
00cb8f 4fff     +SBCI R31 , HIGH ( - 65 )
00cb90 9001     +LD R0 , Z +
00cb91 81f0     +LD R31 , Z
00cb92 2de0     +MOV R30 , R0
                 	__GETW1SX 65
00cb93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1CC:
                +
00cb94 e020     +LDI R18 , LOW ( 0 )
00cb95 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00cb96 e000     +LDI R16 , LOW ( 0 )
00cb97 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00cb98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1CD:
00cb99 01f9      	MOVW R30,R18
                +
00cb9a 5f2f     +SUBI R18 , LOW ( - 1 )
00cb9b 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cb9c 85a8      	LDD  R26,Y+8
00cb9d 85b9      	LDD  R27,Y+8+1
00cb9e 0fae      	ADD  R26,R30
00cb9f 1fbf      	ADC  R27,R31
00cba0 91ec      	LD   R30,X
00cba1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CE:
                +
00cba2 81ac     +LDD R26 , Y + 4
00cba3 81bd     +LDD R27 , Y + 4 + 1
00cba4 9618     +ADIW R26 , 8
00cba5 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00cba6 cff2      	RJMP SUBOPT_0x1CD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1CF:
                +
00cba7 81ac     +LDD R26 , Y + 4
00cba8 81bd     +LDD R27 , Y + 4 + 1
00cba9 9619     +ADIW R26 , 9
00cbaa 93ed     +ST X + , R30
00cbab 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00cbac 81ec      	LDD  R30,Y+4
00cbad 81fd      	LDD  R31,Y+4+1
00cbae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D0:
00cbaf e0e1      	LDI  R30,LOW(1)
00cbb0 e0f0      	LDI  R31,HIGH(1)
00cbb1 940e df54 	CALL __MULW12U
00cbb3 01df      	MOVW R26,R30
00cbb4 940c a4fe 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D1:
00cbb6 940e e02a 	CALL __GETW1P
00cbb8 170e      	CP   R16,R30
00cbb9 071f      	CPC  R17,R31
00cbba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D2:
00cbbb 01f8      	MOVW R30,R16
00cbbc 0fea      	ADD  R30,R26
00cbbd 1ffb      	ADC  R31,R27
00cbbe 010f      	MOVW R0,R30
00cbbf 01f9      	MOVW R30,R18
00cbc0 0fe0      	ADD  R30,R16
00cbc1 1ff1      	ADC  R31,R17
00cbc2 85a8      	LDD  R26,Y+8
00cbc3 85b9      	LDD  R27,Y+8+1
00cbc4 cc07      	RJMP SUBOPT_0x130
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D3:
                +
00cbc5 81ac     +LDD R26 , Y + 4
00cbc6 81bd     +LDD R27 , Y + 4 + 1
00cbc7 9618     +ADIW R26 , 8
00cbc8 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00cbc9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x1D4:
00cbca e0f0      	LDI  R31,0
00cbcb 940e df3b 	CALL __CWD1
                +
00cbcd 7fef     +ANDI R30 , LOW ( 0xFF )
00cbce 70f0     +ANDI R31 , HIGH ( 0xFF )
00cbcf 7060     +ANDI R22 , BYTE3 ( 0xFF )
00cbd0 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00cbd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D5:
00cbd2 01df      	MOVW R26,R30
00cbd3 01cb      	MOVW R24,R22
00cbd4 e1e8      	LDI  R30,LOW(24)
00cbd5 940e dee9 	CALL __LSLD12
00cbd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D6:
00cbd8 01df      	MOVW R26,R30
00cbd9 01cb      	MOVW R24,R22
00cbda e0e8      	LDI  R30,LOW(8)
00cbdb 940e dee9 	CALL __LSLD12
00cbdd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D7:
00cbde 940e decf 	CALL __ORD12
                +
00cbe0 81ac     +LDD R26 , Y + 4
00cbe1 81bd     +LDD R27 , Y + 4 + 1
00cbe2 9619     +ADIW R26 , 9
00cbe3 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00cbe5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D8:
00cbe6 01f9      	MOVW R30,R18
                +
00cbe7 5f2f     +SUBI R18 , LOW ( - 1 )
00cbe8 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cbe9 ceb1      	RJMP SUBOPT_0x1A7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1D9:
00cbea 940e e05e 	CALL __PUTPARD1
00cbec 85e8      	LDD  R30,Y+8
00cbed 85f9      	LDD  R31,Y+8+1
00cbee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DA:
00cbef 93ba      	ST   -Y,R27
00cbf0 93aa      	ST   -Y,R26
00cbf1 ce8e      	RJMP SUBOPT_0x1A2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1DB:
00cbf2 940e a4fe 	CALL _malloc
00cbf4 83ee      	STD  Y+6,R30
00cbf5 83ff      	STD  Y+6+1,R31
00cbf6 9730      	SBIW R30,0
00cbf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1DC:
                +
00cbf8 eaef     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00cbf9 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00cbfa e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00cbfb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00cbfc cba0      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1DD:
00cbfd 85ea      	LDD  R30,Y+10
00cbfe 85fb      	LDD  R31,Y+10+1
00cbff 93fa      	ST   -Y,R31
00cc00 93ea      	ST   -Y,R30
00cc01 ce29      	RJMP SUBOPT_0x192
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DE:
00cc02 940e a53b 	CALL _memcpy
00cc04 ccd3      	RJMP SUBOPT_0x15C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DF:
00cc05 e0a8      	LDI  R26,LOW(8)
00cc06 e0b0      	LDI  R27,0
00cc07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E0:
                +
00cc08 e6ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00cc09 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00cc0a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00cc0b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00cc0c cb90      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E1:
                +
00cc0d e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00cc0e e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00cc0f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00cc10 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00cc11 cb8b      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E2:
                +
00cc12 e2e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00cc13 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00cc14 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00cc15 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00cc16 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E3:
00cc18 85ec      	LDD  R30,Y+12
00cc19 e0f0      	LDI  R31,0
00cc1a 70ef      	ANDI R30,LOW(0xF)
00cc1b 70f0      	ANDI R31,HIGH(0xF)
00cc1c 87e8      	STD  Y+8,R30
00cc1d 87f9      	STD  Y+8+1,R31
00cc1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E4:
00cc1f e0b0      	LDI  R27,0
00cc20 cfd1      	RJMP SUBOPT_0x1DB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1E5:
00cc21 940e e05e 	CALL __PUTPARD1
00cc23 85ec      	LDD  R30,Y+12
00cc24 85fd      	LDD  R31,Y+12+1
00cc25 ca11      	RJMP SUBOPT_0xE8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E6:
00cc26 940e e05e 	CALL __PUTPARD1
                +
00cc28 e0e3     +LDI R30 , LOW ( 0x3 )
00cc29 e0f0     +LDI R31 , HIGH ( 0x3 )
00cc2a e060     +LDI R22 , BYTE3 ( 0x3 )
00cc2b e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00cc2c cdd5      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E7:
                +
00cc2d ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00cc2e e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00cc2f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00cc30 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00cc31 cb66      	RJMP SUBOPT_0x126
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E8:
                +
00cc32 e6e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00cc33 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00cc34 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00cc35 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00cc36 cb61      	RJMP SUBOPT_0x126
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E9:
                +
00cc37 e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00cc38 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00cc39 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00cc3a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00cc3b cb61      	RJMP SUBOPT_0x127
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EA:
                +
00cc3c ebe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00cc3d e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00cc3e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00cc3f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00cc40 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EB:
00cc42 e2e2      	LDI  R30,LOW(34)
00cc43 e0f0      	LDI  R31,HIGH(34)
00cc44 17e0      	CP   R30,R16
00cc45 07f1      	CPC  R31,R17
00cc46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EC:
                +
00cc47 81a1     +LDD R26 , Z + 1
00cc48 81b2     +LDD R27 , Z + 1 + 1
00cc49 8183     +LDD R24 , Z + 1 + 2
00cc4a 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00cc4b ce0a      	RJMP SUBOPT_0x199
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1ED:
                +
00cc4c e4ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00cc4d e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00cc4e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00cc4f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00cc50 940e e05e 	CALL __PUTPARD1
00cc52 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1EE:
00cc53 85ea      	LDD  R30,Y+10
00cc54 e0f0      	LDI  R31,0
00cc55 70ef      	ANDI R30,LOW(0xF)
00cc56 70f0      	ANDI R31,HIGH(0xF)
00cc57 01af      	MOVW R20,R30
00cc58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EF:
00cc59 935a      	ST   -Y,R21
00cc5a 934a      	ST   -Y,R20
00cc5b 85aa      	LDD  R26,Y+10
00cc5c 85bb      	LDD  R27,Y+10+1
00cc5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F0:
00cc5e 940e e05e 	CALL __PUTPARD1
00cc60 940c c24c 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1F1:
00cc62 01fe      	MOVW R30,R28
00cc63 9632      	ADIW R30,2
00cc64 93fa      	ST   -Y,R31
00cc65 93ea      	ST   -Y,R30
00cc66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F2:
00cc67 d87b      	RCALL SUBOPT_0xB2
00cc68 940e e0b2 	CALL __CPD10
00cc6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1F3:
00cc6b 940e e05e 	CALL __PUTPARD1
00cc6d d87f      	RCALL SUBOPT_0xB4
00cc6e cd93      	RJMP SUBOPT_0x189
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F4:
00cc6f 940e e063 	CALL __PUTPARD2
00cc71 931a      	ST   -Y,R17
00cc72 930a      	ST   -Y,R16
00cc73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F5:
00cc74 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00cc75 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00cc76 e0a0      	LDI  R26,LOW(0)
00cc77 83a0      	STD  Z+0,R26
00cc78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F6:
00cc79 940e e05e 	CALL __PUTPARD1
00cc7b 85ec      	LDD  R30,Y+12
00cc7c 940c c2e0 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F7:
00cc7e e0ab      	LDI  R26,LOW(11)
00cc7f 9f1a      	MUL  R17,R26
00cc80 01f0      	MOVW R30,R0
                +
00cc81 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00cc82 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00cc83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1F8:
00cc84 01df      	MOVW R26,R30
00cc85 940e a519 	CALL _free
00cc87 e0ab      	LDI  R26,LOW(11)
00cc88 9f1a      	MUL  R17,R26
00cc89 01f0      	MOVW R30,R0
                +
00cc8a 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00cc8b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00cc8c e0a0      	LDI  R26,LOW(0)
00cc8d e0b0      	LDI  R27,HIGH(0)
00cc8e 83a0      	STD  Z+0,R26
00cc8f 83b1      	STD  Z+1,R27
00cc90 e0ab      	LDI  R26,LOW(11)
00cc91 9f1a      	MUL  R17,R26
00cc92 01f0      	MOVW R30,R0
                +
00cc93 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00cc94 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00cc95 e0a0      	LDI  R26,LOW(0)
00cc96 83a0      	STD  Z+0,R26
00cc97 cfe6      	RJMP SUBOPT_0x1F7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1F9:
00cc98 e0a0      	LDI  R26,LOW(0)
00cc99 83a0      	STD  Z+0,R26
00cc9a e0ab      	LDI  R26,LOW(11)
00cc9b 9f1a      	MUL  R17,R26
00cc9c 01f0      	MOVW R30,R0
00cc9d cfd6      	RJMP SUBOPT_0x1F5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1FA:
00cc9e e0ab      	LDI  R26,LOW(11)
00cc9f 9f1a      	MUL  R17,R26
00cca0 01f0      	MOVW R30,R0
                +
00cca1 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00cca2 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00cca3 e0a0      	LDI  R26,LOW(0)
00cca4 e0b0      	LDI  R27,HIGH(0)
00cca5 83a0      	STD  Z+0,R26
00cca6 83b1      	STD  Z+1,R27
00cca7 e0ab      	LDI  R26,LOW(11)
00cca8 9f1a      	MUL  R17,R26
00cca9 01f0      	MOVW R30,R0
                +
00ccaa 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00ccab 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00ccac 940e c151 	CALL SUBOPT_0x2C
00ccae 940e e059 	CALL __PUTDZ20
00ccb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FB:
00ccb1 940e e05e 	CALL __PUTPARD1
00ccb3 81ed      	LDD  R30,Y+5
00ccb4 940c c2e0 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FC:
00ccb6 2fe1      	MOV  R30,R17
00ccb7 27ff      	CLR  R31
00ccb8 2766      	CLR  R22
00ccb9 2777      	CLR  R23
00ccba 940c c108 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FD:
00ccbc e6e4      	LDI  R30,LOW(100)
00ccbd e0f0      	LDI  R31,HIGH(100)
00ccbe 940e dfeb 	CALL __MODW21
00ccc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FE:
00ccc1 e0e0      	LDI  R30,LOW(0)
                +
00ccc2 83ee     +STD Y + 6 , R30
00ccc3 83ef     +STD Y + 6 + 1 , R30
00ccc4 87e8     +STD Y + 6 + 2 , R30
00ccc5 87e9     +STD Y + 6 + 3 , R30
                 	__CLRD1S 6
00ccc6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1FF:
00ccc7 940e c297 	CALL SUBOPT_0x59
00ccc9 2766      	CLR  R22
00ccca 2777      	CLR  R23
00cccb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x200:
00cccc 9631      	ADIW R30,1
00cccd 940e df3b 	CALL __CWD1
00cccf 940e e05e 	CALL __PUTPARD1
00ccd1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x201:
00ccd2 81ea      	LDD  R30,Y+2
00ccd3 81fb      	LDD  R31,Y+2+1
00ccd4 940c c178 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x202:
00ccd6 01df      	MOVW R26,R30
00ccd7 01cb      	MOVW R24,R22
00ccd8 01f8      	MOVW R30,R16
00ccd9 940e df3b 	CALL __CWD1
00ccdb 940e dd75 	CALL __CDF1
00ccdd 940e e070 	CALL __SWAPD12
00ccdf 940e dda8 	CALL __SUBF12
00cce1 01df      	MOVW R26,R30
00cce2 01cb      	MOVW R24,R22
00cce3 940e a216 	CALL _fabs
00cce5 01df      	MOVW R26,R30
00cce6 01cb      	MOVW R24,R22
00cce7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x203:
00cce8 01f8      	MOVW R30,R16
00cce9 940e df3b 	CALL __CWD1
00cceb 940e dd75 	CALL __CDF1
00cced 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x204:
                +
00ccee e0a0     +LDI R26 , LOW ( 0x3F000000 )
00ccef e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00ccf0 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00ccf1 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00ccf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x205:
                +
00ccf3 e0a0     +LDI R26 , LOW ( 0x40A00000 )
00ccf4 e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00ccf5 ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00ccf6 e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00ccf7 940e ddff 	CALL __MULF12
00ccf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x206:
                +
00ccfa 01de     +MOVW R26 , R28
00ccfb 5ba2     +SUBI R26 , LOW ( - 78 )
00ccfc 4fbf     +SBCI R27 , HIGH ( - 78 )
00ccfd 900d     +LD R0 , X +
00ccfe 91bc     +LD R27 , X
00ccff 2da0     +MOV R26 , R0
                 	__GETW2SX 78
00cd00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x207:
00cd01 e0e0      	LDI  R30,LOW(0)
                +
00cd02 afe8     +STD Y + 56 , R30
00cd03 afe9     +STD Y + 56 + 1 , R30
00cd04 afea     +STD Y + 56 + 2 , R30
00cd05 afeb     +STD Y + 56 + 3 , R30
                 	__CLRD1S 56
                +
00cd06 e020     +LDI R18 , LOW ( 0 )
00cd07 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00cd08 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:65 WORDS
                 SUBOPT_0x208:
                +
00cd09 01de     +MOVW R26 , R28
00cd0a 5ba2     +SUBI R26 , LOW ( - 78 )
00cd0b 4fbf     +SBCI R27 , HIGH ( - 78 )
00cd0c 91ac     +LD R26 , X
                 	__GETB2SX 78
00cd0d 5fa8      	SUBI R26,-LOW(8)
00cd0e 940e 439e 	CALL _read_adc
                +
00cd10 ada8     +LDD R26 , Y + 56
00cd11 adb9     +LDD R27 , Y + 56 + 1
00cd12 ad8a     +LDD R24 , Y + 56 + 2
00cd13 ad9b     +LDD R25 , Y + 56 + 3
                 	__GETD2S 56
00cd14 2766      	CLR  R22
00cd15 2777      	CLR  R23
00cd16 940e deb6 	CALL __ADDD12
                +
00cd18 afe8     +STD Y + 56 , R30
00cd19 aff9     +STD Y + 56 + 1 , R31
00cd1a af6a     +STD Y + 56 + 2 , R22
00cd1b af7b     +STD Y + 56 + 3 , R23
                 	__PUTD1S 56
00cd1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x209:
                +
00cd1d ade8     +LDD R30 , Y + 56
00cd1e adf9     +LDD R31 , Y + 56 + 1
00cd1f ad6a     +LDD R22 , Y + 56 + 2
00cd20 ad7b     +LDD R23 , Y + 56 + 3
                 	__GETD1S 56
00cd21 940e e05e 	CALL __PUTPARD1
00cd23 e1ae      	LDI  R26,LOW(30)
00cd24 e0b0      	LDI  R27,0
00cd25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20A:
00cd26 940e c4aa 	CALL SUBOPT_0xA7
00cd28 940c c4af 	JMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20B:
                +
00cd2a e1e2     +LDI R30 , LOW ( 0xBFC08312 )
00cd2b e8f3     +LDI R31 , HIGH ( 0xBFC08312 )
00cd2c ec60     +LDI R22 , BYTE3 ( 0xBFC08312 )
00cd2d eb7f     +LDI R23 , BYTE4 ( 0xBFC08312 )
                 	__GETD1N 0xBFC08312
00cd2e 940e de92 	CALL __CMPF12
00cd30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x20C:
00cd31 dfc8      	RCALL SUBOPT_0x206
00cd32 940e 6a96 	CALL _updateSensorADC
                +
00cd34 01fe     +MOVW R30 , R28
00cd35 5be2     +SUBI R30 , LOW ( - 78 )
00cd36 4fff     +SBCI R31 , HIGH ( - 78 )
00cd37 9001     +LD R0 , Z +
00cd38 81f0     +LD R31 , Z
00cd39 2de0     +MOV R30 , R0
                 	__GETW1SX 78
00cd3a 940c c178 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:75 WORDS
                 SUBOPT_0x20D:
                +
00cd3c 01fe     +MOVW R30 , R28
00cd3d 5be2     +SUBI R30 , LOW ( - 78 )
00cd3e 4fff     +SBCI R31 , HIGH ( - 78 )
00cd3f 9001     +LD R0 , Z +
00cd40 81f0     +LD R31 , Z
00cd41 2de0     +MOV R30 , R0
                 	__GETW1SX 78
00cd42 940c c178 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:101 WORDS
                 SUBOPT_0x20E:
                +
00cd44 01fe     +MOVW R30 , R28
00cd45 5be2     +SUBI R30 , LOW ( - 78 )
00cd46 4fff     +SBCI R31 , HIGH ( - 78 )
00cd47 9001     +LD R0 , Z +
00cd48 81f0     +LD R31 , Z
00cd49 2de0     +MOV R30 , R0
                 	__GETW1SX 78
00cd4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x20F:
00cd4b dff8      	RCALL SUBOPT_0x20E
00cd4c e5a0      	LDI  R26,LOW(_t_S00D0002000)
00cd4d e1b5      	LDI  R27,HIGH(_t_S00D0002000)
00cd4e 940e df05 	CALL __LSLW2
00cd50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x210:
                +
00cd51 e0a5     +LDI R26 , LOW ( 0x5 )
00cd52 e0b0     +LDI R27 , HIGH ( 0x5 )
00cd53 e080     +LDI R24 , BYTE3 ( 0x5 )
00cd54 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00cd55 940c 4146 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x211:
00cd57 dfec      	RCALL SUBOPT_0x20E
00cd58 59e7      	SUBI R30,LOW(-_steadyState_S00D0002000)
00cd59 4efa      	SBCI R31,HIGH(-_steadyState_S00D0002000)
00cd5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x212:
                +
00cd5b 01de     +MOVW R26 , R28
00cd5c 5ba4     +SUBI R26 , LOW ( - 76 )
00cd5d 4fbf     +SBCI R27 , HIGH ( - 76 )
00cd5e 900d     +LD R0 , X +
00cd5f 91bc     +LD R27 , X
00cd60 2da0     +MOV R26 , R0
                 	__GETW2SX 76
00cd61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x213:
                +
00cd62 01fe     +MOVW R30 , R28
00cd63 5be4     +SUBI R30 , LOW ( - 76 )
00cd64 4fff     +SBCI R31 , HIGH ( - 76 )
00cd65 9001     +LD R0 , Z +
00cd66 81f0     +LD R31 , Z
00cd67 2de0     +MOV R30 , R0
                 	__GETW1SX 76
                +
00cd68 8314     +STD Z + 4 , R17
                 	__PUTBZR 17,4
00cd69 efee      	LDI  R30,LOW(65534)
00cd6a efff      	LDI  R31,HIGH(65534)
00cd6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:137 WORDS
                 SUBOPT_0x214:
00cd6c e0f0      	LDI  R31,0
00cd6d 30e1      	CPI  R30,LOW(0x1)
00cd6e e0a0      	LDI  R26,HIGH(0x1)
00cd6f 07fa      	CPC  R31,R26
00cd70 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x215:
00cd71 940e a077 	CALL _iAD595ADCToTemp
00cd73 940c c4aa 	JMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x216:
00cd75 dfce      	RCALL SUBOPT_0x20E
00cd76 eeaa      	LDI  R26,LOW(_epTempRef1)
00cd77 e0b5      	LDI  R27,HIGH(_epTempRef1)
00cd78 940e df05 	CALL __LSLW2
00cd7a 0fae      	ADD  R26,R30
00cd7b 1fbf      	ADC  R27,R31
00cd7c 940e e07d 	CALL __EEPROMRDD
00cd7e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x217:
00cd7f dfc4      	RCALL SUBOPT_0x20E
00cd80 eda6      	LDI  R26,LOW(_epADCRef1)
00cd81 e0b5      	LDI  R27,HIGH(_epADCRef1)
00cd82 940e df05 	CALL __LSLW2
00cd84 0fae      	ADD  R26,R30
00cd85 1fbf      	ADC  R27,R31
00cd86 940e e07d 	CALL __EEPROMRDD
00cd88 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x218:
00cd89 940e e070 	CALL __SWAPD12
00cd8b 940e dda8 	CALL __SUBF12
00cd8d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x219:
00cd8e 940e e05e 	CALL __PUTPARD1
                +
00cd90 01fe     +MOVW R30 , R28
00cd91 5aea     +SUBI R30 , LOW ( - 86 )
00cd92 4fff     +SBCI R31 , HIGH ( - 86 )
00cd93 9001     +LD R0 , Z +
00cd94 81f0     +LD R31 , Z
00cd95 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00cd96 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x21A:
00cd97 eeaa      	LDI  R26,LOW(_epTempRef1)
00cd98 e0b5      	LDI  R27,HIGH(_epTempRef1)
00cd99 940e df05 	CALL __LSLW2
00cd9b 0fae      	ADD  R26,R30
00cd9c 1fbf      	ADC  R27,R31
00cd9d 940e e07d 	CALL __EEPROMRDD
00cd9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21B:
                +
00cda0 eaaf     +LDI R26 , LOW ( 0xBDE425AF )
00cda1 e2b5     +LDI R27 , HIGH ( 0xBDE425AF )
00cda2 ee84     +LDI R24 , BYTE3 ( 0xBDE425AF )
00cda3 eb9d     +LDI R25 , BYTE4 ( 0xBDE425AF )
                 	__GETD2N 0xBDE425AF
00cda4 940e ddff 	CALL __MULF12
00cda6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x21C:
00cda7 df9c      	RCALL SUBOPT_0x20E
00cda8 ebad      	LDI  R26,LOW(_epFactor_C)
00cda9 e0b5      	LDI  R27,HIGH(_epFactor_C)
00cdaa 940e df05 	CALL __LSLW2
00cdac 0fae      	ADD  R26,R30
00cdad 1fbf      	ADC  R27,R31
00cdae 940e e07d 	CALL __EEPROMRDD
00cdb0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21D:
                +
00cdb1 eea9     +LDI R26 , LOW ( 0x3A25EFE9 )
00cdb2 eebf     +LDI R27 , HIGH ( 0x3A25EFE9 )
00cdb3 e285     +LDI R24 , BYTE3 ( 0x3A25EFE9 )
00cdb4 e39a     +LDI R25 , BYTE4 ( 0x3A25EFE9 )
                 	__GETD2N 0x3A25EFE9
00cdb5 940e ddff 	CALL __MULF12
00cdb7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21E:
                +
00cdb8 eda5     +LDI R26 , LOW ( 0x3E2603D5 )
00cdb9 e0b3     +LDI R27 , HIGH ( 0x3E2603D5 )
00cdba e286     +LDI R24 , BYTE3 ( 0x3E2603D5 )
00cdbb e39e     +LDI R25 , BYTE4 ( 0x3E2603D5 )
                 	__GETD2N 0x3E2603D5
00cdbc 940e ddff 	CALL __MULF12
00cdbe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21F:
00cdbf df9b      	RCALL SUBOPT_0x212
00cdc0 940e e039 	CALL __PUTDP1
00cdc2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x220:
00cdc3 940e dd3e 	CALL __CFD1
00cdc5 940e e05e 	CALL __PUTPARD1
00cdc7 940c c359 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x221:
                +
00cdc9 abe8     +STD Y + 48 , R30
00cdca abf9     +STD Y + 48 + 1 , R31
00cdcb ab6a     +STD Y + 48 + 2 , R22
00cdcc ab7b     +STD Y + 48 + 3 , R23
                 	__PUTD1S 48
00cdcd df76      	RCALL SUBOPT_0x20E
00cdce e0a3      	LDI  R26,LOW(_epADCRef2)
00cdcf e0b6      	LDI  R27,HIGH(_epADCRef2)
00cdd0 940e df05 	CALL __LSLW2
00cdd2 0fae      	ADD  R26,R30
00cdd3 1fbf      	ADC  R27,R31
00cdd4 940e e07d 	CALL __EEPROMRDD
00cdd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x222:
                +
00cdd7 a3ec     +STD Y + 36 , R30
00cdd8 a3fd     +STD Y + 36 + 1 , R31
00cdd9 a36e     +STD Y + 36 + 2 , R22
00cdda a37f     +STD Y + 36 + 3 , R23
                 	__PUTD1S 36
00cddb df68      	RCALL SUBOPT_0x20E
00cddc e1a7      	LDI  R26,LOW(_epTempRef2)
00cddd e0b6      	LDI  R27,HIGH(_epTempRef2)
00cdde 940e df05 	CALL __LSLW2
00cde0 0fae      	ADD  R26,R30
00cde1 1fbf      	ADC  R27,R31
00cde2 940e e07d 	CALL __EEPROMRDD
                +
00cde4 a3e8     +STD Y + 32 , R30
00cde5 a3f9     +STD Y + 32 + 1 , R31
00cde6 a36a     +STD Y + 32 + 2 , R22
00cde7 a37b     +STD Y + 32 + 3 , R23
                 	__PUTD1S 32
00cde8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x223:
                +
00cde9 8fe8     +STD Y + 24 , R30
00cdea 8ff9     +STD Y + 24 + 1 , R31
00cdeb 8f6a     +STD Y + 24 + 2 , R22
00cdec 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00cded 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x224:
                +
00cdee 8bec     +STD Y + 20 , R30
00cdef 8bfd     +STD Y + 20 + 1 , R31
00cdf0 8b6e     +STD Y + 20 + 2 , R22
00cdf1 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00cdf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x225:
                +
00cdf3 89ac     +LDD R26 , Y + 20
00cdf4 89bd     +LDD R27 , Y + 20 + 1
00cdf5 898e     +LDD R24 , Y + 20 + 2
00cdf6 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00cdf7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x226:
00cdf8 df4b      	RCALL SUBOPT_0x20E
00cdf9 eaa9      	LDI  R26,LOW(_epFactor_B)
00cdfa e0b5      	LDI  R27,HIGH(_epFactor_B)
00cdfb 940e df05 	CALL __LSLW2
00cdfd 0fae      	ADD  R26,R30
00cdfe 1fbf      	ADC  R27,R31
00cdff 940e e07d 	CALL __EEPROMRDD
00ce01 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x227:
00ce02 e3a0      	LDI  R26,LOW(_epADCRef3)
00ce03 e0b6      	LDI  R27,HIGH(_epADCRef3)
00ce04 940e df05 	CALL __LSLW2
00ce06 0fae      	ADD  R26,R30
00ce07 1fbf      	ADC  R27,R31
00ce08 940e e07d 	CALL __EEPROMRDD
00ce0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x228:
00ce0b e4a4      	LDI  R26,LOW(_epTempRef3)
00ce0c e0b6      	LDI  R27,HIGH(_epTempRef3)
00ce0d 940e df05 	CALL __LSLW2
00ce0f 0fae      	ADD  R26,R30
00ce10 1fbf      	ADC  R27,R31
00ce11 940e e07d 	CALL __EEPROMRDD
00ce13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x229:
                +
00ce14 89a8     +LDD R26 , Y + 16
00ce15 89b9     +LDD R27 , Y + 16 + 1
00ce16 898a     +LDD R24 , Y + 16 + 2
00ce17 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00ce18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22A:
00ce19 940e c3d2 	CALL SUBOPT_0x89
00ce1b 940c c075 	JMP SUBOPT_0xB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22B:
00ce1d e9a5      	LDI  R26,LOW(_epFactor_A)
00ce1e e0b5      	LDI  R27,HIGH(_epFactor_A)
00ce1f 940e df05 	CALL __LSLW2
00ce21 0fae      	ADD  R26,R30
00ce22 1fbf      	ADC  R27,R31
00ce23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x22C:
00ce24 81ae      	LDD  R26,Y+6
00ce25 81bf      	LDD  R27,Y+6+1
00ce26 0fae      	ADD  R26,R30
00ce27 1fbf      	ADC  R27,R31
00ce28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x22D:
00ce29 0fae      	ADD  R26,R30
00ce2a 1fbf      	ADC  R27,R31
00ce2b 91ac      	LD   R26,X
00ce2c 30a1      	CPI  R26,LOW(0x1)
00ce2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x22E:
00ce2e e0e5      	LDI  R30,LOW(5)
00ce2f 940e df7c 	CALL __MULB1W2U
                +
00ce31 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
00ce32 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
00ce33 81e0      	LD   R30,Z
00ce34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x22F:
00ce35 27ff      	CLR  R31
00ce36 2766      	CLR  R22
00ce37 2777      	CLR  R23
00ce38 940c c108 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x230:
00ce3a 81ec      	LDD  R30,Y+4
00ce3b 81fd      	LDD  R31,Y+4+1
00ce3c 940c c178 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x231:
                +
00ce3e e0e0     +LDI R30 , LOW ( 0x0 )
00ce3f e0f0     +LDI R31 , HIGH ( 0x0 )
00ce40 e060     +LDI R22 , BYTE3 ( 0x0 )
00ce41 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00ce42 940e e091 	CALL __EEPROMWRD
00ce44 81ec      	LDD  R30,Y+4
00ce45 81fd      	LDD  R31,Y+4+1
00ce46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x232:
00ce47 eaa9      	LDI  R26,LOW(_epFactor_B)
00ce48 e0b5      	LDI  R27,HIGH(_epFactor_B)
00ce49 940e df05 	CALL __LSLW2
00ce4b 0fae      	ADD  R26,R30
00ce4c 1fbf      	ADC  R27,R31
00ce4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x233:
00ce4e ebad      	LDI  R26,LOW(_epFactor_C)
00ce4f e0b5      	LDI  R27,HIGH(_epFactor_C)
00ce50 940e df05 	CALL __LSLW2
00ce52 0fea      	ADD  R30,R26
00ce53 1ffb      	ADC  R31,R27
00ce54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x234:
                +
00ce55 e0e0     +LDI R30 , LOW ( 0x0 )
00ce56 e0f0     +LDI R31 , HIGH ( 0x0 )
00ce57 e060     +LDI R22 , BYTE3 ( 0x0 )
00ce58 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00ce59 940e e091 	CALL __EEPROMWRD
00ce5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x235:
00ce5c 89e8      	LDD  R30,Y+16
00ce5d 89f9      	LDD  R31,Y+16+1
00ce5e eda6      	LDI  R26,LOW(_epADCRef1)
00ce5f e0b5      	LDI  R27,HIGH(_epADCRef1)
00ce60 940e df05 	CALL __LSLW2
00ce62 0fae      	ADD  R26,R30
00ce63 1fbf      	ADC  R27,R31
00ce64 940e e07d 	CALL __EEPROMRDD
00ce66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x236:
00ce67 89a8      	LDD  R26,Y+16
00ce68 89b9      	LDD  R27,Y+16+1
00ce69 5aa8      	SUBI R26,LOW(-_epCalType)
00ce6a 4fb9      	SBCI R27,HIGH(-_epCalType)
00ce6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x237:
                +
00ce6c ede1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 341 ) )
00ce6d e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 341 ) )
00ce6e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 341 ) )
00ce6f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 341 ) )
                 	__POINTD1FN _0x1A0000,341
00ce70 940c c632 	JMP SUBOPT_0xE7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x238:
00ce72 ebad      	LDI  R26,LOW(_epFactor_C)
00ce73 e0b5      	LDI  R27,HIGH(_epFactor_C)
00ce74 940e df05 	CALL __LSLW2
00ce76 0fae      	ADD  R26,R30
00ce77 1fbf      	ADC  R27,R31
00ce78 c9dd      	RJMP SUBOPT_0x14A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x239:
00ce79 89e8      	LDD  R30,Y+16
00ce7a 89f9      	LDD  R31,Y+16+1
00ce7b eaa9      	LDI  R26,LOW(_epFactor_B)
00ce7c e0b5      	LDI  R27,HIGH(_epFactor_B)
00ce7d 940e df05 	CALL __LSLW2
00ce7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23A:
00ce80 89e8      	LDD  R30,Y+16
00ce81 89f9      	LDD  R31,Y+16+1
00ce82 e1a7      	LDI  R26,LOW(_epTempRef2)
00ce83 e0b6      	LDI  R27,HIGH(_epTempRef2)
00ce84 940e df05 	CALL __LSLW2
00ce86 0fae      	ADD  R26,R30
00ce87 1fbf      	ADC  R27,R31
00ce88 940e e07d 	CALL __EEPROMRDD
00ce8a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x23B:
00ce8b 89e8      	LDD  R30,Y+16
00ce8c 89f9      	LDD  R31,Y+16+1
00ce8d e0a3      	LDI  R26,LOW(_epADCRef2)
00ce8e e0b6      	LDI  R27,HIGH(_epADCRef2)
00ce8f 940e df05 	CALL __LSLW2
00ce91 0fae      	ADD  R26,R30
00ce92 1fbf      	ADC  R27,R31
00ce93 940e e07d 	CALL __EEPROMRDD
00ce95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23C:
                +
00ce96 e1e9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 413 ) )
00ce97 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 413 ) )
00ce98 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 413 ) )
00ce99 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 413 ) )
                 	__POINTD1FN _0x1A0000,413
00ce9a 940c c632 	JMP SUBOPT_0xE7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23D:
00ce9c e0a3      	LDI  R26,LOW(_epADCRef2)
00ce9d e0b6      	LDI  R27,HIGH(_epADCRef2)
00ce9e 940e df05 	CALL __LSLW2
00cea0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23E:
00cea1 0fae      	ADD  R26,R30
00cea2 1fbf      	ADC  R27,R31
00cea3 940e e07d 	CALL __EEPROMRDD
00cea5 940e e05e 	CALL __PUTPARD1
00cea7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23F:
00cea8 e1a7      	LDI  R26,LOW(_epTempRef2)
00cea9 e0b6      	LDI  R27,HIGH(_epTempRef2)
00ceaa 940e df05 	CALL __LSLW2
00ceac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x240:
00cead 940e df05 	CALL __LSLW2
00ceaf 0fae      	ADD  R26,R30
00ceb0 1fbf      	ADC  R27,R31
00ceb1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x241:
00ceb2 940e e05e 	CALL __PUTPARD1
00ceb4 8de8      	LDD  R30,Y+24
00ceb5 8df9      	LDD  R31,Y+24+1
00ceb6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x242:
00ceb7 e0e2      	LDI  R30,LOW(2)
00ceb8 93ea      	ST   -Y,R30
00ceb9 01de      	MOVW R26,R28
00ceba 961b      	ADIW R26,11
00cebb 940c a29b 	JMP  _ftoa
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x243:
                +
00cebd eeea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 622 ) )
00cebe e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 622 ) )
00cebf e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 622 ) )
00cec0 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 622 ) )
                 	__POINTD1FN _0x1A0000,622
00cec1 940e e05e 	CALL __PUTPARD1
00cec3 e080      	LDI  R24,0
00cec4 940e bf41 	CALL _sprintf
00cec6 9626      	ADIW R28,6
00cec7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x244:
                +
00cec8 ebeb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 831 ) )
00cec9 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 831 ) )
00ceca e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 831 ) )
00cecb e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 831 ) )
                 	__POINTD1FN _0x1A0000,831
00cecc 940e e05e 	CALL __PUTPARD1
00cece 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x245:
00cecf 01de      	MOVW R26,R28
00ced0 9616      	ADIW R26,6
00ced1 940c a5c7 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x246:
00ced3 53e0      	SUBI R30,LOW(48)
                +
00ced4 89a8     +LDD R26 , Y + 16
00ced5 89b9     +LDD R27 , Y + 16 + 1
00ced6 9612     +ADIW R26 , 2
00ced7 93ec     +ST X , R30
                 	__PUTB1SNS 16,2
00ced8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x247:
00ced9 53e0      	SUBI R30,LOW(48)
                +
00ceda 89a8     +LDD R26 , Y + 16
00cedb 89b9     +LDD R27 , Y + 16 + 1
00cedc 9613     +ADIW R26 , 3
00cedd 93ec     +ST X , R30
                 	__PUTB1SNS 16,3
00cede 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x248:
00cedf 53e0      	SUBI R30,LOW(48)
                +
00cee0 89a8     +LDD R26 , Y + 16
00cee1 89b9     +LDD R27 , Y + 16 + 1
00cee2 9614     +ADIW R26 , 4
00cee3 93ec     +ST X , R30
                 	__PUTB1SNS 16,4
00cee4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x249:
00cee5 53e0      	SUBI R30,LOW(48)
                +
00cee6 89a8     +LDD R26 , Y + 16
00cee7 89b9     +LDD R27 , Y + 16 + 1
00cee8 9615     +ADIW R26 , 5
00cee9 93ec     +ST X , R30
                 	__PUTB1SNS 16,5
00ceea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x24A:
00ceeb 89a8      	LDD  R26,Y+16
00ceec 89b9      	LDD  R27,Y+16+1
00ceed 9611      	ADIW R26,1
00ceee e0e0      	LDI  R30,LOW(0)
00ceef 93ec      	ST   X,R30
00cef0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24B:
                +
00cef1 e2e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 936 ) )
00cef2 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 936 ) )
00cef3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 936 ) )
00cef4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 936 ) )
                 	__POINTD1FN _0x1A0000,936
00cef5 940e e05e 	CALL __PUTPARD1
00cef7 01fe      	MOVW R30,R28
00cef8 963a      	ADIW R30,10
00cef9 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24C:
00cefb e0e0      	LDI  R30,LOW(0)
00cefc 83e8      	ST   Y,R30
00cefd 83e9      	STD  Y+1,R30
00cefe 83ea      	STD  Y+2,R30
00ceff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x24D:
00cf00 940e e05e 	CALL __PUTPARD1
00cf02 89ea      	LDD  R30,Y+18
00cf03 89fb      	LDD  R31,Y+18+1
00cf04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x24E:
00cf05 9fea      	MUL  R30,R26
00cf06 01f0      	MOVW R30,R0
00cf07 940e df3b 	CALL __CWD1
00cf09 940e dd75 	CALL __CDF1
00cf0b 940e c297 	CALL SUBOPT_0x59
00cf0d 940e ddaf 	CALL __ADDF12
00cf0f 940e c4f2 	CALL SUBOPT_0xB5
00cf11 85ea      	LDD  R30,Y+10
00cf12 85fb      	LDD  R31,Y+10+1
00cf13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24F:
00cf14 940e c297 	CALL SUBOPT_0x59
00cf16 940e ddaf 	CALL __ADDF12
00cf18 940e c4f2 	CALL SUBOPT_0xB5
00cf1a 85ea      	LDD  R30,Y+10
00cf1b 85fb      	LDD  R31,Y+10+1
00cf1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x250:
00cf1d e0f0      	LDI  R31,0
00cf1e 940e df3b 	CALL __CWD1
00cf20 940e dd75 	CALL __CDF1
00cf22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x251:
00cf23 940e df3b 	CALL __CWD1
00cf25 940e e05e 	CALL __PUTPARD1
00cf27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x252:
00cf28 e0e0      	LDI  R30,LOW(0)
                +
00cf29 83ea     +STD Y + 2 , R30
00cf2a 83eb     +STD Y + 2 + 1 , R30
00cf2b 83ec     +STD Y + 2 + 2 , R30
00cf2c 83ed     +STD Y + 2 + 3 , R30
                 	__CLRD1S 2
                +
00cf2d e000     +LDI R16 , LOW ( 0 )
00cf2e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00cf2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x253:
00cf30 85ae      	LDD  R26,Y+14
00cf31 5fa8      	SUBI R26,-LOW(8)
00cf32 940e 439e 	CALL _read_adc
00cf34 940e c4e8 	CALL SUBOPT_0xB3
00cf36 2766      	CLR  R22
00cf37 2777      	CLR  R23
00cf38 940e deb6 	CALL __ADDD12
00cf3a 940c c4de 	JMP SUBOPT_0xB1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x254:
00cf3c 85ee      	LDD  R30,Y+14
00cf3d 85ff      	LDD  R31,Y+14+1
00cf3e eda6      	LDI  R26,LOW(_epADCRef1)
00cf3f e0b5      	LDI  R27,HIGH(_epADCRef1)
00cf40 940e df05 	CALL __LSLW2
00cf42 0fea      	ADD  R30,R26
00cf43 1ffb      	ADC  R31,R27
00cf44 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x255:
00cf45 e1ae      	LDI  R26,LOW(30)
00cf46 e0b0      	LDI  R27,0
00cf47 940c a077 	JMP  _iAD595ADCToTemp
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x256:
00cf49 010f      	MOVW R0,R30
00cf4a 85ee      	LDD  R30,Y+14
00cf4b 85ff      	LDD  R31,Y+14+1
00cf4c 940c c178 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x257:
00cf4e 940e df05 	CALL __LSLW2
00cf50 0fae      	ADD  R26,R30
00cf51 1fbf      	ADC  R27,R31
00cf52 940e c4ed 	CALL SUBOPT_0xB4
00cf54 940e e091 	CALL __EEPROMWRD
00cf56 85ae      	LDD  R26,Y+14
00cf57 85bf      	LDD  R27,Y+14+1
00cf58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x258:
00cf59 940e e0a1 	CALL __EEPROMWRB
00cf5b 85ae      	LDD  R26,Y+14
00cf5c 85bf      	LDD  R27,Y+14+1
00cf5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x259:
00cf5e 85ee      	LDD  R30,Y+14
00cf5f 85ff      	LDD  R31,Y+14+1
00cf60 e3a0      	LDI  R26,LOW(_epADCRef3)
00cf61 e0b6      	LDI  R27,HIGH(_epADCRef3)
00cf62 940e df05 	CALL __LSLW2
00cf64 0fea      	ADD  R30,R26
00cf65 1ffb      	ADC  R31,R27
00cf66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25A:
00cf67 01f5      	MOVW R30,R10
00cf68 e0aa      	LDI  R26,LOW(10)
00cf69 e0b0      	LDI  R27,HIGH(10)
00cf6a 940e df54 	CALL __MULW12U
00cf6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25B:
00cf6d 940e c297 	CALL SUBOPT_0x59
00cf6f 940e e059 	CALL __PUTDZ20
00cf71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x25C:
00cf72 940e e059 	CALL __PUTDZ20
00cf74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x25D:
00cf75 e0ea      	LDI  R30,LOW(10)
00cf76 e0f0      	LDI  R31,HIGH(10)
00cf77 940e dfeb 	CALL __MODW21
00cf79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25E:
00cf7a 01f6      	MOVW R30,R12
00cf7b e0aa      	LDI  R26,LOW(10)
00cf7c e0b0      	LDI  R27,HIGH(10)
00cf7d 940e df54 	CALL __MULW12U
00cf7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x25F:
00cf80 01df      	MOVW R26,R30
00cf81 940e e02e 	CALL __GETD1P
00cf83 81ac      	LDD  R26,Y+4
00cf84 81bd      	LDD  R27,Y+4+1
00cf85 940e e039 	CALL __PUTDP1
00cf87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x260:
00cf88 93e0 1483 	STS  _batteryVolt,R30
00cf8a 93f0 1484 	STS  _batteryVolt+1,R31
00cf8c 9360 1485 	STS  _batteryVolt+2,R22
00cf8e 9370 1486 	STS  _batteryVolt+3,R23
00cf90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x261:
                +
00cf91 91e0 136b+LDS R30 , _env_config + ( 6 )
00cf93 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00cf95 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00cf97 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00cf99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x262:
00cf9a 70e4      	ANDI R30,LOW(0x4)
00cf9b e0f0      	LDI  R31,0
00cf9c 940e df0e 	CALL __ASRW2
00cf9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x263:
00cf9f 91e0 146b 	LDS  R30,_sdFreeSpace
00cfa1 91f0 146c 	LDS  R31,_sdFreeSpace+1
00cfa3 9160 146d 	LDS  R22,_sdFreeSpace+2
00cfa5 9170 146e 	LDS  R23,_sdFreeSpace+3
00cfa7 940e e0b2 	CALL __CPD10
00cfa9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x264:
00cfaa 81e8      	LD   R30,Y
00cfab 81f9      	LDD  R31,Y+1
00cfac 59e1      	SUBI R30,LOW(-_sensorStatus)
00cfad 4efb      	SBCI R31,HIGH(-_sensorStatus)
00cfae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x265:
00cfaf 81ea      	LDD  R30,Y+2
00cfb0 81fb      	LDD  R31,Y+2+1
00cfb1 51e2      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00cfb2 4efa      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00cfb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x266:
00cfb4 81ea      	LDD  R30,Y+2
00cfb5 81fb      	LDD  R31,Y+2+1
00cfb6 edaa      	LDI  R26,LOW(_t_S00F0005000)
00cfb7 e1b5      	LDI  R27,HIGH(_t_S00F0005000)
00cfb8 940e df05 	CALL __LSLW2
00cfba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x267:
00cfbb e1ed      	LDI  R30,LOW(29)
00cfbc 940e df7c 	CALL __MULB1W2U
                +
00cfbe 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
00cfbf 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
00cfc0 01df      	MOVW R26,R30
00cfc1 940c c0f9 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x268:
00cfc3 81aa      	LDD  R26,Y+2
00cfc4 81bb      	LDD  R27,Y+2+1
00cfc5 58ac      	SUBI R26,LOW(-_dataStatus)
00cfc6 4ebb      	SBCI R27,HIGH(-_dataStatus)
00cfc7 91ec      	LD   R30,X
00cfc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x269:
00cfc9 81ea      	LDD  R30,Y+2
00cfca 81fb      	LDD  R31,Y+2+1
00cfcb 50ed      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00cfcc 4efa      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00cfcd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26A:
00cfce e1ed      	LDI  R30,LOW(29)
00cfcf 940e df7c 	CALL __MULB1W2U
                +
00cfd1 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00cfd2 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
00cfd3 01df      	MOVW R26,R30
00cfd4 940c c0f9 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26B:
00cfd6 940e df05 	CALL __LSLW2
00cfd8 940c c0f4 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x26C:
00cfda 940e df05 	CALL __LSLW2
00cfdc 940c c0e9 	JMP SUBOPT_0x1B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26D:
                +
00cfde ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00cfdf e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00cfe0 0fe0      	ADD  R30,R16
00cfe1 1ff1      	ADC  R31,R17
00cfe2 81e0      	LD   R30,Z
00cfe3 30e0      	CPI  R30,0
00cfe4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x26E:
00cfe5 81aa      	LDD  R26,Y+2
00cfe6 81bb      	LDD  R27,Y+2+1
00cfe7 01cd      	MOVW R24,R26
00cfe8 916d      	LD   R22,X+
00cfe9 917c      	LD   R23,X
00cfea e0e4      	LDI  R30,LOW(4)
00cfeb e0f0      	LDI  R31,HIGH(4)
00cfec 1be0      	SUB  R30,R16
00cfed 0bf1      	SBC  R31,R17
00cfee e0a1      	LDI  R26,LOW(1)
00cfef e0b0      	LDI  R27,HIGH(1)
00cff0 940e dee0 	CALL __LSLW12
00cff2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x26F:
00cff3 91a0 167c 	LDS  R26,_last_wr_eventQ
00cff5 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00cff7 e0e6      	LDI  R30,LOW(6)
00cff8 940e df7c 	CALL __MULB1W2U
00cffa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x270:
00cffb 91a0 167e 	LDS  R26,_last_rd_eventQ
00cffd 91b0 167f 	LDS  R27,_last_rd_eventQ+1
00cfff e0e6      	LDI  R30,LOW(6)
00d000 940e df7c 	CALL __MULB1W2U
00d002 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x271:
00d003 81e0      	LD   R30,Z
00d004 81a8      	LD   R26,Y
00d005 81b9      	LDD  R27,Y+1
00d006 93ec      	ST   X,R30
00d007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x272:
00d008 940e e0d0 	CALL __SAVELOCR4
                +
00d00a e000     +LDI R16 , LOW ( 0 )
00d00b e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00d00c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x273:
00d00d 0fa0      	ADD  R26,R16
00d00e 1fb1      	ADC  R27,R17
00d00f 91ec      	LD   R30,X
00d010 30e0      	CPI  R30,0
00d011 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x274:
00d012 93fa      	ST   -Y,R31
00d013 93ea      	ST   -Y,R30
                +
00d014 e0a3     +LDI R26 , LOW ( 0x3 )
00d015 e0b0     +LDI R27 , HIGH ( 0x3 )
00d016 e080     +LDI R24 , BYTE3 ( 0x3 )
00d017 e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00d018 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x275:
00d019 81a8      	LD   R26,Y
00d01a 81b9      	LDD  R27,Y+1
00d01b 93ec      	ST   X,R30
00d01c e0e0      	LDI  R30,LOW(0)
00d01d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x276:
                +
00d01e 91a0 136b+LDS R26 , _env_config + ( 6 )
00d020 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
00d022 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
00d024 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
00d026 940e e0be 	CALL __CPD02
00d028 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x277:
00d029 81a8      	LD   R26,Y
00d02a 81b9      	LDD  R27,Y+1
00d02b e0e0      	LDI  R30,LOW(0)
00d02c 93ec      	ST   X,R30
00d02d e0e1      	LDI  R30,LOW(1)
00d02e e0f0      	LDI  R31,HIGH(1)
00d02f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x278:
                +
00d030 91a0 1375+LDS R26 , _env_config + ( 16 )
00d032 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
00d034 940e e0b6 	CALL __CPW02
00d036 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x279:
00d037 81ea      	LDD  R30,Y+2
00d038 81fb      	LDD  R31,Y+2+1
00d039 58e4      	SUBI R30,LOW(-_dinStatus)
00d03a 4efb      	SBCI R31,HIGH(-_dinStatus)
00d03b 81a0      	LD   R26,Z
00d03c 81ea      	LDD  R30,Y+2
00d03d 81fb      	LDD  R31,Y+2+1
00d03e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27A:
00d03f 81ea      	LDD  R30,Y+2
00d040 81fb      	LDD  R31,Y+2+1
00d041 55e0      	SUBI R30,LOW(-_t_flag_S0110006000)
00d042 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00d043 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27B:
00d044 81ea      	LDD  R30,Y+2
00d045 81fb      	LDD  R31,Y+2+1
00d046 58e4      	SUBI R30,LOW(-_dinStatus)
00d047 4efb      	SBCI R31,HIGH(-_dinStatus)
00d048 81e0      	LD   R30,Z
00d049 93ec      	ST   X,R30
00d04a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27C:
00d04b 93ba      	ST   -Y,R27
00d04c 93aa      	ST   -Y,R26
00d04d 81ea      	LDD  R30,Y+2
00d04e 81fb      	LDD  R31,Y+2+1
00d04f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27D:
00d050 81ea      	LDD  R30,Y+2
00d051 81fb      	LDD  R31,Y+2+1
00d052 59e1      	SUBI R30,LOW(-_sensorStatus)
00d053 4efb      	SBCI R31,HIGH(-_sensorStatus)
00d054 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x27E:
00d055 81ea      	LDD  R30,Y+2
00d056 81fb      	LDD  R31,Y+2+1
00d057 53e8      	SUBI R30,LOW(-_t_flag_S0110007000)
00d058 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00d059 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27F:
00d05a 81ea      	LDD  R30,Y+2
00d05b 81fb      	LDD  R31,Y+2+1
00d05c eba4      	LDI  R26,LOW(_t_S0110007000)
00d05d e1b6      	LDI  R27,HIGH(_t_S0110007000)
00d05e cf77      	RJMP SUBOPT_0x26B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x280:
00d05f 81ea      	LDD  R30,Y+2
00d060 81fb      	LDD  R31,Y+2+1
00d061 51ea      	SUBI R30,LOW(-_t_flag_S0110008000)
00d062 4ef9      	SBCI R31,HIGH(-_t_flag_S0110008000)
00d063 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x281:
00d064 e088      	LDI  R24,8
00d065 940e 7f67 	CALL _printOLED
00d067 962c      	ADIW R28,12
00d068 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x282:
                +
00d069 e0a5     +LDI R26 , 5
00d06a 9fa0     +MUL R26 , R16
00d06b 01f0     +MOVW R30 , R0
00d06c 9fa1     +MUL R26 , R17
00d06d 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,5
00d06e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x283:
00d06f 940e e05e 	CALL __PUTPARD1
00d071 01f8      	MOVW R30,R16
00d072 cc59      	RJMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x284:
00d073 940e e05e 	CALL __PUTPARD1
00d075 cfee      	RJMP SUBOPT_0x281
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 118 TIMES, CODE SIZE REDUCTION:231 WORDS
                 SUBOPT_0x285:
00d076 e084      	LDI  R24,4
00d077 940e 7f67 	CALL _printOLED
00d079 9628      	ADIW R28,8
00d07a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x286:
00d07b 940e c3e5 	CALL SUBOPT_0x8C
                +
00d07d e0e0     +LDI R30 , LOW ( 0x40400000 )
00d07e e0f0     +LDI R31 , HIGH ( 0x40400000 )
00d07f e460     +LDI R22 , BYTE3 ( 0x40400000 )
00d080 e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
00d081 940e de92 	CALL __CMPF12
00d083 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x287:
00d084 940e c3e5 	CALL SUBOPT_0x8C
                +
00d086 e3e3     +LDI R30 , LOW ( 0x40533333 )
00d087 e3f3     +LDI R31 , HIGH ( 0x40533333 )
00d088 e563     +LDI R22 , BYTE3 ( 0x40533333 )
00d089 e470     +LDI R23 , BYTE4 ( 0x40533333 )
                 	__GETD1N 0x40533333
00d08a 940e de92 	CALL __CMPF12
00d08c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x288:
00d08d 940e c3e5 	CALL SUBOPT_0x8C
                +
00d08f eced     +LDI R30 , LOW ( 0x406CCCCD )
00d090 ecfc     +LDI R31 , HIGH ( 0x406CCCCD )
00d091 e66c     +LDI R22 , BYTE3 ( 0x406CCCCD )
00d092 e470     +LDI R23 , BYTE4 ( 0x406CCCCD )
                 	__GETD1N 0x406CCCCD
00d093 940e de92 	CALL __CMPF12
00d095 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x289:
00d096 940e c3e5 	CALL SUBOPT_0x8C
                +
00d098 e0e0     +LDI R30 , LOW ( 0x40800000 )
00d099 e0f0     +LDI R31 , HIGH ( 0x40800000 )
00d09a e860     +LDI R22 , BYTE3 ( 0x40800000 )
00d09b e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
00d09c 940e de92 	CALL __CMPF12
00d09e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x28A:
00d09f e080      	LDI  R24,0
00d0a0 940e 7f67 	CALL _printOLED
00d0a2 9624      	ADIW R28,4
00d0a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x28B:
00d0a4 940e e05e 	CALL __PUTPARD1
00d0a6 81ec      	LDD  R30,Y+4
00d0a7 940c c2e0 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x28C:
00d0a9 940e deb2 	CALL __ADDW2R15
00d0ab 940e e02e 	CALL __GETD1P
00d0ad 940e e05e 	CALL __PUTPARD1
00d0af 01d8      	MOVW R26,R16
00d0b0 940c bf79 	JMP  _vsprintf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28D:
00d0b2 940e c265 	CALL SUBOPT_0x52
00d0b4 940e b973 	CALL _f_lseek
00d0b6 2f1e      	MOV  R17,R30
00d0b7 3010      	CPI  R17,0
00d0b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x28E:
00d0b9 2fa1      	MOV  R26,R17
00d0ba 940e 7fc7 	CALL _error
00d0bc efef      	LDI  R30,LOW(65535)
00d0bd efff      	LDI  R31,HIGH(65535)
00d0be 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28F:
00d0bf 93fa      	ST   -Y,R31
00d0c0 93ea      	ST   -Y,R30
00d0c1 01fe      	MOVW R30,R28
00d0c2 9633      	ADIW R30,3
00d0c3 93fa      	ST   -Y,R31
00d0c4 93ea      	ST   -Y,R30
00d0c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x290:
00d0c6 940e e05e 	CALL __PUTPARD1
00d0c8 e1ef      	LDI  R30,LOW(_root_path)
00d0c9 e1f9      	LDI  R31,HIGH(_root_path)
00d0ca 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x291:
00d0cc 940e 7fc7 	CALL _error
00d0ce e0e0      	LDI  R30,LOW(0)
00d0cf 93e0 146b 	STS  _sdFreeSpace,R30
00d0d1 93e0 146c 	STS  _sdFreeSpace+1,R30
00d0d3 93e0 146d 	STS  _sdFreeSpace+2,R30
00d0d5 93e0 146e 	STS  _sdFreeSpace+3,R30
00d0d7 efef      	LDI  R30,LOW(65535)
00d0d8 efff      	LDI  R31,HIGH(65535)
00d0d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x292:
00d0da 81e2      	LDD  R30,Z+2
00d0db e0f0      	LDI  R31,0
00d0dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x293:
                +
00d0dd 81a9     +LDD R26 , Y + 1
00d0de 81ba     +LDD R27 , Y + 1 + 1
00d0df 818b     +LDD R24 , Y + 1 + 2
00d0e0 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00d0e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x294:
00d0e2 940e df3b 	CALL __CWD1
00d0e4 940e df5c 	CALL __MULD12U
00d0e6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x295:
                +
00d0e7 ece2     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00d0e8 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00d0e9 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00d0ea e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00d0eb cfda      	RJMP SUBOPT_0x290
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x296:
00d0ec 93fa      	ST   -Y,R31
00d0ed 93ea      	ST   -Y,R30
00d0ee 01fe      	MOVW R30,R28
00d0ef 9634      	ADIW R30,4
00d0f0 93fa      	ST   -Y,R31
00d0f1 93ea      	ST   -Y,R30
00d0f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x297:
00d0f3 89ee      	LDD  R30,Y+22
00d0f4 89ff      	LDD  R31,Y+22+1
00d0f5 93fa      	ST   -Y,R31
00d0f6 93ea      	ST   -Y,R30
00d0f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x298:
00d0f8 01de      	MOVW R26,R28
00d0f9 961a      	ADIW R26,10
00d0fa 940e 8453 	CALL _LOG_getLastInsert
00d0fc 018f      	MOVW R16,R30
00d0fd 2311      	TST  R17
00d0fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x299:
00d0ff 940e c24c 	CALL SUBOPT_0x4F
00d101 940e e05e 	CALL __PUTPARD1
00d103 940c c222 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29A:
00d105 940e 84db 	CALL _index2Addr
00d107 940c c4aa 	JMP SUBOPT_0xA7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29B:
00d109 940e c4ed 	CALL SUBOPT_0xB4
00d10b 940e e05e 	CALL __PUTPARD1
00d10d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x29C:
00d10e 940e c4ed 	CALL SUBOPT_0xB4
00d110 940c c5b0 	JMP SUBOPT_0xD2
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x29D:
00d112 93fa      	ST   -Y,R31
00d113 93ea      	ST   -Y,R30
00d114 940c c35f 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x29E:
00d116 940e 7fe7 	CALL _SD_writeData
00d118 018f      	MOVW R16,R30
00d119 2311      	TST  R17
00d11a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x29F:
00d11b 940e c4ed 	CALL SUBOPT_0xB4
                +
00d11d 5feb     +SUBI R30 , LOW ( - 5 )
00d11e 4fff     +SBCI R31 , HIGH ( - 5 )
00d11f 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00d120 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00d121 940e e05e 	CALL __PUTPARD1
00d123 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A0:
00d124 940e c4ed 	CALL SUBOPT_0xB4
                +
00d126 5fe9     +SUBI R30 , LOW ( - 7 )
00d127 4fff     +SBCI R31 , HIGH ( - 7 )
00d128 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00d129 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00d12a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2A1:
00d12b 940e c5ba 	CALL SUBOPT_0xD4
00d12d 940e c514 	CALL SUBOPT_0xBB
                +
00d12f 87ea     +STD Y + 10 , R30
00d130 87fb     +STD Y + 10 + 1 , R31
00d131 876c     +STD Y + 10 + 2 , R22
00d132 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d133 01df      	MOVW R26,R30
00d134 01cb      	MOVW R24,R22
00d135 940e 846e 	CALL _LOG_setLastInsert
00d137 018f      	MOVW R16,R30
00d138 2311      	TST  R17
00d139 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2A2:
00d13a 8de8      	LDD  R30,Y+24
00d13b 8df9      	LDD  R31,Y+24+1
00d13c 93fa      	ST   -Y,R31
00d13d 93ea      	ST   -Y,R30
00d13e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A3:
00d13f 01de      	MOVW R26,R28
00d140 961e      	ADIW R26,14
00d141 940e 8453 	CALL _LOG_getLastInsert
00d143 018f      	MOVW R16,R30
00d144 2311      	TST  R17
00d145 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A4:
00d146 01de      	MOVW R26,R28
00d147 961a      	ADIW R26,10
00d148 940e 848f 	CALL _LOG_getLastSend
00d14a 018f      	MOVW R16,R30
00d14b 2311      	TST  R17
00d14c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A5:
                +
00d14d e2e0     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00d14e e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00d14f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00d150 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00d151 940c c3e8 	JMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A6:
00d153 940e e05e 	CALL __PUTPARD1
00d155 940e c5dd 	CALL SUBOPT_0xDB
00d157 940c c108 	JMP SUBOPT_0x21
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A7:
00d159 940e c5cb 	CALL SUBOPT_0xD8
00d15b 940e c5c6 	CALL SUBOPT_0xD7
00d15d 940e e0c9 	CALL __CPD21
00d15f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2A8:
00d160 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00d161 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00d162 93fa      	ST   -Y,R31
00d163 93ea      	ST   -Y,R30
00d164 e0e1      	LDI  R30,LOW(1)
00d165 93ea      	ST   -Y,R30
00d166 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d167 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d168 93fa      	ST   -Y,R31
00d169 93ea      	ST   -Y,R30
00d16a e1a0      	LDI  R26,LOW(16)
00d16b e0b0      	LDI  R27,0
00d16c 940e 84ed 	CALL _LOG_createFile
00d16e 018f      	MOVW R16,R30
00d16f 2311      	TST  R17
00d170 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2A9:
00d171 940e 803e 	CALL _SD_readData
00d173 018f      	MOVW R16,R30
00d174 2311      	TST  R17
00d175 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2AA:
00d176 89ea      	LDD  R30,Y+18
00d177 89fb      	LDD  R31,Y+18+1
00d178 93fa      	ST   -Y,R31
00d179 93ea      	ST   -Y,R30
00d17a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AB:
00d17b 940e c24c 	CALL SUBOPT_0x4F
00d17d 940e e05e 	CALL __PUTPARD1
00d17f 940c c072 	JMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AC:
00d181 93fa      	ST   -Y,R31
00d182 93ea      	ST   -Y,R30
00d183 940c c359 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AD:
00d185 940e c4ed 	CALL SUBOPT_0xB4
                +
00d187 5fe6     +SUBI R30 , LOW ( - 10 )
00d188 4fff     +SBCI R31 , HIGH ( - 10 )
00d189 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00d18a 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00d18b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2AE:
00d18c ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00d18d e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00d18e 93fa      	ST   -Y,R31
00d18f 93ea      	ST   -Y,R30
00d190 e0e1      	LDI  R30,LOW(1)
00d191 93ea      	ST   -Y,R30
00d192 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d193 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d194 93fa      	ST   -Y,R31
00d195 93ea      	ST   -Y,R30
00d196 e1a0      	LDI  R26,LOW(16)
00d197 e0b0      	LDI  R27,0
00d198 940e 84ed 	CALL _LOG_createFile
00d19a 018f      	MOVW R16,R30
00d19b 2311      	TST  R17
00d19c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2AF:
00d19d 81ec      	LDD  R30,Y+4
00d19e 81fd      	LDD  R31,Y+4+1
00d19f 93fa      	ST   -Y,R31
00d1a0 93ea      	ST   -Y,R30
00d1a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B0:
                +
00d1a2 e0e0     +LDI R30 , LOW ( 0x0 )
00d1a3 e0f0     +LDI R31 , HIGH ( 0x0 )
00d1a4 e060     +LDI R22 , BYTE3 ( 0x0 )
00d1a5 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d1a6 940e e05e 	CALL __PUTPARD1
00d1a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B1:
                +
00d1a9 e0e4     +LDI R30 , LOW ( 0x4 )
00d1aa e0f0     +LDI R31 , HIGH ( 0x4 )
00d1ab e060     +LDI R22 , BYTE3 ( 0x4 )
00d1ac e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00d1ad 940e e05e 	CALL __PUTPARD1
00d1af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2B2:
00d1b0 940e e05e 	CALL __PUTPARD1
                +
00d1b2 01fe     +MOVW R30 , R28
00d1b3 5de5     +SUBI R30 , LOW ( - 555 )
00d1b4 4ffd     +SBCI R31 , HIGH ( - 555 )
00d1b5 9001     +LD R0 , Z +
00d1b6 81f0     +LD R31 , Z
00d1b7 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00d1b8 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x2B3:
                +
00d1ba 01fe     +MOVW R30 , R28
00d1bb 5dec     +SUBI R30 , LOW ( - 548 )
00d1bc 4ffd     +SBCI R31 , HIGH ( - 548 )
00d1bd 9001     +LD R0 , Z +
00d1be 81f0     +LD R31 , Z
00d1bf 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00d1c0 93fa      	ST   -Y,R31
00d1c1 93ea      	ST   -Y,R30
                +
00d1c2 01de     +MOVW R26 , R28
00d1c3 5dac     +SUBI R26 , LOW ( - 548 )
00d1c4 4fbd     +SBCI R27 , HIGH ( - 548 )
00d1c5 900d     +LD R0 , X +
00d1c6 91bc     +LD R27 , X
00d1c7 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00d1c8 940c 9e6a 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B4:
00d1ca ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00d1cb e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00d1cc 93fa      	ST   -Y,R31
00d1cd 93ea      	ST   -Y,R30
00d1ce e1a0      	LDI  R26,LOW(16)
00d1cf e0b0      	LDI  R27,0
00d1d0 940e 84ed 	CALL _LOG_createFile
00d1d2 018f      	MOVW R16,R30
00d1d3 2311      	TST  R17
00d1d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B5:
                +
00d1d5 e2ea     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00d1d6 e5fa     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00d1d7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00d1d8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00d1d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B6:
00d1da 940e e05e 	CALL __PUTPARD1
00d1dc ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00d1dd e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00d1de 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2B7:
00d1e0 01df      	MOVW R26,R30
00d1e1 940e e02e 	CALL __GETD1P
00d1e3 81ae      	LDD  R26,Y+6
00d1e4 81bf      	LDD  R27,Y+6+1
00d1e5 940e e039 	CALL __PUTDP1
00d1e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2B8:
00d1e8 e0ab      	LDI  R26,LOW(11)
00d1e9 9f1a      	MUL  R17,R26
00d1ea 01f0      	MOVW R30,R0
00d1eb 55e0      	SUBI R30,LOW(-_dataLogQueue)
00d1ec 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00d1ed 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x2B9:
00d1ee e0a0      	LDI  R26,LOW(0)
00d1ef 83a0      	STD  Z+0,R26
00d1f0 e0ab      	LDI  R26,LOW(11)
00d1f1 9f1a      	MUL  R17,R26
00d1f2 01f0      	MOVW R30,R0
                +
00d1f3 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00d1f4 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00d1f5 940e c151 	CALL SUBOPT_0x2C
00d1f7 dd7a      	RCALL SUBOPT_0x25C
00d1f8 e0ab      	LDI  R26,LOW(11)
00d1f9 9f1a      	MUL  R17,R26
00d1fa 01f0      	MOVW R30,R0
                +
00d1fb 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00d1fc 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00d1fd e0a0      	LDI  R26,LOW(0)
00d1fe e0b0      	LDI  R27,HIGH(0)
00d1ff 83a0      	STD  Z+0,R26
00d200 83b1      	STD  Z+1,R27
00d201 e0ab      	LDI  R26,LOW(11)
00d202 9f1a      	MUL  R17,R26
00d203 01f0      	MOVW R30,R0
                +
00d204 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00d205 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00d206 940e c151 	CALL SUBOPT_0x2C
00d208 cd69      	RJMP SUBOPT_0x25C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2BA:
                +
00d209 e0a7     +LDI R26 , 7
00d20a 9fa0     +MUL R26 , R16
00d20b 01f0     +MOVW R30 , R0
00d20c 9fa1     +MUL R26 , R17
00d20d 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00d20e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2BB:
00d20f e0a7      	LDI  R26,LOW(7)
00d210 9f1a      	MUL  R17,R26
00d211 01f0      	MOVW R30,R0
00d212 5ded      	SUBI R30,LOW(-_eventLogQueue)
00d213 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00d214 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2BC:
00d215 e0a0      	LDI  R26,LOW(0)
00d216 83a0      	STD  Z+0,R26
00d217 e0a7      	LDI  R26,LOW(7)
00d218 9f1a      	MUL  R17,R26
00d219 01f0      	MOVW R30,R0
00d21a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2BD:
                +
00d21b 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00d21c 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00d21d 940e c151 	CALL SUBOPT_0x2C
00d21f dd52      	RCALL SUBOPT_0x25C
00d220 e0a7      	LDI  R26,LOW(7)
00d221 9f1a      	MUL  R17,R26
00d222 01f0      	MOVW R30,R0
                +
00d223 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00d224 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00d225 cfef      	RJMP SUBOPT_0x2BC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x2BE:
00d226 e0e1      	LDI  R30,LOW(1)
00d227 93e0 14df 	STS  _currentPage,R30
00d229 e0e0      	LDI  R30,LOW(0)
00d22a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00d22c eeee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d22d e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d22e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d22f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d230 940e e05e 	CALL __PUTPARD1
00d232 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d234 940e df35 	CALL __CBD1
00d236 940e e05e 	CALL __PUTPARD1
00d238 ce3d      	RJMP SUBOPT_0x285
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
                 SUBOPT_0x2BF:
                +
00d239 01fe     +MOVW R30 , R28
00d23a 5aea     +SUBI R30 , LOW ( - 86 )
00d23b 4fff     +SBCI R31 , HIGH ( - 86 )
00d23c 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d23d cb2e      	RJMP SUBOPT_0x214
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:93 WORDS
                 SUBOPT_0x2C0:
00d23e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d240 50a1      	SUBI R26,LOW(1)
00d241 93a0 1a1f 	STS  _cursor_S0160000000,R26
00d243 30a0      	CPI  R26,0
00d244 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:218 WORDS
                 SUBOPT_0x2C1:
                +
00d245 efe7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 9 ) )
00d246 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 9 ) )
00d247 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 9 ) )
00d248 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 9 ) )
                 	__POINTD1FN _0x2C0000,9
00d249 940e e05e 	CALL __PUTPARD1
00d24b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d24d 940e df35 	CALL __CBD1
00d24f 940e e05e 	CALL __PUTPARD1
00d251 ce24      	RJMP SUBOPT_0x285
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x2C2:
00d252 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d254 5faf      	SUBI R26,-LOW(1)
00d255 93a0 1a1f 	STS  _cursor_S0160000000,R26
00d257 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x2C3:
00d258 e0e2      	LDI  R30,LOW(2)
00d259 93e0 14df 	STS  _currentPage,R30
00d25b e0e0      	LDI  R30,LOW(0)
00d25c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00d25e efed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d25f e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d260 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d261 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d262 940e e05e 	CALL __PUTPARD1
00d264 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d266 940e df35 	CALL __CBD1
00d268 940e e05e 	CALL __PUTPARD1
00d26a ce0b      	RJMP SUBOPT_0x285
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x2C4:
00d26b 93e0 14df 	STS  _currentPage,R30
00d26d e0e0      	LDI  R30,LOW(0)
00d26e 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d270 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x2C5:
                +
00d271 e0e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d272 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d273 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d274 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d275 940e e05e 	CALL __PUTPARD1
00d277 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d279 940e df35 	CALL __CBD1
00d27b 940e e05e 	CALL __PUTPARD1
00d27d cdf8      	RJMP SUBOPT_0x285
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2C6:
                +
00d27e e0e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d27f e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d280 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d281 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d282 940e e05e 	CALL __PUTPARD1
00d284 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d286 940e df35 	CALL __CBD1
00d288 940e e05e 	CALL __PUTPARD1
00d28a cdeb      	RJMP SUBOPT_0x285
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2C7:
00d28b 93e0 14df 	STS  _currentPage,R30
00d28d e1e5      	LDI  R30,LOW(21)
00d28e 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d290 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2C8:
00d291 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d293 e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d294 e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d295 93fa      	ST   -Y,R31
00d296 93ea      	ST   -Y,R30
00d297 efef      	LDI  R30,LOW(255)
00d298 93ea      	ST   -Y,R30
00d299 940c c35f 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2C9:
00d29b 940e a580 	CALL _memset
00d29d e0e0      	LDI  R30,LOW(0)
00d29e 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d2a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2CA:
                +
00d2a1 efe4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 6 ) )
00d2a2 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 6 ) )
00d2a3 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 6 ) )
00d2a4 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 6 ) )
                 	__POINTD1FN _0x2C0000,6
00d2a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2CB:
                +
00d2a6 e1e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 36 ) )
00d2a7 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 36 ) )
00d2a8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 36 ) )
00d2a9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 36 ) )
                 	__POINTD1FN _0x2C0000,36
00d2aa 940e e05e 	CALL __PUTPARD1
00d2ac 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d2ae 940e df35 	CALL __CBD1
00d2b0 940e e05e 	CALL __PUTPARD1
00d2b2 cdc3      	RJMP SUBOPT_0x285
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2CC:
00d2b3 93e0 14df 	STS  _currentPage,R30
00d2b5 e0e7      	LDI  R30,LOW(7)
00d2b6 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d2b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CD:
                +
00d2b9 e1e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 42 ) )
00d2ba e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 42 ) )
00d2bb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 42 ) )
00d2bc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 42 ) )
                 	__POINTD1FN _0x2C0000,42
00d2bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CE:
00d2be 940e e05e 	CALL __PUTPARD1
                +
00d2c0 e6e5     +LDI R30 , LOW ( _properties_config + ( 80 ) )
00d2c1 e1f1     +LDI R31 , HIGH ( _properties_config + ( 80 ) )
                 	__POINTW1MN _properties_config,80
00d2c2 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2CF:
00d2c4 e3a2      	LDI  R26,LOW(50)
00d2c5 e0b0      	LDI  R27,0
00d2c6 940e a580 	CALL _memset
00d2c8 01fe      	MOVW R30,R28
00d2c9 9638      	ADIW R30,8
00d2ca 93fa      	ST   -Y,R31
00d2cb 93ea      	ST   -Y,R30
                +
00d2cc efe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 5 ) )
00d2cd e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 5 ) )
00d2ce e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 5 ) )
00d2cf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 5 ) )
                 	__POINTD1FN _0x2C0000,5
00d2d0 940e e05e 	CALL __PUTPARD1
00d2d2 e080      	LDI  R24,0
00d2d3 940e bf41 	CALL _sprintf
00d2d5 9626      	ADIW R28,6
00d2d6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D0:
00d2d7 01fe      	MOVW R30,R28
00d2d8 96fa      	ADIW R30,58
00d2d9 940c c676 	JMP SUBOPT_0xF5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D1:
00d2db e1a4      	LDI  R26,LOW(20)
00d2dc e0b0      	LDI  R27,0
00d2dd 940c a580 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D2:
00d2df 01fe      	MOVW R30,R28
00d2e0 96fa      	ADIW R30,58
00d2e1 93fa      	ST   -Y,R31
00d2e2 93ea      	ST   -Y,R30
00d2e3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D3:
00d2e4 e080      	LDI  R24,0
00d2e5 940e bf41 	CALL _sprintf
00d2e7 9626      	ADIW R28,6
00d2e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2D4:
00d2e9 01fe      	MOVW R30,R28
00d2ea 9638      	ADIW R30,8
00d2eb 93fa      	ST   -Y,R31
00d2ec 93ea      	ST   -Y,R30
00d2ed 01de      	MOVW R26,R28
00d2ee 96dc      	ADIW R26,60
00d2ef 940e a590 	CALL _strcat
00d2f1 cfe5      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D5:
                +
00d2f2 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00d2f3 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00d2f4 0fe0      	ADD  R30,R16
00d2f5 1ff1      	ADC  R31,R17
00d2f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2D6:
00d2f7 01f9      	MOVW R30,R18
                +
00d2f8 5f2f     +SUBI R18 , LOW ( - 1 )
00d2f9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00d2fa 01de      	MOVW R26,R28
00d2fb 96da      	ADIW R26,58
00d2fc 0fae      	ADD  R26,R30
00d2fd 1fbf      	ADC  R27,R31
00d2fe 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D7:
00d2ff 940e e05e 	CALL __PUTPARD1
00d301 01fe      	MOVW R30,R28
00d302 963c      	ADIW R30,12
00d303 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D8:
                +
00d305 01fe     +MOVW R30 , R28
00d306 5aec     +SUBI R30 , LOW ( - 84 )
00d307 4fff     +SBCI R31 , HIGH ( - 84 )
00d308 9001     +LD R0 , Z +
00d309 81f0     +LD R31 , Z
00d30a 2de0     +MOV R30 , R0
                 	__GETW1SX 84
00d30b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D9:
                +
00d30c 01fe     +MOVW R30 , R28
00d30d 5aee     +SUBI R30 , LOW ( - 82 )
00d30e 4fff     +SBCI R31 , HIGH ( - 82 )
00d30f 9001     +LD R0 , Z +
00d310 81f0     +LD R31 , Z
00d311 2de0     +MOV R30 , R0
                 	__GETW1SX 82
00d312 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DA:
                +
00d313 01de     +MOVW R26 , R28
00d314 5aac     +SUBI R26 , LOW ( - 84 )
00d315 4fbf     +SBCI R27 , HIGH ( - 84 )
00d316 900d     +LD R0 , X +
00d317 91bc     +LD R27 , X
00d318 2da0     +MOV R26 , R0
                 	__GETW2SX 84
00d319 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2DB:
00d31a e2ee      	LDI  R30,LOW(_setIp_S0160000000)
00d31b e1fa      	LDI  R31,HIGH(_setIp_S0160000000)
00d31c 93fa      	ST   -Y,R31
00d31d 93ea      	ST   -Y,R30
00d31e e3ea      	LDI  R30,LOW(_setMask_S0160000000)
00d31f e1fa      	LDI  R31,HIGH(_setMask_S0160000000)
00d320 93fa      	ST   -Y,R31
00d321 93ea      	ST   -Y,R30
00d322 e4e6      	LDI  R30,LOW(_setGw_S0160000000)
00d323 e1fa      	LDI  R31,HIGH(_setGw_S0160000000)
00d324 93fa      	ST   -Y,R31
00d325 93ea      	ST   -Y,R30
00d326 e5a2      	LDI  R26,LOW(_setServer_S0160000000)
00d327 e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
00d328 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2DC:
00d329 940e e05e 	CALL __PUTPARD1
00d32b 91a0 1a2e 	LDS  R26,_setIp_S0160000000
00d32d e6e4      	LDI  R30,LOW(100)
00d32e 9fea      	MUL  R30,R26
00d32f 01b0      	MOVW R22,R0
                +
00d330 91a0 1a2f+LDS R26 , _setIp_S0160000000 + ( 1 )
                 	__GETB2MN _setIp_S0160000000,1
00d332 e0ea      	LDI  R30,LOW(10)
00d333 9fea      	MUL  R30,R26
00d334 01f0      	MOVW R30,R0
00d335 01db      	MOVW R26,R22
00d336 0fae      	ADD  R26,R30
00d337 1fbf      	ADC  R27,R31
                +
00d338 91e0 1a30+LDS R30 , _setIp_S0160000000 + ( 2 )
                 	__GETB1MN _setIp_S0160000000,2
00d33a e0f0      	LDI  R31,0
00d33b 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DD:
                +
00d33d 91a0 1a31+LDS R26 , _setIp_S0160000000 + ( 3 )
                 	__GETB2MN _setIp_S0160000000,3
00d33f e6e4      	LDI  R30,LOW(100)
00d340 9fea      	MUL  R30,R26
00d341 01b0      	MOVW R22,R0
                +
00d342 91a0 1a32+LDS R26 , _setIp_S0160000000 + ( 4 )
                 	__GETB2MN _setIp_S0160000000,4
00d344 e0ea      	LDI  R30,LOW(10)
00d345 9fea      	MUL  R30,R26
00d346 01f0      	MOVW R30,R0
00d347 01db      	MOVW R26,R22
00d348 0fae      	ADD  R26,R30
00d349 1fbf      	ADC  R27,R31
                +
00d34a 91e0 1a33+LDS R30 , _setIp_S0160000000 + ( 5 )
                 	__GETB1MN _setIp_S0160000000,5
00d34c e0f0      	LDI  R31,0
00d34d 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DE:
                +
00d34f 91a0 1a34+LDS R26 , _setIp_S0160000000 + ( 6 )
                 	__GETB2MN _setIp_S0160000000,6
00d351 e6e4      	LDI  R30,LOW(100)
00d352 9fea      	MUL  R30,R26
00d353 01b0      	MOVW R22,R0
                +
00d354 91a0 1a35+LDS R26 , _setIp_S0160000000 + ( 7 )
                 	__GETB2MN _setIp_S0160000000,7
00d356 e0ea      	LDI  R30,LOW(10)
00d357 9fea      	MUL  R30,R26
00d358 01f0      	MOVW R30,R0
00d359 01db      	MOVW R26,R22
00d35a 0fae      	ADD  R26,R30
00d35b 1fbf      	ADC  R27,R31
                +
00d35c 91e0 1a36+LDS R30 , _setIp_S0160000000 + ( 8 )
                 	__GETB1MN _setIp_S0160000000,8
00d35e e0f0      	LDI  R31,0
00d35f 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2DF:
                +
00d361 91a0 1a37+LDS R26 , _setIp_S0160000000 + ( 9 )
                 	__GETB2MN _setIp_S0160000000,9
00d363 e6e4      	LDI  R30,LOW(100)
00d364 9fea      	MUL  R30,R26
00d365 01b0      	MOVW R22,R0
                +
00d366 91a0 1a38+LDS R26 , _setIp_S0160000000 + ( 10 )
                 	__GETB2MN _setIp_S0160000000,10
00d368 e0ea      	LDI  R30,LOW(10)
00d369 9fea      	MUL  R30,R26
00d36a 01f0      	MOVW R30,R0
00d36b 01db      	MOVW R26,R22
00d36c 0fae      	ADD  R26,R30
00d36d 1fbf      	ADC  R27,R31
                +
00d36e 91e0 1a39+LDS R30 , _setIp_S0160000000 + ( 11 )
                 	__GETB1MN _setIp_S0160000000,11
00d370 e0f0      	LDI  R31,0
00d371 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E0:
00d373 91a0 1a3a 	LDS  R26,_setMask_S0160000000
00d375 e6e4      	LDI  R30,LOW(100)
00d376 9fea      	MUL  R30,R26
00d377 01b0      	MOVW R22,R0
                +
00d378 91a0 1a3b+LDS R26 , _setMask_S0160000000 + ( 1 )
                 	__GETB2MN _setMask_S0160000000,1
00d37a e0ea      	LDI  R30,LOW(10)
00d37b 9fea      	MUL  R30,R26
00d37c 01f0      	MOVW R30,R0
00d37d 01db      	MOVW R26,R22
00d37e 0fae      	ADD  R26,R30
00d37f 1fbf      	ADC  R27,R31
                +
00d380 91e0 1a3c+LDS R30 , _setMask_S0160000000 + ( 2 )
                 	__GETB1MN _setMask_S0160000000,2
00d382 e0f0      	LDI  R31,0
00d383 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E1:
                +
00d385 91a0 1a3d+LDS R26 , _setMask_S0160000000 + ( 3 )
                 	__GETB2MN _setMask_S0160000000,3
00d387 e6e4      	LDI  R30,LOW(100)
00d388 9fea      	MUL  R30,R26
00d389 01b0      	MOVW R22,R0
                +
00d38a 91a0 1a3e+LDS R26 , _setMask_S0160000000 + ( 4 )
                 	__GETB2MN _setMask_S0160000000,4
00d38c e0ea      	LDI  R30,LOW(10)
00d38d 9fea      	MUL  R30,R26
00d38e 01f0      	MOVW R30,R0
00d38f 01db      	MOVW R26,R22
00d390 0fae      	ADD  R26,R30
00d391 1fbf      	ADC  R27,R31
                +
00d392 91e0 1a3f+LDS R30 , _setMask_S0160000000 + ( 5 )
                 	__GETB1MN _setMask_S0160000000,5
00d394 e0f0      	LDI  R31,0
00d395 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E2:
                +
00d397 91a0 1a40+LDS R26 , _setMask_S0160000000 + ( 6 )
                 	__GETB2MN _setMask_S0160000000,6
00d399 e6e4      	LDI  R30,LOW(100)
00d39a 9fea      	MUL  R30,R26
00d39b 01b0      	MOVW R22,R0
                +
00d39c 91a0 1a41+LDS R26 , _setMask_S0160000000 + ( 7 )
                 	__GETB2MN _setMask_S0160000000,7
00d39e e0ea      	LDI  R30,LOW(10)
00d39f 9fea      	MUL  R30,R26
00d3a0 01f0      	MOVW R30,R0
00d3a1 01db      	MOVW R26,R22
00d3a2 0fae      	ADD  R26,R30
00d3a3 1fbf      	ADC  R27,R31
                +
00d3a4 91e0 1a42+LDS R30 , _setMask_S0160000000 + ( 8 )
                 	__GETB1MN _setMask_S0160000000,8
00d3a6 e0f0      	LDI  R31,0
00d3a7 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E3:
                +
00d3a9 91a0 1a43+LDS R26 , _setMask_S0160000000 + ( 9 )
                 	__GETB2MN _setMask_S0160000000,9
00d3ab e6e4      	LDI  R30,LOW(100)
00d3ac 9fea      	MUL  R30,R26
00d3ad 01b0      	MOVW R22,R0
                +
00d3ae 91a0 1a44+LDS R26 , _setMask_S0160000000 + ( 10 )
                 	__GETB2MN _setMask_S0160000000,10
00d3b0 e0ea      	LDI  R30,LOW(10)
00d3b1 9fea      	MUL  R30,R26
00d3b2 01f0      	MOVW R30,R0
00d3b3 01db      	MOVW R26,R22
00d3b4 0fae      	ADD  R26,R30
00d3b5 1fbf      	ADC  R27,R31
                +
00d3b6 91e0 1a45+LDS R30 , _setMask_S0160000000 + ( 11 )
                 	__GETB1MN _setMask_S0160000000,11
00d3b8 e0f0      	LDI  R31,0
00d3b9 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E4:
00d3bb 91a0 1a46 	LDS  R26,_setGw_S0160000000
00d3bd e6e4      	LDI  R30,LOW(100)
00d3be 9fea      	MUL  R30,R26
00d3bf 01b0      	MOVW R22,R0
                +
00d3c0 91a0 1a47+LDS R26 , _setGw_S0160000000 + ( 1 )
                 	__GETB2MN _setGw_S0160000000,1
00d3c2 e0ea      	LDI  R30,LOW(10)
00d3c3 9fea      	MUL  R30,R26
00d3c4 01f0      	MOVW R30,R0
00d3c5 01db      	MOVW R26,R22
00d3c6 0fae      	ADD  R26,R30
00d3c7 1fbf      	ADC  R27,R31
                +
00d3c8 91e0 1a48+LDS R30 , _setGw_S0160000000 + ( 2 )
                 	__GETB1MN _setGw_S0160000000,2
00d3ca e0f0      	LDI  R31,0
00d3cb 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E5:
                +
00d3cd 91a0 1a49+LDS R26 , _setGw_S0160000000 + ( 3 )
                 	__GETB2MN _setGw_S0160000000,3
00d3cf e6e4      	LDI  R30,LOW(100)
00d3d0 9fea      	MUL  R30,R26
00d3d1 01b0      	MOVW R22,R0
                +
00d3d2 91a0 1a4a+LDS R26 , _setGw_S0160000000 + ( 4 )
                 	__GETB2MN _setGw_S0160000000,4
00d3d4 e0ea      	LDI  R30,LOW(10)
00d3d5 9fea      	MUL  R30,R26
00d3d6 01f0      	MOVW R30,R0
00d3d7 01db      	MOVW R26,R22
00d3d8 0fae      	ADD  R26,R30
00d3d9 1fbf      	ADC  R27,R31
                +
00d3da 91e0 1a4b+LDS R30 , _setGw_S0160000000 + ( 5 )
                 	__GETB1MN _setGw_S0160000000,5
00d3dc e0f0      	LDI  R31,0
00d3dd 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E6:
                +
00d3df 91a0 1a4c+LDS R26 , _setGw_S0160000000 + ( 6 )
                 	__GETB2MN _setGw_S0160000000,6
00d3e1 e6e4      	LDI  R30,LOW(100)
00d3e2 9fea      	MUL  R30,R26
00d3e3 01b0      	MOVW R22,R0
                +
00d3e4 91a0 1a4d+LDS R26 , _setGw_S0160000000 + ( 7 )
                 	__GETB2MN _setGw_S0160000000,7
00d3e6 e0ea      	LDI  R30,LOW(10)
00d3e7 9fea      	MUL  R30,R26
00d3e8 01f0      	MOVW R30,R0
00d3e9 01db      	MOVW R26,R22
00d3ea 0fae      	ADD  R26,R30
00d3eb 1fbf      	ADC  R27,R31
                +
00d3ec 91e0 1a4e+LDS R30 , _setGw_S0160000000 + ( 8 )
                 	__GETB1MN _setGw_S0160000000,8
00d3ee e0f0      	LDI  R31,0
00d3ef 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E7:
                +
00d3f1 91a0 1a4f+LDS R26 , _setGw_S0160000000 + ( 9 )
                 	__GETB2MN _setGw_S0160000000,9
00d3f3 e6e4      	LDI  R30,LOW(100)
00d3f4 9fea      	MUL  R30,R26
00d3f5 01b0      	MOVW R22,R0
                +
00d3f6 91a0 1a50+LDS R26 , _setGw_S0160000000 + ( 10 )
                 	__GETB2MN _setGw_S0160000000,10
00d3f8 e0ea      	LDI  R30,LOW(10)
00d3f9 9fea      	MUL  R30,R26
00d3fa 01f0      	MOVW R30,R0
00d3fb 01db      	MOVW R26,R22
00d3fc 0fae      	ADD  R26,R30
00d3fd 1fbf      	ADC  R27,R31
                +
00d3fe 91e0 1a51+LDS R30 , _setGw_S0160000000 + ( 11 )
                 	__GETB1MN _setGw_S0160000000,11
00d400 e0f0      	LDI  R31,0
00d401 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E8:
00d403 91a0 1a52 	LDS  R26,_setServer_S0160000000
00d405 e6e4      	LDI  R30,LOW(100)
00d406 9fea      	MUL  R30,R26
00d407 01b0      	MOVW R22,R0
                +
00d408 91a0 1a53+LDS R26 , _setServer_S0160000000 + ( 1 )
                 	__GETB2MN _setServer_S0160000000,1
00d40a e0ea      	LDI  R30,LOW(10)
00d40b 9fea      	MUL  R30,R26
00d40c 01f0      	MOVW R30,R0
00d40d 01db      	MOVW R26,R22
00d40e 0fae      	ADD  R26,R30
00d40f 1fbf      	ADC  R27,R31
                +
00d410 91e0 1a54+LDS R30 , _setServer_S0160000000 + ( 2 )
                 	__GETB1MN _setServer_S0160000000,2
00d412 e0f0      	LDI  R31,0
00d413 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2E9:
                +
00d415 91a0 1a55+LDS R26 , _setServer_S0160000000 + ( 3 )
                 	__GETB2MN _setServer_S0160000000,3
00d417 e6e4      	LDI  R30,LOW(100)
00d418 9fea      	MUL  R30,R26
00d419 01b0      	MOVW R22,R0
                +
00d41a 91a0 1a56+LDS R26 , _setServer_S0160000000 + ( 4 )
                 	__GETB2MN _setServer_S0160000000,4
00d41c e0ea      	LDI  R30,LOW(10)
00d41d 9fea      	MUL  R30,R26
00d41e 01f0      	MOVW R30,R0
00d41f 01db      	MOVW R26,R22
00d420 0fae      	ADD  R26,R30
00d421 1fbf      	ADC  R27,R31
                +
00d422 91e0 1a57+LDS R30 , _setServer_S0160000000 + ( 5 )
                 	__GETB1MN _setServer_S0160000000,5
00d424 e0f0      	LDI  R31,0
00d425 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EA:
                +
00d427 91a0 1a58+LDS R26 , _setServer_S0160000000 + ( 6 )
                 	__GETB2MN _setServer_S0160000000,6
00d429 e6e4      	LDI  R30,LOW(100)
00d42a 9fea      	MUL  R30,R26
00d42b 01b0      	MOVW R22,R0
                +
00d42c 91a0 1a59+LDS R26 , _setServer_S0160000000 + ( 7 )
                 	__GETB2MN _setServer_S0160000000,7
00d42e e0ea      	LDI  R30,LOW(10)
00d42f 9fea      	MUL  R30,R26
00d430 01f0      	MOVW R30,R0
00d431 01db      	MOVW R26,R22
00d432 0fae      	ADD  R26,R30
00d433 1fbf      	ADC  R27,R31
                +
00d434 91e0 1a5a+LDS R30 , _setServer_S0160000000 + ( 8 )
                 	__GETB1MN _setServer_S0160000000,8
00d436 e0f0      	LDI  R31,0
00d437 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2EB:
                +
00d439 91a0 1a5b+LDS R26 , _setServer_S0160000000 + ( 9 )
                 	__GETB2MN _setServer_S0160000000,9
00d43b e6e4      	LDI  R30,LOW(100)
00d43c 9fea      	MUL  R30,R26
00d43d 01b0      	MOVW R22,R0
                +
00d43e 91a0 1a5c+LDS R26 , _setServer_S0160000000 + ( 10 )
                 	__GETB2MN _setServer_S0160000000,10
00d440 e0ea      	LDI  R30,LOW(10)
00d441 9fea      	MUL  R30,R26
00d442 01f0      	MOVW R30,R0
00d443 01db      	MOVW R26,R22
00d444 0fae      	ADD  R26,R30
00d445 1fbf      	ADC  R27,R31
                +
00d446 91e0 1a5d+LDS R30 , _setServer_S0160000000 + ( 11 )
                 	__GETB1MN _setServer_S0160000000,11
00d448 e0f0      	LDI  R31,0
00d449 940c cb23 	JMP SUBOPT_0x1BB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2EC:
00d44b 940e e05e 	CALL __PUTPARD1
00d44d cc51      	RJMP SUBOPT_0x28A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2ED:
                +
00d44e 01fe     +MOVW R30 , R28
00d44f 5aea     +SUBI R30 , LOW ( - 86 )
00d450 4fff     +SBCI R31 , HIGH ( - 86 )
00d451 81e0     +LD R30 , Z
                 	__GETB1SX 86
00d452 e0f0      	LDI  R31,0
00d453 30e2      	CPI  R30,LOW(0x2)
00d454 e0a0      	LDI  R26,HIGH(0x2)
00d455 07fa      	CPC  R31,R26
00d456 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2EE:
00d457 93e0 14df 	STS  _currentPage,R30
00d459 e0e1      	LDI  R30,LOW(1)
00d45a 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d45c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EF:
00d45d 93e0 14df 	STS  _currentPage,R30
00d45f e0e2      	LDI  R30,LOW(2)
00d460 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d462 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F0:
                +
00d463 efed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00d464 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00d465 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00d466 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00d467 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:501 WORDS
                 SUBOPT_0x2F1:
00d468 940e e05e 	CALL __PUTPARD1
00d46a 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d46c 940e df35 	CALL __CBD1
00d46e 940e e05e 	CALL __PUTPARD1
00d470 cc05      	RJMP SUBOPT_0x285
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F2:
00d471 940e e05e 	CALL __PUTPARD1
00d473 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00d475 940c c2e0 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F3:
                +
00d477 efec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 526 ) )
00d478 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 526 ) )
00d479 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 526 ) )
00d47a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 526 ) )
                 	__POINTD1FN _0x2C0000,526
00d47b cfec      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2F4:
                +
00d47c e1e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d47d e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d47e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d47f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d480 940e e05e 	CALL __PUTPARD1
00d482 01f8      	MOVW R30,R16
00d483 ca9f      	RJMP SUBOPT_0x251
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2F5:
00d484 0fa0      	ADD  R26,R16
00d485 1fb1      	ADC  R27,R17
00d486 91ec      	LD   R30,X
00d487 940c c2e0 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F6:
                +
00d489 e1ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00d48a e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00d48b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00d48c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00d48d cfda      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2F7:
00d48e 940e e05e 	CALL __PUTPARD1
00d490 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d492 e0f0      	LDI  R31,0
00d493 fde7      	SBRC R30,7
00d494 efff      	SER  R31
00d495 9632      	ADIW R30,2
00d496 ca8c      	RJMP SUBOPT_0x251
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F8:
                +
00d497 e3ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d498 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d499 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d49a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d49b cff2      	RJMP SUBOPT_0x2F7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F9:
00d49c eba6      	LDI  R26,LOW(_operating_config)
00d49d e1b1      	LDI  R27,HIGH(_operating_config)
00d49e 940e 4dfd 	CALL _setOperatingConfig
00d4a0 01af      	MOVW R20,R30
00d4a1 2355      	TST  R21
00d4a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FA:
                +
00d4a3 e6ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 636 ) )
00d4a4 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 636 ) )
00d4a5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 636 ) )
00d4a6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 636 ) )
                 	__POINTD1FN _0x2C0000,636
00d4a7 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FB:
00d4a9 e0e8      	LDI  R30,LOW(8)
00d4aa 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d4ac e0e0      	LDI  R30,LOW(0)
00d4ad 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d4af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2FC:
                +
00d4b0 e9ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 684 ) )
00d4b1 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 684 ) )
00d4b2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 684 ) )
00d4b3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 684 ) )
                 	__POINTD1FN _0x2C0000,684
00d4b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2FD:
                +
00d4b5 e9ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 687 ) )
00d4b6 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 687 ) )
00d4b7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 687 ) )
00d4b8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 687 ) )
                 	__POINTD1FN _0x2C0000,687
00d4b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2FE:
                +
00d4ba eae0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 690 ) )
00d4bb e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 690 ) )
00d4bc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 690 ) )
00d4bd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 690 ) )
                 	__POINTD1FN _0x2C0000,690
00d4be cfa9      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2FF:
00d4bf 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d4c1 e0b0      	LDI  R27,0
00d4c2 fda7      	SBRC R26,7
00d4c3 efbf      	SER  R27
00d4c4 e0e3      	LDI  R30,LOW(3)
00d4c5 e0f0      	LDI  R31,HIGH(3)
00d4c6 940e dfeb 	CALL __MODW21
00d4c8 9730      	SBIW R30,0
00d4c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x300:
00d4ca 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d4cc e0b0      	LDI  R27,0
00d4cd 5da2      	SUBI R26,LOW(-_setIp_S0160000000)
00d4ce 4eb5      	SBCI R27,HIGH(-_setIp_S0160000000)
00d4cf 91ec      	LD   R30,X
00d4d0 5fef      	SUBI R30,-LOW(1)
00d4d1 93ec      	ST   X,R30
00d4d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x301:
00d4d3 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4d5 e0f0      	LDI  R31,0
00d4d6 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
00d4d7 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
00d4d8 e0a0      	LDI  R26,LOW(0)
00d4d9 83a0      	STD  Z+0,R26
00d4da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x302:
                +
00d4db e1e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00d4dc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00d4dd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00d4de e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00d4df 940e e05e 	CALL __PUTPARD1
00d4e1 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4e3 940e df35 	CALL __CBD1
00d4e5 940e e05e 	CALL __PUTPARD1
00d4e7 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4e9 e0f0      	LDI  R31,0
00d4ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x303:
00d4eb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d4ed e0b0      	LDI  R27,0
00d4ee 5ca6      	SUBI R26,LOW(-_setMask_S0160000000)
00d4ef 4eb5      	SBCI R27,HIGH(-_setMask_S0160000000)
00d4f0 91ec      	LD   R30,X
00d4f1 5fef      	SUBI R30,-LOW(1)
00d4f2 93ec      	ST   X,R30
00d4f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x304:
00d4f4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d4f6 e0f0      	LDI  R31,0
00d4f7 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
00d4f8 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00d4f9 e0a0      	LDI  R26,LOW(0)
00d4fa 83a0      	STD  Z+0,R26
00d4fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x305:
00d4fc 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d4fe e0b0      	LDI  R27,0
00d4ff 5baa      	SUBI R26,LOW(-_setGw_S0160000000)
00d500 4eb5      	SBCI R27,HIGH(-_setGw_S0160000000)
00d501 91ec      	LD   R30,X
00d502 5fef      	SUBI R30,-LOW(1)
00d503 93ec      	ST   X,R30
00d504 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x306:
00d505 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d507 e0f0      	LDI  R31,0
00d508 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
00d509 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
00d50a e0a0      	LDI  R26,LOW(0)
00d50b 83a0      	STD  Z+0,R26
00d50c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x307:
00d50d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d50f e0b0      	LDI  R27,0
00d510 5aae      	SUBI R26,LOW(-_setServer_S0160000000)
00d511 4eb5      	SBCI R27,HIGH(-_setServer_S0160000000)
00d512 91ec      	LD   R30,X
00d513 5fef      	SUBI R30,-LOW(1)
00d514 93ec      	ST   X,R30
00d515 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x308:
00d516 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d518 e0f0      	LDI  R31,0
00d519 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
00d51a 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
00d51b e0a0      	LDI  R26,LOW(0)
00d51c 83a0      	STD  Z+0,R26
00d51d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x309:
00d51e 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00d520 e0e0      	LDI  R30,LOW(0)
00d521 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d523 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30A:
                +
00d524 eeee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00d525 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00d526 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00d527 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00d528 cf3f      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x30B:
00d529 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d52b e0b0      	LDI  R27,0
00d52c fda7      	SBRC R26,7
00d52d efbf      	SER  R27
00d52e 940c 96ef 	JMP  _showProbeConfig
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x30C:
00d530 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00d532 e0b0      	LDI  R27,0
00d533 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30D:
00d534 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d536 e0f0      	LDI  R31,0
00d537 5ae0      	SUBI R30,LOW(-_prbEn_S0160000000)
00d538 4ef5      	SBCI R31,HIGH(-_prbEn_S0160000000)
00d539 81e0      	LD   R30,Z
00d53a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x30E:
00d53b 93ec      	ST   X,R30
                +
00d53c e3ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00d53d e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00d53e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00d53f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00d540 940e e05e 	CALL __PUTPARD1
00d542 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x30F:
00d543 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d545 940e df35 	CALL __CBD1
00d547 940e e05e 	CALL __PUTPARD1
00d549 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x310:
00d54a e2e4      	LDI  R30,LOW(36)
00d54b 93e0 14df 	STS  _currentPage,R30
00d54d e0ee      	LDI  R30,LOW(14)
00d54e 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d550 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x311:
                +
00d551 e0ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 800 ) )
00d552 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 800 ) )
00d553 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 800 ) )
00d554 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 800 ) )
                 	__POINTD1FN _0x2C0000,800
00d555 cf12      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x312:
00d556 e2e4      	LDI  R30,LOW(36)
00d557 93e0 14df 	STS  _currentPage,R30
00d559 e1e1      	LDI  R30,LOW(17)
00d55a 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d55c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x313:
                +
00d55d e1e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 806 ) )
00d55e e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 806 ) )
00d55f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 806 ) )
00d560 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 806 ) )
                 	__POINTD1FN _0x2C0000,806
00d561 cf06      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x314:
                +
00d562 e1eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 813 ) )
00d563 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 813 ) )
00d564 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 813 ) )
00d565 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 813 ) )
                 	__POINTD1FN _0x2C0000,813
00d566 cf01      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x315:
00d567 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
00d568 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00d569 93fa      	ST   -Y,R31
00d56a 93ea      	ST   -Y,R30
00d56b efef      	LDI  R30,LOW(255)
00d56c 93ea      	ST   -Y,R30
00d56d 940c c35f 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x316:
00d56f 91ec      	LD   R30,X
00d570 5fef      	SUBI R30,-LOW(1)
00d571 93ec      	ST   X,R30
00d572 30ea      	CPI  R30,LOW(0xA)
00d573 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x317:
00d574 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d576 e0f0      	LDI  R31,0
00d577 5dea      	SUBI R30,LOW(-_newPwd_S0160000000)
00d578 4ef5      	SBCI R31,HIGH(-_newPwd_S0160000000)
00d579 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x318:
                +
00d57a e2e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 822 ) )
00d57b e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 822 ) )
00d57c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 822 ) )
00d57d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 822 ) )
                 	__POINTD1FN _0x2C0000,822
00d57e 940e e05e 	CALL __PUTPARD1
00d580 cfc2      	RJMP SUBOPT_0x30F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x319:
00d581 81e0      	LD   R30,Z
00d582 940e df35 	CALL __CBD1
00d584 caee      	RJMP SUBOPT_0x284
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31A:
00d585 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00d586 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00d587 93fa      	ST   -Y,R31
00d588 93ea      	ST   -Y,R30
00d589 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x31B:
00d58a efef      	LDI  R30,LOW(255)
00d58b 93ea      	ST   -Y,R30
00d58c 940c c35f 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31C:
                +
00d58e 01fe     +MOVW R30 , R28
00d58f 5be0     +SUBI R30 , LOW ( - 80 )
00d590 4fff     +SBCI R31 , HIGH ( - 80 )
00d591 9001     +LD R0 , Z +
00d592 81f0     +LD R31 , Z
00d593 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00d594 93fa      	ST   -Y,R31
00d595 93ea      	ST   -Y,R30
00d596 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31D:
00d597 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d599 e0f0      	LDI  R31,0
00d59a 5de6      	SUBI R30,LOW(-_confPwd_S0160000000)
00d59b 4ef5      	SBCI R31,HIGH(-_confPwd_S0160000000)
00d59c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x31E:
00d59d e0e1      	LDI  R30,LOW(1)
00d59e 93e0 14df 	STS  _currentPage,R30
00d5a0 e0e3      	LDI  R30,LOW(3)
00d5a1 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d5a3 cf80      	RJMP SUBOPT_0x30A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31F:
                +
00d5a4 e5ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 881 ) )
00d5a5 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 881 ) )
00d5a6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 881 ) )
00d5a7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 881 ) )
                 	__POINTD1FN _0x2C0000,881
00d5a8 940e e05e 	CALL __PUTPARD1
00d5aa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x320:
                +
00d5ab e6e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 890 ) )
00d5ac e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 890 ) )
00d5ad e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 890 ) )
00d5ae e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 890 ) )
                 	__POINTD1FN _0x2C0000,890
00d5af 940e e05e 	CALL __PUTPARD1
00d5b1 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d5b3 e0f0      	LDI  R31,0
00d5b4 940c cccc 	JMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x321:
                +
00d5b6 e6ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 896 ) )
00d5b7 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 896 ) )
00d5b8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 896 ) )
00d5b9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 896 ) )
                 	__POINTD1FN _0x2C0000,896
00d5ba 940e e05e 	CALL __PUTPARD1
00d5bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x322:
00d5bd 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d5bf e0f0      	LDI  R31,0
00d5c0 940c cccc 	JMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x323:
                +
00d5c2 e7e7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
00d5c3 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
00d5c4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
00d5c5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
00d5c6 cea1      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x324:
                +
00d5c7 e7ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 911 ) )
00d5c8 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 911 ) )
00d5c9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 911 ) )
00d5ca e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 911 ) )
                 	__POINTD1FN _0x2C0000,911
00d5cb ce9c      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x325:
00d5cc 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d5ce e0f0      	LDI  R31,0
00d5cf 59ea      	SUBI R30,LOW(-_vRef_S0160000000)
00d5d0 4ef5      	SBCI R31,HIGH(-_vRef_S0160000000)
00d5d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x326:
                +
00d5d2 e8e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 917 ) )
00d5d3 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 917 ) )
00d5d4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 917 ) )
00d5d5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 917 ) )
                 	__POINTD1FN _0x2C0000,917
00d5d6 ce91      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x327:
00d5d7 91a0 1a69 	LDS  R26,_prb1_S0160000000
00d5d9 5faf      	SUBI R26,-LOW(1)
00d5da 93a0 1a69 	STS  _prb1_S0160000000,R26
00d5dc 30a5      	CPI  R26,LOW(0x5)
00d5dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x328:
                +
00d5de e8e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 923 ) )
00d5df e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 923 ) )
00d5e0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 923 ) )
00d5e1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 923 ) )
                 	__POINTD1FN _0x2C0000,923
00d5e2 940e e05e 	CALL __PUTPARD1
00d5e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x329:
00d5e5 91e0 1a6a 	LDS  R30,_prb2_S0160000000
00d5e7 e0f0      	LDI  R31,0
00d5e8 940c cccc 	JMP SUBOPT_0x200
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32A:
                +
00d5ea e8ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 929 ) )
00d5eb e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 929 ) )
00d5ec e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 929 ) )
00d5ed e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 929 ) )
                 	__POINTD1FN _0x2C0000,929
00d5ee 940e e05e 	CALL __PUTPARD1
00d5f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x32B:
00d5f1 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d5f3 e0f0      	LDI  R31,0
00d5f4 93fa      	ST   -Y,R31
00d5f5 93ea      	ST   -Y,R30
00d5f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32C:
00d5f7 93e0 14df 	STS  _currentPage,R30
00d5f9 e1e8      	LDI  R30,LOW(24)
00d5fa 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d5fc e1e9      	LDI  R30,LOW(25)
00d5fd cf20      	RJMP SUBOPT_0x309
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x32D:
                +
00d5fe e9e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
00d5ff e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
00d600 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
00d601 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
00d602 ce65      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32E:
00d603 93fa      	ST   -Y,R31
00d604 93ea      	ST   -Y,R30
00d605 e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00d606 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00d607 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x32F:
                +
00d608 eae4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 950 ) )
00d609 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 950 ) )
00d60a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 950 ) )
00d60b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 950 ) )
                 	__POINTD1FN _0x2C0000,950
00d60c 940e e05e 	CALL __PUTPARD1
00d60e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x330:
                +
00d60f ece1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 979 ) )
00d610 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 979 ) )
00d611 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 979 ) )
00d612 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 979 ) )
                 	__POINTD1FN _0x2C0000,979
00d613 ce54      	RJMP SUBOPT_0x2F1
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x331:
00d614 e2e5      	LDI  R30,LOW(37)
00d615 93e0 14df 	STS  _currentPage,R30
00d617 e1eb      	LDI  R30,LOW(27)
00d618 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d61a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x332:
00d61b e2e4      	LDI  R30,LOW(36)
00d61c 93e0 14df 	STS  _currentPage,R30
00d61e e1eb      	LDI  R30,LOW(27)
00d61f 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d621 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x333:
00d622 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d624 e0f0      	LDI  R31,0
00d625 59e5      	SUBI R30,LOW(-_calPnt_S0160000000)
00d626 4ef5      	SBCI R31,HIGH(-_calPnt_S0160000000)
00d627 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x334:
                +
00d628 e0e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d629 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d62a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d62b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d62c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x335:
                +
00d62d e0e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d62e e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d62f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d630 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d631 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x336:
00d632 e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d633 e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d634 93fa      	ST   -Y,R31
00d635 93ea      	ST   -Y,R30
00d636 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x337:
                +
00d637 ece7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 985 ) )
00d638 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 985 ) )
00d639 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 985 ) )
00d63a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 985 ) )
                 	__POINTD1FN _0x2C0000,985
00d63b ce0f      	RJMP SUBOPT_0x2EC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x338:
00d63c 91e0 1a20 	LDS  R30,_tmpNextPage_S0160000000
00d63e e0f0      	LDI  R31,0
00d63f 30e7      	CPI  R30,LOW(0x7)
00d640 e0a0      	LDI  R26,HIGH(0x7)
00d641 07fa      	CPC  R31,R26
00d642 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x339:
00d643 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d645 e0f0      	LDI  R31,0
00d646 5dee      	SUBI R30,LOW(-_entPwd_S0160000000)
00d647 4ef5      	SBCI R31,HIGH(-_entPwd_S0160000000)
00d648 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x33A:
00d649 93e0 14df 	STS  _currentPage,R30
00d64b 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00d64d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x33B:
00d64e 940e e02a 	CALL __GETW1P
00d650 93fa      	ST   -Y,R31
00d651 93ea      	ST   -Y,R30
00d652 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33C:
00d653 8def      	LDD  R30,Y+31
00d654 940e df35 	CALL __CBD1
00d656 940c c09d 	JMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x33D:
00d658 a9a8      	LDD  R26,Y+48
00d659 a9b9      	LDD  R27,Y+48+1
00d65a e1ed      	LDI  R30,LOW(29)
00d65b 940e df7c 	CALL __MULB1W2U
                +
00d65d 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00d65e 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00d65f 940c c362 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x33E:
00d661 940e e05e 	CALL __PUTPARD1
00d663 ada8      	LDD  R26,Y+56
00d664 adb9      	LDD  R27,Y+56+1
00d665 e1ed      	LDI  R30,LOW(29)
00d666 940e df7c 	CALL __MULB1W2U
                +
00d668 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00d669 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00d66a 940c c362 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x33F:
00d66c adac      	LDD  R26,Y+60
00d66d adbd      	LDD  R27,Y+60+1
00d66e e1ed      	LDI  R30,LOW(29)
00d66f 940e df7c 	CALL __MULB1W2U
                +
00d671 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00d672 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00d673 940c c362 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x340:
                +
00d675 01de     +MOVW R26 , R28
00d676 5ca0     +SUBI R26 , LOW ( - 64 )
00d677 4fbf     +SBCI R27 , HIGH ( - 64 )
00d678 900d     +LD R0 , X +
00d679 91bc     +LD R27 , X
00d67a 2da0     +MOV R26 , R0
                 	__GETW2SX 64
00d67b c952      	RJMP SUBOPT_0x26A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x341:
00d67c 940e e05e 	CALL __PUTPARD1
                +
00d67e 01de     +MOVW R26 , R28
00d67f 5bac     +SUBI R26 , LOW ( - 68 )
00d680 4fbf     +SBCI R27 , HIGH ( - 68 )
00d681 900d     +LD R0 , X +
00d682 91bc     +LD R27 , X
00d683 2da0     +MOV R26 , R0
                 	__GETW2SX 68
00d684 e1ed      	LDI  R30,LOW(29)
00d685 940e df7c 	CALL __MULB1W2U
                +
00d687 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00d688 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00d689 940c c362 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x342:
00d68b 93ba      	ST   -Y,R27
00d68c 93aa      	ST   -Y,R26
00d68d 9722      	SBIW R28,2
00d68e 940e e0ce 	CALL __SAVELOCR6
00d690 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x343:
00d691 940e e05e 	CALL __PUTPARD1
00d693 01fa      	MOVW R30,R20
00d694 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x344:
00d696 01da      	MOVW R26,R20
00d697 e6e4      	LDI  R30,LOW(100)
00d698 e0f0      	LDI  R31,HIGH(100)
00d699 940e df9a 	CALL __DIVW21U
00d69b 85a8      	LDD  R26,Y+8
00d69c 85b9      	LDD  R27,Y+8+1
00d69d 93ec      	ST   X,R30
00d69e 01da      	MOVW R26,R20
00d69f e6e4      	LDI  R30,LOW(100)
00d6a0 e0f0      	LDI  R31,HIGH(100)
00d6a1 940e dfe8 	CALL __MODW21U
00d6a3 01df      	MOVW R26,R30
00d6a4 e0ea      	LDI  R30,LOW(10)
00d6a5 e0f0      	LDI  R31,HIGH(10)
00d6a6 940e df9a 	CALL __DIVW21U
                +
00d6a8 85a8     +LDD R26 , Y + 8
00d6a9 85b9     +LDD R27 , Y + 8 + 1
00d6aa 9611     +ADIW R26 , 1
00d6ab 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d6ac 01da      	MOVW R26,R20
00d6ad e6e4      	LDI  R30,LOW(100)
00d6ae e0f0      	LDI  R31,HIGH(100)
00d6af 940e dfe8 	CALL __MODW21U
00d6b1 01df      	MOVW R26,R30
00d6b2 e0ea      	LDI  R30,LOW(10)
00d6b3 e0f0      	LDI  R31,HIGH(10)
00d6b4 940e dfe8 	CALL __MODW21U
                +
00d6b6 85a8     +LDD R26 , Y + 8
00d6b7 85b9     +LDD R27 , Y + 8 + 1
00d6b8 9612     +ADIW R26 , 2
00d6b9 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d6ba 85a8      	LDD  R26,Y+8
00d6bb 85b9      	LDD  R27,Y+8+1
00d6bc 9613      	ADIW R26,3
00d6bd e0e2      	LDI  R30,LOW(2)
00d6be 93ec      	ST   X,R30
00d6bf e0e0      	LDI  R30,LOW(0)
00d6c0 e0f0      	LDI  R31,HIGH(0)
00d6c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x345:
00d6c2 940e e05e 	CALL __PUTPARD1
00d6c4 01f8      	MOVW R30,R16
00d6c5 940c c191 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x346:
00d6c7 01d8      	MOVW R26,R16
00d6c8 e6e4      	LDI  R30,LOW(100)
00d6c9 e0f0      	LDI  R31,HIGH(100)
00d6ca 940e df9a 	CALL __DIVW21U
00d6cc 85a8      	LDD  R26,Y+8
00d6cd 85b9      	LDD  R27,Y+8+1
00d6ce 93ec      	ST   X,R30
00d6cf 01d8      	MOVW R26,R16
00d6d0 e6e4      	LDI  R30,LOW(100)
00d6d1 e0f0      	LDI  R31,HIGH(100)
00d6d2 940e dfe8 	CALL __MODW21U
00d6d4 01df      	MOVW R26,R30
00d6d5 e0ea      	LDI  R30,LOW(10)
00d6d6 e0f0      	LDI  R31,HIGH(10)
00d6d7 940e df9a 	CALL __DIVW21U
                +
00d6d9 85a8     +LDD R26 , Y + 8
00d6da 85b9     +LDD R27 , Y + 8 + 1
00d6db 9611     +ADIW R26 , 1
00d6dc 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d6dd 01d8      	MOVW R26,R16
00d6de e6e4      	LDI  R30,LOW(100)
00d6df e0f0      	LDI  R31,HIGH(100)
00d6e0 940e dfe8 	CALL __MODW21U
00d6e2 01df      	MOVW R26,R30
00d6e3 e0ea      	LDI  R30,LOW(10)
00d6e4 e0f0      	LDI  R31,HIGH(10)
00d6e5 940e dfe8 	CALL __MODW21U
                +
00d6e7 85a8     +LDD R26 , Y + 8
00d6e8 85b9     +LDD R27 , Y + 8 + 1
00d6e9 9612     +ADIW R26 , 2
00d6ea 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d6eb 85a8      	LDD  R26,Y+8
00d6ec 85b9      	LDD  R27,Y+8+1
00d6ed 9613      	ADIW R26,3
00d6ee e0e1      	LDI  R30,LOW(1)
00d6ef 93ec      	ST   X,R30
00d6f0 e0e0      	LDI  R30,LOW(0)
00d6f1 e0f0      	LDI  R31,HIGH(0)
00d6f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x347:
00d6f3 85aa      	LDD  R26,Y+10
00d6f4 85bb      	LDD  R27,Y+10+1
00d6f5 e6e4      	LDI  R30,LOW(100)
00d6f6 e0f0      	LDI  R31,HIGH(100)
00d6f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x348:
00d6f8 e8a9      	LDI  R26,LOW(_eep_vref_val)
00d6f9 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00d6fa 940e e07d 	CALL __EEPROMRDD
00d6fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x349:
                +
00d6fd 87ea     +STD Y + 10 , R30
00d6fe 87fb     +STD Y + 10 + 1 , R31
00d6ff 876c     +STD Y + 10 + 2 , R22
00d700 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d701 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34A:
00d702 940e c5ba 	CALL SUBOPT_0xD4
00d704 940e e05e 	CALL __PUTPARD1
00d706 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x34B:
00d707 01f9      	MOVW R30,R18
00d708 9634      	ADIW R30,4
00d709 170e      	CP   R16,R30
00d70a 071f      	CPC  R17,R31
00d70b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x34C:
00d70c 01f8      	MOVW R30,R16
00d70d 1be2      	SUB  R30,R18
00d70e 0bf3      	SBC  R31,R19
00d70f 01de      	MOVW R26,R28
00d710 9650      	ADIW R26,16
00d711 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x34D:
00d712 01f8      	MOVW R30,R16
00d713 0fee      	LSL  R30
00d714 1fff      	ROL  R31
00d715 8dac      	LDD  R26,Y+28
00d716 8dbd      	LDD  R27,Y+28+1
00d717 0fae      	ADD  R26,R30
00d718 1fbf      	ADC  R27,R31
00d719 91ac      	LD   R26,X
00d71a 940e 9a78 	CALL _h2i
00d71c e1a0      	LDI  R26,LOW(16)
00d71d 02ea      	MULS R30,R26
00d71e 01f0      	MOVW R30,R0
00d71f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x34E:
00d720 01f8      	MOVW R30,R16
00d721 0fee      	LSL  R30
00d722 1fff      	ROL  R31
00d723 9631      	ADIW R30,1
00d724 8dac      	LDD  R26,Y+28
00d725 8dbd      	LDD  R27,Y+28+1
00d726 0fae      	ADD  R26,R30
00d727 1fbf      	ADC  R27,R31
00d728 91ac      	LD   R26,X
00d729 940c 9a78 	JMP  _h2i
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x34F:
00d72b 93ec      	ST   X,R30
00d72c 01d8      	MOVW R26,R16
00d72d 1ba2      	SUB  R26,R18
00d72e 0bb3      	SBC  R27,R19
00d72f e0e3      	LDI  R30,LOW(3)
00d730 e0f0      	LDI  R31,HIGH(3)
00d731 940e df82 	CALL __MULW12
00d733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x350:
00d734 8daa      	LDD  R26,Y+26
00d735 8dbb      	LDD  R27,Y+26+1
00d736 0fea      	ADD  R30,R26
00d737 1ffb      	ADC  R31,R27
00d738 01bf      	MOVW R22,R30
00d739 cfd2      	RJMP SUBOPT_0x34C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x351:
00d73a 0fae      	ADD  R26,R30
00d73b 1fbf      	ADC  R27,R31
00d73c 91ec      	LD   R30,X
00d73d e0f0      	LDI  R31,0
00d73e 01df      	MOVW R26,R30
00d73f e6e4      	LDI  R30,LOW(100)
00d740 e0f0      	LDI  R31,HIGH(100)
00d741 940e dfad 	CALL __DIVW21
00d743 01db      	MOVW R26,R22
00d744 cfe6      	RJMP SUBOPT_0x34F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x352:
00d745 0fae      	ADD  R26,R30
00d746 1fbf      	ADC  R27,R31
00d747 91ac      	LD   R26,X
00d748 27bb      	CLR  R27
00d749 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x353:
00d74a 01df      	MOVW R26,R30
00d74b e0ea      	LDI  R30,LOW(10)
00d74c e0f0      	LDI  R31,HIGH(10)
00d74d 940e dfad 	CALL __DIVW21
00d74f 01db      	MOVW R26,R22
00d750 cfda      	RJMP SUBOPT_0x34F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x354:
00d751 01f8      	MOVW R30,R16
00d752 1be2      	SUB  R30,R18
00d753 0bf3      	SBC  R31,R19
00d754 01de      	MOVW R26,R28
00d755 961c      	ADIW R26,12
00d756 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x355:
00d757 8da8      	LDD  R26,Y+24
00d758 8db9      	LDD  R27,Y+24+1
00d759 0fea      	ADD  R30,R26
00d75a 1ffb      	ADC  R31,R27
00d75b 01bf      	MOVW R22,R30
00d75c cff4      	RJMP SUBOPT_0x354
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x356:
00d75d 01f8      	MOVW R30,R16
00d75e 1be2      	SUB  R30,R18
00d75f 0bf3      	SBC  R31,R19
00d760 01de      	MOVW R26,R28
00d761 9618      	ADIW R26,8
00d762 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x357:
00d763 89ae      	LDD  R26,Y+22
00d764 89bf      	LDD  R27,Y+22+1
00d765 0fea      	ADD  R30,R26
00d766 1ffb      	ADC  R31,R27
00d767 01bf      	MOVW R22,R30
00d768 cff4      	RJMP SUBOPT_0x356
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x358:
00d769 89ac      	LDD  R26,Y+20
00d76a 89bd      	LDD  R27,Y+20+1
00d76b 0fea      	ADD  R30,R26
00d76c 1ffb      	ADC  R31,R27
00d76d 01bf      	MOVW R22,R30
00d76e 01f8      	MOVW R30,R16
00d76f 1be2      	SUB  R30,R18
00d770 0bf3      	SBC  R31,R19
00d771 940c c910 	JMP SUBOPT_0x166
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x359:
00d773 91ec      	LD   R30,X
00d774 e0f0      	LDI  R31,0
00d775 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35A:
00d776 81e8      	LD   R30,Y
00d777 e0f0      	LDI  R31,0
00d778 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x35B:
00d779 01de      	MOVW R26,R28
00d77a 965e      	ADIW R26,30
00d77b 0fae      	ADD  R26,R30
00d77c 1fbf      	ADC  R27,R31
00d77d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35C:
00d77e e0e0      	LDI  R30,LOW(0)
00d77f a3ea      	STD  Y+34,R30
00d780 01de      	MOVW R26,R28
00d781 965e      	ADIW R26,30
00d782 940c a255 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x35D:
00d784 e0e0      	LDI  R30,LOW(0)
00d785 a3e8      	STD  Y+32,R30
00d786 01de      	MOVW R26,R28
00d787 965e      	ADIW R26,30
00d788 940c a255 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x35E:
                +
00d78a 87e8     +STD Y + 8 , R30
00d78b 87f9     +STD Y + 8 + 1 , R31
00d78c 876a     +STD Y + 8 + 2 , R22
00d78d 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00d78e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35F:
                +
00d78f 8be8     +STD Y + 16 , R30
00d790 8bf9     +STD Y + 16 + 1 , R31
00d791 8b6a     +STD Y + 16 + 2 , R22
00d792 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00d793 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x360:
                +
00d794 e8eb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 255 ) )
00d795 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 255 ) )
00d796 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 255 ) )
00d797 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 255 ) )
                 	__POINTD1FN _0x2E0000,255
00d798 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x361:
00d799 01de      	MOVW R26,R28
00d79a 9611      	ADIW R26,1
00d79b 0fae      	ADD  R26,R30
00d79c 1fbf      	ADC  R27,R31
00d79d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x362:
00d79e e0e9      	LDI  R30,LOW(9)
00d79f e0f0      	LDI  R31,HIGH(9)
00d7a0 93e0 10f4 	STS  _hwCalId,R30
00d7a2 93f0 10f5 	STS  _hwCalId+1,R31
00d7a4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x363:
00d7a5 940e e05e 	CALL __PUTPARD1
00d7a7 940c c4c1 	JMP SUBOPT_0xAB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x364:
00d7a9 2fa1      	MOV  R26,R17
00d7aa 27bb      	CLR  R27
00d7ab e0e3      	LDI  R30,LOW(3)
00d7ac e0f0      	LDI  R31,HIGH(3)
00d7ad 940e dfeb 	CALL __MODW21
00d7af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x365:
00d7b0 2fa1      	MOV  R26,R17
00d7b1 e0b0      	LDI  R27,0
00d7b2 e0e3      	LDI  R30,LOW(3)
00d7b3 e0f0      	LDI  R31,HIGH(3)
00d7b4 940e dfad 	CALL __DIVW21
00d7b6 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00d7b7 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00d7b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x366:
00d7b9 91ac      	LD   R26,X
00d7ba 940e bf9f 	CALL _isdigit
00d7bc 30e0      	CPI  R30,0
00d7bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x367:
00d7be 01bf      	MOVW R22,R30
00d7bf 01df      	MOVW R26,R30
00d7c0 940e e085 	CALL __EEPROMRDB
00d7c2 2e0e      	MOV  R0,R30
00d7c3 940c c4c1 	JMP SUBOPT_0xAB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x368:
                +
00d7c5 eaed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 801 ) )
00d7c6 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 801 ) )
00d7c7 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 801 ) )
00d7c8 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 801 ) )
                 	__POINTD1FN _0x2E0000,801
00d7c9 940e e05e 	CALL __PUTPARD1
00d7cb 2fa1      	MOV  R26,R17
00d7cc e0b0      	LDI  R27,0
00d7cd 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00d7ce 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00d7cf 940c c7da 	JMP SUBOPT_0x133
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x369:
                +
00d7d1 e9ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 19 ) )
00d7d2 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 19 ) )
00d7d3 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 19 ) )
00d7d4 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 19 ) )
                 	__POINTD1FN _0x2E0000,19
00d7d5 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x36A:
00d7d7 e6ef      	LDI  R30,LOW(_rxPackage3)
00d7d8 e0fd      	LDI  R31,HIGH(_rxPackage3)
00d7d9 93fa      	ST   -Y,R31
00d7da 93ea      	ST   -Y,R30
00d7db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x36B:
00d7dc 940e e05e 	CALL __PUTPARD1
00d7de e0a7      	LDI  R26,LOW(7)
00d7df 940e a5e3 	CALL _strncmpf
00d7e1 30e0      	CPI  R30,0
00d7e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36C:
00d7e3 940e e05e 	CALL __PUTPARD1
00d7e5 01da      	MOVW R26,R20
00d7e6 91ec      	LD   R30,X
00d7e7 940c c143 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36D:
                +
00d7e9 e7e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 741 ) )
00d7ea e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 741 ) )
00d7eb e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 741 ) )
00d7ec e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 741 ) )
                 	__POINTD1FN _0x2E0000,741
00d7ed 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36E:
                +
00d7ef efe1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 869 ) )
00d7f0 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 869 ) )
00d7f1 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 869 ) )
00d7f2 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 869 ) )
                 	__POINTD1FN _0x2E0000,869
00d7f3 940c c02f 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36F:
00d7f5 85ac      	LDD  R26,Y+12
00d7f6 85bd      	LDD  R27,Y+12+1
00d7f7 940c 9e04 	JMP  _print_hex_ascii_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x370:
00d7f9 91e0 1a71 	LDS  R30,_n
00d7fb 91f0 1a72 	LDS  R31,_n+1
00d7fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x371:
00d7fe 01f9      	MOVW R30,R18
00d7ff 940e df01 	CALL __LSLW4
00d801 58ed      	SUBI R30,LOW(-_a)
00d802 4ef5      	SBCI R31,HIGH(-_a)
00d803 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x372:
00d804 01df      	MOVW R26,R30
00d805 01f8      	MOVW R30,R16
00d806 940c cfda 	JMP SUBOPT_0x26C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x373:
00d808 85ea      	LDD  R30,Y+10
00d809 85fb      	LDD  R31,Y+10+1
00d80a 940e df01 	CALL __LSLW4
00d80c 58ed      	SUBI R30,LOW(-_a)
00d80d 4ef5      	SBCI R31,HIGH(-_a)
00d80e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x374:
00d80f 01df      	MOVW R26,R30
00d810 01f9      	MOVW R30,R18
00d811 940c cfda 	JMP SUBOPT_0x26C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x375:
00d813 01df      	MOVW R26,R30
00d814 01f9      	MOVW R30,R18
00d815 940e df05 	CALL __LSLW2
00d817 0fea      	ADD  R30,R26
00d818 1ffb      	ADC  R31,R27
00d819 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x376:
00d81a 01f8      	MOVW R30,R16
00d81b 940e df01 	CALL __LSLW4
00d81d 58ed      	SUBI R30,LOW(-_a)
00d81e 4ef5      	SBCI R31,HIGH(-_a)
00d81f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x377:
00d820 01df      	MOVW R26,R30
00d821 dfd7      	RCALL SUBOPT_0x370
00d822 940e df05 	CALL __LSLW2
00d824 0fea      	ADD  R30,R26
00d825 1ffb      	ADC  R31,R27
00d826 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x378:
                +
00d827 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00d828 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00d829 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00d82a e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00d82b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x379:
                +
00d82c e0a0     +LDI R26 , LOW ( 0x3F800000 )
00d82d e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00d82e e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00d82f e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00d830 940c cf72 	JMP SUBOPT_0x25C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37A:
00d832 940e df3b 	CALL __CWD1
00d834 940e dfd7 	CALL __DIVD21
00d836 018f      	MOVW R16,R30
00d837 940c cce8 	JMP SUBOPT_0x203
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37B:
00d839 01df      	MOVW R26,R30
00d83a 01cb      	MOVW R24,R22
                +
00d83b e0e0     +LDI R30 , LOW ( 0x44800000 )
00d83c e0f0     +LDI R31 , HIGH ( 0x44800000 )
00d83d e860     +LDI R22 , BYTE3 ( 0x44800000 )
00d83e e474     +LDI R23 , BYTE4 ( 0x44800000 )
                 	__GETD1N 0x44800000
00d83f 940e de4d 	CALL __DIVF21
                +
00d841 e3a3     +LDI R26 , LOW ( 0x40533333 )
00d842 e3b3     +LDI R27 , HIGH ( 0x40533333 )
00d843 e583     +LDI R24 , BYTE3 ( 0x40533333 )
00d844 e490     +LDI R25 , BYTE4 ( 0x40533333 )
                 	__GETD2N 0x40533333
00d845 940e ddff 	CALL __MULF12
00d847 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37C:
                +
00d848 01de     +MOVW R26 , R28
00d849 54a6     +SUBI R26 , LOW ( - 186 )
00d84a 4fbf     +SBCI R27 , HIGH ( - 186 )
00d84b 900d     +LD R0 , X +
00d84c 901d     +LD R1 , X +
00d84d 918d     +LD R24 , X +
00d84e 919c     +LD R25 , X
00d84f 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
                +
00d850 e1e2     +LDI R30 , LOW ( 0xBDC08312 )
00d851 e8f3     +LDI R31 , HIGH ( 0xBDC08312 )
00d852 ec60     +LDI R22 , BYTE3 ( 0xBDC08312 )
00d853 eb7d     +LDI R23 , BYTE4 ( 0xBDC08312 )
                 	__GETD1N 0xBDC08312
00d854 940e de92 	CALL __CMPF12
00d856 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:81 WORDS
                 SUBOPT_0x37D:
                +
00d857 01de     +MOVW R26 , R28
00d858 54a6     +SUBI R26 , LOW ( - 186 )
00d859 4fbf     +SBCI R27 , HIGH ( - 186 )
00d85a 900d     +LD R0 , X +
00d85b 901d     +LD R1 , X +
00d85c 918d     +LD R24 , X +
00d85d 919c     +LD R25 , X
00d85e 01d0     +MOVW R26 , R0
                 	__GETD2SX 186
00d85f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37E:
                +
00d860 e0e0     +LDI R30 , LOW ( 0xBEC00000 )
00d861 e0f0     +LDI R31 , HIGH ( 0xBEC00000 )
00d862 ec60     +LDI R22 , BYTE3 ( 0xBEC00000 )
00d863 eb7e     +LDI R23 , BYTE4 ( 0xBEC00000 )
                 	__GETD1N 0xBEC00000
00d864 940e de92 	CALL __CMPF12
00d866 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x37F:
                +
00d867 01fe     +MOVW R30 , R28
00d868 5ce2     +SUBI R30 , LOW ( - 62 )
00d869 4fff     +SBCI R31 , HIGH ( - 62 )
00d86a 9001     +LD R0 , Z +
00d86b 9011     +LD R1 , Z +
00d86c 9161     +LD R22 , Z +
00d86d 8170     +LD R23 , Z
00d86e 01f0     +MOVW R30 , R0
                 	__GETD1SX 62
00d86f 940e e05e 	CALL __PUTPARD1
00d871 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:34 WORDS
                 SUBOPT_0x380:
00d872 940e e05e 	CALL __PUTPARD1
00d874 01fe      	MOVW R30,R28
00d875 53e6      	SUBI R30,LOW(-(202))
00d876 4fff      	SBCI R31,HIGH(-(202))
00d877 93fa      	ST   -Y,R31
00d878 93ea      	ST   -Y,R30
00d879 01fe      	MOVW R30,R28
00d87a 53e8      	SUBI R30,LOW(-(200))
00d87b 4fff      	SBCI R31,HIGH(-(200))
00d87c 93fa      	ST   -Y,R31
00d87d 93ea      	ST   -Y,R30
00d87e 01de      	MOVW R26,R28
00d87f 53aa      	SUBI R26,LOW(-(198))
00d880 4fbf      	SBCI R27,HIGH(-(198))
00d881 940e 9fd3 	CALL _gaussian
                +
00d883 01fe     +MOVW R30 , R28
00d884 54e6     +SUBI R30 , LOW ( - 186 )
00d885 4fff     +SBCI R31 , HIGH ( - 186 )
00d886 9001     +LD R0 , Z +
00d887 9011     +LD R1 , Z +
00d888 9161     +LD R22 , Z +
00d889 8170     +LD R23 , Z
00d88a 01f0     +MOVW R30 , R0
                 	__GETD1SX 186
                +
00d88b 01de     +MOVW R26 , R28
00d88c 54ae     +SUBI R26 , LOW ( - 178 )
00d88d 4fbf     +SBCI R27 , HIGH ( - 178 )
00d88e 900d     +LD R0 , X +
00d88f 901d     +LD R1 , X +
00d890 918d     +LD R24 , X +
00d891 919c     +LD R25 , X
00d892 01d0     +MOVW R26 , R0
                 	__GETD2SX 178
00d893 940e ddff 	CALL __MULF12
00d895 dfc1      	RCALL SUBOPT_0x37D
00d896 940e ddff 	CALL __MULF12
00d898 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x381:
                +
00d899 01fe     +MOVW R30 , R28
00d89a 54e6     +SUBI R30 , LOW ( - 186 )
00d89b 4fff     +SBCI R31 , HIGH ( - 186 )
00d89c 9001     +LD R0 , Z +
00d89d 9011     +LD R1 , Z +
00d89e 9161     +LD R22 , Z +
00d89f 8170     +LD R23 , Z
00d8a0 01f0     +MOVW R30 , R0
                 	__GETD1SX 186
00d8a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x382:
                +
00d8a2 01de     +MOVW R26 , R28
00d8a3 55a2     +SUBI R26 , LOW ( - 174 )
00d8a4 4fbf     +SBCI R27 , HIGH ( - 174 )
00d8a5 900d     +LD R0 , X +
00d8a6 901d     +LD R1 , X +
00d8a7 918d     +LD R24 , X +
00d8a8 919c     +LD R25 , X
00d8a9 01d0     +MOVW R26 , R0
                 	__GETD2SX 174
00d8aa 940e ddff 	CALL __MULF12
00d8ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x383:
00d8ad 940e ddaf 	CALL __ADDF12
                +
00d8af 01de     +MOVW R26 , R28
00d8b0 55a6     +SUBI R26 , LOW ( - 170 )
00d8b1 4fbf     +SBCI R27 , HIGH ( - 170 )
00d8b2 900d     +LD R0 , X +
00d8b3 901d     +LD R1 , X +
00d8b4 918d     +LD R24 , X +
00d8b5 919c     +LD R25 , X
00d8b6 01d0     +MOVW R26 , R0
                 	__GETD2SX 170
00d8b7 940e ddaf 	CALL __ADDF12
00d8b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x384:
00d8ba df9c      	RCALL SUBOPT_0x37D
                +
00d8bb e6e2     +LDI R30 , LOW ( 0xBF381062 )
00d8bc e1f0     +LDI R31 , HIGH ( 0xBF381062 )
00d8bd e368     +LDI R22 , BYTE3 ( 0xBF381062 )
00d8be eb7f     +LDI R23 , BYTE4 ( 0xBF381062 )
                 	__GETD1N 0xBF381062
00d8bf 940e de92 	CALL __CMPF12
00d8c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x385:
00d8c2 940e e05e 	CALL __PUTPARD1
00d8c4 01fe      	MOVW R30,R28
00d8c5 5bee      	SUBI R30,LOW(-(66))
00d8c6 4fff      	SBCI R31,HIGH(-(66))
00d8c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0x386:
00d8c8 01fe      	MOVW R30,R28
00d8c9 53e6      	SUBI R30,LOW(-(202))
00d8ca 4fff      	SBCI R31,HIGH(-(202))
00d8cb 93fa      	ST   -Y,R31
00d8cc 93ea      	ST   -Y,R30
00d8cd 01fe      	MOVW R30,R28
00d8ce 53e8      	SUBI R30,LOW(-(200))
00d8cf 4fff      	SBCI R31,HIGH(-(200))
00d8d0 93fa      	ST   -Y,R31
00d8d1 93ea      	ST   -Y,R30
00d8d2 01de      	MOVW R26,R28
00d8d3 53aa      	SUBI R26,LOW(-(198))
00d8d4 4fbf      	SBCI R27,HIGH(-(198))
00d8d5 940e 9fd3 	CALL _gaussian
00d8d7 dfc1      	RCALL SUBOPT_0x381
                +
00d8d8 01de     +MOVW R26 , R28
00d8d9 54ae     +SUBI R26 , LOW ( - 178 )
00d8da 4fbf     +SBCI R27 , HIGH ( - 178 )
00d8db 900d     +LD R0 , X +
00d8dc 901d     +LD R1 , X +
00d8dd 918d     +LD R24 , X +
00d8de 919c     +LD R25 , X
00d8df 01d0     +MOVW R26 , R0
                 	__GETD2SX 178
00d8e0 940e ddff 	CALL __MULF12
00d8e2 df74      	RCALL SUBOPT_0x37D
00d8e3 940e ddff 	CALL __MULF12
00d8e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x387:
00d8e6 dfb2      	RCALL SUBOPT_0x381
00d8e7 cfba      	RJMP SUBOPT_0x382
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x388:
00d8e8 df6e      	RCALL SUBOPT_0x37D
                +
00d8e9 e2e1     +LDI R30 , LOW ( 0xBF82B021 )
00d8ea ebf0     +LDI R31 , HIGH ( 0xBF82B021 )
00d8eb e862     +LDI R22 , BYTE3 ( 0xBF82B021 )
00d8ec eb7f     +LDI R23 , BYTE4 ( 0xBF82B021 )
                 	__GETD1N 0xBF82B021
00d8ed 940e de92 	CALL __CMPF12
00d8ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x389:
00d8f0 df66      	RCALL SUBOPT_0x37D
                +
00d8f1 e9e8     +LDI R30 , LOW ( 0xBFA26E98 )
00d8f2 e6fe     +LDI R31 , HIGH ( 0xBFA26E98 )
00d8f3 ea62     +LDI R22 , BYTE3 ( 0xBFA26E98 )
00d8f4 eb7f     +LDI R23 , BYTE4 ( 0xBFA26E98 )
                 	__GETD1N 0xBFA26E98
00d8f5 940e de92 	CALL __CMPF12
00d8f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38A:
                +
00d8f8 87ee     +STD Y + 14 , R30
00d8f9 87ff     +STD Y + 14 + 1 , R31
00d8fa 8b68     +STD Y + 14 + 2 , R22
00d8fb 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00d8fc 940c c2be 	JMP SUBOPT_0x60
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x38B:
                +
00d8fe 87e9     +STD Y + 9 , R30
00d8ff 87fa     +STD Y + 9 + 1 , R31
00d900 876b     +STD Y + 9 + 2 , R22
00d901 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00d902 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x38C:
00d903 81ae      	LDD  R26,Y+6
00d904 81bf      	LDD  R27,Y+6+1
00d905 9611      	ADIW R26,1
00d906 83ae      	STD  Y+6,R26
00d907 83bf      	STD  Y+6+1,R27
00d908 9711      	SBIW R26,1
00d909 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38D:
00d90a 940e c4e8 	CALL SUBOPT_0xB3
                +
00d90c eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00d90d ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00d90e ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00d90f e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00d910 940e ddff 	CALL __MULF12
00d912 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38E:
00d913 940e c4e3 	CALL SUBOPT_0xB2
                +
00d915 85a9     +LDD R26 , Y + 9
00d916 85ba     +LDD R27 , Y + 9 + 1
00d917 858b     +LDD R24 , Y + 9 + 2
00d918 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d919 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x38F:
00d91a 940e c6f1 	CALL SUBOPT_0x10A
00d91c 940e ddff 	CALL __MULF12
00d91e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x390:
00d91f 940e ccee 	CALL SUBOPT_0x204
00d921 940e ddaf 	CALL __ADDF12
00d923 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x391:
00d924 2fe0      	MOV  R30,R16
00d925 5de0      	SUBI R30,-LOW(48)
00d926 93ec      	ST   X,R30
00d927 2fe0      	MOV  R30,R16
00d928 e0f0      	LDI  R31,0
00d929 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x392:
00d92a 940e df3b 	CALL __CWD1
00d92c 940e dd75 	CALL __CDF1
00d92e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x393:
                +
00d92f 85a9     +LDD R26 , Y + 9
00d930 85ba     +LDD R27 , Y + 9 + 1
00d931 858b     +LDD R24 , Y + 9 + 2
00d932 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d933 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x394:
00d934 89e8      	LDD  R30,Y+16
00d935 89f9      	LDD  R31,Y+16+1
00d936 9631      	ADIW R30,1
00d937 8be8      	STD  Y+16,R30
00d938 8bf9      	STD  Y+16+1,R31
00d939 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x395:
00d93a 940e c075 	CALL SUBOPT_0xB
00d93c cfdd      	RJMP SUBOPT_0x38F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x396:
00d93d 940e ddff 	CALL __MULF12
00d93f 940c c63c 	JMP SUBOPT_0xE9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x397:
00d941 93e0 1aa9 	STS  __seed_G100,R30
00d943 93f0 1aaa 	STS  __seed_G100+1,R31
00d945 9360 1aab 	STS  __seed_G100+2,R22
00d947 9370 1aac 	STS  __seed_G100+3,R23
00d949 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x398:
00d94a 940e e02a 	CALL __GETW1P
00d94c 83ee      	STD  Y+6,R30
00d94d 83ff      	STD  Y+6+1,R31
00d94e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x399:
00d94f e0f0      	LDI  R31,0
00d950 940e df3b 	CALL __CWD1
00d952 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39A:
00d953 940e e034 	CALL __GETD1P_INC
00d955 940e c5b0 	CALL SUBOPT_0xD2
00d957 940e e03e 	CALL __PUTDP1_DEC
00d959 940c c5d0 	JMP SUBOPT_0xD9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39B:
00d95b 940e e02e 	CALL __GETD1P
                +
00d95d 83e9     +STD Y + 1 , R30
00d95e 83fa     +STD Y + 1 + 1 , R31
00d95f 836b     +STD Y + 1 + 2 , R22
00d960 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00d961 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39C:
                +
00d962 81ed     +LDD R30 , Y + 5
00d963 81fe     +LDD R31 , Y + 5 + 1
00d964 816f     +LDD R22 , Y + 5 + 2
00d965 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00d966 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x39D:
00d967 85e9      	LDD  R30,Y+9
00d968 85fa      	LDD  R31,Y+9+1
00d969 81a1      	LDD  R26,Z+1
00d96a 93aa      	ST   -Y,R26
00d96b 85ea      	LDD  R30,Y+10
00d96c 85fb      	LDD  R31,Y+10+1
00d96d 96f2      	ADIW R30,50
00d96e 93fa      	ST   -Y,R31
00d96f 93ea      	ST   -Y,R30
00d970 940e c3d2 	CALL SUBOPT_0x89
00d972 940e e05e 	CALL __PUTPARD1
00d974 e0a1      	LDI  R26,LOW(1)
00d975 940c a880 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39E:
                +
00d977 a1a2     +LDD R26 , Z + 34
00d978 a1b3     +LDD R27 , Z + 34 + 1
00d979 a184     +LDD R24 , Z + 34 + 2
00d97a a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00d97b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39F:
00d97c 93fa      	ST   -Y,R31
00d97d 93ea      	ST   -Y,R30
00d97e 940e c24c 	CALL SUBOPT_0x4F
00d980 940e e05e 	CALL __PUTPARD1
00d982 e0a1      	LDI  R26,LOW(1)
00d983 940e a81b 	CALL _disk_read
00d985 30e0      	CPI  R30,0
00d986 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A0:
00d987 940e c151 	CALL SUBOPT_0x2C
00d989 940c abbd 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3A1:
00d98b 96f2      	ADIW R30,50
00d98c 93fa      	ST   -Y,R31
00d98d 93ea      	ST   -Y,R30
00d98e e0e0      	LDI  R30,LOW(0)
00d98f e0f0      	LDI  R31,HIGH(0)
00d990 93fa      	ST   -Y,R31
00d991 93ea      	ST   -Y,R30
00d992 e0a0      	LDI  R26,LOW(512)
00d993 e0b2      	LDI  R27,HIGH(512)
00d994 940c ab60 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A2:
00d996 940e e02e 	CALL __GETD1P
00d998 01d0      	MOVW R26,R0
00d999 940e e039 	CALL __PUTDP1
00d99b 81e9      	LDD  R30,Y+1
00d99c 81fa      	LDD  R31,Y+1+1
00d99d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A3:
                +
00d99e 89a2     +LDD R26 , Z + 18
00d99f 89b3     +LDD R27 , Z + 18 + 1
00d9a0 8984     +LDD R24 , Z + 18 + 2
00d9a1 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d9a2 940e e063 	CALL __PUTPARD2
00d9a4 e0a1      	LDI  R26,LOW(1)
00d9a5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3A4:
                +
00d9a6 30a2     +CPI R26 , LOW ( 0x2 )
00d9a7 e0e0     +LDI R30 , HIGH ( 0x2 )
00d9a8 07be     +CPC R27 , R30
00d9a9 e0e0     +LDI R30 , BYTE3 ( 0x2 )
00d9aa 078e     +CPC R24 , R30
00d9ab e0e0     +LDI R30 , BYTE4 ( 0x2 )
00d9ac 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00d9ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A5:
                +
00d9ae e0e1     +LDI R30 , LOW ( 0x1 )
00d9af e0f0     +LDI R31 , HIGH ( 0x1 )
00d9b0 e060     +LDI R22 , BYTE3 ( 0x1 )
00d9b1 e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00d9b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A6:
00d9b3 01d9      	MOVW R26,R18
00d9b4 e0e0      	LDI  R30,LOW(512)
00d9b5 e0f2      	LDI  R31,HIGH(512)
00d9b6 940e df9a 	CALL __DIVW21U
00d9b8 940c ccc7 	JMP SUBOPT_0x1FF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x3A7:
00d9ba 940e debb 	CALL __ADDD21
00d9bc 940e abbd 	CALL _move_window_G103
00d9be 30e0      	CPI  R30,0
00d9bf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3A8:
00d9c0 85ac      	LDD  R26,Y+12
00d9c1 85bd      	LDD  R27,Y+12+1
00d9c2 96d2      	ADIW R26,50
00d9c3 01f9      	MOVW R30,R18
00d9c4 70f1      	ANDI R31,HIGH(0x1FF)
00d9c5 0fae      	ADD  R26,R30
00d9c6 1fbf      	ADC  R27,R31
00d9c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A9:
                +
00d9c8 e0e0     +LDI R30 , LOW ( 0x100 )
00d9c9 e0f1     +LDI R31 , HIGH ( 0x100 )
00d9ca e060     +LDI R22 , BYTE3 ( 0x100 )
00d9cb e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00d9cc 940e dfb2 	CALL __DIVD21U
00d9ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AA:
00d9cf 940e df7c 	CALL __MULB1W2U
00d9d1 70f1      	ANDI R31,HIGH(0x1FF)
00d9d2 85ac      	LDD  R26,Y+12
00d9d3 85bd      	LDD  R27,Y+12+1
00d9d4 96d2      	ADIW R26,50
00d9d5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AB:
                +
00d9d6 e8e0     +LDI R30 , LOW ( 0x80 )
00d9d7 e0f0     +LDI R31 , HIGH ( 0x80 )
00d9d8 e060     +LDI R22 , BYTE3 ( 0x80 )
00d9d9 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00d9da 940e dfb2 	CALL __DIVD21U
00d9dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AC:
                +
00d9dd 85ae     +LDD R26 , Y + 14
00d9de 85bf     +LDD R27 , Y + 14 + 1
00d9df 8988     +LDD R24 , Y + 14 + 2
00d9e0 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00d9e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x3AD:
00d9e2 01d8      	MOVW R26,R16
00d9e3 e0e0      	LDI  R30,LOW(512)
00d9e4 e0f2      	LDI  R31,HIGH(512)
00d9e5 940e df9a 	CALL __DIVW21U
00d9e7 940e c5c6 	CALL SUBOPT_0xD7
00d9e9 2766      	CLR  R22
00d9ea 2777      	CLR  R23
00d9eb 940e debb 	CALL __ADDD21
00d9ed 940e abbd 	CALL _move_window_G103
00d9ef 2f5e      	MOV  R21,R30
00d9f0 3050      	CPI  R21,0
00d9f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3AE:
00d9f2 89aa      	LDD  R26,Y+18
00d9f3 89bb      	LDD  R27,Y+18+1
00d9f4 96d2      	ADIW R26,50
00d9f5 01f8      	MOVW R30,R16
00d9f6 70f1      	ANDI R31,HIGH(0x1FF)
00d9f7 0fea      	ADD  R30,R26
00d9f8 1ffb      	ADC  R31,R27
00d9f9 019f      	MOVW R18,R30
00d9fa 85ee      	LDD  R30,Y+14
00d9fb 70e1      	ANDI R30,LOW(0x1)
00d9fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3AF:
00d9fd 940e c5c6 	CALL SUBOPT_0xD7
00d9ff 940e debb 	CALL __ADDD21
00da01 940e abbd 	CALL _move_window_G103
00da03 2f5e      	MOV  R21,R30
00da04 3050      	CPI  R21,0
00da05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B0:
00da06 940e df7c 	CALL __MULB1W2U
00da08 70f1      	ANDI R31,HIGH(0x1FF)
00da09 89aa      	LDD  R26,Y+18
00da0a 89bb      	LDD  R27,Y+18+1
00da0b 96d2      	ADIW R26,50
00da0c 0fea      	ADD  R30,R26
00da0d 1ffb      	ADC  R31,R27
00da0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B1:
                +
00da0f 81ad     +LDD R26 , Y + 5
00da10 81be     +LDD R27 , Y + 5 + 1
00da11 818f     +LDD R24 , Y + 5 + 2
00da12 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00da13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3B2:
00da14 85a9      	LDD  R26,Y+9
00da15 85ba      	LDD  R27,Y+9+1
00da16 965e      	ADIW R26,30
00da17 940e e02e 	CALL __GETD1P
00da19 dff5      	RCALL SUBOPT_0x3B1
00da1a 940e e0c9 	CALL __CPD21
00da1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B3:
                +
00da1d 81e9     +LDD R30 , Y + 1
00da1e 81fa     +LDD R31 , Y + 1 + 1
00da1f 816b     +LDD R22 , Y + 1 + 2
00da20 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00da21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x3B4:
                +
00da22 30a1     +CPI R26 , LOW ( 0x1 )
00da23 e0e0     +LDI R30 , HIGH ( 0x1 )
00da24 07be     +CPC R27 , R30
00da25 e0e0     +LDI R30 , BYTE3 ( 0x1 )
00da26 078e     +CPC R24 , R30
00da27 e0e0     +LDI R30 , BYTE4 ( 0x1 )
00da28 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00da29 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B5:
                +
00da2a 85a6     +LDD R26 , Z + 14
00da2b 85b7     +LDD R27 , Z + 14 + 1
00da2c 8980     +LDD R24 , Z + 14 + 2
00da2d 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00da2e 940c c1b7 	JMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B6:
                +
00da30 83ed     +STD Y + 5 , R30
00da31 83fe     +STD Y + 5 + 1 , R31
00da32 836f     +STD Y + 5 + 2 , R22
00da33 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00da34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B7:
00da35 89ec      	LDD  R30,Y+20
00da36 89fd      	LDD  R31,Y+20+1
00da37 93fa      	ST   -Y,R31
00da38 93ea      	ST   -Y,R30
00da39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B8:
                +
00da3a 89aa     +LDD R26 , Y + 18
00da3b 89bb     +LDD R27 , Y + 18 + 1
00da3c 898c     +LDD R24 , Y + 18 + 2
00da3d 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00da3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B9:
                +
00da3f e0e2     +LDI R30 , LOW ( 0x2 )
00da40 e0f0     +LDI R31 , HIGH ( 0x2 )
00da41 e060     +LDI R22 , BYTE3 ( 0x2 )
00da42 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00da43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BA:
00da44 940e c3d2 	CALL SUBOPT_0x89
00da46 940e c5c6 	CALL SUBOPT_0xD7
00da48 940e e0c4 	CALL __CPD12
00da4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3BB:
                +
00da4b e0e0     +LDI R30 , LOW ( 0x0 )
00da4c e0f0     +LDI R31 , HIGH ( 0x0 )
00da4d e060     +LDI R22 , BYTE3 ( 0x0 )
00da4e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00da4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3BC:
00da50 85a8      	LDD  R26,Y+8
00da51 85b9      	LDD  R27,Y+8+1
00da52 940e e02a 	CALL __GETW1P
00da54 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BD:
00da55 967e      	ADIW R30,30
00da56 01df      	MOVW R26,R30
00da57 940e e02e 	CALL __GETD1P
00da59 940e c4e8 	CALL SUBOPT_0xB3
00da5b 940e e0c9 	CALL __CPD21
00da5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BE:
00da5e 940e c4e3 	CALL SUBOPT_0xB2
                +
00da60 85a8     +LDD R26 , Y + 8
00da61 85b9     +LDD R27 , Y + 8 + 1
00da62 961a     +ADIW R26 , 10
00da63 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00da65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BF:
00da66 85a8      	LDD  R26,Y+8
00da67 85b9      	LDD  R27,Y+8+1
00da68 cbe5      	RJMP SUBOPT_0x33B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3C0:
00da69 2766      	CLR  R22
00da6a 2777      	CLR  R23
00da6b 940e deb6 	CALL __ADDD12
00da6d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C1:
00da6e 70ef      	ANDI R30,LOW(0xF)
00da6f 70f0      	ANDI R31,HIGH(0xF)
00da70 0fee      	LSL  R30
00da71 940e df01 	CALL __LSLW4
00da73 0fea      	ADD  R30,R26
00da74 1ffb      	ADC  R31,R27
00da75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C2:
00da76 940e e02e 	CALL __GETD1P
00da78 940e e0b2 	CALL __CPD10
00da7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C3:
00da7b 85a9      	LDD  R26,Y+9
00da7c 85ba      	LDD  R27,Y+9+1
00da7d 940e e02a 	CALL __GETW1P
00da7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C4:
00da80 85a9      	LDD  R26,Y+9
00da81 85ba      	LDD  R27,Y+9+1
00da82 cbcb      	RJMP SUBOPT_0x33B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C5:
00da83 85eb      	LDD  R30,Y+11
00da84 85fc      	LDD  R31,Y+11+1
                +
00da85 85a2     +LDD R26 , Z + 10
00da86 85b3     +LDD R27 , Z + 10 + 1
00da87 8584     +LDD R24 , Z + 10 + 2
00da88 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00da89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C6:
00da8a 967e      	ADIW R30,30
00da8b 01df      	MOVW R26,R30
00da8c 940e e02e 	CALL __GETD1P
00da8e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C7:
00da8f 81ac      	LDD  R26,Y+4
00da90 81bd      	LDD  R27,Y+4+1
00da91 cbbc      	RJMP SUBOPT_0x33B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3C8:
00da92 81ee      	LDD  R30,Y+6
00da93 81ff      	LDD  R31,Y+6+1
                +
00da94 85a6     +LDD R26 , Z + 14
00da95 85b7     +LDD R27 , Z + 14 + 1
00da96 8980     +LDD R24 , Z + 14 + 2
00da97 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00da98 940e abbd 	CALL _move_window_G103
00da9a 2f1e      	MOV  R17,R30
00da9b 3010      	CPI  R17,0
00da9c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C9:
00da9d 933a      	ST   -Y,R19
00da9e 932a      	ST   -Y,R18
00da9f 81ee      	LDD  R30,Y+6
00daa0 81ff      	LDD  R31,Y+6+1
00daa1 89a4      	LDD  R26,Z+20
00daa2 89b5      	LDD  R27,Z+21
00daa3 93ba      	ST   -Y,R27
00daa4 93aa      	ST   -Y,R26
00daa5 940c c222 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3CA:
00daa7 2fe2      	MOV  R30,R18
00daa8 5f2f      	SUBI R18,-1
00daa9 e0f0      	LDI  R31,0
00daaa 0fe4      	ADD  R30,R20
00daab 1ff5      	ADC  R31,R21
00daac 8300      	ST   Z,R16
00daad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3CB:
00daae e0f0      	LDI  R31,0
00daaf 0fe4      	ADD  R30,R20
00dab0 1ff5      	ADC  R31,R21
00dab1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CC:
                +
00dab2 81ae     +LDD R26 , Y + 6
00dab3 81bf     +LDD R27 , Y + 6 + 1
00dab4 9616     +ADIW R26 , 6
00dab5 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00dab7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CD:
00dab8 01d9      	MOVW R26,R18
00dab9 9654      	ADIW R26,20
00daba 940c c0f9 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CE:
00dabc 01d9      	MOVW R26,R18
00dabd 965a      	ADIW R26,26
00dabe 940e e02a 	CALL __GETW1P
00dac0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CF:
00dac1 2766      	CLR  R22
00dac2 2777      	CLR  R23
00dac3 940e decf 	CALL __ORD12
00dac5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D0:
00dac6 940e e05e 	CALL __PUTPARD1
00dac8 e0a1      	LDI  R26,LOW(1)
00dac9 940e a81b 	CALL _disk_read
00dacb 30e0      	CPI  R30,0
00dacc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3D1:
00dacd 96f2      	ADIW R30,50
00dace 50e2      	SUBI R30,LOW(-510)
00dacf 4ffe      	SBCI R31,HIGH(-510)
00dad0 01df      	MOVW R26,R30
00dad1 940e e02a 	CALL __GETW1P
00dad3 35e5      	CPI  R30,LOW(0xAA55)
00dad4 eaaa      	LDI  R26,HIGH(0xAA55)
00dad5 07fa      	CPC  R31,R26
00dad6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3D2:
00dad7 940e e02e 	CALL __GETD1P
                +
00dad9 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00dada 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00dadb 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00dadc 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00dadd 34e6     +CPI R30 , LOW ( 0x544146 )
00dade e4a1     +LDI R26 , HIGH ( 0x544146 )
00dadf 07fa     +CPC R31 , R26
00dae0 e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00dae1 076a     +CPC R22 , R26
00dae2 e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00dae3 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00dae4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3D3:
00dae5 eba2      	LDI  R26,LOW(_FatFs_G103)
00dae6 e1ba      	LDI  R27,HIGH(_FatFs_G103)
00dae7 e0f0      	LDI  R31,0
00dae8 0fee      	LSL  R30
00dae9 1fff      	ROL  R31
00daea 0fae      	ADD  R26,R30
00daeb 1fbf      	ADC  R27,R31
00daec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D4:
                +
00daed 8bea     +STD Y + 18 , R30
00daee 8bfb     +STD Y + 18 + 1 , R31
00daef 8b6c     +STD Y + 18 + 2 , R22
00daf0 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00daf1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D5:
00daf2 81ae      	LDD  R26,Y+6
00daf3 81bf      	LDD  R27,Y+6+1
00daf4 5ca0      	SUBI R26,LOW(-64)
00daf5 4fbf      	SBCI R27,HIGH(-64)
00daf6 940e e02a 	CALL __GETW1P
00daf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D6:
                +
00daf9 87ee     +STD Y + 14 , R30
00dafa 87ff     +STD Y + 14 + 1 , R31
00dafb 8b68     +STD Y + 14 + 2 , R22
00dafc 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00dafd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D7:
00dafe 81ee      	LDD  R30,Y+6
00daff 81ff      	LDD  R31,Y+6+1
00db00 85a0      	LDD  R26,Z+8
00db01 85b1      	LDD  R27,Z+9
00db02 01fd      	MOVW R30,R26
00db03 940e df13 	CALL __LSRW4
00db05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D8:
00db06 81ee      	LDD  R30,Y+6
00db07 81ff      	LDD  R31,Y+6+1
00db08 de6e      	RCALL SUBOPT_0x39E
00db09 940e c5b5 	CALL SUBOPT_0xD3
00db0b 940e deb6 	CALL __ADDD12
00db0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D9:
00db0e 940e abbd 	CALL _move_window_G103
00db10 2f1e      	MOV  R17,R30
00db11 3010      	CPI  R17,0
00db12 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DA:
00db13 8daa      	LDD  R26,Y+26
00db14 8dbb      	LDD  R27,Y+26+1
00db15 cb38      	RJMP SUBOPT_0x33B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3DB:
00db16 81a2      	LDD  R26,Z+2
00db17 81b3      	LDD  R27,Z+3
00db18 940e b468 	CALL _validate_G103
00db1a 2f1e      	MOV  R17,R30
00db1b 3010      	CPI  R17,0
00db1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3DC:
00db1d 8dea      	LDD  R30,Y+26
00db1e 8dfb      	LDD  R31,Y+26+1
                +
00db1f 81a6     +LDD R26 , Z + 6
00db20 81b7     +LDD R27 , Z + 6 + 1
00db21 8580     +LDD R24 , Z + 6 + 2
00db22 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00db23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DD:
00db24 01fd      	MOVW R30,R26
00db25 01bc      	MOVW R22,R24
00db26 70f1      	ANDI R31,HIGH(0x1FF)
00db27 9730      	SBIW R30,0
00db28 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DE:
00db29 8dec      	LDD  R30,Y+28
00db2a 8dfd      	LDD  R31,Y+28+1
                +
00db2b 89a2     +LDD R26 , Z + 18
00db2c 89b3     +LDD R27 , Z + 18 + 1
00db2d 8984     +LDD R24 , Z + 18 + 2
00db2e 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00db2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3DF:
00db30 8daa      	LDD  R26,Y+26
00db31 8dbb      	LDD  R27,Y+26+1
00db32 9614      	ADIW R26,4
00db33 91ec      	LD   R30,X
00db34 68e0      	ORI  R30,0x80
00db35 93ec      	ST   X,R30
00db36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E0:
00db37 8dea      	LDD  R30,Y+26
00db38 8dfb      	LDD  R31,Y+26+1
00db39 81e5      	LDD  R30,Z+5
00db3a e0f0      	LDI  R31,0
00db3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E1:
00db3c e0e0      	LDI  R30,LOW(512)
00db3d e0f2      	LDI  R31,HIGH(512)
00db3e 940e df9a 	CALL __DIVW21U
00db40 01af      	MOVW R20,R30
00db41 2e04      	MOV  R0,R20
00db42 2a05      	OR   R0,R21
00db43 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E2:
00db44 8daa      	LDD  R26,Y+26
00db45 8dbb      	LDD  R27,Y+26+1
00db46 940e e02a 	CALL __GETW1P
00db48 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E3:
00db49 81e1      	LDD  R30,Z+1
00db4a 93ea      	ST   -Y,R30
00db4b 81ef      	LDD  R30,Y+7
00db4c 85f8      	LDD  R31,Y+7+1
00db4d 93fa      	ST   -Y,R31
00db4e 93ea      	ST   -Y,R30
00db4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3E4:
00db50 8dea      	LDD  R30,Y+26
00db51 8dfb      	LDD  R31,Y+26+1
                +
00db52 89a6     +LDD R26 , Z + 22
00db53 89b7     +LDD R27 , Z + 22 + 1
00db54 8d80     +LDD R24 , Z + 22 + 2
00db55 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00db56 940c c5cb 	JMP SUBOPT_0xD8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E5:
00db58 940e dec5 	CALL __SUBD21
00db5a 01fa      	MOVW R30,R20
00db5b 2766      	CLR  R22
00db5c 2777      	CLR  R23
00db5d 940e e0c9 	CALL __CPD21
00db5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E6:
00db60 940e dec5 	CALL __SUBD21
                +
00db62 e0e0     +LDI R30 , LOW ( 0x200 )
00db63 e0f2     +LDI R31 , HIGH ( 0x200 )
00db64 e060     +LDI R22 , BYTE3 ( 0x200 )
00db65 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00db66 940e df5c 	CALL __MULD12U
00db68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E7:
00db69 9615      	ADIW R26,5
00db6a 91ec      	LD   R30,X
00db6b 0fe4      	ADD  R30,R20
00db6c 93ec      	ST   X,R30
00db6d 01fa      	MOVW R30,R20
00db6e 0fee      	LSL  R30
00db6f 1fff      	ROL  R31
00db70 2ffe      	MOV  R31,R30
00db71 e0e0      	LDI  R30,0
00db72 019f      	MOVW R18,R30
00db73 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E8:
00db74 81e1      	LDD  R30,Z+1
00db75 93ea      	ST   -Y,R30
00db76 8deb      	LDD  R30,Y+27
00db77 8dfc      	LDD  R31,Y+27+1
00db78 96b0      	ADIW R30,32
00db79 93fa      	ST   -Y,R31
00db7a 93ea      	ST   -Y,R30
00db7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3E9:
                +
00db7c 89a6     +LDD R26 , Z + 22
00db7d 89b7     +LDD R27 , Z + 22 + 1
00db7e 8d80     +LDD R24 , Z + 22 + 2
00db7f 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00db80 940e e063 	CALL __PUTPARD2
00db82 e0a1      	LDI  R26,LOW(1)
00db83 940e a880 	CALL _disk_write
00db85 30e0      	CPI  R30,0
00db86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3EA:
00db87 9614      	ADIW R26,4
00db88 91ec      	LD   R30,X
00db89 7bef      	ANDI R30,0xBF
00db8a 93ec      	ST   X,R30
00db8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EB:
00db8c 9615      	ADIW R26,5
00db8d 91ec      	LD   R30,X
00db8e 5fef      	SUBI R30,-LOW(1)
00db8f 93ec      	ST   X,R30
00db90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3EC:
00db91 9616      	ADIW R26,6
00db92 940e e02a 	CALL __GETW1P
00db94 70f1      	ANDI R31,HIGH(0x1FF)
00db95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3ED:
00db96 9636      	ADIW R30,6
00db97 010f      	MOVW R0,R30
00db98 01df      	MOVW R26,R30
00db99 940e e02e 	CALL __GETD1P
00db9b 01df      	MOVW R26,R30
00db9c 01cb      	MOVW R24,R22
00db9d 01f9      	MOVW R30,R18
00db9e ceca      	RJMP SUBOPT_0x3C0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3EE:
00db9f 91ed      	LD   R30,X+
00dba0 91fd      	LD   R31,X+
00dba1 0fe2      	ADD  R30,R18
00dba2 1ff3      	ADC  R31,R19
00dba3 93fe      	ST   -X,R31
00dba4 93ee      	ST   -X,R30
00dba5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3EF:
00dba6 89ae      	LDD  R26,Y+22
00dba7 89bf      	LDD  R27,Y+22+1
00dba8 caa5      	RJMP SUBOPT_0x33B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F0:
00dba9 89ae      	LDD  R26,Y+22
00dbaa 89bf      	LDD  R27,Y+22+1
00dbab 961a      	ADIW R26,10
00dbac 940e e02e 	CALL __GETD1P
00dbae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F1:
00dbaf 89ee      	LDD  R30,Y+22
00dbb0 89ff      	LDD  R31,Y+22+1
                +
00dbb1 81a6     +LDD R26 , Z + 6
00dbb2 81b7     +LDD R27 , Z + 6 + 1
00dbb3 8580     +LDD R24 , Z + 6 + 2
00dbb4 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00dbb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3F2:
00dbb6 89ae      	LDD  R26,Y+22
00dbb7 89bf      	LDD  R27,Y+22+1
00dbb8 940e e02a 	CALL __GETW1P
00dbba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F3:
00dbbb 8de8      	LDD  R30,Y+24
00dbbc 8df9      	LDD  R31,Y+24+1
                +
00dbbd 89a2     +LDD R26 , Z + 18
00dbbe 89b3     +LDD R27 , Z + 18 + 1
00dbbf 8984     +LDD R24 , Z + 18 + 2
00dbc0 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00dbc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3F4:
00dbc2 89ae      	LDD  R26,Y+22
00dbc3 89bf      	LDD  R27,Y+22+1
00dbc4 9614      	ADIW R26,4
00dbc5 91ec      	LD   R30,X
00dbc6 68e0      	ORI  R30,0x80
00dbc7 93ec      	ST   X,R30
00dbc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F5:
00dbc9 81e1      	LDD  R30,Z+1
00dbca 93ea      	ST   -Y,R30
00dbcb 89ef      	LDD  R30,Y+23
00dbcc 8df8      	LDD  R31,Y+23+1
00dbcd 96b0      	ADIW R30,32
00dbce 93fa      	ST   -Y,R31
00dbcf 93ea      	ST   -Y,R30
00dbd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F6:
00dbd1 89ee      	LDD  R30,Y+22
00dbd2 89ff      	LDD  R31,Y+22+1
00dbd3 81e5      	LDD  R30,Z+5
00dbd4 e0f0      	LDI  R31,0
00dbd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3F7:
00dbd6 89ee      	LDD  R30,Y+22
00dbd7 89ff      	LDD  R31,Y+22+1
                +
00dbd8 89a6     +LDD R26 , Z + 22
00dbd9 89b7     +LDD R27 , Z + 22 + 1
00dbda 8d80     +LDD R24 , Z + 22 + 2
00dbdb 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00dbdc 940c c24c 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3F8:
00dbde 89ee      	LDD  R30,Y+22
00dbdf 89ff      	LDD  R31,Y+22+1
00dbe0 96b0      	ADIW R30,32
00dbe1 93fa      	ST   -Y,R31
00dbe2 93ea      	ST   -Y,R30
00dbe3 8de8      	LDD  R30,Y+24
00dbe4 8df9      	LDD  R31,Y+24+1
00dbe5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3F9:
00dbe6 89ad      	LDD  R26,Y+21
00dbe7 89be      	LDD  R27,Y+21+1
00dbe8 ca65      	RJMP SUBOPT_0x33B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3FA:
00dbe9 89ad      	LDD  R26,Y+21
00dbea 89be      	LDD  R27,Y+21+1
00dbeb 961a      	ADIW R26,10
00dbec 940e e02e 	CALL __GETD1P
00dbee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3FB:
                +
00dbef 89a9     +LDD R26 , Y + 17
00dbf0 89ba     +LDD R27 , Y + 17 + 1
00dbf1 898b     +LDD R24 , Y + 17 + 2
00dbf2 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00dbf3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FC:
                +
00dbf4 8be9     +STD Y + 17 , R30
00dbf5 8bfa     +STD Y + 17 + 1 , R31
00dbf6 8b6b     +STD Y + 17 + 2 , R22
00dbf7 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00dbf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3FD:
                +
00dbf9 89ad     +LDD R26 , Y + 21
00dbfa 89be     +LDD R27 , Y + 21 + 1
00dbfb 9616     +ADIW R26 , 6
00dbfc 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00dbfe 89ad      	LDD  R26,Y+21
00dbff 89be      	LDD  R27,Y+21+1
00dc00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3FE:
00dc01 89ad      	LDD  R26,Y+21
00dc02 89be      	LDD  R27,Y+21+1
00dc03 940e e02a 	CALL __GETW1P
00dc05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3FF:
                +
00dc06 89e9     +LDD R30 , Y + 17
00dc07 89fa     +LDD R31 , Y + 17 + 1
00dc08 896b     +LDD R22 , Y + 17 + 2
00dc09 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00dc0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x400:
00dc0b 940e c5d0 	CALL SUBOPT_0xD9
00dc0d 01df      	MOVW R26,R30
00dc0e 01cb      	MOVW R24,R22
00dc0f 940e c305 	CALL SUBOPT_0x6B
00dc11 940e dfb2 	CALL __DIVD21U
00dc13 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x401:
00dc14 940e e02e 	CALL __GETD1P
                +
00dc16 87ed     +STD Y + 13 , R30
00dc17 87fe     +STD Y + 13 + 1 , R31
00dc18 876f     +STD Y + 13 + 2 , R22
00dc19 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00dc1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x402:
                +
00dc1b 85ed     +LDD R30 , Y + 13
00dc1c 85fe     +LDD R31 , Y + 13 + 1
00dc1d 856f     +LDD R22 , Y + 13 + 2
00dc1e 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00dc1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x403:
00dc20 940e ae19 	CALL _create_chain_G103
                +
00dc22 87ed     +STD Y + 13 , R30
00dc23 87fe     +STD Y + 13 + 1 , R31
00dc24 876f     +STD Y + 13 + 2 , R22
00dc25 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00dc26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x404:
                +
00dc27 85ad     +LDD R26 , Y + 13
00dc28 85be     +LDD R27 , Y + 13 + 1
00dc29 858f     +LDD R24 , Y + 13 + 2
00dc2a 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00dc2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x405:
00dc2c 89ad      	LDD  R26,Y+21
00dc2d 89be      	LDD  R27,Y+21+1
00dc2e 9614      	ADIW R26,4
00dc2f 91ec      	LD   R30,X
00dc30 68e0      	ORI  R30,0x80
00dc31 93ec      	ST   X,R30
00dc32 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x406:
00dc33 dfe7      	RCALL SUBOPT_0x402
                +
00dc34 89ad     +LDD R26 , Y + 21
00dc35 89be     +LDD R27 , Y + 21 + 1
00dc36 9652     +ADIW R26 , 18
00dc37 940e e039+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00dc39 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x407:
                +
00dc3a 85af     +LDD R26 , Y + 15
00dc3b 89b8     +LDD R27 , Y + 15 + 1
00dc3c 8989     +LDD R24 , Y + 15 + 2
00dc3d 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00dc3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x408:
00dc3f 89ed      	LDD  R30,Y+21
00dc40 89fe      	LDD  R31,Y+21+1
00dc41 9636      	ADIW R30,6
00dc42 010f      	MOVW R0,R30
00dc43 01df      	MOVW R26,R30
00dc44 940e e02e 	CALL __GETD1P
00dc46 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x409:
00dc47 89ed      	LDD  R30,Y+21
00dc48 89fe      	LDD  R31,Y+21+1
                +
00dc49 81a6     +LDD R26 , Z + 6
00dc4a 81b7     +LDD R27 , Z + 6 + 1
00dc4b 8580     +LDD R24 , Z + 6 + 2
00dc4c 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00dc4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x40A:
00dc4e 940e c5b5 	CALL SUBOPT_0xD3
00dc50 940e c514 	CALL SUBOPT_0xBB
00dc52 ce9a      	RJMP SUBOPT_0x3D4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40B:
00dc53 940e c4af 	CALL SUBOPT_0xA8
00dc55 ccc4      	RJMP SUBOPT_0x38F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x40C:
00dc56 940e c075 	CALL SUBOPT_0xB
                +
00dc58 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00dc59 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00dc5a ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00dc5b e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00dc5c cce0      	RJMP SUBOPT_0x396
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x40D:
00dc5d 85a8      	LDD  R26,Y+8
00dc5e 85b9      	LDD  R27,Y+8+1
00dc5f 9611      	ADIW R26,1
00dc60 87a8      	STD  Y+8,R26
00dc61 87b9      	STD  Y+8+1,R27
00dc62 9711      	SBIW R26,1
00dc63 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x40E:
00dc64 932a      	ST   -Y,R18
00dc65 81af      	LDD  R26,Y+7
00dc66 85b8      	LDD  R27,Y+7+1
00dc67 940e c305 	CALL SUBOPT_0x6B
00dc69 bf6c      	OUT  EIND,R22
00dc6a 9519      	EICALL
00dc6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x40F:
                +
00dc6c 01fe     +MOVW R30 , R28
00dc6d 5ae0     +SUBI R30 , LOW ( - 96 )
00dc6e 4fff     +SBCI R31 , HIGH ( - 96 )
00dc6f 9001     +LD R0 , Z +
00dc70 81f0     +LD R31 , Z
00dc71 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00dc72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x410:
00dc73 9734      	SBIW R30,4
                +
00dc74 01de     +MOVW R26 , R28
00dc75 5aa0     +SUBI R26 , LOW ( - 96 )
00dc76 4fbf     +SBCI R27 , HIGH ( - 96 )
00dc77 93ed     +ST X + , R30
00dc78 93fc     +ST X , R31
                 	__PUTW1SX 96
00dc79 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x411:
00dc7a 81af      	LDD  R26,Y+7
00dc7b 85b8      	LDD  R27,Y+7+1
00dc7c 940e c305 	CALL SUBOPT_0x6B
00dc7e bf6c      	OUT  EIND,R22
00dc7f 9519      	EICALL
00dc80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x412:
                +
00dc81 01de     +MOVW R26 , R28
00dc82 5aa0     +SUBI R26 , LOW ( - 96 )
00dc83 4fbf     +SBCI R27 , HIGH ( - 96 )
00dc84 900d     +LD R0 , X +
00dc85 91bc     +LD R27 , X
00dc86 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00dc87 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x413:
00dc88 dfe3      	RCALL SUBOPT_0x40F
00dc89 cfe9      	RJMP SUBOPT_0x410
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x414:
00dc8a 8be8      	STD  Y+16,R30
00dc8b 8bf9      	STD  Y+16+1,R31
00dc8c 89a8      	LDD  R26,Y+16
00dc8d 89b9      	LDD  R27,Y+16+1
00dc8e 940e a5c7 	CALL _strlen
00dc90 2f1e      	MOV  R17,R30
00dc91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x415:
00dc92 7f0b      	ANDI R16,LOW(251)
00dc93 8de9      	LDD  R30,Y+25
00dc94 93ea      	ST   -Y,R30
                +
00dc95 01de     +MOVW R26 , R28
00dc96 5aa5     +SUBI R26 , LOW ( - 91 )
00dc97 4fbf     +SBCI R27 , HIGH ( - 91 )
00dc98 900d     +LD R0 , X +
00dc99 91bc     +LD R27 , X
00dc9a 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00dc9b 01fe     +MOVW R30 , R28
00dc9c 5ae3     +SUBI R30 , LOW ( - 93 )
00dc9d 4fff     +SBCI R31 , HIGH ( - 93 )
00dc9e 9001     +LD R0 , Z +
00dc9f 9011     +LD R1 , Z +
00dca0 9161     +LD R22 , Z +
00dca1 8170     +LD R23 , Z
00dca2 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00dca3 bf6c      	OUT  EIND,R22
00dca4 9519      	EICALL
00dca5 3050      	CPI  R21,0
00dca6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x416:
                +
00dca7 e0ec     +LDI R30 , LOW ( _put_buff_G104 )
00dca8 ebfc     +LDI R31 , HIGH ( _put_buff_G104 )
00dca9 e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00dcaa e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00dcab 940e e05e 	CALL __PUTPARD1
00dcad 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00dcae 9858      	cbi  __i2c_port,__scl_bit
00dcaf 9859      	cbi  __i2c_port,__sda_bit
00dcb0 9a50      	sbi  __i2c_dir,__scl_bit
00dcb1 9851      	cbi  __i2c_dir,__sda_bit
00dcb2 c015      	rjmp __i2c_delay2
                 _i2c_start:
00dcb3 9851      	cbi  __i2c_dir,__sda_bit
00dcb4 9850      	cbi  __i2c_dir,__scl_bit
00dcb5 27ee      	clr  r30
00dcb6 0000      	nop
00dcb7 9b49      	sbis __i2c_pin,__sda_bit
00dcb8 9508      	ret
00dcb9 9b48      	sbis __i2c_pin,__scl_bit
00dcba 9508      	ret
00dcbb d004      	rcall __i2c_delay1
00dcbc 9a51      	sbi  __i2c_dir,__sda_bit
00dcbd d002      	rcall __i2c_delay1
00dcbe 9a50      	sbi  __i2c_dir,__scl_bit
00dcbf e0e1      	ldi  r30,1
                 __i2c_delay1:
00dcc0 e06d      	ldi  r22,13
00dcc1 c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00dcc2 9a51      	sbi  __i2c_dir,__sda_bit
00dcc3 9a50      	sbi  __i2c_dir,__scl_bit
00dcc4 d003      	rcall __i2c_delay2
00dcc5 9850      	cbi  __i2c_dir,__scl_bit
00dcc6 dff9      	rcall __i2c_delay1
00dcc7 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00dcc8 e16b      	ldi  r22,27
                 __i2c_delay2l:
00dcc9 956a      	dec  r22
00dcca f7f1      	brne __i2c_delay2l
00dccb 9508      	ret
                 _i2c_read:
00dccc e078      	ldi  r23,8
                 __i2c_read0:
00dccd 9850      	cbi  __i2c_dir,__scl_bit
00dcce dff1      	rcall __i2c_delay1
                 __i2c_read3:
00dccf 9b48      	sbis __i2c_pin,__scl_bit
00dcd0 cffe      	rjmp __i2c_read3
00dcd1 dfee      	rcall __i2c_delay1
00dcd2 9488      	clc
00dcd3 9949      	sbic __i2c_pin,__sda_bit
00dcd4 9408      	sec
00dcd5 9a50      	sbi  __i2c_dir,__scl_bit
00dcd6 dff1      	rcall __i2c_delay2
00dcd7 1fee      	rol  r30
00dcd8 957a      	dec  r23
00dcd9 f799      	brne __i2c_read0
00dcda 2f7a      	mov  r23,r26
00dcdb 2377      	tst  r23
00dcdc f411      	brne __i2c_read1
00dcdd 9851      	cbi  __i2c_dir,__sda_bit
00dcde c001      	rjmp __i2c_read2
                 __i2c_read1:
00dcdf 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00dce0 dfdf      	rcall __i2c_delay1
00dce1 9850      	cbi  __i2c_dir,__scl_bit
00dce2 dfe5      	rcall __i2c_delay2
00dce3 9a50      	sbi  __i2c_dir,__scl_bit
00dce4 dfdb      	rcall __i2c_delay1
00dce5 9851      	cbi  __i2c_dir,__sda_bit
00dce6 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00dce7 e078      	ldi  r23,8
                 __i2c_write0:
00dce8 0faa      	lsl  r26
00dce9 f410      	brcc __i2c_write1
00dcea 9851      	cbi  __i2c_dir,__sda_bit
00dceb c001      	rjmp __i2c_write2
                 __i2c_write1:
00dcec 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00dced dfda      	rcall __i2c_delay2
00dcee 9850      	cbi  __i2c_dir,__scl_bit
00dcef dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00dcf0 9b48      	sbis __i2c_pin,__scl_bit
00dcf1 cffe      	rjmp __i2c_write3
00dcf2 dfcd      	rcall __i2c_delay1
00dcf3 9a50      	sbi  __i2c_dir,__scl_bit
00dcf4 957a      	dec  r23
00dcf5 f791      	brne __i2c_write0
00dcf6 9851      	cbi  __i2c_dir,__sda_bit
00dcf7 dfc8      	rcall __i2c_delay1
00dcf8 9850      	cbi  __i2c_dir,__scl_bit
00dcf9 dfce      	rcall __i2c_delay2
00dcfa e0e1      	ldi  r30,1
00dcfb 9949      	sbic __i2c_pin,__sda_bit
00dcfc 27ee      	clr  r30
00dcfd 9a50      	sbi  __i2c_dir,__scl_bit
00dcfe cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00dcff 9610      	adiw r26,0
00dd00 f039      	breq __delay_ms1
                 __delay_ms0:
                +
00dd01 ed80     +LDI R24 , LOW ( 0x7D0 )
00dd02 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00dd03 9701     +SBIW R24 , 1
00dd04 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00dd05 95a8      	wdr
00dd06 9711      	sbiw r26,1
00dd07 f7c9      	brne __delay_ms0
                 __delay_ms1:
00dd08 9508      	ret
                 
                 __ANEGF1:
00dd09 9730      	SBIW R30,0
00dd0a 4060      	SBCI R22,0
00dd0b 4070      	SBCI R23,0
00dd0c f009      	BREQ __ANEGF10
00dd0d 5870      	SUBI R23,0x80
                 __ANEGF10:
00dd0e 9508      	RET
                 
                 __ROUND_REPACK:
00dd0f 2355      	TST  R21
00dd10 f442      	BRPL __REPACK
00dd11 3850      	CPI  R21,0x80
00dd12 f411      	BRNE __ROUND_REPACK0
00dd13 ffe0      	SBRS R30,0
00dd14 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00dd15 9631      	ADIW R30,1
00dd16 1f69      	ADC  R22,R25
00dd17 1f79      	ADC  R23,R25
00dd18 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00dd19 e850      	LDI  R21,0x80
00dd1a 2757      	EOR  R21,R23
00dd1b f411      	BRNE __REPACK0
00dd1c 935f      	PUSH R21
00dd1d c0cf      	RJMP __ZERORES
                 __REPACK0:
00dd1e 3f5f      	CPI  R21,0xFF
00dd1f f031      	BREQ __REPACK1
00dd20 0f66      	LSL  R22
00dd21 0c00      	LSL  R0
00dd22 9557      	ROR  R21
00dd23 9567      	ROR  R22
00dd24 2f75      	MOV  R23,R21
00dd25 9508      	RET
                 __REPACK1:
00dd26 935f      	PUSH R21
00dd27 2000      	TST  R0
00dd28 f00a      	BRMI __REPACK2
00dd29 c0cf      	RJMP __MAXRES
                 __REPACK2:
00dd2a c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00dd2b e850      	LDI  R21,0x80
00dd2c 2e19      	MOV  R1,R25
00dd2d 2215      	AND  R1,R21
00dd2e 0f88      	LSL  R24
00dd2f 1f99      	ROL  R25
00dd30 2795      	EOR  R25,R21
00dd31 0f55      	LSL  R21
00dd32 9587      	ROR  R24
                 
                 __UNPACK1:
00dd33 e850      	LDI  R21,0x80
00dd34 2e07      	MOV  R0,R23
00dd35 2205      	AND  R0,R21
00dd36 0f66      	LSL  R22
00dd37 1f77      	ROL  R23
00dd38 2775      	EOR  R23,R21
00dd39 0f55      	LSL  R21
00dd3a 9567      	ROR  R22
00dd3b 9508      	RET
                 
                 __CFD1U:
00dd3c 9468      	SET
00dd3d c001      	RJMP __CFD1U0
                 __CFD1:
00dd3e 94e8      	CLT
                 __CFD1U0:
00dd3f 935f      	PUSH R21
00dd40 dff2      	RCALL __UNPACK1
00dd41 3870      	CPI  R23,0x80
00dd42 f018      	BRLO __CFD10
00dd43 3f7f      	CPI  R23,0xFF
00dd44 f408      	BRCC __CFD10
00dd45 c0a7      	RJMP __ZERORES
                 __CFD10:
00dd46 e156      	LDI  R21,22
00dd47 1b57      	SUB  R21,R23
00dd48 f4aa      	BRPL __CFD11
00dd49 9551      	NEG  R21
00dd4a 3058      	CPI  R21,8
00dd4b f40e      	BRTC __CFD19
00dd4c 3059      	CPI  R21,9
                 __CFD19:
00dd4d f030      	BRLO __CFD17
00dd4e efef      	SER  R30
00dd4f efff      	SER  R31
00dd50 ef6f      	SER  R22
00dd51 e77f      	LDI  R23,0x7F
00dd52 f977      	BLD  R23,7
00dd53 c01a      	RJMP __CFD15
                 __CFD17:
00dd54 2777      	CLR  R23
00dd55 2355      	TST  R21
00dd56 f0b9      	BREQ __CFD15
                 __CFD18:
00dd57 0fee      	LSL  R30
00dd58 1fff      	ROL  R31
00dd59 1f66      	ROL  R22
00dd5a 1f77      	ROL  R23
00dd5b 955a      	DEC  R21
00dd5c f7d1      	BRNE __CFD18
00dd5d c010      	RJMP __CFD15
                 __CFD11:
00dd5e 2777      	CLR  R23
                 __CFD12:
00dd5f 3058      	CPI  R21,8
00dd60 f028      	BRLO __CFD13
00dd61 2fef      	MOV  R30,R31
00dd62 2ff6      	MOV  R31,R22
00dd63 2f67      	MOV  R22,R23
00dd64 5058      	SUBI R21,8
00dd65 cff9      	RJMP __CFD12
                 __CFD13:
00dd66 2355      	TST  R21
00dd67 f031      	BREQ __CFD15
                 __CFD14:
00dd68 9576      	LSR  R23
00dd69 9567      	ROR  R22
00dd6a 95f7      	ROR  R31
00dd6b 95e7      	ROR  R30
00dd6c 955a      	DEC  R21
00dd6d f7d1      	BRNE __CFD14
                 __CFD15:
00dd6e 2000      	TST  R0
00dd6f f40a      	BRPL __CFD16
00dd70 d167      	RCALL __ANEGD1
                 __CFD16:
00dd71 915f      	POP  R21
00dd72 9508      	RET
                 
                 __CDF1U:
00dd73 9468      	SET
00dd74 c001      	RJMP __CDF1U0
                 __CDF1:
00dd75 94e8      	CLT
                 __CDF1U0:
00dd76 9730      	SBIW R30,0
00dd77 4060      	SBCI R22,0
00dd78 4070      	SBCI R23,0
00dd79 f0b1      	BREQ __CDF10
00dd7a 2400      	CLR  R0
00dd7b f026      	BRTS __CDF11
00dd7c 2377      	TST  R23
00dd7d f412      	BRPL __CDF11
00dd7e 9400      	COM  R0
00dd7f d158      	RCALL __ANEGD1
                 __CDF11:
00dd80 2e17      	MOV  R1,R23
00dd81 e17e      	LDI  R23,30
00dd82 2011      	TST  R1
                 __CDF12:
00dd83 f032      	BRMI __CDF13
00dd84 957a      	DEC  R23
00dd85 0fee      	LSL  R30
00dd86 1fff      	ROL  R31
00dd87 1f66      	ROL  R22
00dd88 1c11      	ROL  R1
00dd89 cff9      	RJMP __CDF12
                 __CDF13:
00dd8a 2fef      	MOV  R30,R31
00dd8b 2ff6      	MOV  R31,R22
00dd8c 2d61      	MOV  R22,R1
00dd8d 935f      	PUSH R21
00dd8e df8a      	RCALL __REPACK
00dd8f 915f      	POP  R21
                 __CDF10:
00dd90 9508      	RET
                 
                 __SWAPACC:
00dd91 934f      	PUSH R20
00dd92 01af      	MOVW R20,R30
00dd93 01fd      	MOVW R30,R26
00dd94 01da      	MOVW R26,R20
00dd95 01ab      	MOVW R20,R22
00dd96 01bc      	MOVW R22,R24
00dd97 01ca      	MOVW R24,R20
00dd98 2d40      	MOV  R20,R0
00dd99 2c01      	MOV  R0,R1
00dd9a 2e14      	MOV  R1,R20
00dd9b 914f      	POP  R20
00dd9c 9508      	RET
                 
                 __UADD12:
00dd9d 0fea      	ADD  R30,R26
00dd9e 1ffb      	ADC  R31,R27
00dd9f 1f68      	ADC  R22,R24
00dda0 9508      	RET
                 
                 __NEGMAN1:
00dda1 95e0      	COM  R30
00dda2 95f0      	COM  R31
00dda3 9560      	COM  R22
00dda4 5fef      	SUBI R30,-1
00dda5 4fff      	SBCI R31,-1
00dda6 4f6f      	SBCI R22,-1
00dda7 9508      	RET
                 
                 __SUBF12:
00dda8 935f      	PUSH R21
00dda9 df81      	RCALL __UNPACK
00ddaa 3890      	CPI  R25,0x80
00ddab f171      	BREQ __ADDF129
00ddac e850      	LDI  R21,0x80
00ddad 2615      	EOR  R1,R21
                 
00ddae c004      	RJMP __ADDF120
                 
                 __ADDF12:
00ddaf 935f      	PUSH R21
00ddb0 df7a      	RCALL __UNPACK
00ddb1 3890      	CPI  R25,0x80
00ddb2 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00ddb3 3870      	CPI  R23,0x80
00ddb4 f121      	BREQ __ADDF128
                 __ADDF121:
00ddb5 2f57      	MOV  R21,R23
00ddb6 1b59      	SUB  R21,R25
00ddb7 f12b      	BRVS __ADDF1211
00ddb8 f412      	BRPL __ADDF122
00ddb9 dfd7      	RCALL __SWAPACC
00ddba cffa      	RJMP __ADDF121
                 __ADDF122:
00ddbb 3158      	CPI  R21,24
00ddbc f018      	BRLO __ADDF123
00ddbd 27aa      	CLR  R26
00ddbe 27bb      	CLR  R27
00ddbf 2788      	CLR  R24
                 __ADDF123:
00ddc0 3058      	CPI  R21,8
00ddc1 f028      	BRLO __ADDF124
00ddc2 2fab      	MOV  R26,R27
00ddc3 2fb8      	MOV  R27,R24
00ddc4 2788      	CLR  R24
00ddc5 5058      	SUBI R21,8
00ddc6 cff9      	RJMP __ADDF123
                 __ADDF124:
00ddc7 2355      	TST  R21
00ddc8 f029      	BREQ __ADDF126
                 __ADDF125:
00ddc9 9586      	LSR  R24
00ddca 95b7      	ROR  R27
00ddcb 95a7      	ROR  R26
00ddcc 955a      	DEC  R21
00ddcd f7d9      	BRNE __ADDF125
                 __ADDF126:
00ddce 2d50      	MOV  R21,R0
00ddcf 2551      	EOR  R21,R1
00ddd0 f072      	BRMI __ADDF127
00ddd1 dfcb      	RCALL __UADD12
00ddd2 f438      	BRCC __ADDF129
00ddd3 9567      	ROR  R22
00ddd4 95f7      	ROR  R31
00ddd5 95e7      	ROR  R30
00ddd6 9573      	INC  R23
00ddd7 f413      	BRVC __ADDF129
00ddd8 c020      	RJMP __MAXRES
                 __ADDF128:
00ddd9 dfb7      	RCALL __SWAPACC
                 __ADDF129:
00ddda df3e      	RCALL __REPACK
00dddb 915f      	POP  R21
00dddc 9508      	RET
                 __ADDF1211:
00dddd f7d8      	BRCC __ADDF128
00ddde cffb      	RJMP __ADDF129
                 __ADDF127:
00dddf 1bea      	SUB  R30,R26
00dde0 0bfb      	SBC  R31,R27
00dde1 0b68      	SBC  R22,R24
00dde2 f051      	BREQ __ZERORES
00dde3 f410      	BRCC __ADDF1210
00dde4 9400      	COM  R0
00dde5 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00dde6 2366      	TST  R22
00dde7 f392      	BRMI __ADDF129
00dde8 0fee      	LSL  R30
00dde9 1fff      	ROL  R31
00ddea 1f66      	ROL  R22
00ddeb 957a      	DEC  R23
00ddec f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00dded 27ee      	CLR  R30
00ddee 27ff      	CLR  R31
00ddef 2766      	CLR  R22
00ddf0 2777      	CLR  R23
00ddf1 915f      	POP  R21
00ddf2 9508      	RET
                 
                 __MINRES:
00ddf3 efef      	SER  R30
00ddf4 efff      	SER  R31
00ddf5 e76f      	LDI  R22,0x7F
00ddf6 ef7f      	SER  R23
00ddf7 915f      	POP  R21
00ddf8 9508      	RET
                 
                 __MAXRES:
00ddf9 efef      	SER  R30
00ddfa efff      	SER  R31
00ddfb e76f      	LDI  R22,0x7F
00ddfc e77f      	LDI  R23,0x7F
00ddfd 915f      	POP  R21
00ddfe 9508      	RET
                 
                 __MULF12:
00ddff 935f      	PUSH R21
00de00 df2a      	RCALL __UNPACK
00de01 3870      	CPI  R23,0x80
00de02 f351      	BREQ __ZERORES
00de03 3890      	CPI  R25,0x80
00de04 f341      	BREQ __ZERORES
00de05 2401      	EOR  R0,R1
00de06 9408      	SEC
00de07 1f79      	ADC  R23,R25
00de08 f423      	BRVC __MULF124
00de09 f31c      	BRLT __ZERORES
                 __MULF125:
00de0a 2000      	TST  R0
00de0b f33a      	BRMI __MINRES
00de0c cfec      	RJMP __MAXRES
                 __MULF124:
00de0d 920f      	PUSH R0
00de0e 931f      	PUSH R17
00de0f 932f      	PUSH R18
00de10 933f      	PUSH R19
00de11 934f      	PUSH R20
00de12 2711      	CLR  R17
00de13 2722      	CLR  R18
00de14 2799      	CLR  R25
00de15 9f68      	MUL  R22,R24
00de16 01a0      	MOVW R20,R0
00de17 9f8f      	MUL  R24,R31
00de18 2d30      	MOV  R19,R0
00de19 0d41      	ADD  R20,R1
00de1a 1f59      	ADC  R21,R25
00de1b 9f6b      	MUL  R22,R27
00de1c 0d30      	ADD  R19,R0
00de1d 1d41      	ADC  R20,R1
00de1e 1f59      	ADC  R21,R25
00de1f 9f8e      	MUL  R24,R30
00de20 d027      	RCALL __MULF126
00de21 9fbf      	MUL  R27,R31
00de22 d025      	RCALL __MULF126
00de23 9f6a      	MUL  R22,R26
00de24 d023      	RCALL __MULF126
00de25 9fbe      	MUL  R27,R30
00de26 d01d      	RCALL __MULF127
00de27 9faf      	MUL  R26,R31
00de28 d01b      	RCALL __MULF127
00de29 9fae      	MUL  R26,R30
00de2a 0d11      	ADD  R17,R1
00de2b 1f29      	ADC  R18,R25
00de2c 1f39      	ADC  R19,R25
00de2d 1f49      	ADC  R20,R25
00de2e 1f59      	ADC  R21,R25
00de2f 2fe3      	MOV  R30,R19
00de30 2ff4      	MOV  R31,R20
00de31 2f65      	MOV  R22,R21
00de32 2f52      	MOV  R21,R18
00de33 914f      	POP  R20
00de34 913f      	POP  R19
00de35 912f      	POP  R18
00de36 911f      	POP  R17
00de37 900f      	POP  R0
00de38 2366      	TST  R22
00de39 f02a      	BRMI __MULF122
00de3a 0f55      	LSL  R21
00de3b 1fee      	ROL  R30
00de3c 1fff      	ROL  R31
00de3d 1f66      	ROL  R22
00de3e c002      	RJMP __MULF123
                 __MULF122:
00de3f 9573      	INC  R23
00de40 f24b      	BRVS __MULF125
                 __MULF123:
00de41 decd      	RCALL __ROUND_REPACK
00de42 915f      	POP  R21
00de43 9508      	RET
                 
                 __MULF127:
00de44 0d10      	ADD  R17,R0
00de45 1d21      	ADC  R18,R1
00de46 1f39      	ADC  R19,R25
00de47 c002      	RJMP __MULF128
                 __MULF126:
00de48 0d20      	ADD  R18,R0
00de49 1d31      	ADC  R19,R1
                 __MULF128:
00de4a 1f49      	ADC  R20,R25
00de4b 1f59      	ADC  R21,R25
00de4c 9508      	RET
                 
                 __DIVF21:
00de4d 935f      	PUSH R21
00de4e dedc      	RCALL __UNPACK
00de4f 3870      	CPI  R23,0x80
00de50 f421      	BRNE __DIVF210
00de51 2011      	TST  R1
                 __DIVF211:
00de52 f40a      	BRPL __DIVF219
00de53 cf9f      	RJMP __MINRES
                 __DIVF219:
00de54 cfa4      	RJMP __MAXRES
                 __DIVF210:
00de55 3890      	CPI  R25,0x80
00de56 f409      	BRNE __DIVF218
                 __DIVF217:
00de57 cf95      	RJMP __ZERORES
                 __DIVF218:
00de58 2401      	EOR  R0,R1
00de59 9408      	SEC
00de5a 0b97      	SBC  R25,R23
00de5b f41b      	BRVC __DIVF216
00de5c f3d4      	BRLT __DIVF217
00de5d 2000      	TST  R0
00de5e cff3      	RJMP __DIVF211
                 __DIVF216:
00de5f 2f79      	MOV  R23,R25
00de60 931f      	PUSH R17
00de61 932f      	PUSH R18
00de62 933f      	PUSH R19
00de63 934f      	PUSH R20
00de64 2411      	CLR  R1
00de65 2711      	CLR  R17
00de66 2722      	CLR  R18
00de67 2733      	CLR  R19
00de68 2744      	CLR  R20
00de69 2755      	CLR  R21
00de6a e290      	LDI  R25,32
                 __DIVF212:
00de6b 17ae      	CP   R26,R30
00de6c 07bf      	CPC  R27,R31
00de6d 0786      	CPC  R24,R22
00de6e 0741      	CPC  R20,R17
00de6f f030      	BRLO __DIVF213
00de70 1bae      	SUB  R26,R30
00de71 0bbf      	SBC  R27,R31
00de72 0b86      	SBC  R24,R22
00de73 0b41      	SBC  R20,R17
00de74 9408      	SEC
00de75 c001      	RJMP __DIVF214
                 __DIVF213:
00de76 9488      	CLC
                 __DIVF214:
00de77 1f55      	ROL  R21
00de78 1f22      	ROL  R18
00de79 1f33      	ROL  R19
00de7a 1c11      	ROL  R1
00de7b 1faa      	ROL  R26
00de7c 1fbb      	ROL  R27
00de7d 1f88      	ROL  R24
00de7e 1f44      	ROL  R20
00de7f 959a      	DEC  R25
00de80 f751      	BRNE __DIVF212
00de81 01f9      	MOVW R30,R18
00de82 2d61      	MOV  R22,R1
00de83 914f      	POP  R20
00de84 913f      	POP  R19
00de85 912f      	POP  R18
00de86 911f      	POP  R17
00de87 2366      	TST  R22
00de88 f032      	BRMI __DIVF215
00de89 0f55      	LSL  R21
00de8a 1fee      	ROL  R30
00de8b 1fff      	ROL  R31
00de8c 1f66      	ROL  R22
00de8d 957a      	DEC  R23
00de8e f243      	BRVS __DIVF217
                 __DIVF215:
00de8f de7f      	RCALL __ROUND_REPACK
00de90 915f      	POP  R21
00de91 9508      	RET
                 
                 __CMPF12:
00de92 2399      	TST  R25
00de93 f09a      	BRMI __CMPF120
00de94 2377      	TST  R23
00de95 f042      	BRMI __CMPF121
00de96 1797      	CP   R25,R23
00de97 f048      	BRLO __CMPF122
00de98 f429      	BRNE __CMPF121
00de99 17ae      	CP   R26,R30
00de9a 07bf      	CPC  R27,R31
00de9b 0786      	CPC  R24,R22
00de9c f020      	BRLO __CMPF122
00de9d f031      	BREQ __CMPF123
                 __CMPF121:
00de9e 9498      	CLZ
00de9f 9488      	CLC
00dea0 9508      	RET
                 __CMPF122:
00dea1 9498      	CLZ
00dea2 9408      	SEC
00dea3 9508      	RET
                 __CMPF123:
00dea4 9418      	SEZ
00dea5 9488      	CLC
00dea6 9508      	RET
                 __CMPF120:
00dea7 2377      	TST  R23
00dea8 f7c2      	BRPL __CMPF122
00dea9 1797      	CP   R25,R23
00deaa f398      	BRLO __CMPF121
00deab f7a9      	BRNE __CMPF122
00deac 17ea      	CP   R30,R26
00dead 07fb      	CPC  R31,R27
00deae 0768      	CPC  R22,R24
00deaf f388      	BRLO __CMPF122
00deb0 f399      	BREQ __CMPF123
00deb1 cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00deb2 2400      	CLR  R0
00deb3 0daf      	ADD  R26,R15
00deb4 1db0      	ADC  R27,R0
00deb5 9508      	RET
                 
                 __ADDD12:
00deb6 0fea      	ADD  R30,R26
00deb7 1ffb      	ADC  R31,R27
00deb8 1f68      	ADC  R22,R24
00deb9 1f79      	ADC  R23,R25
00deba 9508      	RET
                 
                 __ADDD21:
00debb 0fae      	ADD  R26,R30
00debc 1fbf      	ADC  R27,R31
00debd 1f86      	ADC  R24,R22
00debe 1f97      	ADC  R25,R23
00debf 9508      	RET
                 
                 __SUBD12:
00dec0 1bea      	SUB  R30,R26
00dec1 0bfb      	SBC  R31,R27
00dec2 0b68      	SBC  R22,R24
00dec3 0b79      	SBC  R23,R25
00dec4 9508      	RET
                 
                 __SUBD21:
00dec5 1bae      	SUB  R26,R30
00dec6 0bbf      	SBC  R27,R31
00dec7 0b86      	SBC  R24,R22
00dec8 0b97      	SBC  R25,R23
00dec9 9508      	RET
                 
                 __ANDD12:
00deca 23ea      	AND  R30,R26
00decb 23fb      	AND  R31,R27
00decc 2368      	AND  R22,R24
00decd 2379      	AND  R23,R25
00dece 9508      	RET
                 
                 __ORD12:
00decf 2bea      	OR   R30,R26
00ded0 2bfb      	OR   R31,R27
00ded1 2b68      	OR   R22,R24
00ded2 2b79      	OR   R23,R25
00ded3 9508      	RET
                 
                 __ANEGW1:
00ded4 95f1      	NEG  R31
00ded5 95e1      	NEG  R30
00ded6 40f0      	SBCI R31,0
00ded7 9508      	RET
                 
                 __ANEGD1:
00ded8 95f0      	COM  R31
00ded9 9560      	COM  R22
00deda 9570      	COM  R23
00dedb 95e1      	NEG  R30
00dedc 4fff      	SBCI R31,-1
00dedd 4f6f      	SBCI R22,-1
00dede 4f7f      	SBCI R23,-1
00dedf 9508      	RET
                 
                 __LSLW12:
00dee0 23ee      	TST  R30
00dee1 2e0e      	MOV  R0,R30
00dee2 01fd      	MOVW R30,R26
00dee3 f021      	BREQ __LSLW12R
                 __LSLW12L:
00dee4 0fee      	LSL  R30
00dee5 1fff      	ROL  R31
00dee6 940a      	DEC  R0
00dee7 f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00dee8 9508      	RET
                 
                 __LSLD12:
00dee9 23ee      	TST  R30
00deea 2e0e      	MOV  R0,R30
00deeb 01fd      	MOVW R30,R26
00deec 01bc      	MOVW R22,R24
00deed f031      	BREQ __LSLD12R
                 __LSLD12L:
00deee 0fee      	LSL  R30
00deef 1fff      	ROL  R31
00def0 1f66      	ROL  R22
00def1 1f77      	ROL  R23
00def2 940a      	DEC  R0
00def3 f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00def4 9508      	RET
                 
                 __LSRD12:
00def5 23ee      	TST  R30
00def6 2e0e      	MOV  R0,R30
00def7 01fd      	MOVW R30,R26
00def8 01bc      	MOVW R22,R24
00def9 f031      	BREQ __LSRD12R
                 __LSRD12L:
00defa 9576      	LSR  R23
00defb 9567      	ROR  R22
00defc 95f7      	ROR  R31
00defd 95e7      	ROR  R30
00defe 940a      	DEC  R0
00deff f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00df00 9508      	RET
                 
                 __LSLW4:
00df01 0fee      	LSL  R30
00df02 1fff      	ROL  R31
                 __LSLW3:
00df03 0fee      	LSL  R30
00df04 1fff      	ROL  R31
                 __LSLW2:
00df05 0fee      	LSL  R30
00df06 1fff      	ROL  R31
00df07 0fee      	LSL  R30
00df08 1fff      	ROL  R31
00df09 9508      	RET
                 
                 __ASRW4:
00df0a 95f5      	ASR  R31
00df0b 95e7      	ROR  R30
                 __ASRW3:
00df0c 95f5      	ASR  R31
00df0d 95e7      	ROR  R30
                 __ASRW2:
00df0e 95f5      	ASR  R31
00df0f 95e7      	ROR  R30
00df10 95f5      	ASR  R31
00df11 95e7      	ROR  R30
00df12 9508      	RET
                 
                 __LSRW4:
00df13 95f6      	LSR  R31
00df14 95e7      	ROR  R30
                 __LSRW3:
00df15 95f6      	LSR  R31
00df16 95e7      	ROR  R30
                 __LSRW2:
00df17 95f6      	LSR  R31
00df18 95e7      	ROR  R30
00df19 95f6      	LSR  R31
00df1a 95e7      	ROR  R30
00df1b 9508      	RET
                 
                 __LSRD1:
00df1c 9576      	LSR  R23
00df1d 9567      	ROR  R22
00df1e 95f7      	ROR  R31
00df1f 95e7      	ROR  R30
00df20 9508      	RET
                 
                 __LSLD1:
00df21 0fee      	LSL  R30
00df22 1fff      	ROL  R31
00df23 1f66      	ROL  R22
00df24 1f77      	ROL  R23
00df25 9508      	RET
                 
                 __ASRW8:
00df26 2fef      	MOV  R30,R31
00df27 27ff      	CLR  R31
00df28 fde7      	SBRC R30,7
00df29 efff      	SER  R31
00df2a 9508      	RET
                 
                 __LSRD16:
00df2b 2fe6      	MOV  R30,R22
00df2c 2ff7      	MOV  R31,R23
00df2d e060      	LDI  R22,0
00df2e e070      	LDI  R23,0
00df2f 9508      	RET
                 
                 __LSLD16:
00df30 2f6e      	MOV  R22,R30
00df31 2f7f      	MOV  R23,R31
00df32 e0e0      	LDI  R30,0
00df33 e0f0      	LDI  R31,0
00df34 9508      	RET
                 
                 __CBD1:
00df35 2ffe      	MOV  R31,R30
00df36 0fff      	ADD  R31,R31
00df37 0bff      	SBC  R31,R31
00df38 2f6f      	MOV  R22,R31
00df39 2f7f      	MOV  R23,R31
00df3a 9508      	RET
                 
                 __CWD1:
00df3b 2f6f      	MOV  R22,R31
00df3c 0f66      	ADD  R22,R22
00df3d 0b66      	SBC  R22,R22
00df3e 2f76      	MOV  R23,R22
00df3f 9508      	RET
                 
                 __COMD1:
00df40 95e0      	COM  R30
00df41 95f0      	COM  R31
00df42 9560      	COM  R22
00df43 9570      	COM  R23
00df44 9508      	RET
                 
                 __EQB12:
00df45 17ea      	CP   R30,R26
00df46 e0e1      	LDI  R30,1
00df47 f009      	BREQ __EQB12T
00df48 27ee      	CLR  R30
                 __EQB12T:
00df49 9508      	RET
                 
                 __LNEGB1:
00df4a 23ee      	TST  R30
00df4b e0e1      	LDI  R30,1
00df4c f009      	BREQ __LNEGB1F
00df4d 27ee      	CLR  R30
                 __LNEGB1F:
00df4e 9508      	RET
                 
                 __LNEGW1:
00df4f 2bef      	OR   R30,R31
00df50 e0e1      	LDI  R30,1
00df51 f009      	BREQ __LNEGW1F
00df52 e0e0      	LDI  R30,0
                 __LNEGW1F:
00df53 9508      	RET
                 
                 __MULW12U:
00df54 9ffa      	MUL  R31,R26
00df55 2df0      	MOV  R31,R0
00df56 9feb      	MUL  R30,R27
00df57 0df0      	ADD  R31,R0
00df58 9fea      	MUL  R30,R26
00df59 2de0      	MOV  R30,R0
00df5a 0df1      	ADD  R31,R1
00df5b 9508      	RET
                 
                 __MULD12U:
00df5c 9f7a      	MUL  R23,R26
00df5d 2d70      	MOV  R23,R0
00df5e 9f6b      	MUL  R22,R27
00df5f 0d70      	ADD  R23,R0
00df60 9ff8      	MUL  R31,R24
00df61 0d70      	ADD  R23,R0
00df62 9fe9      	MUL  R30,R25
00df63 0d70      	ADD  R23,R0
00df64 9f6a      	MUL  R22,R26
00df65 2d60      	MOV  R22,R0
00df66 0d71      	ADD  R23,R1
00df67 9ffb      	MUL  R31,R27
00df68 0d60      	ADD  R22,R0
00df69 1d71      	ADC  R23,R1
00df6a 9fe8      	MUL  R30,R24
00df6b 0d60      	ADD  R22,R0
00df6c 1d71      	ADC  R23,R1
00df6d 2788      	CLR  R24
00df6e 9ffa      	MUL  R31,R26
00df6f 2df0      	MOV  R31,R0
00df70 0d61      	ADD  R22,R1
00df71 1f78      	ADC  R23,R24
00df72 9feb      	MUL  R30,R27
00df73 0df0      	ADD  R31,R0
00df74 1d61      	ADC  R22,R1
00df75 1f78      	ADC  R23,R24
00df76 9fea      	MUL  R30,R26
00df77 2de0      	MOV  R30,R0
00df78 0df1      	ADD  R31,R1
00df79 1f68      	ADC  R22,R24
00df7a 1f78      	ADC  R23,R24
00df7b 9508      	RET
                 
                 __MULB1W2U:
00df7c 2f6e      	MOV  R22,R30
00df7d 9f6a      	MUL  R22,R26
00df7e 01f0      	MOVW R30,R0
00df7f 9f6b      	MUL  R22,R27
00df80 0df0      	ADD  R31,R0
00df81 9508      	RET
                 
                 __MULW12:
00df82 d086      	RCALL __CHKSIGNW
00df83 dfd0      	RCALL __MULW12U
00df84 f40e      	BRTC __MULW121
00df85 df4e      	RCALL __ANEGW1
                 __MULW121:
00df86 9508      	RET
                 
                 __DIVB21U:
00df87 2400      	CLR  R0
00df88 e098      	LDI  R25,8
                 __DIVB21U1:
00df89 0faa      	LSL  R26
00df8a 1c00      	ROL  R0
00df8b 1a0e      	SUB  R0,R30
00df8c f410      	BRCC __DIVB21U2
00df8d 0e0e      	ADD  R0,R30
00df8e c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00df8f 60a1      	SBR  R26,1
                 __DIVB21U3:
00df90 959a      	DEC  R25
00df91 f7b9      	BRNE __DIVB21U1
00df92 2fea      	MOV  R30,R26
00df93 2da0      	MOV  R26,R0
00df94 9508      	RET
                 
                 __DIVB21:
00df95 d067      	RCALL __CHKSIGNB
00df96 dff0      	RCALL __DIVB21U
00df97 f40e      	BRTC __DIVB211
00df98 95e1      	NEG  R30
                 __DIVB211:
00df99 9508      	RET
                 
                 __DIVW21U:
00df9a 2400      	CLR  R0
00df9b 2411      	CLR  R1
00df9c e190      	LDI  R25,16
                 __DIVW21U1:
00df9d 0faa      	LSL  R26
00df9e 1fbb      	ROL  R27
00df9f 1c00      	ROL  R0
00dfa0 1c11      	ROL  R1
00dfa1 1a0e      	SUB  R0,R30
00dfa2 0a1f      	SBC  R1,R31
00dfa3 f418      	BRCC __DIVW21U2
00dfa4 0e0e      	ADD  R0,R30
00dfa5 1e1f      	ADC  R1,R31
00dfa6 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00dfa7 60a1      	SBR  R26,1
                 __DIVW21U3:
00dfa8 959a      	DEC  R25
00dfa9 f799      	BRNE __DIVW21U1
00dfaa 01fd      	MOVW R30,R26
00dfab 01d0      	MOVW R26,R0
00dfac 9508      	RET
                 
                 __DIVW21:
00dfad d05b      	RCALL __CHKSIGNW
00dfae dfeb      	RCALL __DIVW21U
00dfaf f40e      	BRTC __DIVW211
00dfb0 df23      	RCALL __ANEGW1
                 __DIVW211:
00dfb1 9508      	RET
                 
                 __DIVD21U:
00dfb2 933f      	PUSH R19
00dfb3 934f      	PUSH R20
00dfb4 935f      	PUSH R21
00dfb5 2400      	CLR  R0
00dfb6 2411      	CLR  R1
00dfb7 2744      	CLR  R20
00dfb8 2755      	CLR  R21
00dfb9 e230      	LDI  R19,32
                 __DIVD21U1:
00dfba 0faa      	LSL  R26
00dfbb 1fbb      	ROL  R27
00dfbc 1f88      	ROL  R24
00dfbd 1f99      	ROL  R25
00dfbe 1c00      	ROL  R0
00dfbf 1c11      	ROL  R1
00dfc0 1f44      	ROL  R20
00dfc1 1f55      	ROL  R21
00dfc2 1a0e      	SUB  R0,R30
00dfc3 0a1f      	SBC  R1,R31
00dfc4 0b46      	SBC  R20,R22
00dfc5 0b57      	SBC  R21,R23
00dfc6 f428      	BRCC __DIVD21U2
00dfc7 0e0e      	ADD  R0,R30
00dfc8 1e1f      	ADC  R1,R31
00dfc9 1f46      	ADC  R20,R22
00dfca 1f57      	ADC  R21,R23
00dfcb c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00dfcc 60a1      	SBR  R26,1
                 __DIVD21U3:
00dfcd 953a      	DEC  R19
00dfce f759      	BRNE __DIVD21U1
00dfcf 01fd      	MOVW R30,R26
00dfd0 01bc      	MOVW R22,R24
00dfd1 01d0      	MOVW R26,R0
00dfd2 01ca      	MOVW R24,R20
00dfd3 915f      	POP  R21
00dfd4 914f      	POP  R20
00dfd5 913f      	POP  R19
00dfd6 9508      	RET
                 
                 __DIVD21:
00dfd7 d03f      	RCALL __CHKSIGND
00dfd8 dfd9      	RCALL __DIVD21U
00dfd9 f40e      	BRTC __DIVD211
00dfda defd      	RCALL __ANEGD1
                 __DIVD211:
00dfdb 9508      	RET
                 
                 __MODB21:
00dfdc 94e8      	CLT
00dfdd ffa7      	SBRS R26,7
00dfde c002      	RJMP __MODB211
00dfdf 95a1      	NEG  R26
00dfe0 9468      	SET
                 __MODB211:
00dfe1 fde7      	SBRC R30,7
00dfe2 95e1      	NEG  R30
00dfe3 dfa3      	RCALL __DIVB21U
00dfe4 2fea      	MOV  R30,R26
00dfe5 f40e      	BRTC __MODB212
00dfe6 95e1      	NEG  R30
                 __MODB212:
00dfe7 9508      	RET
                 
                 __MODW21U:
00dfe8 dfb1      	RCALL __DIVW21U
00dfe9 01fd      	MOVW R30,R26
00dfea 9508      	RET
                 
                 __MODW21:
00dfeb 94e8      	CLT
00dfec ffb7      	SBRS R27,7
00dfed c004      	RJMP __MODW211
00dfee 95a0      	COM  R26
00dfef 95b0      	COM  R27
00dff0 9611      	ADIW R26,1
00dff1 9468      	SET
                 __MODW211:
00dff2 fdf7      	SBRC R31,7
00dff3 dee0      	RCALL __ANEGW1
00dff4 dfa5      	RCALL __DIVW21U
00dff5 01fd      	MOVW R30,R26
00dff6 f40e      	BRTC __MODW212
00dff7 dedc      	RCALL __ANEGW1
                 __MODW212:
00dff8 9508      	RET
                 
                 __MODD21U:
00dff9 dfb8      	RCALL __DIVD21U
00dffa 01fd      	MOVW R30,R26
00dffb 01bc      	MOVW R22,R24
00dffc 9508      	RET
                 
                 __CHKSIGNB:
00dffd 94e8      	CLT
00dffe ffe7      	SBRS R30,7
00dfff c002      	RJMP __CHKSB1
00e000 95e1      	NEG  R30
00e001 9468      	SET
                 __CHKSB1:
00e002 ffa7      	SBRS R26,7
00e003 c004      	RJMP __CHKSB2
00e004 95a1      	NEG  R26
00e005 f800      	BLD  R0,0
00e006 9403      	INC  R0
00e007 fa00      	BST  R0,0
                 __CHKSB2:
00e008 9508      	RET
                 
                 __CHKSIGNW:
00e009 94e8      	CLT
00e00a fff7      	SBRS R31,7
00e00b c002      	RJMP __CHKSW1
00e00c dec7      	RCALL __ANEGW1
00e00d 9468      	SET
                 __CHKSW1:
00e00e ffb7      	SBRS R27,7
00e00f c006      	RJMP __CHKSW2
00e010 95a0      	COM  R26
00e011 95b0      	COM  R27
00e012 9611      	ADIW R26,1
00e013 f800      	BLD  R0,0
00e014 9403      	INC  R0
00e015 fa00      	BST  R0,0
                 __CHKSW2:
00e016 9508      	RET
                 
                 __CHKSIGND:
00e017 94e8      	CLT
00e018 ff77      	SBRS R23,7
00e019 c002      	RJMP __CHKSD1
00e01a debd      	RCALL __ANEGD1
00e01b 9468      	SET
                 __CHKSD1:
00e01c ff97      	SBRS R25,7
00e01d c00b      	RJMP __CHKSD2
00e01e 2400      	CLR  R0
00e01f 95a0      	COM  R26
00e020 95b0      	COM  R27
00e021 9580      	COM  R24
00e022 9590      	COM  R25
00e023 9611      	ADIW R26,1
00e024 1d80      	ADC  R24,R0
00e025 1d90      	ADC  R25,R0
00e026 f800      	BLD  R0,0
00e027 9403      	INC  R0
00e028 fa00      	BST  R0,0
                 __CHKSD2:
00e029 9508      	RET
                 
                 __GETW1P:
00e02a 91ed      	LD   R30,X+
00e02b 91fc      	LD   R31,X
00e02c 9711      	SBIW R26,1
00e02d 9508      	RET
                 
                 __GETD1P:
00e02e 91ed      	LD   R30,X+
00e02f 91fd      	LD   R31,X+
00e030 916d      	LD   R22,X+
00e031 917c      	LD   R23,X
00e032 9713      	SBIW R26,3
00e033 9508      	RET
                 
                 __GETD1P_INC:
00e034 91ed      	LD   R30,X+
00e035 91fd      	LD   R31,X+
00e036 916d      	LD   R22,X+
00e037 917d      	LD   R23,X+
00e038 9508      	RET
                 
                 __PUTDP1:
00e039 93ed      	ST   X+,R30
00e03a 93fd      	ST   X+,R31
00e03b 936d      	ST   X+,R22
00e03c 937c      	ST   X,R23
00e03d 9508      	RET
                 
                 __PUTDP1_DEC:
00e03e 937e      	ST   -X,R23
00e03f 936e      	ST   -X,R22
00e040 93fe      	ST   -X,R31
00e041 93ee      	ST   -X,R30
00e042 9508      	RET
                 
                 __GETD1PF:
00e043 bf6b      	OUT  RAMPZ,R22
00e044 9007      	ELPM R0,Z+
00e045 9017      	ELPM R1,Z+
00e046 9167      	ELPM R22,Z+
00e047 9176      	ELPM R23,Z
00e048 01f0      	MOVW R30,R0
00e049 9508      	RET
                 
                 __GETD1S0:
00e04a 81e8      	LD   R30,Y
00e04b 81f9      	LDD  R31,Y+1
00e04c 816a      	LDD  R22,Y+2
00e04d 817b      	LDD  R23,Y+3
00e04e 9508      	RET
                 
                 __GETD2S0:
00e04f 81a8      	LD   R26,Y
00e050 81b9      	LDD  R27,Y+1
00e051 818a      	LDD  R24,Y+2
00e052 819b      	LDD  R25,Y+3
00e053 9508      	RET
                 
                 __PUTD1S0:
00e054 83e8      	ST   Y,R30
00e055 83f9      	STD  Y+1,R31
00e056 836a      	STD  Y+2,R22
00e057 837b      	STD  Y+3,R23
00e058 9508      	RET
                 
                 __PUTDZ20:
00e059 83a0      	ST   Z,R26
00e05a 83b1      	STD  Z+1,R27
00e05b 8382      	STD  Z+2,R24
00e05c 8393      	STD  Z+3,R25
00e05d 9508      	RET
                 
                 __PUTPARD1:
00e05e 937a      	ST   -Y,R23
00e05f 936a      	ST   -Y,R22
00e060 93fa      	ST   -Y,R31
00e061 93ea      	ST   -Y,R30
00e062 9508      	RET
                 
                 __PUTPARD2:
00e063 939a      	ST   -Y,R25
00e064 938a      	ST   -Y,R24
00e065 93ba      	ST   -Y,R27
00e066 93aa      	ST   -Y,R26
00e067 9508      	RET
                 
                 __PUTPARL:
00e068 27bb      	CLR  R27
                 __PUTPAR:
00e069 0fea      	ADD  R30,R26
00e06a 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00e06b 9002      	LD   R0,-Z
00e06c 920a      	ST   -Y,R0
00e06d 9711      	SBIW R26,1
00e06e f7e1      	BRNE __PUTPAR0
00e06f 9508      	RET
                 
                 __SWAPD12:
00e070 2e18      	MOV  R1,R24
00e071 2f86      	MOV  R24,R22
00e072 2d61      	MOV  R22,R1
00e073 2e19      	MOV  R1,R25
00e074 2f97      	MOV  R25,R23
00e075 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00e076 2e1b      	MOV  R1,R27
00e077 2fbf      	MOV  R27,R31
00e078 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00e079 2e1a      	MOV  R1,R26
00e07a 2fae      	MOV  R26,R30
00e07b 2de1      	MOV  R30,R1
00e07c 9508      	RET
                 
                 __EEPROMRDD:
00e07d 9612      	ADIW R26,2
00e07e d002      	RCALL __EEPROMRDW
00e07f 01bf      	MOVW R22,R30
00e080 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00e081 9611      	ADIW R26,1
00e082 d002      	RCALL __EEPROMRDB
00e083 2ffe      	MOV  R31,R30
00e084 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00e085 99f9      	SBIC EECR,EEWE
00e086 cffe      	RJMP __EEPROMRDB
00e087 93ff      	PUSH R31
00e088 b7ff      	IN   R31,SREG
00e089 94f8      	CLI
00e08a bda1      	OUT  EEARL,R26
00e08b bdb2      	OUT  EEARH,R27
00e08c 9af8      	SBI  EECR,EERE
00e08d b5e0      	IN   R30,EEDR
00e08e bfff      	OUT  SREG,R31
00e08f 91ff      	POP  R31
00e090 9508      	RET
                 
                 __EEPROMWRD:
00e091 d007      	RCALL __EEPROMWRW
00e092 9612      	ADIW R26,2
00e093 010f      	MOVW R0,R30
00e094 01fb      	MOVW R30,R22
00e095 d003      	RCALL __EEPROMWRW
00e096 01f0      	MOVW R30,R0
00e097 9712      	SBIW R26,2
00e098 9508      	RET
                 
                 __EEPROMWRW:
00e099 d007      	RCALL __EEPROMWRB
00e09a 9611      	ADIW R26,1
00e09b 93ef      	PUSH R30
00e09c 2fef      	MOV  R30,R31
00e09d d003      	RCALL __EEPROMWRB
00e09e 91ef      	POP  R30
00e09f 9711      	SBIW R26,1
00e0a0 9508      	RET
                 
                 __EEPROMWRB:
00e0a1 9bf9      	SBIS EECR,EEWE
00e0a2 c002      	RJMP __EEPROMWRB1
00e0a3 95a8      	WDR
00e0a4 cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00e0a5 b79f      	IN   R25,SREG
00e0a6 94f8      	CLI
00e0a7 bda1      	OUT  EEARL,R26
00e0a8 bdb2      	OUT  EEARH,R27
00e0a9 9af8      	SBI  EECR,EERE
00e0aa b580      	IN   R24,EEDR
00e0ab 17e8      	CP   R30,R24
00e0ac f019      	BREQ __EEPROMWRB0
00e0ad bde0      	OUT  EEDR,R30
00e0ae 9afa      	SBI  EECR,EEMWE
00e0af 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00e0b0 bf9f      	OUT  SREG,R25
00e0b1 9508      	RET
                 
                 __CPD10:
00e0b2 9730      	SBIW R30,0
00e0b3 4060      	SBCI R22,0
00e0b4 4070      	SBCI R23,0
00e0b5 9508      	RET
                 
                 __CPW02:
00e0b6 2400      	CLR  R0
00e0b7 160a      	CP   R0,R26
00e0b8 060b      	CPC  R0,R27
00e0b9 9508      	RET
                 
                 __CPD20:
00e0ba 9710      	SBIW R26,0
00e0bb 4080      	SBCI R24,0
00e0bc 4090      	SBCI R25,0
00e0bd 9508      	RET
                 
                 __CPD02:
00e0be 2400      	CLR  R0
00e0bf 160a      	CP   R0,R26
00e0c0 060b      	CPC  R0,R27
00e0c1 0608      	CPC  R0,R24
00e0c2 0609      	CPC  R0,R25
00e0c3 9508      	RET
                 
                 __CPD12:
00e0c4 17ea      	CP   R30,R26
00e0c5 07fb      	CPC  R31,R27
00e0c6 0768      	CPC  R22,R24
00e0c7 0779      	CPC  R23,R25
00e0c8 9508      	RET
                 
                 __CPD21:
00e0c9 17ae      	CP   R26,R30
00e0ca 07bf      	CPC  R27,R31
00e0cb 0786      	CPC  R24,R22
00e0cc 0797      	CPC  R25,R23
00e0cd 9508      	RET
                 
                 __SAVELOCR6:
00e0ce 935a      	ST   -Y,R21
                 __SAVELOCR5:
00e0cf 934a      	ST   -Y,R20
                 __SAVELOCR4:
00e0d0 933a      	ST   -Y,R19
                 __SAVELOCR3:
00e0d1 932a      	ST   -Y,R18
                 __SAVELOCR2:
00e0d2 931a      	ST   -Y,R17
00e0d3 930a      	ST   -Y,R16
00e0d4 9508      	RET
                 
                 __LOADLOCR6:
00e0d5 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00e0d6 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00e0d7 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00e0d8 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00e0d9 8119      	LDD  R17,Y+1
00e0da 8108      	LD   R16,Y
00e0db 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00e0dc 0fac      	ADD  R26,R28
00e0dd 1fbd      	ADC  R27,R29
00e0de bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00e0df 9007      	ELPM R0,Z+
00e0e0 920d      	ST   X+,R0
00e0e1 958a      	DEC  R24
00e0e2 f7e1      	BRNE __INITLOC0
00e0e3 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 545 r1 :  92 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  14 
r16: 841 r17: 965 r18: 523 r19: 411 r20: 308 r21: 245 r22:1435 r23:1280 
r24: 467 r25: 343 r26:4546 r27:1671 r28: 588 r29:  23 r30:8110 r31:3374 
x  : 644 y  :4028 z  : 682 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 247 add   : 256 
adiw  : 808 and   :  15 andi  : 198 asr   :   6 bclr  :   0 bld   :   5 
brbc  :   0 brbs  :   0 brcc  :  20 brcs  :   5 break :   0 breq  : 637 
brge  : 191 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 130 
brlt  :  68 brmi  :  32 brne  : 867 brpl  : 157 brsh  : 115 brtc  :  10 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   5 call  :6961 
cbi   :  41 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 206 cls   :   0 clt   :  10 clv   :   0 clz   :   2 com   :  32 
cp    : 111 cpc   : 563 cpi   :1184 cpse  :   0 dec   :  23 des   :   0 
eicall:  11 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 109 inc   :   8 jmp   : 391 
ld    : 728 ldd   :2859 ldi   :7202 lds   : 681 lpm   :   0 lsl   :  40 
lsr   :  21 mov   : 386 movw  :1275 mul   : 114 muls  :   4 mulsu :   0 
neg   :  11 nop   :   1 or    :  66 ori   :  50 out   : 113 pop   : 416 
push  : 416 rcall : 305 ret   :1052 reti  :   5 rjmp  :1753 rol   :  60 
ror   :  33 sbc   :  39 sbci  : 740 sbi   :  32 sbic  :   5 sbis  :   9 
sbiw  : 272 sbr   :   5 sbrc  :  17 sbrs  :  61 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  17 ses   :   0 set   :   9 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1202 std   : 542 sts   : 506 
sub   :  32 subi  : 798 swap  :   7 tst   : 166 wdr   :  13 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x01c1c8  88186  26958 115144  262144  43.9%
[.dseg] 0x000200 0x001ab7      0   3527   3527    8703  40.5%
[.eseg] 0x000000 0x00065d      0   1629   1629    4096  39.8%

Assembly complete, 0 errors, 41 warnings
